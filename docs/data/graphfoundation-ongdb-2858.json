{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2858",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2858/DatabaseImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2858/DatabaseImporter.java\nindex c3e4170b679..27ca24d684d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2858/DatabaseImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2858/DatabaseImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.File;\n@@ -34,38 +35,37 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.database_path;\n \n class DatabaseImporter implements Importer\n {\n-    private final File from;\n-    private final Config config;\n+  private final File from;\n+  private final Config config;\n \n-    DatabaseImporter( Args args, Config config, OutsideWorld outsideWorld ) throws IncorrectUsage\n-    {\n-        this.config = config;\n+  DatabaseImporter(Args args, Config config, OutsideWorld outsideWorld) throws IncorrectUsage\n+  {\n+    this.config = config;\n \n-        try\n-        {\n-            this.from = args.interpretOption( \"from\", Converters.mandatory(), Converters.toFile(),\n-                    Validators.CONTAINS_EXISTING_DATABASE );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw new IncorrectUsage( e.getMessage() );\n-        }\n-    }\n-\n-    @Override\n-    public void doImport() throws IOException\n+    try\n     {\n-        copyDatabase( from, config );\n-        removeMessagesLog( config );\n-    }\n-\n-    private void copyDatabase( File from, Config config ) throws IOException\n+      this.from = args.interpretOption(\"from\", Converters.mandatory(), Converters.toFile(),\n+          Validators.CONTAINS_EXISTING_DATABASE);\n+    } catch (IllegalArgumentException e)\n     {\n-        FileUtils.copyRecursively( from, config.get( database_path ) );\n+      throw new IncorrectUsage(e.getMessage());\n     }\n+  }\n \n-    private void removeMessagesLog( Config config )\n-    {\n-        FileUtils.deleteFile( new File( config.get( database_path ), \"messages.log\" ) );\n-    }\n+  @Override\n+  public void doImport() throws IOException\n+  {\n+    copyDatabase(from, config);\n+    removeMessagesLog(config);\n+  }\n+\n+  private void copyDatabase(File from, Config config) throws IOException\n+  {\n+    FileUtils.copyRecursively(from, config.get(database_path));\n+  }\n+\n+  private void removeMessagesLog(Config config)\n+  {\n+    FileUtils.deleteFile(new File(config.get(database_path), \"messages.log\"));\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2858/DatabaseImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2858/DatabaseImporter.java\nindex c3e4170b679..1a10f735335 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2858/DatabaseImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2858/DatabaseImporter.java\n@@ -43,9 +43,8 @@ class DatabaseImporter implements Importer\n \n         try\n         {\n-            this.from = args.interpretOption( \"from\", Converters.mandatory(), Converters.toFile(),\n-                    Validators.CONTAINS_EXISTING_DATABASE );\n-        }\n+            this.from = args.interpretOption( \"from\", Converters.mandatory(), Converters.toFile(), Validators.CONTAINS_EXISTING_DATABASE );\n+    }\n         catch ( IllegalArgumentException e )\n         {\n             throw new IncorrectUsage( e.getMessage() );\n@@ -68,4 +67,4 @@ class DatabaseImporter implements Importer\n     {\n         FileUtils.deleteFile( new File( config.get( database_path ), \"messages.log\" ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
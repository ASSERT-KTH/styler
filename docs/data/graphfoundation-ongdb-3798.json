{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3798",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3798/NodeValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3798/NodeValueIterator.java\nindex 2b82db9fba3..ce5bfb36e00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3798/NodeValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3798/NodeValueIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n@@ -31,50 +32,50 @@ import org.neo4j.values.storable.Value;\n  * A {@link IndexProgressor} + {@link IndexProgressor.NodeValueClient} combo presented as a {@link PrimitiveLongIterator}.\n  */\n public class NodeValueIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n-        implements IndexProgressor.NodeValueClient, PrimitiveLongResourceIterator\n+    implements IndexProgressor.NodeValueClient, PrimitiveLongResourceIterator\n {\n-    private boolean closed;\n-    private IndexProgressor progressor;\n+  private boolean closed;\n+  private IndexProgressor progressor;\n \n-    @Override\n-    protected boolean fetchNext()\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    // progressor.next() will progress underlying SeekCursor\n+    // and feed result into this with node( long reference, Value... values )\n+    if (closed || !progressor.next())\n     {\n-        // progressor.next() will progress underlying SeekCursor\n-        // and feed result into this with node( long reference, Value... values )\n-        if ( closed || !progressor.next() )\n-        {\n-            close();\n-            return false;\n-        }\n-        return true;\n+      close();\n+      return false;\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public void initialize( SchemaIndexDescriptor descriptor, IndexProgressor progressor, IndexQuery[] query )\n-    {\n-        this.progressor = progressor;\n-    }\n+  @Override\n+  public void initialize(SchemaIndexDescriptor descriptor, IndexProgressor progressor, IndexQuery[] query)\n+  {\n+    this.progressor = progressor;\n+  }\n \n-    @Override\n-    public boolean acceptNode( long reference, Value... values )\n-    {\n-        return next( reference );\n-    }\n+  @Override\n+  public boolean acceptNode(long reference, Value... values)\n+  {\n+    return next(reference);\n+  }\n \n-    @Override\n-    public boolean needsValues()\n-    {\n-        return false;\n-    }\n+  @Override\n+  public boolean needsValues()\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    if (!closed)\n     {\n-        if ( !closed )\n-        {\n-            closed = true;\n-            progressor.close();\n-            progressor = null;\n-        }\n+      closed = true;\n+      progressor.close();\n+      progressor = null;\n     }\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3798/NodeValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3798/NodeValueIterator.java\nindex 2b82db9fba3..0c34d781e41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3798/NodeValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3798/NodeValueIterator.java\n@@ -30,8 +30,7 @@ import org.neo4j.values.storable.Value;\n /**\n  * A {@link IndexProgressor} + {@link IndexProgressor.NodeValueClient} combo presented as a {@link PrimitiveLongIterator}.\n  */\n-public class NodeValueIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n-        implements IndexProgressor.NodeValueClient, PrimitiveLongResourceIterator\n+public class NodeValueIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements IndexProgressor.NodeValueClient, PrimitiveLongResourceIterator\n {\n     private boolean closed;\n     private IndexProgressor progressor;\n@@ -77,4 +76,4 @@ public class NodeValueIterator extends PrimitiveLongCollections.PrimitiveLongBas\n             progressor = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
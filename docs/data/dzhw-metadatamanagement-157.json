{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "157",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@Slf4j\npublic class DataAcquisitionProjectResource extends\n    GenericDomainObjectResourceController<DataAcquisitionProject, DataAcquisitionProjectRepository> {\n\n  private DataAcquisitionProjectService dataAcquisitionProjectService;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/157/DataAcquisitionProjectResource.java\nindex 0e39091b39c..55b6e513071 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/157/DataAcquisitionProjectResource.java\n@@ -36,7 +36,7 @@ import lombok.extern.slf4j.Slf4j;\n @RepositoryRestController\n @Slf4j\n public class DataAcquisitionProjectResource extends\n-    GenericDomainObjectResourceController<DataAcquisitionProject, DataAcquisitionProjectRepository> {\n+    GenericDomainObjectResourceController<DataAcquisitionProject,DataAcquisitionProjectRepository> {\n \n   private DataAcquisitionProjectService dataAcquisitionProjectService;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/157/DataAcquisitionProjectResource.java\nindex 0e39091b39c..8fa325ed261 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/157/DataAcquisitionProjectResource.java\n@@ -29,9 +29,8 @@ import lombok.extern.slf4j.Slf4j;\n \n /**\n  * If a data acquisition project has been released before, it can not be deleted by anyone.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n @RepositoryRestController\n @Slf4j\n@@ -45,20 +44,19 @@ public class DataAcquisitionProjectResource extends\n \n   @Autowired\n   public DataAcquisitionProjectResource(DataAcquisitionProjectRepository projectRepository,\n-      DataAcquisitionProjectService dataAcquisitionProjectService) {\n+                                        DataAcquisitionProjectService dataAcquisitionProjectService) {\n     super(projectRepository);\n     this.dataAcquisitionProjectService = dataAcquisitionProjectService;\n   }\n \n   /**\n    * Override default put to validate authorization and append configuration data.\n-   *\n    */\n   @RequestMapping(method = RequestMethod.PUT, value = \"/data-acquisition-projects/{id:.+}\")\n   @Secured(value = {AuthoritiesConstants.DATA_PROVIDER, AuthoritiesConstants.PUBLISHER,\n       AuthoritiesConstants.ADMIN})\n   public ResponseEntity<?> saveProject(@PathVariable String id,\n-      @RequestBody @Valid DataAcquisitionProject newDataProject) {\n+                                       @RequestBody @Valid DataAcquisitionProject newDataProject) {\n     DataAcquisitionProject oldDataProject = super.repository.findById(id).orElse(null);\n     DataAcquisitionProject saveDataProject = oldDataProject;\n     boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n@@ -111,7 +109,7 @@ public class DataAcquisitionProjectResource extends\n \n   /**\n    * Override default get by id since it does not set cache headers correctly.\n-   * \n+   *\n    * @param id a {@link DataAcquisitionProject} id\n    * @return the {@link DataAcquisitionProject} or not found\n    */\n@@ -126,10 +124,10 @@ public class DataAcquisitionProjectResource extends\n \n   /**\n    * Overwriting the delete data acquisition project api method from mongo db.\n-   * \n+   *\n    * @param id The id of the data acquisition project.\n    * @return Return a 200 (ok) if successful deleted or a Bad Request, if it has been released\n-   *         before and deleting is forbidden.\n+   * before and deleting is forbidden.\n    */\n   @RequestMapping(value = \"/data-acquisition-projects/{id}\", method = RequestMethod.DELETE)\n   @Secured(value = {AuthoritiesConstants.PUBLISHER, AuthoritiesConstants.ADMIN})\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'DataAcquisitionProjectService' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/157/DataAcquisitionProjectResource.java\nindex 0e39091b39c..5597b6e708c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/157/DataAcquisitionProjectResource.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.projectmanagement.rest;\n \n import java.util.List;\n import java.util.Optional;\n-\n import javax.validation.Valid;\n-\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.rest.webmvc.RepositoryRestController;\n@@ -17,7 +15,6 @@ import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RequestParam;\n-\n import eu.dzhw.fdz.metadatamanagement.common.rest.GenericDomainObjectResourceController;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.DataAcquisitionProject;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.repository.DataAcquisitionProjectRepository;\n@@ -33,19 +30,21 @@ import lombok.extern.slf4j.Slf4j;\n  * @author Daniel Katzberg\n  *\n  */\n+\n+\n @RepositoryRestController\n @Slf4j\n-public class DataAcquisitionProjectResource extends\n-    GenericDomainObjectResourceController<DataAcquisitionProject, DataAcquisitionProjectRepository> {\n-\n+public class DataAcquisitionProjectResource extends GenericDomainObjectResourceController<DataAcquisitionProject,\n+                                            DataAcquisitionProjectRepository> {\n   private DataAcquisitionProjectService dataAcquisitionProjectService;\n \n   @Autowired\n   private UserService userService;\n \n+\n   @Autowired\n   public DataAcquisitionProjectResource(DataAcquisitionProjectRepository projectRepository,\n-      DataAcquisitionProjectService dataAcquisitionProjectService) {\n+  DataAcquisitionProjectService dataAcquisitionProjectService) {\n     super(projectRepository);\n     this.dataAcquisitionProjectService = dataAcquisitionProjectService;\n   }\n@@ -54,20 +53,21 @@ public class DataAcquisitionProjectResource extends\n    * Override default put to validate authorization and append configuration data.\n    *\n    */\n+\n+\n   @RequestMapping(method = RequestMethod.PUT, value = \"/data-acquisition-projects/{id:.+}\")\n-  @Secured(value = {AuthoritiesConstants.DATA_PROVIDER, AuthoritiesConstants.PUBLISHER,\n-      AuthoritiesConstants.ADMIN})\n+  @Secured(value = {AuthoritiesConstants.DATA_PROVIDER, AuthoritiesConstants.PUBLISHER, AuthoritiesConstants.ADMIN})\n   public ResponseEntity<?> saveProject(@PathVariable String id,\n-      @RequestBody @Valid DataAcquisitionProject newDataProject) {\n-    DataAcquisitionProject oldDataProject = super.repository.findById(id).orElse(null);\n+    @RequestBody @Valid DataAcquisitionProject newDataProject) {\n+    DataAcquisitionProject oldDataProject = super.repository\n+      .findById(id)\n+      .orElse(null);\n     DataAcquisitionProject saveDataProject = oldDataProject;\n-    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n-        || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n+    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER) || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n \n     // ensure that project exists if not sent by publisher (only publishers can create projects)\n     if (oldDataProject == null && !SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)) {\n-      return ResponseEntity.status(HttpStatus.UNAUTHORIZED)\n-          .body(\"not authorized to create new project\");\n+      return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(\"not authorized to create new project\");\n     }\n     HttpStatus httpStatus = HttpStatus.NO_CONTENT;\n     if (oldDataProject == null) {\n@@ -79,33 +79,30 @@ public class DataAcquisitionProjectResource extends\n     } else {\n       // check only authorized users remove or add publishers from project\n       if (!userHasAdvancedPrivileges && !oldDataProject.getConfiguration().getPublishers()\n-          .equals(newDataProject.getConfiguration().getPublishers())) {\n-        return ResponseEntity.status(HttpStatus.UNAUTHORIZED)\n-            .body(\"not authorized to remove publisher\");\n+                                                                          .equals(newDataProject.getConfiguration().getPublishers())) {\n+        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(\"not authorized to remove publisher\");\n       }\n \n       // if publisher list was not empty, check if it's still not empty\n-      if (!oldDataProject.getConfiguration().getPublishers().isEmpty()\n-          && newDataProject.getConfiguration().getPublishers().isEmpty()) {\n+      if (!oldDataProject.getConfiguration().getPublishers()\n+                                            .isEmpty() && newDataProject.getConfiguration().getPublishers()\n+                                                                                           .isEmpty()) {\n         return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"cannot clear publishers\");\n       }\n \n       // if data provider list was not empty and a data provider sent the request,\n       // check if if's still not empty\n-      if (!oldDataProject.getConfiguration().getDataProviders().isEmpty()\n-          && newDataProject.getConfiguration().getDataProviders().isEmpty()\n-          && !userHasAdvancedPrivileges) {\n-        return ResponseEntity.status(HttpStatus.UNAUTHORIZED)\n-            .body(\"not authorized to clear data providers\");\n+      if (!oldDataProject.getConfiguration().getDataProviders()\n+                                            .isEmpty() && newDataProject.getConfiguration().getDataProviders()\n+                                                                                           .isEmpty() && !userHasAdvancedPrivileges) {\n+        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(\"not authorized to clear data providers\");\n       }\n       BeanUtils.copyProperties(newDataProject, saveDataProject, \"version\");\n       // saveDataProject.setConfiguration(newDataProject.getConfiguration());\n       // saveDataProject.setRelease(newDataProject.getRelease());\n       // saveDataProject.setHasBeenReleasedBefore(newDataProject.getHasBeenReleasedBefore());\n     }\n-\n     dataAcquisitionProjectService.putDataAquisitionProject(saveDataProject);\n-\n     return ResponseEntity.status(httpStatus).build();\n   }\n \n@@ -115,13 +112,12 @@ public class DataAcquisitionProjectResource extends\n    * @param id a {@link DataAcquisitionProject} id\n    * @return the {@link DataAcquisitionProject} or not found\n    */\n+\n+\n   @RequestMapping(method = RequestMethod.GET, value = \"/data-acquisition-projects/{id:.+}\")\n   public ResponseEntity<DataAcquisitionProject> findProject(@PathVariable String id) {\n-    Optional<DataAcquisitionProject> project =\n-        dataAcquisitionProjectService.findDataAcquisitionProjectById(id);\n-\n-    return project.map(this::wrapInResponseEntity)\n-        .orElseGet(() -> ResponseEntity.notFound().build());\n+    Optional<DataAcquisitionProject> project = dataAcquisitionProjectService.findDataAcquisitionProjectById(id);\n+    return project.map(this::wrapInResponseEntity).orElseGet(() -> ResponseEntity.notFound().build());\n   }\n \n   /**\n@@ -131,12 +127,16 @@ public class DataAcquisitionProjectResource extends\n    * @return Return a 200 (ok) if successful deleted or a Bad Request, if it has been released\n    *         before and deleting is forbidden.\n    */\n+\n+\n   @RequestMapping(value = \"/data-acquisition-projects/{id}\", method = RequestMethod.DELETE)\n   @Secured(value = {AuthoritiesConstants.PUBLISHER, AuthoritiesConstants.ADMIN})\n   public ResponseEntity<?> deleteDataAcquisitionProject(@PathVariable String id) {\n \n     // load project\n-    DataAcquisitionProject dataAcquisitionProject = super.repository.findById(id).orElse(null);\n+    DataAcquisitionProject dataAcquisitionProject = super.repository\n+      .findById(id)\n+      .orElse(null);\n \n     // project could not be found\n     if (dataAcquisitionProject == null) {\n@@ -157,11 +157,11 @@ public class DataAcquisitionProjectResource extends\n   /**\n    * Find projects by (partial) id.\n    */\n+\n+\n   @GetMapping(\"/data-acquisition-projects/search/findByIdLikeOrderByIdAsc\")\n-  public ResponseEntity<List<DataAcquisitionProject>> findByIdLikeOrderByIdAsc(\n-      @RequestParam(value = \"id\", required = false, defaultValue = \"\") String id) {\n-    List<DataAcquisitionProject> projects =\n-        dataAcquisitionProjectService.findDataAcquisitionProjectListById(id);\n+  public ResponseEntity<List<DataAcquisitionProject>> findByIdLikeOrderByIdAsc(@RequestParam(value = \"id\", required = false, defaultValue = \"\") String id) {\n+    List<DataAcquisitionProject> projects = dataAcquisitionProjectService.findDataAcquisitionProjectListById(id);\n     return ResponseEntity.ok(projects);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/157/DataAcquisitionProjectResource.java\nindex 0e39091b39c..55b6e513071 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/157/DataAcquisitionProjectResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/157/DataAcquisitionProjectResource.java\n@@ -36,7 +36,7 @@ import lombok.extern.slf4j.Slf4j;\n @RepositoryRestController\n @Slf4j\n public class DataAcquisitionProjectResource extends\n-    GenericDomainObjectResourceController<DataAcquisitionProject, DataAcquisitionProjectRepository> {\n+    GenericDomainObjectResourceController<DataAcquisitionProject,DataAcquisitionProjectRepository> {\n \n   private DataAcquisitionProjectService dataAcquisitionProjectService;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
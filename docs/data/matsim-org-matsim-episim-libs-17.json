{
    "project_name": "matsim-org-matsim-episim-libs",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "90",
                "column": "25",
                "severity": "error",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n\t\t\t\tevent = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n\t\t\t} if (event instanceof ActivityEndEvent) {\n\t\t\t\tActivityEndEvent e = (ActivityEndEvent) event;\n\t\t\t\tevent = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/intellij/17/ReplayHandler.java\nindex 375e953d129..5a01f52760d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/intellij/17/ReplayHandler.java\n@@ -18,6 +18,7 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  * #L%\n  */\n+\n package org.matsim.episim;\n \n import com.google.inject.Inject;\n@@ -40,60 +41,65 @@ import java.util.List;\n  */\n public final class ReplayHandler {\n \n-\tprivate static final Logger log = LogManager.getLogger(ReplayHandler.class);\n+  private static final Logger log = LogManager.getLogger(ReplayHandler.class);\n \n-\tprivate final Scenario scenario;\n-\tprivate final List<Event> events = new ArrayList<>();\n+  private final Scenario scenario;\n+  private final List<Event> events = new ArrayList<>();\n \n-\t/**\n-\t * Constructor with optional scenario.\n-\t */\n-\t@Inject\n-\tpublic ReplayHandler(EpisimConfigGroup config, @Nullable Scenario scenario) {\n-\t\tthis.scenario = scenario;\n+  /**\n+   * Constructor with optional scenario.\n+   */\n+  @Inject\n+  public ReplayHandler(EpisimConfigGroup config, @Nullable Scenario scenario) {\n+    this.scenario = scenario;\n \n-\t\tEventsManager manager = EventsUtils.createEventsManager();\n-\t\tmanager.addHandler(new EventReader());\n-\t\tEventsUtils.readEvents(manager, config.getInputEventsFile());\n-\t\tmanager.finishProcessing();\n+    EventsManager manager = EventsUtils.createEventsManager();\n+    manager.addHandler(new EventReader());\n+    EventsUtils.readEvents(manager, config.getInputEventsFile());\n+    manager.finishProcessing();\n \n-\t\tlog.info(\"Read in {} events, with time range {} - {}\", events.size(), events.get(0).getTime(),\n-\t\t\t\tevents.get(events.size() - 1).getTime());\n-\t}\n+    log.info(\"Read in {} events, with time range {} - {}\", events.size(), events.get(0).getTime(),\n+        events.get(events.size() - 1).getTime());\n+  }\n \n-\t/**\n-\t * Replays event add modifies attributes based on current iteration.\n-\t */\n-\tpublic void replayEvents(final EventsManager manager, final int iteration) {\n-\t\tfor (final Event e : events) {\n-\t\t\tmanager.processEvent(e);\n-\t\t}\n-\t}\n+  /**\n+   * Replays event add modifies attributes based on current iteration.\n+   */\n+  public void replayEvents(final EventsManager manager, final int iteration) {\n+    for (final Event e : events) {\n+      manager.processEvent(e);\n+    }\n+  }\n \n-\t/**\n-\t * Helper class to read events one time.\n-\t */\n-\tprivate final class EventReader implements BasicEventHandler {\n-\t\t@Override\n-\t\tpublic void handleEvent(Event event) {\n+  /**\n+   * Helper class to read events one time.\n+   */\n+  private final class EventReader implements BasicEventHandler {\n+    @Override\n+    public void handleEvent(Event event) {\n \n-\t\t\t// Add coordinate information if not present\n-\t\t\tif (event instanceof ActivityStartEvent) {\n-\t\t\t\tActivityStartEvent e = (ActivityStartEvent) event;\n-\t\t\t\tCoord coord = e.getCoord();\n-\t\t\t\tif (coord == null && scenario != null && scenario.getNetwork().getLinks().containsKey(e.getLinkId())) {\n-\t\t\t\t\tLink link = scenario.getNetwork().getLinks().get(e.getLinkId());\n-\t\t\t\t\tcoord = link.getToNode().getCoord();\n-\t\t\t\t}\n+      // Add coordinate information if not present\n+      if (event instanceof ActivityStartEvent) {\n+        ActivityStartEvent e = (ActivityStartEvent) event;\n+        Coord coord = e.getCoord();\n+        if (coord == null && scenario != null &&\n+            scenario.getNetwork().getLinks().containsKey(e.getLinkId())) {\n+          Link link = scenario.getNetwork().getLinks().get(e.getLinkId());\n+          coord = link.getToNode().getCoord();\n+        }\n \n-\t\t\t\tevent = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n-\t\t\t} if (event instanceof ActivityEndEvent) {\n-\t\t\t\tActivityEndEvent e = (ActivityEndEvent) event;\n-\t\t\t\tevent = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n-\t\t\t}\n+        event =\n+            new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(),\n+                e.getActType().intern(), coord);\n+      }\n+      if (event instanceof ActivityEndEvent) {\n+        ActivityEndEvent e = (ActivityEndEvent) event;\n+        event = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(),\n+            e.getActType().intern());\n+      }\n \n-\t\t\tevents.add(event);\n-\t\t}\n-\t}\n+      events.add(event);\n+    }\n+  }\n \n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/naturalize/17/ReplayHandler.java\nindex 375e953d129..bc3e52cf154 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/naturalize/17/ReplayHandler.java\n@@ -87,7 +87,9 @@ public final class ReplayHandler {\n \t\t\t\t}\n \n \t\t\t\tevent = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n-\t\t\t} if (event instanceof ActivityEndEvent) {\n+\t\t\t}\n+\n+if (event instanceof ActivityEndEvent) {\n \t\t\t\tActivityEndEvent e = (ActivityEndEvent) event;\n \t\t\t\tevent = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n \t\t\t}\n@@ -96,4 +98,4 @@ public final class ReplayHandler {\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/codebuff/17/ReplayHandler.java\nindex 375e953d129..138b6b397eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/codebuff/17/ReplayHandler.java\n@@ -30,7 +30,6 @@ import org.matsim.api.core.v01.network.Link;\n import org.matsim.core.api.experimental.events.EventsManager;\n import org.matsim.core.events.EventsUtils;\n import org.matsim.core.events.handler.BasicEventHandler;\n-\n import javax.annotation.Nullable;\n import java.util.ArrayList;\n import java.util.List;\n@@ -38,62 +37,71 @@ import java.util.List;\n /**\n  * Handler that replays events from {@link EpisimConfigGroup#getInputEventsFile()} with corrected time and attributes.\n  */\n+\n+\n public final class ReplayHandler {\n \n-\tprivate static final Logger log = LogManager.getLogger(ReplayHandler.class);\n-\n-\tprivate final Scenario scenario;\n-\tprivate final List<Event> events = new ArrayList<>();\n-\n-\t/**\n-\t * Constructor with optional scenario.\n-\t */\n-\t@Inject\n-\tpublic ReplayHandler(EpisimConfigGroup config, @Nullable Scenario scenario) {\n-\t\tthis.scenario = scenario;\n-\n-\t\tEventsManager manager = EventsUtils.createEventsManager();\n-\t\tmanager.addHandler(new EventReader());\n-\t\tEventsUtils.readEvents(manager, config.getInputEventsFile());\n-\t\tmanager.finishProcessing();\n-\n-\t\tlog.info(\"Read in {} events, with time range {} - {}\", events.size(), events.get(0).getTime(),\n-\t\t\t\tevents.get(events.size() - 1).getTime());\n-\t}\n-\n-\t/**\n-\t * Replays event add modifies attributes based on current iteration.\n-\t */\n-\tpublic void replayEvents(final EventsManager manager, final int iteration) {\n-\t\tfor (final Event e : events) {\n-\t\t\tmanager.processEvent(e);\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Helper class to read events one time.\n-\t */\n-\tprivate final class EventReader implements BasicEventHandler {\n-\t\t@Override\n-\t\tpublic void handleEvent(Event event) {\n-\n-\t\t\t// Add coordinate information if not present\n-\t\t\tif (event instanceof ActivityStartEvent) {\n-\t\t\t\tActivityStartEvent e = (ActivityStartEvent) event;\n-\t\t\t\tCoord coord = e.getCoord();\n-\t\t\t\tif (coord == null && scenario != null && scenario.getNetwork().getLinks().containsKey(e.getLinkId())) {\n-\t\t\t\t\tLink link = scenario.getNetwork().getLinks().get(e.getLinkId());\n-\t\t\t\t\tcoord = link.getToNode().getCoord();\n-\t\t\t\t}\n-\n-\t\t\t\tevent = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n-\t\t\t} if (event instanceof ActivityEndEvent) {\n-\t\t\t\tActivityEndEvent e = (ActivityEndEvent) event;\n-\t\t\t\tevent = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n-\t\t\t}\n-\n-\t\t\tevents.add(event);\n-\t\t}\n-\t}\n-\n-}\n+ private static final Logger log = LogManager.getLogger(ReplayHandler.class);\n+ private final Scenario scenario;\n+ private final List<Event> events = new ArrayList<>();\n+\n+ /**\n+  * Constructor with optional scenario.\n+  */\n+\n+ @Inject\n+ public ReplayHandler(EpisimConfigGroup config, @Nullable Scenario scenario) {\n+  this.scenario = scenario;\n+\n+  EventsManager manager = EventsUtils.createEventsManager();\n+  manager.addHandler(new EventReader());\n+  EventsUtils.readEvents(manager, config.getInputEventsFile());\n+  manager.finishProcessing();\n+  log.info(\"Read in {} events, with time range {} - {}\", events.size(), events.get(0).getTime(), events.get(events.size() - 1).getTime());\n+ }\n+\n+ /**\n+  * Replays event add modifies attributes based on current iteration.\n+  */\n+\n+\n+ public void replayEvents(final EventsManager manager, final int iteration) {\n+  for (final Event e : events) {\n+   manager.processEvent(e);\n+  }\n+ }\n+\n+ /**\n+  * Helper class to read events one time.\n+  */\n+\n+ private final class EventReader implements BasicEventHandler {\n+\n+  @Override\n+  public void handleEvent(Event event) {\n+\n+   // Add coordinate information if not present\n+\n+   if (event instanceof ActivityStartEvent) {\n+    ActivityStartEvent e = (ActivityStartEvent) event;\n+    Coord coord = e.getCoord();\n+    if (coord == null && scenario != null && scenario.getNetwork().getLinks()\n+                                                                  .containsKey(e.getLinkId())) {\n+     Link link = scenario.getNetwork().getLinks()\n+                                      .get(e.getLinkId());\n+     coord = link.getToNode().getCoord();\n+    }\n+\n+    event = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n+   }\n+\n+   if (event instanceof ActivityEndEvent) {\n+    ActivityEndEvent e = (ActivityEndEvent) event;\n+    event = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n+   }\n+\n+   events.add(event);\n+  }\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/styler_random/17/ReplayHandler.java\nindex 375e953d129..be2027a44f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/errored/1/17/ReplayHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/matsim-org-matsim-episim-libs/styler_random/17/ReplayHandler.java\n@@ -87,7 +87,8 @@ public final class ReplayHandler {\n \t\t\t\t}\n \n \t\t\t\tevent = new ActivityStartEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern(), coord);\n-\t\t\t} if (event instanceof ActivityEndEvent) {\n+\t\t\t} if (event\n+\t\tinstanceof ActivityEndEvent) {\n \t\t\t\tActivityEndEvent e = (ActivityEndEvent) event;\n \t\t\t\tevent = new ActivityEndEvent(e.getTime(), e.getPersonId(), e.getLinkId(), e.getFacilityId(), e.getActType().intern());\n \t\t\t}\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "153",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/153/AStar.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/153/AStar.java\nindex edd4855da74..16e83e31310 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/153/AStar.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/153/AStar.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import java.util.HashMap;\n@@ -54,8 +55,8 @@ public class AStar implements PathFinder<WeightedPath>\n     private final EstimateEvaluator<Double> estimateEvaluator;\n     private Metadata lastMetadata;\n \n-    public AStar( EvaluationContext context, PathExpander<?> expander,\n-            CostEvaluator<Double> lengthEvaluator, EstimateEvaluator<Double> estimateEvaluator )\n+    public AStar(EvaluationContext context, PathExpander<?> expander,\n+                 CostEvaluator<Double> lengthEvaluator, EstimateEvaluator<Double> estimateEvaluator)\n     {\n         this.context = context;\n         this.expander = expander;\n@@ -64,48 +65,47 @@ public class AStar implements PathFinder<WeightedPath>\n     }\n \n     @Override\n-    public WeightedPath findSinglePath( Node start, Node end )\n+    public WeightedPath findSinglePath(Node start, Node end)\n     {\n         lastMetadata = new Metadata();\n-        AStarIterator iterator = new AStarIterator( start, end );\n-        while ( iterator.hasNext() )\n+        AStarIterator iterator = new AStarIterator(start, end);\n+        while (iterator.hasNext())\n         {\n             Node node = iterator.next();\n-            if ( node.equals( end ) )\n+            if (node.equals(end))\n             {\n                 // Hit, return path\n-                double weight = iterator.visitData.get( node.getId() ).wayLength;\n+                double weight = iterator.visitData.get(node.getId()).wayLength;\n                 final Path path;\n-                if ( start.getId() == end.getId() )\n+                if (start.getId() == end.getId())\n                 {\n                     // Nothing to iterate over\n-                    path = PathImpl.singular( start );\n-                }\n-                else\n+                    path = PathImpl.singular(start);\n+                } else\n                 {\n                     LinkedList<Relationship> rels = new LinkedList<>();\n                     var transaction = context.transaction();\n-                    Relationship rel = transaction.getRelationshipById( iterator.visitData.get( node.getId() ).cameFromRelationship );\n-                    while ( rel != null )\n+                    Relationship rel = transaction.getRelationshipById(iterator.visitData.get(node.getId()).cameFromRelationship);\n+                    while (rel != null)\n                     {\n-                        rels.addFirst( rel );\n-                        node = rel.getOtherNode( node );\n-                        long nextRelId = iterator.visitData.get( node.getId() ).cameFromRelationship;\n-                        rel = nextRelId == -1 ? null : transaction.getRelationshipById( nextRelId );\n+                        rels.addFirst(rel);\n+                        node = rel.getOtherNode(node);\n+                        long nextRelId = iterator.visitData.get(node.getId()).cameFromRelationship;\n+                        rel = nextRelId == -1 ? null : transaction.getRelationshipById(nextRelId);\n                     }\n-                    path = toPath( start, rels );\n+                    path = toPath(start, rels);\n                 }\n                 lastMetadata.paths++;\n-                return new WeightedPathImpl( weight, path );\n+                return new WeightedPathImpl(weight, path);\n             }\n         }\n         return null;\n     }\n \n     @Override\n-    public Iterable<WeightedPath> findAllPaths( final Node node, final Node end )\n+    public Iterable<WeightedPath> findAllPaths(final Node node, final Node end)\n     {\n-        return option( findSinglePath( node, end ) );\n+        return option(findSinglePath(node, end));\n     }\n \n     @Override\n@@ -114,12 +114,12 @@ public class AStar implements PathFinder<WeightedPath>\n         return lastMetadata;\n     }\n \n-    private Path toPath( Node start, List<Relationship> rels )\n+    private Path toPath(Node start, List<Relationship> rels)\n     {\n-        PathImpl.Builder builder = new PathImpl.Builder( start );\n-        for ( Relationship rel : rels )\n+        PathImpl.Builder builder = new PathImpl.Builder(start);\n+        for (Relationship rel : rels)\n         {\n-            builder = builder.push( rel );\n+            builder = builder.push(rel);\n         }\n         return builder.build();\n     }\n@@ -132,12 +132,12 @@ public class AStar implements PathFinder<WeightedPath>\n         private boolean visited;\n         private boolean next;\n \n-        Visit( long cameFromRelationship, double wayLength, double estimate )\n+        Visit(long cameFromRelationship, double wayLength, double estimate)\n         {\n-            update( cameFromRelationship, wayLength, estimate );\n+            update(cameFromRelationship, wayLength, estimate);\n         }\n \n-        void update( long cameFromRelationship, double wayLength, double estimate )\n+        void update(long cameFromRelationship, double wayLength, double estimate)\n         {\n             this.cameFromRelationship = cameFromRelationship;\n             this.wayLength = wayLength;\n@@ -156,35 +156,35 @@ public class AStar implements PathFinder<WeightedPath>\n         private final Node end;\n         private Node lastNode;\n         private final PriorityMap<Node, Node, Double> nextPrioritizedNodes =\n-                PriorityMap.withSelfKeyNaturalOrder();\n+          PriorityMap.withSelfKeyNaturalOrder();\n         private final Map<Long, Visit> visitData = new HashMap<>();\n \n-        AStarIterator( Node start, Node end )\n+        AStarIterator(Node start, Node end)\n         {\n             this.start = start;\n             this.end = end;\n \n-            Visit visit = new Visit( -1, 0, estimateEvaluator.getCost( start, end ) );\n-            addNext( start, visit.getFscore(), visit );\n-            this.visitData.put( start.getId(), visit );\n+            Visit visit = new Visit(-1, 0, estimateEvaluator.getCost(start, end));\n+            addNext(start, visit.getFscore(), visit);\n+            this.visitData.put(start.getId(), visit);\n         }\n \n-        private void addNext( Node node, double fscore, Visit visit )\n+        private void addNext(Node node, double fscore, Visit visit)\n         {\n-            nextPrioritizedNodes.put( node, fscore );\n+            nextPrioritizedNodes.put(node, fscore);\n             visit.next = true;\n         }\n \n         private Node popLowestScoreNode()\n         {\n             Entry<Node, Double> top = nextPrioritizedNodes.pop();\n-            if ( top == null )\n+            if (top == null)\n             {\n                 return null;\n             }\n \n             Node node = top.getEntity();\n-            Visit visit = visitData.get( node.getId() );\n+            Visit visit = visitData.get(node.getId());\n             visit.visited = true;\n             visit.next = false;\n             return node;\n@@ -193,7 +193,7 @@ public class AStar implements PathFinder<WeightedPath>\n         @Override\n         protected Node fetchNextOrNull()\n         {\n-            if ( lastNode != null )\n+            if (lastNode != null)\n             {\n                 expand();\n             }\n@@ -202,37 +202,36 @@ public class AStar implements PathFinder<WeightedPath>\n             return lastNode;\n         }\n \n-        @SuppressWarnings( \"unchecked\" )\n+        @SuppressWarnings(\"unchecked\")\n         private void expand()\n         {\n-            Iterable<Relationship> expand = expander.expand( this, BranchState.NO_STATE );\n-            for ( Relationship rel : expand )\n+            Iterable<Relationship> expand = expander.expand(this, BranchState.NO_STATE);\n+            for (Relationship rel : expand)\n             {\n                 lastMetadata.rels++;\n-                Node node = rel.getOtherNode( lastNode );\n-                Visit visit = visitData.get( node.getId() );\n-                if ( visit != null && visit.visited )\n+                Node node = rel.getOtherNode(lastNode);\n+                Visit visit = visitData.get(node.getId());\n+                if (visit != null && visit.visited)\n                 {\n                     continue;\n                 }\n \n-                Visit lastVisit = visitData.get( lastNode.getId() );\n+                Visit lastVisit = visitData.get(lastNode.getId());\n                 double tentativeGScore = lastVisit.wayLength +\n-                        lengthEvaluator.getCost( rel, Direction.OUTGOING );\n-                double estimate = estimateEvaluator.getCost( node, end );\n+                  lengthEvaluator.getCost(rel, Direction.OUTGOING);\n+                double estimate = estimateEvaluator.getCost(node, end);\n \n-                if ( visit == null || !visit.next || tentativeGScore < visit.wayLength )\n+                if (visit == null || !visit.next || tentativeGScore < visit.wayLength)\n                 {\n-                    if ( visit == null )\n+                    if (visit == null)\n                     {\n-                        visit = new Visit( rel.getId(), tentativeGScore, estimate );\n-                        visitData.put( node.getId(), visit );\n-                    }\n-                    else\n+                        visit = new Visit(rel.getId(), tentativeGScore, estimate);\n+                        visitData.put(node.getId(), visit);\n+                    } else\n                     {\n-                        visit.update( rel.getId(), tentativeGScore, estimate );\n+                        visit.update(rel.getId(), tentativeGScore, estimate);\n                     }\n-                    addNext( node, estimate + tentativeGScore, visit );\n+                    addNext(node, estimate + tentativeGScore, visit);\n                 }\n             }\n         }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
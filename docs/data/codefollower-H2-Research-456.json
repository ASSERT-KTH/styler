{
    "project_name": "codefollower-H2-Research",
    "error_id": "456",
    "information": {
        "errors": [
            {
                "line": "62",
                "column": "13",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        if (builtIn != null) {\n            if (!builtIn.hidden) {\n            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n                //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n                //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n                //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/456/CreateDomain.java\nindex eb7b695eaf3..ba30500adb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/456/CreateDomain.java\n@@ -59,8 +59,8 @@ public class CreateDomain extends DefineCommand {\n         DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n         if (builtIn != null) {\n             if (!builtIn.hidden) {\n-            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n-                //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n+            //\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n+            //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n                 //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n                 //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n                 //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/456/CreateDomain.java\nindex eb7b695eaf3..b2d824e8ade 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/456/CreateDomain.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.command.ddl;\n \n import org.h2.api.ErrorCode;\n@@ -22,73 +23,73 @@ import org.h2.value.DataType;\n //CREATE DOMAIN\u3001CREATE TYPE\u3001CREATE DATATYPE\u90fd\u662f\u4e00\u6837\u7684\n public class CreateDomain extends DefineCommand {\n \n-    private String typeName;\n-    private Column column;\n-    private boolean ifNotExists;\n+  private String typeName;\n+  private Column column;\n+  private boolean ifNotExists;\n \n-    public CreateDomain(Session session) {\n-        super(session);\n-    }\n+  public CreateDomain(Session session) {\n+    super(session);\n+  }\n \n-    public void setTypeName(String name) {\n-        this.typeName = name;\n-    }\n+  public void setTypeName(String name) {\n+    this.typeName = name;\n+  }\n \n-    public void setColumn(Column column) {\n-        this.column = column;\n-    }\n+  public void setColumn(Column column) {\n+    this.column = column;\n+  }\n \n-    public void setIfNotExists(boolean ifNotExists) {\n-        this.ifNotExists = ifNotExists;\n-    }\n+  public void setIfNotExists(boolean ifNotExists) {\n+    this.ifNotExists = ifNotExists;\n+  }\n \n-    @Override\n-    public int update() {\n-        session.getUser().checkAdmin();\n-        session.commit(true);\n-        Database db = session.getDatabase();\n-        session.getUser().checkAdmin();\n-        if (db.findDomain(typeName) != null) {\n-            if (ifNotExists) {\n-                return 0;\n-            }\n-            throw DbException.get(\n-                    ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n-                    typeName);\n-        }\n-        DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n-        if (builtIn != null) {\n-            if (!builtIn.hidden) {\n-            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n-                //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n-                //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n-                //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n-                //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n-                //\u5982CREATE DATATYPE IF NOT EXISTS integer AS VARCHAR(255)\n-                throw DbException.get(\n-                        ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n-                        typeName);\n-            }\n-            \n-            //\u5982\u679c\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\uff0c\u90a3\u4e48\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u4e0e\u5185\u7f6e\u5b57\u6bb5\u7c7b\u578b\u7684\u540d\u5b57\u4e00\u6837\n-            //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n-            Table table = session.getDatabase().getFirstUserTable();\n-            if (table != null) {\n-                StringBuilder builder = new StringBuilder(typeName).append(\" (\");\n-                table.getSQL(builder, false).append(')');\n-                throw DbException.get(ErrorCode.DOMAIN_ALREADY_EXISTS_1, builder.toString());\n-            }\n-        }\n-        int id = getObjectId();\n-        Domain type = new Domain(db, id, typeName);\n-        type.setColumn(column);\n-        db.addDatabaseObject(session, type);\n+  @Override\n+  public int update() {\n+    session.getUser().checkAdmin();\n+    session.commit(true);\n+    Database db = session.getDatabase();\n+    session.getUser().checkAdmin();\n+    if (db.findDomain(typeName) != null) {\n+      if (ifNotExists) {\n         return 0;\n+      }\n+      throw DbException.get(\n+          ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n+          typeName);\n     }\n+    DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n+    if (builtIn != null) {\n+      if (!builtIn.hidden) {\n+        //\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n+        //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n+        //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n+        //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n+        //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n+        //\u5982CREATE DATATYPE IF NOT EXISTS integer AS VARCHAR(255)\n+        throw DbException.get(\n+            ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n+            typeName);\n+      }\n \n-    @Override\n-    public int getType() {\n-        return CommandInterface.CREATE_DOMAIN;\n+      //\u5982\u679c\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\uff0c\u90a3\u4e48\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u4e0e\u5185\u7f6e\u5b57\u6bb5\u7c7b\u578b\u7684\u540d\u5b57\u4e00\u6837\n+      //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n+      Table table = session.getDatabase().getFirstUserTable();\n+      if (table != null) {\n+        StringBuilder builder = new StringBuilder(typeName).append(\" (\");\n+        table.getSQL(builder, false).append(')');\n+        throw DbException.get(ErrorCode.DOMAIN_ALREADY_EXISTS_1, builder.toString());\n+      }\n     }\n+    int id = getObjectId();\n+    Domain type = new Domain(db, id, typeName);\n+    type.setColumn(column);\n+    db.addDatabaseObject(session, type);\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getType() {\n+    return CommandInterface.CREATE_DOMAIN;\n+  }\n \n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/456/CreateDomain.java\nindex eb7b695eaf3..d9db97aa5a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/456/CreateDomain.java\n@@ -20,6 +20,8 @@ import org.h2.value.DataType;\n  * CREATE DOMAIN\n  */\n //CREATE DOMAIN\u3001CREATE TYPE\u3001CREATE DATATYPE\u90fd\u662f\u4e00\u6837\u7684\n+\n+\n public class CreateDomain extends DefineCommand {\n \n     private String typeName;\n@@ -30,14 +32,17 @@ public class CreateDomain extends DefineCommand {\n         super(session);\n     }\n \n+\n     public void setTypeName(String name) {\n         this.typeName = name;\n     }\n \n+\n     public void setColumn(Column column) {\n         this.column = column;\n     }\n \n+\n     public void setIfNotExists(boolean ifNotExists) {\n         this.ifNotExists = ifNotExists;\n     }\n@@ -52,22 +57,18 @@ public class CreateDomain extends DefineCommand {\n             if (ifNotExists) {\n                 return 0;\n             }\n-            throw DbException.get(\n-                    ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n-                    typeName);\n+            throw DbException.get(ErrorCode.DOMAIN_ALREADY_EXISTS_1, typeName);\n         }\n         DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n         if (builtIn != null) {\n             if (!builtIn.hidden) {\n-            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n+                //\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n                 //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n                 //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n                 //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n                 //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n                 //\u5982CREATE DATATYPE IF NOT EXISTS integer AS VARCHAR(255)\n-                throw DbException.get(\n-                        ErrorCode.DOMAIN_ALREADY_EXISTS_1,\n-                        typeName);\n+                throw DbException.get(ErrorCode.DOMAIN_ALREADY_EXISTS_1, typeName);\n             }\n             \n             //\u5982\u679c\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\uff0c\u90a3\u4e48\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u4e0e\u5185\u7f6e\u5b57\u6bb5\u7c7b\u578b\u7684\u540d\u5b57\u4e00\u6837\n@@ -91,4 +92,4 @@ public class CreateDomain extends DefineCommand {\n         return CommandInterface.CREATE_DOMAIN;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/456/CreateDomain.java\nindex eb7b695eaf3..ba30500adb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/456/CreateDomain.java\n@@ -59,8 +59,8 @@ public class CreateDomain extends DefineCommand {\n         DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n         if (builtIn != null) {\n             if (!builtIn.hidden) {\n-            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n-                //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n+            //\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n+            //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n                 //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n                 //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n                 //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/456/CreateDomain.java\nindex eb7b695eaf3..abaea2a5280 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/456/CreateDomain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/456/CreateDomain.java\n@@ -59,8 +59,8 @@ public class CreateDomain extends DefineCommand {\n         DataType builtIn = DataType.getTypeByName(typeName, session.getDatabase().getMode());\n         if (builtIn != null) {\n             if (!builtIn.hidden) {\n-            \t//\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n-                //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n+                //\u4ece\u7b2c\u4e8c\u4e2a\u540d\u79f0\u5f00\u59cb\u7684\u90fd\u662f\u9690\u85cf\u7c7b\u578b\u7684\uff0c\u5982\u4e0b\u9762\u7684int\n+            //new String[]{\"INTEGER\", \"INT\", \"MEDIUMINT\", \"INT4\", \"SIGNED\"}\n                 //\u9690\u85cf\u7c7b\u578b\u5728\u7528\u6237\u5728\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5efa\u8868\u65f6\u53ef\u4ee5\u8986\u76d6\n                 //\u5982CREATE DATATYPE IF NOT EXISTS int AS VARCHAR(255)\n                 //\u4f46\u662f\u975e\u9690\u85cf\u7c7b\u578b\u5c31\u4e0d\u80fd\u8986\u76d6\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
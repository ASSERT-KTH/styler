{
    "project_name": "graphfoundation-ongdb",
    "error_id": "650",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/650/BashVariableInterpreter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/650/BashVariableInterpreter.java\nindex fc2a21b6c4a..a126b440567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/650/BashVariableInterpreter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/650/BashVariableInterpreter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.rmi.RemoteException;\n@@ -36,137 +37,139 @@ import org.neo4j.shell.ShellServer;\n  */\n public class BashVariableInterpreter\n {\n-    private static final Map<String, Replacer> STATIC_REPLACERS = new HashMap<>();\n-\n-    static\n+  private static final Map<String, Replacer> STATIC_REPLACERS = new HashMap<>();\n+\n+  static\n+  {\n+    STATIC_REPLACERS.put(\"d\", new DateReplacer(\"EEE MMM dd\"));\n+    STATIC_REPLACERS.put(\"h\", new HostReplacer());\n+    STATIC_REPLACERS.put(\"H\", new HostReplacer());\n+    STATIC_REPLACERS.put(\"s\", new HostReplacer());\n+    STATIC_REPLACERS.put(\"t\", new DateReplacer(\"HH:mm:ss\"));\n+    STATIC_REPLACERS.put(\"T\", new DateReplacer(\"KK:mm:ss\"));\n+    STATIC_REPLACERS.put(\"@\", new DateReplacer(\"KK:mm aa\"));\n+    STATIC_REPLACERS.put(\"A\", new DateReplacer(\"HH:mm\"));\n+    STATIC_REPLACERS.put(\"u\", new StaticReplacer(\"user\"));\n+    STATIC_REPLACERS.put(\"v\", new StaticReplacer(Version.getNeo4jVersion()));\n+    STATIC_REPLACERS.put(\"V\", new StaticReplacer(Version.getKernelVersion()));\n+  }\n+\n+  private final Map<String, Replacer> localReplacers = new HashMap<>();\n+\n+  /**\n+   * Adds a customized replacer for a certain variable.\n+   *\n+   * @param key      the variable key, f.ex. \"t\".\n+   * @param replacer the replacer which gives a replacement for the variable.\n+   */\n+  public void addReplacer(String key, Replacer replacer)\n+  {\n+    localReplacers.put(key, replacer);\n+  }\n+\n+  /**\n+   * Interprets a string with variables in it and replaces those variables\n+   * with values from replacers, see {@link Replacer}.\n+   *\n+   * @param string  the string to interpret.\n+   * @param server  the server which runs the interpretation.\n+   * @param session the session (or environment) of the interpretation.\n+   * @return the interpreted string.\n+   */\n+  public String interpret(String string, ShellServer server, Session session)\n+  {\n+    string = replace(string, server, session, localReplacers);\n+    string = replace(string, server, session, STATIC_REPLACERS);\n+    return string;\n+  }\n+\n+  private String replace(String string, ShellServer server, Session session, Map<String, Replacer> replacers)\n+  {\n+    for (Map.Entry<String, Replacer> replacer : replacers.entrySet())\n     {\n-        STATIC_REPLACERS.put( \"d\", new DateReplacer( \"EEE MMM dd\" ) );\n-        STATIC_REPLACERS.put( \"h\", new HostReplacer() );\n-        STATIC_REPLACERS.put( \"H\", new HostReplacer() );\n-        STATIC_REPLACERS.put( \"s\", new HostReplacer() );\n-        STATIC_REPLACERS.put( \"t\", new DateReplacer( \"HH:mm:ss\" ) );\n-        STATIC_REPLACERS.put( \"T\", new DateReplacer( \"KK:mm:ss\" ) );\n-        STATIC_REPLACERS.put( \"@\", new DateReplacer( \"KK:mm aa\" ) );\n-        STATIC_REPLACERS.put( \"A\", new DateReplacer( \"HH:mm\" ) );\n-        STATIC_REPLACERS.put( \"u\", new StaticReplacer( \"user\" ) );\n-        STATIC_REPLACERS.put( \"v\", new StaticReplacer( Version.getNeo4jVersion() ) );\n-        STATIC_REPLACERS.put( \"V\", new StaticReplacer( Version.getKernelVersion() ) );\n+      String value = replacer.getValue().getReplacement(server, session);\n+      string = string.replaceAll(\"\\\\\\\\\" + replacer.getKey(), value);\n     }\n-\n-    private final Map<String, Replacer> localReplacers = new HashMap<>();\n-\n+    return string;\n+  }\n+\n+  /**\n+   * A replacer which can return a string to replace a variable.\n+   */\n+  public interface Replacer\n+  {\n     /**\n-     * Adds a customized replacer for a certain variable.\n-     * @param key the variable key, f.ex. \"t\".\n-     * @param replacer the replacer which gives a replacement for the variable.\n+     * Returns a string to replace something else.\n+     *\n+     * @param server  the server which runs the interpretation.\n+     * @param session the environment of the interpretation.\n+     * @return the replacement.\n      */\n-    public void addReplacer( String key, Replacer replacer )\n-    {\n-        localReplacers.put( key, replacer );\n-    }\n+    String getReplacement(ShellServer server, Session session);\n+  }\n+\n+  /**\n+   * A {@link Replacer} which gets instantiated with a string representing the\n+   * replacement, which means that the value returned from\n+   * {@link #getReplacement(ShellServer, Session)} is always the same.\n+   */\n+  public static class StaticReplacer implements Replacer\n+  {\n+    private final String value;\n \n     /**\n-     * Interprets a string with variables in it and replaces those variables\n-     * with values from replacers, see {@link Replacer}.\n-     * @param string the string to interpret.\n-     * @param server the server which runs the interpretation.\n-     * @param session the session (or environment) of the interpretation.\n-     * @return the interpreted string.\n+     * @param value the value to return from\n+     *              {@link #getReplacement(ShellServer, Session)}.\n      */\n-    public String interpret( String string, ShellServer server, Session session )\n+    StaticReplacer(String value)\n     {\n-        string = replace( string, server, session, localReplacers );\n-        string = replace( string, server, session, STATIC_REPLACERS );\n-        return string;\n+      this.value = value;\n     }\n \n-    private String replace( String string, ShellServer server, Session session, Map<String, Replacer> replacers )\n+    @Override\n+    public String getReplacement(ShellServer server, Session session)\n     {\n-        for ( Map.Entry<String, Replacer> replacer : replacers.entrySet() )\n-        {\n-            String value = replacer.getValue().getReplacement( server, session );\n-            string = string.replaceAll( \"\\\\\\\\\" + replacer.getKey(), value );\n-        }\n-        return string;\n+      return this.value;\n     }\n+  }\n \n-    /**\n-     * A replacer which can return a string to replace a variable.\n-     */\n-    public interface Replacer\n-    {\n-        /**\n-         * Returns a string to replace something else.\n-         * @param server the server which runs the interpretation.\n-         * @param session the environment of the interpretation.\n-         * @return the replacement.\n-         */\n-        String getReplacement( ShellServer server, Session session );\n-    }\n+  /**\n+   * A {@link Replacer} which returns a date string in a certain format.\n+   */\n+  public static class DateReplacer implements Replacer\n+  {\n+    private final DateFormat format;\n \n     /**\n-     * A {@link Replacer} which gets instantiated with a string representing the\n-     * replacement, which means that the value returned from\n-     * {@link #getReplacement(ShellServer, Session)} is always the same.\n+     * @param format the date format, see {@link SimpleDateFormat}.\n      */\n-    public static class StaticReplacer implements Replacer\n+    DateReplacer(String format)\n     {\n-        private final String value;\n-\n-        /**\n-         * @param value the value to return from\n-         * {@link #getReplacement(ShellServer, Session)}.\n-         */\n-        StaticReplacer( String value )\n-        {\n-            this.value = value;\n-        }\n-\n-        @Override\n-        public String getReplacement( ShellServer server, Session session )\n-        {\n-            return this.value;\n-        }\n+      this.format = new SimpleDateFormat(format);\n     }\n \n-    /**\n-     * A {@link Replacer} which returns a date string in a certain format.\n-     */\n-    public static class DateReplacer implements Replacer\n+    @Override\n+    public String getReplacement(ShellServer server, Session session)\n     {\n-        private final DateFormat format;\n-\n-        /**\n-         * @param format the date format, see {@link SimpleDateFormat}.\n-         */\n-        DateReplacer( String format )\n-        {\n-            this.format = new SimpleDateFormat( format );\n-        }\n-\n-        @Override\n-        public String getReplacement( ShellServer server, Session session )\n-        {\n-            return format.format( new Date() );\n-        }\n+      return format.format(new Date());\n     }\n-\n-    /**\n-     * Returns the name of the server (or \"host\").\n-     */\n-    public static class HostReplacer implements Replacer\n+  }\n+\n+  /**\n+   * Returns the name of the server (or \"host\").\n+   */\n+  public static class HostReplacer implements Replacer\n+  {\n+    @Override\n+    public String getReplacement(ShellServer server, Session session)\n     {\n-        @Override\n-        public String getReplacement( ShellServer server, Session session )\n-        {\n-            try\n-            {\n-                return server.getName();\n-            }\n-            catch ( RemoteException e )\n-            {\n-                return \"\";\n-            }\n-        }\n+      try\n+      {\n+        return server.getName();\n+      } catch (RemoteException e)\n+      {\n+        return \"\";\n+      }\n     }\n+  }\n }\n",
            "diff_size": 178
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/650/BashVariableInterpreter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/650/BashVariableInterpreter.java\nindex fc2a21b6c4a..5c1c0f1825c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/650/BashVariableInterpreter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/650/BashVariableInterpreter.java\n@@ -36,7 +36,7 @@ import org.neo4j.shell.ShellServer;\n  */\n public class BashVariableInterpreter\n {\n-    private static final Map<String, Replacer> STATIC_REPLACERS = new HashMap<>();\n+    private static final Map<String,Replacer> STATIC_REPLACERS = new HashMap<>();\n \n     static\n     {\n@@ -53,7 +53,7 @@ public class BashVariableInterpreter\n         STATIC_REPLACERS.put( \"V\", new StaticReplacer( Version.getKernelVersion() ) );\n     }\n \n-    private final Map<String, Replacer> localReplacers = new HashMap<>();\n+    private final Map<String,Replacer> localReplacers = new HashMap<>();\n \n     /**\n      * Adds a customized replacer for a certain variable.\n@@ -80,14 +80,15 @@ public class BashVariableInterpreter\n         return string;\n     }\n \n-    private String replace( String string, ShellServer server, Session session, Map<String, Replacer> replacers )\n+    private String replace( String string, ShellServer server, Session session, Map<String,Replacer> replacers )\n     {\n-        for ( Map.Entry<String, Replacer> replacer : replacers.entrySet() )\n+        for ( Map.Entry<String,Replacer> replacer : replacers.entrySet() )\n         {\n             String value = replacer.getValue().getReplacement( server, session );\n             string = string.replaceAll( \"\\\\\\\\\" + replacer.getKey(), value );\n         }\n-        return string;\n+\n+return string;\n     }\n \n     /**\n@@ -169,4 +170,4 @@ public class BashVariableInterpreter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
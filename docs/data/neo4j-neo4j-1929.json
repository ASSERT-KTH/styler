{
    "project_name": "neo4j-neo4j",
    "error_id": "1929",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "299",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1929/ParallelSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1929/ParallelSort.java\nindex 6bc1b2ef4f8..197620b174f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1929/ParallelSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1929/ParallelSort.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache.idmapping.string;\n \n import org.eclipse.collections.api.stack.primitive.MutableLongStack;\n@@ -47,8 +48,8 @@ public class ParallelSort\n     private final ProgressListener progress;\n     private final Comparator comparator;\n \n-    public ParallelSort( Radix radix, LongArray dataCache, long highestSetIndex,\n-            Tracker tracker, int threads, ProgressListener progress, Comparator comparator )\n+    public ParallelSort(Radix radix, LongArray dataCache, long highestSetIndex,\n+                        Tracker tracker, int threads, ProgressListener progress, Comparator comparator)\n     {\n         this.progress = progress;\n         this.comparator = comparator;\n@@ -64,30 +65,29 @@ public class ParallelSort\n     {\n         long[][] sortParams = sortRadix();\n         int threadsNeeded = 0;\n-        for ( int i = 0; i < threads; i++ )\n+        for (int i = 0; i < threads; i++)\n         {\n-            if ( sortParams[i][1] == 0 )\n+            if (sortParams[i][1] == 0)\n             {\n                 break;\n             }\n             threadsNeeded++;\n         }\n \n-        Workers<SortWorker> sortWorkers = new Workers<>( \"SortWorker\" );\n-        progress.started( \"SORT\" );\n-        for ( int i = 0; i < threadsNeeded; i++ )\n+        Workers<SortWorker> sortWorkers = new Workers<>(\"SortWorker\");\n+        progress.started(\"SORT\");\n+        for (int i = 0; i < threadsNeeded; i++)\n         {\n-            if ( sortParams[i][1] == 0 )\n+            if (sortParams[i][1] == 0)\n             {\n                 break;\n             }\n-            sortWorkers.start( new SortWorker( sortParams[i][0], sortParams[i][1] ) );\n+            sortWorkers.start(new SortWorker(sortParams[i][0], sortParams[i][1]));\n         }\n         try\n         {\n             sortWorkers.awaitAndThrowOnError();\n-        }\n-        finally\n+        } finally\n         {\n             progress.done();\n         }\n@@ -98,49 +98,47 @@ public class ParallelSort\n     {\n         long[][] rangeParams = new long[threads][2];\n         int[] bucketRange = new int[threads];\n-        Workers<TrackerInitializer> initializers = new Workers<>( \"TrackerInitializer\" );\n+        Workers<TrackerInitializer> initializers = new Workers<>(\"TrackerInitializer\");\n         sortBuckets = new long[threads][2];\n         long dataSize = highestSetIndex + 1;\n         long bucketSize = dataSize / threads;\n         long count = 0;\n         long fullCount = 0;\n-        progress.started( \"SPLIT\" );\n-        for ( int i = 0, threadIndex = 0; i < radixIndexCount.length && threadIndex < threads; i++ )\n+        progress.started(\"SPLIT\");\n+        for (int i = 0, threadIndex = 0; i < radixIndexCount.length && threadIndex < threads; i++)\n         {\n-            if ( (count + radixIndexCount[i]) > bucketSize )\n+            if ((count + radixIndexCount[i]) > bucketSize)\n             {\n                 bucketRange[threadIndex] = count == 0 ? i : i - 1;\n                 rangeParams[threadIndex][0] = fullCount;\n-                if ( count != 0 )\n+                if (count != 0)\n                 {\n                     rangeParams[threadIndex][1] = count;\n                     fullCount += count;\n-                    progress.add( count );\n+                    progress.add(count);\n                     count = radixIndexCount[i];\n-                }\n-                else\n+                } else\n                 {\n                     rangeParams[threadIndex][1] = radixIndexCount[i];\n                     fullCount += radixIndexCount[i];\n-                    progress.add( radixIndexCount[i] );\n+                    progress.add(radixIndexCount[i]);\n                 }\n-                initializers.start( new TrackerInitializer( threadIndex, rangeParams[threadIndex],\n-                        threadIndex > 0 ? bucketRange[threadIndex - 1] : -1, bucketRange[threadIndex],\n-                        sortBuckets[threadIndex] ) );\n+                initializers.start(new TrackerInitializer(threadIndex, rangeParams[threadIndex],\n+                  threadIndex > 0 ? bucketRange[threadIndex - 1] : -1, bucketRange[threadIndex],\n+                  sortBuckets[threadIndex]));\n                 threadIndex++;\n-            }\n-            else\n+            } else\n             {\n                 count += radixIndexCount[i];\n             }\n-            if ( threadIndex == threads - 1 || i == radixIndexCount.length - 1 )\n+            if (threadIndex == threads - 1 || i == radixIndexCount.length - 1)\n             {\n                 bucketRange[threadIndex] = radixIndexCount.length;\n                 rangeParams[threadIndex][0] = fullCount;\n                 rangeParams[threadIndex][1] = dataSize - fullCount;\n-                initializers.start( new TrackerInitializer( threadIndex, rangeParams[threadIndex],\n-                        threadIndex > 0 ? bucketRange[threadIndex - 1] : -1, bucketRange[threadIndex],\n-                        sortBuckets[threadIndex] ) );\n+                initializers.start(new TrackerInitializer(threadIndex, rangeParams[threadIndex],\n+                  threadIndex > 0 ? bucketRange[threadIndex - 1] : -1, bucketRange[threadIndex],\n+                  sortBuckets[threadIndex]));\n                 break;\n             }\n         }\n@@ -152,35 +150,35 @@ public class ParallelSort\n         Throwable error = initializers.await();\n         long[] bucketIndex = new long[threads];\n         int i = 0;\n-        for ( TrackerInitializer initializer : initializers )\n+        for (TrackerInitializer initializer : initializers)\n         {\n             bucketIndex[i++] = initializer.bucketIndex;\n         }\n-        if ( error != null )\n+        if (error != null)\n         {\n-            throw new AssertionError( error.getMessage() + \"\\n\" + dumpBuckets( rangeParams, bucketRange, bucketIndex ),\n-                    error );\n+            throw new AssertionError(error.getMessage() + \"\\n\" + dumpBuckets(rangeParams, bucketRange, bucketIndex),\n+              error);\n         }\n         return rangeParams;\n     }\n \n-    private String dumpBuckets( long[][] rangeParams, int[] bucketRange, long[] bucketIndex )\n+    private String dumpBuckets(long[][] rangeParams, int[] bucketRange, long[] bucketIndex)\n     {\n         StringBuilder builder = new StringBuilder();\n-        builder.append( \"rangeParams:\\n\" );\n-        for ( long[] range : rangeParams )\n+        builder.append(\"rangeParams:\\n\");\n+        for (long[] range : rangeParams)\n         {\n-            builder.append( \"  \" ).append( Arrays.toString( range ) ).append( \"\\n\" );\n+            builder.append(\"  \").append(Arrays.toString(range)).append(\"\\n\");\n         }\n-        builder.append( \"bucketRange:\\n\" );\n-        for ( int range : bucketRange )\n+        builder.append(\"bucketRange:\\n\");\n+        for (int range : bucketRange)\n         {\n-            builder.append( \"  \" ).append( range ).append( \"\\n\" );\n+            builder.append(\"  \").append(range).append(\"\\n\");\n         }\n-        builder.append( \"bucketIndex:\\n\" );\n-        for ( long index : bucketIndex )\n+        builder.append(\"bucketIndex:\\n\");\n+        for (long index : bucketIndex)\n         {\n-            builder.append( \"  \" ).append( index ).append( \"\\n\" );\n+            builder.append(\"  \").append(index).append(\"\\n\");\n         }\n         return builder.toString();\n     }\n@@ -193,12 +191,12 @@ public class ParallelSort\n         /**\n          * @return {@code true} if {@code left} is less than {@code pivot}.\n          */\n-        boolean lt( long left, long pivot );\n+        boolean lt(long left, long pivot);\n \n         /**\n          * @return {@code true} if {@code right} is greater than or equal to {@code pivot}.\n          */\n-        boolean ge( long right, long pivot );\n+        boolean ge(long right, long pivot);\n \n         /**\n          * @param dataValue the data value in the used dataCache for a given tracker index.\n@@ -206,25 +204,25 @@ public class ParallelSort\n          * This is exposed to be able to introduce an indirection while preparing the tracker indexes\n          * just like the other methods on this interface does.\n          */\n-        long dataValue( long dataValue );\n+        long dataValue(long dataValue);\n     }\n \n     public static final Comparator DEFAULT = new Comparator()\n     {\n         @Override\n-        public boolean lt( long left, long pivot )\n+        public boolean lt(long left, long pivot)\n         {\n-            return Utils.unsignedCompare( left, pivot, Utils.CompareType.LT );\n+            return Utils.unsignedCompare(left, pivot, Utils.CompareType.LT);\n         }\n \n         @Override\n-        public boolean ge( long right, long pivot )\n+        public boolean ge(long right, long pivot)\n         {\n-            return Utils.unsignedCompare( right, pivot, Utils.CompareType.GE );\n+            return Utils.unsignedCompare(right, pivot, Utils.CompareType.GE);\n         }\n \n         @Override\n-        public long dataValue( long dataValue )\n+        public long dataValue(long dataValue)\n         {\n             return dataValue;\n         }\n@@ -243,16 +241,16 @@ public class ParallelSort\n         private final long[] pivotChoice = new long[10];\n         private final ThreadLocalRandom random = ThreadLocalRandom.current();\n \n-        SortWorker( long startRange, long size )\n+        SortWorker(long startRange, long size)\n         {\n             this.start = startRange;\n             this.size = size;\n         }\n \n-        void incrementProgress( long diff )\n+        void incrementProgress(long diff)\n         {\n             threadLocalProgress += diff;\n-            if ( threadLocalProgress >= 10_000 /*reasonably big to dwarf passing a memory barrier*/ )\n+            if (threadLocalProgress >= 10_000 /*reasonably big to dwarf passing a memory barrier*/)\n             {   // Update the total progress\n                 reportProgress();\n             }\n@@ -260,119 +258,117 @@ public class ParallelSort\n \n         private void reportProgress()\n         {\n-            progress.add( threadLocalProgress );\n+            progress.add(threadLocalProgress);\n             threadLocalProgress = 0;\n         }\n \n         @Override\n         public void run()\n         {\n-            qsort( start, start + size );\n+            qsort(start, start + size);\n             reportProgress();\n         }\n \n-        private long partition( long leftIndex, long rightIndex, long pivotIndex )\n+        private long partition(long leftIndex, long rightIndex, long pivotIndex)\n         {\n             long li = leftIndex;\n             long ri = rightIndex - 2;\n             long pi = pivotIndex;\n-            long pivot = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( pi ) ) );\n+            long pivot = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(pi)));\n             // save pivot in last index\n-            tracker.swap( pi, rightIndex - 1 );\n-            long left = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( li ) ) );\n-            long right = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( ri ) ) );\n-            while ( li < ri )\n+            tracker.swap(pi, rightIndex - 1);\n+            long left = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(li)));\n+            long right = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(ri)));\n+            while (li < ri)\n             {\n-                if ( comparator.lt( left, pivot ) )\n+                if (comparator.lt(left, pivot))\n                 {   // this value is on the correct side of the pivot, moving on\n-                    left = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( ++li ) ) );\n-                }\n-                else if ( comparator.ge( right, pivot ) )\n+                    left = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(++li)));\n+                } else if (comparator.ge(right, pivot))\n                 {   // this value is on the correct side of the pivot, moving on\n-                    right = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( --ri ) ) );\n-                }\n-                else\n+                    right = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(--ri)));\n+                } else\n                 {   // this value is on the wrong side of the pivot, swapping\n-                    tracker.swap( li, ri );\n+                    tracker.swap(li, ri);\n                     long temp = left;\n                     left = right;\n                     right = temp;\n                 }\n             }\n             long partingIndex = ri;\n-            if ( comparator.lt( right, pivot ) )\n+            if (comparator.lt(right, pivot))\n             {\n                 partingIndex++;\n             }\n             // restore pivot\n-            tracker.swap( rightIndex - 1, partingIndex );\n+            tracker.swap(rightIndex - 1, partingIndex);\n             return partingIndex;\n         }\n \n-        private void qsort( long initialStart, long initialEnd )\n+        private void qsort(long initialStart, long initialEnd)\n         {\n             final MutableLongStack stack = new LongArrayStack();\n-            stack.push( initialStart );\n-            stack.push( initialEnd );\n-            while ( !stack.isEmpty() )\n+            stack.push(initialStart);\n+            stack.push(initialEnd);\n+            while (!stack.isEmpty())\n             {\n                 long end = stack.isEmpty() ? -1 : stack.pop();\n                 long start = stack.isEmpty() ? -1 : stack.pop();\n                 long diff = end - start;\n-                if ( diff < 2 )\n+                if (diff < 2)\n                 {\n-                    incrementProgress( 2 );\n+                    incrementProgress(2);\n                     continue;\n                 }\n \n-                incrementProgress( 1 );\n+                incrementProgress(1);\n \n                 // choose a random pivot between start and end\n-                long pivot = start + random.nextLong( diff );\n-                pivot = informedPivot( start, end, pivot );\n+                long pivot = start + random.nextLong(diff);\n+                pivot = informedPivot(start, end, pivot);\n \n                 // partition, given that pivot\n-                pivot = partition( start, end, pivot );\n-                if ( pivot > start )\n+                pivot = partition(start, end, pivot);\n+                if (pivot > start)\n                 {   // there are elements to left of pivot\n-                    stack.push( start );\n-                    stack.push( pivot );\n+                    stack.push(start);\n+                    stack.push(pivot);\n                 }\n-                if ( pivot + 1 < end )\n+                if (pivot + 1 < end)\n                 {   // there are elements to right of pivot\n-                    stack.push( pivot + 1 );\n-                    stack.push( end );\n+                    stack.push(pivot + 1);\n+                    stack.push(end);\n                 }\n             }\n         }\n \n-        private long informedPivot( long start, long end, long randomIndex )\n+        private long informedPivot(long start, long end, long randomIndex)\n         {\n-            if ( end - start < pivotChoice.length )\n+            if (end - start < pivotChoice.length)\n             {\n                 return randomIndex;\n             }\n \n-            long low = Math.max( start, randomIndex - 5 );\n-            long high = Math.min( low + 10, end );\n-            int length = safeCastLongToInt( high - low );\n+            long low = Math.max(start, randomIndex - 5);\n+            long high = Math.min(low + 10, end);\n+            int length = safeCastLongToInt(high - low);\n \n             int j = 0;\n-            for ( long i = low; i < high; i++, j++ )\n+            for (long i = low; i < high; i++, j++)\n             {\n-                pivotChoice[j] = EncodingIdMapper.clearCollision( dataCache.get( tracker.get( i ) ) );\n+                pivotChoice[j] = EncodingIdMapper.clearCollision(dataCache.get(tracker.get(i)));\n             }\n-            Arrays.sort( pivotChoice, 0, length );\n+            Arrays.sort(pivotChoice, 0, length);\n \n             long middle = pivotChoice[length / 2];\n-            for ( long i = low; i <= high; i++ )\n+            for (long i = low; i <= high; i++)\n             {\n-                if ( EncodingIdMapper.clearCollision( dataCache.get( tracker.get( i ) ) ) == middle )\n+                if (EncodingIdMapper.clearCollision(dataCache.get(tracker.get(i))) == middle)\n                 {\n                     return i;\n                 }\n             }\n-            throw new IllegalStateException( \"The middle value somehow disappeared in front of our eyes\" );\n+            throw new IllegalStateException(\"The middle value somehow disappeared in front of our eyes\");\n         }\n     }\n \n@@ -389,8 +385,8 @@ public class ParallelSort\n         private long bucketIndex;\n         private final long[] result;\n \n-        TrackerInitializer( int threadIndex, long[] rangeParams, int lowRadixRange, int highRadixRange,\n-                long[] result )\n+        TrackerInitializer(int threadIndex, long[] rangeParams, int lowRadixRange, int highRadixRange,\n+                           long[] result)\n         {\n             this.threadIndex = threadIndex;\n             this.rangeParams = rangeParams;\n@@ -402,16 +398,16 @@ public class ParallelSort\n         @Override\n         public void run()\n         {\n-            for ( long i = 0; i <= highestSetIndex; i++ )\n+            for (long i = 0; i <= highestSetIndex; i++)\n             {\n-                int rIndex = radixCalculator.radixOf( comparator.dataValue( dataCache.get( i ) ) );\n-                if ( rIndex > lowRadixRange && rIndex <= highRadixRange )\n+                int rIndex = radixCalculator.radixOf(comparator.dataValue(dataCache.get(i)));\n+                if (rIndex > lowRadixRange && rIndex <= highRadixRange)\n                 {\n                     long trackerIndex = rangeParams[0] + bucketIndex++;\n-                    assert tracker.get( trackerIndex ) == -1 :\n-                            \"Overlapping buckets i:\" + i + \", k:\" + threadIndex + \", index:\" + trackerIndex;\n-                    tracker.set( trackerIndex, i );\n-                    if ( bucketIndex == rangeParams[1] )\n+                    assert tracker.get(trackerIndex) == -1 :\n+                      \"Overlapping buckets i:\" + i + \", k:\" + threadIndex + \", index:\" + trackerIndex;\n+                    tracker.set(trackerIndex, i);\n+                    if (bucketIndex == rangeParams[1])\n                     {\n                         result[0] = highRadixRange;\n                         result[1] = rangeParams[0];\n",
            "diff_size": 109
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "fangjinuo-easyjson",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "11",
                "column": "52",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    private Excluder excluder;\n\n    public GsonExcluderExclusion(Excluder excluder){\n        this.excluder = excluder;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..9fa5ebf99da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..9fa5ebf99da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..76dcbc757b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n@@ -26,4 +26,4 @@ public class GsonExcluderExclusion implements Exclusion {\n     public boolean shouldSkipClass(Class<?> clazz, boolean serializePhrase) {\n         return this.excluder.excludeClass(clazz, serializePhrase);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..76dcbc757b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n@@ -26,4 +26,4 @@ public class GsonExcluderExclusion implements Exclusion {\n     public boolean shouldSkipClass(Class<?> clazz, boolean serializePhrase) {\n         return this.excluder.excludeClass(clazz, serializePhrase);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..9fa5ebf99da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/22/GsonExcluderExclusion.java\nindex 3f9ec24ba63..9fa5ebf99da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/22/GsonExcluderExclusion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/22/GsonExcluderExclusion.java\n@@ -8,7 +8,7 @@ import com.jn.langx.util.reflect.MethodAttributes;\n public class GsonExcluderExclusion implements Exclusion {\n     private Excluder excluder;\n \n-    public GsonExcluderExclusion(Excluder excluder){\n+    public GsonExcluderExclusion(Excluder excluder) {\n         this.excluder = excluder;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
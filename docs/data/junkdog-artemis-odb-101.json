{
    "project_name": "junkdog-artemis-odb",
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 120).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            aspect = new SystemMetadata(getClass()).getAspect();\n            if (aspect == null) {\n                String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n                        \"do not subscribe to entities, extend BaseSystem directly.\";\n                throw new NullPointerException(error);\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/101/BaseEntitySystem.java\nindex 52375619286..1bbd315407c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/101/BaseEntitySystem.java\n@@ -29,7 +29,7 @@ public abstract class BaseEntitySystem extends BaseSystem\n         if (aspect == null) {\n             aspect = new SystemMetadata(getClass()).getAspect();\n             if (aspect == null) {\n-                String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n+\t\t\t\t\t\t\t\t\t\t\t\t\tString error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n                         \"do not subscribe to entities, extend BaseSystem directly.\";\n                 throw new NullPointerException(error);\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/101/BaseEntitySystem.java\nindex 52375619286..b1fc058485f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/101/BaseEntitySystem.java\n@@ -29,8 +29,9 @@ public abstract class BaseEntitySystem extends BaseSystem\n         if (aspect == null) {\n             aspect = new SystemMetadata(getClass()).getAspect();\n             if (aspect == null) {\n-                String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n-                        \"do not subscribe to entities, extend BaseSystem directly.\";\n+                String error =\n+                        \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n+                                \"do not subscribe to entities, extend BaseSystem directly.\";\n                 throw new NullPointerException(error);\n             }\n         }\n@@ -42,8 +43,9 @@ public abstract class BaseEntitySystem extends BaseSystem\n         super.setWorld(world);\n \n         subscription = getSubscription();\n-        if (implementsAnyObserver(this))\n+        if (implementsAnyObserver(this)) {\n             subscription.addSubscriptionListener(this);\n+        }\n     }\n \n     /**\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/101/BaseEntitySystem.java\nindex 52375619286..cc924f44054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/101/BaseEntitySystem.java\n@@ -12,10 +12,9 @@ import static com.artemis.utils.reflect.ReflectionUtil.implementsAnyObserver;\n  * @author Arni Arent\n  * @author Adrian Papari\n  */\n-public abstract class BaseEntitySystem extends BaseSystem\n-        implements EntitySubscription.SubscriptionListener {\n+public abstract class BaseEntitySystem extends BaseSystem implements EntitySubscription.SubscriptionListener {\n \n-    private final Aspect.Builder aspectConfiguration;\n+\tprivate final Aspect.Builder aspectConfiguration;\n     protected EntitySubscription subscription;\n \n     /**\n@@ -30,35 +29,35 @@ public abstract class BaseEntitySystem extends BaseSystem\n             aspect = new SystemMetadata(getClass()).getAspect();\n             if (aspect == null) {\n                 String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n-                        \"do not subscribe to entities, extend BaseSystem directly.\";\n-                throw new NullPointerException(error);\n+\t\t\"do not subscribe to entities, extend BaseSystem directly.\";\n+\t\tthrow new NullPointerException(error);\n             }\n         }\n \n         aspectConfiguration = aspect;\n-    }\n+\t}\n \n     protected void setWorld(World world) {\n         super.setWorld(world);\n \n         subscription = getSubscription();\n         if (implementsAnyObserver(this))\n-            subscription.addSubscriptionListener(this);\n-    }\n+\tsubscription.addSubscriptionListener(this);\n+\t}\n \n     /**\n      * @return entity subscription backing this system.\n      */\n     public EntitySubscription getSubscription() {\n-        final AspectSubscriptionManager sm = world.getAspectSubscriptionManager();\n+\tfinal AspectSubscriptionManager sm = world.getAspectSubscriptionManager();\n         return sm.get(aspectConfiguration);\n     }\n \n     @Override\n     public void inserted(IntBag entities) {\n-        int[] ids = entities.getData();\n+\tint[] ids = entities.getData();\n         for (int i = 0, s = entities.size(); s > i; i++) {\n-            inserted(ids[i]);\n+\tinserted(ids[i]);\n         }\n     }\n \n@@ -69,7 +68,7 @@ public abstract class BaseEntitySystem extends BaseSystem\n      * @return System's entity ids, as matched by aspect.\n      */\n     public IntBag getEntityIds() {\n-        return subscription.getEntities();\n+\treturn subscription.getEntities();\n     }\n \n     /**\n@@ -83,9 +82,9 @@ public abstract class BaseEntitySystem extends BaseSystem\n \n     @Override\n     public void removed(IntBag entities) {\n-        int[] ids = entities.getData();\n+\tint[] ids = entities.getData();\n         for (int i = 0, s = entities.size(); s > i; i++) {\n-            removed(ids[i]);\n+\tremoved(ids[i]);\n         }\n     }\n \n@@ -102,5 +101,6 @@ public abstract class BaseEntitySystem extends BaseSystem\n      * @param entityId the entity that was removed from this system\n      */\n     protected void removed(int entityId) {\n-    }\n+\n }\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/101/BaseEntitySystem.java\nindex 52375619286..70c47e1e202 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/101/BaseEntitySystem.java\n@@ -12,11 +12,13 @@ import static com.artemis.utils.reflect.ReflectionUtil.implementsAnyObserver;\n  * @author Arni Arent\n  * @author Adrian Papari\n  */\n-public abstract class BaseEntitySystem extends BaseSystem\n-        implements EntitySubscription.SubscriptionListener {\n \n-    private final Aspect.Builder aspectConfiguration;\n-    protected EntitySubscription subscription;\n+\n+\n+public abstract class BaseEntitySystem extends BaseSystem implements EntitySubscription.SubscriptionListener {\n+ private final Aspect.Builder aspectConfiguration;\n+\n+ protected EntitySubscription subscription;\n \n     /**\n      * Creates an entity system that uses the specified aspect as a matcher\n@@ -24,43 +26,45 @@ public abstract class BaseEntitySystem extends BaseSystem\n      *\n      * @param aspect to match against entities\n      */\n-    public BaseEntitySystem(Aspect.Builder aspect) {\n-        super();\n-        if (aspect == null) {\n-            aspect = new SystemMetadata(getClass()).getAspect();\n-            if (aspect == null) {\n-                String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n-                        \"do not subscribe to entities, extend BaseSystem directly.\";\n-                throw new NullPointerException(error);\n-            }\n-        }\n-\n-        aspectConfiguration = aspect;\n-    }\n-\n-    protected void setWorld(World world) {\n-        super.setWorld(world);\n-\n-        subscription = getSubscription();\n-        if (implementsAnyObserver(this))\n-            subscription.addSubscriptionListener(this);\n-    }\n+\n+ public BaseEntitySystem(Aspect.Builder aspect) {\n+  super();\n+  if (aspect == null) {\n+   aspect = new SystemMetadata(getClass()).getAspect();\n+   if (aspect == null) {\n+    String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" + \"do not subscribe to entities, extend BaseSystem directly.\";\n+    throw new NullPointerException(error);\n+   }\n+  }\n+\n+  aspectConfiguration = aspect;\n+ }\n+\n+\n+ protected void setWorld(World world) {\n+  super.setWorld(world);\n+  subscription = getSubscription();\n+  if (implementsAnyObserver(this))\n+   subscription.addSubscriptionListener(this);\n+ }\n \n     /**\n      * @return entity subscription backing this system.\n      */\n-    public EntitySubscription getSubscription() {\n-        final AspectSubscriptionManager sm = world.getAspectSubscriptionManager();\n-        return sm.get(aspectConfiguration);\n-    }\n-\n-    @Override\n-    public void inserted(IntBag entities) {\n-        int[] ids = entities.getData();\n-        for (int i = 0, s = entities.size(); s > i; i++) {\n-            inserted(ids[i]);\n-        }\n-    }\n+\n+\n+ public EntitySubscription getSubscription() {\n+  final AspectSubscriptionManager sm = world.getAspectSubscriptionManager();\n+  return sm.get(aspectConfiguration);\n+ }\n+\n+ @Override\n+ public void inserted(IntBag entities) {\n+  int[] ids = entities.getData();\n+  for (int i = 0, s = entities.size(); s > i; i++) {\n+   inserted(ids[i]);\n+  }\n+ }\n \n     /**\n      * Gets the entities processed by this system. Do not delete entities from\n@@ -68,9 +72,11 @@ public abstract class BaseEntitySystem extends BaseSystem\n      *\n      * @return System's entity ids, as matched by aspect.\n      */\n-    public IntBag getEntityIds() {\n-        return subscription.getEntities();\n-    }\n+\n+\n+ public IntBag getEntityIds() {\n+  return subscription.getEntities();\n+ }\n \n     /**\n      * Called if entity has come into scope for this system, e.g\n@@ -78,16 +84,16 @@ public abstract class BaseEntitySystem extends BaseSystem\n      *\n      * @param entityId the entity that was added to this system\n      */\n-    protected void inserted(int entityId) {\n-    }\n \n-    @Override\n-    public void removed(IntBag entities) {\n-        int[] ids = entities.getData();\n-        for (int i = 0, s = entities.size(); s > i; i++) {\n-            removed(ids[i]);\n-        }\n-    }\n+ protected void inserted(int entityId) {}\n+\n+ @Override\n+ public void removed(IntBag entities) {\n+  int[] ids = entities.getData();\n+  for (int i = 0, s = entities.size(); s > i; i++) {\n+   removed(ids[i]);\n+  }\n+ }\n \n     /**\n      * <p>Called if entity has gone out of scope of this system, e.g deleted\n@@ -101,6 +107,6 @@ public abstract class BaseEntitySystem extends BaseSystem\n      *\n      * @param entityId the entity that was removed from this system\n      */\n-    protected void removed(int entityId) {\n-    }\n-}\n+\n+ protected void removed(int entityId) {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/101/BaseEntitySystem.java\nindex 52375619286..4c9b265a503 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/101/BaseEntitySystem.java\n@@ -30,7 +30,7 @@ public abstract class BaseEntitySystem extends BaseSystem\n             aspect = new SystemMetadata(getClass()).getAspect();\n             if (aspect == null) {\n                 String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n-                        \"do not subscribe to entities, extend BaseSystem directly.\";\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"do not subscribe to entities, extend BaseSystem directly.\";\n                 throw new NullPointerException(error);\n             }\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/101/BaseEntitySystem.java\nindex 52375619286..1bbd315407c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/101/BaseEntitySystem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/101/BaseEntitySystem.java\n@@ -29,7 +29,7 @@ public abstract class BaseEntitySystem extends BaseSystem\n         if (aspect == null) {\n             aspect = new SystemMetadata(getClass()).getAspect();\n             if (aspect == null) {\n-                String error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n+\t\t\t\t\t\t\t\t\t\t\t\t\tString error = \"Aspect was null and no aspect annotations set on system (@All); to use systems which \" +\n                         \"do not subscribe to entities, extend BaseSystem directly.\";\n                 throw new NullPointerException(error);\n             }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
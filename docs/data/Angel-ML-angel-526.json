{
    "project_name": "Angel-ML-angel",
    "error_id": "526",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/526/VelocityUtils.java\nindex a17e2442441..0bc940a1733 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/526/VelocityUtils.java\n@@ -33,8 +33,8 @@ import org.junit.Test;\n public class VelocityUtils {\n \n   private static VelocityEngine ve;\n-  private static String[] itypes = new String[]{\"Int\", \"Long\"};\n-  private static String[] dtypes = new String[]{\"Double\", \"Float\", \"Long\", \"Int\"};\n+  private static String[] itypes = new String[] {\"Int\", \"Long\"};\n+  private static String[] dtypes = new String[] {\"Double\", \"Float\", \"Long\", \"Int\"};\n   private static String basePath = \"F:\\\\git.code.oa.com\\\\angel\\\\angel-ps\\\\core\\\\src\\\\main\\\\java\";\n \n   @BeforeClass\n@@ -174,7 +174,7 @@ public class VelocityUtils {\n \n     /*  create a context and add data */\n     VelocityContext context = new VelocityContext();\n-    String[] comps = new String[]{\"Comp\", \"\"};\n+    String[] comps = new String[] {\"Comp\", \"\"};\n     for (String comp : comps) {\n       context.put(\"comp\", comp);\n       for (String itype : itypes) {\n@@ -197,7 +197,7 @@ public class VelocityUtils {\n \n     /*  create a context and add data */\n     VelocityContext context = new VelocityContext();\n-    String[] dtypes0 = new String[]{\"Double\", \"Float\"};\n+    String[] dtypes0 = new String[] {\"Double\", \"Float\"};\n     for (String dtype : dtypes0) {\n       context.put(\"dtype\", dtype);\n       context.put(\"dtypes\", dtypes);\n@@ -306,7 +306,7 @@ public class VelocityUtils {\n     /*  create a context and add data */\n     VelocityContext context = new VelocityContext();\n     context.put(\"itypes\", itypes);\n-    context.put(\"dtypes1\", new String[]{\"Double\", \"Float\"});\n+    context.put(\"dtypes1\", new String[] {\"Double\", \"Float\"});\n     context.put(\"dtypes2\", dtypes);\n     String content = merge(context, template);\n     // System.out.println(content);\n@@ -322,7 +322,7 @@ public class VelocityUtils {\n     /*  create a context and add data */\n     VelocityContext context = new VelocityContext();\n     context.put(\"itypes\", itypes);\n-    context.put(\"dtypes1\", new String[]{\"Double\", \"Float\"});\n+    context.put(\"dtypes1\", new String[] {\"Double\", \"Float\"});\n     context.put(\"dtypes2\", dtypes);\n     String content = merge(context, template);\n     // System.out.println(content);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/526/VelocityUtils.java\nindex a17e2442441..a5be13172b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/526/VelocityUtils.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.math2;\n \n import java.io.File;\n@@ -495,4 +494,4 @@ public class VelocityUtils {\n     // System.out.println(content);\n     write(path + \"MixedBinaryOutAllExecutor.java\", content);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/526/VelocityUtils.java\nindex a17e2442441..c91909dac4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/526/VelocityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/526/VelocityUtils.java\n@@ -467,7 +467,6 @@ public class VelocityUtils {\n   @Test\n   public void mixedBinaryInALLExecutor() {\n     /*  next, get the Template  */\n-\n     Template template = ve.getTemplate(\"vmfiles/executor/mixed/mixedbinaryinallexecutor.vm\");\n     String path = getPath(\"com.tencent.angel.ml.math2.ufuncs.executor.mixed\");\n \n@@ -483,7 +482,6 @@ public class VelocityUtils {\n   @Test\n   public void mixedBinaryOutALLExecutor() {\n     /*  next, get the Template  */\n-\n     Template template = ve.getTemplate(\"vmfiles/executor/mixed/mixedbinaryoutallexecutor.vm\");\n     String path = getPath(\"com.tencent.angel.ml.math2.ufuncs.executor.mixed\");\n \n@@ -495,4 +493,5 @@ public class VelocityUtils {\n     // System.out.println(content);\n     write(path + \"MixedBinaryOutAllExecutor.java\", content);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
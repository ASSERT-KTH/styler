{
    "project_name": "neo4j-neo4j",
    "error_id": "91",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "174",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "238",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "336",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "446",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "514",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "526",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "538",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "550",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "562",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "574",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "586",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "598",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "671",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "671",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "697",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "703",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "703",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "703",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "714",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "730",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/91/PropertyStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/91/PropertyStore.java\nindex 07775a7da22..e8f1cf9f49b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/91/PropertyStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/91/PropertyStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.eclipse.collections.api.set.ImmutableSet;\n@@ -146,7 +147,7 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.NORMAL;\n  *            seconds in next long block\n  * </pre>\n  */\n-public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHeader>\n+public class PropertyStore extends CommonAbstractStore<PropertyRecord, NoStoreHeader>\n {\n     public static final String TYPE_DESCRIPTOR = \"PropertyStore\";\n \n@@ -160,25 +161,25 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n     private final boolean allowStorePointsAndTemporal;\n \n     public PropertyStore(\n-            Path path,\n-            Path idFile,\n-            Config configuration,\n-            IdGeneratorFactory idGeneratorFactory,\n-            PageCache pageCache,\n-            LogProvider logProvider,\n-            DynamicStringStore stringPropertyStore,\n-            PropertyKeyTokenStore propertyKeyTokenStore,\n-            DynamicArrayStore arrayPropertyStore,\n-            RecordFormats recordFormats,\n-            ImmutableSet<OpenOption> openOptions )\n-    {\n-        super( path, idFile, configuration, IdType.PROPERTY, idGeneratorFactory, pageCache, logProvider, TYPE_DESCRIPTOR,\n-                recordFormats.property(), NO_STORE_HEADER_FORMAT, recordFormats.storeVersion(), openOptions );\n+      Path path,\n+      Path idFile,\n+      Config configuration,\n+      IdGeneratorFactory idGeneratorFactory,\n+      PageCache pageCache,\n+      LogProvider logProvider,\n+      DynamicStringStore stringPropertyStore,\n+      PropertyKeyTokenStore propertyKeyTokenStore,\n+      DynamicArrayStore arrayPropertyStore,\n+      RecordFormats recordFormats,\n+      ImmutableSet<OpenOption> openOptions)\n+    {\n+        super(path, idFile, configuration, IdType.PROPERTY, idGeneratorFactory, pageCache, logProvider, TYPE_DESCRIPTOR,\n+          recordFormats.property(), NO_STORE_HEADER_FORMAT, recordFormats.storeVersion(), openOptions);\n         this.stringStore = stringPropertyStore;\n         this.propertyKeyTokenStore = propertyKeyTokenStore;\n         this.arrayStore = arrayPropertyStore;\n-        allowStorePointsAndTemporal = recordFormats.hasCapability( RecordStorageCapability.POINT_PROPERTIES ) &&\n-                recordFormats.hasCapability( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+        allowStorePointsAndTemporal = recordFormats.hasCapability(RecordStorageCapability.POINT_PROPERTIES) &&\n+          recordFormats.hasCapability(RecordStorageCapability.TEMPORAL_PROPERTIES);\n     }\n \n     public DynamicStringStore getStringStore()\n@@ -197,18 +198,18 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n     }\n \n     @Override\n-    public void updateRecord( PropertyRecord record, IdUpdateListener idUpdateListener, PageCursor cursor, PageCursorTracer cursorTracer )\n+    public void updateRecord(PropertyRecord record, IdUpdateListener idUpdateListener, PageCursor cursor, PageCursorTracer cursorTracer)\n     {\n-        updatePropertyBlocks( record, idUpdateListener, cursorTracer );\n-        super.updateRecord( record, idUpdateListener, cursor, cursorTracer );\n+        updatePropertyBlocks(record, idUpdateListener, cursorTracer);\n+        super.updateRecord(record, idUpdateListener, cursor, cursorTracer);\n     }\n \n-    private void updatePropertyBlocks( PropertyRecord record, IdUpdateListener idUpdateListener, PageCursorTracer cursorTracer )\n+    private void updatePropertyBlocks(PropertyRecord record, IdUpdateListener idUpdateListener, PageCursorTracer cursorTracer)\n     {\n-        if ( record.inUse() )\n+        if (record.inUse())\n         {\n             // Go through the blocks\n-            for ( PropertyBlock block : record )\n+            for (PropertyBlock block : record)\n             {\n                 /*\n                  * For each block we need to update its dynamic record chain if\n@@ -216,148 +217,148 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n                  * record and dynamic records are never modified. Also, they are\n                  * assigned as a whole, so just checking the first should be enough.\n                  */\n-                if ( !block.isLight()\n-                        && block.getValueRecords().get( 0 ).isCreated() )\n+                if (!block.isLight()\n+                  && block.getValueRecords().get(0).isCreated())\n                 {\n-                    updateDynamicRecords( block.getValueRecords(), idUpdateListener, cursorTracer );\n+                    updateDynamicRecords(block.getValueRecords(), idUpdateListener, cursorTracer);\n                 }\n             }\n         }\n-        updateDynamicRecords( record.getDeletedRecords(), idUpdateListener, cursorTracer );\n+        updateDynamicRecords(record.getDeletedRecords(), idUpdateListener, cursorTracer);\n     }\n \n-    private void updateDynamicRecords( List<DynamicRecord> records, IdUpdateListener idUpdateListener, PageCursorTracer cursorTracer )\n+    private void updateDynamicRecords(List<DynamicRecord> records, IdUpdateListener idUpdateListener, PageCursorTracer cursorTracer)\n     {\n-        for ( DynamicRecord valueRecord : records )\n+        for (DynamicRecord valueRecord : records)\n         {\n             PropertyType recordType = valueRecord.getType();\n-            if ( recordType == PropertyType.STRING )\n+            if (recordType == PropertyType.STRING)\n             {\n-                stringStore.updateRecord( valueRecord, idUpdateListener, cursorTracer );\n-            }\n-            else if ( recordType == PropertyType.ARRAY )\n+                stringStore.updateRecord(valueRecord, idUpdateListener, cursorTracer);\n+            } else if (recordType == PropertyType.ARRAY)\n             {\n-                arrayStore.updateRecord( valueRecord, idUpdateListener, cursorTracer );\n-            }\n-            else\n+                arrayStore.updateRecord(valueRecord, idUpdateListener, cursorTracer);\n+            } else\n             {\n-                throw new InvalidRecordException( \"Unknown dynamic record\" + valueRecord );\n+                throw new InvalidRecordException(\"Unknown dynamic record\" + valueRecord);\n             }\n         }\n     }\n \n     @Override\n-    public void ensureHeavy( PropertyRecord record, PageCursorTracer cursorTracer )\n+    public void ensureHeavy(PropertyRecord record, PageCursorTracer cursorTracer)\n     {\n-        for ( PropertyBlock block : record )\n+        for (PropertyBlock block : record)\n         {\n-            ensureHeavy( block, cursorTracer );\n+            ensureHeavy(block, cursorTracer);\n         }\n     }\n \n-    public void ensureHeavy( PropertyBlock block, PageCursorTracer cursorTracer )\n+    public void ensureHeavy(PropertyBlock block, PageCursorTracer cursorTracer)\n     {\n-        if ( !block.isLight() )\n+        if (!block.isLight())\n         {\n             return;\n         }\n \n         PropertyType type = block.getType();\n-        RecordStore<DynamicRecord> dynamicStore = dynamicStoreForValueType( type );\n-        if ( dynamicStore != null )\n+        RecordStore<DynamicRecord> dynamicStore = dynamicStoreForValueType(type);\n+        if (dynamicStore != null)\n         {\n-            List<DynamicRecord> dynamicRecords = dynamicStore.getRecords( block.getSingleValueLong(), NORMAL, false, cursorTracer );\n-            for ( DynamicRecord dynamicRecord : dynamicRecords )\n+            List<DynamicRecord> dynamicRecords = dynamicStore.getRecords(block.getSingleValueLong(), NORMAL, false, cursorTracer);\n+            for (DynamicRecord dynamicRecord : dynamicRecords)\n             {\n-                dynamicRecord.setType( type.intValue() );\n+                dynamicRecord.setType(type.intValue());\n             }\n-            block.setValueRecords( dynamicRecords );\n+            block.setValueRecords(dynamicRecords);\n         }\n     }\n \n-    private RecordStore<DynamicRecord> dynamicStoreForValueType( PropertyType type )\n+    private RecordStore<DynamicRecord> dynamicStoreForValueType(PropertyType type)\n     {\n-        switch ( type )\n+        switch (type)\n         {\n-        case ARRAY: return arrayStore;\n-        case STRING: return stringStore;\n-        default: return null;\n+            case ARRAY:\n+                return arrayStore;\n+            case STRING:\n+                return stringStore;\n+            default:\n+                return null;\n         }\n     }\n \n-    public Value getValue( PropertyBlock propertyBlock, PageCursorTracer cursorTracer )\n+    public Value getValue(PropertyBlock propertyBlock, PageCursorTracer cursorTracer)\n     {\n-        return propertyBlock.getType().value( propertyBlock, this, cursorTracer );\n+        return propertyBlock.getType().value(propertyBlock, this, cursorTracer);\n     }\n \n-    private static void allocateStringRecords( Collection<DynamicRecord> target, byte[] chars, DynamicRecordAllocator allocator, PageCursorTracer cursorTracer,\n-            MemoryTracker memoryTracker )\n+    private static void allocateStringRecords(Collection<DynamicRecord> target, byte[] chars, DynamicRecordAllocator allocator, PageCursorTracer cursorTracer,\n+                                              MemoryTracker memoryTracker)\n     {\n-        AbstractDynamicStore.allocateRecordsFromBytes( target, chars, allocator, cursorTracer, memoryTracker );\n+        AbstractDynamicStore.allocateRecordsFromBytes(target, chars, allocator, cursorTracer, memoryTracker);\n     }\n \n-    private static void allocateArrayRecords( Collection<DynamicRecord> target, Object array, DynamicRecordAllocator allocator, boolean allowStorePoints,\n-            PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    private static void allocateArrayRecords(Collection<DynamicRecord> target, Object array, DynamicRecordAllocator allocator, boolean allowStorePoints,\n+                                             PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        DynamicArrayStore.allocateRecords( target, array, allocator, allowStorePoints, cursorTracer, memoryTracker );\n+        DynamicArrayStore.allocateRecords(target, array, allocator, allowStorePoints, cursorTracer, memoryTracker);\n     }\n \n-    public void encodeValue( PropertyBlock block, int keyId, Value value, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public void encodeValue(PropertyBlock block, int keyId, Value value, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        encodeValue( block, keyId, value, stringStore, arrayStore, allowStorePointsAndTemporal, cursorTracer, memoryTracker );\n+        encodeValue(block, keyId, value, stringStore, arrayStore, allowStorePointsAndTemporal, cursorTracer, memoryTracker);\n     }\n \n-    public static void encodeValue( PropertyBlock block, int keyId, Value value, DynamicRecordAllocator stringAllocator, DynamicRecordAllocator arrayAllocator,\n-            boolean allowStorePointsAndTemporal, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public static void encodeValue(PropertyBlock block, int keyId, Value value, DynamicRecordAllocator stringAllocator, DynamicRecordAllocator arrayAllocator,\n+                                   boolean allowStorePointsAndTemporal, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        if ( value instanceof ArrayValue )\n+        if (value instanceof ArrayValue)\n         {\n             Object asObject = value.asObject();\n \n             // Try short array first, i.e. inlined in the property block\n-            if ( ShortArray.encode( keyId, asObject, block, PropertyType.getPayloadSize() ) )\n+            if (ShortArray.encode(keyId, asObject, block, PropertyType.getPayloadSize()))\n             {\n                 return;\n             }\n \n             // Fall back to dynamic array store\n-            List<DynamicRecord> arrayRecords = HeapTrackingCollections.newArrayList( memoryTracker );\n-            allocateArrayRecords( arrayRecords, asObject, arrayAllocator, allowStorePointsAndTemporal, cursorTracer, memoryTracker );\n-            setSingleBlockValue( block, keyId, PropertyType.ARRAY, Iterables.first( arrayRecords ).getId() );\n-            for ( DynamicRecord valueRecord : arrayRecords )\n+            List<DynamicRecord> arrayRecords = HeapTrackingCollections.newArrayList(memoryTracker);\n+            allocateArrayRecords(arrayRecords, asObject, arrayAllocator, allowStorePointsAndTemporal, cursorTracer, memoryTracker);\n+            setSingleBlockValue(block, keyId, PropertyType.ARRAY, Iterables.first(arrayRecords).getId());\n+            for (DynamicRecord valueRecord : arrayRecords)\n             {\n-                valueRecord.setType( PropertyType.ARRAY.intValue() );\n+                valueRecord.setType(PropertyType.ARRAY.intValue());\n             }\n-            block.setValueRecords( arrayRecords );\n-        }\n-        else\n+            block.setValueRecords(arrayRecords);\n+        } else\n         {\n-            value.writeTo( new PropertyBlockValueWriter( block, keyId, stringAllocator, allowStorePointsAndTemporal, cursorTracer, memoryTracker ) );\n+            value.writeTo(new PropertyBlockValueWriter(block, keyId, stringAllocator, allowStorePointsAndTemporal, cursorTracer, memoryTracker));\n         }\n     }\n \n-    public PageCursor openStringPageCursor( long reference, PageCursorTracer cursorTracer )\n+    public PageCursor openStringPageCursor(long reference, PageCursorTracer cursorTracer)\n     {\n-        return stringStore.openPageCursorForReading( reference, cursorTracer );\n+        return stringStore.openPageCursorForReading(reference, cursorTracer);\n     }\n \n-    public PageCursor openArrayPageCursor( long reference, PageCursorTracer cursorTracer )\n+    public PageCursor openArrayPageCursor(long reference, PageCursorTracer cursorTracer)\n     {\n-        return arrayStore.openPageCursorForReading( reference, cursorTracer );\n+        return arrayStore.openPageCursorForReading(reference, cursorTracer);\n     }\n \n-    public void loadString( long reference, RecordPropertyCursor propertyCursor, PageCursor page, RecordLoad loadMode )\n+    public void loadString(long reference, RecordPropertyCursor propertyCursor, PageCursor page, RecordLoad loadMode)\n     {\n-        readDynamic( stringStore, reference, propertyCursor, page, loadMode );\n+        readDynamic(stringStore, reference, propertyCursor, page, loadMode);\n     }\n \n-    public void loadArray( long reference, RecordPropertyCursor propertyCursor, PageCursor page, RecordLoad loadMode )\n+    public void loadArray(long reference, RecordPropertyCursor propertyCursor, PageCursor page, RecordLoad loadMode)\n     {\n-        readDynamic( arrayStore, reference, propertyCursor, page, loadMode );\n+        readDynamic(arrayStore, reference, propertyCursor, page, loadMode);\n     }\n \n-    private static void readDynamic( AbstractDynamicStore store, long reference, RecordPropertyCursor propertyCursor,\n-            PageCursor page, RecordLoad loadMode )\n+    private static void readDynamic(AbstractDynamicStore store, long reference, RecordPropertyCursor propertyCursor,\n+                                    PageCursor page, RecordLoad loadMode)\n     {\n         var buffer = propertyCursor.getOrCreateClearBuffer();\n         DynamicRecord record = store.newRecord();\n@@ -365,16 +366,16 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n         {\n             //We need to load forcefully here since otherwise we can have inconsistent reads\n             //for properties across blocks, see org.neo4j.graphdb.ConsistentPropertyReadsIT\n-            store.getRecordByCursor( reference, record, loadMode, page );\n+            store.getRecordByCursor(reference, record, loadMode, page);\n             reference = record.getNextBlock();\n             byte[] data = record.getData();\n-            if ( buffer.remaining() < data.length )\n+            if (buffer.remaining() < data.length)\n             {\n-                buffer = propertyCursor.growBuffer( data.length );\n+                buffer = propertyCursor.growBuffer(data.length);\n             }\n-            buffer.put( data, 0, data.length );\n+            buffer.put(data, 0, data.length);\n         }\n-        while ( reference != NO_ID );\n+        while (reference != NO_ID);\n     }\n \n     private static class PropertyBlockValueWriter extends TemporalValueWriterAdapter<IllegalArgumentException>\n@@ -386,8 +387,8 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n         private final PageCursorTracer cursorTracer;\n         private final MemoryTracker memoryTracker;\n \n-        PropertyBlockValueWriter( PropertyBlock block, int keyId, DynamicRecordAllocator stringAllocator, boolean allowStorePointsAndTemporal,\n-                PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+        PropertyBlockValueWriter(PropertyBlock block, int keyId, DynamicRecordAllocator stringAllocator, boolean allowStorePointsAndTemporal,\n+                                 PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n         {\n             this.block = block;\n             this.keyId = keyId;\n@@ -400,257 +401,249 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n         @Override\n         public void writeNull() throws IllegalArgumentException\n         {\n-            throw new IllegalArgumentException( \"Cannot write null values to the property store\" );\n+            throw new IllegalArgumentException(\"Cannot write null values to the property store\");\n         }\n \n         @Override\n-        public void writeBoolean( boolean value ) throws IllegalArgumentException\n+        public void writeBoolean(boolean value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.BOOL, value ? 1L : 0L );\n+            setSingleBlockValue(block, keyId, PropertyType.BOOL, value ? 1L : 0L);\n         }\n \n         @Override\n-        public void writeInteger( byte value ) throws IllegalArgumentException\n+        public void writeInteger(byte value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.BYTE, value );\n+            setSingleBlockValue(block, keyId, PropertyType.BYTE, value);\n         }\n \n         @Override\n-        public void writeInteger( short value ) throws IllegalArgumentException\n+        public void writeInteger(short value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.SHORT, value );\n+            setSingleBlockValue(block, keyId, PropertyType.SHORT, value);\n         }\n \n         @Override\n-        public void writeInteger( int value ) throws IllegalArgumentException\n+        public void writeInteger(int value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.INT, value );\n+            setSingleBlockValue(block, keyId, PropertyType.INT, value);\n         }\n \n         @Override\n-        public void writeInteger( long value ) throws IllegalArgumentException\n+        public void writeInteger(long value) throws IllegalArgumentException\n         {\n             long keyAndType = keyId | (((long) PropertyType.LONG.intValue()) <<\n-                                       StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS);\n-            if ( ShortArray.LONG.getRequiredBits( value ) <= 35 )\n+              StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS);\n+            if (ShortArray.LONG.getRequiredBits(value) <= 35)\n             {   // We only need one block for this value, special layout compared to, say, an integer\n-                block.setSingleBlock( keyAndType | (1L << 28) | (value << 29) );\n-            }\n-            else\n+                block.setSingleBlock(keyAndType | (1L << 28) | (value << 29));\n+            } else\n             {   // We need two blocks for this value\n-                block.setValueBlocks( new long[]{keyAndType, value} );\n+                block.setValueBlocks(new long[] {keyAndType, value});\n             }\n         }\n \n         @Override\n-        public void writeFloatingPoint( float value ) throws IllegalArgumentException\n+        public void writeFloatingPoint(float value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.FLOAT, Float.floatToRawIntBits( value ) );\n+            setSingleBlockValue(block, keyId, PropertyType.FLOAT, Float.floatToRawIntBits(value));\n         }\n \n         @Override\n-        public void writeFloatingPoint( double value ) throws IllegalArgumentException\n+        public void writeFloatingPoint(double value) throws IllegalArgumentException\n         {\n-            block.setValueBlocks( new long[]{\n-                    keyId | (((long) PropertyType.DOUBLE.intValue())\n-                             << StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS),\n-                    Double.doubleToRawLongBits( value )\n-            } );\n+            block.setValueBlocks(new long[] {\n+              keyId | (((long) PropertyType.DOUBLE.intValue())\n+                << StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS),\n+              Double.doubleToRawLongBits(value)\n+            });\n         }\n \n         @Override\n-        public void writeString( String value ) throws IllegalArgumentException\n+        public void writeString(String value) throws IllegalArgumentException\n         {\n             // Try short string first, i.e. inlined in the property block\n-            if ( LongerShortString.encode( keyId, value, block, PropertyType.getPayloadSize() ) )\n+            if (LongerShortString.encode(keyId, value, block, PropertyType.getPayloadSize()))\n             {\n                 return;\n             }\n \n             // Fall back to dynamic string store\n-            byte[] encodedString = encodeString( value );\n-            List<DynamicRecord> valueRecords = HeapTrackingCollections.newArrayList( memoryTracker );\n-            allocateStringRecords( valueRecords, encodedString, stringAllocator, cursorTracer, memoryTracker );\n-            setSingleBlockValue( block, keyId, PropertyType.STRING, Iterables.first( valueRecords ).getId() );\n-            for ( DynamicRecord valueRecord : valueRecords )\n+            byte[] encodedString = encodeString(value);\n+            List<DynamicRecord> valueRecords = HeapTrackingCollections.newArrayList(memoryTracker);\n+            allocateStringRecords(valueRecords, encodedString, stringAllocator, cursorTracer, memoryTracker);\n+            setSingleBlockValue(block, keyId, PropertyType.STRING, Iterables.first(valueRecords).getId());\n+            for (DynamicRecord valueRecord : valueRecords)\n             {\n-                valueRecord.setType( PropertyType.STRING.intValue() );\n+                valueRecord.setType(PropertyType.STRING.intValue());\n             }\n-            block.setValueRecords( valueRecords );\n+            block.setValueRecords(valueRecords);\n         }\n \n         @Override\n-        public void writeString( char value ) throws IllegalArgumentException\n+        public void writeString(char value) throws IllegalArgumentException\n         {\n-            setSingleBlockValue( block, keyId, PropertyType.CHAR, value );\n+            setSingleBlockValue(block, keyId, PropertyType.CHAR, value);\n         }\n \n         @Override\n-        public void beginArray( int size, ArrayType arrayType ) throws IllegalArgumentException\n+        public void beginArray(int size, ArrayType arrayType) throws IllegalArgumentException\n         {\n-            throw new IllegalArgumentException( \"Cannot persist arrays to property store using ValueWriter\" );\n+            throw new IllegalArgumentException(\"Cannot persist arrays to property store using ValueWriter\");\n         }\n \n         @Override\n         public void endArray() throws IllegalArgumentException\n         {\n-            throw new IllegalArgumentException( \"Cannot persist arrays to property store using ValueWriter\" );\n+            throw new IllegalArgumentException(\"Cannot persist arrays to property store using ValueWriter\");\n         }\n \n         @Override\n-        public void writeByteArray( byte[] value ) throws IllegalArgumentException\n+        public void writeByteArray(byte[] value) throws IllegalArgumentException\n         {\n-            throw new IllegalArgumentException( \"Cannot persist arrays to property store using ValueWriter\" );\n+            throw new IllegalArgumentException(\"Cannot persist arrays to property store using ValueWriter\");\n         }\n \n         @Override\n-        public void writePoint( CoordinateReferenceSystem crs, double[] coordinate ) throws IllegalArgumentException\n+        public void writePoint(CoordinateReferenceSystem crs, double[] coordinate) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( GeometryType.encodePoint( keyId, crs, coordinate ) );\n-            }\n-            else\n+                block.setValueBlocks(GeometryType.encodePoint(keyId, crs, coordinate));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.POINT_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.POINT_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeDuration( long months, long days, long seconds, int nanos ) throws IllegalArgumentException\n+        public void writeDuration(long months, long days, long seconds, int nanos) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeDuration( keyId, months, days, seconds, nanos) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeDuration(keyId, months, days, seconds, nanos));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeDate( long epochDay ) throws IllegalArgumentException\n+        public void writeDate(long epochDay) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeDate( keyId, epochDay ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeDate(keyId, epochDay));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeLocalTime( long nanoOfDay ) throws IllegalArgumentException\n+        public void writeLocalTime(long nanoOfDay) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeLocalTime( keyId, nanoOfDay ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeLocalTime(keyId, nanoOfDay));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeTime( long nanosOfDayUTC, int offsetSeconds ) throws IllegalArgumentException\n+        public void writeTime(long nanosOfDayUTC, int offsetSeconds) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeTime( keyId, nanosOfDayUTC, offsetSeconds ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeTime(keyId, nanosOfDayUTC, offsetSeconds));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeLocalDateTime( long epochSecond, int nano ) throws IllegalArgumentException\n+        public void writeLocalDateTime(long epochSecond, int nano) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeLocalDateTime( keyId, epochSecond, nano ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeLocalDateTime(keyId, epochSecond, nano));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeDateTime( long epochSecondUTC, int nano, int offsetSeconds ) throws IllegalArgumentException\n+        public void writeDateTime(long epochSecondUTC, int nano, int offsetSeconds) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeDateTime( keyId, epochSecondUTC, nano, offsetSeconds ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeDateTime(keyId, epochSecondUTC, nano, offsetSeconds));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n         @Override\n-        public void writeDateTime( long epochSecondUTC, int nano, String zoneId ) throws IllegalArgumentException\n+        public void writeDateTime(long epochSecondUTC, int nano, String zoneId) throws IllegalArgumentException\n         {\n-            if ( allowStorePointsAndTemporal )\n+            if (allowStorePointsAndTemporal)\n             {\n-                block.setValueBlocks( TemporalType.encodeDateTime( keyId, epochSecondUTC, nano, zoneId ) );\n-            }\n-            else\n+                block.setValueBlocks(TemporalType.encodeDateTime(keyId, epochSecondUTC, nano, zoneId));\n+            } else\n             {\n-                throw new UnsupportedFormatCapabilityException( RecordStorageCapability.TEMPORAL_PROPERTIES );\n+                throw new UnsupportedFormatCapabilityException(RecordStorageCapability.TEMPORAL_PROPERTIES);\n             }\n         }\n \n     }\n-    public static void setSingleBlockValue( PropertyBlock block, int keyId, PropertyType type, long longValue )\n+\n+    public static void setSingleBlockValue(PropertyBlock block, int keyId, PropertyType type, long longValue)\n     {\n-        block.setSingleBlock( singleBlockLongValue( keyId, type, longValue ) );\n+        block.setSingleBlock(singleBlockLongValue(keyId, type, longValue));\n     }\n \n-    public static long singleBlockLongValue( int keyId, PropertyType type, long longValue )\n+    public static long singleBlockLongValue(int keyId, PropertyType type, long longValue)\n     {\n         return keyId | (((long) type.intValue()) << StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS) |\n-               (longValue << 28);\n+          (longValue << 28);\n     }\n \n-    public static byte[] encodeString( String string )\n+    public static byte[] encodeString(String string)\n     {\n-        return UTF8.encode( string );\n+        return UTF8.encode(string);\n     }\n \n-    public static String decodeString( byte[] byteArray )\n+    public static String decodeString(byte[] byteArray)\n     {\n-        return UTF8.decode( byteArray );\n+        return UTF8.decode(byteArray);\n     }\n \n-    TextValue getTextValueFor( PropertyBlock propertyBlock, PageCursorTracer cursorTracer )\n+    TextValue getTextValueFor(PropertyBlock propertyBlock, PageCursorTracer cursorTracer)\n     {\n-        ensureHeavy( propertyBlock, cursorTracer );\n-        return getTextValueFor( propertyBlock.getValueRecords(), cursorTracer );\n+        ensureHeavy(propertyBlock, cursorTracer);\n+        return getTextValueFor(propertyBlock.getValueRecords(), cursorTracer);\n     }\n \n-    public TextValue getTextValueFor( Collection<DynamicRecord> dynamicRecords, PageCursorTracer cursorTracer )\n+    public TextValue getTextValueFor(Collection<DynamicRecord> dynamicRecords, PageCursorTracer cursorTracer)\n     {\n-        Pair<byte[], byte[]> source = stringStore.readFullByteArray( dynamicRecords, PropertyType.STRING, cursorTracer );\n+        Pair<byte[], byte[]> source = stringStore.readFullByteArray(dynamicRecords, PropertyType.STRING, cursorTracer);\n         // A string doesn't have a header in the data array\n-        return Values.utf8Value( source.other() );\n+        return Values.utf8Value(source.other());\n     }\n \n-    Value getArrayFor( PropertyBlock propertyBlock, PageCursorTracer cursorTracer )\n+    Value getArrayFor(PropertyBlock propertyBlock, PageCursorTracer cursorTracer)\n     {\n-        ensureHeavy( propertyBlock, cursorTracer );\n-        return getArrayFor( propertyBlock.getValueRecords(), cursorTracer );\n+        ensureHeavy(propertyBlock, cursorTracer);\n+        return getArrayFor(propertyBlock.getValueRecords(), cursorTracer);\n     }\n \n-    public Value getArrayFor( Iterable<DynamicRecord> records, PageCursorTracer cursorTracer )\n+    public Value getArrayFor(Iterable<DynamicRecord> records, PageCursorTracer cursorTracer)\n     {\n-        return getRightArray( arrayStore.readFullByteArray( records, PropertyType.ARRAY, cursorTracer ) );\n+        return getRightArray(arrayStore.readFullByteArray(records, PropertyType.ARRAY, cursorTracer));\n     }\n \n     @Override\n@@ -662,7 +655,7 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n     @Override\n     public PropertyRecord newRecord()\n     {\n-        return new PropertyRecord( -1 );\n+        return new PropertyRecord(-1);\n     }\n \n     public boolean allowStorePointsAndTemporal()\n@@ -675,73 +668,68 @@ public class PropertyStore extends CommonAbstractStore<PropertyRecord,NoStoreHea\n      */\n     public PropertyValueRecordSizeCalculator newValueEncodedSizeCalculator()\n     {\n-        return new PropertyValueRecordSizeCalculator( this );\n+        return new PropertyValueRecordSizeCalculator(this);\n     }\n \n-    public static ArrayValue readArrayFromBuffer( ByteBuffer buffer )\n+    public static ArrayValue readArrayFromBuffer(ByteBuffer buffer)\n     {\n-        if ( buffer.limit() <= 0 )\n+        if (buffer.limit() <= 0)\n         {\n-            throw new IllegalStateException( \"Given buffer is empty\" );\n+            throw new IllegalStateException(\"Given buffer is empty\");\n         }\n \n         byte typeId = buffer.get();\n-        buffer.order( ByteOrder.BIG_ENDIAN );\n+        buffer.order(ByteOrder.BIG_ENDIAN);\n         try\n         {\n-            if ( typeId == PropertyType.STRING.intValue() )\n+            if (typeId == PropertyType.STRING.intValue())\n             {\n                 int arrayLength = buffer.getInt();\n                 String[] result = new String[arrayLength];\n \n-                for ( int i = 0; i < arrayLength; i++ )\n+                for (int i = 0; i < arrayLength; i++)\n                 {\n                     int byteLength = buffer.getInt();\n-                    result[i] = UTF8.decode( buffer.array(), buffer.position(), byteLength );\n-                    buffer.position( buffer.position() + byteLength );\n+                    result[i] = UTF8.decode(buffer.array(), buffer.position(), byteLength);\n+                    buffer.position(buffer.position() + byteLength);\n                 }\n-                return Values.stringArray( result );\n-            }\n-            else if ( typeId == PropertyType.GEOMETRY.intValue() )\n+                return Values.stringArray(result);\n+            } else if (typeId == PropertyType.GEOMETRY.intValue())\n             {\n-                GeometryType.GeometryHeader header = GeometryType.GeometryHeader.fromArrayHeaderByteBuffer( buffer );\n+                GeometryType.GeometryHeader header = GeometryType.GeometryHeader.fromArrayHeaderByteBuffer(buffer);\n                 byte[] byteArray = new byte[buffer.limit() - buffer.position()];\n-                buffer.get( byteArray );\n-                return GeometryType.decodeGeometryArray( header, byteArray );\n-            }\n-            else if ( typeId == PropertyType.TEMPORAL.intValue() )\n+                buffer.get(byteArray);\n+                return GeometryType.decodeGeometryArray(header, byteArray);\n+            } else if (typeId == PropertyType.TEMPORAL.intValue())\n             {\n-                TemporalType.TemporalHeader header = TemporalType.TemporalHeader.fromArrayHeaderByteBuffer( buffer );\n+                TemporalType.TemporalHeader header = TemporalType.TemporalHeader.fromArrayHeaderByteBuffer(buffer);\n                 byte[] byteArray = new byte[buffer.limit() - buffer.position()];\n-                buffer.get( byteArray );\n-                return TemporalType.decodeTemporalArray( header, byteArray );\n-            }\n-            else\n+                buffer.get(byteArray);\n+                return TemporalType.decodeTemporalArray(header, byteArray);\n+            } else\n             {\n-                ShortArray type = ShortArray.typeOf( typeId );\n+                ShortArray type = ShortArray.typeOf(typeId);\n                 int bitsUsedInLastByte = buffer.get();\n                 int requiredBits = buffer.get();\n-                if ( requiredBits == 0 )\n+                if (requiredBits == 0)\n                 {\n                     return type.createEmptyArray();\n                 }\n-                if ( type == ShortArray.BYTE && requiredBits == Byte.SIZE )\n+                if (type == ShortArray.BYTE && requiredBits == Byte.SIZE)\n                 {   // Optimization for byte arrays (probably large ones)\n                     byte[] byteArray = new byte[buffer.limit() - buffer.position()];\n-                    buffer.get( byteArray );\n-                    return Values.byteArray( byteArray );\n-                }\n-                else\n+                    buffer.get(byteArray);\n+                    return Values.byteArray(byteArray);\n+                } else\n                 {   // Fallback to the generic approach, which is a slower\n-                    Bits bits = Bits.bitsFromBytes( buffer.array(), buffer.position() );\n+                    Bits bits = Bits.bitsFromBytes(buffer.array(), buffer.position());\n                     int length = ((buffer.limit() - buffer.position()) * 8 - (8 - bitsUsedInLastByte)) / requiredBits;\n-                    return type.createArray( length, bits, requiredBits );\n+                    return type.createArray(length, bits, requiredBits);\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            buffer.order( ByteOrder.LITTLE_ENDIAN );\n+            buffer.order(ByteOrder.LITTLE_ENDIAN);\n         }\n     }\n }\n",
            "diff_size": 240
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
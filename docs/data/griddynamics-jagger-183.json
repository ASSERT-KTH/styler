{
    "project_name": "griddynamics-jagger",
    "error_id": "183",
    "information": {
        "errors": [
            {
                "line": "44",
                "column": "17",
                "severity": "warning",
                "message": "'(' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "        LOGGER.warn(\"{}'s query response content is not valid, due to [{}].\", query.toString(), message);\n        LOGGER.warn(String.format\n                (\"------> Failed response:\\n%s \\n%s\",\n                        endpoint.toString(), response.toString()));\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/183/BaseHttpResponseValidator.java\nindex 172bd353ff1..3b4a57effb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/183/BaseHttpResponseValidator.java\n@@ -40,8 +40,7 @@ public abstract class BaseHttpResponseValidator<T> extends ResponseValidator<JHt\n \n     protected void logResponseAsFailed(JHttpQuery query, JHttpEndpoint endpoint, JHttpResponse response, String message) {\n         LOGGER.warn(\"{}'s query response content is not valid, due to [{}].\", query.toString(), message);\n-        LOGGER.warn(String.format\n-                (\"------> Failed response:\\n%s \\n%s\",\n+        LOGGER.warn(String.format(\"------> Failed response:\\n%s \\n%s\",\n                         endpoint.toString(), response.toString()));\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "44",
                    "column": "17",
                    "severity": "warning",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/183/BaseHttpResponseValidator.java\nindex 172bd353ff1..3b4a57effb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/183/BaseHttpResponseValidator.java\n@@ -40,8 +40,7 @@ public abstract class BaseHttpResponseValidator<T> extends ResponseValidator<JHt\n \n     protected void logResponseAsFailed(JHttpQuery query, JHttpEndpoint endpoint, JHttpResponse response, String message) {\n         LOGGER.warn(\"{}'s query response content is not valid, due to [{}].\", query.toString(), message);\n-        LOGGER.warn(String.format\n-                (\"------> Failed response:\\n%s \\n%s\",\n+        LOGGER.warn(String.format(\"------> Failed response:\\n%s \\n%s\",\n                         endpoint.toString(), response.toString()));\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/183/BaseHttpResponseValidator.java\nindex 172bd353ff1..3b4a57effb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/183/BaseHttpResponseValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/183/BaseHttpResponseValidator.java\n@@ -40,8 +40,7 @@ public abstract class BaseHttpResponseValidator<T> extends ResponseValidator<JHt\n \n     protected void logResponseAsFailed(JHttpQuery query, JHttpEndpoint endpoint, JHttpResponse response, String message) {\n         LOGGER.warn(\"{}'s query response content is not valid, due to [{}].\", query.toString(), message);\n-        LOGGER.warn(String.format\n-                (\"------> Failed response:\\n%s \\n%s\",\n+        LOGGER.warn(String.format(\"------> Failed response:\\n%s \\n%s\",\n                         endpoint.toString(), response.toString()));\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3235",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3235/DynamicTaskExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3235/DynamicTaskExecutor.java\nindex dfa5f6ec757..9d80a95e2b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3235/DynamicTaskExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3235/DynamicTaskExecutor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.executor;\n \n import java.lang.reflect.Array;\n@@ -39,204 +40,200 @@ import static org.neo4j.helpers.Exceptions.SILENT_UNCAUGHT_EXCEPTION_HANDLER;\n  */\n public class DynamicTaskExecutor<LOCAL> implements TaskExecutor<LOCAL>\n {\n-    private final BlockingQueue<Task<LOCAL>> queue;\n-    private final ParkStrategy parkStrategy;\n-    private final String processorThreadNamePrefix;\n-    @SuppressWarnings( \"unchecked\" )\n-    private volatile Processor[] processors = (Processor[]) Array.newInstance( Processor.class, 0 );\n-    private volatile boolean shutDown;\n-    private final AtomicReference<Throwable> panic = new AtomicReference<>();\n-    private final Supplier<LOCAL> initialLocalState;\n-    private final int maxProcessorCount;\n-\n-    public DynamicTaskExecutor( int initialProcessorCount, int maxProcessorCount, int maxQueueSize,\n-            ParkStrategy parkStrategy, String processorThreadNamePrefix )\n+  private final BlockingQueue<Task<LOCAL>> queue;\n+  private final ParkStrategy parkStrategy;\n+  private final String processorThreadNamePrefix;\n+  @SuppressWarnings(\"unchecked\")\n+  private volatile Processor[] processors = (Processor[]) Array.newInstance(Processor.class, 0);\n+  private volatile boolean shutDown;\n+  private final AtomicReference<Throwable> panic = new AtomicReference<>();\n+  private final Supplier<LOCAL> initialLocalState;\n+  private final int maxProcessorCount;\n+\n+  public DynamicTaskExecutor(int initialProcessorCount, int maxProcessorCount, int maxQueueSize,\n+                             ParkStrategy parkStrategy, String processorThreadNamePrefix)\n+  {\n+    this(initialProcessorCount, maxProcessorCount, maxQueueSize, parkStrategy, processorThreadNamePrefix,\n+        Suppliers.singleton(null));\n+  }\n+\n+  public DynamicTaskExecutor(int initialProcessorCount, int maxProcessorCount, int maxQueueSize,\n+                             ParkStrategy parkStrategy, String processorThreadNamePrefix, Supplier<LOCAL> initialLocalState)\n+  {\n+    this.maxProcessorCount = maxProcessorCount == 0 ? Integer.MAX_VALUE : maxProcessorCount;\n+\n+    assert this.maxProcessorCount >= initialProcessorCount :\n+        \"Unexpected initial processor count \" + initialProcessorCount + \" for max \" + maxProcessorCount;\n+\n+    this.parkStrategy = parkStrategy;\n+    this.processorThreadNamePrefix = processorThreadNamePrefix;\n+    this.initialLocalState = initialLocalState;\n+    this.queue = new ArrayBlockingQueue<>(maxQueueSize);\n+    processors(initialProcessorCount);\n+  }\n+\n+  @Override\n+  public int processors(int delta)\n+  {\n+    if (shutDown || delta == 0)\n     {\n-        this( initialProcessorCount, maxProcessorCount, maxQueueSize, parkStrategy, processorThreadNamePrefix,\n-                Suppliers.singleton( null ) );\n-    }\n-\n-    public DynamicTaskExecutor( int initialProcessorCount, int maxProcessorCount, int maxQueueSize,\n-            ParkStrategy parkStrategy, String processorThreadNamePrefix, Supplier<LOCAL> initialLocalState )\n-    {\n-        this.maxProcessorCount = maxProcessorCount == 0 ? Integer.MAX_VALUE : maxProcessorCount;\n-\n-        assert this.maxProcessorCount >= initialProcessorCount :\n-                \"Unexpected initial processor count \" + initialProcessorCount + \" for max \" + maxProcessorCount;\n-\n-        this.parkStrategy = parkStrategy;\n-        this.processorThreadNamePrefix = processorThreadNamePrefix;\n-        this.initialLocalState = initialLocalState;\n-        this.queue = new ArrayBlockingQueue<>( maxQueueSize );\n-        processors( initialProcessorCount );\n+      return processors.length;\n     }\n \n-    @Override\n-    public int processors( int delta )\n+    synchronized (this)\n     {\n-        if ( shutDown || delta == 0 )\n+      if (shutDown)\n+      {\n+        return processors.length;\n+      }\n+\n+      int requestedNumber = processors.length + delta;\n+      if (delta > 0)\n+      {\n+        requestedNumber = min(requestedNumber, maxProcessorCount);\n+        if (requestedNumber > processors.length)\n         {\n-            return processors.length;\n+          Processor[] newProcessors = Arrays.copyOf(processors, requestedNumber);\n+          for (int i = processors.length; i < requestedNumber; i++)\n+          {\n+            newProcessors[i] = new Processor(processorThreadNamePrefix + \"-\" + i);\n+          }\n+          this.processors = newProcessors;\n         }\n-\n-        synchronized ( this )\n+      } else\n+      {\n+        requestedNumber = max(1, requestedNumber);\n+        if (requestedNumber < processors.length)\n         {\n-            if ( shutDown )\n-            {\n-                return processors.length;\n-            }\n-\n-            int requestedNumber = processors.length + delta;\n-            if ( delta > 0 )\n-            {\n-                requestedNumber = min( requestedNumber, maxProcessorCount );\n-                if ( requestedNumber > processors.length )\n-                {\n-                    Processor[] newProcessors = Arrays.copyOf( processors, requestedNumber );\n-                    for ( int i = processors.length; i < requestedNumber; i++ )\n-                    {\n-                        newProcessors[i] = new Processor( processorThreadNamePrefix + \"-\" + i );\n-                    }\n-                    this.processors = newProcessors;\n-                }\n-            }\n-            else\n-            {\n-                requestedNumber = max( 1, requestedNumber );\n-                if ( requestedNumber < processors.length )\n-                {\n-                    Processor[] newProcessors = Arrays.copyOf( processors, requestedNumber );\n-                    for ( int i = newProcessors.length; i < processors.length; i++ )\n-                    {\n-                        processors[i].processorShutDown = true;\n-                    }\n-                    this.processors = newProcessors;\n-                }\n-            }\n-            return processors.length;\n+          Processor[] newProcessors = Arrays.copyOf(processors, requestedNumber);\n+          for (int i = newProcessors.length; i < processors.length; i++)\n+          {\n+            processors[i].processorShutDown = true;\n+          }\n+          this.processors = newProcessors;\n         }\n+      }\n+      return processors.length;\n     }\n+  }\n \n-    @Override\n-    public void submit( Task<LOCAL> task )\n+  @Override\n+  public void submit(Task<LOCAL> task)\n+  {\n+    assertHealthy();\n+    try\n     {\n+      while (!queue.offer(task, 10, MILLISECONDS))\n+      {   // Then just stay here and try\n         assertHealthy();\n-        try\n-        {\n-            while ( !queue.offer( task, 10, MILLISECONDS ) )\n-            {   // Then just stay here and try\n-                assertHealthy();\n-            }\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            Thread.currentThread().interrupt();\n-        }\n+      }\n+    } catch (InterruptedException e)\n+    {\n+      Thread.currentThread().interrupt();\n     }\n+  }\n \n-    @Override\n-    public void assertHealthy()\n+  @Override\n+  public void assertHealthy()\n+  {\n+    Throwable panic = this.panic.get();\n+    if (panic != null)\n     {\n-        Throwable panic = this.panic.get();\n-        if ( panic != null )\n-        {\n-            throw new TaskExecutionPanicException( \"Executor has been shut down in panic\", panic );\n-        }\n+      throw new TaskExecutionPanicException(\"Executor has been shut down in panic\", panic);\n     }\n-\n-    @Override\n-    public void receivePanic( Throwable cause )\n+  }\n+\n+  @Override\n+  public void receivePanic(Throwable cause)\n+  {\n+    panic.compareAndSet(null, cause);\n+  }\n+\n+  @Override\n+  public synchronized void close()\n+  {\n+    if (shutDown)\n     {\n-        panic.compareAndSet( null, cause );\n+      return;\n     }\n \n-    @Override\n-    public synchronized void close()\n+    while (!queue.isEmpty() && panic.get() == null /*all bets are off in the event of panic*/)\n     {\n-        if ( shutDown )\n-        {\n-            return;\n-        }\n-\n-        while ( !queue.isEmpty() && panic.get() == null /*all bets are off in the event of panic*/ )\n-        {\n-            parkAWhile();\n-        }\n-        this.shutDown = true;\n-        while ( anyAlive() && panic.get() == null /*all bets are off in the event of panic*/ )\n-        {\n-            parkAWhile();\n-        }\n+      parkAWhile();\n     }\n-\n-    @Override\n-    public boolean isClosed()\n+    this.shutDown = true;\n+    while (anyAlive() && panic.get() == null /*all bets are off in the event of panic*/)\n     {\n-        return shutDown;\n+      parkAWhile();\n     }\n+  }\n \n-    private boolean anyAlive()\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return shutDown;\n+  }\n+\n+  private boolean anyAlive()\n+  {\n+    for (Processor processor : processors)\n     {\n-        for ( Processor processor : processors )\n-        {\n-            if ( processor.isAlive() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      if (processor.isAlive())\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n+\n+  private void parkAWhile()\n+  {\n+    parkStrategy.park(Thread.currentThread());\n+  }\n+\n+  private class Processor extends Thread\n+  {\n+    // In addition to the global shutDown flag in the executor each processor has a local flag\n+    // so that an individual processor can be shut down, for example when reducing number of processors\n+    private volatile boolean processorShutDown;\n \n-    private void parkAWhile()\n+    Processor(String name)\n     {\n-        parkStrategy.park( Thread.currentThread() );\n+      super(name);\n+      setUncaughtExceptionHandler(SILENT_UNCAUGHT_EXCEPTION_HANDLER);\n+      start();\n     }\n \n-    private class Processor extends Thread\n+    @Override\n+    public void run()\n     {\n-        // In addition to the global shutDown flag in the executor each processor has a local flag\n-        // so that an individual processor can be shut down, for example when reducing number of processors\n-        private volatile boolean processorShutDown;\n-\n-        Processor( String name )\n+      // Initialized here since it's the thread itself that needs to call it\n+      final LOCAL threadLocalState = initialLocalState.get();\n+      while (!shutDown && !processorShutDown)\n+      {\n+        Task<LOCAL> task;\n+        try\n+        {\n+          task = queue.poll(10, MILLISECONDS);\n+        } catch (InterruptedException e)\n         {\n-            super( name );\n-            setUncaughtExceptionHandler( SILENT_UNCAUGHT_EXCEPTION_HANDLER );\n-            start();\n+          Thread.interrupted();\n+          break;\n         }\n \n-        @Override\n-        public void run()\n+        if (task != null)\n         {\n-            // Initialized here since it's the thread itself that needs to call it\n-            final LOCAL threadLocalState = initialLocalState.get();\n-            while ( !shutDown && !processorShutDown )\n-            {\n-                Task<LOCAL> task;\n-                try\n-                {\n-                    task = queue.poll( 10, MILLISECONDS );\n-                }\n-                catch ( InterruptedException e )\n-                {\n-                    Thread.interrupted();\n-                    break;\n-                }\n-\n-                if ( task != null )\n-                {\n-                    try\n-                    {\n-                        task.run( threadLocalState );\n-                    }\n-                    catch ( Throwable e )\n-                    {\n-                        receivePanic( e );\n-                        close();\n-                        throw new RuntimeException( e );\n-                    }\n-                }\n-            }\n+          try\n+          {\n+            task.run(threadLocalState);\n+          } catch (Throwable e)\n+          {\n+            receivePanic(e);\n+            close();\n+            throw new RuntimeException(e);\n+          }\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 256
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
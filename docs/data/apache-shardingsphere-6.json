{
    "project_name": "apache-shardingsphere",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "95",
                "column": "5",
                "severity": "warning",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    \n    \n    /**\n     * Restart.\n     *\n     * @param metricsConfiguration metrics configuration",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/6/MetricsInitFacade.java\nindex eef97e666a5..b0985b02e93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/6/MetricsInitFacade.java\n@@ -90,8 +90,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().close();\n         enabled = false;\n     }\n-    \n-    \n+\n     /**\n      * Restart.\n      *\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "95",
                    "column": "5",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/6/MetricsInitFacade.java\nindex eef97e666a5..4bfce859ad0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/6/MetricsInitFacade.java\n@@ -32,11 +32,11 @@ import org.apache.shardingsphere.metrics.spi.MetricsTrackerManager;\n  */\n @Slf4j\n public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfiguration> {\n-    \n+\n     private static MetricsTrackerManager metricsTrackerManager;\n-    \n+\n     private static volatile boolean enabled;\n-    \n+\n     /**\n      * Get enabled boolean.\n      *\n@@ -45,7 +45,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n     public static boolean getEnabled() {\n         return enabled;\n     }\n-    \n+\n     /**\n      * Get metrics tracker manager.\n      *\n@@ -54,7 +54,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n     public static MetricsTrackerManager getMetricsTrackerManager() {\n         return metricsTrackerManager;\n     }\n-    \n+\n     /**\n      * Init for metrics tracker manager.\n      *\n@@ -67,7 +67,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         }\n         doInit(metricsConfiguration);\n     }\n-    \n+\n     private static void doInit(final MetricsConfiguration metricsConfiguration) {\n         Preconditions.checkNotNull(metricsConfiguration, \"metrics configuration can not be null.\");\n         metricsTrackerManager = loadMetricsManager().get(metricsConfiguration.getMetricsName());\n@@ -76,7 +76,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().init(metricsConfiguration.getAsync(), metricsConfiguration.getThreadCount(), metricsTrackerManager);\n         enabled = true;\n     }\n-    \n+\n     /**\n      * Stop to metrics.\n      */\n@@ -90,8 +90,8 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().close();\n         enabled = false;\n     }\n-    \n-    \n+\n+\n     /**\n      * Restart.\n      *\n@@ -101,29 +101,29 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         close();\n         doInit(metricsConfiguration);\n     }\n-    \n+\n     private static Map<String, MetricsTrackerManager> loadMetricsManager() {\n         Map<String, MetricsTrackerManager> metricsMap = new HashMap<>();\n         for (MetricsTrackerManager each : ServiceLoader.load(MetricsTrackerManager.class)) {\n             if (metricsMap.containsKey(each.getType())) {\n                 log.warn(\"Find more than one {} metricsTracker manager implementation class, use `{}` now\",\n-                        each.getType(), metricsMap.get(each.getType()).getClass().getName());\n+                    each.getType(), metricsMap.get(each.getType()).getClass().getName());\n                 continue;\n             }\n             metricsMap.put(each.getType(), each);\n         }\n         return metricsMap;\n     }\n-    \n+\n     @Override\n     public int getOrder() {\n         return 0;\n     }\n-    \n+\n     @Override\n     public Class<MetricsConfiguration> getTypeClass() {\n         return MetricsConfiguration.class;\n     }\n-    \n+\n }\n \n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/6/MetricsInitFacade.java\nindex eef97e666a5..72edf047ab9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/6/MetricsInitFacade.java\n@@ -90,8 +90,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().close();\n         enabled = false;\n     }\n-    \n-    \n+\n     /**\n      * Restart.\n      *\n@@ -106,8 +105,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         Map<String, MetricsTrackerManager> metricsMap = new HashMap<>();\n         for (MetricsTrackerManager each : ServiceLoader.load(MetricsTrackerManager.class)) {\n             if (metricsMap.containsKey(each.getType())) {\n-                log.warn(\"Find more than one {} metricsTracker manager implementation class, use `{}` now\",\n-                        each.getType(), metricsMap.get(each.getType()).getClass().getName());\n+                log.warn(\"Find more than one {} metricsTracker manager implementation class, use `{}` now\", each.getType(), metricsMap.get(each.getType()).getClass().getName());\n                 continue;\n             }\n             metricsMap.put(each.getType(), each);\n@@ -125,5 +123,4 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         return MetricsConfiguration.class;\n     }\n     \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/6/MetricsInitFacade.java\nindex eef97e666a5..67cd00f8043 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/6/MetricsInitFacade.java\n@@ -30,11 +30,13 @@ import org.apache.shardingsphere.metrics.spi.MetricsTrackerManager;\n /**\n  * Metrics tracker facade.\n  */\n+\n+\n @Slf4j\n public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfiguration> {\n-    \n+\n     private static MetricsTrackerManager metricsTrackerManager;\n-    \n+\n     private static volatile boolean enabled;\n     \n     /**\n@@ -42,6 +44,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n      *\n      * @return boolean enabled\n      */\n+\n     public static boolean getEnabled() {\n         return enabled;\n     }\n@@ -51,6 +54,8 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n      *\n      * @return metrics tracker manager\n      */\n+\n+\n     public static MetricsTrackerManager getMetricsTrackerManager() {\n         return metricsTrackerManager;\n     }\n@@ -60,6 +65,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n      *\n      * @param metricsConfiguration metrics configuration\n      */\n+\n     @Override\n     public void init(final MetricsConfiguration metricsConfiguration) {\n         if (enabled) {\n@@ -67,7 +73,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         }\n         doInit(metricsConfiguration);\n     }\n-    \n+\n     private static void doInit(final MetricsConfiguration metricsConfiguration) {\n         Preconditions.checkNotNull(metricsConfiguration, \"metrics configuration can not be null.\");\n         metricsTrackerManager = loadMetricsManager().get(metricsConfiguration.getMetricsName());\n@@ -80,6 +86,8 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n     /**\n      * Stop to metrics.\n      */\n+\n+\n     public static void close() {\n         if (!enabled) {\n             return;\n@@ -97,33 +105,32 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n      *\n      * @param metricsConfiguration metrics configuration\n      */\n+\n+\n     public static void restart(final MetricsConfiguration metricsConfiguration) {\n         close();\n         doInit(metricsConfiguration);\n     }\n-    \n+\n     private static Map<String, MetricsTrackerManager> loadMetricsManager() {\n         Map<String, MetricsTrackerManager> metricsMap = new HashMap<>();\n         for (MetricsTrackerManager each : ServiceLoader.load(MetricsTrackerManager.class)) {\n             if (metricsMap.containsKey(each.getType())) {\n-                log.warn(\"Find more than one {} metricsTracker manager implementation class, use `{}` now\",\n-                        each.getType(), metricsMap.get(each.getType()).getClass().getName());\n+                log.warn(\"Find more than one {} metricsTracker manager implementation class, use `{}` now\", each.getType(), metricsMap.get(each.getType()).getClass().getName());\n                 continue;\n             }\n             metricsMap.put(each.getType(), each);\n         }\n         return metricsMap;\n     }\n-    \n+\n     @Override\n     public int getOrder() {\n         return 0;\n     }\n-    \n+\n     @Override\n     public Class<MetricsConfiguration> getTypeClass() {\n         return MetricsConfiguration.class;\n     }\n-    \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/6/MetricsInitFacade.java\nindex eef97e666a5..b0985b02e93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/6/MetricsInitFacade.java\n@@ -90,8 +90,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().close();\n         enabled = false;\n     }\n-    \n-    \n+\n     /**\n      * Restart.\n      *\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/6/MetricsInitFacade.java\nindex eef97e666a5..b0985b02e93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/6/MetricsInitFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/6/MetricsInitFacade.java\n@@ -90,8 +90,7 @@ public final class MetricsInitFacade implements ControlPanelFacade<MetricsConfig\n         MetricsTrackerHandler.getInstance().close();\n         enabled = false;\n     }\n-    \n-    \n+\n     /**\n      * Restart.\n      *\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
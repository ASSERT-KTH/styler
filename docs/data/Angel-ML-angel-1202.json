{
    "project_name": "Angel-ML-angel",
    "error_id": "1202",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1202/RowPartitionMeta.java\nindex fec331a0d69..dbe5b740019 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1202/RowPartitionMeta.java\n@@ -50,10 +50,11 @@ public class RowPartitionMeta {\n \n   /**\n    * Create meta for row split\n-   * @param rowId row split\n-   * @param offset data offset in the saved file\n+   *\n+   * @param rowId      row split\n+   * @param offset     data offset in the saved file\n    * @param elementNum save element number\n-   * @param saveType save type : 0 dense, 1 sparse\n+   * @param saveType   save type : 0 dense, 1 sparse\n    */\n   public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n     this.rowId = rowId;\n@@ -64,8 +65,9 @@ public class RowPartitionMeta {\n \n   /**\n    * Create meta for row split\n-   * @param rowId row split\n-   * @param offset data offset in the saved file\n+   *\n+   * @param rowId      row split\n+   * @param offset     data offset in the saved file\n    * @param elementNum save element number\n    */\n   public RowPartitionMeta(int rowId, long offset, int elementNum) {\n@@ -74,6 +76,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Write row split meta to output stream use binary format\n+   *\n    * @param output output stream\n    * @throws IOException\n    */\n@@ -86,6 +89,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Read row split meta from input stream use binary format\n+   *\n    * @param input input stream\n    * @throws IOException\n    */\n@@ -98,6 +102,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Write row split meta to a Json object\n+   *\n    * @return json object\n    * @throws IOException\n    * @throws JSONException\n@@ -111,6 +116,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Read row split meta from a Json object\n+   *\n    * @param jsonObject json object\n    * @throws IOException\n    * @throws JSONException\n@@ -124,6 +130,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get the row id for the row split\n+   *\n    * @return row id\n    */\n   public int getRowId() {\n@@ -132,7 +139,8 @@ public class RowPartitionMeta {\n \n   /**\n    * Set the row id for the row split\n-   * @param  rowId row id\n+   *\n+   * @param rowId row id\n    */\n   public void setRowId(int rowId) {\n     this.rowId = rowId;\n@@ -140,6 +148,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get the data offset in the saved file for this row split\n+   *\n    * @return the data offset in the saved file for this row split\n    */\n   public long getOffset() {\n@@ -148,6 +157,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Set the data offset in the saved file for this row split\n+   *\n    * @param offset the data offset in the saved file for this row split\n    */\n   public void setOffset(long offset) {\n@@ -156,6 +166,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get save element number\n+   *\n    * @return save element number\n    */\n   public int getElementNum() {\n@@ -164,6 +175,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Set save element number\n+   *\n    * @param elementNum save element number\n    */\n   public void setElementNum(int elementNum) {\n@@ -172,6 +184,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get save type\n+   *\n    * @return save type\n    */\n   public int getSaveType() {\n@@ -180,6 +193,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Set save type\n+   *\n    * @param saveType save type\n    */\n   public void setSaveType(int saveType) {\n@@ -187,8 +201,9 @@ public class RowPartitionMeta {\n   }\n \n \n-  @Override public String toString() {\n+  @Override\n+  public String toString() {\n     return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+        + elementNum + '}';\n   }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1202/RowPartitionMeta.java\nindex fec331a0d69..19c71854eb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1202/RowPartitionMeta.java\n@@ -186,9 +186,8 @@ public class RowPartitionMeta {\n     this.saveType = saveType;\n   }\n \n-\n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+@Override\n+public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1202/RowPartitionMeta.java\nindex fec331a0d69..08f471cce2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1202/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1202/RowPartitionMeta.java\n@@ -19,7 +19,6 @@ package com.tencent.angel.model.output.format;\n \n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -27,10 +26,12 @@ import java.io.IOException;\n /**\n  * The meta data for row split\n  */\n+\n public class RowPartitionMeta {\n   /**\n    * Row id\n    */\n+\n   private int rowId;\n \n   /**\n@@ -55,6 +56,7 @@ public class RowPartitionMeta {\n    * @param elementNum save element number\n    * @param saveType save type : 0 dense, 1 sparse\n    */\n+\n   public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n     this.rowId = rowId;\n     this.offset = offset;\n@@ -68,6 +70,7 @@ public class RowPartitionMeta {\n    * @param offset data offset in the saved file\n    * @param elementNum save element number\n    */\n+\n   public RowPartitionMeta(int rowId, long offset, int elementNum) {\n     this(rowId, offset, elementNum, 0);\n   }\n@@ -77,6 +80,7 @@ public class RowPartitionMeta {\n    * @param output output stream\n    * @throws IOException\n    */\n+\n   public void write(DataOutputStream output) throws IOException {\n     output.writeInt(rowId);\n     output.writeLong(offset);\n@@ -89,6 +93,7 @@ public class RowPartitionMeta {\n    * @param input input stream\n    * @throws IOException\n    */\n+\n   public void read(DataInputStream input) throws IOException {\n     rowId = input.readInt();\n     offset = input.readLong();\n@@ -102,6 +107,7 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n+\n   public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n     rowJsonObject.put(\"rowId\", rowId);\n     rowJsonObject.put(\"offset\", offset);\n@@ -115,6 +121,7 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n+\n   public void read(JSONObject jsonObject) throws IOException, JSONException {\n     rowId = jsonObject.getInt(\"rowId\");\n     offset = jsonObject.getInt(\"offset\");\n@@ -126,6 +133,7 @@ public class RowPartitionMeta {\n    * Get the row id for the row split\n    * @return row id\n    */\n+\n   public int getRowId() {\n     return rowId;\n   }\n@@ -134,6 +142,7 @@ public class RowPartitionMeta {\n    * Set the row id for the row split\n    * @param  rowId row id\n    */\n+\n   public void setRowId(int rowId) {\n     this.rowId = rowId;\n   }\n@@ -142,6 +151,7 @@ public class RowPartitionMeta {\n    * Get the data offset in the saved file for this row split\n    * @return the data offset in the saved file for this row split\n    */\n+\n   public long getOffset() {\n     return offset;\n   }\n@@ -150,6 +160,7 @@ public class RowPartitionMeta {\n    * Set the data offset in the saved file for this row split\n    * @param offset the data offset in the saved file for this row split\n    */\n+\n   public void setOffset(long offset) {\n     this.offset = offset;\n   }\n@@ -158,6 +169,7 @@ public class RowPartitionMeta {\n    * Get save element number\n    * @return save element number\n    */\n+\n   public int getElementNum() {\n     return elementNum;\n   }\n@@ -166,6 +178,7 @@ public class RowPartitionMeta {\n    * Set save element number\n    * @param elementNum save element number\n    */\n+\n   public void setElementNum(int elementNum) {\n     this.elementNum = elementNum;\n   }\n@@ -174,6 +187,7 @@ public class RowPartitionMeta {\n    * Get save type\n    * @return save type\n    */\n+\n   public int getSaveType() {\n     return saveType;\n   }\n@@ -182,13 +196,14 @@ public class RowPartitionMeta {\n    * Set save type\n    * @param saveType save type\n    */\n+\n   public void setSaveType(int saveType) {\n     this.saveType = saveType;\n   }\n \n-\n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+  @Override\n+  public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
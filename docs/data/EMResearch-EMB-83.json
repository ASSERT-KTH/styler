{
    "project_name": "EMResearch-EMB",
    "error_id": "83",
    "information": {
        "errors": [
            {
                "line": "74",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 144).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  protected String getLongMessageString() {\n    return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n  }\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/83/PortugueseWrongWordInContextRule.java\nindex b6e96bcbd47..c9313dd1b29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/83/PortugueseWrongWordInContextRule.java\n@@ -1,6 +1,6 @@\n-/* LanguageTool, a natural language style checker \n+/* LanguageTool, a natural language style checker\n  * Copyright (C) 2012 Markus Brenneis\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -20,6 +20,7 @@\n  * @since 3.6\n  *\n  */\n+\n package org.languagetool.rules.pt;\n \n import java.util.ResourceBundle;\n@@ -30,48 +31,48 @@ import org.languagetool.rules.ITSIssueType;\n import org.languagetool.rules.WrongWordInContextRule;\n \n public class PortugueseWrongWordInContextRule extends WrongWordInContextRule {\n-  \n-  public PortugueseWrongWordInContextRule(ResourceBundle messages) {\n-    super(messages);\n-    super.setCategory(Categories.SEMANTICS.getCategory(messages));\n-    setLocQualityIssueType(ITSIssueType.Grammar);\n-    addExamplePair(Example.wrong(\"O acidente <marker>infringiu</marker> grandes danos.\"),\n-                   Example.fixed(\"O acidente <marker>infligiu</marker> grandes danos.\"));\n-  }\n-  \n-  @Override\n-  protected String getCategoryString() {\n-    return \"Confus\u00e3o de Palavras\";\n-  }\n-  \n-  @Override\n-  public String getId() {\n-    return \"PORTUGUESE_WRONG_WORD_IN_CONTEXT\";\n-  }\n-  \n-  @Override\n-  public String getDescription() {\n-    return \"Confus\u00e3o de palavra dentro do contexto (p.ex. infligir/infringir, etc.)\";\n-  }\n-  \n-  @Override\n-  protected String getFilename() {\n-    return \"/pt/wrongWordInContext.txt\";\n-  }\n-  \n-  @Override\n-  protected String getMessageString() {\n-    return \"Pretende dizer <suggestion>$SUGGESTION</suggestion> em vez de $WRONGWORD?\";\n-  }\n-  \n-  @Override \n-  protected String getShortMessageString() {\n-    return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n-  }\n-  \n-  @Override\n-  protected String getLongMessageString() {\n-    return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n-  }\n+\n+    public PortugueseWrongWordInContextRule(ResourceBundle messages) {\n+        super(messages);\n+        super.setCategory(Categories.SEMANTICS.getCategory(messages));\n+        setLocQualityIssueType(ITSIssueType.Grammar);\n+        addExamplePair(Example.wrong(\"O acidente <marker>infringiu</marker> grandes danos.\"),\n+            Example.fixed(\"O acidente <marker>infligiu</marker> grandes danos.\"));\n+    }\n+\n+    @Override\n+    protected String getCategoryString() {\n+        return \"Confus\u00e3o de Palavras\";\n+    }\n+\n+    @Override\n+    public String getId() {\n+        return \"PORTUGUESE_WRONG_WORD_IN_CONTEXT\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Confus\u00e3o de palavra dentro do contexto (p.ex. infligir/infringir, etc.)\";\n+    }\n+\n+    @Override\n+    protected String getFilename() {\n+        return \"/pt/wrongWordInContext.txt\";\n+    }\n+\n+    @Override\n+    protected String getMessageString() {\n+        return \"Pretende dizer <suggestion>$SUGGESTION</suggestion> em vez de $WRONGWORD?\";\n+    }\n+\n+    @Override\n+    protected String getShortMessageString() {\n+        return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n+    }\n+\n+    @Override\n+    protected String getLongMessageString() {\n+        return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n+    }\n \n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/83/PortugueseWrongWordInContextRule.java\nindex b6e96bcbd47..87cb2802b8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/83/PortugueseWrongWordInContextRule.java\n@@ -64,9 +64,9 @@ public class PortugueseWrongWordInContextRule extends WrongWordInContextRule {\n     return \"Pretende dizer <suggestion>$SUGGESTION</suggestion> em vez de $WRONGWORD?\";\n   }\n   \n-  @Override \n-  protected String getShortMessageString() {\n-    return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n+  @Override\n+protected String getShortMessageString() {\n+  return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n   }\n   \n   @Override\n@@ -74,4 +74,4 @@ public class PortugueseWrongWordInContextRule extends WrongWordInContextRule {\n     return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/83/PortugueseWrongWordInContextRule.java\nindex b6e96bcbd47..b6c5d0c9d5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/83/PortugueseWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/83/PortugueseWrongWordInContextRule.java\n@@ -23,55 +23,53 @@\n package org.languagetool.rules.pt;\n \n import java.util.ResourceBundle;\n-\n import org.languagetool.rules.Categories;\n import org.languagetool.rules.Example;\n import org.languagetool.rules.ITSIssueType;\n import org.languagetool.rules.WrongWordInContextRule;\n \n+\n public class PortugueseWrongWordInContextRule extends WrongWordInContextRule {\n-  \n-  public PortugueseWrongWordInContextRule(ResourceBundle messages) {\n+    public PortugueseWrongWordInContextRule(ResourceBundle messages) {\n     super(messages);\n     super.setCategory(Categories.SEMANTICS.getCategory(messages));\n     setLocQualityIssueType(ITSIssueType.Grammar);\n     addExamplePair(Example.wrong(\"O acidente <marker>infringiu</marker> grandes danos.\"),\n                    Example.fixed(\"O acidente <marker>infligiu</marker> grandes danos.\"));\n-  }\n-  \n-  @Override\n-  protected String getCategoryString() {\n-    return \"Confus\u00e3o de Palavras\";\n-  }\n-  \n-  @Override\n-  public String getId() {\n-    return \"PORTUGUESE_WRONG_WORD_IN_CONTEXT\";\n-  }\n-  \n-  @Override\n-  public String getDescription() {\n-    return \"Confus\u00e3o de palavra dentro do contexto (p.ex. infligir/infringir, etc.)\";\n-  }\n-  \n-  @Override\n-  protected String getFilename() {\n-    return \"/pt/wrongWordInContext.txt\";\n-  }\n-  \n-  @Override\n-  protected String getMessageString() {\n-    return \"Pretende dizer <suggestion>$SUGGESTION</suggestion> em vez de $WRONGWORD?\";\n-  }\n-  \n-  @Override \n-  protected String getShortMessageString() {\n-    return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n-  }\n-  \n-  @Override\n-  protected String getLongMessageString() {\n-    return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n-  }\n+    }\n+\n+    @Override\n+    protected String getCategoryString() {\n+        return \"Confus\u00e3o de Palavras\";\n+    }\n+\n+    @Override\n+    public String getId() {\n+        return \"PORTUGUESE_WRONG_WORD_IN_CONTEXT\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Confus\u00e3o de palavra dentro do contexto (p.ex. infligir/infringir, etc.)\";\n+    }\n+\n+    @Override\n+    protected String getFilename() {\n+        return \"/pt/wrongWordInContext.txt\";\n+    }\n+\n+    @Override\n+    protected String getMessageString() {\n+        return \"Pretende dizer <suggestion>$SUGGESTION</suggestion> em vez de $WRONGWORD?\";\n+    }\n+\n+    @Override\n+    protected String getShortMessageString() {\n+        return \"Poss\u00edvel confus\u00e3o de termos. Verifique.\";\n+    }\n \n-}\n+    @Override\n+    protected String getLongMessageString() {\n+        return \"Considere <suggestion>$SUGGESTION</suggestion>, i.e. $EXPLANATION_SUGGESTION, em vez de '$WRONGWORD', i.e. $EXPLANATION_WRONGWORD?\";\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3959",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3959/RotatableCsvReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3959/RotatableCsvReporter.java\nindex 13445afd06d..01c173dfb4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3959/RotatableCsvReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3959/RotatableCsvReporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.output;\n \n import com.codahale.metrics.Clock;\n@@ -48,252 +49,253 @@ import org.neo4j.logging.RotatingFileOutputStreamSupplier;\n \n public class RotatableCsvReporter extends ScheduledReporter\n {\n-    private final Locale locale;\n-    private final Clock clock;\n-    private final File directory;\n-    private final Map<File,CsvRotatableWriter> writers;\n-    private final BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n-\n-    RotatableCsvReporter( MetricRegistry registry, Locale locale, TimeUnit rateUnit, TimeUnit durationUnit, Clock clock,\n-            File directory,\n-            BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator )\n+  private final Locale locale;\n+  private final Clock clock;\n+  private final File directory;\n+  private final Map<File, CsvRotatableWriter> writers;\n+  private final BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n+\n+  RotatableCsvReporter(MetricRegistry registry, Locale locale, TimeUnit rateUnit, TimeUnit durationUnit, Clock clock,\n+                       File directory,\n+                       BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier> fileSupplierStreamCreator)\n+  {\n+    super(registry, \"csv-reporter\", MetricFilter.ALL, rateUnit, durationUnit);\n+    this.locale = locale;\n+    this.clock = clock;\n+    this.directory = directory;\n+    this.fileSupplierStreamCreator = fileSupplierStreamCreator;\n+    this.writers = new ConcurrentHashMap<>();\n+  }\n+\n+  public static Builder forRegistry(MetricRegistry registry)\n+  {\n+    return new Builder(registry);\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    super.stop();\n+    writers.values().forEach(CsvRotatableWriter::close);\n+  }\n+\n+  @Override\n+  public void report(SortedMap<String, Gauge> gauges, SortedMap<String, Counter> counters,\n+                     SortedMap<String, Histogram> histograms, SortedMap<String, Meter> meters, SortedMap<String, Timer> timers)\n+  {\n+    final long timestamp = TimeUnit.MILLISECONDS.toSeconds(clock.getTime());\n+\n+    for (Map.Entry<String, Gauge> entry : gauges.entrySet())\n     {\n-        super( registry, \"csv-reporter\", MetricFilter.ALL, rateUnit, durationUnit );\n-        this.locale = locale;\n-        this.clock = clock;\n-        this.directory = directory;\n-        this.fileSupplierStreamCreator = fileSupplierStreamCreator;\n-        this.writers = new ConcurrentHashMap<>();\n+      reportGauge(timestamp, entry.getKey(), entry.getValue());\n     }\n \n-    public static Builder forRegistry( MetricRegistry registry )\n+    for (Map.Entry<String, Counter> entry : counters.entrySet())\n     {\n-        return new Builder( registry );\n+      reportCounter(timestamp, entry.getKey(), entry.getValue());\n     }\n \n-    @Override\n-    public void stop()\n+    for (Map.Entry<String, Histogram> entry : histograms.entrySet())\n     {\n-        super.stop();\n-        writers.values().forEach( CsvRotatableWriter::close );\n+      reportHistogram(timestamp, entry.getKey(), entry.getValue());\n     }\n \n-    @Override\n-    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n+    for (Map.Entry<String, Meter> entry : meters.entrySet())\n     {\n-        final long timestamp = TimeUnit.MILLISECONDS.toSeconds( clock.getTime() );\n-\n-        for ( Map.Entry<String,Gauge> entry : gauges.entrySet() )\n-        {\n-            reportGauge( timestamp, entry.getKey(), entry.getValue() );\n-        }\n-\n-        for ( Map.Entry<String,Counter> entry : counters.entrySet() )\n-        {\n-            reportCounter( timestamp, entry.getKey(), entry.getValue() );\n-        }\n-\n-        for ( Map.Entry<String,Histogram> entry : histograms.entrySet() )\n-        {\n-            reportHistogram( timestamp, entry.getKey(), entry.getValue() );\n-        }\n-\n-        for ( Map.Entry<String,Meter> entry : meters.entrySet() )\n-        {\n-            reportMeter( timestamp, entry.getKey(), entry.getValue() );\n-        }\n-\n-        for ( Map.Entry<String,Timer> entry : timers.entrySet() )\n-        {\n-            reportTimer( timestamp, entry.getKey(), entry.getValue() );\n-        }\n+      reportMeter(timestamp, entry.getKey(), entry.getValue());\n     }\n \n-    private void reportTimer( long timestamp, String name, Timer timer )\n+    for (Map.Entry<String, Timer> entry : timers.entrySet())\n     {\n-        final Snapshot snapshot = timer.getSnapshot();\n-\n-        report( timestamp, name,\n-                \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit,duration_unit\",\n-                \"%d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,calls/%s,%s\", timer.getCount(),\n-                convertDuration( snapshot.getMax() ), convertDuration( snapshot.getMean() ),\n-                convertDuration( snapshot.getMin() ), convertDuration( snapshot.getStdDev() ),\n-                convertDuration( snapshot.getMedian() ), convertDuration( snapshot.get75thPercentile() ),\n-                convertDuration( snapshot.get95thPercentile() ), convertDuration( snapshot.get98thPercentile() ),\n-                convertDuration( snapshot.get99thPercentile() ), convertDuration( snapshot.get999thPercentile() ),\n-                convertRate( timer.getMeanRate() ), convertRate( timer.getOneMinuteRate() ),\n-                convertRate( timer.getFiveMinuteRate() ), convertRate( timer.getFifteenMinuteRate() ), getRateUnit(),\n-                getDurationUnit() );\n+      reportTimer(timestamp, entry.getKey(), entry.getValue());\n     }\n-\n-    private void reportMeter( long timestamp, String name, Meter meter )\n+  }\n+\n+  private void reportTimer(long timestamp, String name, Timer timer)\n+  {\n+    final Snapshot snapshot = timer.getSnapshot();\n+\n+    report(timestamp, name,\n+        \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit,duration_unit\",\n+        \"%d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,calls/%s,%s\", timer.getCount(),\n+        convertDuration(snapshot.getMax()), convertDuration(snapshot.getMean()),\n+        convertDuration(snapshot.getMin()), convertDuration(snapshot.getStdDev()),\n+        convertDuration(snapshot.getMedian()), convertDuration(snapshot.get75thPercentile()),\n+        convertDuration(snapshot.get95thPercentile()), convertDuration(snapshot.get98thPercentile()),\n+        convertDuration(snapshot.get99thPercentile()), convertDuration(snapshot.get999thPercentile()),\n+        convertRate(timer.getMeanRate()), convertRate(timer.getOneMinuteRate()),\n+        convertRate(timer.getFiveMinuteRate()), convertRate(timer.getFifteenMinuteRate()), getRateUnit(),\n+        getDurationUnit());\n+  }\n+\n+  private void reportMeter(long timestamp, String name, Meter meter)\n+  {\n+    report(timestamp, name, \"count,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit\", \"%d,%f,%f,%f,%f,events/%s\",\n+        meter.getCount(), convertRate(meter.getMeanRate()), convertRate(meter.getOneMinuteRate()),\n+        convertRate(meter.getFiveMinuteRate()), convertRate(meter.getFifteenMinuteRate()), getRateUnit());\n+  }\n+\n+  private void reportHistogram(long timestamp, String name, Histogram histogram)\n+  {\n+    final Snapshot snapshot = histogram.getSnapshot();\n+\n+    report(timestamp, name, \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999\",\n+        \"%d,%d,%f,%d,%f,%f,%f,%f,%f,%f,%f\", histogram.getCount(), snapshot.getMax(), snapshot.getMean(),\n+        snapshot.getMin(), snapshot.getStdDev(), snapshot.getMedian(), snapshot.get75thPercentile(),\n+        snapshot.get95thPercentile(), snapshot.get98thPercentile(), snapshot.get99thPercentile(),\n+        snapshot.get999thPercentile());\n+  }\n+\n+  private void reportCounter(long timestamp, String name, Counter counter)\n+  {\n+    report(timestamp, name, \"count\", \"%d\", counter.getCount());\n+  }\n+\n+  private void reportGauge(long timestamp, String name, Gauge gauge)\n+  {\n+    report(timestamp, name, \"value\", \"%s\", gauge.getValue());\n+  }\n+\n+  private void report(long timestamp, String name, String header, String line, Object... values)\n+  {\n+    File file = new File(directory, name + \".csv\");\n+    CsvRotatableWriter csvRotatableWriter = writers.computeIfAbsent(file,\n+        new RotatingCsvWriterSupplier(header, fileSupplierStreamCreator, writers));\n+    //noinspection SynchronizationOnLocalVariableOrMethodParameter\n+    csvRotatableWriter.writeValues(locale, timestamp, line, values);\n+  }\n+\n+  public static class Builder\n+  {\n+    private final MetricRegistry registry;\n+    private Locale locale;\n+    private TimeUnit rateUnit;\n+    private TimeUnit durationUnit;\n+    private Clock clock;\n+    private BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier>\n+        outputStreamSupplierFactory;\n+\n+    private Builder(MetricRegistry registry)\n     {\n-        report( timestamp, name, \"count,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit\", \"%d,%f,%f,%f,%f,events/%s\",\n-                meter.getCount(), convertRate( meter.getMeanRate() ), convertRate( meter.getOneMinuteRate() ),\n-                convertRate( meter.getFiveMinuteRate() ), convertRate( meter.getFifteenMinuteRate() ), getRateUnit() );\n+      this.registry = registry;\n+      this.locale = Locale.getDefault();\n+      this.rateUnit = TimeUnit.SECONDS;\n+      this.durationUnit = TimeUnit.MILLISECONDS;\n+      this.clock = Clock.defaultClock();\n     }\n \n-    private void reportHistogram( long timestamp, String name, Histogram histogram )\n+    public Builder formatFor(Locale locale)\n     {\n-        final Snapshot snapshot = histogram.getSnapshot();\n-\n-        report( timestamp, name, \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999\",\n-                \"%d,%d,%f,%d,%f,%f,%f,%f,%f,%f,%f\", histogram.getCount(), snapshot.getMax(), snapshot.getMean(),\n-                snapshot.getMin(), snapshot.getStdDev(), snapshot.getMedian(), snapshot.get75thPercentile(),\n-                snapshot.get95thPercentile(), snapshot.get98thPercentile(), snapshot.get99thPercentile(),\n-                snapshot.get999thPercentile() );\n+      this.locale = locale;\n+      return this;\n     }\n \n-    private void reportCounter( long timestamp, String name, Counter counter )\n+    public Builder convertRatesTo(TimeUnit rateUnit)\n     {\n-        report( timestamp, name, \"count\", \"%d\", counter.getCount() );\n+      this.rateUnit = rateUnit;\n+      return this;\n     }\n \n-    private void reportGauge( long timestamp, String name, Gauge gauge )\n+    public Builder convertDurationsTo(TimeUnit durationUnit)\n     {\n-        report( timestamp, name, \"value\", \"%s\", gauge.getValue() );\n+      this.durationUnit = durationUnit;\n+      return this;\n     }\n \n-    private void report( long timestamp, String name, String header, String line, Object... values )\n+    public Builder outputStreamSupplierFactory(\n+        BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier> outputStreamSupplierFactory)\n     {\n-        File file = new File( directory, name + \".csv\" );\n-        CsvRotatableWriter csvRotatableWriter = writers.computeIfAbsent( file,\n-                new RotatingCsvWriterSupplier( header, fileSupplierStreamCreator, writers ) );\n-        //noinspection SynchronizationOnLocalVariableOrMethodParameter\n-        csvRotatableWriter.writeValues( locale, timestamp, line, values );\n+      this.outputStreamSupplierFactory = outputStreamSupplierFactory;\n+      return this;\n     }\n \n-    public static class Builder\n+    /**\n+     * Builds a {@link RotatableCsvReporter} with the given properties, writing {@code .csv} files to the\n+     * given directory.\n+     *\n+     * @param directory the directory in which the {@code .csv} files will be created\n+     * @return a {@link RotatableCsvReporter}\n+     */\n+    public RotatableCsvReporter build(File directory)\n     {\n-        private final MetricRegistry registry;\n-        private Locale locale;\n-        private TimeUnit rateUnit;\n-        private TimeUnit durationUnit;\n-        private Clock clock;\n-        private BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier>\n-                outputStreamSupplierFactory;\n-\n-        private Builder( MetricRegistry registry )\n-        {\n-            this.registry = registry;\n-            this.locale = Locale.getDefault();\n-            this.rateUnit = TimeUnit.SECONDS;\n-            this.durationUnit = TimeUnit.MILLISECONDS;\n-            this.clock = Clock.defaultClock();\n-        }\n-\n-        public Builder formatFor( Locale locale )\n-        {\n-            this.locale = locale;\n-            return this;\n-        }\n-\n-        public Builder convertRatesTo( TimeUnit rateUnit )\n-        {\n-            this.rateUnit = rateUnit;\n-            return this;\n-        }\n+      return new RotatableCsvReporter(registry, locale, rateUnit, durationUnit, clock, directory,\n+          outputStreamSupplierFactory);\n+    }\n+  }\n \n-        public Builder convertDurationsTo( TimeUnit durationUnit )\n-        {\n-            this.durationUnit = durationUnit;\n-            return this;\n-        }\n+  private static class RotatingCsvWriterSupplier implements Function<File, CsvRotatableWriter>\n+  {\n+    private final String header;\n+    private final BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n+    private final Map<File, CsvRotatableWriter> writers;\n \n-        public Builder outputStreamSupplierFactory(\n-                BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> outputStreamSupplierFactory )\n-        {\n-            this.outputStreamSupplierFactory = outputStreamSupplierFactory;\n-            return this;\n-        }\n+    RotatingCsvWriterSupplier(String header,\n+                              BiFunction<File, RotatingFileOutputStreamSupplier.RotationListener, RotatingFileOutputStreamSupplier> fileSupplierStreamCreator,\n+                              Map<File, CsvRotatableWriter> writers)\n+    {\n+      this.header = header;\n+      this.fileSupplierStreamCreator = fileSupplierStreamCreator;\n+      this.writers = writers;\n+    }\n \n-        /**\n-         * Builds a {@link RotatableCsvReporter} with the given properties, writing {@code .csv} files to the\n-         * given directory.\n-         *\n-         * @param directory the directory in which the {@code .csv} files will be created\n-         * @return a {@link RotatableCsvReporter}\n-         */\n-        public RotatableCsvReporter build( File directory )\n-        {\n-            return new RotatableCsvReporter( registry, locale, rateUnit, durationUnit, clock, directory,\n-                    outputStreamSupplierFactory );\n-        }\n+    @Override\n+    public CsvRotatableWriter apply(File file)\n+    {\n+      RotatingFileOutputStreamSupplier outputStreamSupplier =\n+          fileSupplierStreamCreator.apply(file, new HeaderWriterRotationListener());\n+      PrintWriter printWriter = createWriter(outputStreamSupplier.get());\n+      CsvRotatableWriter writer = new CsvRotatableWriter(printWriter, outputStreamSupplier);\n+      writeHeader(printWriter, header);\n+      return writer;\n     }\n \n-    private static class RotatingCsvWriterSupplier implements Function<File,CsvRotatableWriter>\n+    private class HeaderWriterRotationListener extends RotatingFileOutputStreamSupplier.RotationListener\n     {\n-        private final String header;\n-        private final BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n-        private final Map<File,CsvRotatableWriter> writers;\n \n-        RotatingCsvWriterSupplier( String header,\n-                BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator,\n-                Map<File,CsvRotatableWriter> writers )\n+      @Override\n+      public void rotationCompleted(OutputStream out)\n+      {\n+        super.rotationCompleted(out);\n+        try (PrintWriter writer = createWriter(out))\n         {\n-            this.header = header;\n-            this.fileSupplierStreamCreator = fileSupplierStreamCreator;\n-            this.writers = writers;\n+          writeHeader(writer, header);\n         }\n+      }\n+    }\n \n-        @Override\n-        public CsvRotatableWriter apply( File file )\n-        {\n-            RotatingFileOutputStreamSupplier outputStreamSupplier =\n-                    fileSupplierStreamCreator.apply( file, new HeaderWriterRotationListener() );\n-            PrintWriter printWriter = createWriter( outputStreamSupplier.get() );\n-            CsvRotatableWriter writer = new CsvRotatableWriter( printWriter, outputStreamSupplier );\n-            writeHeader( printWriter, header );\n-            return writer;\n-        }\n+    private static PrintWriter createWriter(OutputStream outputStream)\n+    {\n+      return new PrintWriter(new OutputStreamWriter(outputStream, StandardCharsets.UTF_8));\n+    }\n \n-        private class HeaderWriterRotationListener extends RotatingFileOutputStreamSupplier.RotationListener\n-        {\n+    private static void writeHeader(PrintWriter printWriter, String header)\n+    {\n+      printWriter.println(\"t,\" + header);\n+      printWriter.flush();\n+    }\n+  }\n \n-            @Override\n-            public void rotationCompleted( OutputStream out )\n-            {\n-                super.rotationCompleted( out );\n-                try ( PrintWriter writer = createWriter( out ) )\n-                {\n-                    writeHeader( writer, header );\n-                }\n-            }\n-        }\n-        private static PrintWriter createWriter( OutputStream outputStream )\n-        {\n-            return new PrintWriter( new OutputStreamWriter( outputStream, StandardCharsets.UTF_8 ) );\n-        }\n+  private static class CsvRotatableWriter\n+  {\n+    private final PrintWriter printWriter;\n+    private final RotatingFileOutputStreamSupplier streamSupplier;\n \n-        private static void writeHeader( PrintWriter printWriter, String header )\n-        {\n-            printWriter.println( \"t,\" + header );\n-            printWriter.flush();\n-        }\n+    CsvRotatableWriter(PrintWriter printWriter, RotatingFileOutputStreamSupplier streamSupplier)\n+    {\n+      this.printWriter = printWriter;\n+      this.streamSupplier = streamSupplier;\n     }\n \n-    private static class CsvRotatableWriter\n+    void close()\n     {\n-        private final PrintWriter printWriter;\n-        private final RotatingFileOutputStreamSupplier streamSupplier;\n-\n-        CsvRotatableWriter( PrintWriter printWriter, RotatingFileOutputStreamSupplier streamSupplier )\n-        {\n-            this.printWriter = printWriter;\n-            this.streamSupplier = streamSupplier;\n-        }\n-\n-        void close()\n-        {\n-            IOUtils.closeAllSilently( printWriter, streamSupplier );\n-        }\n+      IOUtils.closeAllSilently(printWriter, streamSupplier);\n+    }\n \n-        synchronized void writeValues( Locale locale, long timestamp, String line, Object[] values )\n-        {\n-            streamSupplier.get();\n-            printWriter.printf( locale, String.format( locale, \"%d,%s%n\", timestamp, line ), values );\n-            printWriter.flush();\n-        }\n+    synchronized void writeValues(Locale locale, long timestamp, String line, Object[] values)\n+    {\n+      streamSupplier.get();\n+      printWriter.printf(locale, String.format(locale, \"%d,%s%n\", timestamp, line), values);\n+      printWriter.flush();\n     }\n+  }\n }\n",
            "diff_size": 317
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 223).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 637).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 399).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3959/RotatableCsvReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3959/RotatableCsvReporter.java\nindex 13445afd06d..e035aa07ef3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3959/RotatableCsvReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3959/RotatableCsvReporter.java\n@@ -55,8 +55,7 @@ public class RotatableCsvReporter extends ScheduledReporter\n     private final BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n \n     RotatableCsvReporter( MetricRegistry registry, Locale locale, TimeUnit rateUnit, TimeUnit durationUnit, Clock clock,\n-            File directory,\n-            BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator )\n+            File directory, BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator )\n     {\n         super( registry, \"csv-reporter\", MetricFilter.ALL, rateUnit, durationUnit );\n         this.locale = locale;\n@@ -79,12 +78,10 @@ public class RotatableCsvReporter extends ScheduledReporter\n     }\n \n     @Override\n-    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n+    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters, SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n     {\n         final long timestamp = TimeUnit.MILLISECONDS.toSeconds( clock.getTime() );\n-\n-        for ( Map.Entry<String,Gauge> entry : gauges.entrySet() )\n+for ( Map.Entry<String,Gauge> entry : gauges.entrySet() )\n         {\n             reportGauge( timestamp, entry.getKey(), entry.getValue() );\n         }\n@@ -114,35 +111,22 @@ public class RotatableCsvReporter extends ScheduledReporter\n     {\n         final Snapshot snapshot = timer.getSnapshot();\n \n-        report( timestamp, name,\n-                \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit,duration_unit\",\n-                \"%d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,calls/%s,%s\", timer.getCount(),\n-                convertDuration( snapshot.getMax() ), convertDuration( snapshot.getMean() ),\n-                convertDuration( snapshot.getMin() ), convertDuration( snapshot.getStdDev() ),\n-                convertDuration( snapshot.getMedian() ), convertDuration( snapshot.get75thPercentile() ),\n-                convertDuration( snapshot.get95thPercentile() ), convertDuration( snapshot.get98thPercentile() ),\n-                convertDuration( snapshot.get99thPercentile() ), convertDuration( snapshot.get999thPercentile() ),\n-                convertRate( timer.getMeanRate() ), convertRate( timer.getOneMinuteRate() ),\n-                convertRate( timer.getFiveMinuteRate() ), convertRate( timer.getFifteenMinuteRate() ), getRateUnit(),\n+        report( timestamp, name, \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit,duration_unit\", \"%d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,calls/%s,%s\", timer.getCount(),\n+                convertDuration( snapshot.getMax() ), convertDuration( snapshot.getMean() ), convertDuration( snapshot.getMin() ), convertDuration( snapshot.getStdDev() ), convertDuration( snapshot.getMedian() ), convertDuration( snapshot.get75thPercentile() ), convertDuration( snapshot.get95thPercentile() ), convertDuration( snapshot.get98thPercentile() ), convertDuration( snapshot.get99thPercentile() ), convertDuration( snapshot.get999thPercentile() ), convertRate( timer.getMeanRate() ), convertRate( timer.getOneMinuteRate() ), convertRate( timer.getFiveMinuteRate() ), convertRate( timer.getFifteenMinuteRate() ), getRateUnit(),\n                 getDurationUnit() );\n     }\n \n     private void reportMeter( long timestamp, String name, Meter meter )\n     {\n         report( timestamp, name, \"count,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit\", \"%d,%f,%f,%f,%f,events/%s\",\n-                meter.getCount(), convertRate( meter.getMeanRate() ), convertRate( meter.getOneMinuteRate() ),\n-                convertRate( meter.getFiveMinuteRate() ), convertRate( meter.getFifteenMinuteRate() ), getRateUnit() );\n+                meter.getCount(), convertRate( meter.getMeanRate() ), convertRate( meter.getOneMinuteRate() ), convertRate( meter.getFiveMinuteRate() ), convertRate( meter.getFifteenMinuteRate() ), getRateUnit() );\n     }\n \n     private void reportHistogram( long timestamp, String name, Histogram histogram )\n     {\n         final Snapshot snapshot = histogram.getSnapshot();\n \n-        report( timestamp, name, \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999\",\n-                \"%d,%d,%f,%d,%f,%f,%f,%f,%f,%f,%f\", histogram.getCount(), snapshot.getMax(), snapshot.getMean(),\n-                snapshot.getMin(), snapshot.getStdDev(), snapshot.getMedian(), snapshot.get75thPercentile(),\n-                snapshot.get95thPercentile(), snapshot.get98thPercentile(), snapshot.get99thPercentile(),\n-                snapshot.get999thPercentile() );\n+        report( timestamp, name, \"count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999\", \"%d,%d,%f,%d,%f,%f,%f,%f,%f,%f,%f\", histogram.getCount(), snapshot.getMax(), snapshot.getMean(), snapshot.getMin(), snapshot.getStdDev(), snapshot.getMedian(), snapshot.get75thPercentile(), snapshot.get95thPercentile(), snapshot.get98thPercentile(), snapshot.get99thPercentile(), snapshot.get999thPercentile() );\n     }\n \n     private void reportCounter( long timestamp, String name, Counter counter )\n@@ -158,9 +142,8 @@ public class RotatableCsvReporter extends ScheduledReporter\n     private void report( long timestamp, String name, String header, String line, Object... values )\n     {\n         File file = new File( directory, name + \".csv\" );\n-        CsvRotatableWriter csvRotatableWriter = writers.computeIfAbsent( file,\n-                new RotatingCsvWriterSupplier( header, fileSupplierStreamCreator, writers ) );\n-        //noinspection SynchronizationOnLocalVariableOrMethodParameter\n+        CsvRotatableWriter csvRotatableWriter = writers.computeIfAbsent( file, new RotatingCsvWriterSupplier( header, fileSupplierStreamCreator, writers ) );\n+    //noinspection SynchronizationOnLocalVariableOrMethodParameter\n         csvRotatableWriter.writeValues( locale, timestamp, line, values );\n     }\n \n@@ -171,10 +154,9 @@ public class RotatableCsvReporter extends ScheduledReporter\n         private TimeUnit rateUnit;\n         private TimeUnit durationUnit;\n         private Clock clock;\n-        private BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier>\n-                outputStreamSupplierFactory;\n+        private BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> outputStreamSupplierFactory;\n \n-        private Builder( MetricRegistry registry )\n+private Builder( MetricRegistry registry )\n         {\n             this.registry = registry;\n             this.locale = Locale.getDefault();\n@@ -201,8 +183,7 @@ public class RotatableCsvReporter extends ScheduledReporter\n             return this;\n         }\n \n-        public Builder outputStreamSupplierFactory(\n-                BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> outputStreamSupplierFactory )\n+        public Builder outputStreamSupplierFactory( BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> outputStreamSupplierFactory )\n         {\n             this.outputStreamSupplierFactory = outputStreamSupplierFactory;\n             return this;\n@@ -219,7 +200,7 @@ public class RotatableCsvReporter extends ScheduledReporter\n         {\n             return new RotatableCsvReporter( registry, locale, rateUnit, durationUnit, clock, directory,\n                     outputStreamSupplierFactory );\n-        }\n+    }\n     }\n \n     private static class RotatingCsvWriterSupplier implements Function<File,CsvRotatableWriter>\n@@ -228,9 +209,7 @@ public class RotatableCsvReporter extends ScheduledReporter\n         private final BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator;\n         private final Map<File,CsvRotatableWriter> writers;\n \n-        RotatingCsvWriterSupplier( String header,\n-                BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator,\n-                Map<File,CsvRotatableWriter> writers )\n+        RotatingCsvWriterSupplier( String header, BiFunction<File,RotatingFileOutputStreamSupplier.RotationListener,RotatingFileOutputStreamSupplier> fileSupplierStreamCreator, Map<File,CsvRotatableWriter> writers )\n         {\n             this.header = header;\n             this.fileSupplierStreamCreator = fileSupplierStreamCreator;\n@@ -240,9 +219,8 @@ public class RotatableCsvReporter extends ScheduledReporter\n         @Override\n         public CsvRotatableWriter apply( File file )\n         {\n-            RotatingFileOutputStreamSupplier outputStreamSupplier =\n-                    fileSupplierStreamCreator.apply( file, new HeaderWriterRotationListener() );\n-            PrintWriter printWriter = createWriter( outputStreamSupplier.get() );\n+            RotatingFileOutputStreamSupplier outputStreamSupplier = fileSupplierStreamCreator.apply( file, new HeaderWriterRotationListener() );\n+PrintWriter printWriter = createWriter( outputStreamSupplier.get() );\n             CsvRotatableWriter writer = new CsvRotatableWriter( printWriter, outputStreamSupplier );\n             writeHeader( printWriter, header );\n             return writer;\n@@ -251,7 +229,7 @@ public class RotatableCsvReporter extends ScheduledReporter\n         private class HeaderWriterRotationListener extends RotatingFileOutputStreamSupplier.RotationListener\n         {\n \n-            @Override\n+@Override\n             public void rotationCompleted( OutputStream out )\n             {\n                 super.rotationCompleted( out );\n@@ -261,7 +239,8 @@ public class RotatableCsvReporter extends ScheduledReporter\n                 }\n             }\n         }\n-        private static PrintWriter createWriter( OutputStream outputStream )\n+\n+private static PrintWriter createWriter( OutputStream outputStream )\n         {\n             return new PrintWriter( new OutputStreamWriter( outputStream, StandardCharsets.UTF_8 ) );\n         }\n@@ -296,4 +275,4 @@ public class RotatableCsvReporter extends ScheduledReporter\n             printWriter.flush();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
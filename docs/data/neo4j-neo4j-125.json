{
    "project_name": "neo4j-neo4j",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/125/IndexTxStateUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/125/IndexTxStateUpdater.java\nindex d419ec72c4c..89f262a51ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/125/IndexTxStateUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/125/IndexTxStateUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -54,7 +55,7 @@ public class IndexTxStateUpdater\n \n     // We can use the StorageReader directly instead of the SchemaReadOps, because we know that in transactions\n     // where this class is needed we will never have index changes.\n-    public IndexTxStateUpdater( StorageReader storageReader, Read read, IndexingService indexingService )\n+    public IndexTxStateUpdater(StorageReader storageReader, Read read, IndexingService indexingService)\n     {\n         this.storageReader = storageReader;\n         this.read = read;\n@@ -72,78 +73,78 @@ public class IndexTxStateUpdater\n     /**\n      * A label has been changed, figure out what updates are needed to tx state.\n      *\n-     * @param labelId The id of the changed label\n+     * @param labelId                The id of the changed label\n      * @param existingPropertyKeyIds all property key ids the node has, sorted by id\n-     * @param node cursor to the node where the change was applied\n-     * @param propertyCursor cursor to the properties of node\n-     * @param changeType The type of change event\n+     * @param node                   cursor to the node where the change was applied\n+     * @param propertyCursor         cursor to the properties of node\n+     * @param changeType             The type of change event\n      */\n-    void onLabelChange( int labelId, int[] existingPropertyKeyIds, NodeCursor node, PropertyCursor propertyCursor, LabelChangeType changeType )\n+    void onLabelChange(int labelId, int[] existingPropertyKeyIds, NodeCursor node, PropertyCursor propertyCursor, LabelChangeType changeType)\n     {\n         assert noSchemaChangedInTx();\n \n         // Check all indexes of the changed label\n-        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated( new long[]{labelId}, existingPropertyKeyIds, NODE );\n-        if ( !indexes.isEmpty() )\n+        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated(new long[] {labelId}, existingPropertyKeyIds, NODE);\n+        if (!indexes.isEmpty())\n         {\n             MutableIntObjectMap<Value> materializedProperties = IntObjectMaps.mutable.empty();\n-            for ( IndexDescriptor index : indexes )\n+            for (IndexDescriptor index : indexes)\n             {\n                 MemoryTracker memoryTracker = read.txState().memoryTracker();\n                 int[] indexPropertyIds = index.schema().getPropertyIds();\n-                Value[] values = getValueTuple( new NodeCursorWrapper( node ), propertyCursor, NO_SUCH_PROPERTY_KEY, NO_VALUE, indexPropertyIds,\n-                        materializedProperties, memoryTracker );\n-                ValueTuple valueTuple = ValueTuple.of( values );\n-                memoryTracker.allocateHeap( valueTuple.getShallowSize() );\n-                switch ( changeType )\n+                Value[] values = getValueTuple(new NodeCursorWrapper(node), propertyCursor, NO_SUCH_PROPERTY_KEY, NO_VALUE, indexPropertyIds,\n+                  materializedProperties, memoryTracker);\n+                ValueTuple valueTuple = ValueTuple.of(values);\n+                memoryTracker.allocateHeap(valueTuple.getShallowSize());\n+                switch (changeType)\n                 {\n-                case ADDED_LABEL:\n-                    indexingService.validateBeforeCommit( index, values, node.nodeReference() );\n-                    read.txState().indexDoUpdateEntry( index.schema(), node.nodeReference(), null, valueTuple );\n-                    break;\n-                case REMOVED_LABEL:\n-                    read.txState().indexDoUpdateEntry( index.schema(), node.nodeReference(), valueTuple, null );\n-                    break;\n-                default:\n-                    throw new IllegalStateException( changeType + \" is not a supported event\" );\n+                    case ADDED_LABEL:\n+                        indexingService.validateBeforeCommit(index, values, node.nodeReference());\n+                        read.txState().indexDoUpdateEntry(index.schema(), node.nodeReference(), null, valueTuple);\n+                        break;\n+                    case REMOVED_LABEL:\n+                        read.txState().indexDoUpdateEntry(index.schema(), node.nodeReference(), valueTuple, null);\n+                        break;\n+                    default:\n+                        throw new IllegalStateException(changeType + \" is not a supported event\");\n                 }\n             }\n         }\n     }\n \n-    void onPropertyAdd( NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value value )\n+    void onPropertyAdd(NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value value)\n     {\n-        onPropertyAdd( new NodeCursorWrapper( node ), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, value );\n+        onPropertyAdd(new NodeCursorWrapper(node), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, value);\n     }\n \n-    void onPropertyRemove( NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value value )\n+    void onPropertyRemove(NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value value)\n     {\n-        onPropertyRemove( new NodeCursorWrapper( node ), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, value );\n+        onPropertyRemove(new NodeCursorWrapper(node), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, value);\n     }\n \n-    void onPropertyChange( NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value beforeValue,\n-            Value afterValue )\n+    void onPropertyChange(NodeCursor node, PropertyCursor propertyCursor, long[] labels, int propertyKeyId, int[] existingPropertyKeyIds, Value beforeValue,\n+                          Value afterValue)\n     {\n-        onPropertyChange( new NodeCursorWrapper( node ), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, beforeValue, afterValue );\n+        onPropertyChange(new NodeCursorWrapper(node), propertyCursor, labels, propertyKeyId, existingPropertyKeyIds, beforeValue, afterValue);\n     }\n \n-    void onPropertyAdd( RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value value )\n+    void onPropertyAdd(RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n+                       Value value)\n     {\n-        onPropertyAdd( new RelationshipCursorWrapper( relationship ), propertyCursor, new long[]{type}, propertyKeyId, existingPropertyKeyIds, value );\n+        onPropertyAdd(new RelationshipCursorWrapper(relationship), propertyCursor, new long[] {type}, propertyKeyId, existingPropertyKeyIds, value);\n     }\n \n-    void onPropertyRemove( RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value value )\n+    void onPropertyRemove(RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n+                          Value value)\n     {\n-        onPropertyRemove( new RelationshipCursorWrapper( relationship ), propertyCursor, new long[]{type}, propertyKeyId, existingPropertyKeyIds, value );\n+        onPropertyRemove(new RelationshipCursorWrapper(relationship), propertyCursor, new long[] {type}, propertyKeyId, existingPropertyKeyIds, value);\n     }\n \n-    void onPropertyChange( RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value beforeValue, Value afterValue )\n+    void onPropertyChange(RelationshipScanCursor relationship, PropertyCursor propertyCursor, int type, int propertyKeyId, int[] existingPropertyKeyIds,\n+                          Value beforeValue, Value afterValue)\n     {\n-        onPropertyChange( new RelationshipCursorWrapper( relationship ), propertyCursor, new long[]{type}, propertyKeyId, existingPropertyKeyIds, beforeValue,\n-                afterValue );\n+        onPropertyChange(new RelationshipCursorWrapper(relationship), propertyCursor, new long[] {type}, propertyKeyId, existingPropertyKeyIds, beforeValue,\n+          afterValue);\n     }\n \n     private boolean noSchemaChangedInTx()\n@@ -153,94 +154,94 @@ public class IndexTxStateUpdater\n \n     //PROPERTY CHANGES\n \n-    private void onPropertyAdd( EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value value )\n+    private void onPropertyAdd(EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n+                               Value value)\n     {\n         assert noSchemaChangedInTx();\n-        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated( tokens, propertyKeyId, entity.entityType() );\n-        if ( !indexes.isEmpty() )\n+        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated(tokens, propertyKeyId, entity.entityType());\n+        if (!indexes.isEmpty())\n         {\n             MutableIntObjectMap<Value> materializedProperties = IntObjectMaps.mutable.empty();\n-            SchemaMatcher.onMatchingSchema( indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n-                    index ->\n-                    {\n-                        MemoryTracker memoryTracker = read.txState().memoryTracker();\n-                        SchemaDescriptor schema = index.schema();\n-                        Value[] values = getValueTuple( entity, propertyCursor, propertyKeyId, value, schema.getPropertyIds(), materializedProperties,\n-                                                        memoryTracker );\n-                        indexingService.validateBeforeCommit( index, values, entity.reference() );\n-                        ValueTuple valueTuple = ValueTuple.of( values );\n-                        memoryTracker.allocateHeap( valueTuple.getShallowSize() );\n-                        read.txState().indexDoUpdateEntry( schema, entity.reference(), null, valueTuple );\n-                    } );\n+            SchemaMatcher.onMatchingSchema(indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n+              index ->\n+              {\n+                  MemoryTracker memoryTracker = read.txState().memoryTracker();\n+                  SchemaDescriptor schema = index.schema();\n+                  Value[] values = getValueTuple(entity, propertyCursor, propertyKeyId, value, schema.getPropertyIds(), materializedProperties,\n+                    memoryTracker);\n+                  indexingService.validateBeforeCommit(index, values, entity.reference());\n+                  ValueTuple valueTuple = ValueTuple.of(values);\n+                  memoryTracker.allocateHeap(valueTuple.getShallowSize());\n+                  read.txState().indexDoUpdateEntry(schema, entity.reference(), null, valueTuple);\n+              });\n         }\n     }\n \n-    private void onPropertyRemove( EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value value )\n+    private void onPropertyRemove(EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n+                                  Value value)\n     {\n         assert noSchemaChangedInTx();\n-        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated( tokens, propertyKeyId, entity.entityType() );\n-        if ( !indexes.isEmpty() )\n+        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated(tokens, propertyKeyId, entity.entityType());\n+        if (!indexes.isEmpty())\n         {\n             MutableIntObjectMap<Value> materializedProperties = IntObjectMaps.mutable.empty();\n-            SchemaMatcher.onMatchingSchema( indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n-                    index ->\n-                    {\n-                        MemoryTracker memoryTracker = read.txState().memoryTracker();\n-                        SchemaDescriptor schema = index.schema();\n-                        Value[] values = getValueTuple( entity, propertyCursor, propertyKeyId, value, schema.getPropertyIds(), materializedProperties,\n-                                                        memoryTracker );\n-                        ValueTuple valueTuple = ValueTuple.of( values );\n-                        memoryTracker.allocateHeap( valueTuple.getShallowSize() );\n-                        read.txState().indexDoUpdateEntry( schema, entity.reference(), valueTuple, null );\n-                    } );\n+            SchemaMatcher.onMatchingSchema(indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n+              index ->\n+              {\n+                  MemoryTracker memoryTracker = read.txState().memoryTracker();\n+                  SchemaDescriptor schema = index.schema();\n+                  Value[] values = getValueTuple(entity, propertyCursor, propertyKeyId, value, schema.getPropertyIds(), materializedProperties,\n+                    memoryTracker);\n+                  ValueTuple valueTuple = ValueTuple.of(values);\n+                  memoryTracker.allocateHeap(valueTuple.getShallowSize());\n+                  read.txState().indexDoUpdateEntry(schema, entity.reference(), valueTuple, null);\n+              });\n         }\n     }\n \n-    private void onPropertyChange( EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n-            Value beforeValue, Value afterValue )\n+    private void onPropertyChange(EntityCursor entity, PropertyCursor propertyCursor, long[] tokens, int propertyKeyId, int[] existingPropertyKeyIds,\n+                                  Value beforeValue, Value afterValue)\n     {\n         assert noSchemaChangedInTx();\n-        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated( tokens, propertyKeyId, entity.entityType() );\n-        if ( !indexes.isEmpty() )\n+        Collection<IndexDescriptor> indexes = storageReader.indexesGetRelated(tokens, propertyKeyId, entity.entityType());\n+        if (!indexes.isEmpty())\n         {\n             MutableIntObjectMap<Value> materializedProperties = IntObjectMaps.mutable.empty();\n-            SchemaMatcher.onMatchingSchema( indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n-                    index ->\n-                    {\n-                        MemoryTracker memoryTracker = read.txState().memoryTracker();\n-                        SchemaDescriptor schema = index.schema();\n-                        int[] propertyIds = schema.getPropertyIds();\n-                        Value[] valuesAfter =\n-                                getValueTuple( entity, propertyCursor, propertyKeyId, afterValue, propertyIds, materializedProperties, memoryTracker );\n-\n-                        // The valuesBefore tuple is just like valuesAfter, except is has the afterValue instead of the beforeValue\n-                        Value[] valuesBefore = Arrays.copyOf( valuesAfter, valuesAfter.length );\n-                        int k = ArrayUtils.indexOf( propertyIds, propertyKeyId );\n-                        valuesBefore[k] = beforeValue;\n-\n-                        indexingService.validateBeforeCommit( index, valuesAfter, entity.reference() );\n-                        ValueTuple valuesTupleBefore = ValueTuple.of( valuesBefore );\n-                        ValueTuple valuesTupleAfter = ValueTuple.of( valuesAfter );\n-                        memoryTracker.allocateHeap( valuesTupleBefore.getShallowSize() * 2 ); // They are copies and same shallow size\n-                        read.txState().indexDoUpdateEntry( schema, entity.reference(), valuesTupleBefore, valuesTupleAfter );\n-                    } );\n+            SchemaMatcher.onMatchingSchema(indexes.iterator(), propertyKeyId, existingPropertyKeyIds,\n+              index ->\n+              {\n+                  MemoryTracker memoryTracker = read.txState().memoryTracker();\n+                  SchemaDescriptor schema = index.schema();\n+                  int[] propertyIds = schema.getPropertyIds();\n+                  Value[] valuesAfter =\n+                    getValueTuple(entity, propertyCursor, propertyKeyId, afterValue, propertyIds, materializedProperties, memoryTracker);\n+\n+                  // The valuesBefore tuple is just like valuesAfter, except is has the afterValue instead of the beforeValue\n+                  Value[] valuesBefore = Arrays.copyOf(valuesAfter, valuesAfter.length);\n+                  int k = ArrayUtils.indexOf(propertyIds, propertyKeyId);\n+                  valuesBefore[k] = beforeValue;\n+\n+                  indexingService.validateBeforeCommit(index, valuesAfter, entity.reference());\n+                  ValueTuple valuesTupleBefore = ValueTuple.of(valuesBefore);\n+                  ValueTuple valuesTupleAfter = ValueTuple.of(valuesAfter);\n+                  memoryTracker.allocateHeap(valuesTupleBefore.getShallowSize() * 2); // They are copies and same shallow size\n+                  read.txState().indexDoUpdateEntry(schema, entity.reference(), valuesTupleBefore, valuesTupleAfter);\n+              });\n         }\n     }\n \n-    private Value[] getValueTuple( EntityCursor entity, PropertyCursor propertyCursor, int changedPropertyKeyId, Value changedValue, int[] indexPropertyIds,\n-            MutableIntObjectMap<Value> materializedValues, MemoryTracker memoryTracker )\n+    private Value[] getValueTuple(EntityCursor entity, PropertyCursor propertyCursor, int changedPropertyKeyId, Value changedValue, int[] indexPropertyIds,\n+                                  MutableIntObjectMap<Value> materializedValues, MemoryTracker memoryTracker)\n     {\n         Value[] values = new Value[indexPropertyIds.length];\n         int missing = 0;\n \n         // First get whatever values we already have on the stack, like the value change that provoked this update in the first place\n         // and already loaded values that we can get from the map of materialized values.\n-        for ( int k = 0; k < indexPropertyIds.length; k++ )\n+        for (int k = 0; k < indexPropertyIds.length; k++)\n         {\n-            values[k] = indexPropertyIds[k] == changedPropertyKeyId ? changedValue : materializedValues.getIfAbsent( indexPropertyIds[k], () -> NO_VALUE );\n-            if ( values[k] == NO_VALUE )\n+            values[k] = indexPropertyIds[k] == changedPropertyKeyId ? changedValue : materializedValues.getIfAbsent(indexPropertyIds[k], () -> NO_VALUE);\n+            if (values[k] == NO_VALUE)\n             {\n                 missing++;\n             }\n@@ -248,21 +249,21 @@ public class IndexTxStateUpdater\n \n         // If we couldn't get all values that we wanted we need to load from the entity. While we're loading values\n         // we'll place those values in the map so that other index updates from this change can just used them.\n-        if ( missing > 0 )\n+        if (missing > 0)\n         {\n-            entity.properties( propertyCursor );\n-            while ( missing > 0 && propertyCursor.next() )\n+            entity.properties(propertyCursor);\n+            while (missing > 0 && propertyCursor.next())\n             {\n-                int k = ArrayUtils.indexOf( indexPropertyIds, propertyCursor.propertyKey() );\n-                if ( k >= 0 && values[k] == NO_VALUE )\n+                int k = ArrayUtils.indexOf(indexPropertyIds, propertyCursor.propertyKey());\n+                if (k >= 0 && values[k] == NO_VALUE)\n                 {\n                     int propertyKeyId = indexPropertyIds[k];\n                     boolean thisIsTheChangedProperty = propertyKeyId == changedPropertyKeyId;\n                     values[k] = thisIsTheChangedProperty ? changedValue : propertyCursor.propertyValue();\n-                    if ( !thisIsTheChangedProperty )\n+                    if (!thisIsTheChangedProperty)\n                     {\n-                        materializedValues.put( propertyKeyId, values[k] );\n-                        memoryTracker.allocateHeap( values[k].estimatedHeapUsage() );\n+                        materializedValues.put(propertyKeyId, values[k]);\n+                        memoryTracker.allocateHeap(values[k].estimatedHeapUsage());\n                     }\n                     missing--;\n                 }\n@@ -279,7 +280,7 @@ public class IndexTxStateUpdater\n     {\n         long reference();\n \n-        void properties( PropertyCursor cursor );\n+        void properties(PropertyCursor cursor);\n \n         EntityType entityType();\n     }\n@@ -289,7 +290,7 @@ public class IndexTxStateUpdater\n \n         private final NodeCursor node;\n \n-        private NodeCursorWrapper( NodeCursor node )\n+        private NodeCursorWrapper(NodeCursor node)\n         {\n             this.node = node;\n         }\n@@ -301,9 +302,9 @@ public class IndexTxStateUpdater\n         }\n \n         @Override\n-        public void properties( PropertyCursor cursor )\n+        public void properties(PropertyCursor cursor)\n         {\n-            node.properties( cursor );\n+            node.properties(cursor);\n         }\n \n         @Override\n@@ -318,7 +319,7 @@ public class IndexTxStateUpdater\n \n         private final RelationshipScanCursor relationship;\n \n-        private RelationshipCursorWrapper( RelationshipScanCursor relationship )\n+        private RelationshipCursorWrapper(RelationshipScanCursor relationship)\n         {\n             this.relationship = relationship;\n         }\n@@ -330,9 +331,9 @@ public class IndexTxStateUpdater\n         }\n \n         @Override\n-        public void properties( PropertyCursor cursor )\n+        public void properties(PropertyCursor cursor)\n         {\n-            relationship.properties( cursor );\n+            relationship.properties(cursor);\n         }\n \n         @Override\n",
            "diff_size": 116
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
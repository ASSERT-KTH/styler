{
    "project_name": "neo4j-neo4j",
    "error_id": "3370",
    "information": {
        "errors": [
            {
                "line": "212",
                "severity": "error",
                "message": "Line is longer than 160 characters (found 174).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n        long customTransactionTimeout = getTransactionTimeout( headers, log );\n        return transactionFacade.newTransactionHandle( uriScheme, implicitTransaction, loginContext, loginContext.connectionInfo(), memoryTracker, customTransactionTimeout );\n    }\n\n    private Response executeInExistingTransaction( long transactionId, InputEventStream inputEventStream, MemoryTracker memoryTracker,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "63",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "155",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3370/AbstractCypherResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3370/AbstractCypherResource.java\nindex e4fe297576c..638ed29363d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3370/AbstractCypherResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3370/AbstractCypherResource.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher;\n \n import java.net.URI;\n@@ -59,224 +60,223 @@ public abstract class AbstractCypherResource\n     private final Log log;\n     private final String databaseName;\n \n-    AbstractCypherResource( HttpTransactionManager httpTransactionManager, UriInfo uriInfo, MemoryPool memoryPool, Log log, String databaseName )\n+    AbstractCypherResource(HttpTransactionManager httpTransactionManager, UriInfo uriInfo, MemoryPool memoryPool, Log log, String databaseName)\n     {\n         this.httpTransactionManager = httpTransactionManager;\n         this.databaseName = databaseName;\n-        this.uriScheme = new TransactionUriBuilder( dbUri( uriInfo, databaseName ), cypherUri( uriInfo, databaseName ) );\n+        this.uriScheme = new TransactionUriBuilder(dbUri(uriInfo, databaseName), cypherUri(uriInfo, databaseName));\n         this.memoryPool = memoryPool;\n         this.log = log;\n     }\n \n-    protected abstract URI dbUri( UriInfo uriInfo, String databaseName );\n+    protected abstract URI dbUri(UriInfo uriInfo, String databaseName);\n \n-    protected abstract URI cypherUri( UriInfo uriInfo, String databaseName );\n+    protected abstract URI cypherUri(UriInfo uriInfo, String databaseName);\n \n     @POST\n-    public Response executeStatementsInNewTransaction( InputEventStream inputEventStream, @Context HttpServletRequest request, @Context HttpHeaders headers )\n+    public Response executeStatementsInNewTransaction(InputEventStream inputEventStream, @Context HttpServletRequest request, @Context HttpHeaders headers)\n     {\n-        try ( var memoryTracker = createMemoryTracker() )\n+        try (var memoryTracker = createMemoryTracker())\n         {\n-            InputEventStream inputStream = ensureNotNull( inputEventStream );\n+            InputEventStream inputStream = ensureNotNull(inputEventStream);\n \n-            var graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI( databaseName );\n+            var graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI(databaseName);\n             return graphDatabaseAPI.map(\n-                    databaseAPI ->\n-                    {\n-                        if ( isDatabaseNotAvailable( databaseAPI ) )\n-                        {\n-                            return createNonAvailableDatabaseResponse( inputStream.getParameters() );\n-                        }\n-\n-                        memoryTracker.allocateHeap( Invocation.SHALLOW_SIZE );\n-\n-                        final TransactionFacade transactionFacade =\n-                                httpTransactionManager.createTransactionFacade( databaseAPI, memoryTracker );\n-                        TransactionHandle transactionHandle =\n-                                createNewTransactionHandle( transactionFacade, request, headers, memoryTracker, false );\n-\n-                        Invocation invocation =\n-                                new Invocation( log, transactionHandle, uriScheme.txCommitUri( transactionHandle.getId() ), memoryPool, inputStream,\n-                                                false );\n-                        OutputEventStreamImpl outputStream =\n-                                new OutputEventStreamImpl( inputStream.getParameters(), transactionHandle, uriScheme,\n-                                                           invocation::execute );\n-                        return Response.created( transactionHandle.uri() ).entity( outputStream ).build();\n-                    } ).orElse( createNonExistentDatabaseResponse( inputStream.getParameters() ) );\n+              databaseAPI ->\n+              {\n+                  if (isDatabaseNotAvailable(databaseAPI))\n+                  {\n+                      return createNonAvailableDatabaseResponse(inputStream.getParameters());\n+                  }\n+\n+                  memoryTracker.allocateHeap(Invocation.SHALLOW_SIZE);\n+\n+                  final TransactionFacade transactionFacade =\n+                    httpTransactionManager.createTransactionFacade(databaseAPI, memoryTracker);\n+                  TransactionHandle transactionHandle =\n+                    createNewTransactionHandle(transactionFacade, request, headers, memoryTracker, false);\n+\n+                  Invocation invocation =\n+                    new Invocation(log, transactionHandle, uriScheme.txCommitUri(transactionHandle.getId()), memoryPool, inputStream,\n+                      false);\n+                  OutputEventStreamImpl outputStream =\n+                    new OutputEventStreamImpl(inputStream.getParameters(), transactionHandle, uriScheme,\n+                      invocation::execute);\n+                  return Response.created(transactionHandle.uri()).entity(outputStream).build();\n+              }).orElse(createNonExistentDatabaseResponse(inputStream.getParameters()));\n         }\n     }\n \n     @POST\n-    @Path( \"/{id}\" )\n-    public Response executeStatements( @PathParam( \"id\" ) long id, InputEventStream inputEventStream )\n+    @Path(\"/{id}\")\n+    public Response executeStatements(@PathParam(\"id\") long id, InputEventStream inputEventStream)\n     {\n-        try ( var memoryTracker = createMemoryTracker() )\n+        try (var memoryTracker = createMemoryTracker())\n         {\n-            return executeInExistingTransaction( id, inputEventStream, memoryTracker, false );\n+            return executeInExistingTransaction(id, inputEventStream, memoryTracker, false);\n         }\n     }\n \n     @POST\n-    @Path( \"/{id}/commit\" )\n-    public Response commitTransaction( @PathParam( \"id\" ) long id, InputEventStream inputEventStream )\n+    @Path(\"/{id}/commit\")\n+    public Response commitTransaction(@PathParam(\"id\") long id, InputEventStream inputEventStream)\n     {\n-        try ( var memoryTracker = createMemoryTracker() )\n+        try (var memoryTracker = createMemoryTracker())\n         {\n-            return executeInExistingTransaction( id, inputEventStream, memoryTracker, true );\n+            return executeInExistingTransaction(id, inputEventStream, memoryTracker, true);\n         }\n     }\n \n     @POST\n-    @Path( \"/commit\" )\n-    public Response commitNewTransaction( InputEventStream inputEventStream, @Context HttpServletRequest request, @Context HttpHeaders headers )\n+    @Path(\"/commit\")\n+    public Response commitNewTransaction(InputEventStream inputEventStream, @Context HttpServletRequest request, @Context HttpHeaders headers)\n     {\n-        try ( var memoryTracker = createMemoryTracker() )\n+        try (var memoryTracker = createMemoryTracker())\n         {\n-            InputEventStream inputStream = ensureNotNull( inputEventStream );\n+            InputEventStream inputStream = ensureNotNull(inputEventStream);\n \n-            Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI( databaseName );\n+            Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI(databaseName);\n             return graphDatabaseAPI.map(\n-                    databaseAPI ->\n-                    {\n-                        if ( isDatabaseNotAvailable( databaseAPI ) )\n-                        {\n-                            return createNonAvailableDatabaseResponse( inputStream.getParameters() );\n-                        }\n-\n-                        memoryTracker.allocateHeap( Invocation.SHALLOW_SIZE );\n-\n-                        final TransactionFacade transactionFacade = httpTransactionManager.createTransactionFacade( databaseAPI, memoryTracker );\n-                        TransactionHandle transactionHandle = createNewTransactionHandle( transactionFacade, request, headers, memoryTracker, true );\n-\n-                        Invocation invocation = new Invocation( log, transactionHandle, null, memoryPool, inputStream, true );\n-                        OutputEventStreamImpl outputStream =\n-                                new OutputEventStreamImpl( inputStream.getParameters(), transactionHandle, uriScheme,\n-                                                           invocation::execute );\n-                        return Response.ok( outputStream ).build();\n-                    } ).orElse( createNonExistentDatabaseResponse( inputStream.getParameters() ) );\n+              databaseAPI ->\n+              {\n+                  if (isDatabaseNotAvailable(databaseAPI))\n+                  {\n+                      return createNonAvailableDatabaseResponse(inputStream.getParameters());\n+                  }\n+\n+                  memoryTracker.allocateHeap(Invocation.SHALLOW_SIZE);\n+\n+                  final TransactionFacade transactionFacade = httpTransactionManager.createTransactionFacade(databaseAPI, memoryTracker);\n+                  TransactionHandle transactionHandle = createNewTransactionHandle(transactionFacade, request, headers, memoryTracker, true);\n+\n+                  Invocation invocation = new Invocation(log, transactionHandle, null, memoryPool, inputStream, true);\n+                  OutputEventStreamImpl outputStream =\n+                    new OutputEventStreamImpl(inputStream.getParameters(), transactionHandle, uriScheme,\n+                      invocation::execute);\n+                  return Response.ok(outputStream).build();\n+              }).orElse(createNonExistentDatabaseResponse(inputStream.getParameters()));\n         }\n     }\n \n     @DELETE\n-    @Path( \"/{id}\" )\n-    public Response rollbackTransaction( @PathParam( \"id\" ) final long id )\n+    @Path(\"/{id}\")\n+    public Response rollbackTransaction(@PathParam(\"id\") final long id)\n     {\n-        try ( var memoryTracker = createMemoryTracker() )\n+        try (var memoryTracker = createMemoryTracker())\n         {\n-            Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI( databaseName );\n+            Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI(databaseName);\n             return graphDatabaseAPI.map(\n-                    databaseAPI ->\n-                    {\n-                        if ( isDatabaseNotAvailable( databaseAPI ) )\n-                        {\n-                            return createNonAvailableDatabaseResponse( emptyMap() );\n-                        }\n-\n-                        memoryTracker.allocateHeap( RollbackInvocation.SHALLOW_SIZE );\n-\n-                        final TransactionFacade transactionFacade = httpTransactionManager.createTransactionFacade( databaseAPI, memoryTracker );\n-\n-                        TransactionHandle transactionHandle;\n-                        try\n-                        {\n-                            transactionHandle = transactionFacade.terminate( id );\n-                        }\n-                        catch ( TransactionLifecycleException e )\n-                        {\n-                            return invalidTransaction( e, emptyMap() );\n-                        }\n-\n-                        RollbackInvocation invocation = new RollbackInvocation( log, transactionHandle );\n-                        OutputEventStreamImpl outputEventStream =\n-                                new OutputEventStreamImpl( emptyMap(), null, uriScheme, invocation::execute );\n-                        return Response.ok().entity( outputEventStream ).build();\n-                    } ).orElse( createNonExistentDatabaseResponse( emptyMap() ) );\n+              databaseAPI ->\n+              {\n+                  if (isDatabaseNotAvailable(databaseAPI))\n+                  {\n+                      return createNonAvailableDatabaseResponse(emptyMap());\n+                  }\n+\n+                  memoryTracker.allocateHeap(RollbackInvocation.SHALLOW_SIZE);\n+\n+                  final TransactionFacade transactionFacade = httpTransactionManager.createTransactionFacade(databaseAPI, memoryTracker);\n+\n+                  TransactionHandle transactionHandle;\n+                  try\n+                  {\n+                      transactionHandle = transactionFacade.terminate(id);\n+                  } catch (TransactionLifecycleException e)\n+                  {\n+                      return invalidTransaction(e, emptyMap());\n+                  }\n+\n+                  RollbackInvocation invocation = new RollbackInvocation(log, transactionHandle);\n+                  OutputEventStreamImpl outputEventStream =\n+                    new OutputEventStreamImpl(emptyMap(), null, uriScheme, invocation::execute);\n+                  return Response.ok().entity(outputEventStream).build();\n+              }).orElse(createNonExistentDatabaseResponse(emptyMap()));\n         }\n     }\n \n     private MemoryTracker createMemoryTracker()\n     {\n-        return new LocalMemoryTracker( memoryPool, 0, 64, null );\n+        return new LocalMemoryTracker(memoryPool, 0, 64, null);\n     }\n \n-    private static boolean isDatabaseNotAvailable( GraphDatabaseAPI databaseAPI )\n+    private static boolean isDatabaseNotAvailable(GraphDatabaseAPI databaseAPI)\n     {\n-        return !databaseAPI.isAvailable( 0 );\n+        return !databaseAPI.isAvailable(0);\n     }\n \n-    private TransactionHandle createNewTransactionHandle( TransactionFacade transactionFacade, HttpServletRequest request, HttpHeaders headers,\n-                                                          MemoryTracker memoryTracker, boolean implicitTransaction )\n+    private TransactionHandle createNewTransactionHandle(TransactionFacade transactionFacade, HttpServletRequest request, HttpHeaders headers,\n+                                                         MemoryTracker memoryTracker, boolean implicitTransaction)\n     {\n-        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n-        long customTransactionTimeout = getTransactionTimeout( headers, log );\n-        return transactionFacade.newTransactionHandle( uriScheme, implicitTransaction, loginContext, loginContext.connectionInfo(), memoryTracker, customTransactionTimeout );\n+        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest(request);\n+        long customTransactionTimeout = getTransactionTimeout(headers, log);\n+        return transactionFacade\n+          .newTransactionHandle(uriScheme, implicitTransaction, loginContext, loginContext.connectionInfo(), memoryTracker, customTransactionTimeout);\n     }\n \n-    private Response executeInExistingTransaction( long transactionId, InputEventStream inputEventStream, MemoryTracker memoryTracker,\n-                                                   boolean finishWithCommit )\n+    private Response executeInExistingTransaction(long transactionId, InputEventStream inputEventStream, MemoryTracker memoryTracker,\n+                                                  boolean finishWithCommit)\n     {\n-        InputEventStream inputStream = ensureNotNull( inputEventStream );\n+        InputEventStream inputStream = ensureNotNull(inputEventStream);\n \n-        Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI( databaseName );\n+        Optional<GraphDatabaseAPI> graphDatabaseAPI = httpTransactionManager.getGraphDatabaseAPI(databaseName);\n         return graphDatabaseAPI.map(\n-                databaseAPI ->\n-                {\n-                    if ( isDatabaseNotAvailable( databaseAPI ) )\n-                    {\n-                        return createNonAvailableDatabaseResponse( inputStream.getParameters() );\n-                    }\n-\n-                    memoryTracker.allocateHeap( Invocation.SHALLOW_SIZE );\n-\n-                    final TransactionFacade transactionFacade =\n-                            httpTransactionManager.createTransactionFacade( databaseAPI, memoryTracker );\n-\n-                    TransactionHandle transactionHandle;\n-                    try\n-                    {\n-                        transactionHandle = transactionFacade.findTransactionHandle( transactionId );\n-                    }\n-                    catch ( TransactionLifecycleException e )\n-                    {\n-                        return invalidTransaction( e, inputStream.getParameters() );\n-                    }\n-\n-                    Invocation invocation =\n-                            new Invocation( log, transactionHandle, uriScheme.txCommitUri( transactionHandle.getId() ), memoryPool, inputStream,\n-                                            finishWithCommit );\n-                    OutputEventStreamImpl outputEventStream =\n-                            new OutputEventStreamImpl( inputStream.getParameters(), transactionHandle, uriScheme, invocation::execute );\n-\n-                    return Response.ok( outputEventStream ).build();\n-                } ).orElse( createNonExistentDatabaseResponse( inputStream.getParameters() ) );\n+          databaseAPI ->\n+          {\n+              if (isDatabaseNotAvailable(databaseAPI))\n+              {\n+                  return createNonAvailableDatabaseResponse(inputStream.getParameters());\n+              }\n+\n+              memoryTracker.allocateHeap(Invocation.SHALLOW_SIZE);\n+\n+              final TransactionFacade transactionFacade =\n+                httpTransactionManager.createTransactionFacade(databaseAPI, memoryTracker);\n+\n+              TransactionHandle transactionHandle;\n+              try\n+              {\n+                  transactionHandle = transactionFacade.findTransactionHandle(transactionId);\n+              } catch (TransactionLifecycleException e)\n+              {\n+                  return invalidTransaction(e, inputStream.getParameters());\n+              }\n+\n+              Invocation invocation =\n+                new Invocation(log, transactionHandle, uriScheme.txCommitUri(transactionHandle.getId()), memoryPool, inputStream,\n+                  finishWithCommit);\n+              OutputEventStreamImpl outputEventStream =\n+                new OutputEventStreamImpl(inputStream.getParameters(), transactionHandle, uriScheme, invocation::execute);\n+\n+              return Response.ok(outputEventStream).build();\n+          }).orElse(createNonExistentDatabaseResponse(inputStream.getParameters()));\n     }\n \n-    private Response invalidTransaction( TransactionLifecycleException e, Map<String,Object> parameters )\n+    private Response invalidTransaction(TransactionLifecycleException e, Map<String, Object> parameters)\n     {\n-        ErrorInvocation errorInvocation = new ErrorInvocation( e.toNeo4jError() );\n-        return Response.status( Response.Status.NOT_FOUND ).entity(\n-                new OutputEventStreamImpl( parameters, null, uriScheme, errorInvocation::execute ) ).build();\n+        ErrorInvocation errorInvocation = new ErrorInvocation(e.toNeo4jError());\n+        return Response.status(Response.Status.NOT_FOUND).entity(\n+          new OutputEventStreamImpl(parameters, null, uriScheme, errorInvocation::execute)).build();\n     }\n \n-    private static InputEventStream ensureNotNull( InputEventStream inputEventStream )\n+    private static InputEventStream ensureNotNull(InputEventStream inputEventStream)\n     {\n-        return requireNonNullElse( inputEventStream, InputEventStream.EMPTY );\n+        return requireNonNullElse(inputEventStream, InputEventStream.EMPTY);\n     }\n \n-    private Response createNonExistentDatabaseResponse( Map<String,Object> parameters )\n+    private Response createNonExistentDatabaseResponse(Map<String, Object> parameters)\n     {\n-        ErrorInvocation errorInvocation = new ErrorInvocation( new Neo4jError( Status.Database.DatabaseNotFound,\n-                String.format( \"The database requested does not exists. Requested database name: '%s'.\", databaseName ) ) );\n-        return Response.status( Response.Status.NOT_FOUND ).entity(\n-                new OutputEventStreamImpl( parameters, null, uriScheme, errorInvocation::execute ) ).build();\n+        ErrorInvocation errorInvocation = new ErrorInvocation(new Neo4jError(Status.Database.DatabaseNotFound,\n+          String.format(\"The database requested does not exists. Requested database name: '%s'.\", databaseName)));\n+        return Response.status(Response.Status.NOT_FOUND).entity(\n+          new OutputEventStreamImpl(parameters, null, uriScheme, errorInvocation::execute)).build();\n     }\n \n-    private Response createNonAvailableDatabaseResponse( Map<String,Object> parameters )\n+    private Response createNonAvailableDatabaseResponse(Map<String, Object> parameters)\n     {\n-        ErrorInvocation errorInvocation = new ErrorInvocation( new Neo4jError( Status.Database.DatabaseUnavailable,\n-                String.format( \"Requested database is not available. Requested database name: '%s'.\", databaseName ) ) );\n-        return Response.status( Response.Status.NOT_FOUND ).entity(\n-                new OutputEventStreamImpl( parameters, null, uriScheme, errorInvocation::execute ) ).build();\n+        ErrorInvocation errorInvocation = new ErrorInvocation(new Neo4jError(Status.Database.DatabaseUnavailable,\n+          String.format(\"Requested database is not available. Requested database name: '%s'.\", databaseName)));\n+        return Response.status(Response.Status.NOT_FOUND).entity(\n+          new OutputEventStreamImpl(parameters, null, uriScheme, errorInvocation::execute)).build();\n     }\n \n     private static class TransactionUriBuilder implements TransactionUriScheme\n@@ -284,22 +284,22 @@ public abstract class AbstractCypherResource\n         private final URI dbUri;\n         private final URI cypherUri;\n \n-        TransactionUriBuilder( URI dbUri, URI cypherUri )\n+        TransactionUriBuilder(URI dbUri, URI cypherUri)\n         {\n             this.dbUri = dbUri;\n             this.cypherUri = cypherUri;\n         }\n \n         @Override\n-        public URI txUri( long id )\n+        public URI txUri(long id)\n         {\n-            return transactionBuilder( id ).build();\n+            return transactionBuilder(id).build();\n         }\n \n         @Override\n-        public URI txCommitUri( long id )\n+        public URI txCommitUri(long id)\n         {\n-            return transactionBuilder( id ).path( \"/commit\" ).build();\n+            return transactionBuilder(id).path(\"/commit\").build();\n         }\n \n         @Override\n@@ -308,9 +308,9 @@ public abstract class AbstractCypherResource\n             return dbUri;\n         }\n \n-        private UriBuilder transactionBuilder( long id )\n+        private UriBuilder transactionBuilder(long id)\n         {\n-            return UriBuilder.fromUri( cypherUri ).path( \"/\" + id );\n+            return UriBuilder.fromUri(cypherUri).path(\"/\" + id);\n         }\n     }\n }\n",
            "diff_size": 158
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "212",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3370/AbstractCypherResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler_three_grams/3370/AbstractCypherResource.java\nindex e4fe297576c..4463c4f3dff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3370/AbstractCypherResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler_three_grams/3370/AbstractCypherResource.java\n@@ -209,10 +209,14 @@ public abstract class AbstractCypherResource\n     {\n         LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n         long customTransactionTimeout = getTransactionTimeout( headers, log );\n-        return transactionFacade.newTransactionHandle( uriScheme, implicitTransaction, loginContext, loginContext.connectionInfo(), memoryTracker, customTransactionTimeout );\n-    }\n-\n-    private Response executeInExistingTransaction( long transactionId, InputEventStream inputEventStream, MemoryTracker memoryTracker,\n+        returntransactionFacade.newTransactionHandle (uriScheme, implicitTransaction ,loginContext\n+                ,loginContext . connectionInfo(\n+                ) , memoryTracker,\n+customTransactionTimeout\n+        );\n+      }\n+\n+      private private Response executeInExistingTransaction( long transactionId, InputEventStream inputEventStream, MemoryTracker memoryTracker,\n                                                    boolean finishWithCommit )\n     {\n         InputEventStream inputStream = ensureNotNull( inputEventStream );\n",
            "diff_size": 8
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
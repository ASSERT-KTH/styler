{
    "project_name": "codefollower-H2-Research",
    "error_id": "432",
    "information": {
        "errors": [
            {
                "line": "56",
                "column": "40",
                "severity": "warning",
                "message": "'{' at column 40 should have line break after.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n\n    @Override\n    public void removeChildrenAndResources(Session session) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/432/TableSynonym.java\nindex 02955625245..c081686793d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/432/TableSynonym.java\n@@ -53,7 +53,8 @@ public class TableSynonym extends SchemaObjectBase {\n     }\n \n     @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n+    public void rename(String newName) {\n+        throw DbException.getUnsupportedException(\"SYNONYM\"); }\n \n     @Override\n     public void removeChildrenAndResources(Session session) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/432/TableSynonym.java\nindex 02955625245..d43a1e4c84a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/432/TableSynonym.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.table;\n \n import org.h2.command.ddl.CreateSynonymData;\n@@ -18,94 +19,96 @@ import org.h2.schema.SchemaObjectBase;\n  */\n public class TableSynonym extends SchemaObjectBase {\n \n-    private CreateSynonymData data;\n-\n-    /**\n-     * The table the synonym is created for.\n-     */\n-    private Table synonymFor;\n-\n-    public TableSynonym(CreateSynonymData data) {\n-        initSchemaObjectBase(data.schema, data.id, data.synonymName, Trace.TABLE);\n-        this.data = data;\n-    }\n-\n-    /**\n-     * @return the table this is a synonym for\n-     */\n-    public Table getSynonymFor() {\n-        return synonymFor;\n-    }\n-\n-    public void updateData(CreateSynonymData data) {\n-        this.data = data;\n-    }\n-\n-    @Override\n-    public int getType() {\n-        return SYNONYM;\n-    }\n-\n-\n-    @Override\n-    public String getCreateSQLForCopy(Table table, String quotedName) {\n-        return synonymFor.getCreateSQLForCopy(table, quotedName);\n-    }\n-\n-    @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n-\n-    @Override\n-    public void removeChildrenAndResources(Session session) {\n-        synonymFor.removeSynonym(this);\n-        database.removeMeta(session, getId());\n-    }\n-\n-    @Override\n-    public String getCreateSQL() {\n-        return \"CREATE SYNONYM \" + getName() + \" FOR \" + data.synonymForSchema.getName() + \".\" + data.synonymFor;\n-    }\n-\n-    @Override\n-    public String getDropSQL() {\n-        return \"DROP SYNONYM \" + getName();\n-    }\n-\n-    @Override\n-    public void checkRename() {\n-        throw DbException.getUnsupportedException(\"SYNONYM\");\n-    }\n-\n-    /**\n-     * @return the table this synonym is for\n-     */\n-    public String getSynonymForName() {\n-        return data.synonymFor;\n-    }\n-\n-    /**\n-     * @return the schema this synonym is for\n-     */\n-    public Schema getSynonymForSchema() {\n-        return data.synonymForSchema;\n-    }\n-\n-    /**\n-     * @return true if this synonym currently points to a real table\n-     */\n-    public boolean isInvalid() {\n-        return synonymFor.isValid();\n-    }\n-\n-    /**\n-     * Update the table that this is a synonym for, to know about this synonym.\n-     */\n-    public void updateSynonymFor() {\n-        if (synonymFor != null) {\n-            synonymFor.removeSynonym(this);\n-        }\n-        synonymFor = data.synonymForSchema.getTableOrView(data.session, data.synonymFor);\n-        synonymFor.addSynonym(this);\n+  private CreateSynonymData data;\n+\n+  /**\n+   * The table the synonym is created for.\n+   */\n+  private Table synonymFor;\n+\n+  public TableSynonym(CreateSynonymData data) {\n+    initSchemaObjectBase(data.schema, data.id, data.synonymName, Trace.TABLE);\n+    this.data = data;\n+  }\n+\n+  /**\n+   * @return the table this is a synonym for\n+   */\n+  public Table getSynonymFor() {\n+    return synonymFor;\n+  }\n+\n+  public void updateData(CreateSynonymData data) {\n+    this.data = data;\n+  }\n+\n+  @Override\n+  public int getType() {\n+    return SYNONYM;\n+  }\n+\n+\n+  @Override\n+  public String getCreateSQLForCopy(Table table, String quotedName) {\n+    return synonymFor.getCreateSQLForCopy(table, quotedName);\n+  }\n+\n+  @Override\n+  public void rename(String newName) {\n+    throw DbException.getUnsupportedException(\"SYNONYM\");\n+  }\n+\n+  @Override\n+  public void removeChildrenAndResources(Session session) {\n+    synonymFor.removeSynonym(this);\n+    database.removeMeta(session, getId());\n+  }\n+\n+  @Override\n+  public String getCreateSQL() {\n+    return \"CREATE SYNONYM \" + getName() + \" FOR \" + data.synonymForSchema.getName() + \".\" + data.synonymFor;\n+  }\n+\n+  @Override\n+  public String getDropSQL() {\n+    return \"DROP SYNONYM \" + getName();\n+  }\n+\n+  @Override\n+  public void checkRename() {\n+    throw DbException.getUnsupportedException(\"SYNONYM\");\n+  }\n+\n+  /**\n+   * @return the table this synonym is for\n+   */\n+  public String getSynonymForName() {\n+    return data.synonymFor;\n+  }\n+\n+  /**\n+   * @return the schema this synonym is for\n+   */\n+  public Schema getSynonymForSchema() {\n+    return data.synonymForSchema;\n+  }\n+\n+  /**\n+   * @return true if this synonym currently points to a real table\n+   */\n+  public boolean isInvalid() {\n+    return synonymFor.isValid();\n+  }\n+\n+  /**\n+   * Update the table that this is a synonym for, to know about this synonym.\n+   */\n+  public void updateSynonymFor() {\n+    if (synonymFor != null) {\n+      synonymFor.removeSynonym(this);\n     }\n+    synonymFor = data.synonymForSchema.getTableOrView(data.session, data.synonymFor);\n+    synonymFor.addSynonym(this);\n+  }\n \n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/432/TableSynonym.java\nindex 02955625245..b5f370802fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/432/TableSynonym.java\n@@ -53,7 +53,9 @@ public class TableSynonym extends SchemaObjectBase {\n     }\n \n     @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n+    public void rename(String newName) {\n+    throw DbException.getUnsupportedException(\"SYNONYM\");\n+    }\n \n     @Override\n     public void removeChildrenAndResources(Session session) {\n@@ -108,4 +110,4 @@ public class TableSynonym extends SchemaObjectBase {\n         synonymFor.addSynonym(this);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/432/TableSynonym.java\nindex 02955625245..b99f1826572 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/432/TableSynonym.java\n@@ -16,6 +16,8 @@ import org.h2.schema.SchemaObjectBase;\n  * Synonym for an existing table or view. All DML requests are forwarded to the backing table.\n  * Adding indices to a synonym or altering the table is not supported.\n  */\n+\n+\n public class TableSynonym extends SchemaObjectBase {\n \n     private CreateSynonymData data;\n@@ -33,10 +35,13 @@ public class TableSynonym extends SchemaObjectBase {\n     /**\n      * @return the table this is a synonym for\n      */\n+\n+\n     public Table getSynonymFor() {\n         return synonymFor;\n     }\n \n+\n     public void updateData(CreateSynonymData data) {\n         this.data = data;\n     }\n@@ -46,14 +51,15 @@ public class TableSynonym extends SchemaObjectBase {\n         return SYNONYM;\n     }\n \n-\n     @Override\n     public String getCreateSQLForCopy(Table table, String quotedName) {\n         return synonymFor.getCreateSQLForCopy(table, quotedName);\n     }\n \n     @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n+    public void rename(String newName) {\n+        throw DbException.getUnsupportedException(\"SYNONYM\");\n+    }\n \n     @Override\n     public void removeChildrenAndResources(Session session) {\n@@ -63,7 +69,8 @@ public class TableSynonym extends SchemaObjectBase {\n \n     @Override\n     public String getCreateSQL() {\n-        return \"CREATE SYNONYM \" + getName() + \" FOR \" + data.synonymForSchema.getName() + \".\" + data.synonymFor;\n+        return \"CREATE SYNONYM \" + getName() + \" FOR \"\n+        + data.synonymForSchema.getName() + \".\" + data.synonymFor;\n     }\n \n     @Override\n@@ -79,6 +86,8 @@ public class TableSynonym extends SchemaObjectBase {\n     /**\n      * @return the table this synonym is for\n      */\n+\n+\n     public String getSynonymForName() {\n         return data.synonymFor;\n     }\n@@ -86,6 +95,8 @@ public class TableSynonym extends SchemaObjectBase {\n     /**\n      * @return the schema this synonym is for\n      */\n+\n+\n     public Schema getSynonymForSchema() {\n         return data.synonymForSchema;\n     }\n@@ -93,6 +104,8 @@ public class TableSynonym extends SchemaObjectBase {\n     /**\n      * @return true if this synonym currently points to a real table\n      */\n+\n+\n     public boolean isInvalid() {\n         return synonymFor.isValid();\n     }\n@@ -100,6 +113,8 @@ public class TableSynonym extends SchemaObjectBase {\n     /**\n      * Update the table that this is a synonym for, to know about this synonym.\n      */\n+\n+\n     public void updateSynonymFor() {\n         if (synonymFor != null) {\n             synonymFor.removeSynonym(this);\n@@ -108,4 +123,4 @@ public class TableSynonym extends SchemaObjectBase {\n         synonymFor.addSynonym(this);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/432/TableSynonym.java\nindex 02955625245..c081686793d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/432/TableSynonym.java\n@@ -53,7 +53,8 @@ public class TableSynonym extends SchemaObjectBase {\n     }\n \n     @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n+    public void rename(String newName) {\n+        throw DbException.getUnsupportedException(\"SYNONYM\"); }\n \n     @Override\n     public void removeChildrenAndResources(Session session) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/432/TableSynonym.java\nindex 02955625245..c081686793d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/432/TableSynonym.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/432/TableSynonym.java\n@@ -53,7 +53,8 @@ public class TableSynonym extends SchemaObjectBase {\n     }\n \n     @Override\n-    public void rename(String newName) { throw DbException.getUnsupportedException(\"SYNONYM\"); }\n+    public void rename(String newName) {\n+        throw DbException.getUnsupportedException(\"SYNONYM\"); }\n \n     @Override\n     public void removeChildrenAndResources(Session session) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
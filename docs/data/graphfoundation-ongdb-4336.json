{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4336",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4336/HighIdAwareIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4336/HighIdAwareIterator.java\nindex f4485602d16..da3a2b73600 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4336/HighIdAwareIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4336/HighIdAwareIterator.java\n@@ -17,46 +17,46 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n import org.neo4j.kernel.impl.store.CommonAbstractStore;\n \n-public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?,?>>\n-        extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n+public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?, ?>>\n+    extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n {\n-    protected final STORE store;\n-    private long highId;\n+  protected final STORE store;\n+  private long highId;\n \n-    HighIdAwareIterator( STORE store )\n-    {\n-        this.store = store;\n-        this.highId = store.getHighestPossibleIdInUse();\n-    }\n+  HighIdAwareIterator(STORE store)\n+  {\n+    this.store = store;\n+    this.highId = store.getHighestPossibleIdInUse();\n+  }\n \n-    @Override\n-    protected final boolean fetchNext()\n+  @Override\n+  protected final boolean fetchNext()\n+  {\n+    while (true)\n     {\n-        while ( true )\n-        {\n-            boolean fetched = doFetchNext( highId );\n-            if ( fetched )\n-            {\n-                return true;\n-            }\n+      boolean fetched = doFetchNext(highId);\n+      if (fetched)\n+      {\n+        return true;\n+      }\n \n-            long newHighId = store.getHighestPossibleIdInUse();\n-            if ( newHighId > highId )\n-            {\n-                highId = newHighId;\n-            }\n-            else\n-            {\n-                break;\n-            }\n-        }\n-        return false;\n+      long newHighId = store.getHighestPossibleIdInUse();\n+      if (newHighId > highId)\n+      {\n+        highId = newHighId;\n+      } else\n+      {\n+        break;\n+      }\n     }\n+    return false;\n+  }\n \n-    protected abstract boolean doFetchNext( long highId );\n+  protected abstract boolean doFetchNext(long highId);\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4336/HighIdAwareIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4336/HighIdAwareIterator.java\nindex f4485602d16..d6f377fe6c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4336/HighIdAwareIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4336/HighIdAwareIterator.java\n@@ -22,8 +22,7 @@ package org.neo4j.kernel.impl.api.store;\n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n import org.neo4j.kernel.impl.store.CommonAbstractStore;\n \n-public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?,?>>\n-        extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n+public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?, ?>> extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n {\n     protected final STORE store;\n     private long highId;\n@@ -46,7 +45,7 @@ public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?,?>\n             }\n \n             long newHighId = store.getHighestPossibleIdInUse();\n-            if ( newHighId > highId )\n+            if ( newHighId> highId )\n             {\n                 highId = newHighId;\n             }\n@@ -59,4 +58,4 @@ public abstract class HighIdAwareIterator<STORE extends CommonAbstractStore<?,?>\n     }\n \n     protected abstract boolean doFetchNext( long highId );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "115",
    "information": {
        "errors": [
            {
                "line": "136",
                "column": "106",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "                    ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n                    if (result == null) {\n                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" +\n                            \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n                            status.description());\n                    } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "136",
                    "column": "106",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "137",
                    "column": "106",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/115/ResponseStatusConverter.java\nindex c66e6da32bd..95171089098 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/115/ResponseStatusConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.endpoint;\n \n import com.couchbase.client.core.endpoint.kv.ErrorMap;\n@@ -25,9 +26,9 @@ import com.couchbase.client.core.message.ResponseStatus;\n  * Helper class to easily convert different handler status types to a common one.\n  *\n  * @author Michael Nitschinger\n- * @since 1.1.2\n  * @see ResponseStatus\n  * @see KeyValueStatus\n+ * @since 1.1.2\n  */\n public class ResponseStatusConverter {\n \n@@ -128,13 +129,13 @@ public class ResponseStatusConverter {\n             default:\n                 if (BINARY_ERROR_MAP == null) {\n                     LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue: {} (0x{}, {})\",\n-                            status, Integer.toHexString(status.code()), status.description());\n+                        status, Integer.toHexString(status.code()), status.description());\n                     return ResponseStatus.FAILURE;\n                 } else {\n                     ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n                     if (result == null) {\n                         LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" +\n-                            \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n+                                \"Error Map: {} (0x{}, {})\", status, Integer.toHexString(status.code()),\n                             status.description());\n                     } else {\n                         LOGGER.warn(\"Unexpected ResponseStatus with Extended Error {}\", result.toString());\n@@ -176,7 +177,7 @@ public class ResponseStatusConverter {\n \n     /**\n      * Updates the current error map in use for all uses of the response status converter.\n-     *\n+     * <p>\n      * If the provided one is older than the one stored, this update operation will be ignored.\n      *\n      * @param map the map in use, it always uses the latest one.\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/115/ResponseStatusConverter.java\nindex c66e6da32bd..9fc8b44ad9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/115/ResponseStatusConverter.java\n@@ -91,7 +91,8 @@ public class ResponseStatusConverter {\n                 return ResponseStatus.RANGE_ERROR;\n             case ERR_ROLLBACK:\n                 return ResponseStatus.ROLLBACK;\n-            //== the following codes are for subdocument API ==\n+\n+//== the following codes are for subdocument API ==\n             case ERR_SUBDOC_PATH_NOT_FOUND:\n                 return ResponseStatus.SUBDOC_PATH_NOT_FOUND;\n             case ERR_SUBDOC_PATH_MISMATCH:\n@@ -124,24 +125,22 @@ public class ResponseStatusConverter {\n                 return ResponseStatus.SUBDOC_XATTR_UNKNOWN_MACRO;\n             case ERR_SUBDOC_XATTR_INVALID_KEY_COMBO:\n                 return ResponseStatus.SUBDOC_XATTR_INVALID_KEY_COMBO;\n-            //== end of subdocument API codes ==\n+\n+//== end of subdocument API codes ==\n             default:\n                 if (BINARY_ERROR_MAP == null) {\n-                    LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue: {} (0x{}, {})\",\n-                            status, Integer.toHexString(status.code()), status.description());\n-                    return ResponseStatus.FAILURE;\n+                    LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue: {} (0x{}, {})\", status, Integer.toHexString(status.code()), status.description());\n+return ResponseStatus.FAILURE;\n                 } else {\n                     ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n                     if (result == null) {\n-                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" +\n-                            \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n-                            status.description());\n+                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" + \"Error Map: {} (0x{}, {})\", status, Integer.toHexString(status.code()), status.description());\n                     } else {\n                         LOGGER.warn(\"Unexpected ResponseStatus with Extended Error {}\", result.toString());\n                     }\n                     return ResponseStatus.FAILURE;\n                 }\n-        }\n+    }\n     }\n \n     /**\n@@ -167,10 +166,9 @@ public class ResponseStatusConverter {\n             case HTTP_INTERNAL_ERROR:\n                 status = ResponseStatus.INTERNAL_ERROR;\n                 break;\n-            default:\n-                LOGGER.warn(\"Unknown ResponseStatus with Protocol HTTP: {}\", code);\n+            default: LOGGER.warn(\"Unknown ResponseStatus with Protocol HTTP: {}\", code);\n                 status = ResponseStatus.FAILURE;\n-        }\n+    }\n         return status;\n     }\n \n@@ -191,4 +189,4 @@ public class ResponseStatusConverter {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "60",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 20, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 21, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 21, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 21, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 21, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 21, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 21, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/115/ResponseStatusConverter.java\nindex c66e6da32bd..125f110363b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/115/ResponseStatusConverter.java\n@@ -29,18 +29,19 @@ import com.couchbase.client.core.message.ResponseStatus;\n  * @see ResponseStatus\n  * @see KeyValueStatus\n  */\n+\n public class ResponseStatusConverter {\n \n     /**\n      * Start with a static empty kv error map.\n      */\n+\n     private static volatile ErrorMap BINARY_ERROR_MAP = null;\n \n     /**\n      * The logger used.\n      */\n     private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(ResponseStatusConverter.class);\n-\n     public static final int HTTP_OK = 200;\n     public static final int HTTP_CREATED = 201;\n     public static final int HTTP_ACCEPTED = 202;\n@@ -56,91 +57,89 @@ public class ResponseStatusConverter {\n      */\n     public static ResponseStatus fromBinary(final short code) {\n         KeyValueStatus status = KeyValueStatus.valueOf(code);\n-        switch (status) {\n-            case SUCCESS:\n-                return ResponseStatus.SUCCESS;\n-            case ERR_EXISTS:\n-                return ResponseStatus.EXISTS;\n-            case ERR_NOT_FOUND:\n-                return ResponseStatus.NOT_EXISTS;\n-            case ERR_NOT_MY_VBUCKET:\n-                return ResponseStatus.RETRY;\n-            case ERR_NOT_STORED:\n-                return ResponseStatus.NOT_STORED;\n-            case ERR_TOO_BIG:\n-                return ResponseStatus.TOO_BIG;\n-            case ERR_TEMP_FAIL:\n-                return ResponseStatus.TEMPORARY_FAILURE;\n-            case ERR_BUSY:\n-                return ResponseStatus.SERVER_BUSY;\n-            case ERR_NO_MEM:\n-                return ResponseStatus.OUT_OF_MEMORY;\n-            case ERR_UNKNOWN_COMMAND:\n-                return ResponseStatus.COMMAND_UNAVAILABLE;\n-            case ERR_NOT_SUPPORTED:\n-                return ResponseStatus.COMMAND_UNAVAILABLE;\n-            case ERR_ACCESS:\n-                return ResponseStatus.ACCESS_ERROR;\n-            case ERR_INTERNAL:\n-                return ResponseStatus.INTERNAL_ERROR;\n-            case ERR_INVALID:\n-                return ResponseStatus.INVALID_ARGUMENTS;\n-            case ERR_DELTA_BADVAL:\n-                return ResponseStatus.INVALID_ARGUMENTS;\n-            case ERR_RANGE:\n-                return ResponseStatus.RANGE_ERROR;\n-            case ERR_ROLLBACK:\n-                return ResponseStatus.ROLLBACK;\n+        switch(status) {\n+                       case SUCCESS:\n+                       return ResponseStatus.SUCCESS;\n+                       case ERR_EXISTS:\n+            return ResponseStatus.EXISTS;\n+                       case ERR_NOT_FOUND:\n+            return ResponseStatus.NOT_EXISTS;\n+                       case ERR_NOT_MY_VBUCKET:\n+            return ResponseStatus.RETRY;\n+                       case ERR_NOT_STORED:\n+            return ResponseStatus.NOT_STORED;\n+                       case ERR_TOO_BIG:\n+            return ResponseStatus.TOO_BIG;\n+                       case ERR_TEMP_FAIL:\n+            return ResponseStatus.TEMPORARY_FAILURE;\n+                       case ERR_BUSY:\n+            return ResponseStatus.SERVER_BUSY;\n+                       case ERR_NO_MEM:\n+            return ResponseStatus.OUT_OF_MEMORY;\n+                       case ERR_UNKNOWN_COMMAND:\n+            return ResponseStatus.COMMAND_UNAVAILABLE;\n+                       case ERR_NOT_SUPPORTED:\n+            return ResponseStatus.COMMAND_UNAVAILABLE;\n+                       case ERR_ACCESS:\n+            return ResponseStatus.ACCESS_ERROR;\n+                       case ERR_INTERNAL:\n+            return ResponseStatus.INTERNAL_ERROR;\n+                       case ERR_INVALID:\n+            return ResponseStatus.INVALID_ARGUMENTS;\n+                       case ERR_DELTA_BADVAL:\n+            return ResponseStatus.INVALID_ARGUMENTS;\n+                       case ERR_RANGE:\n+            return ResponseStatus.RANGE_ERROR;\n+                       case ERR_ROLLBACK:\n+            return ResponseStatus.ROLLBACK;\n             //== the following codes are for subdocument API ==\n-            case ERR_SUBDOC_PATH_NOT_FOUND:\n-                return ResponseStatus.SUBDOC_PATH_NOT_FOUND;\n-            case ERR_SUBDOC_PATH_MISMATCH:\n-                return ResponseStatus.SUBDOC_PATH_MISMATCH;\n-            case ERR_SUBDOC_PATH_INVALID:\n-                return ResponseStatus.SUBDOC_PATH_INVALID;\n-            case ERR_SUBDOC_PATH_TOO_BIG:\n-                return ResponseStatus.SUBDOC_PATH_TOO_BIG;\n-            case ERR_SUBDOC_DOC_TOO_DEEP:\n-                return ResponseStatus.SUBDOC_DOC_TOO_DEEP;\n-            case ERR_SUBDOC_VALUE_CANTINSERT:\n-                return ResponseStatus.SUBDOC_VALUE_CANTINSERT;\n-            case ERR_SUBDOC_DOC_NOT_JSON:\n-                return ResponseStatus.SUBDOC_DOC_NOT_JSON;\n-            case ERR_SUBDOC_NUM_RANGE:\n-                return ResponseStatus.SUBDOC_NUM_RANGE;\n-            case ERR_SUBDOC_DELTA_RANGE:\n-                return ResponseStatus.SUBDOC_DELTA_RANGE;\n-            case ERR_SUBDOC_PATH_EXISTS:\n-                return ResponseStatus.SUBDOC_PATH_EXISTS;\n-            case ERR_SUBDOC_VALUE_TOO_DEEP:\n-                return ResponseStatus.SUBDOC_VALUE_TOO_DEEP;\n-            case ERR_SUBDOC_INVALID_COMBO:\n-                return ResponseStatus.SUBDOC_INVALID_COMBO;\n-            case ERR_SUBDOC_MULTI_PATH_FAILURE:\n-                return ResponseStatus.SUBDOC_MULTI_PATH_FAILURE;\n-            case ERR_SUBDOC_XATTR_INVALID_FLAG_COMBO:\n-                return ResponseStatus.INTERNAL_ERROR;\n-            case ERR_SUBDOC_XATTR_UNKNOWN_MACRO:\n-                return ResponseStatus.SUBDOC_XATTR_UNKNOWN_MACRO;\n-            case ERR_SUBDOC_XATTR_INVALID_KEY_COMBO:\n-                return ResponseStatus.SUBDOC_XATTR_INVALID_KEY_COMBO;\n+                       case ERR_SUBDOC_PATH_NOT_FOUND:\n+            return ResponseStatus.SUBDOC_PATH_NOT_FOUND;\n+                       case ERR_SUBDOC_PATH_MISMATCH:\n+            return ResponseStatus.SUBDOC_PATH_MISMATCH;\n+                       case ERR_SUBDOC_PATH_INVALID:\n+            return ResponseStatus.SUBDOC_PATH_INVALID;\n+                       case ERR_SUBDOC_PATH_TOO_BIG:\n+            return ResponseStatus.SUBDOC_PATH_TOO_BIG;\n+                       case ERR_SUBDOC_DOC_TOO_DEEP:\n+            return ResponseStatus.SUBDOC_DOC_TOO_DEEP;\n+                       case ERR_SUBDOC_VALUE_CANTINSERT:\n+            return ResponseStatus.SUBDOC_VALUE_CANTINSERT;\n+                       case ERR_SUBDOC_DOC_NOT_JSON:\n+            return ResponseStatus.SUBDOC_DOC_NOT_JSON;\n+                       case ERR_SUBDOC_NUM_RANGE:\n+            return ResponseStatus.SUBDOC_NUM_RANGE;\n+                       case ERR_SUBDOC_DELTA_RANGE:\n+            return ResponseStatus.SUBDOC_DELTA_RANGE;\n+                       case ERR_SUBDOC_PATH_EXISTS:\n+            return ResponseStatus.SUBDOC_PATH_EXISTS;\n+                       case ERR_SUBDOC_VALUE_TOO_DEEP:\n+            return ResponseStatus.SUBDOC_VALUE_TOO_DEEP;\n+                       case ERR_SUBDOC_INVALID_COMBO:\n+            return ResponseStatus.SUBDOC_INVALID_COMBO;\n+                       case ERR_SUBDOC_MULTI_PATH_FAILURE:\n+            return ResponseStatus.SUBDOC_MULTI_PATH_FAILURE;\n+                       case ERR_SUBDOC_XATTR_INVALID_FLAG_COMBO:\n+            return ResponseStatus.INTERNAL_ERROR;\n+                       case ERR_SUBDOC_XATTR_UNKNOWN_MACRO:\n+            return ResponseStatus.SUBDOC_XATTR_UNKNOWN_MACRO;\n+                       case ERR_SUBDOC_XATTR_INVALID_KEY_COMBO:\n+            return ResponseStatus.SUBDOC_XATTR_INVALID_KEY_COMBO;\n             //== end of subdocument API codes ==\n-            default:\n-                if (BINARY_ERROR_MAP == null) {\n-                    LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue: {} (0x{}, {})\",\n-                            status, Integer.toHexString(status.code()), status.description());\n-                    return ResponseStatus.FAILURE;\n+                       default:\n+            if (BINARY_ERROR_MAP == null) {\n+                LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue: {} (0x{}, {})\", status, Integer.toHexString(status.code()), status.description());\n+                return ResponseStatus.FAILURE;\n+            } else {\n+                ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n+                if (result == null) {\n+                    LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" + \"Error Map: {} (0x{}, {})\", status, Integer.toHexString(status.code()), status.description());\n                 } else {\n-                    ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n-                    if (result == null) {\n-                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" +\n-                            \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n-                            status.description());\n-                    } else {\n-                        LOGGER.warn(\"Unexpected ResponseStatus with Extended Error {}\", result.toString());\n-                    }\n-                    return ResponseStatus.FAILURE;\n+                    LOGGER.warn(\"Unexpected ResponseStatus with Extended Error {}\", result.toString());\n                 }\n+                return ResponseStatus.FAILURE;\n+            }\n+\n         }\n     }\n \n@@ -150,26 +149,25 @@ public class ResponseStatusConverter {\n      * @param code the status to convert.\n      * @return the converted response status.\n      */\n+\n     public static ResponseStatus fromHttp(final int code) {\n         ResponseStatus status;\n-        switch (code) {\n-            case HTTP_OK:\n-            case HTTP_CREATED:\n-            case HTTP_ACCEPTED:\n-                status = ResponseStatus.SUCCESS;\n-                break;\n-            case HTTP_NOT_FOUND:\n-                status = ResponseStatus.NOT_EXISTS;\n-                break;\n-            case HTTP_BAD_REQUEST:\n-                status = ResponseStatus.INVALID_ARGUMENTS;\n-                break;\n-            case HTTP_INTERNAL_ERROR:\n-                status = ResponseStatus.INTERNAL_ERROR;\n-                break;\n-            default:\n-                LOGGER.warn(\"Unknown ResponseStatus with Protocol HTTP: {}\", code);\n-                status = ResponseStatus.FAILURE;\n+        switch(code) {\n+                     case HTTP_OK: case HTTP_CREATED: case HTTP_ACCEPTED:\n+                     status = ResponseStatus.SUCCESS;\n+                     break;\n+                     case HTTP_NOT_FOUND:\n+                     status = ResponseStatus.NOT_EXISTS;\n+                     break;\n+                     case HTTP_BAD_REQUEST:\n+                     status = ResponseStatus.INVALID_ARGUMENTS;\n+                     break;\n+                     case HTTP_INTERNAL_ERROR:\n+                     status = ResponseStatus.INTERNAL_ERROR;\n+                     break;\n+                     default:\n+                     LOGGER.warn(\"Unknown ResponseStatus with Protocol HTTP: {}\", code);\n+                     status = ResponseStatus.FAILURE;\n         }\n         return status;\n     }\n@@ -181,6 +179,7 @@ public class ResponseStatusConverter {\n      *\n      * @param map the map in use, it always uses the latest one.\n      */\n+\n     public static void updateBinaryErrorMap(final ErrorMap map) {\n         if (map == null) {\n             return;\n@@ -190,5 +189,4 @@ public class ResponseStatusConverter {\n             BINARY_ERROR_MAP = map;\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 112
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "136",
                    "column": "106",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/115/ResponseStatusConverter.java\nindex c66e6da32bd..768deaaff83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/115/ResponseStatusConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/115/ResponseStatusConverter.java\n@@ -133,8 +133,7 @@ public class ResponseStatusConverter {\n                 } else {\n                     ErrorMap.ErrorCode result = BINARY_ERROR_MAP.errors().get(status.code());\n                     if (result == null) {\n-                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" +\n-                            \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n+                        LOGGER.warn(\"Unexpected ResponseStatus with Protocol KeyValue and not found in \" + \"Error Map: {} (0x{}, {})\",  status, Integer.toHexString(status.code()),\n                             status.description());\n                     } else {\n                         LOGGER.warn(\"Unexpected ResponseStatus with Extended Error {}\", result.toString());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
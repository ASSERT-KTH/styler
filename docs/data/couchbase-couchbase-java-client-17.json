{
    "project_name": "couchbase-couchbase-java-client",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "101",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * @return the opened bucket if successful.\n     */\n    Observable<AsyncBucket> openBucket(String name, String password, List<Transcoder<? extends Document, ?>> transcoders);\n\n    /**\n     * Provides access to the {@link AsyncClusterManager} to perform cluster-wide operations.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/intellij/17/AsyncCluster.java\nindex 1f09c9004cf..cba8447c5f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/intellij/17/AsyncCluster.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.java;\n \n import com.couchbase.client.core.ClusterFacade;\n@@ -98,7 +99,8 @@ public interface AsyncCluster {\n      * @param name the name of the bucket.\n      * @return the opened bucket if successful.\n      */\n-    Observable<AsyncBucket> openBucket(String name, String password, List<Transcoder<? extends Document, ?>> transcoders);\n+    Observable<AsyncBucket> openBucket(String name, String password,\n+                                       List<Transcoder<? extends Document, ?>> transcoders);\n \n     /**\n      * Provides access to the {@link AsyncClusterManager} to perform cluster-wide operations.\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/naturalize/17/AsyncCluster.java\nindex 1f09c9004cf..8b25aed3555 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/naturalize/17/AsyncCluster.java\n@@ -130,4 +130,4 @@ public interface AsyncCluster {\n      */\n     Observable<ClusterFacade> core();\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/codebuff/17/AsyncCluster.java\nindex 1f09c9004cf..08d31c5b821 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/17/AsyncCluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/codebuff/17/AsyncCluster.java\n@@ -29,7 +29,6 @@ import com.couchbase.client.java.document.Document;\n import com.couchbase.client.java.env.CouchbaseEnvironment;\n import com.couchbase.client.java.transcoder.Transcoder;\n import rx.Observable;\n-\n import java.util.List;\n \n /**\n@@ -41,6 +40,8 @@ import java.util.List;\n  * @author Michael Nitschinger\n  * @since 2.0\n  */\n+\n+\n @InterfaceStability.Committed\n @InterfaceAudience.Public\n public interface AsyncCluster {\n@@ -56,6 +57,7 @@ public interface AsyncCluster {\n      *\n      * @return the opened bucket if successful.\n      */\n+\n     Observable<AsyncBucket> openBucket();\n \n     /**\n@@ -70,6 +72,8 @@ public interface AsyncCluster {\n      * @param name the name of the bucket.\n      * @return the opened bucket if successful.\n      */\n+\n+\n     Observable<AsyncBucket> openBucket(String name);\n \n     /**\n@@ -84,6 +88,8 @@ public interface AsyncCluster {\n      * @param name the name of the bucket.\n      * @return the opened bucket if successful.\n      */\n+\n+\n     Observable<AsyncBucket> openBucket(String name, String password);\n \n     /**\n@@ -98,6 +104,8 @@ public interface AsyncCluster {\n      * @param name the name of the bucket.\n      * @return the opened bucket if successful.\n      */\n+\n+\n     Observable<AsyncBucket> openBucket(String name, String password, List<Transcoder<? extends Document, ?>> transcoders);\n \n     /**\n@@ -111,6 +119,8 @@ public interface AsyncCluster {\n      * @param password the password associated with the username.\n      * @return the {@link AsyncClusterManager} if successful.\n      */\n+\n+\n     Observable<AsyncClusterManager> clusterManager(String username, String password);\n \n     /**\n@@ -118,6 +128,8 @@ public interface AsyncCluster {\n      *\n      * @return true once done and everything succeeded, false otherwise.\n      */\n+\n+\n     Observable<Boolean> disconnect();\n \n     /**\n@@ -128,6 +140,8 @@ public interface AsyncCluster {\n      *\n      * @return the underlying {@link ClusterFacade} from the \"core-io\" package.\n      */\n+\n+\n     Observable<ClusterFacade> core();\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
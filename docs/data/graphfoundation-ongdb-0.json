{
    "project_name": "graphfoundation-ongdb",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/0/AbstractTopologyService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/0/AbstractTopologyService.java\nindex 12c2aa6182a..649c3e4e90e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/0/AbstractTopologyService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/0/AbstractTopologyService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n@@ -24,15 +25,15 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n public abstract class AbstractTopologyService extends LifecycleAdapter implements TopologyService\n {\n \n-    @Override\n-    public CoreTopology localCoreServers()\n-    {\n-        return allCoreServers().filterTopologyByDb( localDBName() );\n-    }\n+  @Override\n+  public CoreTopology localCoreServers()\n+  {\n+    return allCoreServers().filterTopologyByDb(localDBName());\n+  }\n \n-    @Override\n-    public ReadReplicaTopology localReadReplicas()\n-    {\n-        return allReadReplicas().filterTopologyByDb( localDBName() );\n-    }\n+  @Override\n+  public ReadReplicaTopology localReadReplicas()\n+  {\n+    return allReadReplicas().filterTopologyByDb(localDBName());\n+  }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/0/AbstractTopologyService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/0/AbstractTopologyService.java\nindex 12c2aa6182a..03ff3b49a3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/0/AbstractTopologyService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/0/AbstractTopologyService.java\n@@ -23,7 +23,6 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n \n public abstract class AbstractTopologyService extends LifecycleAdapter implements TopologyService\n {\n-\n     @Override\n     public CoreTopology localCoreServers()\n     {\n@@ -35,4 +34,4 @@ public abstract class AbstractTopologyService extends LifecycleAdapter implement\n     {\n         return allReadReplicas().filterTopologyByDb( localDBName() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
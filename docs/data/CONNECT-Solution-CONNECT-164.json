{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "164",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/164/AdapterPatientDiscoveryOrchImpl.java\nindex 945adbbb6da..b5e65904d14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/164/AdapterPatientDiscoveryOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -38,21 +39,21 @@ import org.hl7.v3.RespondingGatewayPRPAIN201305UV02RequestType;\n  * @author westberg\n  */\n public class AdapterPatientDiscoveryOrchImpl {\n-    private static final Logger LOG = Logger.getLogger(AdapterPatientDiscoveryOrchImpl.class);\n+  private static final Logger LOG = Logger.getLogger(AdapterPatientDiscoveryOrchImpl.class);\n \n-    /**\n-     * Since this method is for pass through mode. There is nothing we do with it. It is intended that this class and\n-     * the web services are completely overridden by the customer. We are just returning an empty result.\n-     *\n-     * @param request The patient discovery message that came into the gateway.\n-     * @param assertion The assertion information.\n-     * @return An emtpy response\n-     */\n-    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request,\n-            AssertionType assertion) {\n-        LOG.debug(\"Entering AdapterPatientDiscoveryOrchImpl.respondingGatewayPRPAIN201305UV02\");\n-        PRPAIN201306UV02 response = new PRPAIN201306UV02();\n-        return response;\n-    }\n+  /**\n+   * Since this method is for pass through mode. There is nothing we do with it. It is intended that this class and\n+   * the web services are completely overridden by the customer. We are just returning an empty result.\n+   *\n+   * @param request   The patient discovery message that came into the gateway.\n+   * @param assertion The assertion information.\n+   * @return An emtpy response\n+   */\n+  public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request,\n+                                                            AssertionType assertion) {\n+    LOG.debug(\"Entering AdapterPatientDiscoveryOrchImpl.respondingGatewayPRPAIN201305UV02\");\n+    PRPAIN201306UV02 response = new PRPAIN201306UV02();\n+    return response;\n+  }\n \n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/164/AdapterPatientDiscoveryOrchImpl.java\nindex 945adbbb6da..c385578f515 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/164/AdapterPatientDiscoveryOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -48,11 +49,11 @@ public class AdapterPatientDiscoveryOrchImpl {\n      * @param assertion The assertion information.\n      * @return An emtpy response\n      */\n-    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request,\n-            AssertionType assertion) {\n+    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request, AssertionType assertion) {\n         LOG.debug(\"Entering AdapterPatientDiscoveryOrchImpl.respondingGatewayPRPAIN201305UV02\");\n         PRPAIN201306UV02 response = new PRPAIN201306UV02();\n-        return response;\n+\n+return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/164/AdapterPatientDiscoveryOrchImpl.java\nindex 945adbbb6da..4ad5eef5a83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/164/AdapterPatientDiscoveryOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/164/AdapterPatientDiscoveryOrchImpl.java\n@@ -27,7 +27,6 @@\n package gov.hhs.fha.nhinc.patientdiscovery.adapter;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n-\n import org.apache.log4j.Logger;\n import org.hl7.v3.PRPAIN201306UV02;\n import org.hl7.v3.RespondingGatewayPRPAIN201305UV02RequestType;\n@@ -37,7 +36,10 @@ import org.hl7.v3.RespondingGatewayPRPAIN201305UV02RequestType;\n  *\n  * @author westberg\n  */\n+\n+\n public class AdapterPatientDiscoveryOrchImpl {\n+\n     private static final Logger LOG = Logger.getLogger(AdapterPatientDiscoveryOrchImpl.class);\n \n     /**\n@@ -48,11 +50,12 @@ public class AdapterPatientDiscoveryOrchImpl {\n      * @param assertion The assertion information.\n      * @return An emtpy response\n      */\n-    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request,\n-            AssertionType assertion) {\n+\n+\n+    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(RespondingGatewayPRPAIN201305UV02RequestType request, AssertionType assertion) {\n         LOG.debug(\"Entering AdapterPatientDiscoveryOrchImpl.respondingGatewayPRPAIN201305UV02\");\n         PRPAIN201306UV02 response = new PRPAIN201306UV02();\n         return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-metron",
    "error_id": "92",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.metron.rest.service.impl;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/92/AlertServiceImpl.java\nindex 46370ebaf74..5cc76c1c4f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/92/AlertServiceImpl.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.service.impl;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/92/AlertServiceImpl.java\nindex 46370ebaf74..01f08fe4b37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/92/AlertServiceImpl.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.service.impl;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/92/AlertServiceImpl.java\nindex 46370ebaf74..31a02a5095b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/92/AlertServiceImpl.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.service.impl;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n@@ -41,9 +42,8 @@ public class AlertServiceImpl implements AlertService {\n   private final KafkaService kafkaService;\n \n   @Autowired\n-  public AlertServiceImpl(final KafkaService kafkaService,\n-                          final Environment environment) {\n-    this.kafkaService = kafkaService;\n+  public AlertServiceImpl(final KafkaService kafkaService, final Environment environment) {\n+  this.kafkaService = kafkaService;\n     this.environment = environment;\n   }\n \n@@ -51,12 +51,11 @@ public class AlertServiceImpl implements AlertService {\n   public void escalateAlerts(List<Map<String, Object>> alerts) throws RestException {\n     try {\n       for (Map<String, Object> alert : alerts) {\n-        kafkaService.produceMessage(\n-            environment.getProperty(MetronRestConstants.KAFKA_TOPICS_ESCALATION_PROPERTY),\n+        kafkaService.produceMessage(environment.getProperty(MetronRestConstants.KAFKA_TOPICS_ESCALATION_PROPERTY),\n             JSONUtils.INSTANCE.toJSON(alert, false));\n       }\n     } catch (JsonProcessingException e) {\n       throw new RestException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/92/AlertServiceImpl.java\nindex 46370ebaf74..3f732f498ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/92/AlertServiceImpl.java\n@@ -34,6 +34,7 @@ import org.springframework.stereotype.Service;\n  *\n  * @see AlertService\n  */\n+\n @Service\n public class AlertServiceImpl implements AlertService {\n \n@@ -41,8 +42,7 @@ public class AlertServiceImpl implements AlertService {\n   private final KafkaService kafkaService;\n \n   @Autowired\n-  public AlertServiceImpl(final KafkaService kafkaService,\n-                          final Environment environment) {\n+  public AlertServiceImpl(final KafkaService kafkaService, final Environment environment) {\n     this.kafkaService = kafkaService;\n     this.environment = environment;\n   }\n@@ -51,12 +51,10 @@ public class AlertServiceImpl implements AlertService {\n   public void escalateAlerts(List<Map<String, Object>> alerts) throws RestException {\n     try {\n       for (Map<String, Object> alert : alerts) {\n-        kafkaService.produceMessage(\n-            environment.getProperty(MetronRestConstants.KAFKA_TOPICS_ESCALATION_PROPERTY),\n-            JSONUtils.INSTANCE.toJSON(alert, false));\n+        kafkaService.produceMessage(environment.getProperty(MetronRestConstants.KAFKA_TOPICS_ESCALATION_PROPERTY), JSONUtils.INSTANCE.toJSON(alert, false));\n       }\n     } catch (JsonProcessingException e) {\n       throw new RestException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/92/AlertServiceImpl.java\nindex 46370ebaf74..5cc76c1c4f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/92/AlertServiceImpl.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.service.impl;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/92/AlertServiceImpl.java\nindex 46370ebaf74..5cc76c1c4f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/92/AlertServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/92/AlertServiceImpl.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.service.impl;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
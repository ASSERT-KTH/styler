{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "430",
    "information": {
        "errors": [
            {
                "line": "116",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  }\n\n  static GoogleSheetsOptions fromPb(com.google.api.services.bigquery.model.GoogleSheetsOptions options) {\n    Builder builder = newBuilder();\n    if (options.getSkipLeadingRows() != null) {\n      builder.setSkipLeadingRows(options.getSkipLeadingRows());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/430/GoogleSheetsOptions.java\nindex b882f81bfba..15b365afa4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/430/GoogleSheetsOptions.java\n@@ -33,7 +33,8 @@ public final class GoogleSheetsOptions extends FormatOptions {\n \n     private Long skipLeadingRows;\n \n-    private Builder() {}\n+    private Builder() {\n+    }\n \n     private Builder(GoogleSheetsOptions options) {\n       this.skipLeadingRows = options.skipLeadingRows;\n@@ -113,7 +114,8 @@ public final class GoogleSheetsOptions extends FormatOptions {\n     return new Builder();\n   }\n \n-  static GoogleSheetsOptions fromPb(com.google.api.services.bigquery.model.GoogleSheetsOptions options) {\n+  static GoogleSheetsOptions fromPb(\n+      com.google.api.services.bigquery.model.GoogleSheetsOptions options) {\n     Builder builder = newBuilder();\n     if (options.getSkipLeadingRows() != null) {\n       builder.setSkipLeadingRows(options.getSkipLeadingRows());\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/430/GoogleSheetsOptions.java\nindex b882f81bfba..6f59759556a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/430/GoogleSheetsOptions.java\n@@ -93,9 +93,7 @@ public final class GoogleSheetsOptions extends FormatOptions {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj instanceof GoogleSheetsOptions\n-        && Objects.equals(toPb(), ((GoogleSheetsOptions) obj).toPb());\n+    return obj == this || obj instanceof GoogleSheetsOptions && Objects.equals(toPb(), ((GoogleSheetsOptions) obj).toPb());\n   }\n \n   com.google.api.services.bigquery.model.GoogleSheetsOptions toPb() {\n@@ -120,4 +118,4 @@ public final class GoogleSheetsOptions extends FormatOptions {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/430/GoogleSheetsOptions.java\nindex b882f81bfba..7326d95f0c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/430/GoogleSheetsOptions.java\n@@ -17,16 +17,16 @@\n package com.google.cloud.bigquery;\n \n import com.google.common.base.MoreObjects;\n-\n import java.util.Objects;\n \n /**\n  * Google BigQuery options for the Google Sheets format.\n  */\n+\n+\n public final class GoogleSheetsOptions extends FormatOptions {\n \n   private static final long serialVersionUID = 1837436979033106123L;\n-\n   private final Long skipLeadingRows;\n \n   public static final class Builder {\n@@ -44,6 +44,7 @@ public final class GoogleSheetsOptions extends FormatOptions {\n      * data. The default value is 0. This property is useful if you have header rows\n      * that should be skipped.\n      */\n+\n     public Builder setSkipLeadingRows(long skipLeadingRows) {\n       this.skipLeadingRows = skipLeadingRows;\n       return this;\n@@ -52,6 +53,7 @@ public final class GoogleSheetsOptions extends FormatOptions {\n     /**\n      * Creates a {@link GoogleSheetsOptions} object.\n      */\n+\n     public GoogleSheetsOptions build() {\n       return new GoogleSheetsOptions(this);\n     }\n@@ -67,6 +69,7 @@ public final class GoogleSheetsOptions extends FormatOptions {\n    * Returns the number of rows at the top of a sheet that BigQuery will skip when reading the\n    * data.\n    */\n+\n   public Long getSkipLeadingRows() {\n     return skipLeadingRows;\n   }\n@@ -74,16 +77,14 @@ public final class GoogleSheetsOptions extends FormatOptions {\n   /**\n    * Returns a builder for the {@link GoogleSheetsOptions} object.\n    */\n+\n   public Builder toBuilder() {\n     return new Builder(this);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"type\", getType())\n-        .add(\"skipLeadingRows\", skipLeadingRows)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"type\", getType()).add(\"skipLeadingRows\", skipLeadingRows).toString();\n   }\n \n   @Override\n@@ -93,14 +94,11 @@ public final class GoogleSheetsOptions extends FormatOptions {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj instanceof GoogleSheetsOptions\n-        && Objects.equals(toPb(), ((GoogleSheetsOptions) obj).toPb());\n+    return obj == this || obj instanceof GoogleSheetsOptions && Objects.equals(toPb(), ((GoogleSheetsOptions) obj).toPb());\n   }\n \n   com.google.api.services.bigquery.model.GoogleSheetsOptions toPb() {\n-    com.google.api.services.bigquery.model.GoogleSheetsOptions options =\n-        new com.google.api.services.bigquery.model.GoogleSheetsOptions();\n+    com.google.api.services.bigquery.model.GoogleSheetsOptions options = new com.google.api.services.bigquery.model.GoogleSheetsOptions();\n     options.setSkipLeadingRows(skipLeadingRows);\n     return options;\n   }\n@@ -109,6 +107,7 @@ public final class GoogleSheetsOptions extends FormatOptions {\n   /**\n    * Returns a builder for a {@link GoogleSheetsOptions} object.\n    */\n+\n   public static Builder newBuilder() {\n     return new Builder();\n   }\n@@ -120,4 +119,4 @@ public final class GoogleSheetsOptions extends FormatOptions {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'method def rparen' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/430/GoogleSheetsOptions.java\nindex b882f81bfba..2c0ab6423b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/430/GoogleSheetsOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/430/GoogleSheetsOptions.java\n@@ -113,7 +113,8 @@ public final class GoogleSheetsOptions extends FormatOptions {\n     return new Builder();\n   }\n \n-  static GoogleSheetsOptions fromPb(com.google.api.services.bigquery.model.GoogleSheetsOptions options) {\n+  static GoogleSheetsOptions fromPb(com.google.api.services.bigquery.model .GoogleSheetsOptions options\n+    ) {\n     Builder builder = newBuilder();\n     if (options.getSkipLeadingRows() != null) {\n       builder.setSkipLeadingRows(options.getSkipLeadingRows());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
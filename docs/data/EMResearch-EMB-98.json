{
    "project_name": "EMResearch-EMB",
    "error_id": "98",
    "information": {
        "errors": [
            {
                "line": "74",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  \n  @Override\n  public List<Rule> getRelevantRules(ResourceBundle messages, UserConfig userConfig, Language motherTongue, List<Language> altLanguages) throws IOException {\n    return Arrays.asList(\n            new CommaWhitespaceRule(messages, \n                Example.wrong(\"A parer seu<marker> ,</marker> no era veritat.\"),",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/98/ValencianCatalan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/98/ValencianCatalan.java\nindex 82360992916..d1f4c193525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/98/ValencianCatalan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/98/ValencianCatalan.java\n@@ -1,6 +1,6 @@\n-/* LanguageTool, a natural language style checker \n+/* LanguageTool, a natural language style checker\n  * Copyright (C) 2009 Daniel Naber (http://www.danielnaber.de)\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.language;\n \n import java.io.IOException;\n@@ -55,25 +56,26 @@ import org.languagetool.rules.ca.SimpleReplaceVerbsRule;\n \n public class ValencianCatalan extends Catalan {\n \n-  @Override\n-  public String getName() {\n-    return \"Catalan (Valencian)\";\n-  }\n+    @Override\n+    public String getName() {\n+        return \"Catalan (Valencian)\";\n+    }\n \n-  @Override\n-  public String[] getCountries() {\n-    return new String[]{\"ES\"};\n-  }\n+    @Override\n+    public String[] getCountries() {\n+        return new String[] {\"ES\"};\n+    }\n \n-  @Override\n-  public String getVariant() {\n-    return \"valencia\";\n-  }\n-  \n-  @Override\n-  public List<Rule> getRelevantRules(ResourceBundle messages, UserConfig userConfig, Language motherTongue, List<Language> altLanguages) throws IOException {\n-    return Arrays.asList(\n-            new CommaWhitespaceRule(messages, \n+    @Override\n+    public String getVariant() {\n+        return \"valencia\";\n+    }\n+\n+    @Override\n+    public List<Rule> getRelevantRules(ResourceBundle messages, UserConfig userConfig, Language motherTongue,\n+                                       List<Language> altLanguages) throws IOException {\n+        return Arrays.asList(\n+            new CommaWhitespaceRule(messages,\n                 Example.wrong(\"A parer seu<marker> ,</marker> no era veritat.\"),\n                 Example.fixed(\"A parer seu<marker>,</marker> no era veritat.\")),\n             new DoublePunctuationRule(messages),\n@@ -103,21 +105,23 @@ public class ValencianCatalan extends Catalan {\n             new SimpleReplaceDiacriticsTraditional(messages),\n             new SimpleReplaceAnglicism(messages),\n             new PronomFebleDuplicateRule(messages)\n-    );\n-  }\n+        );\n+    }\n+\n+    @Override\n+    public List<String> getDefaultEnabledRulesForVariant() {\n+        List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_VALENCIANS\", \"EXIGEIX_ACCENTUACIO_VALENCIANA\",\n+            \"EXIGEIX_POSSESSIUS_U\", \"EXIGEIX_VERBS_EIX\", \"EXIGEIX_VERBS_ISC\", \"PER_PER_A_INFINITIU\", \"FINS_EL_AVL\");\n+        return Collections.unmodifiableList(rules);\n+    }\n \n-  @Override\n-  public List<String> getDefaultEnabledRulesForVariant() {\n-    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_VALENCIANS\", \"EXIGEIX_ACCENTUACIO_VALENCIANA\",\n-        \"EXIGEIX_POSSESSIUS_U\", \"EXIGEIX_VERBS_EIX\", \"EXIGEIX_VERBS_ISC\", \"PER_PER_A_INFINITIU\", \"FINS_EL_AVL\");\n-    return Collections.unmodifiableList(rules);\n-  }\n+    @Override\n+    public List<String> getDefaultDisabledRulesForVariant() {\n+        List<String> rules =\n+            Arrays.asList(\"EXIGEIX_VERBS_CENTRAL\", \"EXIGEIX_ACCENTUACIO_GENERAL\", \"EXIGEIX_POSSESSIUS_V\",\n+                \"EVITA_PRONOMS_VALENCIANS\", \"EVITA_DEMOSTRATIUS_EIXE\", \"VOCABULARI_VALENCIA\", \"EXIGEIX_US\",\n+                \"FINS_EL_GENERAL\");\n+        return Collections.unmodifiableList(rules);\n+    }\n \n-  @Override\n-  public List<String> getDefaultDisabledRulesForVariant() {\n-    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_CENTRAL\", \"EXIGEIX_ACCENTUACIO_GENERAL\", \"EXIGEIX_POSSESSIUS_V\",\n-        \"EVITA_PRONOMS_VALENCIANS\", \"EVITA_DEMOSTRATIUS_EIXE\", \"VOCABULARI_VALENCIA\", \"EXIGEIX_US\", \"FINS_EL_GENERAL\");\n-    return Collections.unmodifiableList(rules);\n-  }\n-  \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/98/ValencianCatalan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/98/ValencianCatalan.java\nindex 82360992916..ceb79019590 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/98/ValencianCatalan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/98/ValencianCatalan.java\n@@ -73,15 +73,14 @@ public class ValencianCatalan extends Catalan {\n   @Override\n   public List<Rule> getRelevantRules(ResourceBundle messages, UserConfig userConfig, Language motherTongue, List<Language> altLanguages) throws IOException {\n     return Arrays.asList(\n-            new CommaWhitespaceRule(messages, \n-                Example.wrong(\"A parer seu<marker> ,</marker> no era veritat.\"),\n+            new CommaWhitespaceRule(messages, Example.wrong(\"A parer seu<marker> ,</marker> no era veritat.\"),\n                 Example.fixed(\"A parer seu<marker>,</marker> no era veritat.\")),\n-            new DoublePunctuationRule(messages),\n+new DoublePunctuationRule(messages),\n             new CatalanUnpairedBracketsRule(messages, this),\n             new UppercaseSentenceStartRule(messages, this,\n                 Example.wrong(\"Preus de venda al p\u00fablic. <marker>han</marker> pujat molt.\"),\n                 Example.fixed(\"Preus de venda al p\u00fablic. <marker>Han</marker> pujat molt.\")),\n-            new MultipleWhitespaceRule(messages, this),\n+new MultipleWhitespaceRule(messages, this),\n             new LongSentenceRule(messages, userConfig),\n             // specific to Catalan:\n             new CatalanWordRepeatRule(messages, this),\n@@ -108,16 +107,14 @@ public class ValencianCatalan extends Catalan {\n \n   @Override\n   public List<String> getDefaultEnabledRulesForVariant() {\n-    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_VALENCIANS\", \"EXIGEIX_ACCENTUACIO_VALENCIANA\",\n-        \"EXIGEIX_POSSESSIUS_U\", \"EXIGEIX_VERBS_EIX\", \"EXIGEIX_VERBS_ISC\", \"PER_PER_A_INFINITIU\", \"FINS_EL_AVL\");\n+    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_VALENCIANS\", \"EXIGEIX_ACCENTUACIO_VALENCIANA\", \"EXIGEIX_POSSESSIUS_U\", \"EXIGEIX_VERBS_EIX\", \"EXIGEIX_VERBS_ISC\", \"PER_PER_A_INFINITIU\", \"FINS_EL_AVL\");\n     return Collections.unmodifiableList(rules);\n   }\n \n   @Override\n   public List<String> getDefaultDisabledRulesForVariant() {\n-    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_CENTRAL\", \"EXIGEIX_ACCENTUACIO_GENERAL\", \"EXIGEIX_POSSESSIUS_V\",\n-        \"EVITA_PRONOMS_VALENCIANS\", \"EVITA_DEMOSTRATIUS_EIXE\", \"VOCABULARI_VALENCIA\", \"EXIGEIX_US\", \"FINS_EL_GENERAL\");\n+    List<String> rules = Arrays.asList(\"EXIGEIX_VERBS_CENTRAL\", \"EXIGEIX_ACCENTUACIO_GENERAL\", \"EXIGEIX_POSSESSIUS_V\", \"EVITA_PRONOMS_VALENCIANS\", \"EVITA_DEMOSTRATIUS_EIXE\", \"VOCABULARI_VALENCIA\", \"EXIGEIX_US\", \"FINS_EL_GENERAL\");\n     return Collections.unmodifiableList(rules);\n   }\n   \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
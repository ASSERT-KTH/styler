{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1859",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1859/MonoDirectionalTraverserIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1859/MonoDirectionalTraverserIterator.java\nindex 5222f3ce8c9..84463d249b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1859/MonoDirectionalTraverserIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1859/MonoDirectionalTraverserIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.traversal;\n \n import org.neo4j.graphdb.Node;\n@@ -35,56 +36,56 @@ import org.neo4j.graphdb.traversal.UniquenessFilter;\n \n class MonoDirectionalTraverserIterator extends AbstractTraverserIterator\n {\n-    private final BranchSelector selector;\n-    private final PathEvaluator evaluator;\n-    private final UniquenessFilter uniqueness;\n+  private final BranchSelector selector;\n+  private final PathEvaluator evaluator;\n+  private final UniquenessFilter uniqueness;\n \n-    MonoDirectionalTraverserIterator( Resource resource, UniquenessFilter uniqueness, PathExpander expander,\n-                                      BranchOrderingPolicy order, PathEvaluator evaluator, Iterable<Node> startNodes,\n-                                      InitialBranchState initialState, UniquenessFactory uniquenessFactory )\n-    {\n-        super( resource );\n-        this.uniqueness = uniqueness;\n-        this.evaluator = evaluator;\n-        this.selector = order.create( new AsOneStartBranch( this, startNodes, initialState, uniquenessFactory ),\n-                expander );\n-    }\n+  MonoDirectionalTraverserIterator(Resource resource, UniquenessFilter uniqueness, PathExpander expander,\n+                                   BranchOrderingPolicy order, PathEvaluator evaluator, Iterable<Node> startNodes,\n+                                   InitialBranchState initialState, UniquenessFactory uniquenessFactory)\n+  {\n+    super(resource);\n+    this.uniqueness = uniqueness;\n+    this.evaluator = evaluator;\n+    this.selector = order.create(new AsOneStartBranch(this, startNodes, initialState, uniquenessFactory),\n+        expander);\n+  }\n \n-    @Override\n-    public Evaluation evaluate( TraversalBranch branch, BranchState state )\n-    {\n-        return evaluator.evaluate( branch, state );\n-    }\n+  @Override\n+  public Evaluation evaluate(TraversalBranch branch, BranchState state)\n+  {\n+    return evaluator.evaluate(branch, state);\n+  }\n \n-    @Override\n-    protected Path fetchNextOrNull()\n+  @Override\n+  protected Path fetchNextOrNull()\n+  {\n+    TraversalBranch result;\n+    while (true)\n     {\n-        TraversalBranch result;\n-        while ( true )\n-        {\n-            result = selector.next( this );\n-            if ( result == null )\n-            {\n-                close();\n-                return null;\n-            }\n-            if ( result.includes() )\n-            {\n-                numberOfPathsReturned++;\n-                return result;\n-            }\n-        }\n+      result = selector.next(this);\n+      if (result == null)\n+      {\n+        close();\n+        return null;\n+      }\n+      if (result.includes())\n+      {\n+        numberOfPathsReturned++;\n+        return result;\n+      }\n     }\n+  }\n \n-    @Override\n-    public boolean isUniqueFirst( TraversalBranch branch )\n-    {\n-        return uniqueness.checkFirst( branch );\n-    }\n+  @Override\n+  public boolean isUniqueFirst(TraversalBranch branch)\n+  {\n+    return uniqueness.checkFirst(branch);\n+  }\n \n-    @Override\n-    public boolean isUnique( TraversalBranch branch )\n-    {\n-        return uniqueness.check( branch );\n-    }\n+  @Override\n+  public boolean isUnique(TraversalBranch branch)\n+  {\n+    return uniqueness.check(branch);\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1859/MonoDirectionalTraverserIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1859/MonoDirectionalTraverserIterator.java\nindex 5222f3ce8c9..ba3fcda45d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1859/MonoDirectionalTraverserIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1859/MonoDirectionalTraverserIterator.java\n@@ -39,10 +39,9 @@ class MonoDirectionalTraverserIterator extends AbstractTraverserIterator\n     private final PathEvaluator evaluator;\n     private final UniquenessFilter uniqueness;\n \n-    MonoDirectionalTraverserIterator( Resource resource, UniquenessFilter uniqueness, PathExpander expander,\n-                                      BranchOrderingPolicy order, PathEvaluator evaluator, Iterable<Node> startNodes,\n+    MonoDirectionalTraverserIterator( Resource resource, UniquenessFilter uniqueness, PathExpander expander, BranchOrderingPolicy order, PathEvaluator evaluator, Iterable<Node> startNodes,\n                                       InitialBranchState initialState, UniquenessFactory uniquenessFactory )\n-    {\n+{\n         super( resource );\n         this.uniqueness = uniqueness;\n         this.evaluator = evaluator;\n@@ -68,7 +67,8 @@ class MonoDirectionalTraverserIterator extends AbstractTraverserIterator\n                 close();\n                 return null;\n             }\n-            if ( result.includes() )\n+\n+if ( result.includes() )\n             {\n                 numberOfPathsReturned++;\n                 return result;\n@@ -87,4 +87,4 @@ class MonoDirectionalTraverserIterator extends AbstractTraverserIterator\n     {\n         return uniqueness.check( branch );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
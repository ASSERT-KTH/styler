{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2733",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2733/ThresholdBasedPruneStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2733/ThresholdBasedPruneStrategy.java\nindex ec2eecd7304..479416497b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2733/ThresholdBasedPruneStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2733/ThresholdBasedPruneStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n import java.io.File;\n@@ -31,81 +32,81 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogHeader.LOG_HEADER_S\n \n public class ThresholdBasedPruneStrategy implements LogPruneStrategy\n {\n-    private final FileSystemAbstraction fileSystem;\n-    private final LogFiles files;\n-    private final Threshold threshold;\n-    private final TransactionLogFileInformation logFileInformation;\n+  private final FileSystemAbstraction fileSystem;\n+  private final LogFiles files;\n+  private final Threshold threshold;\n+  private final TransactionLogFileInformation logFileInformation;\n+\n+  ThresholdBasedPruneStrategy(FileSystemAbstraction fileSystem, LogFiles logFiles, Threshold threshold)\n+  {\n+    this.fileSystem = fileSystem;\n+    this.files = logFiles;\n+    this.logFileInformation = files.getLogFileInformation();\n+    this.threshold = threshold;\n+  }\n \n-    ThresholdBasedPruneStrategy( FileSystemAbstraction fileSystem, LogFiles logFiles, Threshold threshold )\n+  @Override\n+  public synchronized LongStream findLogVersionsToDelete(long upToVersion)\n+  {\n+    if (upToVersion == INITIAL_LOG_VERSION)\n     {\n-        this.fileSystem = fileSystem;\n-        this.files = logFiles;\n-        this.logFileInformation = files.getLogFileInformation();\n-        this.threshold = threshold;\n+      return LongStream.empty();\n     }\n \n-    @Override\n-    public synchronized LongStream findLogVersionsToDelete( long upToVersion )\n+    threshold.init();\n+    long upper = upToVersion - 1;\n+    boolean exceeded = false;\n+    while (upper >= 0)\n     {\n-        if ( upToVersion == INITIAL_LOG_VERSION )\n-        {\n-            return LongStream.empty();\n-        }\n-\n-        threshold.init();\n-        long upper = upToVersion - 1;\n-        boolean exceeded = false;\n-        while ( upper >= 0 )\n-        {\n-            File file = files.getLogFileForVersion( upper );\n-            if ( !fileSystem.fileExists( file ) )\n-            {\n-                // There aren't logs to prune anything. Just return\n-                return LongStream.empty();\n-            }\n+      File file = files.getLogFileForVersion(upper);\n+      if (!fileSystem.fileExists(file))\n+      {\n+        // There aren't logs to prune anything. Just return\n+        return LongStream.empty();\n+      }\n \n-            if ( fileSystem.getFileSize( file ) > LOG_HEADER_SIZE &&\n-                    threshold.reached( file, upper, logFileInformation ) )\n-            {\n-                exceeded = true;\n-                break;\n-            }\n-            upper--;\n-        }\n-\n-        if ( !exceeded )\n-        {\n-            return LongStream.empty();\n-        }\n+      if (fileSystem.getFileSize(file) > LOG_HEADER_SIZE &&\n+          threshold.reached(file, upper, logFileInformation))\n+      {\n+        exceeded = true;\n+        break;\n+      }\n+      upper--;\n+    }\n \n-        // Find out which log is the earliest existing (lower bound to prune)\n-        long lower = upper;\n-        while ( fileSystem.fileExists( files.getLogFileForVersion( lower - 1 ) ) )\n-        {\n-            lower--;\n-        }\n+    if (!exceeded)\n+    {\n+      return LongStream.empty();\n+    }\n \n-        /*\n-         * Here we make sure that at least one historical log remains behind, in addition of course to the\n-         * current one. This is in order to make sure that at least one transaction remains always available for\n-         * serving to whomever asks for it.\n-         * To illustrate, imagine that there is a threshold in place configured so that it enforces pruning of the\n-         * log file that was just rotated out (for example, a file size threshold that is misconfigured to be smaller\n-         * than the smallest log). In such a case, until the database commits a transaction there will be no\n-         * transactions present on disk, making impossible to serve any to whichever client might ask, leading to\n-         * errors on both sides of the conversation.\n-         * This if statement does nothing more complicated than checking if the next-to-last log would be pruned\n-         * and simply skipping it if so.\n-         */\n-        if ( upper == upToVersion - 1 )\n-        {\n-            upper--;\n-        }\n+    // Find out which log is the earliest existing (lower bound to prune)\n+    long lower = upper;\n+    while (fileSystem.fileExists(files.getLogFileForVersion(lower - 1)))\n+    {\n+      lower--;\n+    }\n \n-        // The reason we delete from lower to upper is that if it crashes in the middle we can be sure that no holes\n-        // are created.\n-        // We create a closed range because we want to include the 'upper' log version as well. The check above ensures\n-        // we don't accidentally leave the database without any logs.\n-        return LongStream.rangeClosed( lower, upper );\n+    /*\n+     * Here we make sure that at least one historical log remains behind, in addition of course to the\n+     * current one. This is in order to make sure that at least one transaction remains always available for\n+     * serving to whomever asks for it.\n+     * To illustrate, imagine that there is a threshold in place configured so that it enforces pruning of the\n+     * log file that was just rotated out (for example, a file size threshold that is misconfigured to be smaller\n+     * than the smallest log). In such a case, until the database commits a transaction there will be no\n+     * transactions present on disk, making impossible to serve any to whichever client might ask, leading to\n+     * errors on both sides of the conversation.\n+     * This if statement does nothing more complicated than checking if the next-to-last log would be pruned\n+     * and simply skipping it if so.\n+     */\n+    if (upper == upToVersion - 1)\n+    {\n+      upper--;\n     }\n+\n+    // The reason we delete from lower to upper is that if it crashes in the middle we can be sure that no holes\n+    // are created.\n+    // We create a closed range because we want to include the 'upper' log version as well. The check above ensures\n+    // we don't accidentally leave the database without any logs.\n+    return LongStream.rangeClosed(lower, upper);\n+  }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "67",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2733/ThresholdBasedPruneStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2733/ThresholdBasedPruneStrategy.java\nindex ec2eecd7304..f0e509b27ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2733/ThresholdBasedPruneStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2733/ThresholdBasedPruneStrategy.java\n@@ -64,8 +64,7 @@ public class ThresholdBasedPruneStrategy implements LogPruneStrategy\n                 return LongStream.empty();\n             }\n \n-            if ( fileSystem.getFileSize( file ) > LOG_HEADER_SIZE &&\n-                    threshold.reached( file, upper, logFileInformation ) )\n+            if ( fileSystem.getFileSize( file ) > LOG_HEADER_SIZE &&threshold.reached( file, upper, logFileInformation ) )\n             {\n                 exceeded = true;\n                 break;\n@@ -108,4 +107,4 @@ public class ThresholdBasedPruneStrategy implements LogPruneStrategy\n         // we don't accidentally leave the database without any logs.\n         return LongStream.rangeClosed( lower, upper );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
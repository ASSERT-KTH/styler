{
    "project_name": "apache-metron",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n  NUM_REDUCERS(\"numReducers\"),\n  START_TIME_MS(\"startTimeMs\"),",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/11/PcapOptions.java\nindex c5852d1cb06..52ae157fdbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/11/PcapOptions.java\n@@ -28,8 +28,7 @@ public enum PcapOptions implements ConfigOption {\n   USERNAME(\"username\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/11/PcapOptions.java\nindex c5852d1cb06..1843d3c038d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/11/PcapOptions.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -29,7 +29,8 @@ public enum PcapOptions implements ConfigOption {\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\",\n+      (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/11/PcapOptions.java\nindex c5852d1cb06..7fa8d7cb4af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/11/PcapOptions.java\n@@ -44,9 +44,8 @@ public enum PcapOptions implements ConfigOption {\n   PRINT_JOB_STATUS(\"printJobStatus\"),\n   FINALIZER_THREADPOOL_SIZE(\"finalizerThreadpoolSize\");\n \n-  public static final BiFunction<String, Object, Path> STRING_TO_PATH =\n-      (s, o) -> o == null ? null : new Path(o.toString());\n-  private String key;\n+  public static final BiFunction<String, Object, Path> STRING_TO_PATH = (s, o) -> o == null ? null : new Path(o.toString());\n+private String key;\n   private BiFunction<String, Object, Object> transform = (s, o) -> o;\n \n   PcapOptions(String key) {\n@@ -67,4 +66,4 @@ public enum PcapOptions implements ConfigOption {\n   public BiFunction<String, Object, Object> transform() {\n     return transform;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/11/PcapOptions.java\nindex c5852d1cb06..9aca845b357 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/11/PcapOptions.java\n@@ -23,14 +23,19 @@ import org.apache.hadoop.fs.Path;\n import org.apache.metron.common.configuration.ConfigOption;\n \n public enum PcapOptions implements ConfigOption {\n+\n   JOB_NAME(\"jobName\"),\n   JOB_ID(\"jobId\"),\n   USERNAME(\"username\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n-  BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  BASE_PATH(\"basePath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n+  FINAL_OUTPUT_PATH(\"finalOutputPath\", (s,o) ->\n+o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n   END_TIME_MS(\"endTimeMs\"),\n@@ -44,11 +49,11 @@ public enum PcapOptions implements ConfigOption {\n   PRINT_JOB_STATUS(\"printJobStatus\"),\n   FINALIZER_THREADPOOL_SIZE(\"finalizerThreadpoolSize\");\n \n-  public static final BiFunction<String, Object, Path> STRING_TO_PATH =\n-      (s, o) -> o == null ? null : new Path(o.toString());\n+  public static final BiFunction<String, Object, Path> STRING_TO_PATH = (s,o) ->\n+                                                         o == null ? null : new Path(o.toString());\n   private String key;\n-  private BiFunction<String, Object, Object> transform = (s, o) -> o;\n-\n+  private BiFunction<String, Object, Object> transform = (s,o) ->\n+                                               o;\n   PcapOptions(String key) {\n     this.key = key;\n   }\n@@ -67,4 +72,4 @@ public enum PcapOptions implements ConfigOption {\n   public BiFunction<String, Object, Object> transform() {\n     return transform;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/11/PcapOptions.java\nindex c5852d1cb06..52ae157fdbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/11/PcapOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/11/PcapOptions.java\n@@ -28,8 +28,7 @@ public enum PcapOptions implements ConfigOption {\n   USERNAME(\"username\"),\n   FINAL_FILENAME_PREFIX(\"finalFilenamePrefix\"),\n   BASE_PATH(\"basePath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n-  BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n+  INTERIM_RESULT_PATH(\"interimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),BASE_INTERIM_RESULT_PATH(\"baseInterimResultPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   FINAL_OUTPUT_PATH(\"finalOutputPath\", (s, o) -> o == null ? null : new Path(o.toString())),\n   NUM_REDUCERS(\"numReducers\"),\n   START_TIME_MS(\"startTimeMs\"),\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3902",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3902/ReadableRelationshipDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3902/ReadableRelationshipDiffSets.java\nindex 5924c21383a..928ca05afbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3902/ReadableRelationshipDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3902/ReadableRelationshipDiffSets.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.txstate;\n \n import java.util.Collections;\n@@ -33,108 +34,108 @@ import org.neo4j.kernel.impl.api.store.RelationshipIterator;\n  */\n public interface ReadableRelationshipDiffSets<T> extends SuperReadableDiffSets<T>\n {\n+  @Override\n+  ReadableRelationshipDiffSets<T> filterAdded(Predicate<T> addedFilter);\n+\n+  RelationshipIterator augment(RelationshipIterator source);\n+\n+  @Override\n+  default PrimitiveLongIterator augment(PrimitiveLongIterator source)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  default PrimitiveLongResourceIterator augment(PrimitiveLongResourceIterator source)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  default PrimitiveLongResourceIterator augmentWithRemovals(PrimitiveLongResourceIterator source)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  final class Empty<T> implements ReadableRelationshipDiffSets<T>\n+  {\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> ReadableRelationshipDiffSets<T> ifNull(ReadableRelationshipDiffSets<T> diffSets)\n+    {\n+      return diffSets == null ? INSTANCE : diffSets;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    private static final ReadableRelationshipDiffSets INSTANCE = new Empty();\n+\n+    private Empty()\n+    {\n+      // singleton\n+    }\n+\n+    @Override\n+    public boolean isAdded(T elem)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public boolean isRemoved(T elem)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public Set<T> getAdded()\n+    {\n+      return Collections.emptySet();\n+    }\n+\n     @Override\n-    ReadableRelationshipDiffSets<T> filterAdded( Predicate<T> addedFilter );\n+    public Set<T> getAddedSnapshot()\n+    {\n+      return Collections.emptySet();\n+    }\n \n-    RelationshipIterator augment( RelationshipIterator source );\n+    @Override\n+    public Set<T> getRemoved()\n+    {\n+      return Collections.emptySet();\n+    }\n \n     @Override\n-    default PrimitiveLongIterator augment( PrimitiveLongIterator source )\n+    public boolean isEmpty()\n     {\n-        throw new UnsupportedOperationException();\n+      return true;\n     }\n \n     @Override\n-    default PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator source )\n+    public Iterator<T> apply(Iterator<T> source)\n     {\n-        throw new UnsupportedOperationException();\n+      return source;\n     }\n \n     @Override\n-    default PrimitiveLongResourceIterator augmentWithRemovals( PrimitiveLongResourceIterator source )\n+    public int delta()\n     {\n-        throw new UnsupportedOperationException();\n+      return 0;\n     }\n \n-    final class Empty<T> implements ReadableRelationshipDiffSets<T>\n+    @Override\n+    public RelationshipIterator augment(RelationshipIterator source)\n+    {\n+      return source;\n+    }\n+\n+    @Override\n+    public ReadableRelationshipDiffSets<T> filterAdded(Predicate<T> addedFilter)\n+    {\n+      return this;\n+    }\n+\n+    @Override\n+    public void accept(DiffSetsVisitor<T> visitor)\n     {\n-        @SuppressWarnings( \"unchecked\" )\n-        public static <T> ReadableRelationshipDiffSets<T> ifNull( ReadableRelationshipDiffSets<T> diffSets )\n-        {\n-            return diffSets == null ? INSTANCE : diffSets;\n-        }\n-\n-        @SuppressWarnings( \"rawtypes\" )\n-        private static final ReadableRelationshipDiffSets INSTANCE = new Empty();\n-\n-        private Empty()\n-        {\n-            // singleton\n-        }\n-\n-        @Override\n-        public boolean isAdded( T elem )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean isRemoved( T elem )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Set<T> getAdded()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Set<T> getAddedSnapshot()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Set<T> getRemoved()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public boolean isEmpty()\n-        {\n-            return true;\n-        }\n-\n-        @Override\n-        public Iterator<T> apply( Iterator<T> source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public int delta()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public RelationshipIterator augment( RelationshipIterator source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public ReadableRelationshipDiffSets<T> filterAdded( Predicate<T> addedFilter )\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        public void accept( DiffSetsVisitor<T> visitor )\n-        {\n-        }\n     }\n+  }\n }\n",
            "diff_size": 166
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3902/ReadableRelationshipDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3902/ReadableRelationshipDiffSets.java\nindex 5924c21383a..621c40f08dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3902/ReadableRelationshipDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3902/ReadableRelationshipDiffSets.java\n@@ -35,8 +35,7 @@ public interface ReadableRelationshipDiffSets<T> extends SuperReadableDiffSets<T\n {\n     @Override\n     ReadableRelationshipDiffSets<T> filterAdded( Predicate<T> addedFilter );\n-\n-    RelationshipIterator augment( RelationshipIterator source );\n+RelationshipIterator augment( RelationshipIterator source );\n \n     @Override\n     default PrimitiveLongIterator augment( PrimitiveLongIterator source )\n@@ -137,4 +136,4 @@ public interface ReadableRelationshipDiffSets<T> extends SuperReadableDiffSets<T\n         {\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
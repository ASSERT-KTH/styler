{
    "project_name": "graphfoundation-ongdb",
    "error_id": "918",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/918/SynchronizedArrayIdOrderingQueue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/918/SynchronizedArrayIdOrderingQueue.java\nindex 349953c5fbe..93fd1863bbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/918/SynchronizedArrayIdOrderingQueue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/918/SynchronizedArrayIdOrderingQueue.java\n@@ -17,71 +17,72 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n public class SynchronizedArrayIdOrderingQueue implements IdOrderingQueue\n {\n-    private long[] queue;\n-    private int offerIndex;\n-    private int headIndex;\n+  private long[] queue;\n+  private int offerIndex;\n+  private int headIndex;\n \n-    public SynchronizedArrayIdOrderingQueue( int initialMaxSize )\n-    {\n-        this.queue = new long[initialMaxSize];\n-    }\n+  public SynchronizedArrayIdOrderingQueue(int initialMaxSize)\n+  {\n+    this.queue = new long[initialMaxSize];\n+  }\n \n-    @Override\n-    public synchronized void offer( long value )\n+  @Override\n+  public synchronized void offer(long value)\n+  {\n+    if (offerIndex - headIndex >= queue.length)\n     {\n-        if ( offerIndex - headIndex >= queue.length )\n-        {\n-            extendArray();\n-        }\n-        assert offerIndex == headIndex || (offerIndex - 1) % queue.length < value :\n-                \"Was offered ids out-of-order, \" + value + \" whereas last offered was \" +\n-                        ((offerIndex - 1) % queue.length);\n-        queue[(offerIndex++) % queue.length] = value;\n+      extendArray();\n     }\n+    assert offerIndex == headIndex || (offerIndex - 1) % queue.length < value :\n+        \"Was offered ids out-of-order, \" + value + \" whereas last offered was \" +\n+            ((offerIndex - 1) % queue.length);\n+    queue[(offerIndex++) % queue.length] = value;\n+  }\n \n-    @Override\n-    public synchronized void waitFor( long value ) throws InterruptedException\n+  @Override\n+  public synchronized void waitFor(long value) throws InterruptedException\n+  {\n+    while (offerIndex == headIndex /*empty*/ || queue[headIndex % queue.length] != value /*head is not our id*/)\n     {\n-        while ( offerIndex == headIndex /*empty*/ || queue[headIndex % queue.length] != value /*head is not our id*/ )\n-        {\n-            wait();\n-        }\n+      wait();\n     }\n+  }\n \n-    @Override\n-    public synchronized void removeChecked( long expectedValue )\n+  @Override\n+  public synchronized void removeChecked(long expectedValue)\n+  {\n+    if (queue[headIndex % queue.length] != expectedValue)\n     {\n-        if ( queue[headIndex % queue.length] != expectedValue )\n-        {\n-            throw new IllegalStateException(\n-                    \"Was about to remove head and expected it to be \" + expectedValue + \", but it was \" +\n-                            queue[headIndex] );\n-        }\n-        headIndex++;\n-        notifyAll();\n+      throw new IllegalStateException(\n+          \"Was about to remove head and expected it to be \" + expectedValue + \", but it was \" +\n+              queue[headIndex]);\n     }\n+    headIndex++;\n+    notifyAll();\n+  }\n \n-    @Override\n-    public synchronized boolean isEmpty()\n-    {\n-        return offerIndex == headIndex;\n-    }\n+  @Override\n+  public synchronized boolean isEmpty()\n+  {\n+    return offerIndex == headIndex;\n+  }\n \n-    private void extendArray()\n+  private void extendArray()\n+  {\n+    long[] newQueue = new long[queue.length << 1];\n+    int length = offerIndex - headIndex;\n+    for (int i = 0; i < length; i++)\n     {\n-        long[] newQueue = new long[queue.length << 1];\n-        int length = offerIndex - headIndex;\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            newQueue[i] = queue[(headIndex + i) % queue.length];\n-        }\n-\n-        queue = newQueue;\n-        offerIndex = length;\n-        headIndex = 0;\n+      newQueue[i] = queue[(headIndex + i) % queue.length];\n     }\n+\n+    queue = newQueue;\n+    offerIndex = length;\n+    headIndex = 0;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/918/SynchronizedArrayIdOrderingQueue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/918/SynchronizedArrayIdOrderingQueue.java\nindex 349953c5fbe..9a41312a184 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/918/SynchronizedArrayIdOrderingQueue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/918/SynchronizedArrayIdOrderingQueue.java\n@@ -37,10 +37,9 @@ public class SynchronizedArrayIdOrderingQueue implements IdOrderingQueue\n         {\n             extendArray();\n         }\n-        assert offerIndex == headIndex || (offerIndex - 1) % queue.length < value :\n-                \"Was offered ids out-of-order, \" + value + \" whereas last offered was \" +\n-                        ((offerIndex - 1) % queue.length);\n-        queue[(offerIndex++) % queue.length] = value;\n+\n+assert offerIndex == headIndex || ( offerIndex - 1) % queue.length < value : \"Was offered ids out-of-order, \" + value + \" whereas last offered was \" + ((offerIndex - 1) % queue.length);\n+queue[(offerIndex++ ) % queue.length] = value;\n     }\n \n     @Override\n@@ -57,10 +56,8 @@ public class SynchronizedArrayIdOrderingQueue implements IdOrderingQueue\n     {\n         if ( queue[headIndex % queue.length] != expectedValue )\n         {\n-            throw new IllegalStateException(\n-                    \"Was about to remove head and expected it to be \" + expectedValue + \", but it was \" +\n-                            queue[headIndex] );\n-        }\n+            throw new IllegalStateException( \"Was about to remove head and expected it to be \" + expectedValue + \", but it was \" + queue[headIndex] );\n+    }\n         headIndex++;\n         notifyAll();\n     }\n@@ -84,4 +81,4 @@ public class SynchronizedArrayIdOrderingQueue implements IdOrderingQueue\n         offerIndex = length;\n         headIndex = 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
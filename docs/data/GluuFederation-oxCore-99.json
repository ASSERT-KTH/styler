{
    "project_name": "GluuFederation-oxCore",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "42",
                "column": "5",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n    public void create() {\n    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n        try {\n            map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..65666dc0f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/99/InMemoryCacheProvider.java\n@@ -39,7 +39,7 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n+    log.debug(\"Starting InMemoryCacheProvider ...\");\n         try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..77eb5b530d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/99/InMemoryCacheProvider.java\n@@ -39,7 +39,7 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n+        log.debug(\"Starting InMemoryCacheProvider ...\");\n         try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n \n@@ -49,14 +49,14 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n-\t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    public void configure(CacheConfiguration cacheConfiguration) {\n+        this.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n+        this.cacheConfiguration = cacheConfiguration;\n+    }\n \n     @PreDestroy\n     public void destroy() {\n-    \tlog.debug(\"Destroying InMemoryCacheProvider\");\n+        log.debug(\"Destroying InMemoryCacheProvider\");\n \n         map.clear();\n \n@@ -68,25 +68,25 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         return map;\n     }\n \n-\t@Override\n-\tpublic boolean hasKey(String key) {\n-\t\treturn map.containsKey(key);\n-\t}\n+    @Override\n+    public boolean hasKey(String key) {\n+        return map.containsKey(key);\n+    }\n \n     @Override\n     public Object get(String key) {\n         return map.get(key);\n     }\n \n-\t@Override\n-\tpublic void put(String key, Object object) {\n+    @Override\n+    public void put(String key, Object object) {\n         // if key already exists and hash is the same for value then expiration time is\n         // not updated\n         // net.jodah.expiringmap.ExpiringMap.putInternal()\n         // therefore we first remove entry and then put it\n         map.remove(key);\n         map.put(key, object, ExpirationPolicy.CREATED, Long.MAX_VALUE, TimeUnit.DAYS);\n-\t}\n+    }\n \n     @Override\n     public void put(int expirationInSeconds, String key, Object object) {\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..d3e502e2475 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/99/InMemoryCacheProvider.java\n@@ -39,8 +39,8 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n-        try {\n+    log.debug(\"Starting InMemoryCacheProvider ...\");\n+try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n \n             log.debug(\"InMemoryCacheProvider started.\");\n@@ -49,16 +49,15 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n+public void configure(CacheConfiguration cacheConfiguration) {\n+    this.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n \t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    }\n \n-    @PreDestroy\n+@PreDestroy\n     public void destroy() {\n-    \tlog.debug(\"Destroying InMemoryCacheProvider\");\n-\n-        map.clear();\n+    log.debug(\"Destroying InMemoryCacheProvider\");\n+map.clear();\n \n         log.debug(\"Destroyed InMemoryCacheProvider\");\n     }\n@@ -68,27 +67,27 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         return map;\n     }\n \n-\t@Override\n+@Override\n \tpublic boolean hasKey(String key) {\n-\t\treturn map.containsKey(key);\n-\t}\n+    return map.containsKey(key);\n+    }\n \n-    @Override\n+@Override\n     public Object get(String key) {\n         return map.get(key);\n     }\n \n-\t@Override\n+@Override\n \tpublic void put(String key, Object object) {\n-        // if key already exists and hash is the same for value then expiration time is\n+    // if key already exists and hash is the same for value then expiration time is\n         // not updated\n         // net.jodah.expiringmap.ExpiringMap.putInternal()\n         // therefore we first remove entry and then put it\n         map.remove(key);\n         map.put(key, object, ExpirationPolicy.CREATED, Long.MAX_VALUE, TimeUnit.DAYS);\n-\t}\n+    }\n \n-    @Override\n+@Override\n     public void put(int expirationInSeconds, String key, Object object) {\n         // if key already exists and hash is the same for value then expiration time is\n         // not updated\n@@ -118,4 +117,4 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         return CacheProviderType.IN_MEMORY;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..32ad815f97e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/99/InMemoryCacheProvider.java\n@@ -1,15 +1,12 @@\n package org.gluu.service.cache;\n \n import java.util.concurrent.TimeUnit;\n-\n import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import net.jodah.expiringmap.ExpirationPolicy;\n import net.jodah.expiringmap.ExpiringMap;\n \n@@ -17,6 +14,7 @@ import net.jodah.expiringmap.ExpiringMap;\n  * @author yuriyz on 02/21/2017.\n  */\n \n+\n @ApplicationScoped\n public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n \n@@ -25,13 +23,10 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n \n     @Inject\n     private CacheConfiguration cacheConfiguration;\n-\n     private ExpiringMap<String, Object> map = ExpiringMap.builder().build();\n-\n     private InMemoryConfiguration inMemoryConfiguration;\n \n-    public InMemoryCacheProvider() {\n-    }\n+    public InMemoryCacheProvider() { }\n \n     @PostConstruct\n     public void init() {\n@@ -39,27 +34,24 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n+        log.debug(\"Starting InMemoryCacheProvider ...\");\n         try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n-\n             log.debug(\"InMemoryCacheProvider started.\");\n         } catch (Exception e) {\n             throw new IllegalStateException(\"Error starting InMemoryCacheProvider\", e);\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n-\t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    public void configure(CacheConfiguration cacheConfiguration) {\n+        this.log = LoggerFactory.getLogger(InMemoryCacheProvider.class);\n+        this.cacheConfiguration = cacheConfiguration;\n+    }\n \n     @PreDestroy\n     public void destroy() {\n-    \tlog.debug(\"Destroying InMemoryCacheProvider\");\n-\n+        log.debug(\"Destroying InMemoryCacheProvider\");\n         map.clear();\n-\n         log.debug(\"Destroyed InMemoryCacheProvider\");\n     }\n \n@@ -68,25 +60,25 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         return map;\n     }\n \n-\t@Override\n-\tpublic boolean hasKey(String key) {\n-\t\treturn map.containsKey(key);\n-\t}\n+    @Override\n+    public boolean hasKey(String key) {\n+        return map.containsKey(key);\n+    }\n \n     @Override\n     public Object get(String key) {\n         return map.get(key);\n     }\n \n-\t@Override\n-\tpublic void put(String key, Object object) {\n+    @Override\n+    public void put(String key, Object object) {\n         // if key already exists and hash is the same for value then expiration time is\n         // not updated\n         // net.jodah.expiringmap.ExpiringMap.putInternal()\n         // therefore we first remove entry and then put it\n         map.remove(key);\n         map.put(key, object, ExpirationPolicy.CREATED, Long.MAX_VALUE, TimeUnit.DAYS);\n-\t}\n+    }\n \n     @Override\n     public void put(int expirationInSeconds, String key, Object object) {\n@@ -118,4 +110,4 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n         return CacheProviderType.IN_MEMORY;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..65666dc0f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/99/InMemoryCacheProvider.java\n@@ -39,7 +39,7 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n+    log.debug(\"Starting InMemoryCacheProvider ...\");\n         try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/99/InMemoryCacheProvider.java\nindex 1b4053cb1f8..7c357c78120 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/99/InMemoryCacheProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/99/InMemoryCacheProvider.java\n@@ -39,7 +39,7 @@ public class InMemoryCacheProvider extends AbstractCacheProvider<ExpiringMap> {\n     }\n \n     public void create() {\n-    \tlog.debug(\"Starting InMemoryCacheProvider ...\");\n+        log.debug(\"Starting InMemoryCacheProvider ...\");\n         try {\n             map = ExpiringMap.builder().expirationPolicy(ExpirationPolicy.CREATED).variableExpiration().build();\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
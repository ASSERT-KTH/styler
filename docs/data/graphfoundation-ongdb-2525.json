{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2525",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2525/BufferedIdController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2525/BufferedIdController.java\nindex 1017b7e10d1..a4710fe8eb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2525/BufferedIdController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2525/BufferedIdController.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storageengine.impl.recordstorage.id;\n \n import java.util.concurrent.TimeUnit;\n@@ -30,48 +31,49 @@ import org.neo4j.scheduler.JobScheduler;\n /**\n  * Storage id controller that provide buffering possibilities to be able so safely free and reuse ids.\n  * Allows perform clear and maintenance operations over currently buffered set of ids.\n+ *\n  * @see BufferingIdGeneratorFactory\n  */\n public class BufferedIdController extends LifecycleAdapter implements IdController\n {\n-    private final BufferingIdGeneratorFactory bufferingIdGeneratorFactory;\n-    private final JobScheduler scheduler;\n-    private JobScheduler.JobHandle jobHandle;\n+  private final BufferingIdGeneratorFactory bufferingIdGeneratorFactory;\n+  private final JobScheduler scheduler;\n+  private JobScheduler.JobHandle jobHandle;\n \n-    public BufferedIdController( BufferingIdGeneratorFactory bufferingIdGeneratorFactory, JobScheduler scheduler )\n-    {\n-        this.bufferingIdGeneratorFactory = bufferingIdGeneratorFactory;\n-        this.scheduler = scheduler;\n-    }\n+  public BufferedIdController(BufferingIdGeneratorFactory bufferingIdGeneratorFactory, JobScheduler scheduler)\n+  {\n+    this.bufferingIdGeneratorFactory = bufferingIdGeneratorFactory;\n+    this.scheduler = scheduler;\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        jobHandle = scheduler.scheduleRecurring( JobScheduler.Groups.storageMaintenance, this::maintenance, 1,\n-                TimeUnit.SECONDS );\n-    }\n+  @Override\n+  public void start()\n+  {\n+    jobHandle = scheduler.scheduleRecurring(JobScheduler.Groups.storageMaintenance, this::maintenance, 1,\n+        TimeUnit.SECONDS);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        jobHandle.cancel( false );\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    jobHandle.cancel(false);\n+  }\n \n-    @Override\n-    public void clear()\n-    {\n-        bufferingIdGeneratorFactory.clear();\n-    }\n+  @Override\n+  public void clear()\n+  {\n+    bufferingIdGeneratorFactory.clear();\n+  }\n \n-    @Override\n-    public void maintenance()\n-    {\n-        bufferingIdGeneratorFactory.maintenance();\n-    }\n+  @Override\n+  public void maintenance()\n+  {\n+    bufferingIdGeneratorFactory.maintenance();\n+  }\n \n-    @Override\n-    public void initialize( Supplier<KernelTransactionsSnapshot> transactionsSnapshotSupplier )\n-    {\n-        bufferingIdGeneratorFactory.initialize( transactionsSnapshotSupplier );\n-    }\n+  @Override\n+  public void initialize(Supplier<KernelTransactionsSnapshot> transactionsSnapshotSupplier)\n+  {\n+    bufferingIdGeneratorFactory.initialize(transactionsSnapshotSupplier);\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2525/BufferedIdController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2525/BufferedIdController.java\nindex 1017b7e10d1..22eb45ee4f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2525/BufferedIdController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2525/BufferedIdController.java\n@@ -74,4 +74,4 @@ public class BufferedIdController extends LifecycleAdapter implements IdControll\n     {\n         bufferingIdGeneratorFactory.initialize( transactionsSnapshotSupplier );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "self-xdsd-self-storage",
    "error_id": "43",
    "information": {
        "errors": [
            {
                "line": "65",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            invoices.getById(1)\n        );\n        for(final InvoicedTask invoiced : ofInvoiceOne) {\n            final Task task = invoiced.task();\n            MatcherAssert.assertThat(\n                invoiced.invoice().invoiceId(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..33b642e4f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/43/SelfInvoicedTasksITCase.java\n@@ -62,7 +62,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..73ab1c5eee3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/43/SelfInvoicedTasksITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.*;\n@@ -32,6 +33,7 @@ import java.math.BigDecimal;\n \n /**\n  * Integration tests for {@link SelfInvoicedTasks}.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.4\n@@ -42,7 +44,7 @@ public final class SelfInvoicedTasksITCase {\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+    @Test(expected = UnsupportedOperationException.class)\n     public void cannotIterate() {\n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n@@ -62,7 +64,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n@@ -89,6 +91,7 @@ public final class SelfInvoicedTasksITCase {\n \n     /**\n      * SelfInvoicedTask can register/Invoice a task.\n+     *\n      * @checkstyle ExecutableStatementCount (100 lines)\n      */\n     @Test\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'\"amihaiemil/docker-java-api\"' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'\"john\"' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'\"amihaiemil/docker-java-api\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'\"alexandra\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'60' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'100' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'15000' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'15000' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'100' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "'15100' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'60' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "'\"amihaiemil/docker-jaba-api\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..1fc1648cc27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/43/SelfInvoicedTasksITCase.java\n@@ -42,7 +42,7 @@ public final class SelfInvoicedTasksITCase {\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+    @Test(expected = UnsupportedOperationException.class)\n     public void cannotIterate() {\n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n@@ -55,34 +55,45 @@ public final class SelfInvoicedTasksITCase {\n      */\n     @Test\n     public void returnsTasksOfInvoice() {\n-        final Storage storage = new SelfJooq(new H2Database());\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n         final Invoices invoices = storage.invoices();\n         final InvoicedTasks tasks = storage.invoicedTasks();\n \n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n-            invoices.getById(1)\n+            invoices.getById(\n+    1\n+    )\n         );\n         for(final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n-                Matchers.equalTo(1)\n+                Matchers.equalTo(\n+    1\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.project().repoFullName(),\n-                Matchers.equalTo(\"amihaiemil/docker-java-api\")\n+                Matchers.equalTo(\n+    \"amihaiemil/docker-java-api\"\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.project().provider(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n+                Matchers.equalTo(Provider.Names.GITHUB\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.assignee().username(),\n-                Matchers.equalTo(\"john\")\n+                Matchers.equalTo(\n+    \"john\"\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.role(),\n-                Matchers.equalTo(Contract.Roles.DEV)\n+                Matchers.equalTo(Contract.Roles.DEV\n+    )\n             );\n         }\n     }\n@@ -93,9 +104,11 @@ public final class SelfInvoicedTasksITCase {\n      */\n     @Test\n     public void registersTask() {\n-        final Storage storage = new SelfJooq(new H2Database());\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n         final Task toInvoice = storage.tasks().getById(\n-            \"126\", \"amihaiemil/docker-java-api\",\n+            \"126\",\n+\"amihaiemil/docker-java-api\",\n             Provider.Names.GITHUB, Boolean.FALSE\n         );\n         MatcherAssert.assertThat(\n@@ -104,11 +117,15 @@ public final class SelfInvoicedTasksITCase {\n         );\n         MatcherAssert.assertThat(\n             toInvoice.assignee().username(),\n-            Matchers.equalTo(\"alexandra\")\n+            Matchers.equalTo(\n+    \"alexandra\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             toInvoice.estimation(),\n-            Matchers.equalTo(60)\n+            Matchers.equalTo(\n+    60\n+    )\n         );\n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n@@ -116,45 +133,58 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTask invoiced = tasks.register(\n             toInvoice.contract().invoices().active(),\n             toInvoice,\n-            BigDecimal.valueOf(100),\n+            BigDecimal.valueOf(\n+    100),\n             null\n         );\n \n         MatcherAssert.assertThat(invoiced.task(), Matchers.is(toInvoice));\n         MatcherAssert.assertThat(\n             invoiced.invoicedTaskId(),\n-            Matchers.greaterThanOrEqualTo(1)\n+            Matchers.greaterThanOrEqualTo(\n+    1\n+    )\n         );\n         MatcherAssert.assertThat(\n             invoiced.task().isPullRequest(),\n-            Matchers.is(Boolean.FALSE)\n+            Matchers.is(Boolean.FALSE\n+    )\n         );\n         MatcherAssert.assertThat(\n             invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(15000))\n+            Matchers.equalTo(BigDecimal.valueOf(\n+    15000))\n         );\n         MatcherAssert.assertThat(\n             invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(15000))\n+            Matchers.equalTo(BigDecimal.valueOf(\n+    15000))\n         );\n         MatcherAssert.assertThat(\n             invoiced.projectCommission(),\n-            Matchers.equalTo(BigDecimal.valueOf(100))\n+            Matchers.equalTo(BigDecimal.valueOf(\n+    100))\n         );\n         MatcherAssert.assertThat(\n             invoiced.totalAmount(),\n-            Matchers.equalTo(BigDecimal.valueOf(15100))\n+            Matchers.equalTo(BigDecimal.valueOf(\n+    15100))\n         );\n         MatcherAssert.assertThat(\n             invoiced.task().estimation(),\n-            Matchers.equalTo(60)\n+            Matchers.equalTo(\n+    60\n+    )\n         );\n         MatcherAssert.assertThat(\n             invoiced.invoice().invoiceId(),\n-            Matchers.greaterThanOrEqualTo(1)\n+            Matchers.greaterThanOrEqualTo(\n+    1\n+    )\n         );\n         final Task removed = storage.tasks().getById(\n-            \"126\", \"amihaiemil/docker-jaba-api\",\n+            \"126\",\n+\"amihaiemil/docker-jaba-api\",\n             Provider.Names.GITHUB, Boolean.FALSE\n         );\n         MatcherAssert.assertThat(\n@@ -162,5 +192,4 @@ public final class SelfInvoicedTasksITCase {\n             Matchers.nullValue()\n         );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "72",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "column": "116",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 94, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "96",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 97, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "99",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "122",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 100, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "column": "102",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 103, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "column": "105",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "column": "128",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 106, expected level should be 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "108",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 46, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 49, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "column": "51",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 52, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "54",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 55, expected level should be 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "column": "57",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "column": "42",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "142",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "45",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 46, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "48",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 49, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "column": "51",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 52, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "54",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "97",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 55, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "column": "57",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "100",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 58, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "column": "60",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 61, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "column": "63",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "column": "99",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 64, expected level should be 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "column": "66",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 44, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 47, expected level should be 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "column": "49",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..e0826cd2a3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/43/SelfInvoicedTasksITCase.java\n@@ -27,7 +27,6 @@ import com.selfxdsd.api.storage.Storage;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n-\n import java.math.BigDecimal;\n \n /**\n@@ -36,131 +35,143 @@ import java.math.BigDecimal;\n  * @version $Id$\n  * @since 0.0.4\n  */\n+\n+\n public final class SelfInvoicedTasksITCase {\n \n     /**\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+\n+\n+    @Test( expected= UnsupportedOperationException.class)\n     public void cannotIterate() {\n-        final InvoicedTasks tasks = new SelfJooq(\n-            new H2Database()\n-        ).invoicedTasks();\n-        tasks.iterator();\n+        final InvoicedTasks tasks= new SelfJooq(\n+new H2Database()\n+                                   ) .invoicedTasks(); tasks.iterator();\n     }\n \n     /**\n      * SelfInvoicedTasks should return en existing Invoice's tasks.\n      */\n+\n     @Test\n     public void returnsTasksOfInvoice() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Invoices invoices = storage.invoices();\n-        final InvoicedTasks tasks = storage.invoicedTasks();\n-\n-        final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n-            invoices.getById(1)\n-        );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n-            final Task task = invoiced.task();\n-            MatcherAssert.assertThat(\n-                invoiced.invoice().invoiceId(),\n-                Matchers.equalTo(1)\n-            );\n-            MatcherAssert.assertThat(\n-                task.project().repoFullName(),\n-                Matchers.equalTo(\"amihaiemil/docker-java-api\")\n-            );\n-            MatcherAssert.assertThat(\n-                task.project().provider(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n-            );\n-            MatcherAssert.assertThat(\n-                task.assignee().username(),\n-                Matchers.equalTo(\"john\")\n-            );\n-            MatcherAssert.assertThat(\n-                task.role(),\n-                Matchers.equalTo(Contract.Roles.DEV)\n-            );\n-        }\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Invoices invoices= storage.invoices();\n+\n+\n+        final InvoicedTasks tasks= storage.invoicedTasks();\n+\n+\n+        final InvoicedTasks ofInvoiceOne= tasks.ofInvoice( invoices.getById( 1) );\n+\n+\n+        for( final InvoicedTask invoiced: ofInvoiceOne) {\n+                                                            final Task task= invoiced.task(); MatcherAssert.assertThat(\n+                                                                                                  invoiced.invoice() .invoiceId(),\n+                                                                                                  Matchers.equalTo( 1)\n+                                                                                              ); MatcherAssert.assertThat(\n+                                                                                                     task.project() .repoFullName(),\n+                                                                                                     Matchers.equalTo(\n+                                                                                                     \"amihaiemil/docker-java-api\" )\n+                                                                                                 ); MatcherAssert.assertThat(\n+                                                                                                        task.project() .provider(),\n+                                                                                                        Matchers.equalTo( Provider.Names.GITHUB)\n+                                                                                                    ); MatcherAssert.assertThat(\n+                                                                                                           task.assignee() .username(),\n+                                                                                                           Matchers.equalTo(\n+                                                                                                           \"john\" )\n+                                                                                                       ); MatcherAssert.assertThat(\n+                                                                                                              task.role(),\n+                                                                                                              Matchers.equalTo( Contract.Roles.DEV)\n+                                                                                                          );\n+                                                        }\n     }\n \n     /**\n      * SelfInvoicedTask can register/Invoice a task.\n      * @checkstyle ExecutableStatementCount (100 lines)\n      */\n+\n     @Test\n     public void registersTask() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Task toInvoice = storage.tasks().getById(\n-            \"126\", \"amihaiemil/docker-java-api\",\n-            Provider.Names.GITHUB, Boolean.FALSE\n-        );\n-        MatcherAssert.assertThat(\n-            toInvoice,\n-            Matchers.notNullValue()\n-        );\n-        MatcherAssert.assertThat(\n-            toInvoice.assignee().username(),\n-            Matchers.equalTo(\"alexandra\")\n-        );\n-        MatcherAssert.assertThat(\n-            toInvoice.estimation(),\n-            Matchers.equalTo(60)\n-        );\n-        final InvoicedTasks tasks = new SelfJooq(\n-            new H2Database()\n-        ).invoicedTasks();\n-        final InvoicedTask invoiced = tasks.register(\n-            toInvoice.contract().invoices().active(),\n-            toInvoice,\n-            BigDecimal.valueOf(100),\n-            null\n-        );\n-\n-        MatcherAssert.assertThat(invoiced.task(), Matchers.is(toInvoice));\n-        MatcherAssert.assertThat(\n-            invoiced.invoicedTaskId(),\n-            Matchers.greaterThanOrEqualTo(1)\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.task().isPullRequest(),\n-            Matchers.is(Boolean.FALSE)\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(15000))\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(15000))\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.projectCommission(),\n-            Matchers.equalTo(BigDecimal.valueOf(100))\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.totalAmount(),\n-            Matchers.equalTo(BigDecimal.valueOf(15100))\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.task().estimation(),\n-            Matchers.equalTo(60)\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.invoice().invoiceId(),\n-            Matchers.greaterThanOrEqualTo(1)\n-        );\n-        final Task removed = storage.tasks().getById(\n-            \"126\", \"amihaiemil/docker-jaba-api\",\n-            Provider.Names.GITHUB, Boolean.FALSE\n-        );\n-        MatcherAssert.assertThat(\n-            removed,\n-            Matchers.nullValue()\n-        );\n-    }\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Task toInvoice= storage.tasks() .getById(\n+                                                  \"126\",\n+                                                  \"amihaiemil/docker-java-api\",\n+                                                  Provider.Names.GITHUB,\n+                                                  Boolean.FALSE\n+                                              ); MatcherAssert.assertThat(\n+                                                     toInvoice,\n+                                                     Matchers.notNullValue()\n+                                                 ); MatcherAssert.assertThat(\n+                                                        toInvoice.assignee() .username(),\n+                                                        Matchers.equalTo(\n+                                                        \"alexandra\" )\n+                                                    ); MatcherAssert.assertThat(\n+                                                           toInvoice.estimation(),\n+                                                           Matchers.equalTo( 60)\n+                                                       );\n \n-}\n+\n+        final InvoicedTasks tasks= new SelfJooq(\n+new H2Database()\n+                                   ) .invoicedTasks();\n+\n+\n+        final InvoicedTask invoiced= tasks.register(\n+                                         toInvoice.contract() .invoices() .active(),\n+                                         toInvoice,\n+                                         BigDecimal.valueOf( 100),\n+                                         null\n+                                     ); MatcherAssert.assertThat(\n+                                            invoiced.task(),\n+                                            Matchers.is( toInvoice)\n+                                        ); MatcherAssert.assertThat(\n+                                               invoiced.invoicedTaskId(),\n+                                               Matchers.greaterThanOrEqualTo( 1)\n+                                           ); MatcherAssert.assertThat(\n+                                                  invoiced.task() .isPullRequest(),\n+                                                  Matchers.is( Boolean.FALSE)\n+                                              ); MatcherAssert.assertThat(\n+                                                     invoiced.value(),\n+                                                     Matchers.equalTo( BigDecimal.valueOf( 15000) )\n+                                                 ); MatcherAssert.assertThat(\n+                                                        invoiced.value(),\n+                                                        Matchers.equalTo( BigDecimal.valueOf( 15000) )\n+                                                    ); MatcherAssert.assertThat(\n+                                                           invoiced.projectCommission(),\n+                                                           Matchers.equalTo( BigDecimal.valueOf( 100) )\n+                                                       ); MatcherAssert.assertThat(\n+                                                              invoiced.totalAmount(),\n+                                                              Matchers.equalTo( BigDecimal.valueOf( 15100) )\n+                                                          ); MatcherAssert.assertThat(\n+                                                                 invoiced.task() .estimation(),\n+                                                                 Matchers.equalTo( 60)\n+                                                             ); MatcherAssert.assertThat(\n+                                                                    invoiced.invoice() .invoiceId(),\n+                                                                    Matchers.greaterThanOrEqualTo( 1)\n+                                                                );\n+\n+\n+        final Task removed= storage.tasks() .getById(\n+                                                \"126\",\n+                                                \"amihaiemil/docker-jaba-api\",\n+                                                Provider.Names.GITHUB,\n+                                                Boolean.FALSE\n+                                            ); MatcherAssert.assertThat(\n+                                                   removed,\n+                                                   Matchers.nullValue()\n+                                               );\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..33b642e4f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/43/SelfInvoicedTasksITCase.java\n@@ -62,7 +62,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/43/SelfInvoicedTasksITCase.java\nindex c175f6d3af9..33b642e4f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/43/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/43/SelfInvoicedTasksITCase.java\n@@ -62,7 +62,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2167",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2167/CopyOnWriteHashMap.java\nindex 2a594bb334b..35fc1894476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2167/CopyOnWriteHashMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.AbstractCollection;\n@@ -31,228 +32,227 @@ import javax.annotation.Nonnull;\n /**\n  * Optimized for rare writes and very frequent reads in a thread safe way.\n  * Reads impose no synchronization or locking.\n- *\n+ * <p>\n  * {@link #keySet()}, {@link #values()} and {@link #entrySet()} wraps the\n  * returned iterators since they provide the {@link Iterator#remove() remove}\n  * method which isn't supported by this implementation. These iterators are also\n  * views of the map at that point in time so they don't change during their\n  * life time.\n  *\n- * @author Mattias Persson\n- *\n  * @param <K> key type\n  * @param <V> value type\n+ * @author Mattias Persson\n  */\n public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n {\n-    private volatile Map<K, V> actual = new HashMap<>();\n+  private volatile Map<K, V> actual = new HashMap<>();\n \n-    @Override\n-    public int size()\n-    {\n-        return actual.size();\n-    }\n+  @Override\n+  public int size()\n+  {\n+    return actual.size();\n+  }\n \n-    @Override\n-    public boolean isEmpty()\n-    {\n-        return actual.isEmpty();\n-    }\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return actual.isEmpty();\n+  }\n \n-    @Override\n-    public boolean containsKey( Object key )\n-    {\n-        return actual.containsKey( key );\n-    }\n+  @Override\n+  public boolean containsKey(Object key)\n+  {\n+    return actual.containsKey(key);\n+  }\n \n-    @Override\n-    public boolean containsValue( Object value )\n-    {\n-        return actual.containsValue( value );\n-    }\n+  @Override\n+  public boolean containsValue(Object value)\n+  {\n+    return actual.containsValue(value);\n+  }\n \n-    @Override\n-    public V get( Object key )\n-    {\n-        return actual.get( key );\n-    }\n+  @Override\n+  public V get(Object key)\n+  {\n+    return actual.get(key);\n+  }\n \n-    private Map<K, V> copy()\n-    {\n-        return new HashMap<>( actual );\n-    }\n+  private Map<K, V> copy()\n+  {\n+    return new HashMap<>(actual);\n+  }\n \n-    @Override\n-    public synchronized V put( K key, V value )\n+  @Override\n+  public synchronized V put(K key, V value)\n+  {\n+    Map<K, V> copy = copy();\n+    V previous = copy.put(key, value);\n+    actual = copy;\n+    return previous;\n+  }\n+\n+  @Override\n+  public synchronized V remove(Object key)\n+  {\n+    Map<K, V> copy = copy();\n+    V previous = copy.remove(key);\n+    actual = copy;\n+    return previous;\n+  }\n+\n+  @Override\n+  public synchronized void putAll(@Nonnull Map<? extends K, ? extends V> m)\n+  {\n+    Map<K, V> copy = copy();\n+    copy.putAll(m);\n+    actual = copy;\n+  }\n+\n+  @Override\n+  public synchronized void clear()\n+  {\n+    actual = new HashMap<>();\n+  }\n+\n+  private static class UnsupportedRemoveIterator<T> implements Iterator<T>\n+  {\n+    private final Iterator<T> actual;\n+\n+    UnsupportedRemoveIterator(Iterator<T> actual)\n     {\n-        Map<K, V> copy = copy();\n-        V previous = copy.put( key, value );\n-        actual = copy;\n-        return previous;\n+      this.actual = actual;\n     }\n \n     @Override\n-    public synchronized V remove( Object key )\n+    public boolean hasNext()\n     {\n-        Map<K, V> copy = copy();\n-        V previous = copy.remove( key );\n-        actual = copy;\n-        return previous;\n+      return actual.hasNext();\n     }\n \n     @Override\n-    public synchronized void putAll( @Nonnull Map<? extends K, ? extends V> m )\n+    public T next()\n     {\n-        Map<K, V> copy = copy();\n-        copy.putAll( m );\n-        actual = copy;\n+      return actual.next();\n     }\n \n     @Override\n-    public synchronized void clear()\n+    public void remove()\n     {\n-        actual = new HashMap<>();\n+      throw new UnsupportedOperationException();\n     }\n+  }\n \n-    private static class UnsupportedRemoveIterator<T> implements Iterator<T>\n+  @Nonnull\n+  @Override\n+  public Set<K> keySet()\n+  {\n+    return new AbstractSet<K>()\n     {\n-        private final Iterator<T> actual;\n-\n-        UnsupportedRemoveIterator( Iterator<T> actual )\n-        {\n-            this.actual = actual;\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            return actual.hasNext();\n-        }\n+      @Override\n+      public boolean remove(Object o)\n+      {\n+        return CopyOnWriteHashMap.this.remove(o) != null;\n+      }\n \n-        @Override\n-        public T next()\n-        {\n-            return actual.next();\n-        }\n+      @Nonnull\n+      @Override\n+      public Iterator<K> iterator()\n+      {\n+        return new UnsupportedRemoveIterator<>(actual.keySet().iterator());\n+      }\n \n-        @Override\n-        public void remove()\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-    }\n+      @Override\n+      public int size()\n+      {\n+        return actual.size();\n+      }\n+    };\n+  }\n \n-    @Nonnull\n-    @Override\n-    public Set<K> keySet()\n+  @Nonnull\n+  @Override\n+  public Collection<V> values()\n+  {\n+    return new AbstractCollection<V>()\n     {\n-        return new AbstractSet<K>()\n-        {\n-            @Override\n-            public boolean remove( Object o )\n-            {\n-                return CopyOnWriteHashMap.this.remove( o ) != null;\n-            }\n+      @Nonnull\n+      @Override\n+      public Iterator<V> iterator()\n+      {\n+        return new UnsupportedRemoveIterator<>(actual.values().iterator());\n+      }\n \n-            @Nonnull\n-            @Override\n-            public Iterator<K> iterator()\n-            {\n-                return new UnsupportedRemoveIterator<>( actual.keySet().iterator() );\n-            }\n-\n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n-        };\n-    }\n+      @Override\n+      public int size()\n+      {\n+        return actual.size();\n+      }\n+    };\n+  }\n \n-    @Nonnull\n-    @Override\n-    public Collection<V> values()\n+  @Nonnull\n+  @Override\n+  public Set<Entry<K, V>> entrySet()\n+  {\n+    return new AbstractSet<Entry<K, V>>()\n     {\n-        return new AbstractCollection<V>()\n-        {\n-            @Nonnull\n-            @Override\n-            public Iterator<V> iterator()\n-            {\n-                return new UnsupportedRemoveIterator<>( actual.values().iterator() );\n-            }\n-\n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n-        };\n-    }\n+      @Override\n+      public boolean remove(Object o)\n+      {\n+        throw new UnsupportedOperationException();\n+      }\n \n-    @Nonnull\n-    @Override\n-    public Set<Entry<K, V>> entrySet()\n-    {\n-        return new AbstractSet<Entry<K,V>>()\n+      @Nonnull\n+      @Override\n+      public Iterator<Entry<K, V>> iterator()\n+      {\n+        return new UnsupportedRemoveIterator<Entry<K, V>>(actual.entrySet().iterator())\n         {\n-            @Override\n-            public boolean remove( Object o )\n-            {\n-                throw new UnsupportedOperationException();\n-            }\n-\n-            @Nonnull\n-            @Override\n-            public Iterator<Entry<K, V>> iterator()\n+          @Override\n+          public Entry<K, V> next()\n+          {\n+            final Entry<K, V> actualNext = super.next();\n+            return new Entry<K, V>()\n             {\n-                return new UnsupportedRemoveIterator<Entry<K,V>>( actual.entrySet().iterator() )\n-                {\n-                    @Override\n-                    public Entry<K, V> next()\n-                    {\n-                        final Entry<K, V> actualNext = super.next();\n-                        return new Entry<K,V>()\n-                        {\n-                            @Override\n-                            public K getKey()\n-                            {\n-                                return actualNext.getKey();\n-                            }\n+              @Override\n+              public K getKey()\n+              {\n+                return actualNext.getKey();\n+              }\n \n-                            @Override\n-                            public V getValue()\n-                            {\n-                                return actualNext.getValue();\n-                            }\n+              @Override\n+              public V getValue()\n+              {\n+                return actualNext.getValue();\n+              }\n \n-                            @Override\n-                            public V setValue( V value )\n-                            {\n-                                throw new UnsupportedOperationException();\n-                            }\n-\n-                            @Override\n-                            public boolean equals( Object obj )\n-                            {\n-                                return actualNext.equals( obj );\n-                            }\n+              @Override\n+              public V setValue(V value)\n+              {\n+                throw new UnsupportedOperationException();\n+              }\n \n-                            @Override\n-                            public int hashCode()\n-                            {\n-                                return actualNext.hashCode();\n-                            }\n-                        };\n-                    }\n-                };\n-            }\n+              @Override\n+              public boolean equals(Object obj)\n+              {\n+                return actualNext.equals(obj);\n+              }\n \n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n+              @Override\n+              public int hashCode()\n+              {\n+                return actualNext.hashCode();\n+              }\n+            };\n+          }\n         };\n-    }\n+      }\n+\n+      @Override\n+      public int size()\n+      {\n+        return actual.size();\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 233
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2167/CopyOnWriteHashMap.java\nindex 2a594bb334b..c2186159356 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2167/CopyOnWriteHashMap.java\n@@ -43,9 +43,9 @@ import javax.annotation.Nonnull;\n  * @param <K> key type\n  * @param <V> value type\n  */\n-public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n+public class CopyOnWriteHashMap<K,V> implements Map<K, V>\n {\n-    private volatile Map<K, V> actual = new HashMap<>();\n+    private volatile Map<K,V> actual = new HashMap<>();\n \n     @Override\n     public int size()\n@@ -77,7 +77,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n         return actual.get( key );\n     }\n \n-    private Map<K, V> copy()\n+    private Map<K,V> copy()\n     {\n         return new HashMap<>( actual );\n     }\n@@ -85,7 +85,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized V put( K key, V value )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         V previous = copy.put( key, value );\n         actual = copy;\n         return previous;\n@@ -94,7 +94,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized V remove( Object key )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         V previous = copy.remove( key );\n         actual = copy;\n         return previous;\n@@ -103,7 +103,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized void putAll( @Nonnull Map<? extends K, ? extends V> m )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         copy.putAll( m );\n         actual = copy;\n     }\n@@ -209,9 +209,9 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n                 return new UnsupportedRemoveIterator<Entry<K,V>>( actual.entrySet().iterator() )\n                 {\n                     @Override\n-                    public Entry<K, V> next()\n+                    public Entry<K,V> next()\n                     {\n-                        final Entry<K, V> actualNext = super.next();\n+                        final Entry<K,V> actualNext = super.next();\n                         return new Entry<K,V>()\n                         {\n                             @Override\n@@ -255,4 +255,4 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "117",
                    "column": "52",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "215",
                    "column": "26",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2167/CopyOnWriteHashMap.java\nindex 2a594bb334b..a4cd78c14bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2167/CopyOnWriteHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2167/CopyOnWriteHashMap.java\n@@ -43,10 +43,10 @@ import javax.annotation.Nonnull;\n  * @param <K> key type\n  * @param <V> value type\n  */\n-public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n-{\n-    private volatile Map<K, V> actual = new HashMap<>();\n \n+public class CopyOnWriteHashMap < K, V> implements Map<K,V>\n+{\n+    private volatile Map<K,V> actual = new HashMap<>();\n     @Override\n     public int size()\n     {\n@@ -77,7 +77,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n         return actual.get( key );\n     }\n \n-    private Map<K, V> copy()\n+    private Map<K,V> copy()\n     {\n         return new HashMap<>( actual );\n     }\n@@ -85,7 +85,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized V put( K key, V value )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         V previous = copy.put( key, value );\n         actual = copy;\n         return previous;\n@@ -94,7 +94,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized V remove( Object key )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         V previous = copy.remove( key );\n         actual = copy;\n         return previous;\n@@ -103,7 +103,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     @Override\n     public synchronized void putAll( @Nonnull Map<? extends K, ? extends V> m )\n     {\n-        Map<K, V> copy = copy();\n+        Map<K,V> copy = copy();\n         copy.putAll( m );\n         actual = copy;\n     }\n@@ -114,7 +114,7 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n         actual = new HashMap<>();\n     }\n \n-    private static class UnsupportedRemoveIterator<T> implements Iterator<T>\n+    private static class UnsupportedRemoveIterator <T> implements Iterator<T>\n     {\n         private final Iterator<T> actual;\n \n@@ -147,26 +147,26 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     public Set<K> keySet()\n     {\n         return new AbstractSet<K>()\n-        {\n-            @Override\n-            public boolean remove( Object o )\n-            {\n-                return CopyOnWriteHashMap.this.remove( o ) != null;\n-            }\n+{\n+    @Override\n+    public boolean remove( Object o )\n+    {\n+        return CopyOnWriteHashMap.this.remove( o ) != null;\n+    }\n \n-            @Nonnull\n-            @Override\n-            public Iterator<K> iterator()\n-            {\n-                return new UnsupportedRemoveIterator<>( actual.keySet().iterator() );\n-            }\n+    @Nonnull\n+    @Override\n+    public Iterator<K> iterator()\n+    {\n+        return new UnsupportedRemoveIterator<>( actual.keySet().iterator() );\n+    }\n \n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n-        };\n+    @Override\n+    public int size()\n+    {\n+        return actual.size();\n+    }\n+};\n     }\n \n     @Nonnull\n@@ -174,85 +174,85 @@ public class CopyOnWriteHashMap<K, V> implements Map<K, V>\n     public Collection<V> values()\n     {\n         return new AbstractCollection<V>()\n-        {\n-            @Nonnull\n-            @Override\n-            public Iterator<V> iterator()\n-            {\n-                return new UnsupportedRemoveIterator<>( actual.values().iterator() );\n-            }\n+{\n+    @Nonnull\n+    @Override\n+    public Iterator<V> iterator()\n+    {\n+        return new UnsupportedRemoveIterator<>( actual.values().iterator() );\n+    }\n \n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n-        };\n+    @Override\n+    public int size()\n+    {\n+        return actual.size();\n+    }\n+};\n     }\n \n     @Nonnull\n     @Override\n-    public Set<Entry<K, V>> entrySet()\n+    public Set<Entry<K,V>> entrySet()\n     {\n         return new AbstractSet<Entry<K,V>>()\n-        {\n-            @Override\n-            public boolean remove( Object o )\n-            {\n-                throw new UnsupportedOperationException();\n-            }\n+{\n+    @Override\n+    public boolean remove( Object o )\n+    {\n+        throw new UnsupportedOperationException();\n+    }\n \n-            @Nonnull\n-            @Override\n-            public Iterator<Entry<K, V>> iterator()\n-            {\n-                return new UnsupportedRemoveIterator<Entry<K,V>>( actual.entrySet().iterator() )\n-                {\n-                    @Override\n-                    public Entry<K, V> next()\n-                    {\n-                        final Entry<K, V> actualNext = super.next();\n-                        return new Entry<K,V>()\n-                        {\n-                            @Override\n-                            public K getKey()\n-                            {\n-                                return actualNext.getKey();\n-                            }\n+    @Nonnull\n+    @Override\n+    public Iterator<Entry<K,V>> iterator()\n+    {\n+        return new UnsupportedRemoveIterator<Entry<K,V>>( actual.entrySet().iterator() )\n+{\n+    @Override\n+    public Entry<K,V> next()\n+    {\n+        final Entry<K,V> actualNext = super.next();\n+        return new Entry <K,V>()\n+{\n+    @Override\n+    public K getKey()\n+    {\n+        return actualNext.getKey();\n+    }\n \n-                            @Override\n-                            public V getValue()\n-                            {\n-                                return actualNext.getValue();\n-                            }\n+    @Override\n+    public V getValue()\n+    {\n+        return actualNext.getValue();\n+    }\n \n-                            @Override\n-                            public V setValue( V value )\n-                            {\n-                                throw new UnsupportedOperationException();\n-                            }\n+    @Override\n+    public V setValue( V value )\n+    {\n+        throw new UnsupportedOperationException();\n+    }\n \n-                            @Override\n-                            public boolean equals( Object obj )\n-                            {\n-                                return actualNext.equals( obj );\n-                            }\n+    @Override\n+    public boolean equals( Object obj )\n+    {\n+        return actualNext.equals( obj );\n+    }\n \n-                            @Override\n-                            public int hashCode()\n-                            {\n-                                return actualNext.hashCode();\n-                            }\n-                        };\n-                    }\n-                };\n-            }\n+    @Override\n+    public int hashCode()\n+    {\n+        return actualNext.hashCode();\n+    }\n+};\n+    }\n+};\n+    }\n \n-            @Override\n-            public int size()\n-            {\n-                return actual.size();\n-            }\n-        };\n+    @Override\n+    public int size()\n+    {\n+        return actual.size();\n+    }\n+};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 97
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
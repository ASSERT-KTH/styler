{
    "project_name": "LoboEvolution-LoboEvolution",
    "error_id": "520",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic interface HTMLSelectElement extends HTMLElement {\n\t/**\n\t * Add a new element to the collection of OPTION elements for this\n\t * SELECT. This method is the equivalent of the\n\t * appendChild method of the Node interface if the",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "42",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/520/HTMLSelectElement.java\nindex 0baaaaf64d0..8ad9d40abe1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/520/HTMLSelectElement.java\n@@ -38,7 +38,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n+/**\n \t * Add a new element to the collection of OPTION elements for this\n \t * SELECT. This method is the equivalent of the\n \t * appendChild method of the Node interface if the\n@@ -54,7 +54,7 @@ public interface HTMLSelectElement extends HTMLElement {\n \t *                         descendant of the SELECT element.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid add(HTMLElement element, HTMLElement before) throws DOMException;\n+ void add(HTMLElement element, HTMLElement before) throws DOMException;\n \n \t/**\n \t * Removes keyboard focus from this element.\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/520/HTMLSelectElement.java\nindex 0baaaaf64d0..0a557ff1fc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/520/HTMLSelectElement.java\n@@ -38,191 +38,191 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n-\t * Add a new element to the collection of OPTION elements for this\n-\t * SELECT. This method is the equivalent of the\n-\t * appendChild method of the Node interface if the\n-\t * before parameter is null. It is equivalent to the\n-\t * insertBefore method on the parent of before in all\n-\t * other cases. This method may have no effect if the new element is not an\n-\t * OPTION or an OPTGROUP.\n-\t *\n-\t * @param element The element to add.\n-\t * @param before  The element to insert before, or null for the\n-\t *                tail of the list.\n-\t * @exception DOMException NOT_FOUND_ERR: Raised if before is not a\n-\t *                         descendant of the SELECT element.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid add(HTMLElement element, HTMLElement before) throws DOMException;\n-\n-\t/**\n-\t * Removes keyboard focus from this element.\n-\t */\n-\tvoid blur();\n-\n-\t/**\n-\t * Gives keyboard focus to this element.\n-\t */\n-\tvoid focus();\n-\n-\t/**\n-\t * The control is unavailable in this context. See the disabled attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @return a boolean.\n-\t */\n-\tboolean getDisabled();\n-\n-\t/**\n-\t * Returns the FORM element containing this control. Returns\n-\t * null if this control is not within the context of a form.\n-\t *\n-\t * @return a {@link org.loboevolution.html.dom.HTMLFormElement} object.\n-\t */\n-\tHTMLFormElement getForm();\n-\n-\t/**\n-\t * The number of options in this SELECT.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getLength();\n-\n-\t/**\n-\t * If true, multiple OPTION elements may be selected in this\n-\t * SELECT. See the multiple attribute definition in HTML 4.01.\n-\t *\n-\t * @return a boolean.\n-\t */\n-\tboolean getMultiple();\n-\n-\t/**\n-\t * Form control or object name when submitted with a form. See the name\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getName();\n-\n-\t/**\n-\t * The collection of OPTION elements contained by this element.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a {@link org.loboevolution.html.dom.HTMLOptionsCollection} object.\n-\t */\n-\tHTMLOptionsCollection getOptions();\n-\n-\t/**\n-\t * The ordinal index of the selected option, starting from 0. The value -1 is\n-\t * returned if no element is selected. If multiple options are selected, the\n-\t * index of the first selected option is returned.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getSelectedIndex();\n-\n-\t/**\n-\t * Number of visible rows. See the size attribute definition in HTML 4.01.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getSize();\n-\n-\t/**\n-\t * Index that represents the element's position in the tabbing order. See the\n-\t * tabindex attribute definition in HTML 4.01.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getTabIndex();\n-\n-\t/**\n-\t * The type of this form control. This is the string \"select-multiple\" when the\n-\t * multiple attribute is true and the string \"select-one\" when\n-\t * false.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getType();\n-\n-\t/**\n-\t * The current form control value (i.e. the value of the currently selected\n-\t * option), if multiple options are selected this is the value of the first\n-\t * selected option.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getValue();\n-\n-\t/**\n-\t * Remove an element from the collection of OPTION elements for\n-\t * this SELECT. Does nothing if no element has the given index.\n-\t *\n-\t * @param index The index of the item to remove, starting from 0.\n-\t */\n-\tvoid remove(int index);\n-\n-\t/**\n-\t * The control is unavailable in this context. See the disabled attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @param disabled a boolean.\n-\t */\n-\tvoid setDisabled(boolean disabled);\n-\n-\t/**\n-\t * The number of options in this SELECT.\n-\t *\n-\t * @exception DOMException NOT_SUPPORTED_ERR: if setting the length is not\n-\t *                         allowed by the implementation.\n-\t * @version DOM Level 2\n-\t * @param length a int.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid setLength(int length) throws DOMException;\n-\n-\t/**\n-\t * If true, multiple OPTION elements may be selected in this\n-\t * SELECT. See the multiple attribute definition in HTML 4.01.\n-\t *\n-\t * @param multiple a boolean.\n-\t */\n-\tvoid setMultiple(boolean multiple);\n-\n-\t/**\n-\t * Form control or object name when submitted with a form. See the name\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @param name a {@link java.lang.String} object.\n-\t */\n-\tvoid setName(String name);\n-\n-\t/**\n-\t * The ordinal index of the selected option, starting from 0. The value -1 is\n-\t * returned if no element is selected. If multiple options are selected, the\n-\t * index of the first selected option is returned.\n-\t *\n-\t * @param selectedIndex a int.\n-\t */\n-\tvoid setSelectedIndex(int selectedIndex);\n-\n-\t/**\n-\t * Index that represents the element's position in the tabbing order. See the\n-\t * tabindex attribute definition in HTML 4.01.\n-\t *\n-\t * @param tabIndex a int.\n-\t */\n-\tvoid setTabIndex(int tabIndex);\n-\n-\t/**\n-\t * The current form control value (i.e. the value of the currently selected\n-\t * option), if multiple options are selected this is the value of the first\n-\t * selected option.\n-\t *\n-\t * @param value a {@link java.lang.String} object.\n-\t */\n-\tvoid setValue(String value);\n+    /**\n+     * Add a new element to the collection of OPTION elements for this\n+     * SELECT. This method is the equivalent of the\n+     * appendChild method of the Node interface if the\n+     * before parameter is null. It is equivalent to the\n+     * insertBefore method on the parent of before in all\n+     * other cases. This method may have no effect if the new element is not an\n+     * OPTION or an OPTGROUP.\n+     *\n+     * @param element The element to add.\n+     * @param before  The element to insert before, or null for the\n+     *                tail of the list.\n+     * @throws DOMException             NOT_FOUND_ERR: Raised if before is not a\n+     *                                  descendant of the SELECT element.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+    void add(HTMLElement element, HTMLElement before) throws DOMException;\n+\n+    /**\n+     * Removes keyboard focus from this element.\n+     */\n+    void blur();\n+\n+    /**\n+     * Gives keyboard focus to this element.\n+     */\n+    void focus();\n+\n+    /**\n+     * The control is unavailable in this context. See the disabled attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @return a boolean.\n+     */\n+    boolean getDisabled();\n+\n+    /**\n+     * Returns the FORM element containing this control. Returns\n+     * null if this control is not within the context of a form.\n+     *\n+     * @return a {@link org.loboevolution.html.dom.HTMLFormElement} object.\n+     */\n+    HTMLFormElement getForm();\n+\n+    /**\n+     * The number of options in this SELECT.\n+     *\n+     * @return a int.\n+     * @version DOM Level 2\n+     */\n+    int getLength();\n+\n+    /**\n+     * If true, multiple OPTION elements may be selected in this\n+     * SELECT. See the multiple attribute definition in HTML 4.01.\n+     *\n+     * @return a boolean.\n+     */\n+    boolean getMultiple();\n+\n+    /**\n+     * Form control or object name when submitted with a form. See the name\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getName();\n+\n+    /**\n+     * The collection of OPTION elements contained by this element.\n+     *\n+     * @return a {@link org.loboevolution.html.dom.HTMLOptionsCollection} object.\n+     * @version DOM Level 2\n+     */\n+    HTMLOptionsCollection getOptions();\n+\n+    /**\n+     * The ordinal index of the selected option, starting from 0. The value -1 is\n+     * returned if no element is selected. If multiple options are selected, the\n+     * index of the first selected option is returned.\n+     *\n+     * @return a int.\n+     */\n+    int getSelectedIndex();\n+\n+    /**\n+     * Number of visible rows. See the size attribute definition in HTML 4.01.\n+     *\n+     * @return a int.\n+     */\n+    int getSize();\n+\n+    /**\n+     * Index that represents the element's position in the tabbing order. See the\n+     * tabindex attribute definition in HTML 4.01.\n+     *\n+     * @return a int.\n+     */\n+    int getTabIndex();\n+\n+    /**\n+     * The type of this form control. This is the string \"select-multiple\" when the\n+     * multiple attribute is true and the string \"select-one\" when\n+     * false.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getType();\n+\n+    /**\n+     * The current form control value (i.e. the value of the currently selected\n+     * option), if multiple options are selected this is the value of the first\n+     * selected option.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getValue();\n+\n+    /**\n+     * Remove an element from the collection of OPTION elements for\n+     * this SELECT. Does nothing if no element has the given index.\n+     *\n+     * @param index The index of the item to remove, starting from 0.\n+     */\n+    void remove(int index);\n+\n+    /**\n+     * The control is unavailable in this context. See the disabled attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @param disabled a boolean.\n+     */\n+    void setDisabled(boolean disabled);\n+\n+    /**\n+     * The number of options in this SELECT.\n+     *\n+     * @param length a int.\n+     * @throws DOMException             NOT_SUPPORTED_ERR: if setting the length is not\n+     *                                  allowed by the implementation.\n+     * @throws org.w3c.dom.DOMException if any.\n+     * @version DOM Level 2\n+     */\n+    void setLength(int length) throws DOMException;\n+\n+    /**\n+     * If true, multiple OPTION elements may be selected in this\n+     * SELECT. See the multiple attribute definition in HTML 4.01.\n+     *\n+     * @param multiple a boolean.\n+     */\n+    void setMultiple(boolean multiple);\n+\n+    /**\n+     * Form control or object name when submitted with a form. See the name\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @param name a {@link java.lang.String} object.\n+     */\n+    void setName(String name);\n+\n+    /**\n+     * The ordinal index of the selected option, starting from 0. The value -1 is\n+     * returned if no element is selected. If multiple options are selected, the\n+     * index of the first selected option is returned.\n+     *\n+     * @param selectedIndex a int.\n+     */\n+    void setSelectedIndex(int selectedIndex);\n+\n+    /**\n+     * Index that represents the element's position in the tabbing order. See the\n+     * tabindex attribute definition in HTML 4.01.\n+     *\n+     * @param tabIndex a int.\n+     */\n+    void setTabIndex(int tabIndex);\n+\n+    /**\n+     * The current form control value (i.e. the value of the currently selected\n+     * option), if multiple options are selected this is the value of the first\n+     * selected option.\n+     *\n+     * @param value a {@link java.lang.String} object.\n+     */\n+    void setValue(String value);\n \n }\n",
            "diff_size": 186
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/naturalize/520/HTMLSelectElement.java\nindex 0baaaaf64d0..1c09ea6c5da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/naturalize/520/HTMLSelectElement.java\n@@ -38,7 +38,8 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n+\n+    /**\n \t * Add a new element to the collection of OPTION elements for this\n \t * SELECT. This method is the equivalent of the\n \t * appendChild method of the Node interface if the\n@@ -224,5 +225,4 @@ public interface HTMLSelectElement extends HTMLElement {\n \t * @param value a {@link java.lang.String} object.\n \t */\n \tvoid setValue(String value);\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/520/HTMLSelectElement.java\nindex 0baaaaf64d0..e8c0b9be277 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/520/HTMLSelectElement.java\n@@ -37,192 +37,237 @@ import org.w3c.dom.DOMException;\n  * @author utente\n  * @version $Id: $Id\n  */\n+\n+\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n-\t * Add a new element to the collection of OPTION elements for this\n-\t * SELECT. This method is the equivalent of the\n-\t * appendChild method of the Node interface if the\n-\t * before parameter is null. It is equivalent to the\n-\t * insertBefore method on the parent of before in all\n-\t * other cases. This method may have no effect if the new element is not an\n-\t * OPTION or an OPTGROUP.\n-\t *\n-\t * @param element The element to add.\n-\t * @param before  The element to insert before, or null for the\n-\t *                tail of the list.\n-\t * @exception DOMException NOT_FOUND_ERR: Raised if before is not a\n-\t *                         descendant of the SELECT element.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid add(HTMLElement element, HTMLElement before) throws DOMException;\n-\n-\t/**\n-\t * Removes keyboard focus from this element.\n-\t */\n-\tvoid blur();\n-\n-\t/**\n-\t * Gives keyboard focus to this element.\n-\t */\n-\tvoid focus();\n-\n-\t/**\n-\t * The control is unavailable in this context. See the disabled attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @return a boolean.\n-\t */\n-\tboolean getDisabled();\n-\n-\t/**\n-\t * Returns the FORM element containing this control. Returns\n-\t * null if this control is not within the context of a form.\n-\t *\n-\t * @return a {@link org.loboevolution.html.dom.HTMLFormElement} object.\n-\t */\n-\tHTMLFormElement getForm();\n-\n-\t/**\n-\t * The number of options in this SELECT.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getLength();\n-\n-\t/**\n-\t * If true, multiple OPTION elements may be selected in this\n-\t * SELECT. See the multiple attribute definition in HTML 4.01.\n-\t *\n-\t * @return a boolean.\n-\t */\n-\tboolean getMultiple();\n-\n-\t/**\n-\t * Form control or object name when submitted with a form. See the name\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getName();\n-\n-\t/**\n-\t * The collection of OPTION elements contained by this element.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a {@link org.loboevolution.html.dom.HTMLOptionsCollection} object.\n-\t */\n-\tHTMLOptionsCollection getOptions();\n-\n-\t/**\n-\t * The ordinal index of the selected option, starting from 0. The value -1 is\n-\t * returned if no element is selected. If multiple options are selected, the\n-\t * index of the first selected option is returned.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getSelectedIndex();\n-\n-\t/**\n-\t * Number of visible rows. See the size attribute definition in HTML 4.01.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getSize();\n-\n-\t/**\n-\t * Index that represents the element's position in the tabbing order. See the\n-\t * tabindex attribute definition in HTML 4.01.\n-\t *\n-\t * @return a int.\n-\t */\n-\tint getTabIndex();\n-\n-\t/**\n-\t * The type of this form control. This is the string \"select-multiple\" when the\n-\t * multiple attribute is true and the string \"select-one\" when\n-\t * false.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getType();\n-\n-\t/**\n-\t * The current form control value (i.e. the value of the currently selected\n-\t * option), if multiple options are selected this is the value of the first\n-\t * selected option.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getValue();\n-\n-\t/**\n-\t * Remove an element from the collection of OPTION elements for\n-\t * this SELECT. Does nothing if no element has the given index.\n-\t *\n-\t * @param index The index of the item to remove, starting from 0.\n-\t */\n-\tvoid remove(int index);\n-\n-\t/**\n-\t * The control is unavailable in this context. See the disabled attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @param disabled a boolean.\n-\t */\n-\tvoid setDisabled(boolean disabled);\n-\n-\t/**\n-\t * The number of options in this SELECT.\n-\t *\n-\t * @exception DOMException NOT_SUPPORTED_ERR: if setting the length is not\n-\t *                         allowed by the implementation.\n-\t * @version DOM Level 2\n-\t * @param length a int.\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid setLength(int length) throws DOMException;\n-\n-\t/**\n-\t * If true, multiple OPTION elements may be selected in this\n-\t * SELECT. See the multiple attribute definition in HTML 4.01.\n-\t *\n-\t * @param multiple a boolean.\n-\t */\n-\tvoid setMultiple(boolean multiple);\n-\n-\t/**\n-\t * Form control or object name when submitted with a form. See the name\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @param name a {@link java.lang.String} object.\n-\t */\n-\tvoid setName(String name);\n-\n-\t/**\n-\t * The ordinal index of the selected option, starting from 0. The value -1 is\n-\t * returned if no element is selected. If multiple options are selected, the\n-\t * index of the first selected option is returned.\n-\t *\n-\t * @param selectedIndex a int.\n-\t */\n-\tvoid setSelectedIndex(int selectedIndex);\n-\n-\t/**\n-\t * Index that represents the element's position in the tabbing order. See the\n-\t * tabindex attribute definition in HTML 4.01.\n-\t *\n-\t * @param tabIndex a int.\n-\t */\n-\tvoid setTabIndex(int tabIndex);\n-\n-\t/**\n-\t * The current form control value (i.e. the value of the currently selected\n-\t * option), if multiple options are selected this is the value of the first\n-\t * selected option.\n-\t *\n-\t * @param value a {@link java.lang.String} object.\n-\t */\n-\tvoid setValue(String value);\n-\n-}\n+    /**\n+     * Add a new element to the collection of OPTION elements for this\n+     * SELECT. This method is the equivalent of the\n+     * appendChild method of the Node interface if the\n+     * before parameter is null. It is equivalent to the\n+     * insertBefore method on the parent of before in all\n+     * other cases. This method may have no effect if the new element is not an\n+     * OPTION or an OPTGROUP.\n+     *\n+     * @param element The element to add.\n+     * @param before  The element to insert before, or null for the\n+     *                tail of the list.\n+     * @exception DOMException NOT_FOUND_ERR: Raised if before is not a\n+     *                         descendant of the SELECT element.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n+    void add(HTMLElement element, HTMLElement before) throws DOMException;\n+\n+    /**\n+     * Removes keyboard focus from this element.\n+     */\n+\n+\n+    void blur();\n+\n+    /**\n+     * Gives keyboard focus to this element.\n+     */\n+\n+\n+    void focus();\n+\n+    /**\n+     * The control is unavailable in this context. See the disabled attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @return a boolean.\n+     */\n+\n+\n+    boolean getDisabled();\n+\n+    /**\n+     * Returns the FORM element containing this control. Returns\n+     * null if this control is not within the context of a form.\n+     *\n+     * @return a {@link org.loboevolution.html.dom.HTMLFormElement} object.\n+     */\n+\n+\n+    HTMLFormElement getForm();\n+\n+    /**\n+     * The number of options in this SELECT.\n+     *\n+     * @version DOM Level 2\n+     * @return a int.\n+     */\n+\n+\n+    int getLength();\n+\n+    /**\n+     * If true, multiple OPTION elements may be selected in this\n+     * SELECT. See the multiple attribute definition in HTML 4.01.\n+     *\n+     * @return a boolean.\n+     */\n+\n+\n+    boolean getMultiple();\n+\n+    /**\n+     * Form control or object name when submitted with a form. See the name\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getName();\n+\n+    /**\n+     * The collection of OPTION elements contained by this element.\n+     *\n+     * @version DOM Level 2\n+     * @return a {@link org.loboevolution.html.dom.HTMLOptionsCollection} object.\n+     */\n+\n+\n+    HTMLOptionsCollection getOptions();\n+\n+    /**\n+     * The ordinal index of the selected option, starting from 0. The value -1 is\n+     * returned if no element is selected. If multiple options are selected, the\n+     * index of the first selected option is returned.\n+     *\n+     * @return a int.\n+     */\n+\n+\n+    int getSelectedIndex();\n+\n+    /**\n+     * Number of visible rows. See the size attribute definition in HTML 4.01.\n+     *\n+     * @return a int.\n+     */\n+\n+\n+    int getSize();\n+\n+    /**\n+     * Index that represents the element's position in the tabbing order. See the\n+     * tabindex attribute definition in HTML 4.01.\n+     *\n+     * @return a int.\n+     */\n+\n+\n+    int getTabIndex();\n+\n+    /**\n+     * The type of this form control. This is the string \"select-multiple\" when the\n+     * multiple attribute is true and the string \"select-one\" when\n+     * false.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getType();\n+\n+    /**\n+     * The current form control value (i.e. the value of the currently selected\n+     * option), if multiple options are selected this is the value of the first\n+     * selected option.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getValue();\n+\n+    /**\n+     * Remove an element from the collection of OPTION elements for\n+     * this SELECT. Does nothing if no element has the given index.\n+     *\n+     * @param index The index of the item to remove, starting from 0.\n+     */\n+\n+\n+    void remove(int index);\n+\n+    /**\n+     * The control is unavailable in this context. See the disabled attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @param disabled a boolean.\n+     */\n+\n+\n+    void setDisabled(boolean disabled);\n+\n+    /**\n+     * The number of options in this SELECT.\n+     *\n+     * @exception DOMException NOT_SUPPORTED_ERR: if setting the length is not\n+     *                         allowed by the implementation.\n+     * @version DOM Level 2\n+     * @param length a int.\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n+    void setLength(int length) throws DOMException;\n+\n+    /**\n+     * If true, multiple OPTION elements may be selected in this\n+     * SELECT. See the multiple attribute definition in HTML 4.01.\n+     *\n+     * @param multiple a boolean.\n+     */\n+\n+\n+    void setMultiple(boolean multiple);\n+\n+    /**\n+     * Form control or object name when submitted with a form. See the name\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @param name a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setName(String name);\n+\n+    /**\n+     * The ordinal index of the selected option, starting from 0. The value -1 is\n+     * returned if no element is selected. If multiple options are selected, the\n+     * index of the first selected option is returned.\n+     *\n+     * @param selectedIndex a int.\n+     */\n+\n+\n+    void setSelectedIndex(int selectedIndex);\n+\n+    /**\n+     * Index that represents the element's position in the tabbing order. See the\n+     * tabindex attribute definition in HTML 4.01.\n+     *\n+     * @param tabIndex a int.\n+     */\n+\n+\n+    void setTabIndex(int tabIndex);\n+\n+    /**\n+     * The current form control value (i.e. the value of the currently selected\n+     * option), if multiple options are selected this is the value of the first\n+     * selected option.\n+     *\n+     * @param value a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setValue(String value);\n+}\n\\ No newline at end of file\n",
            "diff_size": 233
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/520/HTMLSelectElement.java\nindex 0baaaaf64d0..199a2bec21c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/520/HTMLSelectElement.java\n@@ -38,7 +38,8 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n+\n+    /**\n \t * Add a new element to the collection of OPTION elements for this\n \t * SELECT. This method is the equivalent of the\n \t * appendChild method of the Node interface if the\n@@ -54,7 +55,8 @@ public interface HTMLSelectElement extends HTMLElement {\n \t *                         descendant of the SELECT element.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid add(HTMLElement element, HTMLElement before) throws DOMException;\n+\n+void add(HTMLElement element, HTMLElement before) throws DOMException;\n \n \t/**\n \t * Removes keyboard focus from this element.\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "42",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/520/HTMLSelectElement.java\nindex 0baaaaf64d0..8ad9d40abe1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/520/HTMLSelectElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/520/HTMLSelectElement.java\n@@ -38,7 +38,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLSelectElement extends HTMLElement {\n-\t/**\n+/**\n \t * Add a new element to the collection of OPTION elements for this\n \t * SELECT. This method is the equivalent of the\n \t * appendChild method of the Node interface if the\n@@ -54,7 +54,7 @@ public interface HTMLSelectElement extends HTMLElement {\n \t *                         descendant of the SELECT element.\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid add(HTMLElement element, HTMLElement before) throws DOMException;\n+ void add(HTMLElement element, HTMLElement before) throws DOMException;\n \n \t/**\n \t * Removes keyboard focus from this element.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
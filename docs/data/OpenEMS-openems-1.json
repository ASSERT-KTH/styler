{
    "project_name": "OpenEMS-openems",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "509",
                "column": "1",
                "severity": "warning",
                "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 510.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n//\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n//\t\t\t.unit(Unit.WATT)), //\n\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n\n\tprivate final Doc doc;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/1/SiChannelId.java\nindex e8eab238901..698c0eb8da9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/1/SiChannelId.java\n@@ -507,7 +507,7 @@ public enum SiChannelId implements ChannelId {\n \t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n //\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n //\t\t\t.unit(Unit.WATT)), //\n-\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n+OPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n \n \tprivate final Doc doc;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "509",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 510.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/1/SiChannelId.java\nindex e8eab238901..87aceddb0ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/1/SiChannelId.java\n@@ -47,476 +47,476 @@ import io.openems.edge.sma.enums.TimeControlledInverterOperation;\n import io.openems.edge.sma.enums.TypeOfACSubdistribution;\n \n public enum SiChannelId implements ChannelId {\n-\t// EnumReadChannels\n-\tSPEED_WIRE_CONNECTION_STATUS_OF_NETWORK_TERMINAL_A(Doc.of(SpeedWireConnectionStatusOfNetworkTerminalA.values())), //\n-\tSYSTEM_STATE(Doc.of(SystemState.values())), //\n-\tACTIVE_BATTERY_CHARGING_MODE(Doc.of(ActiveBatteryChargingMode.values())), //\n-\tMULTIFUNCTION_RELAY_STATUS(Doc.of(MultifunctionRelayStatus.values())), //\n-\tPOWER_SUPPLY_STATUS(Doc.of(PowerSupplyStatus.values())), //\n-\tREASON_FOR_GENERATOR_REQUEST(Doc.of(ReasonForGeneratorRequest.values())), //\n-\tPV_MAINS_CONNECTION(Doc.of(PvMainsConnection.values())), //\n-\tSTATUS_OF_UTILITY_GRID(Doc.of(StatusOfUtilityGrid.values())), //\n-\tGENERATOR_STATUS(Doc.of(GeneratorStatus.values())), //\n-\tDATA_TRANSFER_RATE_OF_NETWORK_TERMINAL_A(Doc.of(DataTransferRateOfNetworkTerminalA.values())), //\n-\tDUPLEX_MODE_OF_NETWORK_TERMINAL_A(Doc.of(DuplexModeOfNetworkTerminalA.values())), //\n-\tSTATUS_BATTERY_APPLICATION_AREA(Doc.of(StatusBatteryApplicationArea.values())), //\n-\tABSORPTION_PHASE_ACTIVE(Doc.of(AbsorptionPhaseActive.values())), //\n-\tCONTROL_OF_BATTERY_CHARGING_VIA_COMMUNICATION_AVAILABLE(\n-\t\t\tDoc.of(ControlOfBatteryChargingViaCommunicationAvailable.values())), //\n-\tSTATUS_DIGITAL_INPUT(Doc.of(StatusDigitalInput.values())), //\n-\tBATTERY_TYPE(Doc.of(BatteryType.values())), //\n-\tTYPE_OF_AC_SUBDISTRIBUTION(Doc.of(TypeOfACSubdistribution.values())), //\n-\tOPERATING_MODE_FOR_ACTIVE_POWER_LIMITATION(Doc.of(OperatingModeForActivePowerLimitation.values())), //\n+  // EnumReadChannels\n+  SPEED_WIRE_CONNECTION_STATUS_OF_NETWORK_TERMINAL_A(Doc.of(SpeedWireConnectionStatusOfNetworkTerminalA.values())), //\n+  SYSTEM_STATE(Doc.of(SystemState.values())), //\n+  ACTIVE_BATTERY_CHARGING_MODE(Doc.of(ActiveBatteryChargingMode.values())), //\n+  MULTIFUNCTION_RELAY_STATUS(Doc.of(MultifunctionRelayStatus.values())), //\n+  POWER_SUPPLY_STATUS(Doc.of(PowerSupplyStatus.values())), //\n+  REASON_FOR_GENERATOR_REQUEST(Doc.of(ReasonForGeneratorRequest.values())), //\n+  PV_MAINS_CONNECTION(Doc.of(PvMainsConnection.values())), //\n+  STATUS_OF_UTILITY_GRID(Doc.of(StatusOfUtilityGrid.values())), //\n+  GENERATOR_STATUS(Doc.of(GeneratorStatus.values())), //\n+  DATA_TRANSFER_RATE_OF_NETWORK_TERMINAL_A(Doc.of(DataTransferRateOfNetworkTerminalA.values())), //\n+  DUPLEX_MODE_OF_NETWORK_TERMINAL_A(Doc.of(DuplexModeOfNetworkTerminalA.values())), //\n+  STATUS_BATTERY_APPLICATION_AREA(Doc.of(StatusBatteryApplicationArea.values())), //\n+  ABSORPTION_PHASE_ACTIVE(Doc.of(AbsorptionPhaseActive.values())), //\n+  CONTROL_OF_BATTERY_CHARGING_VIA_COMMUNICATION_AVAILABLE(\n+      Doc.of(ControlOfBatteryChargingViaCommunicationAvailable.values())), //\n+  STATUS_DIGITAL_INPUT(Doc.of(StatusDigitalInput.values())), //\n+  BATTERY_TYPE(Doc.of(BatteryType.values())), //\n+  TYPE_OF_AC_SUBDISTRIBUTION(Doc.of(TypeOfACSubdistribution.values())), //\n+  OPERATING_MODE_FOR_ACTIVE_POWER_LIMITATION(Doc.of(OperatingModeForActivePowerLimitation.values())), //\n \n-\t// EnumWriteChannsl\n-\tAUTOMATIC_GENERATOR_START(Doc.of(AutomaticGeneratorStart.values())), //\n-\tMANUAL_GENERATOR_CONTROL(Doc.of(ManualGeneratorStart.values())), //\n-\tGRID_CREATING_GENERATOR(Doc.of(GridCreatingGenerator.values())), //\n-\tRISE_IN_SELF_CONSUMPTION_SWITCHED_ON(Doc.of(RiseInSelfConsumptionSwitchedOn.values())), //\n-\tACKNOWLEGDE_GENERATOR_ERRORS(Doc.of(AcknowledgeGeneratorErrors.values())), //\n-\tOPERATING_MODE_OF_ACTIVE_POWER_LIMITATION_AT_OVERFREQUENCY(\n-\t\t\tDoc.of(OperatingModeOfActivePowerLimitationAtOverFrequency.values())), //\n-\tCONFIGURATION_OF_THE_COSPHI_STARTING_POINT(Doc.of(ConfigurationOfTheCosphiStartingPoint.values())), //\n-\tCONFIGURATION_OF_THE_COSPHI_END_POINT(Doc.of(ConfigurationOfTheCosphiEndPoint.values())), //\n-\tBMS_OPERATING_MODE(Doc.of(BMSOperatingMode.values())), //\n-\tGRID_REQUEST_VIA_POWER_SWITCH_ON(Doc.of(GridRequestViPowerSwitchOn.values())), //\n-\tMANUAL_CONTROL_OF_NETWORK_CONNECTION(Doc.of(ManualControlOfNetworkConnection.values())), //\n-\tGRID_REQUEST_VIA_CHARGE_TYPE(Doc.of(GridRequestViaChargeType.values())), //\n-\tMANUAL_EQUAIZATION_CHARGE(Doc.of(ManualEqualizationCharge.values())), //\n-\tTIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(TimeControlledGeneratorOperation.values())), //\n-\tREPETITION_CYCLE_OF_TIME_CONTROLLED_GENERATOR_OPERATION(\n-\t\t\tDoc.of(RepetitionCycleOfTheTimeControlledGeneratorOperation.values())), //\n-\tTIME_CONTROLLED_INVERTER_OPERATION(Doc.of(TimeControlledInverterOperation.values())), //\n-\tREPETITION_CYCLE_OF_TIME_CONTROLLED_INVERTER(Doc.of(RepetitionCycleOfTheControlledInverter.values())), //\n-\tMEMORY_CARD_STATUS(Doc.of(MemoryCardStatus.values())), //\n-\tAUTOMATIC_FREQUENCY_SYNCHRONIZATION(Doc.of(AutomaticFrequencySynchronization.values())), //\n-\tPOWER_FEEDBACK_TO_PUBLIC_GRID_ALLOWED(Doc.of(PowerFeedbackToPublicGridAllowed.values())), //\n-\tSET_CONTROL_MODE(Doc.of(SetControlMode.values()).accessMode(AccessMode.READ_WRITE)), //\n-\tMETER_SETTING(Doc.of(MeterSetting.values())), //\n+  // EnumWriteChannsl\n+  AUTOMATIC_GENERATOR_START(Doc.of(AutomaticGeneratorStart.values())), //\n+  MANUAL_GENERATOR_CONTROL(Doc.of(ManualGeneratorStart.values())), //\n+  GRID_CREATING_GENERATOR(Doc.of(GridCreatingGenerator.values())), //\n+  RISE_IN_SELF_CONSUMPTION_SWITCHED_ON(Doc.of(RiseInSelfConsumptionSwitchedOn.values())), //\n+  ACKNOWLEGDE_GENERATOR_ERRORS(Doc.of(AcknowledgeGeneratorErrors.values())), //\n+  OPERATING_MODE_OF_ACTIVE_POWER_LIMITATION_AT_OVERFREQUENCY(\n+      Doc.of(OperatingModeOfActivePowerLimitationAtOverFrequency.values())), //\n+  CONFIGURATION_OF_THE_COSPHI_STARTING_POINT(Doc.of(ConfigurationOfTheCosphiStartingPoint.values())), //\n+  CONFIGURATION_OF_THE_COSPHI_END_POINT(Doc.of(ConfigurationOfTheCosphiEndPoint.values())), //\n+  BMS_OPERATING_MODE(Doc.of(BMSOperatingMode.values())), //\n+  GRID_REQUEST_VIA_POWER_SWITCH_ON(Doc.of(GridRequestViPowerSwitchOn.values())), //\n+  MANUAL_CONTROL_OF_NETWORK_CONNECTION(Doc.of(ManualControlOfNetworkConnection.values())), //\n+  GRID_REQUEST_VIA_CHARGE_TYPE(Doc.of(GridRequestViaChargeType.values())), //\n+  MANUAL_EQUAIZATION_CHARGE(Doc.of(ManualEqualizationCharge.values())), //\n+  TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(TimeControlledGeneratorOperation.values())), //\n+  REPETITION_CYCLE_OF_TIME_CONTROLLED_GENERATOR_OPERATION(\n+      Doc.of(RepetitionCycleOfTheTimeControlledGeneratorOperation.values())), //\n+  TIME_CONTROLLED_INVERTER_OPERATION(Doc.of(TimeControlledInverterOperation.values())), //\n+  REPETITION_CYCLE_OF_TIME_CONTROLLED_INVERTER(Doc.of(RepetitionCycleOfTheControlledInverter.values())), //\n+  MEMORY_CARD_STATUS(Doc.of(MemoryCardStatus.values())), //\n+  AUTOMATIC_FREQUENCY_SYNCHRONIZATION(Doc.of(AutomaticFrequencySynchronization.values())), //\n+  POWER_FEEDBACK_TO_PUBLIC_GRID_ALLOWED(Doc.of(PowerFeedbackToPublicGridAllowed.values())), //\n+  SET_CONTROL_MODE(Doc.of(SetControlMode.values()).accessMode(AccessMode.READ_WRITE)), //\n+  METER_SETTING(Doc.of(MeterSetting.values())), //\n \n-\t// LongReadChannels\n-\tSERIAL_NUMBER(Doc.of(OpenemsType.LONG)), //\n-\tCURRENT_BATTERY_CHARGING_SET_VOLTAGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCURRENT_SELF_CONSUMPTION(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tBATTERY_CHARGING_SOC(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tBATTERY_DISCHARGING_SOC(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tREMAINING_TIME_UNTIL_FULL_CHARGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tREMAINING_TIME_UNTIL_EQUALIZATION_CHARGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tRATED_BATTERY_CAPACITY(Doc.of(OpenemsType.LONG)), //\n+  // LongReadChannels\n+  SERIAL_NUMBER(Doc.of(OpenemsType.LONG)), //\n+  CURRENT_BATTERY_CHARGING_SET_VOLTAGE(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.VOLT)), //\n+  CURRENT_SELF_CONSUMPTION(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.WATT)), //\n+  BATTERY_CHARGING_SOC(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.WATT)), //\n+  BATTERY_DISCHARGING_SOC(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.WATT)), //\n+  REMAINING_TIME_UNTIL_FULL_CHARGE(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.SECONDS)), //\n+  REMAINING_TIME_UNTIL_EQUALIZATION_CHARGE(Doc.of(OpenemsType.LONG) //\n+      .unit(Unit.SECONDS)), //\n+  RATED_BATTERY_CAPACITY(Doc.of(OpenemsType.LONG)), //\n \n-\t// IntegerWriteChannels\n-\tBATTERY_BOOST_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.MINUTE)), //\n-\tBATTERY_EQUALIZATION_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HOUR)), //\n-\tBATTERY_FULL_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HOUR)), //\n-\tMAX_BATTERY_CHARGING_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tRATED_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGENERATOR_REQUEST_VIA_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tGENERATOR_SHUT_DOWN_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGENERATOR_START_UP_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tINITIATE_DEVICE_RESTART(Doc.of(OpenemsType.INTEGER)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_BOOST_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_FLOAT_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tNOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tDIFFERENCE_BETWEEN_STARTING_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tDIFFERENCE_BETWEEN_RESET_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_AT_THE_END_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tACTIVE_POWER_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tACTIVE_POWER_AT_END_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tACTIVE_POWER_GRADIENT_CONFIGURATION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tGRID_REQUEST_SWITCH_ON_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGRID_REQUEST_SWITCH_OFF_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_GENERATOR_START_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_SOC_GENERATOR_SHUTDOWN_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDTIONAL_TIME_RANGE_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_RANGE_FOR_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_GENERATOR_STOP_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_SOC_GENERATOR_START_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n-\tGENERATOR_REQUEST_WITH_SET_CHARGE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n-\tREACTION_TO_DIGITAL_INPUT_OF_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tAVERAGE_TIME_FOR_GENERATOR_REQUEST_VIA_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tAVERAGE_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tAVERAGE_IDLE_PERIOD_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tCOOLING_DOWN_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tIDLE_PERIOD_AFTER_GENERATOR_FAULT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tWARM_UP_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tGENERATOR_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tSTART_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tDEVICE_NAME(Doc.of(OpenemsType.INTEGER)), //\n-\tAUTOMATIC_UPDATES_ACTIVATED(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_OF_THE_AUTOMATIC_UPDATE(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_GUARD_VERSION(Doc.of(OpenemsType.INTEGER)), //\n-\tUPDATE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n-\tSTOP_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n-\tCUT_OFF_TIME_UNTIL_CONNECTION_TO_EXTERNAL_NETWORK(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_CURRENT_FROM_PUBLIC_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_REQUEST_VIA_SOC_SWITCHED_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_CONNECTION_TO_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_DISCONNECTION_FROM_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_ADDTIONAL_TIME_RANGE_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_INTERVAL_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_CONNECT_TO_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_DISCONNECT_FROM_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tENERGY_SAVING_MODE_SWITCH_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_GRID_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_GRID_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_UNTIL_CHANGE_OVER_TO_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_DURATION_OF_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n-\tEND_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_SOC_FOR_PROTECTION_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_SWITCH_ONLIMIT_AFTER_OVER_TEMP_SHUT_DOWN(Doc.of(OpenemsType.INTEGER)), //\n-\tOUTPUT_RESISTANCE_OF_BATTERY_CONNECTION(Doc.of(OpenemsType.INTEGER)), //\n-\tLOWER_LIMIT_DEEP_DISCHARGE_PROTECT_AREA_PRIOR_SHUTDOWN(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_DEEP_DISCHARGE_PROTECTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_BAKCUP_POWER_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tAREA_WIDTH_FOR_CONSERVING_SOC(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_OWN_CONSUMPTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tMOST_PRODUCTIVE_MONTH_FOR_BATTERY_USAGE_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tSEASON_OPERATION_ACTIVE(Doc.of(OpenemsType.INTEGER)), //\n-\tVOLTAGE_SET_POINT_WITH_DEACTIVATED_BATTERY_MENAGEMENT(Doc.of(OpenemsType.INTEGER)), //\n-\tCYCLE_TIME_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tCYCLE_TIME_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_TEMPERATUR_COMPENSATION(Doc.of(OpenemsType.INTEGER)), //\n-\tAUTOMATIC_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tTYPE_OF_ADDTIONAL_DC_SOURCES(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMITATION_TYPE_OF_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER)), //\n-\tSENSIVITY_OF_GENERATOR_FAILURE_DETECTION(Doc.of(OpenemsType.INTEGER)), //\n-\tINVERTER_NOMINAL_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tINVERTER_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tMAXIMUM_AC_BATTERY_CHARGE_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tLIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_START_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_STOP_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_START_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_STOP_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tCLUSTER_BEHAVIOUR_WHEN_A_DEVICE_FAILS(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_OUT_FOR_COMMUNICATION_FAULT_INDICATION(Doc.of(OpenemsType.INTEGER)), //\n-\tENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tSET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tSET_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT_AMPERE)), //\n-\tMIN_SOC_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_GUARD_CODE(Doc.of(OpenemsType.INTEGER)), //\n-\tMIN_SOC_POWER_OFF(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_BATTERY_CHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_BATTERY_DISCHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+  // IntegerWriteChannels\n+  BATTERY_BOOST_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.MINUTE)), //\n+  BATTERY_EQUALIZATION_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HOUR)), //\n+  BATTERY_FULL_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HOUR)), //\n+  MAX_BATTERY_CHARGING_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.AMPERE)), //\n+  RATED_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.AMPERE)), //\n+  GENERATOR_REQUEST_VIA_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n+  GENERATOR_SHUT_DOWN_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.WATT)), //\n+  GENERATOR_START_UP_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.WATT)), //\n+  INITIATE_DEVICE_RESTART(Doc.of(OpenemsType.INTEGER)), //\n+  CELL_CHARGE_NOMINAL_VOLTAGE_FOR_BOOST_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  CELL_CHARGE_NOMINAL_VOLTAGE_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  CELL_CHARGE_NOMINAL_VOLTAGE_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  CELL_CHARGE_NOMINAL_VOLTAGE_FOR_FLOAT_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  FREQUENCY_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  FREQUENCY_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  FREQUENCY_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  FREQUENCY_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  VOLTAGE_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  FREQUENCY_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  FREQUENCY_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  VOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n+  VOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  DIFFERENCE_BETWEEN_STARTING_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  DIFFERENCE_BETWEEN_RESET_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  COSPHI_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  COSPHI_AT_THE_END_POINT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  ACTIVE_POWER_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  ACTIVE_POWER_AT_END_POINT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  ACTIVE_POWER_GRADIENT_CONFIGURATION(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  GRID_REQUEST_SWITCH_ON_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.WATT)), //\n+  GRID_REQUEST_SWITCH_OFF_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.WATT)), //\n+  GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_GENERATOR_START_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  LIMIT_SOC_GENERATOR_SHUTDOWN_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  START_TIME_ADDTIONAL_TIME_RANGE_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  START_TIME_RANGE_FOR_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_GENERATOR_STOP_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  LIMIT_SOC_GENERATOR_START_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  START_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n+  OPERATING_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n+  GENERATOR_REQUEST_WITH_SET_CHARGE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n+  REACTION_TO_DIGITAL_INPUT_OF_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  AVERAGE_TIME_FOR_GENERATOR_REQUEST_VIA_POWER(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  AVERAGE_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  AVERAGE_IDLE_PERIOD_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  COOLING_DOWN_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  IDLE_PERIOD_AFTER_GENERATOR_FAULT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  WARM_UP_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  GENERATOR_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  START_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER)), //\n+  OPERATING_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.SECONDS)), //\n+  DEVICE_NAME(Doc.of(OpenemsType.INTEGER)), //\n+  AUTOMATIC_UPDATES_ACTIVATED(Doc.of(OpenemsType.INTEGER)), //\n+  TIME_OF_THE_AUTOMATIC_UPDATE(Doc.of(OpenemsType.INTEGER)), //\n+  GRID_GUARD_VERSION(Doc.of(OpenemsType.INTEGER)), //\n+  UPDATE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n+  START_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n+  STOP_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n+  CUT_OFF_TIME_UNTIL_CONNECTION_TO_EXTERNAL_NETWORK(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_CURRENT_FROM_PUBLIC_GRID(Doc.of(OpenemsType.INTEGER)), //\n+  GRID_REQUEST_VIA_SOC_SWITCHED_ON(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_CONNECTION_TO_GRID(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_DISCONNECTION_FROM_GRID(Doc.of(OpenemsType.INTEGER)), //\n+  START_TIME_ADDTIONAL_TIME_RANGE_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  START_INTERVAL_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_CONNECT_TO_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_DISCONNECT_FROM_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  ENERGY_SAVING_MODE_SWITCH_ON(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_GRID_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_GRID_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER)), //\n+  TIME_UNTIL_CHANGE_OVER_TO_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_DURATION_OF_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+  START_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n+  END_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n+  BATTERY_SOC_FOR_PROTECTION_MODE(Doc.of(OpenemsType.INTEGER)), //\n+  BATTERY_SWITCH_ONLIMIT_AFTER_OVER_TEMP_SHUT_DOWN(Doc.of(OpenemsType.INTEGER)), //\n+  OUTPUT_RESISTANCE_OF_BATTERY_CONNECTION(Doc.of(OpenemsType.INTEGER)), //\n+  LOWER_LIMIT_DEEP_DISCHARGE_PROTECT_AREA_PRIOR_SHUTDOWN(Doc.of(OpenemsType.INTEGER)), //\n+  MINIMUM_WIDTH_OF_DEEP_DISCHARGE_PROTECTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n+  MINIMUM_WIDTH_OF_BAKCUP_POWER_AREA(Doc.of(OpenemsType.INTEGER)), //\n+  AREA_WIDTH_FOR_CONSERVING_SOC(Doc.of(OpenemsType.INTEGER)), //\n+  MINIMUM_WIDTH_OF_OWN_CONSUMPTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n+  MOST_PRODUCTIVE_MONTH_FOR_BATTERY_USAGE_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  SEASON_OPERATION_ACTIVE(Doc.of(OpenemsType.INTEGER)), //\n+  VOLTAGE_SET_POINT_WITH_DEACTIVATED_BATTERY_MENAGEMENT(Doc.of(OpenemsType.INTEGER)), //\n+  CYCLE_TIME_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+  CYCLE_TIME_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+  BATTERY_TEMPERATUR_COMPENSATION(Doc.of(OpenemsType.INTEGER)), //\n+  AUTOMATIC_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+  TYPE_OF_ADDTIONAL_DC_SOURCES(Doc.of(OpenemsType.INTEGER)), //\n+  LIMITATION_TYPE_OF_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER)), //\n+  SENSIVITY_OF_GENERATOR_FAILURE_DETECTION(Doc.of(OpenemsType.INTEGER)), //\n+  INVERTER_NOMINAL_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT)), //\n+  INVERTER_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.HERTZ)), //\n+  MAXIMUM_AC_BATTERY_CHARGE_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.AMPERE)), //\n+  LIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  LIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  START_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n+  TIME_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_START_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_STOP_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  LIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.PERCENT)), //\n+  START_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n+  TIME_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_START_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  LIMIT_SOC_FOR_STOP_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+  CLUSTER_BEHAVIOUR_WHEN_A_DEVICE_FAILS(Doc.of(OpenemsType.INTEGER)), //\n+  TIME_OUT_FOR_COMMUNICATION_FAULT_INDICATION(Doc.of(OpenemsType.INTEGER)), //\n+  ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+  SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.WATT)), //\n+  SET_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+      .accessMode(AccessMode.WRITE_ONLY) //\n+      .unit(Unit.VOLT_AMPERE)), //\n+  MIN_SOC_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n+  GRID_GUARD_CODE(Doc.of(OpenemsType.INTEGER)), //\n+  MIN_SOC_POWER_OFF(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_BATTERY_CHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+  MAXIMUM_BATTERY_DISCHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n \n-\t// IntegerReadChannels\n-\tDEVICE_CLASS(Doc.of(OpenemsType.INTEGER)), //\n-\tDEVICE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n-\tSOFTWARE_PACKAGE(Doc.of(OpenemsType.INTEGER)), //\n-\tWAITING_TIME_UNTIL_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tMESSAGE(Doc.of(OpenemsType.INTEGER)), //\n-\tRECOMMENDED_ACTION(Doc.of(OpenemsType.INTEGER)), //\n-\tFAULT_CORRECTION_MEASURE(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_USER(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_INSTALLER(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_SERVICE(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_GENERATORS_STARTS(Doc.of(OpenemsType.INTEGER)), //\n-\tAMP_HOURS_COUNTER_FOR_BATTERY_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE_HOURS)), //\n-\tAMP_HOURS_COUNTER_FOR_BATTERY_DISCHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE_HOURS)), //\n-\tMETER_READING_CONSUMPTION_METER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tENERGY_CONSUMED_FROM_GRID(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tENERGY_FED_INTO_GRID(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tGRID_REFERENCE_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tGRID_FEED_IN_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tPOWER_OUTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tRISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tRISE_IN_SELF_CONSUMPTION_TODAY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tABSORBED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tRELEASED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tNUMBER_OF_GRID_CONNECTIONS(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_VOLTAGE_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tGRID_VOLTAGE_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tGRID_VOLTAGE_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_SET_POINT_READ(Doc.of(OpenemsType.INTEGER)), //\n-\tCURRENT_BATTERY_CAPACITY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tNUMBER_OF_BATTERY_CHARGE_THROUGHPUTS(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_MAINT_SOC(Doc.of(OpenemsType.INTEGER)), //\n-\tLOAD_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPOWER_GRID_REFERENCE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPOWER_GRID_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPV_POWER_GENERATED(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tCURRENT_RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGRID_FREQ_OF_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tOUTPUT_OF_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER)), //\n-\tTOTAL_CURRENT_EXTERNAL_GRID_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tFAULT_BATTERY_SOC(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tMAXIMUM_BATTERY_CURRENT_IN_CHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tMAXIMUM_BATTERY_CURRENT_IN_DISCHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCHARGE_FACTOR_RATIO_OF_BATTERY_CHARGE_DISCHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_OF_BATTERY_STATISTICS_COUNTER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tLOWEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tHIGHEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tMAX_OCCURRED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n+  // IntegerReadChannels\n+  DEVICE_CLASS(Doc.of(OpenemsType.INTEGER)), //\n+  DEVICE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n+  SOFTWARE_PACKAGE(Doc.of(OpenemsType.INTEGER)), //\n+  WAITING_TIME_UNTIL_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  MESSAGE(Doc.of(OpenemsType.INTEGER)), //\n+  RECOMMENDED_ACTION(Doc.of(OpenemsType.INTEGER)), //\n+  FAULT_CORRECTION_MEASURE(Doc.of(OpenemsType.INTEGER)), //\n+  NUMBER_OF_EVENT_FOR_USER(Doc.of(OpenemsType.INTEGER)), //\n+  NUMBER_OF_EVENT_FOR_INSTALLER(Doc.of(OpenemsType.INTEGER)), //\n+  NUMBER_OF_EVENT_FOR_SERVICE(Doc.of(OpenemsType.INTEGER)), //\n+  NUMBER_OF_GENERATORS_STARTS(Doc.of(OpenemsType.INTEGER)), //\n+  AMP_HOURS_COUNTER_FOR_BATTERY_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE_HOURS)), //\n+  AMP_HOURS_COUNTER_FOR_BATTERY_DISCHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE_HOURS)), //\n+  METER_READING_CONSUMPTION_METER(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  ENERGY_CONSUMED_FROM_GRID(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  ENERGY_FED_INTO_GRID(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  GRID_REFERENCE_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  GRID_FEED_IN_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  POWER_OUTAGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  RISE_IN_SELF_CONSUMPTION_TODAY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  ABSORBED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  RELEASED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  NUMBER_OF_GRID_CONNECTIONS(Doc.of(OpenemsType.INTEGER)), //\n+  GRID_VOLTAGE_L1(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  GRID_VOLTAGE_L2(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  GRID_VOLTAGE_L3(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.HERTZ)), //\n+  COSPHI_SET_POINT_READ(Doc.of(OpenemsType.INTEGER)), //\n+  CURRENT_BATTERY_CAPACITY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.PERCENT)), //\n+  NUMBER_OF_BATTERY_CHARGE_THROUGHPUTS(Doc.of(OpenemsType.INTEGER)), //\n+  BATTERY_MAINT_SOC(Doc.of(OpenemsType.INTEGER)), //\n+  LOAD_POWER(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  POWER_GRID_REFERENCE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  POWER_GRID_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  PV_POWER_GENERATED(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  CURRENT_RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  GRID_FREQ_OF_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.HERTZ)), //\n+  VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  GRID_CURRENT_L1(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  GRID_CURRENT_L2(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  GRID_CURRENT_L3(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  OUTPUT_OF_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER)), //\n+  TOTAL_CURRENT_EXTERNAL_GRID_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  FAULT_BATTERY_SOC(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.PERCENT)), //\n+  MAXIMUM_BATTERY_CURRENT_IN_CHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  MAXIMUM_BATTERY_CURRENT_IN_DISCHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  CHARGE_FACTOR_RATIO_OF_BATTERY_CHARGE_DISCHARGE(Doc.of(OpenemsType.INTEGER)), //\n+  OPERATING_TIME_OF_BATTERY_STATISTICS_COUNTER(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  LOWEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.DEGREE_CELSIUS)), //\n+  HIGHEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.DEGREE_CELSIUS)), //\n+  MAX_OCCURRED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n \n-\tREMAINING_ABSORPTION_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tLOWER_DISCHARGE_LIMIT_FOR_SELF_CONSUMPTION_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tTOTAL_OUTPUT_CURRENT_OF_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tREMAINING_MIN_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tOPERATING_STATUS_MASTER_L1(Doc.of(OpenemsType.INTEGER)), //\n-\tTOTAL_ENERGY_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.KILOWATT_HOURS)), //\n-\tTOTAL_ENERGY_PHOTOVOLTAICS_CURRENT_DAY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tNUMBER_OF_EQALIZATION_CHARGES(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.KILOWATT_HOURS)), //\n-\tNUMBER_OF_FULL_CHARGES(Doc.of(OpenemsType.INTEGER)), //\n-\tRELATIVE_BATTERY_DISCHARGING_SINCE_THE_LAST_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tRELATIVE_BATTERY_DISCHARGING_SINCE_LAST_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tOPERATING_TIME_ENERGY_COUNT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tPHOTOVOLTAIC_ENERGY_IN_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n+  REMAINING_ABSORPTION_TIME(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  LOWER_DISCHARGE_LIMIT_FOR_SELF_CONSUMPTION_RANGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.PERCENT)), //\n+  TOTAL_OUTPUT_CURRENT_OF_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.AMPERE)), //\n+  REMAINING_MIN_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  OPERATING_STATUS_MASTER_L1(Doc.of(OpenemsType.INTEGER)), //\n+  TOTAL_ENERGY_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.KILOWATT_HOURS)), //\n+  TOTAL_ENERGY_PHOTOVOLTAICS_CURRENT_DAY(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n+  NUMBER_OF_EQALIZATION_CHARGES(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.KILOWATT_HOURS)), //\n+  NUMBER_OF_FULL_CHARGES(Doc.of(OpenemsType.INTEGER)), //\n+  RELATIVE_BATTERY_DISCHARGING_SINCE_THE_LAST_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.PERCENT)), //\n+  RELATIVE_BATTERY_DISCHARGING_SINCE_LAST_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.PERCENT)), //\n+  OPERATING_TIME_ENERGY_COUNT(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.SECONDS)), //\n+  PHOTOVOLTAIC_ENERGY_IN_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT_HOURS)), //\n \n-\tOUTPUT_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tMAX_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tRATED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER)), //\n+  OUTPUT_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  OUTPUT_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  OUTPUT_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  OUTPUT_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.WATT)), //\n+  REACTIVE_POWER_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+  REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+  REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+  REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+  MAX_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.DEGREE_CELSIUS)), //\n+  RATED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER)), //\n \n-\tFIRMWARE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n-\tFIRMWARE_VERSION_OF_THE_LOGIC_COMPONENET(Doc.of(OpenemsType.INTEGER)), //\n+  FIRMWARE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n+  FIRMWARE_VERSION_OF_THE_LOGIC_COMPONENET(Doc.of(OpenemsType.INTEGER)), //\n \n-\tBATTERY_NOMINAL_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n-\tCOMMUNICATION_VERSION(Doc.of(OpenemsType.INTEGER)), //\n+  BATTERY_NOMINAL_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+  COMMUNICATION_VERSION(Doc.of(OpenemsType.INTEGER)), //\n \n-\tUPDATE_VERSION_OF_THE_LOGIC_COMPONENT(Doc.of(OpenemsType.INTEGER)), //\n-\tFIRMWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tHARDWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tSERIAL_NUMBER_OF_THE_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+  UPDATE_VERSION_OF_THE_LOGIC_COMPONENT(Doc.of(OpenemsType.INTEGER)), //\n+  FIRMWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+  HARDWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+  SERIAL_NUMBER_OF_THE_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n \n-\tBATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tBATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-//\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+  BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.VOLT)), //\n+  BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+      .unit(Unit.DEGREE_CELSIUS)), //\n+  //\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n //\t\t\t.unit(Unit.WATT)), //\n-\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n+  OPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n \n-\tprivate final Doc doc;\n+  private final Doc doc;\n \n-\tprivate SiChannelId(Doc doc) {\n-\t\tthis.doc = doc;\n-\t}\n+  private SiChannelId(Doc doc) {\n+    this.doc = doc;\n+  }\n \n-\t@Override\n-\tpublic Doc doc() {\n-\t\treturn this.doc;\n-\t}\n+  @Override\n+  public Doc doc() {\n+    return this.doc;\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 458
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "501",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 502.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/codebuff/1/SiChannelId.java\nindex e8eab238901..308c778e967 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/codebuff/1/SiChannelId.java\n@@ -47,476 +47,468 @@ import io.openems.edge.sma.enums.TimeControlledInverterOperation;\n import io.openems.edge.sma.enums.TypeOfACSubdistribution;\n \n public enum SiChannelId implements ChannelId {\n-\t// EnumReadChannels\n-\tSPEED_WIRE_CONNECTION_STATUS_OF_NETWORK_TERMINAL_A(Doc.of(SpeedWireConnectionStatusOfNetworkTerminalA.values())), //\n-\tSYSTEM_STATE(Doc.of(SystemState.values())), //\n-\tACTIVE_BATTERY_CHARGING_MODE(Doc.of(ActiveBatteryChargingMode.values())), //\n-\tMULTIFUNCTION_RELAY_STATUS(Doc.of(MultifunctionRelayStatus.values())), //\n-\tPOWER_SUPPLY_STATUS(Doc.of(PowerSupplyStatus.values())), //\n-\tREASON_FOR_GENERATOR_REQUEST(Doc.of(ReasonForGeneratorRequest.values())), //\n-\tPV_MAINS_CONNECTION(Doc.of(PvMainsConnection.values())), //\n-\tSTATUS_OF_UTILITY_GRID(Doc.of(StatusOfUtilityGrid.values())), //\n-\tGENERATOR_STATUS(Doc.of(GeneratorStatus.values())), //\n-\tDATA_TRANSFER_RATE_OF_NETWORK_TERMINAL_A(Doc.of(DataTransferRateOfNetworkTerminalA.values())), //\n-\tDUPLEX_MODE_OF_NETWORK_TERMINAL_A(Doc.of(DuplexModeOfNetworkTerminalA.values())), //\n-\tSTATUS_BATTERY_APPLICATION_AREA(Doc.of(StatusBatteryApplicationArea.values())), //\n-\tABSORPTION_PHASE_ACTIVE(Doc.of(AbsorptionPhaseActive.values())), //\n-\tCONTROL_OF_BATTERY_CHARGING_VIA_COMMUNICATION_AVAILABLE(\n-\t\t\tDoc.of(ControlOfBatteryChargingViaCommunicationAvailable.values())), //\n-\tSTATUS_DIGITAL_INPUT(Doc.of(StatusDigitalInput.values())), //\n-\tBATTERY_TYPE(Doc.of(BatteryType.values())), //\n-\tTYPE_OF_AC_SUBDISTRIBUTION(Doc.of(TypeOfACSubdistribution.values())), //\n-\tOPERATING_MODE_FOR_ACTIVE_POWER_LIMITATION(Doc.of(OperatingModeForActivePowerLimitation.values())), //\n+ // EnumReadChannels\n+ SPEED_WIRE_CONNECTION_STATUS_OF_NETWORK_TERMINAL_A(Doc.of(SpeedWireConnectionStatusOfNetworkTerminalA.values())), //\n+ SYSTEM_STATE(Doc.of(SystemState.values())), //\n+ ACTIVE_BATTERY_CHARGING_MODE(Doc.of(ActiveBatteryChargingMode.values())), //\n+ MULTIFUNCTION_RELAY_STATUS(Doc.of(MultifunctionRelayStatus.values())), //\n+ POWER_SUPPLY_STATUS(Doc.of(PowerSupplyStatus.values())), //\n+ REASON_FOR_GENERATOR_REQUEST(Doc.of(ReasonForGeneratorRequest.values())), //\n+ PV_MAINS_CONNECTION(Doc.of(PvMainsConnection.values())), //\n+ STATUS_OF_UTILITY_GRID(Doc.of(StatusOfUtilityGrid.values())), //\n+ GENERATOR_STATUS(Doc.of(GeneratorStatus.values())), //\n+ DATA_TRANSFER_RATE_OF_NETWORK_TERMINAL_A(Doc.of(DataTransferRateOfNetworkTerminalA.values())), //\n+ DUPLEX_MODE_OF_NETWORK_TERMINAL_A(Doc.of(DuplexModeOfNetworkTerminalA.values())), //\n+ STATUS_BATTERY_APPLICATION_AREA(Doc.of(StatusBatteryApplicationArea.values())), //\n+ ABSORPTION_PHASE_ACTIVE(Doc.of(AbsorptionPhaseActive.values())), //\n+ CONTROL_OF_BATTERY_CHARGING_VIA_COMMUNICATION_AVAILABLE(Doc.of(ControlOfBatteryChargingViaCommunicationAvailable.values())), //\n+ STATUS_DIGITAL_INPUT(Doc.of(StatusDigitalInput.values())), //\n+ BATTERY_TYPE(Doc.of(BatteryType.values())), //\n+ TYPE_OF_AC_SUBDISTRIBUTION(Doc.of(TypeOfACSubdistribution.values())), //\n+ OPERATING_MODE_FOR_ACTIVE_POWER_LIMITATION(Doc.of(OperatingModeForActivePowerLimitation.values())), //\n \n-\t// EnumWriteChannsl\n-\tAUTOMATIC_GENERATOR_START(Doc.of(AutomaticGeneratorStart.values())), //\n-\tMANUAL_GENERATOR_CONTROL(Doc.of(ManualGeneratorStart.values())), //\n-\tGRID_CREATING_GENERATOR(Doc.of(GridCreatingGenerator.values())), //\n-\tRISE_IN_SELF_CONSUMPTION_SWITCHED_ON(Doc.of(RiseInSelfConsumptionSwitchedOn.values())), //\n-\tACKNOWLEGDE_GENERATOR_ERRORS(Doc.of(AcknowledgeGeneratorErrors.values())), //\n-\tOPERATING_MODE_OF_ACTIVE_POWER_LIMITATION_AT_OVERFREQUENCY(\n-\t\t\tDoc.of(OperatingModeOfActivePowerLimitationAtOverFrequency.values())), //\n-\tCONFIGURATION_OF_THE_COSPHI_STARTING_POINT(Doc.of(ConfigurationOfTheCosphiStartingPoint.values())), //\n-\tCONFIGURATION_OF_THE_COSPHI_END_POINT(Doc.of(ConfigurationOfTheCosphiEndPoint.values())), //\n-\tBMS_OPERATING_MODE(Doc.of(BMSOperatingMode.values())), //\n-\tGRID_REQUEST_VIA_POWER_SWITCH_ON(Doc.of(GridRequestViPowerSwitchOn.values())), //\n-\tMANUAL_CONTROL_OF_NETWORK_CONNECTION(Doc.of(ManualControlOfNetworkConnection.values())), //\n-\tGRID_REQUEST_VIA_CHARGE_TYPE(Doc.of(GridRequestViaChargeType.values())), //\n-\tMANUAL_EQUAIZATION_CHARGE(Doc.of(ManualEqualizationCharge.values())), //\n-\tTIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(TimeControlledGeneratorOperation.values())), //\n-\tREPETITION_CYCLE_OF_TIME_CONTROLLED_GENERATOR_OPERATION(\n-\t\t\tDoc.of(RepetitionCycleOfTheTimeControlledGeneratorOperation.values())), //\n-\tTIME_CONTROLLED_INVERTER_OPERATION(Doc.of(TimeControlledInverterOperation.values())), //\n-\tREPETITION_CYCLE_OF_TIME_CONTROLLED_INVERTER(Doc.of(RepetitionCycleOfTheControlledInverter.values())), //\n-\tMEMORY_CARD_STATUS(Doc.of(MemoryCardStatus.values())), //\n-\tAUTOMATIC_FREQUENCY_SYNCHRONIZATION(Doc.of(AutomaticFrequencySynchronization.values())), //\n-\tPOWER_FEEDBACK_TO_PUBLIC_GRID_ALLOWED(Doc.of(PowerFeedbackToPublicGridAllowed.values())), //\n-\tSET_CONTROL_MODE(Doc.of(SetControlMode.values()).accessMode(AccessMode.READ_WRITE)), //\n-\tMETER_SETTING(Doc.of(MeterSetting.values())), //\n+ // EnumWriteChannsl\n+ AUTOMATIC_GENERATOR_START(Doc.of(AutomaticGeneratorStart.values())), //\n+ MANUAL_GENERATOR_CONTROL(Doc.of(ManualGeneratorStart.values())), //\n+ GRID_CREATING_GENERATOR(Doc.of(GridCreatingGenerator.values())), //\n+ RISE_IN_SELF_CONSUMPTION_SWITCHED_ON(Doc.of(RiseInSelfConsumptionSwitchedOn.values())), //\n+ ACKNOWLEGDE_GENERATOR_ERRORS(Doc.of(AcknowledgeGeneratorErrors.values())), //\n+ OPERATING_MODE_OF_ACTIVE_POWER_LIMITATION_AT_OVERFREQUENCY(Doc.of(OperatingModeOfActivePowerLimitationAtOverFrequency.values())), //\n+ CONFIGURATION_OF_THE_COSPHI_STARTING_POINT(Doc.of(ConfigurationOfTheCosphiStartingPoint.values())), //\n+ CONFIGURATION_OF_THE_COSPHI_END_POINT(Doc.of(ConfigurationOfTheCosphiEndPoint.values())), //\n+ BMS_OPERATING_MODE(Doc.of(BMSOperatingMode.values())), //\n+ GRID_REQUEST_VIA_POWER_SWITCH_ON(Doc.of(GridRequestViPowerSwitchOn.values())), //\n+ MANUAL_CONTROL_OF_NETWORK_CONNECTION(Doc.of(ManualControlOfNetworkConnection.values())), //\n+ GRID_REQUEST_VIA_CHARGE_TYPE(Doc.of(GridRequestViaChargeType.values())), //\n+ MANUAL_EQUAIZATION_CHARGE(Doc.of(ManualEqualizationCharge.values())), //\n+ TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(TimeControlledGeneratorOperation.values())), //\n+ REPETITION_CYCLE_OF_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(RepetitionCycleOfTheTimeControlledGeneratorOperation.values())), //\n+ TIME_CONTROLLED_INVERTER_OPERATION(Doc.of(TimeControlledInverterOperation.values())), //\n+ REPETITION_CYCLE_OF_TIME_CONTROLLED_INVERTER(Doc.of(RepetitionCycleOfTheControlledInverter.values())), //\n+ MEMORY_CARD_STATUS(Doc.of(MemoryCardStatus.values())), //\n+ AUTOMATIC_FREQUENCY_SYNCHRONIZATION(Doc.of(AutomaticFrequencySynchronization.values())), //\n+ POWER_FEEDBACK_TO_PUBLIC_GRID_ALLOWED(Doc.of(PowerFeedbackToPublicGridAllowed.values())), //\n+ SET_CONTROL_MODE(Doc.of(SetControlMode.values())\n+  .accessMode(AccessMode.READ_WRITE)), //\n+ METER_SETTING(Doc.of(MeterSetting.values())), //\n \n-\t// LongReadChannels\n-\tSERIAL_NUMBER(Doc.of(OpenemsType.LONG)), //\n-\tCURRENT_BATTERY_CHARGING_SET_VOLTAGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCURRENT_SELF_CONSUMPTION(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tBATTERY_CHARGING_SOC(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tBATTERY_DISCHARGING_SOC(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tREMAINING_TIME_UNTIL_FULL_CHARGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tREMAINING_TIME_UNTIL_EQUALIZATION_CHARGE(Doc.of(OpenemsType.LONG) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tRATED_BATTERY_CAPACITY(Doc.of(OpenemsType.LONG)), //\n+ // LongReadChannels\n+ SERIAL_NUMBER(Doc.of(OpenemsType.LONG)), //\n+ CURRENT_BATTERY_CHARGING_SET_VOLTAGE(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.VOLT)), //\n+ CURRENT_SELF_CONSUMPTION(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.WATT)), //\n+ BATTERY_CHARGING_SOC(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.WATT)), //\n+ BATTERY_DISCHARGING_SOC(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.WATT)), //\n+ REMAINING_TIME_UNTIL_FULL_CHARGE(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.SECONDS)), //\n+ REMAINING_TIME_UNTIL_EQUALIZATION_CHARGE(Doc.of(OpenemsType.LONG) //\n+  .unit(Unit.SECONDS)), //\n+ RATED_BATTERY_CAPACITY(Doc.of(OpenemsType.LONG)), //\n \n-\t// IntegerWriteChannels\n-\tBATTERY_BOOST_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.MINUTE)), //\n-\tBATTERY_EQUALIZATION_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HOUR)), //\n-\tBATTERY_FULL_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HOUR)), //\n-\tMAX_BATTERY_CHARGING_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tRATED_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGENERATOR_REQUEST_VIA_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tGENERATOR_SHUT_DOWN_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGENERATOR_START_UP_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tINITIATE_DEVICE_RESTART(Doc.of(OpenemsType.INTEGER)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_BOOST_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCELL_CHARGE_NOMINAL_VOLTAGE_FOR_FLOAT_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tFREQUENCY_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n-\tVOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tNOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tDIFFERENCE_BETWEEN_STARTING_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tDIFFERENCE_BETWEEN_RESET_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_AT_THE_END_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tACTIVE_POWER_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tACTIVE_POWER_AT_END_POINT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tACTIVE_POWER_GRADIENT_CONFIGURATION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tGRID_REQUEST_SWITCH_ON_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGRID_REQUEST_SWITCH_OFF_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_GENERATOR_START_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_SOC_GENERATOR_SHUTDOWN_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDTIONAL_TIME_RANGE_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_RANGE_FOR_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_GENERATOR_STOP_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_SOC_GENERATOR_START_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n-\tGENERATOR_REQUEST_WITH_SET_CHARGE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n-\tREACTION_TO_DIGITAL_INPUT_OF_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tAVERAGE_TIME_FOR_GENERATOR_REQUEST_VIA_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tAVERAGE_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tAVERAGE_IDLE_PERIOD_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tCOOLING_DOWN_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tIDLE_PERIOD_AFTER_GENERATOR_FAULT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tWARM_UP_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tGENERATOR_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tSTART_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tDEVICE_NAME(Doc.of(OpenemsType.INTEGER)), //\n-\tAUTOMATIC_UPDATES_ACTIVATED(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_OF_THE_AUTOMATIC_UPDATE(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_GUARD_VERSION(Doc.of(OpenemsType.INTEGER)), //\n-\tUPDATE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n-\tSTOP_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n-\tCUT_OFF_TIME_UNTIL_CONNECTION_TO_EXTERNAL_NETWORK(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_CURRENT_FROM_PUBLIC_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_REQUEST_VIA_SOC_SWITCHED_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_CONNECTION_TO_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_DISCONNECTION_FROM_GRID(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_ADDTIONAL_TIME_RANGE_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_INTERVAL_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_CONNECT_TO_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_DISCONNECT_FROM_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tENERGY_SAVING_MODE_SWITCH_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_GRID_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_GRID_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_UNTIL_CHANGE_OVER_TO_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_DURATION_OF_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tSTART_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n-\tEND_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_SOC_FOR_PROTECTION_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_SWITCH_ONLIMIT_AFTER_OVER_TEMP_SHUT_DOWN(Doc.of(OpenemsType.INTEGER)), //\n-\tOUTPUT_RESISTANCE_OF_BATTERY_CONNECTION(Doc.of(OpenemsType.INTEGER)), //\n-\tLOWER_LIMIT_DEEP_DISCHARGE_PROTECT_AREA_PRIOR_SHUTDOWN(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_DEEP_DISCHARGE_PROTECTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_BAKCUP_POWER_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tAREA_WIDTH_FOR_CONSERVING_SOC(Doc.of(OpenemsType.INTEGER)), //\n-\tMINIMUM_WIDTH_OF_OWN_CONSUMPTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n-\tMOST_PRODUCTIVE_MONTH_FOR_BATTERY_USAGE_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tSEASON_OPERATION_ACTIVE(Doc.of(OpenemsType.INTEGER)), //\n-\tVOLTAGE_SET_POINT_WITH_DEACTIVATED_BATTERY_MENAGEMENT(Doc.of(OpenemsType.INTEGER)), //\n-\tCYCLE_TIME_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tCYCLE_TIME_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_TEMPERATUR_COMPENSATION(Doc.of(OpenemsType.INTEGER)), //\n-\tAUTOMATIC_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tTYPE_OF_ADDTIONAL_DC_SOURCES(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMITATION_TYPE_OF_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER)), //\n-\tSENSIVITY_OF_GENERATOR_FAILURE_DETECTION(Doc.of(OpenemsType.INTEGER)), //\n-\tINVERTER_NOMINAL_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tINVERTER_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tMAXIMUM_AC_BATTERY_CHARGE_CURRENT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tLIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_START_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_STOP_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tLIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tSTART_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_START_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tLIMIT_SOC_FOR_STOP_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n-\tCLUSTER_BEHAVIOUR_WHEN_A_DEVICE_FAILS(Doc.of(OpenemsType.INTEGER)), //\n-\tTIME_OUT_FOR_COMMUNICATION_FAULT_INDICATION(Doc.of(OpenemsType.INTEGER)), //\n-\tENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n-\tSET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tSET_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.accessMode(AccessMode.WRITE_ONLY) //\n-\t\t\t.unit(Unit.VOLT_AMPERE)), //\n-\tMIN_SOC_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_GUARD_CODE(Doc.of(OpenemsType.INTEGER)), //\n-\tMIN_SOC_POWER_OFF(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_BATTERY_CHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n-\tMAXIMUM_BATTERY_DISCHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+ // IntegerWriteChannels\n+ BATTERY_BOOST_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.MINUTE)), //\n+ BATTERY_EQUALIZATION_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HOUR)), //\n+ BATTERY_FULL_CHARGE_TIME(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HOUR)), //\n+ MAX_BATTERY_CHARGING_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.AMPERE)), //\n+ RATED_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.AMPERE)), //\n+ GENERATOR_REQUEST_VIA_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n+ GENERATOR_SHUT_DOWN_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.WATT)), //\n+ GENERATOR_START_UP_LOAD_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.WATT)), //\n+ INITIATE_DEVICE_RESTART(Doc.of(OpenemsType.INTEGER)), //\n+ CELL_CHARGE_NOMINAL_VOLTAGE_FOR_BOOST_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ CELL_CHARGE_NOMINAL_VOLTAGE_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ CELL_CHARGE_NOMINAL_VOLTAGE_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ CELL_CHARGE_NOMINAL_VOLTAGE_FOR_FLOAT_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ FREQUENCY_MONITORING_UPPER_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ FREQUENCY_MONITORING_UPPER_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ FREQUENCY_MONITORING_HYSTERESIS_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ FREQUENCY_MONITORING_HYSTERESIS_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ VOLTAGE_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ FREQUENCY_MONITORING_GENERATOR_MINIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ FREQUENCY_MONITORING_GENERATOR_MAXIMUM_THRESHOLD(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ VOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n+ VOLTAGE_MONITORING_GENERATOR_MAXIMUM_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ DIFFERENCE_BETWEEN_STARTING_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ DIFFERENCE_BETWEEN_RESET_FREQ_AND_GRID_FREQ(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ COSPHI_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ COSPHI_AT_THE_END_POINT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ ACTIVE_POWER_AT_STARTING_POINT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ ACTIVE_POWER_AT_END_POINT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ ACTIVE_POWER_GRADIENT_CONFIGURATION(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ GRID_REQUEST_SWITCH_ON_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.WATT)), //\n+ GRID_REQUEST_SWITCH_OFF_POWER_LIMIT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.WATT)), //\n+ GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_GENERATOR_START_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ LIMIT_SOC_GENERATOR_SHUTDOWN_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ START_TIME_ADDTIONAL_TIME_RANGE_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ START_TIME_RANGE_FOR_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_GENERATOR_STOP_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ LIMIT_SOC_GENERATOR_START_ADD_IN_TIME_RANGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ START_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n+ OPERATING_TIME_FOR_TIME_CONTROLLED_GENERATOR_OPERATION(Doc.of(OpenemsType.INTEGER)), //\n+ GENERATOR_REQUEST_WITH_SET_CHARGE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n+ REACTION_TO_DIGITAL_INPUT_OF_GENERATOR_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ AVERAGE_TIME_FOR_GENERATOR_REQUEST_VIA_POWER(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ AVERAGE_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ AVERAGE_IDLE_PERIOD_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ COOLING_DOWN_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ IDLE_PERIOD_AFTER_GENERATOR_FAULT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ WARM_UP_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ GENERATOR_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ START_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER)), //\n+ OPERATING_TIME_FOR_TIME_CONTROLLED_INVERTER(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.SECONDS)), //\n+ DEVICE_NAME(Doc.of(OpenemsType.INTEGER)), //\n+ AUTOMATIC_UPDATES_ACTIVATED(Doc.of(OpenemsType.INTEGER)), //\n+ TIME_OF_THE_AUTOMATIC_UPDATE(Doc.of(OpenemsType.INTEGER)), //\n+ GRID_GUARD_VERSION(Doc.of(OpenemsType.INTEGER)), //\n+ UPDATE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n+ START_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n+ STOP_FEED_IN_PV(Doc.of(OpenemsType.INTEGER)), //\n+ CUT_OFF_TIME_UNTIL_CONNECTION_TO_EXTERNAL_NETWORK(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_CURRENT_FROM_PUBLIC_GRID(Doc.of(OpenemsType.INTEGER)), //\n+ GRID_REQUEST_VIA_SOC_SWITCHED_ON(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_CONNECTION_TO_GRID(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_DISCONNECTION_FROM_GRID(Doc.of(OpenemsType.INTEGER)), //\n+ START_TIME_ADDTIONAL_TIME_RANGE_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ START_INTERVAL_GRID_REQUEST(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_CONNECT_TO_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_DISCONNECT_FROM_GRID_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ ENERGY_SAVING_MODE_SWITCH_ON(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_GRID_REVERSE_POWER(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_GRID_REVERSE_POWER_TRIPPING_TIME(Doc.of(OpenemsType.INTEGER)), //\n+ TIME_UNTIL_CHANGE_OVER_TO_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_DURATION_OF_ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+ START_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n+ END_TIME_OF_BATTERY_PROTECTION_MODE_LEVEL(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_SOC_FOR_PROTECTION_MODE(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_SWITCH_ONLIMIT_AFTER_OVER_TEMP_SHUT_DOWN(Doc.of(OpenemsType.INTEGER)), //\n+ OUTPUT_RESISTANCE_OF_BATTERY_CONNECTION(Doc.of(OpenemsType.INTEGER)), //\n+ LOWER_LIMIT_DEEP_DISCHARGE_PROTECT_AREA_PRIOR_SHUTDOWN(Doc.of(OpenemsType.INTEGER)), //\n+ MINIMUM_WIDTH_OF_DEEP_DISCHARGE_PROTECTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n+ MINIMUM_WIDTH_OF_BAKCUP_POWER_AREA(Doc.of(OpenemsType.INTEGER)), //\n+ AREA_WIDTH_FOR_CONSERVING_SOC(Doc.of(OpenemsType.INTEGER)), //\n+ MINIMUM_WIDTH_OF_OWN_CONSUMPTION_AREA(Doc.of(OpenemsType.INTEGER)), //\n+ MOST_PRODUCTIVE_MONTH_FOR_BATTERY_USAGE_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ SEASON_OPERATION_ACTIVE(Doc.of(OpenemsType.INTEGER)), //\n+ VOLTAGE_SET_POINT_WITH_DEACTIVATED_BATTERY_MENAGEMENT(Doc.of(OpenemsType.INTEGER)), //\n+ CYCLE_TIME_FOR_FULL_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+ CYCLE_TIME_FOR_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_TEMPERATUR_COMPENSATION(Doc.of(OpenemsType.INTEGER)), //\n+ AUTOMATIC_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER)), //\n+ TYPE_OF_ADDTIONAL_DC_SOURCES(Doc.of(OpenemsType.INTEGER)), //\n+ LIMITATION_TYPE_OF_GENERATOR_CURRENT(Doc.of(OpenemsType.INTEGER)), //\n+ SENSIVITY_OF_GENERATOR_FAILURE_DETECTION(Doc.of(OpenemsType.INTEGER)), //\n+ INVERTER_NOMINAL_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT)), //\n+ INVERTER_NOMINAL_FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.HERTZ)), //\n+ MAXIMUM_AC_BATTERY_CHARGE_CURRENT(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.AMPERE)), //\n+ LIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ LIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ START_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n+ TIME_LOAD_SHEDDING_1(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_START_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_STOP_LOAD_SHEDDING_1_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_VALUE_SOC_FOR_START_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ LIMIT_VALUE_SOC_FOR_STOP_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.PERCENT)), //\n+ START_TIME_ADDITIONAL_TIME_RANGE_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n+ TIME_LOAD_SHEDDING_2(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_START_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ LIMIT_SOC_FOR_STOP_LOAD_SHEDDING_2_IN_ADD_TIME_RANGE(Doc.of(OpenemsType.INTEGER)), //\n+ CLUSTER_BEHAVIOUR_WHEN_A_DEVICE_FAILS(Doc.of(OpenemsType.INTEGER)), //\n+ TIME_OUT_FOR_COMMUNICATION_FAULT_INDICATION(Doc.of(OpenemsType.INTEGER)), //\n+ ENERGY_SAVING_MODE(Doc.of(OpenemsType.INTEGER)), //\n+ SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.WATT)), //\n+ SET_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+  .accessMode(AccessMode.WRITE_ONLY) //\n+  .unit(Unit.VOLT_AMPERE)), //\n+ MIN_SOC_POWER_ON(Doc.of(OpenemsType.INTEGER)), //\n+ GRID_GUARD_CODE(Doc.of(OpenemsType.INTEGER)), //\n+ MIN_SOC_POWER_OFF(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_BATTERY_CHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+ MAXIMUM_BATTERY_DISCHARGING_POWER_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n \n-\t// IntegerReadChannels\n-\tDEVICE_CLASS(Doc.of(OpenemsType.INTEGER)), //\n-\tDEVICE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n-\tSOFTWARE_PACKAGE(Doc.of(OpenemsType.INTEGER)), //\n-\tWAITING_TIME_UNTIL_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tMESSAGE(Doc.of(OpenemsType.INTEGER)), //\n-\tRECOMMENDED_ACTION(Doc.of(OpenemsType.INTEGER)), //\n-\tFAULT_CORRECTION_MEASURE(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_USER(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_INSTALLER(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_EVENT_FOR_SERVICE(Doc.of(OpenemsType.INTEGER)), //\n-\tNUMBER_OF_GENERATORS_STARTS(Doc.of(OpenemsType.INTEGER)), //\n-\tAMP_HOURS_COUNTER_FOR_BATTERY_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE_HOURS)), //\n-\tAMP_HOURS_COUNTER_FOR_BATTERY_DISCHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE_HOURS)), //\n-\tMETER_READING_CONSUMPTION_METER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tENERGY_CONSUMED_FROM_GRID(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tENERGY_FED_INTO_GRID(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tGRID_REFERENCE_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tGRID_FEED_IN_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tPOWER_OUTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tRISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tRISE_IN_SELF_CONSUMPTION_TODAY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tABSORBED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tRELEASED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tNUMBER_OF_GRID_CONNECTIONS(Doc.of(OpenemsType.INTEGER)), //\n-\tGRID_VOLTAGE_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tGRID_VOLTAGE_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tGRID_VOLTAGE_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tFREQUENCY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tCOSPHI_SET_POINT_READ(Doc.of(OpenemsType.INTEGER)), //\n-\tCURRENT_BATTERY_CAPACITY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tNUMBER_OF_BATTERY_CHARGE_THROUGHPUTS(Doc.of(OpenemsType.INTEGER)), //\n-\tBATTERY_MAINT_SOC(Doc.of(OpenemsType.INTEGER)), //\n-\tLOAD_POWER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPOWER_GRID_REFERENCE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPOWER_GRID_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tPV_POWER_GENERATED(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tCURRENT_RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tGRID_FREQ_OF_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.HERTZ)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tVOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCURRENT_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tGRID_CURRENT_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tOUTPUT_OF_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER)), //\n-\tTOTAL_CURRENT_EXTERNAL_GRID_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tFAULT_BATTERY_SOC(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tMAXIMUM_BATTERY_CURRENT_IN_CHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tMAXIMUM_BATTERY_CURRENT_IN_DISCHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tCHARGE_FACTOR_RATIO_OF_BATTERY_CHARGE_DISCHARGE(Doc.of(OpenemsType.INTEGER)), //\n-\tOPERATING_TIME_OF_BATTERY_STATISTICS_COUNTER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tLOWEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tHIGHEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tMAX_OCCURRED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n+ // IntegerReadChannels\n+ DEVICE_CLASS(Doc.of(OpenemsType.INTEGER)), //\n+ DEVICE_TYPE(Doc.of(OpenemsType.INTEGER)), //\n+ SOFTWARE_PACKAGE(Doc.of(OpenemsType.INTEGER)), //\n+ WAITING_TIME_UNTIL_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ MESSAGE(Doc.of(OpenemsType.INTEGER)), //\n+ RECOMMENDED_ACTION(Doc.of(OpenemsType.INTEGER)), //\n+ FAULT_CORRECTION_MEASURE(Doc.of(OpenemsType.INTEGER)), //\n+ NUMBER_OF_EVENT_FOR_USER(Doc.of(OpenemsType.INTEGER)), //\n+ NUMBER_OF_EVENT_FOR_INSTALLER(Doc.of(OpenemsType.INTEGER)), //\n+ NUMBER_OF_EVENT_FOR_SERVICE(Doc.of(OpenemsType.INTEGER)), //\n+ NUMBER_OF_GENERATORS_STARTS(Doc.of(OpenemsType.INTEGER)), //\n+ AMP_HOURS_COUNTER_FOR_BATTERY_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE_HOURS)), //\n+ AMP_HOURS_COUNTER_FOR_BATTERY_DISCHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE_HOURS)), //\n+ METER_READING_CONSUMPTION_METER(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ ENERGY_CONSUMED_FROM_GRID(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ ENERGY_FED_INTO_GRID(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ GRID_REFERENCE_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ GRID_FEED_IN_COUNTER_READING(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ POWER_OUTAGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ RISE_IN_SELF_CONSUMPTION_TODAY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ ABSORBED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ RELEASED_ENERGY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ NUMBER_OF_GRID_CONNECTIONS(Doc.of(OpenemsType.INTEGER)), //\n+ GRID_VOLTAGE_L1(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ GRID_VOLTAGE_L2(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ GRID_VOLTAGE_L3(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ FREQUENCY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.HERTZ)), //\n+ COSPHI_SET_POINT_READ(Doc.of(OpenemsType.INTEGER)), //\n+ CURRENT_BATTERY_CAPACITY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.PERCENT)), //\n+ NUMBER_OF_BATTERY_CHARGE_THROUGHPUTS(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_MAINT_SOC(Doc.of(OpenemsType.INTEGER)), //\n+ LOAD_POWER(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ POWER_GRID_REFERENCE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ POWER_GRID_FEED_IN(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ PV_POWER_GENERATED(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ CURRENT_RISE_IN_SELF_CONSUMPTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ GRID_FREQ_OF_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.HERTZ)), //\n+ VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ VOLTAGE_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_A(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_B(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ CURRENT_EXTERNAL_POWER_CONNECTION_PHASE_C(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ GRID_CURRENT_L1(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ GRID_CURRENT_L2(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ GRID_CURRENT_L3(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ OUTPUT_OF_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER)), //\n+ TOTAL_CURRENT_EXTERNAL_GRID_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ FAULT_BATTERY_SOC(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.PERCENT)), //\n+ MAXIMUM_BATTERY_CURRENT_IN_CHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ MAXIMUM_BATTERY_CURRENT_IN_DISCHARGE_DIRECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ CHARGE_FACTOR_RATIO_OF_BATTERY_CHARGE_DISCHARGE(Doc.of(OpenemsType.INTEGER)), //\n+ OPERATING_TIME_OF_BATTERY_STATISTICS_COUNTER(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ LOWEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.DEGREE_CELSIUS)), //\n+ HIGHEST_MEASURED_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.DEGREE_CELSIUS)), //\n+ MAX_OCCURRED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ REMAINING_ABSORPTION_TIME(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ LOWER_DISCHARGE_LIMIT_FOR_SELF_CONSUMPTION_RANGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.PERCENT)), //\n+ TOTAL_OUTPUT_CURRENT_OF_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.AMPERE)), //\n+ REMAINING_MIN_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ OPERATING_STATUS_MASTER_L1(Doc.of(OpenemsType.INTEGER)), //\n+ TOTAL_ENERGY_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.KILOWATT_HOURS)), //\n+ TOTAL_ENERGY_PHOTOVOLTAICS_CURRENT_DAY(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ NUMBER_OF_EQALIZATION_CHARGES(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.KILOWATT_HOURS)), //\n+ NUMBER_OF_FULL_CHARGES(Doc.of(OpenemsType.INTEGER)), //\n+ RELATIVE_BATTERY_DISCHARGING_SINCE_THE_LAST_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.PERCENT)), //\n+ RELATIVE_BATTERY_DISCHARGING_SINCE_LAST_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.PERCENT)), //\n+ OPERATING_TIME_ENERGY_COUNT(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.SECONDS)), //\n+ PHOTOVOLTAIC_ENERGY_IN_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT_HOURS)), //\n+ OUTPUT_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ OUTPUT_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ OUTPUT_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ OUTPUT_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.WATT)), //\n+ REACTIVE_POWER_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+ REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+ REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+ REACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT_AMPERE_REACTIVE)), //\n+ MAX_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.DEGREE_CELSIUS)), //\n+ RATED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER)), //\n+ FIRMWARE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n+ FIRMWARE_VERSION_OF_THE_LOGIC_COMPONENET(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_NOMINAL_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n+ COMMUNICATION_VERSION(Doc.of(OpenemsType.INTEGER)), //\n+ UPDATE_VERSION_OF_THE_LOGIC_COMPONENT(Doc.of(OpenemsType.INTEGER)), //\n+ FIRMWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+ HARDWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+ SERIAL_NUMBER_OF_THE_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n+ BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.VOLT)), //\n+ BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n+  .unit(Unit.DEGREE_CELSIUS)), //\n+// DEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n+//   .unit(Unit.WATT)), //\n+ OPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n \n-\tREMAINING_ABSORPTION_TIME(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tLOWER_DISCHARGE_LIMIT_FOR_SELF_CONSUMPTION_RANGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tTOTAL_OUTPUT_CURRENT_OF_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.AMPERE)), //\n-\tREMAINING_MIN_OPERATING_TIME_OF_GENERATOR(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tOPERATING_STATUS_MASTER_L1(Doc.of(OpenemsType.INTEGER)), //\n-\tTOTAL_ENERGY_PHOTOVOLTAICS(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.KILOWATT_HOURS)), //\n-\tTOTAL_ENERGY_PHOTOVOLTAICS_CURRENT_DAY(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n-\tNUMBER_OF_EQALIZATION_CHARGES(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.KILOWATT_HOURS)), //\n-\tNUMBER_OF_FULL_CHARGES(Doc.of(OpenemsType.INTEGER)), //\n-\tRELATIVE_BATTERY_DISCHARGING_SINCE_THE_LAST_FULL_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tRELATIVE_BATTERY_DISCHARGING_SINCE_LAST_EQUALIZATION_CHARGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.PERCENT)), //\n-\tOPERATING_TIME_ENERGY_COUNT(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.SECONDS)), //\n-\tPHOTOVOLTAIC_ENERGY_IN_SOLAR_CHARGER(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT_HOURS)), //\n+ private final Doc doc;\n \n-\tOUTPUT_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tOUTPUT_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.WATT)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L1(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L2(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tREACTIVE_POWER_EXTERNAL_POWER_CONNECTION_L3(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT_AMPERE_REACTIVE)), //\n-\tMAX_BATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-\tRATED_BATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER)), //\n+ private SiChannelId(Doc doc) {\n+  this.doc = doc;\n+ }\n \n-\tFIRMWARE_VERSION_OF_THE_MAIN_PROCESSOR(Doc.of(OpenemsType.INTEGER)), //\n-\tFIRMWARE_VERSION_OF_THE_LOGIC_COMPONENET(Doc.of(OpenemsType.INTEGER)), //\n-\n-\tBATTERY_NOMINAL_CAPACITY(Doc.of(OpenemsType.INTEGER)), //\n-\tCOMMUNICATION_VERSION(Doc.of(OpenemsType.INTEGER)), //\n-\n-\tUPDATE_VERSION_OF_THE_LOGIC_COMPONENT(Doc.of(OpenemsType.INTEGER)), //\n-\tFIRMWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tHARDWARE_VERSION_OF_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\tSERIAL_NUMBER_OF_THE_PROTOCOL_CONVERTER(Doc.of(OpenemsType.INTEGER)), //\n-\n-\tBATTERY_VOLTAGE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.VOLT)), //\n-\tBATTERY_TEMPERATURE(Doc.of(OpenemsType.INTEGER) //\n-\t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n-//\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n-//\t\t\t.unit(Unit.WATT)), //\n-\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n-\n-\tprivate final Doc doc;\n-\n-\tprivate SiChannelId(Doc doc) {\n-\t\tthis.doc = doc;\n-\t}\n-\n-\t@Override\n-\tpublic Doc doc() {\n-\t\treturn this.doc;\n-\t}\n+ @Override\n+ public Doc doc() {\n+  return this.doc;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 523
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/1/SiChannelId.java\nindex e8eab238901..698c0eb8da9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/1/SiChannelId.java\n@@ -507,7 +507,7 @@ public enum SiChannelId implements ChannelId {\n \t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n //\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n //\t\t\t.unit(Unit.WATT)), //\n-\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n+OPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n \n \tprivate final Doc doc;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/1/SiChannelId.java\nindex e8eab238901..698c0eb8da9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/1/SiChannelId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/1/SiChannelId.java\n@@ -507,7 +507,7 @@ public enum SiChannelId implements ChannelId {\n \t\t\t.unit(Unit.DEGREE_CELSIUS)), //\n //\tDEBUG_SET_ACTIVE_POWER(Doc.of(OpenemsType.INTEGER) //\n //\t\t\t.unit(Unit.WATT)), //\n-\tOPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n+OPERATING_MODE_FOR_REACTIVE_POWER(Doc.of(OpenemsType.INTEGER));\n \n \tprivate final Doc doc;\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
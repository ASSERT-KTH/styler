{
    "project_name": "h2database-h2database",
    "error_id": "131",
    "information": {
        "errors": [
            {
                "line": "134",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 9 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        if (section.startsWith(\"Commands\")) {\n            page = \"commands.html\";\n        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n            page = \"datatypes.html\";\n        } else if (section.startsWith(\"Functions\")) {\n            page = \"functions.html\";",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/131/BnfSyntax.java\nindex 9f4092c4b61..4fb6a2a082c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/131/BnfSyntax.java\n@@ -131,7 +131,8 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+        if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/131/BnfSyntax.java\nindex 9f4092c4b61..91d923d0769 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/131/BnfSyntax.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.build.doc;\n \n import java.util.ArrayDeque;\n@@ -25,7 +26,7 @@ public class BnfSyntax implements BnfVisitor {\n     /**\n      * Get the HTML syntax for the given syntax.\n      *\n-     * @param bnf the BNF\n+     * @param bnf         the BNF\n      * @param syntaxLines the syntax\n      * @return the HTML\n      */\n@@ -54,23 +55,24 @@ public class BnfSyntax implements BnfVisitor {\n                 if (s.length() == 1) {\n                     char c = s.charAt(0);\n                     switch (c) {\n-                    case '[':\n-                        deque.addLast(']');\n-                        break;\n-                    case '{':\n-                        deque.addLast('}');\n-                        break;\n-                    case ']':\n-                    case '}':\n-                        char c2 = deque.removeLast();\n-                        if (c != c2) {\n-                            throw new AssertionError(\"Expected \" + c2 + \" got \" + c);\n-                        }\n-                        break;\n-                    default:\n-                        if (deque.isEmpty()) {\n-                            deque.add('*');\n-                        }\n+                        case '[':\n+                            deque.addLast(']');\n+                            break;\n+                        case '{':\n+                            deque.addLast('}');\n+                            break;\n+                        case ']':\n+                        case '}':\n+                            char c2 = deque.removeLast();\n+                            if (c != c2) {\n+                                throw new AssertionError(\n+                                        \"Expected \" + c2 + \" got \" + c);\n+                            }\n+                            break;\n+                        default:\n+                            if (deque.isEmpty()) {\n+                                deque.add('*');\n+                            }\n                     }\n                 } else if (deque.isEmpty()) {\n                     deque.add('*');\n@@ -88,7 +90,8 @@ public class BnfSyntax implements BnfVisitor {\n         }\n         if (extension) {\n             if (deque.size() != 1 || deque.getLast() != '*') {\n-                throw new AssertionError(\"Expected \" + deque.getLast() + \" got end of data\");\n+                throw new AssertionError(\n+                        \"Expected \" + deque.getLast() + \" got end of data\");\n             }\n             buff.append(\"</span>\");\n         }\n@@ -98,7 +101,8 @@ public class BnfSyntax implements BnfVisitor {\n         return s;\n     }\n \n-    private static String skipAfterExtensionStart(StringTokenizer tokenizer, StringBuilder buff) {\n+    private static String skipAfterExtensionStart(StringTokenizer tokenizer,\n+                                                  StringBuilder buff) {\n         String s;\n         do {\n             s = tokenizer.nextToken();\n@@ -109,7 +113,7 @@ public class BnfSyntax implements BnfVisitor {\n     /**\n      * Get the HTML link to the given token.\n      *\n-     * @param bnf the BNF\n+     * @param bnf   the BNF\n      * @param token the token\n      * @return the HTML link\n      */\n@@ -131,7 +135,9 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+        if (section.startsWith(\"Data Types\") ||\n+                section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/131/BnfSyntax.java\nindex 9f4092c4b61..cdc50062f80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/131/BnfSyntax.java\n@@ -131,7 +131,8 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n@@ -181,4 +182,4 @@ public class BnfSyntax implements BnfVisitor {\n         // not used\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/131/BnfSyntax.java\nindex 9f4092c4b61..c77eed9ca60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/131/BnfSyntax.java\n@@ -18,6 +18,8 @@ import org.h2.util.StringUtils;\n /**\n  * A BNF visitor that generates BNF in HTML form.\n  */\n+\n+\n public class BnfSyntax implements BnfVisitor {\n \n     private String html;\n@@ -29,11 +31,13 @@ public class BnfSyntax implements BnfVisitor {\n      * @param syntaxLines the syntax\n      * @return the HTML\n      */\n+\n+\n     public String getHtml(Bnf bnf, String syntaxLines) {\n         syntaxLines = StringUtils.replaceAll(syntaxLines, \"\\n    \", \"\\n\");\n         StringTokenizer tokenizer = Bnf.getTokenizer(syntaxLines);\n         StringBuilder buff = new StringBuilder();\n-        ArrayDeque<Character> deque = new ArrayDeque<>();\n+        ArrayDeque<Character> deque = new ArrayDeque< >();\n         boolean extension = false;\n         while (tokenizer.hasMoreTokens()) {\n             String s = tokenizer.nextToken();\n@@ -113,6 +117,8 @@ public class BnfSyntax implements BnfVisitor {\n      * @param token the token\n      * @return the HTML link\n      */\n+\n+\n     String getLink(Bnf bnf, String token) {\n         RuleHead found = null;\n         String key = Bnf.getRuleMapKey(token);\n@@ -131,24 +137,27 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+        if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n-        } else if (token.equals(\"@func@\")) {\n+                                          } else if (token.equals(\"@func@\")) {\n             return \"<a href=\\\"functions.html\\\">Function</a>\";\n         } else if (found.getRule() instanceof RuleFixed) {\n-            found.getRule().accept(this);\n-            return html;\n-        }\n+                                                     found.getRule().accept(this);\n+                                                     return html;\n+                                                 }\n         String link = found.getTopic().toLowerCase().replace(' ', '_');\n         link = page + \"#\" + StringUtils.urlEncode(link);\n-        return \"<a href=\\\"\" + link + \"\\\">\" + token + \"</a>\";\n+        return \"<a href=\\\"\" + link + \"\\\">\"\n+        + token + \"</a>\";\n     }\n \n     @Override\n     public void visitRuleElement(boolean keyword, String name, Rule link) {\n         // not used\n+\n     }\n \n     @Override\n@@ -159,26 +168,31 @@ public class BnfSyntax implements BnfVisitor {\n     @Override\n     public void visitRuleList(boolean or, ArrayList<Rule> list) {\n         // not used\n+\n     }\n \n     @Override\n     public void visitRuleOptional(Rule rule) {\n         // not used\n+\n     }\n \n     @Override\n     public void visitRuleOptional(ArrayList<Rule> list) {\n         // not used\n+\n     }\n \n     @Override\n     public void visitRuleRepeat(boolean comma, Rule rule) {\n         // not used\n+\n     }\n \n     @Override\n     public void visitRuleExtension(Rule rule, boolean compatibility) {\n         // not used\n+\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/131/BnfSyntax.java\nindex 9f4092c4b61..4fb6a2a082c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/131/BnfSyntax.java\n@@ -131,7 +131,8 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+        if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/131/BnfSyntax.java\nindex 9f4092c4b61..4fb6a2a082c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/131/BnfSyntax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/131/BnfSyntax.java\n@@ -131,7 +131,8 @@ public class BnfSyntax implements BnfVisitor {\n         String section = found.getSection();\n         if (section.startsWith(\"Commands\")) {\n             page = \"commands.html\";\n-        } if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n+        }\n+        if (section.startsWith(\"Data Types\") || section.startsWith(\"Interval Data Types\")) {\n             page = \"datatypes.html\";\n         } else if (section.startsWith(\"Functions\")) {\n             page = \"functions.html\";\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
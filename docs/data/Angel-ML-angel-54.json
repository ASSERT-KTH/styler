{
    "project_name": "Angel-ML-angel",
    "error_id": "54",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Sparse double matrix that is represented by a group of sparse double vector {@link SparseDoubleVector}\n */\npublic class SparseDoubleMatrix extends TDoubleMatrix {\n  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/54/SparseDoubleMatrix.java\nindex 5d1c2c9e891..ebfd1733b87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/54/SparseDoubleMatrix.java\n@@ -30,6 +30,7 @@ public class SparseDoubleMatrix extends TDoubleMatrix {\n \r\n   /**\r\n    * Build a SparseDoubleMatrix\r\n+   *\r\n    * @param row row number\r\n    * @param col column number\r\n    */\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/54/SparseDoubleMatrix.java\nindex 5d1c2c9e891..439b525faf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/54/SparseDoubleMatrix.java\n@@ -51,4 +51,4 @@ public class SparseDoubleMatrix extends TDoubleMatrix {\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/54/SparseDoubleMatrix.java\nindex 5d1c2c9e891..3faf54bbfee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/54/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/54/SparseDoubleMatrix.java\n@@ -14,28 +14,30 @@\n  * the License.\r\n  */\r\n \r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseDoubleVector;\r\n-\r\n-import org.apache.commons.logging.Log;\r\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseDoubleVector;\n+import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\r\n \r\n /**\r\n  * Sparse double matrix that is represented by a group of sparse double vector {@link SparseDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n+ */\n+\n+public class SparseDoubleMatrix extends TDoubleMatrix {\n+\n+  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\n   private final SparseDoubleVector[] vectors;\r\n \r\n   /**\r\n    * Build a SparseDoubleMatrix\r\n    * @param row row number\r\n    * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseDoubleVector[row];\r\n+   */\n+\n+  public SparseDoubleMatrix(int row, int col) {\n+    super(row, col);\n+    vectors = new SparseDoubleVector[row];\n   }\r\n \r\n   /**\r\n@@ -43,12 +45,14 @@ public class SparseDoubleMatrix extends TDoubleMatrix {\n    *\r\n    * @param rowIndex row index\r\n    * @return\r\n-   */\r\n-  @Override\r\n-  public SparseDoubleVector initVector(int rowIndex) {\r\n-    SparseDoubleVector ret = new SparseDoubleVector(col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+   */\n+\n+  @Override\n+  public SparseDoubleVector initVector(int rowIndex) {\n+    SparseDoubleVector ret = new SparseDoubleVector(col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
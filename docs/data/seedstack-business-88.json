{
    "project_name": "seedstack-business",
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler.dsl;\n\nimport static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..0c4ffa12297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/88/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..4398e37ec07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/88/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n@@ -170,7 +171,7 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         final ParameterHolder<D> aggregateParameterHolder;\n \n         private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n+                        ParameterHolder<D> aggregateParameterHolder) {\n             this.supported = supported;\n             this.idParameterHolder = idParameterHolder;\n             this.aggregateParameterHolder = aggregateParameterHolder;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "column": "76",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "167",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..46bb3ee37e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/88/LegacyDtoInfoResolver.java\n@@ -40,12 +40,10 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n+    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create( new CacheParameters<Class<?>, DtoInfo<?>>()\n                     .setInitialSize(256)\n                     .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n+                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo));\n \n     @Inject\n     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n@@ -71,10 +69,10 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n                             if (idAnnotation.index() >= 0) {\n                                 idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n                                         idAnnotation.typeIndex(), idAnnotation.index(), method);\n-                            } else {\n+    } else {\n                                 idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n                                         method);\n-                            }\n+    }\n                         } else {\n                             if (idAnnotation.index() >= 0) {\n                                 idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n@@ -85,22 +83,21 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n                         supported.set(true);\n                     }\n \n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n+                    MatchingFactoryParameter factoryAnnotation = method.getAnnotation(MatchingFactoryParameter.class);\n                     if (factoryAnnotation != null) {\n                         if (factoryAnnotation.typeIndex() >= 0) {\n                             if (factoryAnnotation.index() >= 0) {\n                                 aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n                                         factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n-                            } else {\n+    } else {\n                                 aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n                                         factoryAnnotation.typeIndex(), method);\n-                            }\n+    }\n                         } else {\n                             if (factoryAnnotation.index() >= 0) {\n                                 aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n                                         factoryAnnotation.index(), method);\n-                            } else {\n+    } else {\n                                 aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n                             }\n                         }\n@@ -149,9 +146,8 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         if (parameterHolder.isEmpty()) {\n             throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n                     .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n-        }\n+                            .getName()).put(\"aggregateIdClass\", aggregateIdClass);\n+    }\n         return parameterHolder;\n     }\n \n@@ -168,12 +164,10 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         final boolean supported;\n         final ParameterHolder<D> idParameterHolder;\n         final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n-            this.supported = supported;\n+private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder, ParameterHolder<D> aggregateParameterHolder) {\n+    this.supported = supported;\n             this.idParameterHolder = idParameterHolder;\n             this.aggregateParameterHolder = aggregateParameterHolder;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "58",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 57, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "61",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 60, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "89",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "column": "65",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "89",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "69",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "65",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "column": "69",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 68, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "65",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "61",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 60, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "65",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "89",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "column": "69",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "65",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "69",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 68, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "column": "65",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 64, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "column": "61",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 60, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "61",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 60, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 65, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "99",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "column": "70",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "99",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "74",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "70",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "74",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 73, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "column": "70",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "column": "66",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 65, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "70",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "99",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "column": "74",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "70",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "column": "74",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 73, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "column": "70",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 69, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "66",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 65, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "66",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 65, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "28",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 27, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "column": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "166",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..59c10bed434 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/88/LegacyDtoInfoResolver.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n-\n import java.lang.annotation.Annotation;\n import java.util.concurrent.atomic.AtomicBoolean;\n import javax.annotation.Priority;\n@@ -35,78 +34,66 @@ import org.slf4j.LoggerFactory;\n  * @see MatchingEntityId\n  * @see MatchingFactoryParameter\n  */\n-@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n-class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+\n+\n+@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n+    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(new CacheParameters<Class<?>, DtoInfo<?>>()\n+        .setInitialSize(256)\n+        .setMaxSize(1024)\n+        .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo));\n \n     @Inject\n     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n-        super(domainRegistry);\n+                                                         super(domainRegistry);\n     }\n \n-    private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n+    private static<D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n         final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n         final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n         final AtomicBoolean supported = new AtomicBoolean(false);\n-\n         LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n-\n         Classes.from(dtoClass)\n-                .traversingSuperclasses()\n-                .methods()\n-                .forEach(method -> {\n-                    makeAccessible(method);\n-\n-                    MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n-                    if (idAnnotation != null) {\n-                        if (idAnnotation.typeIndex() >= 0) {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n-                                        idAnnotation.typeIndex(), idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n-                                        method);\n-                            }\n-                        } else {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-\n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n-                    if (factoryAnnotation != null) {\n-                        if (factoryAnnotation.typeIndex() >= 0) {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), method);\n-                            }\n-                        } else {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-                });\n+            .traversingSuperclasses()\n+        .methods().forEach(method-> {\n+                               makeAccessible(method);\n+                               MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n+                               if(idAnnotation != null) {\n+                                                            if (idAnnotation.typeIndex()>= 0) {\n+                                                                if (idAnnotation.index()>= 0) {\n+                                                                    idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID, idAnnotation.typeIndex(), idAnnotation.index(), method);\n+                                                                } else {\n+                                                                    idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(), method);\n+                                                                }\n+                                                            } else {\n+                                                                if (idAnnotation.index()>= 0) {\n+                                                                    idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n+                                                                } else {\n+                                                                    idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n+                                                                }\n+                                                            }\n+                                                            supported.set(true);\n+                               } MatchingFactoryParameter factoryAnnotation = method.getAnnotation(MatchingFactoryParameter.class);\n+                               if(factoryAnnotation != null) {\n+                                                                 if (factoryAnnotation.typeIndex()>= 0) {\n+                                                                     if (factoryAnnotation.index()>= 0) {\n+                                                                         aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM, factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n+                                                                     } else {\n+                                                                         aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM, factoryAnnotation.typeIndex(), method);\n+                                                                     }\n+                                                                 } else {\n+                                                                     if (factoryAnnotation.index()>= 0) {\n+                                                                         aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM, factoryAnnotation.index(), method);\n+                                                                     } else {\n+                                                                         aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n+                                                                     }\n+                                                                 }\n+                                                                 supported.set(true);\n+                               }\n+                           });\n         if (supported.get()) {\n             return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n         } else {\n@@ -116,47 +103,54 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n \n     @Override\n     public <D> boolean supports(D dto) {\n-        return getDtoInfo(dto).supported;\n+        return getDtoInfo(dto)\n+            .supported;\n     }\n \n     @Override\n     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n-                parameterHolder.parameters(dto));\n+\n+        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto), parameterHolder.parameters(dto));\n     }\n \n     @Override\n     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n+\n+        return createIdentifier(aggregateIdClass,\n+            parameterHolder.uniqueElementForAggregate(dto, position),\n                 parameterHolder.parametersOfAggregateRoot(dto, position));\n     }\n \n     @Override\n     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass) {\n-        return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto).parameters(dto));\n+        return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto)\n+            .parameters(dto));\n     }\n \n     @Override\n     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n         return createFromFactory(aggregateRootClass,\n-                getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n+            getAggregateParameterHolder(dto)\n+                .parametersOfAggregateRoot(dto, position));\n     }\n \n-    private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n-        ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n-        if (parameterHolder.isEmpty()) {\n-            throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n-                    .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n+    private<D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n+        ParameterHolder<D> parameterHolder = getDtoInfo(dto)\n+            .idParameterHolder;\n+        if(parameterHolder.isEmpty()) {\n+                                          throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n+                                              .put(\"dtoClass\", dto.getClass()\n+                                                  .getName())\n+                                              .put(\"aggregateIdClass\", aggregateIdClass);\n         }\n         return parameterHolder;\n     }\n \n     private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n-        return getDtoInfo(dto).aggregateParameterHolder;\n+        return getDtoInfo(dto)\n+            .aggregateParameterHolder;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -165,15 +159,14 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n     }\n \n     private static class DtoInfo<D> {\n-        final boolean supported;\n-        final ParameterHolder<D> idParameterHolder;\n-        final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n-            this.supported = supported;\n-            this.idParameterHolder = idParameterHolder;\n-            this.aggregateParameterHolder = aggregateParameterHolder;\n-        }\n-    }\n+\n+final boolean supported;\n+final ParameterHolder<D> idParameterHolder;\n+final ParameterHolder<D> aggregateParameterHolder;\n+private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder, ParameterHolder<D> aggregateParameterHolder) {\n+   this.supported = supported;\n+   this.idParameterHolder = idParameterHolder;\n+   this.aggregateParameterHolder = aggregateParameterHolder;\n }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 96
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..0c4ffa12297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/88/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/88/LegacyDtoInfoResolver.java\nindex b30f42f7443..0c4ffa12297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/88/LegacyDtoInfoResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/88/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
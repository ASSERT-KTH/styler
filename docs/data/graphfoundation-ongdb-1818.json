{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1818",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1818/TransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1818/TransactionApplier.java\nindex 2340713db03..5794fecf381 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1818/TransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1818/TransactionApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.tx;\n \n import org.neo4j.com.Response;\n@@ -47,20 +48,20 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.EXTERNAL;\n  */\n public class TransactionApplier\n {\n-    private final TransactionRepresentationCommitProcess commitProcess;\n-    private final VersionContextSupplier versionContextSupplier;\n+  private final TransactionRepresentationCommitProcess commitProcess;\n+  private final VersionContextSupplier versionContextSupplier;\n \n-    public TransactionApplier( DependencyResolver resolver )\n-    {\n-        commitProcess = new TransactionRepresentationCommitProcess(\n-                resolver.resolveDependency( TransactionAppender.class ),\n-                resolver.resolveDependency( StorageEngine.class ) );\n-        versionContextSupplier = resolver.resolveDependency( VersionContextSupplier.class );\n-    }\n+  public TransactionApplier(DependencyResolver resolver)\n+  {\n+    commitProcess = new TransactionRepresentationCommitProcess(\n+        resolver.resolveDependency(TransactionAppender.class),\n+        resolver.resolveDependency(StorageEngine.class));\n+    versionContextSupplier = resolver.resolveDependency(VersionContextSupplier.class);\n+  }\n \n-    public void appendToLogAndApplyToStore( CommittedTransactionRepresentation tx ) throws TransactionFailureException\n-    {\n-        commitProcess.commit( new TransactionToApply( tx.getTransactionRepresentation(),\n-                tx.getCommitEntry().getTxId(), versionContextSupplier.getVersionContext() ), NULL, EXTERNAL );\n-    }\n+  public void appendToLogAndApplyToStore(CommittedTransactionRepresentation tx) throws TransactionFailureException\n+  {\n+    commitProcess.commit(new TransactionToApply(tx.getTransactionRepresentation(),\n+        tx.getCommitEntry().getTxId(), versionContextSupplier.getVersionContext()), NULL, EXTERNAL);\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1818/TransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1818/TransactionApplier.java\nindex 2340713db03..77811aed9c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1818/TransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1818/TransactionApplier.java\n@@ -52,15 +52,12 @@ public class TransactionApplier\n \n     public TransactionApplier( DependencyResolver resolver )\n     {\n-        commitProcess = new TransactionRepresentationCommitProcess(\n-                resolver.resolveDependency( TransactionAppender.class ),\n-                resolver.resolveDependency( StorageEngine.class ) );\n-        versionContextSupplier = resolver.resolveDependency( VersionContextSupplier.class );\n+        commitProcess = new TransactionRepresentationCommitProcess( resolver.resolveDependency( TransactionAppender.class ), resolver.resolveDependency( StorageEngine.class ) );\n+versionContextSupplier = resolver.resolveDependency( VersionContextSupplier.class );\n     }\n \n     public void appendToLogAndApplyToStore( CommittedTransactionRepresentation tx ) throws TransactionFailureException\n     {\n-        commitProcess.commit( new TransactionToApply( tx.getTransactionRepresentation(),\n-                tx.getCommitEntry().getTxId(), versionContextSupplier.getVersionContext() ), NULL, EXTERNAL );\n+        commitProcess.commit( new TransactionToApply( tx.getTransactionRepresentation(), tx.getCommitEntry().getTxId(), versionContextSupplier.getVersionContext() ), NULL, EXTERNAL );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
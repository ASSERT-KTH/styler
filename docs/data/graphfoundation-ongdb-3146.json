{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3146",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3146/IntArrayBasedKeyTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3146/IntArrayBasedKeyTable.java\nindex 97228f2a16d..0e344f2b0d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3146/IntArrayBasedKeyTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3146/IntArrayBasedKeyTable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import java.util.Arrays;\n@@ -26,7 +27,7 @@ import static java.util.Arrays.fill;\n /**\n  * Table implementation for handling primitive int/long keys and hop bits. The quantized unit is int so a\n  * multiple of ints will be used for every entry.\n- *\n+ * <p>\n  * In this class, <code>index</code> refers to the index of an entry (key + value + hop bits), while\n  * <code>address</code> refers to the position of an int word in the internal <code>table</code>.\n  *\n@@ -34,137 +35,137 @@ import static java.util.Arrays.fill;\n  */\n public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTable<VALUE>\n {\n-    protected int[] table;\n-    protected final VALUE singleValue; // used as a pointer to pass around a primitive value in concrete subclasses\n-    private final int itemsPerEntry;\n-\n-    protected IntArrayBasedKeyTable( int capacity, int itemsPerEntry, int h, VALUE singleValue )\n-    {\n-        super( capacity, h );\n-        this.singleValue = singleValue;\n-        this.itemsPerEntry = itemsPerEntry;\n-        initializeTable();\n-        clearTable();\n-    }\n-\n-    protected void initializeTable()\n-    {\n-        this.table = new int[capacity * itemsPerEntry];\n-    }\n-\n-    protected void clearTable()\n-    {\n-        fill( table, -1 );\n-    }\n-\n-    protected long putLong( int actualIndex, long value )\n-    {\n-        long previous = getLong( actualIndex );\n-        table[actualIndex] = (int)value;\n-        table[actualIndex + 1] = (int) ((value & 0xFFFFFFFF00000000L) >>> 32);\n-        return previous;\n-    }\n-\n-    protected long getLong( int actualIndex )\n-    {\n-        long low = table[actualIndex] & 0xFFFFFFFFL;\n-        long high = table[actualIndex + 1] & 0xFFFFFFFFL;\n-        return (high << 32) | low;\n-    }\n-\n-    @Override\n-    public void put( int index, long key, VALUE value )\n-    {\n-        int address = address( index );\n-        internalPut( address, key, value );\n-        size++;\n-    }\n-\n-    @Override\n-    public VALUE remove( int index )\n-    {\n-        int address = address( index );\n-        VALUE value = value( index );\n-        internalRemove( address );\n-        size--;\n-        return value;\n-    }\n-\n-    @Override\n-    public long move( int fromIndex, int toIndex )\n-    {\n-        long key = key( fromIndex );\n-        int fromAddress = address( fromIndex );\n-        int toAddress = address( toIndex );\n-        for ( int i = 0; i < itemsPerEntry - 1; i++ )\n-        {\n-            int tempValue = table[fromAddress + i];\n-            table[fromAddress + i] = table[toAddress + i];\n-            table[toAddress + i] = tempValue;\n-        }\n-        return key;\n-    }\n-\n-    protected void internalRemove( int actualIndex )\n-    {\n-        Arrays.fill( table, actualIndex, actualIndex + itemsPerEntry - 1 /*leave the hop bits alone*/, -1 );\n-    }\n-\n-    protected abstract void internalPut( int actualIndex, long key, VALUE value );\n-\n-    @Override\n-    public VALUE value( int index )\n-    {\n-        return singleValue;\n-    }\n-\n-    @Override\n-    public VALUE putValue( int index, VALUE value )\n-    {\n-        return value;\n-    }\n-\n-    @Override\n-    public long hopBits( int index )\n-    {\n-        return ~(table[address( index ) + itemsPerEntry - 1] | 0xFFFFFFFF00000000L);\n-    }\n-\n-    private int hopBit( int hd )\n-    {\n-        return 1 << hd;\n-    }\n-\n-    @Override\n-    public void putHopBit( int index, int hd )\n-    {\n-        table[address( index ) + itemsPerEntry - 1] &= ~hopBit( hd );\n-    }\n-\n-    @Override\n-    public void moveHopBit( int index, int hd, int delta )\n-    {\n-        table[address( index ) + itemsPerEntry - 1] ^= hopBit( hd ) | hopBit( hd + delta );\n-    }\n-\n-    @Override\n-    public void removeHopBit( int index, int hd )\n-    {\n-        table[address( index ) + itemsPerEntry - 1] |= hopBit( hd );\n-    }\n-\n-    protected int address( int index )\n-    {\n-        return index * itemsPerEntry;\n-    }\n-\n-    @Override\n-    public void clear()\n-    {\n-        if ( !isEmpty() )\n-        {\n-            clearTable();\n-        }\n-        super.clear();\n-    }\n+  protected int[] table;\n+  protected final VALUE singleValue; // used as a pointer to pass around a primitive value in concrete subclasses\n+  private final int itemsPerEntry;\n+\n+  protected IntArrayBasedKeyTable(int capacity, int itemsPerEntry, int h, VALUE singleValue)\n+  {\n+    super(capacity, h);\n+    this.singleValue = singleValue;\n+    this.itemsPerEntry = itemsPerEntry;\n+    initializeTable();\n+    clearTable();\n+  }\n+\n+  protected void initializeTable()\n+  {\n+    this.table = new int[capacity * itemsPerEntry];\n+  }\n+\n+  protected void clearTable()\n+  {\n+    fill(table, -1);\n+  }\n+\n+  protected long putLong(int actualIndex, long value)\n+  {\n+    long previous = getLong(actualIndex);\n+    table[actualIndex] = (int) value;\n+    table[actualIndex + 1] = (int) ((value & 0xFFFFFFFF00000000L) >>> 32);\n+    return previous;\n+  }\n+\n+  protected long getLong(int actualIndex)\n+  {\n+    long low = table[actualIndex] & 0xFFFFFFFFL;\n+    long high = table[actualIndex + 1] & 0xFFFFFFFFL;\n+    return (high << 32) | low;\n+  }\n+\n+  @Override\n+  public void put(int index, long key, VALUE value)\n+  {\n+    int address = address(index);\n+    internalPut(address, key, value);\n+    size++;\n+  }\n+\n+  @Override\n+  public VALUE remove(int index)\n+  {\n+    int address = address(index);\n+    VALUE value = value(index);\n+    internalRemove(address);\n+    size--;\n+    return value;\n+  }\n+\n+  @Override\n+  public long move(int fromIndex, int toIndex)\n+  {\n+    long key = key(fromIndex);\n+    int fromAddress = address(fromIndex);\n+    int toAddress = address(toIndex);\n+    for (int i = 0; i < itemsPerEntry - 1; i++)\n+    {\n+      int tempValue = table[fromAddress + i];\n+      table[fromAddress + i] = table[toAddress + i];\n+      table[toAddress + i] = tempValue;\n+    }\n+    return key;\n+  }\n+\n+  protected void internalRemove(int actualIndex)\n+  {\n+    Arrays.fill(table, actualIndex, actualIndex + itemsPerEntry - 1 /*leave the hop bits alone*/, -1);\n+  }\n+\n+  protected abstract void internalPut(int actualIndex, long key, VALUE value);\n+\n+  @Override\n+  public VALUE value(int index)\n+  {\n+    return singleValue;\n+  }\n+\n+  @Override\n+  public VALUE putValue(int index, VALUE value)\n+  {\n+    return value;\n+  }\n+\n+  @Override\n+  public long hopBits(int index)\n+  {\n+    return ~(table[address(index) + itemsPerEntry - 1] | 0xFFFFFFFF00000000L);\n+  }\n+\n+  private int hopBit(int hd)\n+  {\n+    return 1 << hd;\n+  }\n+\n+  @Override\n+  public void putHopBit(int index, int hd)\n+  {\n+    table[address(index) + itemsPerEntry - 1] &= ~hopBit(hd);\n+  }\n+\n+  @Override\n+  public void moveHopBit(int index, int hd, int delta)\n+  {\n+    table[address(index) + itemsPerEntry - 1] ^= hopBit(hd) | hopBit(hd + delta);\n+  }\n+\n+  @Override\n+  public void removeHopBit(int index, int hd)\n+  {\n+    table[address(index) + itemsPerEntry - 1] |= hopBit(hd);\n+  }\n+\n+  protected int address(int index)\n+  {\n+    return index * itemsPerEntry;\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    if (!isEmpty())\n+    {\n+      clearTable();\n+    }\n+    super.clear();\n+  }\n }\n",
            "diff_size": 135
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3146/IntArrayBasedKeyTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3146/IntArrayBasedKeyTable.java\nindex 97228f2a16d..50b929ebee3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3146/IntArrayBasedKeyTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3146/IntArrayBasedKeyTable.java\n@@ -60,8 +60,8 @@ public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTa\n     protected long putLong( int actualIndex, long value )\n     {\n         long previous = getLong( actualIndex );\n-        table[actualIndex] = (int)value;\n-        table[actualIndex + 1] = (int) ((value & 0xFFFFFFFF00000000L) >>> 32);\n+        table[actualIndex] = ( int)value;\n+        table[actualIndex + 1] = ( int) ((value & 0xFFFFFFFF00000000L) >>> 32 );\n         return previous;\n     }\n \n@@ -69,7 +69,7 @@ public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTa\n     {\n         long low = table[actualIndex] & 0xFFFFFFFFL;\n         long high = table[actualIndex + 1] & 0xFFFFFFFFL;\n-        return (high << 32) | low;\n+        return ( high << 32) | low;\n     }\n \n     @Override\n@@ -102,7 +102,8 @@ public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTa\n             table[fromAddress + i] = table[toAddress + i];\n             table[toAddress + i] = tempValue;\n         }\n-        return key;\n+\n+return key;\n     }\n \n     protected void internalRemove( int actualIndex )\n@@ -127,7 +128,7 @@ public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTa\n     @Override\n     public long hopBits( int index )\n     {\n-        return ~(table[address( index ) + itemsPerEntry - 1] | 0xFFFFFFFF00000000L);\n+        return ~( table[address( index ) + itemsPerEntry - 1] | 0xFFFFFFFF00000000L );\n     }\n \n     private int hopBit( int hd )\n@@ -167,4 +168,4 @@ public abstract class IntArrayBasedKeyTable<VALUE> extends PowerOfTwoQuantizedTa\n         }\n         super.clear();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
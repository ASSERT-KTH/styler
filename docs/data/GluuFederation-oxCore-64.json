{
    "project_name": "GluuFederation-oxCore",
    "error_id": "64",
    "information": {
        "errors": [
            {
                "line": "582",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "            realValues = operationService.createStoragePassword(attributeValues);\n        }\n        \n        if (realValues.length == 1) {\n            return new MutationSpec(type, realAttributeName, realValues[0]);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/64/CouchbaseEntryManager.java\nindex 2e93eb17889..9a5ed2fb893 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/64/CouchbaseEntryManager.java\n@@ -579,7 +579,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/64/CouchbaseEntryManager.java\nindex 2e93eb17889..b311897334f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/64/CouchbaseEntryManager.java\n@@ -108,7 +108,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     protected <T> void updateMergeChanges(T entry, boolean isSchemaUpdate, Class<?> entryClass, Map<String, AttributeData> attributesFromDbMap,\n-            List<AttributeDataModification> attributeDataModifications) {\n+                                          List<AttributeDataModification> attributeDataModifications) {\n         // Update object classes if entry contains custom object classes\n         if (!isSchemaUpdate) {\n             String[] objectClasses = getObjectClasses(entry, entryClass);\n@@ -116,7 +116,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n             if (!Arrays.equals(objectClassesFromDb, objectClasses)) {\n                 attributeDataModifications.add(new AttributeDataModification(AttributeModificationType.REPLACE,\n-                        new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n+                    new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n             }\n         }\n     }\n@@ -240,13 +240,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n                             if (removeValues.size() > 0) {\n                                 MutationSpec removeModification = createModification(Mutation.DELETE, attributeName,\n-                                        removeValues.toArray(new String[removeValues.size()]));\n+                                    removeValues.toArray(new String[removeValues.size()]));\n                                 modifications.add(removeModification);\n                             }\n \n                             if (addValues.size() > 0) {\n                                 MutationSpec addModification = createModification(Mutation.DICT_ADD, attributeName,\n-                                        addValues.toArray(new String[addValues.size()]));\n+                                    addValues.toArray(new String[addValues.size()]));\n                                 modifications.add(addModification);\n                             }\n                         }\n@@ -319,13 +319,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     public <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-            BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n+                                   BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n         PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation,\n-                false, start, count, chunkSize);\n+            false, start, count, chunkSize);\n         if (searchResult.getEntriesCount() == 0) {\n             return new ArrayList<T>(0);\n         }\n@@ -337,13 +337,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     public <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n-            SortOrder sortOrder, int start, int count, int chunkSize) {\n+                                               SortOrder sortOrder, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n         PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, SearchScope.SUB, ldapReturnAttributes, sortBy, sortOrder,\n-                null, true, start, count, chunkSize);\n+            null, true, start, count, chunkSize);\n \n         PagedResult<T> result = new PagedResult<T>();\n         result.setEntriesCount(searchResult.getEntriesCount());\n@@ -362,8 +362,9 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope,\n-            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start,\n-            int count, int chunkSize) {\n+                                                          String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder,\n+                                                          BatchOperation<T> batchOperation, boolean returnCount, int start,\n+                                                          int count, int chunkSize) {\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n@@ -388,9 +389,9 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             Sort requestedSort = buildSort(sortBy, sortOrder);\n \n             if (ArrayHelper.isEmpty(defaultSort)) {\n-                defaultSort = new Sort[] { requestedSort };\n+                defaultSort = new Sort[] {requestedSort};\n             } else {\n-                defaultSort = ArrayHelper.arrayMerge(new Sort[] { requestedSort }, defaultSort);\n+                defaultSort = ArrayHelper.arrayMerge(new Sort[] {requestedSort}, defaultSort);\n             }\n         }\n \n@@ -402,7 +403,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             }\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n             searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), scope, currentLdapReturnAttributes,\n-                    defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n+                defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n \n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entries with baseDN: %s, filter: %s\", baseDN, searchFilter));\n@@ -432,7 +433,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n             searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    null, false, 1, 1, 0);\n+                null, false, 1, 1, 0);\n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter));\n             }\n@@ -447,13 +448,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n         List<PropertyAnnotation> propertiesAnnotations = getEntryPropertyAnnotations(entryClass);\n         List<T> entries = createEntities(entryClass, propertiesAnnotations, keyWithInum,\n-                searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n+            searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n \n         return entries;\n     }\n \n     protected <T> List<T> createEntities(Class<T> entryClass, List<PropertyAnnotation> propertiesAnnotations, ParsedKey baseDn,\n-            JsonObject... searchResultEntries) {\n+                                         JsonObject... searchResultEntries) {\n         List<T> result = new ArrayList<T>(searchResultEntries.length);\n         Map<String, List<AttributeData>> entriesAttributes = new LinkedHashMap<String, List<AttributeData>>(100);\n \n@@ -500,7 +501,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             if (attributeObject instanceof JsonArray) {\n                 attributeValueStrings = ((JsonArray) attributeObject).toList().toArray(NO_STRINGS);\n             } else {\n-                attributeValueStrings = new String[] { attributeObject.toString() };\n+                attributeValueStrings = new String[] {attributeObject.toString()};\n             }\n \n             AttributeData tmpAttribute = new AttributeData(attributeName, attributeValueStrings);\n@@ -515,7 +516,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             Filter filter = Filter.createEqualityFilter(CouchbaseOperationService.UID, userName);\n             PagedResult<JsonObject> searchResult = operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(filter),\n-                    SearchScope.SUB, null, null, null, false, 0, 1, 1);\n+                SearchScope.SUB, null, null, null, false, 0, 1, 1);\n             if ((searchResult == null) || (searchResult.getEntriesCount() != 1)) {\n                 return false;\n             }\n@@ -548,7 +549,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n-        String[] ldapReturnAttributes = new String[] { \"\" }; // Don't load attributes\n+        String[] ldapReturnAttributes = new String[] {\"\"}; // Don't load attributes\n \n         // Find entries\n         Filter searchFilter;\n@@ -563,10 +564,10 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             CouchbaseBatchOperationWraper<T> batchOperationWraper = new CouchbaseBatchOperationWraper<T>(batchOperation);\n             operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    batchOperationWraper, false, 0, 0, 100);\n+                batchOperationWraper, false, 0, 0, 100);\n         } catch (Exception ex) {\n             throw new EntryPersistenceException(\n-                    String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n+                String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n         }\n \n         return batchOperation.getCountEntries();\n@@ -579,7 +580,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "327",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "432",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/64/CouchbaseEntryManager.java\nindex 2e93eb17889..950000fcf2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/64/CouchbaseEntryManager.java\n@@ -324,8 +324,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n-        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation,\n-                false, start, count, chunkSize);\n+        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation, false, start, count, chunkSize);\n         if (searchResult.getEntriesCount() == 0) {\n             return new ArrayList<T>(0);\n         }\n@@ -362,8 +361,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope,\n-            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start,\n-            int count, int chunkSize) {\n+            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start, int count, int chunkSize) {\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n@@ -431,8 +429,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         PagedResult<JsonObject> searchResult = null;\n         try {\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n-            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    null, false, 1, 1, 0);\n+            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null, null, false, 1, 1, 0);\n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter));\n             }\n@@ -579,8 +576,8 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n-        if (realValues.length == 1) {\n+\n+if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n \n@@ -671,4 +668,4 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/64/CouchbaseEntryManager.java\nindex 2e93eb17889..9a5ed2fb893 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/64/CouchbaseEntryManager.java\n@@ -579,7 +579,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "581",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "581",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "581",
                    "column": "10",
                    "severity": "error",
                    "message": "'if' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/64/CouchbaseEntryManager.java\nindex 2e93eb17889..48e10dbff8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/64/CouchbaseEntryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/64/CouchbaseEntryManager.java\n@@ -578,9 +578,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         String[] realValues = attributeValues;\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n-        }\n-        \n-        if (realValues.length == 1) {\n+        }if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
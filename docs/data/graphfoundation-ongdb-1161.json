{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1161",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "121",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "207",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "232",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "329",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "353",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "367",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "455",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "525",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "820",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "820",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "829",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "834",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "834",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "846",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "846",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "879",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "879",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "897",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "901",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "901",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "923",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "923",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "942",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "942",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "955",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "955",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "986",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "986",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "989",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "989",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "995",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "995",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1017",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1017",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1027",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1027",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1037",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1037",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1060",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1067",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1068",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1077",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1085",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1093",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1094",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1110",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1110",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1118",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1118",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1128",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1128",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1133",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1133",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1144",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1144",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1150",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1150",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1190",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1190",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1192",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1194",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1194",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1198",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1198",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1161/AllStoreHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1161/AllStoreHolder.java\nindex a16ffd79590..7306fedb0ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1161/AllStoreHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1161/AllStoreHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.nio.ByteBuffer;\n@@ -107,1107 +108,1097 @@ import static org.neo4j.storageengine.api.txstate.TxStateVisitor.EMPTY;\n \n public class AllStoreHolder extends Read\n {\n-    private final StorageStatement.Nodes nodes;\n-    private final StorageStatement.Groups groups;\n-    private final StorageStatement.Properties properties;\n-    private final StorageStatement.Relationships relationships;\n-    private final StorageStatement statement;\n-    private final StoreReadLayer storeReadLayer;\n-    private final ExplicitIndexStore explicitIndexStore;\n-    private final Procedures procedures;\n-    private final SchemaState schemaState;\n-\n-    public AllStoreHolder( StorageEngine engine,\n-            StorageStatement statement,\n-            KernelTransactionImplementation ktx,\n-            DefaultCursors cursors,\n-            ExplicitIndexStore explicitIndexStore,\n-            Procedures procedures,\n-            SchemaState schemaState )\n-    {\n-        super( cursors, ktx );\n-        this.storeReadLayer = engine.storeReadLayer();\n-        this.statement = statement; // use provided statement, to assert no leakage\n-        this.nodes = statement.nodes();\n-        this.relationships = statement.relationships();\n-        this.groups = statement.groups();\n-        this.properties = statement.properties();\n-        this.explicitIndexStore = explicitIndexStore;\n-        this.procedures = procedures;\n-        this.schemaState = schemaState;\n-    }\n-\n-    @Override\n-    public boolean nodeExists( long reference )\n-    {\n-        ktx.assertOpen();\n-\n-        if ( hasTxStateWithChanges() )\n-        {\n-            TransactionState txState = txState();\n-            if ( txState.nodeIsDeletedInThisTx( reference ) )\n-            {\n-                return false;\n-            }\n-            else if ( txState.nodeIsAddedInThisTx( reference ) )\n-            {\n-                return true;\n-            }\n-        }\n-        return storeReadLayer.nodeExists( reference );\n-    }\n-\n-    @Override\n-    public long countsForNode( int labelId )\n-    {\n-        long count = countsForNodeWithoutTxState( labelId );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            CountsRecordState counts = new CountsRecordState();\n-            try\n-            {\n-                TransactionState txState = ktx.txState();\n-                txState.accept( new TransactionCountingStateVisitor( EMPTY, storeReadLayer,\n-                        statement, txState, counts ) );\n-                if ( counts.hasChanges() )\n-                {\n-                    count += counts.nodeCount( labelId, newDoubleLongRegister() ).readSecond();\n-                }\n-            }\n-            catch ( ConstraintValidationException | CreateConstraintFailureException e )\n-            {\n-                throw new IllegalArgumentException( \"Unexpected error: \" + e.getMessage() );\n-            }\n-        }\n-        return count;\n-    }\n-\n-    @Override\n-    public long countsForNodeWithoutTxState( int labelId )\n-    {\n-        return storeReadLayer.countsForNode( labelId );\n-    }\n-\n-    @Override\n-    public long countsForRelationship( int startLabelId, int typeId, int endLabelId )\n-    {\n-        long count = countsForRelationshipWithoutTxState( startLabelId, typeId, endLabelId );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            CountsRecordState counts = new CountsRecordState();\n-            try\n-            {\n-                TransactionState txState = ktx.txState();\n-                txState.accept( new TransactionCountingStateVisitor( EMPTY, storeReadLayer,\n-                        statement, txState, counts ) );\n-                if ( counts.hasChanges() )\n-                {\n-                    count += counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() )\n-                            .readSecond();\n-                }\n-            }\n-            catch ( ConstraintValidationException | CreateConstraintFailureException e )\n-            {\n-                throw new IllegalArgumentException( \"Unexpected error: \" + e.getMessage() );\n-            }\n-        }\n-        return count;\n-    }\n-\n-    @Override\n-    public long countsForRelationshipWithoutTxState( int startLabelId, int typeId, int endLabelId )\n-    {\n-        return storeReadLayer.countsForRelationship( startLabelId, typeId, endLabelId );\n-    }\n-\n-    @Override\n-    public boolean relationshipExists( long reference )\n-    {\n-        ktx.assertOpen();\n-\n-        if ( hasTxStateWithChanges() )\n-        {\n-            TransactionState txState = txState();\n-            if ( txState.relationshipIsDeletedInThisTx( reference ) )\n-            {\n-                return false;\n-            }\n-            else if ( txState.relationshipIsAddedInThisTx( reference ) )\n-            {\n-                return true;\n-            }\n-        }\n-        return storeReadLayer.relationshipExists( reference );\n-    }\n-\n-    @Override\n-    long graphPropertiesReference()\n-    {\n-        return statement.getGraphPropertyReference();\n-    }\n-\n-    @Override\n-    IndexReader indexReader( IndexReference index, boolean fresh ) throws IndexNotFoundKernelException\n-    {\n-        SchemaIndexDescriptor schemaIndexDescriptor = index.isUnique() ?\n-                                                      SchemaIndexDescriptorFactory.uniqueForLabel( index.label(), index.properties() ) :\n-                                                      SchemaIndexDescriptorFactory.forLabel( index.label(), index.properties() );\n-        return fresh ? statement.getFreshIndexReader( schemaIndexDescriptor ) :\n-               statement.getIndexReader( schemaIndexDescriptor );\n-    }\n-\n-    @Override\n-    LabelScanReader labelScanReader()\n-    {\n-        return statement.getLabelScanReader();\n-    }\n-\n-    @Override\n-    ExplicitIndex explicitNodeIndex( String indexName ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexTxState().nodeChanges( indexName );\n-    }\n-\n-    @Override\n-    ExplicitIndex explicitRelationshipIndex( String indexName ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexTxState().relationshipChanges( indexName );\n-    }\n-\n-    @Override\n-    public String[] nodeExplicitIndexesGetAll()\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexStore.getAllNodeIndexNames();\n-    }\n-\n-    @Override\n-    public boolean nodeExplicitIndexExists( String indexName, Map<String,String> customConfiguration )\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Node, indexName, customConfiguration  );\n-    }\n-\n-    @Override\n-    public Map<String,String> nodeExplicitIndexGetConfiguration( String indexName )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexStore.getNodeIndexConfiguration( indexName );\n-    }\n-\n-    @Override\n-    public String[] relationshipExplicitIndexesGetAll()\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexStore.getAllRelationshipIndexNames();\n-    }\n-\n-    @Override\n-    public boolean relationshipExplicitIndexExists( String indexName, Map<String,String> customConfiguration )\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Relationship, indexName, customConfiguration  );\n-    }\n-\n-    @Override\n-    public Map<String,String> relationshipExplicitIndexGetConfiguration( String indexName )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return explicitIndexStore.getRelationshipIndexConfiguration( indexName );\n-    }\n-\n-    @Override\n-    public CapableIndexReference index( int label, int... properties )\n-    {\n-        ktx.assertOpen();\n-\n-        LabelSchemaDescriptor descriptor;\n-        try\n-        {\n-            descriptor = SchemaDescriptorFactory.forLabel( label, properties );\n-        }\n-        catch ( IllegalArgumentException ignore )\n-        {\n-            // This means we have invalid label or property ids.\n-            return CapableIndexReference.NO_INDEX;\n-        }\n-        SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema( descriptor );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            ReadableDiffSets<SchemaIndexDescriptor> diffSets =\n-                    ktx.txState().indexDiffSetsByLabel( label );\n-            if ( indexDescriptor != null )\n-            {\n-                if ( diffSets.isRemoved( indexDescriptor ) )\n-                {\n-                    return CapableIndexReference.NO_INDEX;\n-                }\n-                else\n-                {\n-                    return indexGetCapability( indexDescriptor );\n-                }\n-            }\n-            else\n-            {\n-                Iterator<SchemaIndexDescriptor> fromTxState = filter(\n-                        SchemaDescriptor.equalTo( descriptor ),\n-                        diffSets.apply( emptyResourceIterator() ) );\n-                if ( fromTxState.hasNext() )\n-                {\n-                    return DefaultCapableIndexReference.fromDescriptor( fromTxState.next() );\n-                }\n-                else\n-                {\n-                    return CapableIndexReference.NO_INDEX;\n-                }\n-            }\n-        }\n-\n-        return indexDescriptor != null ? indexGetCapability( indexDescriptor ) : CapableIndexReference.NO_INDEX;\n-    }\n-\n-    @Override\n-    public Iterator<IndexReference> indexesGetForLabel( int labelId )\n-    {\n-        sharedOptimisticLock( ResourceTypes.LABEL, labelId );\n-        ktx.assertOpen();\n-\n-        Iterator<SchemaIndexDescriptor> iterator = storeReadLayer.indexesGetForLabel( labelId );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            iterator = ktx.txState().indexDiffSetsByLabel( labelId ).apply( iterator );\n-        }\n-        return Iterators.map( DefaultIndexReference::fromDescriptor, iterator );\n-    }\n-\n-    @Override\n-    public Iterator<IndexReference> indexesGetAll()\n-    {\n-        ktx.assertOpen();\n-\n-        Iterator<SchemaIndexDescriptor> iterator = storeReadLayer.indexesGetAll();\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            iterator = ktx.txState().indexChanges().apply( storeReadLayer.indexesGetAll() );\n-        }\n-\n-        return Iterators.map( indexDescriptor ->\n-        {\n-            sharedOptimisticLock( ResourceTypes.LABEL, indexDescriptor.schema().keyId() );\n-            return fromDescriptor( indexDescriptor );\n-        }, iterator );\n-    }\n-\n-    @Override\n-    public InternalIndexState indexGetState( IndexReference index ) throws IndexNotFoundKernelException\n-    {\n-        assertValidIndex( index );\n-        sharedOptimisticLock( ResourceTypes.LABEL, index.label() );\n-        ktx.assertOpen();\n-        return indexGetState( indexDescriptor( index ) );\n-    }\n-\n-    @Override\n-    public PopulationProgress indexGetPopulationProgress( IndexReference index )\n-            throws IndexNotFoundKernelException\n-    {\n-        sharedOptimisticLock( ResourceTypes.LABEL, index.label() );\n-        ktx.assertOpen();\n-        SchemaIndexDescriptor descriptor = indexDescriptor( index );\n-\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            if ( checkIndexState( descriptor,\n-                    ktx.txState().indexDiffSetsByLabel( index.label() ) ) )\n-            {\n-                return PopulationProgress.NONE;\n-            }\n-        }\n-\n-        return storeReadLayer.indexGetPopulationProgress( descriptor.schema() );\n-    }\n-\n-    @Override\n-    public Long indexGetOwningUniquenessConstraintId( IndexReference index )\n-    {\n-        sharedOptimisticLock( ResourceTypes.LABEL, index.label() );\n-        ktx.assertOpen();\n-        return indexGetOwningUniquenessConstraintId( indexDescriptor( index ) );\n-    }\n-\n-    @Override\n-    public long indexGetCommittedId( IndexReference index ) throws SchemaRuleNotFoundException\n-    {\n-        sharedOptimisticLock( ResourceTypes.LABEL, index.label() );\n-        ktx.assertOpen();\n-        return storeReadLayer.indexGetCommittedId( indexDescriptor( index ) );\n-    }\n-\n-    SchemaIndexDescriptor indexDescriptor( IndexReference index )\n-    {\n-        if ( index.isUnique() )\n-        {\n-            return SchemaIndexDescriptorFactory.uniqueForLabel( index.label(), index.properties() );\n-        }\n-        else\n-        {\n-            return SchemaIndexDescriptorFactory.forLabel( index.label(), index.properties() );\n-        }\n-    }\n-\n-    @Override\n-    public String indexGetFailure( IndexReference index ) throws IndexNotFoundKernelException\n-    {\n-        return storeReadLayer.indexGetFailure( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n-    }\n-\n-    @Override\n-    public double indexUniqueValuesSelectivity( IndexReference index ) throws IndexNotFoundKernelException\n-    {\n-        acquireSharedLabelLock( index.label() );\n-        ktx.assertOpen();\n-        return storeReadLayer\n-                .indexUniqueValuesPercentage( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n-    }\n-\n-    @Override\n-    public long indexSize( IndexReference index ) throws IndexNotFoundKernelException\n-    {\n-        acquireSharedLabelLock( index.label() );\n-        ktx.assertOpen();\n-        return storeReadLayer.indexSize( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n-    }\n-\n-    @Override\n-    public long nodesCountIndexed( IndexReference index, long nodeId, Value value ) throws KernelException\n-    {\n-        ktx.assertOpen();\n-        IndexReader reader = statement.getIndexReader( DefaultIndexReference.toDescriptor( index ) );\n-        return reader.countIndexedNodes( nodeId, value );\n-    }\n-\n-    @Override\n-    public long nodesGetCount( )\n-    {\n-        ktx.assertOpen();\n-        long base = storeReadLayer.nodesGetCount();\n-        return ktx.hasTxStateWithChanges() ? base + ktx.txState().addedAndRemovedNodes().delta() : base;\n-    }\n-\n-    @Override\n-    public long relationshipsGetCount( )\n-    {\n-        ktx.assertOpen();\n-        long base = storeReadLayer.relationshipsGetCount();\n-        return ktx.hasTxStateWithChanges() ? base + ktx.txState().addedAndRemovedRelationships().delta() : base;\n-    }\n-\n-    @Override\n-    public Register.DoubleLongRegister indexUpdatesAndSize( IndexReference index, Register.DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return storeReadLayer.indexUpdatesAndSize(\n-                SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n-\n-    }\n-\n-    @Override\n-    public Register.DoubleLongRegister indexSample( IndexReference index, Register.DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        return storeReadLayer.indexSample(\n-                SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n-    }\n-\n-    CapableIndexReference indexGetCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        try\n-        {\n-            return storeReadLayer.indexReference( schemaIndexDescriptor );\n-        }\n-        catch ( IndexNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Could not find capability for index \" + schemaIndexDescriptor, e );\n-        }\n-    }\n-\n-    InternalIndexState indexGetState( SchemaIndexDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        // If index is in our state, then return populating\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            if ( checkIndexState( descriptor,\n-                    ktx.txState().indexDiffSetsByLabel( descriptor.schema().keyId() ) ) )\n-            {\n-                return InternalIndexState.POPULATING;\n-            }\n-        }\n-\n-        return storeReadLayer.indexGetState( descriptor );\n-    }\n-\n-    Long indexGetOwningUniquenessConstraintId( SchemaIndexDescriptor index )\n-    {\n-        return storeReadLayer.indexGetOwningUniquenessConstraintId( index );\n-    }\n-\n-    SchemaIndexDescriptor indexGetForSchema( SchemaDescriptor descriptor )\n-    {\n-        SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema( descriptor );\n-        Iterator<SchemaIndexDescriptor> rules = iterator( indexDescriptor );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            rules = filter(\n-                    SchemaDescriptor.equalTo( descriptor ),\n-                    ktx.txState().indexDiffSetsByLabel( descriptor.keyId() ).apply( rules ) );\n-        }\n-        return singleOrNull( rules );\n-    }\n-\n-    private boolean checkIndexState( SchemaIndexDescriptor index, ReadableDiffSets<SchemaIndexDescriptor> diffSet )\n-            throws IndexNotFoundKernelException\n-    {\n-        if ( diffSet.isAdded( index ) )\n-        {\n-            return true;\n-        }\n-        if ( diffSet.isRemoved( index ) )\n-        {\n-            throw new IndexNotFoundKernelException( format( \"Index on %s has been dropped in this transaction.\",\n-                    index.userDescription( SchemaUtil.idTokenNameLookup ) ) );\n-        }\n+  private final StorageStatement.Nodes nodes;\n+  private final StorageStatement.Groups groups;\n+  private final StorageStatement.Properties properties;\n+  private final StorageStatement.Relationships relationships;\n+  private final StorageStatement statement;\n+  private final StoreReadLayer storeReadLayer;\n+  private final ExplicitIndexStore explicitIndexStore;\n+  private final Procedures procedures;\n+  private final SchemaState schemaState;\n+\n+  public AllStoreHolder(StorageEngine engine,\n+                        StorageStatement statement,\n+                        KernelTransactionImplementation ktx,\n+                        DefaultCursors cursors,\n+                        ExplicitIndexStore explicitIndexStore,\n+                        Procedures procedures,\n+                        SchemaState schemaState)\n+  {\n+    super(cursors, ktx);\n+    this.storeReadLayer = engine.storeReadLayer();\n+    this.statement = statement; // use provided statement, to assert no leakage\n+    this.nodes = statement.nodes();\n+    this.relationships = statement.relationships();\n+    this.groups = statement.groups();\n+    this.properties = statement.properties();\n+    this.explicitIndexStore = explicitIndexStore;\n+    this.procedures = procedures;\n+    this.schemaState = schemaState;\n+  }\n+\n+  @Override\n+  public boolean nodeExists(long reference)\n+  {\n+    ktx.assertOpen();\n+\n+    if (hasTxStateWithChanges())\n+    {\n+      TransactionState txState = txState();\n+      if (txState.nodeIsDeletedInThisTx(reference))\n+      {\n         return false;\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForSchema( SchemaDescriptor descriptor )\n-    {\n-        sharedOptimisticLock( descriptor.keyType(), descriptor.keyId() );\n-        ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForSchema( descriptor );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            return ktx.txState().constraintsChangesForSchema( descriptor ).apply( constraints );\n-        }\n-        return constraints;\n-    }\n-\n-    @Override\n-    public boolean constraintExists( ConstraintDescriptor descriptor )\n-    {\n-        SchemaDescriptor schema = descriptor.schema();\n-        sharedOptimisticLock( schema.keyType(), schema.keyId() );\n-        ktx.assertOpen();\n-        boolean inStore = storeReadLayer.constraintExists( descriptor );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            ReadableDiffSets<ConstraintDescriptor> diffSet =\n-                    ktx.txState().constraintsChangesForSchema( descriptor.schema() );\n-            return diffSet.isAdded( descriptor ) || (inStore && !diffSet.isRemoved( descriptor ));\n-        }\n-\n-        return inStore;\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForLabel( int labelId )\n-    {\n-        sharedOptimisticLock( ResourceTypes.LABEL, labelId );\n-        ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForLabel( labelId );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            return ktx.txState().constraintsChangesForLabel( labelId ).apply( constraints );\n-        }\n-        return constraints;\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetAll()\n-    {\n-        ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetAll();\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            constraints = ktx.txState().constraintsChanges().apply( constraints );\n-        }\n-        return Iterators.map( this::lockConstraint, constraints );\n-    }\n-\n-    Iterator<ConstraintDescriptor> constraintsGetForProperty( int propertyKey )\n-    {\n-        ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetAll();\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            constraints = ktx.txState().constraintsChanges().apply( constraints );\n-        }\n-        return Iterators.map( this::lockConstraint,\n-                              Iterators.filter( hasProperty( propertyKey ), constraints ) );\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType( int typeId )\n-    {\n-        sharedOptimisticLock( ResourceTypes.RELATIONSHIP_TYPE, typeId );\n-        ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForRelationshipType( typeId );\n-        if ( ktx.hasTxStateWithChanges() )\n-        {\n-            return ktx.txState().constraintsChangesForRelationshipType( typeId ).apply( constraints );\n-        }\n-        return constraints;\n-    }\n-\n-    @Override\n-    PageCursor nodePage( long reference )\n-    {\n-        return nodes.openPageCursorForReading( reference );\n-    }\n-\n-    @Override\n-    PageCursor relationshipPage( long reference )\n-    {\n-        return relationships.openPageCursorForReading( reference );\n-    }\n-\n-    @Override\n-    PageCursor groupPage( long reference )\n-    {\n-        return groups.openPageCursorForReading( reference );\n-    }\n-\n-    @Override\n-    PageCursor propertyPage( long reference )\n-    {\n-        return properties.openPageCursorForReading( reference );\n-    }\n-\n-    @Override\n-    PageCursor stringPage( long reference )\n-    {\n-        return properties.openStringPageCursor( reference );\n-    }\n-\n-    @Override\n-    PageCursor arrayPage( long reference )\n-    {\n-        return properties.openArrayPageCursor( reference );\n-    }\n-\n-    @Override\n-    RecordCursor<DynamicRecord> labelCursor()\n-    {\n-        return nodes.newLabelCursor();\n-    }\n-\n-    @Override\n-    void node( NodeRecord record, long reference, PageCursor pageCursor )\n-    {\n-        nodes.getRecordByCursor( reference, record, RecordLoad.CHECK, pageCursor );\n-    }\n-\n-    @Override\n-    void relationship( RelationshipRecord record, long reference, PageCursor pageCursor )\n-    {\n-        // When scanning, we inspect RelationshipRecord.inUse(), so using RecordLoad.CHECK is fine\n-        relationships.getRecordByCursor( reference, record, RecordLoad.CHECK, pageCursor );\n-    }\n-\n-    @Override\n-    void relationshipFull( RelationshipRecord record, long reference, PageCursor pageCursor )\n-    {\n-        // We need to load forcefully for relationship chain traversal since otherwise we cannot\n-        // traverse over relationship records which have been concurrently deleted\n-        // (flagged as inUse = false).\n-        // see\n-        //      org.neo4j.kernel.impl.store.RelationshipChainPointerChasingTest\n-        //      org.neo4j.kernel.impl.locking.RelationshipCreateDeleteIT\n-        relationships.getRecordByCursor( reference, record, RecordLoad.FORCE, pageCursor );\n-    }\n-\n-    @Override\n-    void property( PropertyRecord record, long reference, PageCursor pageCursor )\n-    {\n-        // We need to load forcefully here since otherwise we can have inconsistent reads\n-        // for properties across blocks, see org.neo4j.graphdb.ConsistentPropertyReadsIT\n-        properties.getRecordByCursor( reference, record, RecordLoad.FORCE, pageCursor );\n-    }\n-\n-    @Override\n-    void group( RelationshipGroupRecord record, long reference, PageCursor page )\n-    {\n-        // We need to load forcefully here since otherwise we cannot traverse over groups\n-        // records which have been concurrently deleted (flagged as inUse = false).\n-        // @see #org.neo4j.kernel.impl.store.RelationshipChainPointerChasingTest\n-        groups.getRecordByCursor( reference, record, RecordLoad.FORCE, page );\n-    }\n-\n-    @Override\n-    long nodeHighMark()\n-    {\n-        return nodes.getHighestPossibleIdInUse();\n-    }\n-\n-    @Override\n-    long relationshipHighMark()\n-    {\n-        return relationships.getHighestPossibleIdInUse();\n-    }\n-\n-    @Override\n-    TextValue string( DefaultPropertyCursor cursor, long reference, PageCursor page )\n-    {\n-        ByteBuffer buffer = cursor.buffer = properties.loadString( reference, cursor.buffer, page );\n-        buffer.flip();\n-        return Values.stringValue( UTF8.decode( buffer.array(), 0, buffer.limit() ) );\n-    }\n-\n-    @Override\n-    ArrayValue array( DefaultPropertyCursor cursor, long reference, PageCursor page )\n-    {\n-        ByteBuffer buffer = cursor.buffer = properties.loadArray( reference, cursor.buffer, page );\n-        buffer.flip();\n-        return PropertyUtil.readArrayFromBuffer( buffer );\n-    }\n-\n-    boolean nodeExistsInStore( long id )\n-    {\n-        return storeReadLayer.nodeExists( id );\n-    }\n-\n-    void getOrCreateNodeIndexConfig( String indexName, Map<String,String> customConfig )\n-    {\n-        explicitIndexStore.getOrCreateNodeIndexConfig( indexName, customConfig );\n-    }\n-\n-    void getOrCreateRelationshipIndexConfig( String indexName, Map<String,String> customConfig )\n-    {\n-        explicitIndexStore.getOrCreateRelationshipIndexConfig( indexName, customConfig );\n-    }\n-\n-    String indexGetFailure( SchemaIndexDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return storeReadLayer.indexGetFailure( descriptor.schema() );\n-    }\n-\n-    @Override\n-    public UserFunctionHandle functionGet( QualifiedName name )\n-    {\n-        ktx.assertOpen();\n-        return procedures.function( name );\n-    }\n-\n-    @Override\n-    public ProcedureHandle procedureGet( QualifiedName name ) throws ProcedureException\n-    {\n-        ktx.assertOpen();\n-        return procedures.procedure( name );\n-    }\n-\n-    @Override\n-    public Set<ProcedureSignature> proceduresGetAll( ) throws ProcedureException\n-    {\n-        ktx.assertOpen();\n-        return procedures.getAllProcedures();\n-    }\n-\n-    @Override\n-    public UserFunctionHandle aggregationFunctionGet( QualifiedName name )\n-    {\n-        ktx.assertOpen();\n-        return procedures.aggregationFunction( name );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallRead( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsReads() )\n-        {\n-            throw accessMode.onViolation( format( \"Read operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n-        }\n-        return callProcedure( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static\n-                .READ ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWrite( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsWrites() )\n+      } else if (txState.nodeIsAddedInThisTx(reference))\n+      {\n+        return true;\n+      }\n+    }\n+    return storeReadLayer.nodeExists(reference);\n+  }\n+\n+  @Override\n+  public long countsForNode(int labelId)\n+  {\n+    long count = countsForNodeWithoutTxState(labelId);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      CountsRecordState counts = new CountsRecordState();\n+      try\n+      {\n+        TransactionState txState = ktx.txState();\n+        txState.accept(new TransactionCountingStateVisitor(EMPTY, storeReadLayer,\n+            statement, txState, counts));\n+        if (counts.hasChanges())\n         {\n-            throw accessMode.onViolation( format( \"Write operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n+          count += counts.nodeCount(labelId, newDoubleLongRegister()).readSecond();\n         }\n-        return callProcedure( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchema( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsSchemaWrites() )\n+      } catch (ConstraintValidationException | CreateConstraintFailureException e)\n+      {\n+        throw new IllegalArgumentException(\"Unexpected error: \" + e.getMessage());\n+      }\n+    }\n+    return count;\n+  }\n+\n+  @Override\n+  public long countsForNodeWithoutTxState(int labelId)\n+  {\n+    return storeReadLayer.countsForNode(labelId);\n+  }\n+\n+  @Override\n+  public long countsForRelationship(int startLabelId, int typeId, int endLabelId)\n+  {\n+    long count = countsForRelationshipWithoutTxState(startLabelId, typeId, endLabelId);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      CountsRecordState counts = new CountsRecordState();\n+      try\n+      {\n+        TransactionState txState = ktx.txState();\n+        txState.accept(new TransactionCountingStateVisitor(EMPTY, storeReadLayer,\n+            statement, txState, counts));\n+        if (counts.hasChanges())\n         {\n-            throw accessMode.onViolation( format( \"Schema operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n+          count += counts.relationshipCount(startLabelId, typeId, endLabelId, newDoubleLongRegister())\n+              .readSecond();\n         }\n-        return callProcedure( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchemaOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallRead( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsReads() )\n-        {\n-            throw accessMode.onViolation( format( \"Read operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n-        }\n-        return callProcedure( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static\n-                .READ ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWrite( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsWrites() )\n+      } catch (ConstraintValidationException | CreateConstraintFailureException e)\n+      {\n+        throw new IllegalArgumentException(\"Unexpected error: \" + e.getMessage());\n+      }\n+    }\n+    return count;\n+  }\n+\n+  @Override\n+  public long countsForRelationshipWithoutTxState(int startLabelId, int typeId, int endLabelId)\n+  {\n+    return storeReadLayer.countsForRelationship(startLabelId, typeId, endLabelId);\n+  }\n+\n+  @Override\n+  public boolean relationshipExists(long reference)\n+  {\n+    ktx.assertOpen();\n+\n+    if (hasTxStateWithChanges())\n+    {\n+      TransactionState txState = txState();\n+      if (txState.relationshipIsDeletedInThisTx(reference))\n+      {\n+        return false;\n+      } else if (txState.relationshipIsAddedInThisTx(reference))\n+      {\n+        return true;\n+      }\n+    }\n+    return storeReadLayer.relationshipExists(reference);\n+  }\n+\n+  @Override\n+  long graphPropertiesReference()\n+  {\n+    return statement.getGraphPropertyReference();\n+  }\n+\n+  @Override\n+  IndexReader indexReader(IndexReference index, boolean fresh) throws IndexNotFoundKernelException\n+  {\n+    SchemaIndexDescriptor schemaIndexDescriptor = index.isUnique() ?\n+        SchemaIndexDescriptorFactory.uniqueForLabel(index.label(), index.properties()) :\n+        SchemaIndexDescriptorFactory.forLabel(index.label(), index.properties());\n+    return fresh ? statement.getFreshIndexReader(schemaIndexDescriptor) :\n+        statement.getIndexReader(schemaIndexDescriptor);\n+  }\n+\n+  @Override\n+  LabelScanReader labelScanReader()\n+  {\n+    return statement.getLabelScanReader();\n+  }\n+\n+  @Override\n+  ExplicitIndex explicitNodeIndex(String indexName) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexTxState().nodeChanges(indexName);\n+  }\n+\n+  @Override\n+  ExplicitIndex explicitRelationshipIndex(String indexName) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexTxState().relationshipChanges(indexName);\n+  }\n+\n+  @Override\n+  public String[] nodeExplicitIndexesGetAll()\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexStore.getAllNodeIndexNames();\n+  }\n+\n+  @Override\n+  public boolean nodeExplicitIndexExists(String indexName, Map<String, String> customConfiguration)\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexTxState().checkIndexExistence(IndexEntityType.Node, indexName, customConfiguration);\n+  }\n+\n+  @Override\n+  public Map<String, String> nodeExplicitIndexGetConfiguration(String indexName)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexStore.getNodeIndexConfiguration(indexName);\n+  }\n+\n+  @Override\n+  public String[] relationshipExplicitIndexesGetAll()\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexStore.getAllRelationshipIndexNames();\n+  }\n+\n+  @Override\n+  public boolean relationshipExplicitIndexExists(String indexName, Map<String, String> customConfiguration)\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexTxState().checkIndexExistence(IndexEntityType.Relationship, indexName, customConfiguration);\n+  }\n+\n+  @Override\n+  public Map<String, String> relationshipExplicitIndexGetConfiguration(String indexName)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return explicitIndexStore.getRelationshipIndexConfiguration(indexName);\n+  }\n+\n+  @Override\n+  public CapableIndexReference index(int label, int... properties)\n+  {\n+    ktx.assertOpen();\n+\n+    LabelSchemaDescriptor descriptor;\n+    try\n+    {\n+      descriptor = SchemaDescriptorFactory.forLabel(label, properties);\n+    } catch (IllegalArgumentException ignore)\n+    {\n+      // This means we have invalid label or property ids.\n+      return CapableIndexReference.NO_INDEX;\n+    }\n+    SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema(descriptor);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      ReadableDiffSets<SchemaIndexDescriptor> diffSets =\n+          ktx.txState().indexDiffSetsByLabel(label);\n+      if (indexDescriptor != null)\n+      {\n+        if (diffSets.isRemoved(indexDescriptor))\n         {\n-            throw accessMode.onViolation( format( \"Write operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n-        }\n-        return callProcedure( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchema( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsSchemaWrites() )\n+          return CapableIndexReference.NO_INDEX;\n+        } else\n         {\n-            throw accessMode.onViolation( format( \"Schema operations are not allowed for %s.\",\n-                    ktx.securityContext().description() ) );\n+          return indexGetCapability(indexDescriptor);\n         }\n-        return callProcedure( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n-    }\n-\n-    @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchemaOverride( QualifiedName name,\n-            Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n-    }\n-\n-    @Override\n-    public AnyValue functionCall( int id, AnyValue[] arguments ) throws ProcedureException\n-    {\n-        if ( !ktx.securityContext().mode().allowsReads() )\n+      } else\n+      {\n+        Iterator<SchemaIndexDescriptor> fromTxState = filter(\n+            SchemaDescriptor.equalTo(descriptor),\n+            diffSets.apply(emptyResourceIterator()));\n+        if (fromTxState.hasNext())\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n-        }\n-        return callFunction( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n-\n-    @Override\n-    public AnyValue functionCall( QualifiedName name, AnyValue[] arguments ) throws ProcedureException\n-    {\n-        if ( !ktx.securityContext().mode().allowsReads() )\n+          return DefaultCapableIndexReference.fromDescriptor(fromTxState.next());\n+        } else\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+          return CapableIndexReference.NO_INDEX;\n         }\n-        return callFunction( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n-\n-    @Override\n-    public AnyValue functionCallOverride( int id, AnyValue[] arguments ) throws ProcedureException\n-    {\n-        return callFunction( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+      }\n     }\n \n-    @Override\n-    public AnyValue functionCallOverride( QualifiedName name, AnyValue[] arguments ) throws ProcedureException\n-    {\n-        return callFunction( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n+    return indexDescriptor != null ? indexGetCapability(indexDescriptor) : CapableIndexReference.NO_INDEX;\n+  }\n \n-    @Override\n-    public UserAggregator aggregationFunction( int id ) throws ProcedureException\n-    {\n-        if ( !ktx.securityContext().mode().allowsReads() )\n+  @Override\n+  public Iterator<IndexReference> indexesGetForLabel(int labelId)\n+  {\n+    sharedOptimisticLock(ResourceTypes.LABEL, labelId);\n+    ktx.assertOpen();\n+\n+    Iterator<SchemaIndexDescriptor> iterator = storeReadLayer.indexesGetForLabel(labelId);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      iterator = ktx.txState().indexDiffSetsByLabel(labelId).apply(iterator);\n+    }\n+    return Iterators.map(DefaultIndexReference::fromDescriptor, iterator);\n+  }\n+\n+  @Override\n+  public Iterator<IndexReference> indexesGetAll()\n+  {\n+    ktx.assertOpen();\n+\n+    Iterator<SchemaIndexDescriptor> iterator = storeReadLayer.indexesGetAll();\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      iterator = ktx.txState().indexChanges().apply(storeReadLayer.indexesGetAll());\n+    }\n+\n+    return Iterators.map(indexDescriptor ->\n+    {\n+      sharedOptimisticLock(ResourceTypes.LABEL, indexDescriptor.schema().keyId());\n+      return fromDescriptor(indexDescriptor);\n+    }, iterator);\n+  }\n+\n+  @Override\n+  public InternalIndexState indexGetState(IndexReference index) throws IndexNotFoundKernelException\n+  {\n+    assertValidIndex(index);\n+    sharedOptimisticLock(ResourceTypes.LABEL, index.label());\n+    ktx.assertOpen();\n+    return indexGetState(indexDescriptor(index));\n+  }\n+\n+  @Override\n+  public PopulationProgress indexGetPopulationProgress(IndexReference index)\n+      throws IndexNotFoundKernelException\n+  {\n+    sharedOptimisticLock(ResourceTypes.LABEL, index.label());\n+    ktx.assertOpen();\n+    SchemaIndexDescriptor descriptor = indexDescriptor(index);\n+\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      if (checkIndexState(descriptor,\n+          ktx.txState().indexDiffSetsByLabel(index.label())))\n+      {\n+        return PopulationProgress.NONE;\n+      }\n+    }\n+\n+    return storeReadLayer.indexGetPopulationProgress(descriptor.schema());\n+  }\n+\n+  @Override\n+  public Long indexGetOwningUniquenessConstraintId(IndexReference index)\n+  {\n+    sharedOptimisticLock(ResourceTypes.LABEL, index.label());\n+    ktx.assertOpen();\n+    return indexGetOwningUniquenessConstraintId(indexDescriptor(index));\n+  }\n+\n+  @Override\n+  public long indexGetCommittedId(IndexReference index) throws SchemaRuleNotFoundException\n+  {\n+    sharedOptimisticLock(ResourceTypes.LABEL, index.label());\n+    ktx.assertOpen();\n+    return storeReadLayer.indexGetCommittedId(indexDescriptor(index));\n+  }\n+\n+  SchemaIndexDescriptor indexDescriptor(IndexReference index)\n+  {\n+    if (index.isUnique())\n+    {\n+      return SchemaIndexDescriptorFactory.uniqueForLabel(index.label(), index.properties());\n+    } else\n+    {\n+      return SchemaIndexDescriptorFactory.forLabel(index.label(), index.properties());\n+    }\n+  }\n+\n+  @Override\n+  public String indexGetFailure(IndexReference index) throws IndexNotFoundKernelException\n+  {\n+    return storeReadLayer.indexGetFailure(SchemaDescriptorFactory.forLabel(index.label(), index.properties()));\n+  }\n+\n+  @Override\n+  public double indexUniqueValuesSelectivity(IndexReference index) throws IndexNotFoundKernelException\n+  {\n+    acquireSharedLabelLock(index.label());\n+    ktx.assertOpen();\n+    return storeReadLayer\n+        .indexUniqueValuesPercentage(SchemaDescriptorFactory.forLabel(index.label(), index.properties()));\n+  }\n+\n+  @Override\n+  public long indexSize(IndexReference index) throws IndexNotFoundKernelException\n+  {\n+    acquireSharedLabelLock(index.label());\n+    ktx.assertOpen();\n+    return storeReadLayer.indexSize(SchemaDescriptorFactory.forLabel(index.label(), index.properties()));\n+  }\n+\n+  @Override\n+  public long nodesCountIndexed(IndexReference index, long nodeId, Value value) throws KernelException\n+  {\n+    ktx.assertOpen();\n+    IndexReader reader = statement.getIndexReader(DefaultIndexReference.toDescriptor(index));\n+    return reader.countIndexedNodes(nodeId, value);\n+  }\n+\n+  @Override\n+  public long nodesGetCount()\n+  {\n+    ktx.assertOpen();\n+    long base = storeReadLayer.nodesGetCount();\n+    return ktx.hasTxStateWithChanges() ? base + ktx.txState().addedAndRemovedNodes().delta() : base;\n+  }\n+\n+  @Override\n+  public long relationshipsGetCount()\n+  {\n+    ktx.assertOpen();\n+    long base = storeReadLayer.relationshipsGetCount();\n+    return ktx.hasTxStateWithChanges() ? base + ktx.txState().addedAndRemovedRelationships().delta() : base;\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister indexUpdatesAndSize(IndexReference index, Register.DoubleLongRegister target)\n+      throws IndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return storeReadLayer.indexUpdatesAndSize(\n+        SchemaDescriptorFactory.forLabel(index.label(), index.properties()), target);\n+\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister indexSample(IndexReference index, Register.DoubleLongRegister target)\n+      throws IndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    return storeReadLayer.indexSample(\n+        SchemaDescriptorFactory.forLabel(index.label(), index.properties()), target);\n+  }\n+\n+  CapableIndexReference indexGetCapability(SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    try\n+    {\n+      return storeReadLayer.indexReference(schemaIndexDescriptor);\n+    } catch (IndexNotFoundKernelException e)\n+    {\n+      throw new IllegalStateException(\"Could not find capability for index \" + schemaIndexDescriptor, e);\n+    }\n+  }\n+\n+  InternalIndexState indexGetState(SchemaIndexDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    // If index is in our state, then return populating\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      if (checkIndexState(descriptor,\n+          ktx.txState().indexDiffSetsByLabel(descriptor.schema().keyId())))\n+      {\n+        return InternalIndexState.POPULATING;\n+      }\n+    }\n+\n+    return storeReadLayer.indexGetState(descriptor);\n+  }\n+\n+  Long indexGetOwningUniquenessConstraintId(SchemaIndexDescriptor index)\n+  {\n+    return storeReadLayer.indexGetOwningUniquenessConstraintId(index);\n+  }\n+\n+  SchemaIndexDescriptor indexGetForSchema(SchemaDescriptor descriptor)\n+  {\n+    SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema(descriptor);\n+    Iterator<SchemaIndexDescriptor> rules = iterator(indexDescriptor);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      rules = filter(\n+          SchemaDescriptor.equalTo(descriptor),\n+          ktx.txState().indexDiffSetsByLabel(descriptor.keyId()).apply(rules));\n+    }\n+    return singleOrNull(rules);\n+  }\n+\n+  private boolean checkIndexState(SchemaIndexDescriptor index, ReadableDiffSets<SchemaIndexDescriptor> diffSet)\n+      throws IndexNotFoundKernelException\n+  {\n+    if (diffSet.isAdded(index))\n+    {\n+      return true;\n+    }\n+    if (diffSet.isRemoved(index))\n+    {\n+      throw new IndexNotFoundKernelException(format(\"Index on %s has been dropped in this transaction.\",\n+          index.userDescription(SchemaUtil.idTokenNameLookup)));\n+    }\n+    return false;\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForSchema(SchemaDescriptor descriptor)\n+  {\n+    sharedOptimisticLock(descriptor.keyType(), descriptor.keyId());\n+    ktx.assertOpen();\n+    Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForSchema(descriptor);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      return ktx.txState().constraintsChangesForSchema(descriptor).apply(constraints);\n+    }\n+    return constraints;\n+  }\n+\n+  @Override\n+  public boolean constraintExists(ConstraintDescriptor descriptor)\n+  {\n+    SchemaDescriptor schema = descriptor.schema();\n+    sharedOptimisticLock(schema.keyType(), schema.keyId());\n+    ktx.assertOpen();\n+    boolean inStore = storeReadLayer.constraintExists(descriptor);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      ReadableDiffSets<ConstraintDescriptor> diffSet =\n+          ktx.txState().constraintsChangesForSchema(descriptor.schema());\n+      return diffSet.isAdded(descriptor) || (inStore && !diffSet.isRemoved(descriptor));\n+    }\n+\n+    return inStore;\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForLabel(int labelId)\n+  {\n+    sharedOptimisticLock(ResourceTypes.LABEL, labelId);\n+    ktx.assertOpen();\n+    Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForLabel(labelId);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      return ktx.txState().constraintsChangesForLabel(labelId).apply(constraints);\n+    }\n+    return constraints;\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetAll()\n+  {\n+    ktx.assertOpen();\n+    Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetAll();\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      constraints = ktx.txState().constraintsChanges().apply(constraints);\n+    }\n+    return Iterators.map(this::lockConstraint, constraints);\n+  }\n+\n+  Iterator<ConstraintDescriptor> constraintsGetForProperty(int propertyKey)\n+  {\n+    ktx.assertOpen();\n+    Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetAll();\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      constraints = ktx.txState().constraintsChanges().apply(constraints);\n+    }\n+    return Iterators.map(this::lockConstraint,\n+        Iterators.filter(hasProperty(propertyKey), constraints));\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType(int typeId)\n+  {\n+    sharedOptimisticLock(ResourceTypes.RELATIONSHIP_TYPE, typeId);\n+    ktx.assertOpen();\n+    Iterator<ConstraintDescriptor> constraints = storeReadLayer.constraintsGetForRelationshipType(typeId);\n+    if (ktx.hasTxStateWithChanges())\n+    {\n+      return ktx.txState().constraintsChangesForRelationshipType(typeId).apply(constraints);\n+    }\n+    return constraints;\n+  }\n+\n+  @Override\n+  PageCursor nodePage(long reference)\n+  {\n+    return nodes.openPageCursorForReading(reference);\n+  }\n+\n+  @Override\n+  PageCursor relationshipPage(long reference)\n+  {\n+    return relationships.openPageCursorForReading(reference);\n+  }\n+\n+  @Override\n+  PageCursor groupPage(long reference)\n+  {\n+    return groups.openPageCursorForReading(reference);\n+  }\n+\n+  @Override\n+  PageCursor propertyPage(long reference)\n+  {\n+    return properties.openPageCursorForReading(reference);\n+  }\n+\n+  @Override\n+  PageCursor stringPage(long reference)\n+  {\n+    return properties.openStringPageCursor(reference);\n+  }\n+\n+  @Override\n+  PageCursor arrayPage(long reference)\n+  {\n+    return properties.openArrayPageCursor(reference);\n+  }\n+\n+  @Override\n+  RecordCursor<DynamicRecord> labelCursor()\n+  {\n+    return nodes.newLabelCursor();\n+  }\n+\n+  @Override\n+  void node(NodeRecord record, long reference, PageCursor pageCursor)\n+  {\n+    nodes.getRecordByCursor(reference, record, RecordLoad.CHECK, pageCursor);\n+  }\n+\n+  @Override\n+  void relationship(RelationshipRecord record, long reference, PageCursor pageCursor)\n+  {\n+    // When scanning, we inspect RelationshipRecord.inUse(), so using RecordLoad.CHECK is fine\n+    relationships.getRecordByCursor(reference, record, RecordLoad.CHECK, pageCursor);\n+  }\n+\n+  @Override\n+  void relationshipFull(RelationshipRecord record, long reference, PageCursor pageCursor)\n+  {\n+    // We need to load forcefully for relationship chain traversal since otherwise we cannot\n+    // traverse over relationship records which have been concurrently deleted\n+    // (flagged as inUse = false).\n+    // see\n+    //      org.neo4j.kernel.impl.store.RelationshipChainPointerChasingTest\n+    //      org.neo4j.kernel.impl.locking.RelationshipCreateDeleteIT\n+    relationships.getRecordByCursor(reference, record, RecordLoad.FORCE, pageCursor);\n+  }\n+\n+  @Override\n+  void property(PropertyRecord record, long reference, PageCursor pageCursor)\n+  {\n+    // We need to load forcefully here since otherwise we can have inconsistent reads\n+    // for properties across blocks, see org.neo4j.graphdb.ConsistentPropertyReadsIT\n+    properties.getRecordByCursor(reference, record, RecordLoad.FORCE, pageCursor);\n+  }\n+\n+  @Override\n+  void group(RelationshipGroupRecord record, long reference, PageCursor page)\n+  {\n+    // We need to load forcefully here since otherwise we cannot traverse over groups\n+    // records which have been concurrently deleted (flagged as inUse = false).\n+    // @see #org.neo4j.kernel.impl.store.RelationshipChainPointerChasingTest\n+    groups.getRecordByCursor(reference, record, RecordLoad.FORCE, page);\n+  }\n+\n+  @Override\n+  long nodeHighMark()\n+  {\n+    return nodes.getHighestPossibleIdInUse();\n+  }\n+\n+  @Override\n+  long relationshipHighMark()\n+  {\n+    return relationships.getHighestPossibleIdInUse();\n+  }\n+\n+  @Override\n+  TextValue string(DefaultPropertyCursor cursor, long reference, PageCursor page)\n+  {\n+    ByteBuffer buffer = cursor.buffer = properties.loadString(reference, cursor.buffer, page);\n+    buffer.flip();\n+    return Values.stringValue(UTF8.decode(buffer.array(), 0, buffer.limit()));\n+  }\n+\n+  @Override\n+  ArrayValue array(DefaultPropertyCursor cursor, long reference, PageCursor page)\n+  {\n+    ByteBuffer buffer = cursor.buffer = properties.loadArray(reference, cursor.buffer, page);\n+    buffer.flip();\n+    return PropertyUtil.readArrayFromBuffer(buffer);\n+  }\n+\n+  boolean nodeExistsInStore(long id)\n+  {\n+    return storeReadLayer.nodeExists(id);\n+  }\n+\n+  void getOrCreateNodeIndexConfig(String indexName, Map<String, String> customConfig)\n+  {\n+    explicitIndexStore.getOrCreateNodeIndexConfig(indexName, customConfig);\n+  }\n+\n+  void getOrCreateRelationshipIndexConfig(String indexName, Map<String, String> customConfig)\n+  {\n+    explicitIndexStore.getOrCreateRelationshipIndexConfig(indexName, customConfig);\n+  }\n+\n+  String indexGetFailure(SchemaIndexDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return storeReadLayer.indexGetFailure(descriptor.schema());\n+  }\n+\n+  @Override\n+  public UserFunctionHandle functionGet(QualifiedName name)\n+  {\n+    ktx.assertOpen();\n+    return procedures.function(name);\n+  }\n+\n+  @Override\n+  public ProcedureHandle procedureGet(QualifiedName name) throws ProcedureException\n+  {\n+    ktx.assertOpen();\n+    return procedures.procedure(name);\n+  }\n+\n+  @Override\n+  public Set<ProcedureSignature> proceduresGetAll() throws ProcedureException\n+  {\n+    ktx.assertOpen();\n+    return procedures.getAllProcedures();\n+  }\n+\n+  @Override\n+  public UserFunctionHandle aggregationFunctionGet(QualifiedName name)\n+  {\n+    ktx.assertOpen();\n+    return procedures.aggregationFunction(name);\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallRead(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsReads())\n+    {\n+      throw accessMode.onViolation(format(\"Read operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(id, arguments, new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static\n+        .READ));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallReadOverride(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(id, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallWrite(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsWrites())\n+    {\n+      throw accessMode.onViolation(format(\"Write operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(id, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallWriteOverride(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(id, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE));\n+\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallSchema(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsSchemaWrites())\n+    {\n+      throw accessMode.onViolation(format(\"Schema operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(id, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.FULL));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallSchemaOverride(int id, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(id, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.FULL));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallRead(QualifiedName name, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsReads())\n+    {\n+      throw accessMode.onViolation(format(\"Read operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(name, arguments, new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static\n+        .READ));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallReadOverride(QualifiedName name, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(name, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallWrite(QualifiedName name, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsWrites())\n+    {\n+      throw accessMode.onViolation(format(\"Write operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(name, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallWriteOverride(QualifiedName name, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(name, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE));\n+\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallSchema(QualifiedName name, Object[] arguments)\n+      throws ProcedureException\n+  {\n+    AccessMode accessMode = ktx.securityContext().mode();\n+    if (!accessMode.allowsSchemaWrites())\n+    {\n+      throw accessMode.onViolation(format(\"Schema operations are not allowed for %s.\",\n+          ktx.securityContext().description()));\n+    }\n+    return callProcedure(name, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.FULL));\n+  }\n+\n+  @Override\n+  public RawIterator<Object[], ProcedureException> procedureCallSchemaOverride(QualifiedName name,\n+                                                                               Object[] arguments)\n+      throws ProcedureException\n+  {\n+    return callProcedure(name, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.FULL));\n+  }\n+\n+  @Override\n+  public AnyValue functionCall(int id, AnyValue[] arguments) throws ProcedureException\n+  {\n+    if (!ktx.securityContext().mode().allowsReads())\n+    {\n+      throw ktx.securityContext().mode().onViolation(\n+          format(\"Read operations are not allowed for %s.\", ktx.securityContext().description()));\n+    }\n+    return callFunction(id, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public AnyValue functionCall(QualifiedName name, AnyValue[] arguments) throws ProcedureException\n+  {\n+    if (!ktx.securityContext().mode().allowsReads())\n+    {\n+      throw ktx.securityContext().mode().onViolation(\n+          format(\"Read operations are not allowed for %s.\", ktx.securityContext().description()));\n+    }\n+    return callFunction(name, arguments,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public AnyValue functionCallOverride(int id, AnyValue[] arguments) throws ProcedureException\n+  {\n+    return callFunction(id, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public AnyValue functionCallOverride(QualifiedName name, AnyValue[] arguments) throws ProcedureException\n+  {\n+    return callFunction(name, arguments,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public UserAggregator aggregationFunction(int id) throws ProcedureException\n+  {\n+    if (!ktx.securityContext().mode().allowsReads())\n+    {\n+      throw ktx.securityContext().mode().onViolation(\n+          format(\"Read operations are not allowed for %s.\", ktx.securityContext().description()));\n+    }\n+    return aggregationFunction(id,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public UserAggregator aggregationFunction(QualifiedName name) throws ProcedureException\n+  {\n+    if (!ktx.securityContext().mode().allowsReads())\n+    {\n+      throw ktx.securityContext().mode().onViolation(\n+          format(\"Read operations are not allowed for %s.\", ktx.securityContext().description()));\n+    }\n+    return aggregationFunction(name,\n+        new RestrictedAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public UserAggregator aggregationFunctionOverride(int id) throws ProcedureException\n+  {\n+    return aggregationFunction(id,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public UserAggregator aggregationFunctionOverride(QualifiedName name) throws ProcedureException\n+  {\n+    return aggregationFunction(name,\n+        new OverriddenAccessMode(ktx.securityContext().mode(), AccessMode.Static.READ));\n+  }\n+\n+  @Override\n+  public ValueMapper<Object> valueMapper()\n+  {\n+    return procedures.valueMapper();\n+  }\n+\n+  @Override\n+  public <K, V> V schemaStateGetOrCreate(K key, Function<K, V> creator)\n+  {\n+    return schemaState.getOrCreate(key, creator);\n+  }\n+\n+  @Override\n+  public <K, V> V schemaStateGet(K key)\n+  {\n+    return schemaState.get(key);\n+  }\n+\n+  @Override\n+  public void schemaStateFlush()\n+  {\n+    schemaState.clear();\n+  }\n+\n+  ExplicitIndexStore explicitIndexStore()\n+  {\n+    return explicitIndexStore;\n+  }\n+\n+  private RawIterator<Object[], ProcedureException> callProcedure(\n+      int id, Object[] input, final AccessMode override)\n+      throws ProcedureException\n+  {\n+    ktx.assertOpen();\n+\n+    final SecurityContext procedureSecurityContext = ktx.securityContext().withMode(override);\n+    final RawIterator<Object[], ProcedureException> procedureCall;\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(procedureSecurityContext);\n+         Statement statement = ktx.acquireStatement())\n+    {\n+      procedureCall = procedures\n+          .callProcedure(populateProcedureContext(procedureSecurityContext), id, input, statement);\n+    }\n+    return createIterator(procedureSecurityContext, procedureCall);\n+  }\n+\n+  private RawIterator<Object[], ProcedureException> callProcedure(\n+      QualifiedName name, Object[] input, final AccessMode override)\n+      throws ProcedureException\n+  {\n+    ktx.assertOpen();\n+\n+    final SecurityContext procedureSecurityContext = ktx.securityContext().withMode(override);\n+    final RawIterator<Object[], ProcedureException> procedureCall;\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(procedureSecurityContext);\n+         Statement statement = ktx.acquireStatement())\n+    {\n+      procedureCall = procedures\n+          .callProcedure(populateProcedureContext(procedureSecurityContext), name, input, statement);\n+    }\n+    return createIterator(procedureSecurityContext, procedureCall);\n+  }\n+\n+  private RawIterator<Object[], ProcedureException> createIterator(SecurityContext procedureSecurityContext,\n+                                                                   RawIterator<Object[], ProcedureException> procedureCall)\n+  {\n+    return new RawIterator<Object[], ProcedureException>()\n+    {\n+      @Override\n+      public boolean hasNext() throws ProcedureException\n+      {\n+        try (KernelTransaction.Revertable ignore = ktx.overrideWith(procedureSecurityContext))\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+          return procedureCall.hasNext();\n         }\n-        return aggregationFunction( id,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n+      }\n \n-    @Override\n-    public UserAggregator aggregationFunction( QualifiedName name ) throws ProcedureException\n-    {\n-        if ( !ktx.securityContext().mode().allowsReads() )\n+      @Override\n+      public Object[] next() throws ProcedureException\n+      {\n+        try (KernelTransaction.Revertable ignore = ktx.overrideWith(procedureSecurityContext))\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+          return procedureCall.next();\n         }\n-        return aggregationFunction( name,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n+      }\n+    };\n+  }\n \n-    @Override\n-    public UserAggregator aggregationFunctionOverride( int id ) throws ProcedureException\n-    {\n-        return aggregationFunction( id,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n-    }\n+  private AnyValue callFunction(int id, AnyValue[] input, final AccessMode mode) throws ProcedureException\n+  {\n+    ktx.assertOpen();\n \n-    @Override\n-    public UserAggregator aggregationFunctionOverride( QualifiedName name ) throws ProcedureException\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(ktx.securityContext().withMode(mode)))\n     {\n-        return aggregationFunction( name,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+      return procedures.callFunction(populateFunctionContext(), id, input);\n     }\n+  }\n \n-    @Override\n-    public ValueMapper<Object> valueMapper()\n-    {\n-        return procedures.valueMapper();\n-    }\n+  private AnyValue callFunction(QualifiedName name, AnyValue[] input, final AccessMode mode)\n+      throws ProcedureException\n+  {\n+    ktx.assertOpen();\n \n-    @Override\n-    public <K, V> V schemaStateGetOrCreate( K key, Function<K,V> creator )\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(ktx.securityContext().withMode(mode)))\n     {\n-        return schemaState.getOrCreate( key, creator );\n+      return procedures.callFunction(populateFunctionContext(), name, input);\n     }\n+  }\n \n-    @Override\n-    public <K, V> V schemaStateGet( K key )\n-    {\n-        return schemaState.get( key );\n-    }\n+  private UserAggregator aggregationFunction(int id, final AccessMode mode)\n+      throws ProcedureException\n+  {\n+    ktx.assertOpen();\n \n-    @Override\n-    public void schemaStateFlush()\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(ktx.securityContext().withMode(mode)))\n     {\n-        schemaState.clear();\n+      return procedures.createAggregationFunction(populateAggregationContext(), id);\n     }\n+  }\n \n-    ExplicitIndexStore explicitIndexStore()\n-    {\n-        return explicitIndexStore;\n-    }\n+  private UserAggregator aggregationFunction(QualifiedName name, final AccessMode mode)\n+      throws ProcedureException\n+  {\n+    ktx.assertOpen();\n \n-    private RawIterator<Object[],ProcedureException> callProcedure(\n-            int id, Object[] input, final AccessMode override )\n-            throws ProcedureException\n+    try (KernelTransaction.Revertable ignore = ktx.overrideWith(ktx.securityContext().withMode(mode)))\n     {\n-        ktx.assertOpen();\n-\n-        final SecurityContext procedureSecurityContext = ktx.securityContext().withMode( override );\n-        final RawIterator<Object[],ProcedureException> procedureCall;\n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext );\n-              Statement statement = ktx.acquireStatement() )\n-        {\n-            procedureCall = procedures\n-                    .callProcedure( populateProcedureContext( procedureSecurityContext ), id, input, statement );\n-        }\n-        return createIterator( procedureSecurityContext, procedureCall );\n-    }\n-\n-    private RawIterator<Object[],ProcedureException> callProcedure(\n-            QualifiedName name, Object[] input, final AccessMode override )\n-            throws ProcedureException\n-    {\n-        ktx.assertOpen();\n-\n-        final SecurityContext procedureSecurityContext = ktx.securityContext().withMode( override );\n-        final RawIterator<Object[],ProcedureException> procedureCall;\n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext );\n-              Statement statement = ktx.acquireStatement() )\n-        {\n-            procedureCall = procedures\n-                    .callProcedure( populateProcedureContext( procedureSecurityContext ), name, input, statement );\n-        }\n-        return createIterator( procedureSecurityContext, procedureCall );\n+      return procedures.createAggregationFunction(populateAggregationContext(), name);\n     }\n+  }\n \n-    private RawIterator<Object[],ProcedureException> createIterator( SecurityContext procedureSecurityContext,\n-            RawIterator<Object[],ProcedureException> procedureCall )\n-    {\n-        return new RawIterator<Object[],ProcedureException>()\n-        {\n-            @Override\n-            public boolean hasNext() throws ProcedureException\n-            {\n-                try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext ) )\n-                {\n-                    return procedureCall.hasNext();\n-                }\n-            }\n-\n-            @Override\n-            public Object[] next() throws ProcedureException\n-            {\n-                try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext ) )\n-                {\n-                    return procedureCall.next();\n-                }\n-            }\n-        };\n-    }\n+  private BasicContext populateFunctionContext()\n+  {\n+    BasicContext ctx = new BasicContext();\n+    ctx.put(Context.KERNEL_TRANSACTION, ktx);\n+    ctx.put(Context.THREAD, Thread.currentThread());\n+    ClockContext clocks = ktx.clocks();\n+    ctx.put(Context.SYSTEM_CLOCK, clocks.systemClock());\n+    ctx.put(Context.STATEMENT_CLOCK, clocks.statementClock());\n+    ctx.put(Context.TRANSACTION_CLOCK, clocks.transactionClock());\n+    return ctx;\n+  }\n \n-    private AnyValue callFunction( int id, AnyValue[] input, final AccessMode mode ) throws ProcedureException\n-    {\n-        ktx.assertOpen();\n+  private BasicContext populateAggregationContext()\n+  {\n+    BasicContext ctx = new BasicContext();\n+    ctx.put(Context.KERNEL_TRANSACTION, ktx);\n+    ctx.put(Context.THREAD, Thread.currentThread());\n+    return ctx;\n+  }\n \n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n-        {\n-            return procedures.callFunction( populateFunctionContext(), id, input );\n-        }\n-    }\n+  private BasicContext populateProcedureContext(SecurityContext procedureSecurityContext)\n+  {\n+    BasicContext ctx = new BasicContext();\n+    ctx.put(Context.KERNEL_TRANSACTION, ktx);\n+    ctx.put(Context.THREAD, Thread.currentThread());\n+    ctx.put(Context.SECURITY_CONTEXT, procedureSecurityContext);\n+    return ctx;\n+  }\n \n-    private AnyValue callFunction( QualifiedName name, AnyValue[] input, final AccessMode mode )\n-            throws ProcedureException\n+  private void assertValidIndex(IndexReference index) throws IndexNotFoundKernelException\n+  {\n+    if (index == CapableIndexReference.NO_INDEX)\n     {\n-        ktx.assertOpen();\n-\n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n-        {\n-            return procedures.callFunction( populateFunctionContext(), name, input );\n-        }\n+      throw new IndexNotFoundKernelException(\"No index was found\");\n     }\n+  }\n \n-    private UserAggregator aggregationFunction( int id, final AccessMode mode )\n-            throws ProcedureException\n-    {\n-        ktx.assertOpen();\n-\n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n-        {\n-            return procedures.createAggregationFunction( populateAggregationContext(), id );\n-        }\n-    }\n-\n-    private UserAggregator aggregationFunction( QualifiedName name, final AccessMode mode )\n-            throws ProcedureException\n-    {\n-        ktx.assertOpen();\n-\n-        try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n-        {\n-            return procedures.createAggregationFunction( populateAggregationContext(), name );\n-        }\n-    }\n-\n-    private BasicContext populateFunctionContext()\n-    {\n-        BasicContext ctx = new BasicContext();\n-        ctx.put( Context.KERNEL_TRANSACTION, ktx );\n-        ctx.put( Context.THREAD, Thread.currentThread() );\n-        ClockContext clocks = ktx.clocks();\n-        ctx.put( Context.SYSTEM_CLOCK, clocks.systemClock() );\n-        ctx.put( Context.STATEMENT_CLOCK, clocks.statementClock() );\n-        ctx.put( Context.TRANSACTION_CLOCK, clocks.transactionClock() );\n-        return ctx;\n-    }\n-\n-    private BasicContext populateAggregationContext()\n-    {\n-        BasicContext ctx = new BasicContext();\n-        ctx.put( Context.KERNEL_TRANSACTION, ktx );\n-        ctx.put( Context.THREAD, Thread.currentThread() );\n-        return ctx;\n-    }\n-\n-    private BasicContext populateProcedureContext( SecurityContext procedureSecurityContext )\n-    {\n-        BasicContext ctx = new BasicContext();\n-        ctx.put( Context.KERNEL_TRANSACTION, ktx );\n-        ctx.put( Context.THREAD, Thread.currentThread() );\n-        ctx.put( Context.SECURITY_CONTEXT, procedureSecurityContext );\n-        return ctx;\n-    }\n-\n-    private void assertValidIndex( IndexReference index ) throws IndexNotFoundKernelException\n-    {\n-        if ( index == CapableIndexReference.NO_INDEX )\n-        {\n-            throw new IndexNotFoundKernelException( \"No index was found\" );\n-        }\n-    }\n-\n-    private ConstraintDescriptor lockConstraint( ConstraintDescriptor constraint )\n-    {\n-        SchemaDescriptor schema = constraint.schema();\n-        ktx.statementLocks().pessimistic().acquireShared( ktx.lockTracer(), schema.keyType(), schema.keyId() );\n-        return constraint;\n-    }\n+  private ConstraintDescriptor lockConstraint(ConstraintDescriptor constraint)\n+  {\n+    SchemaDescriptor schema = constraint.schema();\n+    ktx.statementLocks().pessimistic().acquireShared(ktx.lockTracer(), schema.keyType(), schema.keyId());\n+    return constraint;\n+  }\n }\n",
            "diff_size": 1910
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1055",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1161/AllStoreHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1161/AllStoreHolder.java\nindex a16ffd79590..c1072905cf9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1161/AllStoreHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1161/AllStoreHolder.java\n@@ -141,8 +141,7 @@ public class AllStoreHolder extends Read\n     public boolean nodeExists( long reference )\n     {\n         ktx.assertOpen();\n-\n-        if ( hasTxStateWithChanges() )\n+if ( hasTxStateWithChanges() )\n         {\n             TransactionState txState = txState();\n             if ( txState.nodeIsDeletedInThisTx( reference ) )\n@@ -169,7 +168,7 @@ public class AllStoreHolder extends Read\n                 TransactionState txState = ktx.txState();\n                 txState.accept( new TransactionCountingStateVisitor( EMPTY, storeReadLayer,\n                         statement, txState, counts ) );\n-                if ( counts.hasChanges() )\n+if ( counts.hasChanges() )\n                 {\n                     count += counts.nodeCount( labelId, newDoubleLongRegister() ).readSecond();\n                 }\n@@ -200,11 +199,10 @@ public class AllStoreHolder extends Read\n                 TransactionState txState = ktx.txState();\n                 txState.accept( new TransactionCountingStateVisitor( EMPTY, storeReadLayer,\n                         statement, txState, counts ) );\n-                if ( counts.hasChanges() )\n+if ( counts.hasChanges() )\n                 {\n-                    count += counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() )\n-                            .readSecond();\n-                }\n+                    count += counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() ).readSecond();\n+    }\n             }\n             catch ( ConstraintValidationException | CreateConstraintFailureException e )\n             {\n@@ -224,8 +222,7 @@ public class AllStoreHolder extends Read\n     public boolean relationshipExists( long reference )\n     {\n         ktx.assertOpen();\n-\n-        if ( hasTxStateWithChanges() )\n+if ( hasTxStateWithChanges() )\n         {\n             TransactionState txState = txState();\n             if ( txState.relationshipIsDeletedInThisTx( reference ) )\n@@ -249,11 +246,8 @@ public class AllStoreHolder extends Read\n     @Override\n     IndexReader indexReader( IndexReference index, boolean fresh ) throws IndexNotFoundKernelException\n     {\n-        SchemaIndexDescriptor schemaIndexDescriptor = index.isUnique() ?\n-                                                      SchemaIndexDescriptorFactory.uniqueForLabel( index.label(), index.properties() ) :\n-                                                      SchemaIndexDescriptorFactory.forLabel( index.label(), index.properties() );\n-        return fresh ? statement.getFreshIndexReader( schemaIndexDescriptor ) :\n-               statement.getIndexReader( schemaIndexDescriptor );\n+        SchemaIndexDescriptor schemaIndexDescriptor = index.isUnique() ? SchemaIndexDescriptorFactory.uniqueForLabel( index.label(), index.properties() ) : SchemaIndexDescriptorFactory.forLabel( index.label(), index.properties() );\n+return fresh ? statement.getFreshIndexReader( schemaIndexDescriptor ) : statement.getIndexReader( schemaIndexDescriptor );\n     }\n \n     @Override\n@@ -287,13 +281,12 @@ public class AllStoreHolder extends Read\n     public boolean nodeExplicitIndexExists( String indexName, Map<String,String> customConfiguration )\n     {\n         ktx.assertOpen();\n-        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Node, indexName, customConfiguration  );\n+        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Node, indexName, customConfiguration );\n     }\n \n     @Override\n-    public Map<String,String> nodeExplicitIndexGetConfiguration( String indexName )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    public Map<String,String> nodeExplicitIndexGetConfiguration( String indexName ) throws ExplicitIndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n         return explicitIndexStore.getNodeIndexConfiguration( indexName );\n     }\n@@ -309,13 +302,12 @@ public class AllStoreHolder extends Read\n     public boolean relationshipExplicitIndexExists( String indexName, Map<String,String> customConfiguration )\n     {\n         ktx.assertOpen();\n-        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Relationship, indexName, customConfiguration  );\n+        return explicitIndexTxState().checkIndexExistence( IndexEntityType.Relationship, indexName, customConfiguration );\n     }\n \n     @Override\n-    public Map<String,String> relationshipExplicitIndexGetConfiguration( String indexName )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    public Map<String,String> relationshipExplicitIndexGetConfiguration( String indexName ) throws ExplicitIndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n         return explicitIndexStore.getRelationshipIndexConfiguration( indexName );\n     }\n@@ -335,12 +327,12 @@ public class AllStoreHolder extends Read\n             // This means we have invalid label or property ids.\n             return CapableIndexReference.NO_INDEX;\n         }\n-        SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema( descriptor );\n+\n+SchemaIndexDescriptor indexDescriptor = storeReadLayer.indexGetForSchema( descriptor );\n         if ( ktx.hasTxStateWithChanges() )\n         {\n-            ReadableDiffSets<SchemaIndexDescriptor> diffSets =\n-                    ktx.txState().indexDiffSetsByLabel( label );\n-            if ( indexDescriptor != null )\n+            ReadableDiffSets<SchemaIndexDescriptor> diffSets = ktx.txState().indexDiffSetsByLabel( label );\n+if ( indexDescriptor != null )\n             {\n                 if ( diffSets.isRemoved( indexDescriptor ) )\n                 {\n@@ -353,10 +345,8 @@ public class AllStoreHolder extends Read\n             }\n             else\n             {\n-                Iterator<SchemaIndexDescriptor> fromTxState = filter(\n-                        SchemaDescriptor.equalTo( descriptor ),\n-                        diffSets.apply( emptyResourceIterator() ) );\n-                if ( fromTxState.hasNext() )\n+                Iterator<SchemaIndexDescriptor> fromTxState = filter( SchemaDescriptor.equalTo( descriptor ), diffSets.apply( emptyResourceIterator() ) );\n+if ( fromTxState.hasNext() )\n                 {\n                     return DefaultCapableIndexReference.fromDescriptor( fromTxState.next() );\n                 }\n@@ -381,7 +371,8 @@ public class AllStoreHolder extends Read\n         {\n             iterator = ktx.txState().indexDiffSetsByLabel( labelId ).apply( iterator );\n         }\n-        return Iterators.map( DefaultIndexReference::fromDescriptor, iterator );\n+\n+return Iterators.map( DefaultIndexReference::fromDescriptor, iterator );\n     }\n \n     @Override\n@@ -412,14 +403,12 @@ public class AllStoreHolder extends Read\n     }\n \n     @Override\n-    public PopulationProgress indexGetPopulationProgress( IndexReference index )\n-            throws IndexNotFoundKernelException\n-    {\n+    public PopulationProgress indexGetPopulationProgress( IndexReference index ) throws IndexNotFoundKernelException\n+{\n         sharedOptimisticLock( ResourceTypes.LABEL, index.label() );\n         ktx.assertOpen();\n         SchemaIndexDescriptor descriptor = indexDescriptor( index );\n-\n-        if ( ktx.hasTxStateWithChanges() )\n+if ( ktx.hasTxStateWithChanges() )\n         {\n             if ( checkIndexState( descriptor,\n                     ktx.txState().indexDiffSetsByLabel( index.label() ) ) )\n@@ -470,8 +459,7 @@ public class AllStoreHolder extends Read\n     {\n         acquireSharedLabelLock( index.label() );\n         ktx.assertOpen();\n-        return storeReadLayer\n-                .indexUniqueValuesPercentage( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n+        return storeReadLayer.indexUniqueValuesPercentage( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ) );\n     }\n \n     @Override\n@@ -507,22 +495,17 @@ public class AllStoreHolder extends Read\n     }\n \n     @Override\n-    public Register.DoubleLongRegister indexUpdatesAndSize( IndexReference index, Register.DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n+    public Register.DoubleLongRegister indexUpdatesAndSize( IndexReference index, Register.DoubleLongRegister target ) throws IndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n-        return storeReadLayer.indexUpdatesAndSize(\n-                SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n-\n+        return storeReadLayer.indexUpdatesAndSize( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n     }\n \n     @Override\n-    public Register.DoubleLongRegister indexSample( IndexReference index, Register.DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n+    public Register.DoubleLongRegister indexSample( IndexReference index, Register.DoubleLongRegister target ) throws IndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n-        return storeReadLayer.indexSample(\n-                SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n+        return storeReadLayer.indexSample( SchemaDescriptorFactory.forLabel( index.label(), index.properties() ), target );\n     }\n \n     CapableIndexReference indexGetCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n@@ -563,21 +546,20 @@ public class AllStoreHolder extends Read\n         Iterator<SchemaIndexDescriptor> rules = iterator( indexDescriptor );\n         if ( ktx.hasTxStateWithChanges() )\n         {\n-            rules = filter(\n-                    SchemaDescriptor.equalTo( descriptor ),\n-                    ktx.txState().indexDiffSetsByLabel( descriptor.keyId() ).apply( rules ) );\n+            rules = filter( SchemaDescriptor.equalTo( descriptor ), ktx.txState().indexDiffSetsByLabel( descriptor.keyId() ).apply( rules ) );\n         }\n-        return singleOrNull( rules );\n+\n+return singleOrNull( rules );\n     }\n \n-    private boolean checkIndexState( SchemaIndexDescriptor index, ReadableDiffSets<SchemaIndexDescriptor> diffSet )\n-            throws IndexNotFoundKernelException\n-    {\n+    private boolean checkIndexState( SchemaIndexDescriptor index, ReadableDiffSets<SchemaIndexDescriptor> diffSet ) throws IndexNotFoundKernelException\n+{\n         if ( diffSet.isAdded( index ) )\n         {\n             return true;\n         }\n-        if ( diffSet.isRemoved( index ) )\n+\n+if ( diffSet.isRemoved( index ) )\n         {\n             throw new IndexNotFoundKernelException( format( \"Index on %s has been dropped in this transaction.\",\n                     index.userDescription( SchemaUtil.idTokenNameLookup ) ) );\n@@ -595,7 +577,8 @@ public class AllStoreHolder extends Read\n         {\n             return ktx.txState().constraintsChangesForSchema( descriptor ).apply( constraints );\n         }\n-        return constraints;\n+\n+return constraints;\n     }\n \n     @Override\n@@ -607,9 +590,8 @@ public class AllStoreHolder extends Read\n         boolean inStore = storeReadLayer.constraintExists( descriptor );\n         if ( ktx.hasTxStateWithChanges() )\n         {\n-            ReadableDiffSets<ConstraintDescriptor> diffSet =\n-                    ktx.txState().constraintsChangesForSchema( descriptor.schema() );\n-            return diffSet.isAdded( descriptor ) || (inStore && !diffSet.isRemoved( descriptor ));\n+            ReadableDiffSets<ConstraintDescriptor> diffSet = ktx.txState().constraintsChangesForSchema( descriptor.schema() );\n+return diffSet.isAdded( descriptor ) || ( inStore && !diffSet.isRemoved( descriptor ));\n         }\n \n         return inStore;\n@@ -625,7 +607,8 @@ public class AllStoreHolder extends Read\n         {\n             return ktx.txState().constraintsChangesForLabel( labelId ).apply( constraints );\n         }\n-        return constraints;\n+\n+return constraints;\n     }\n \n     @Override\n@@ -637,7 +620,8 @@ public class AllStoreHolder extends Read\n         {\n             constraints = ktx.txState().constraintsChanges().apply( constraints );\n         }\n-        return Iterators.map( this::lockConstraint, constraints );\n+\n+return Iterators.map( this::lockConstraint, constraints );\n     }\n \n     Iterator<ConstraintDescriptor> constraintsGetForProperty( int propertyKey )\n@@ -648,8 +632,8 @@ public class AllStoreHolder extends Read\n         {\n             constraints = ktx.txState().constraintsChanges().apply( constraints );\n         }\n-        return Iterators.map( this::lockConstraint,\n-                              Iterators.filter( hasProperty( propertyKey ), constraints ) );\n+\n+return Iterators.map( this::lockConstraint,Iterators.filter( hasProperty( propertyKey ), constraints ) );\n     }\n \n     @Override\n@@ -662,7 +646,8 @@ public class AllStoreHolder extends Read\n         {\n             return ktx.txState().constraintsChangesForRelationshipType( typeId ).apply( constraints );\n         }\n-        return constraints;\n+\n+return constraints;\n     }\n \n     @Override\n@@ -826,138 +811,118 @@ public class AllStoreHolder extends Read\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallRead( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallRead( int id, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsReads() )\n         {\n             throw accessMode.onViolation( format( \"Read operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static\n-                .READ ) );\n+\n+return callProcedure( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( int id, Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( id, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWrite( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallWrite( int id, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsWrites() )\n         {\n             throw accessMode.onViolation( format( \"Write operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n+\n+return callProcedure( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-\n+    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( int id, Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( id, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchema( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallSchema( int id, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsSchemaWrites() )\n         {\n             throw accessMode.onViolation( format( \"Schema operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n+\n+return callProcedure( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchemaOverride( int id, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n+    public RawIterator<Object[],ProcedureException> procedureCallSchemaOverride( int id, Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( id, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallRead( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallRead( QualifiedName name, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsReads() )\n         {\n             throw accessMode.onViolation( format( \"Read operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static\n-                .READ ) );\n+\n+return callProcedure( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+    public RawIterator<Object[],ProcedureException> procedureCallReadOverride( QualifiedName name, Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( name, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWrite( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallWrite( QualifiedName name, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsWrites() )\n         {\n             throw accessMode.onViolation( format( \"Write operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n+\n+return callProcedure( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n-\n+    public RawIterator<Object[],ProcedureException> procedureCallWriteOverride( QualifiedName name, Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( name, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.TOKEN_WRITE ) );\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> procedureCallSchema( QualifiedName name, Object[] arguments )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> procedureCallSchema( QualifiedName name, Object[] arguments ) throws ProcedureException\n+{\n         AccessMode accessMode = ktx.securityContext().mode();\n         if ( !accessMode.allowsSchemaWrites() )\n         {\n             throw accessMode.onViolation( format( \"Schema operations are not allowed for %s.\",\n                     ktx.securityContext().description() ) );\n         }\n-        return callProcedure( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n+\n+return callProcedure( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n     }\n \n     @Override\n     public RawIterator<Object[],ProcedureException> procedureCallSchemaOverride( QualifiedName name,\n-            Object[] arguments )\n-            throws ProcedureException\n-    {\n-        return callProcedure( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n+            Object[] arguments ) throws ProcedureException\n+{\n+        return callProcedure( name, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.FULL ) );\n     }\n \n     @Override\n@@ -965,11 +930,10 @@ public class AllStoreHolder extends Read\n     {\n         if ( !ktx.securityContext().mode().allowsReads() )\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+            throw ktx.securityContext().mode().onViolation( format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n         }\n-        return callFunction( id, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+\n+return callFunction( id, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n@@ -977,25 +941,22 @@ public class AllStoreHolder extends Read\n     {\n         if ( !ktx.securityContext().mode().allowsReads() )\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+            throw ktx.securityContext().mode().onViolation( format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n         }\n-        return callFunction( name, arguments,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+\n+return callFunction( name, arguments, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n     public AnyValue functionCallOverride( int id, AnyValue[] arguments ) throws ProcedureException\n     {\n-        return callFunction( id, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+        return callFunction( id, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n     public AnyValue functionCallOverride( QualifiedName name, AnyValue[] arguments ) throws ProcedureException\n     {\n-        return callFunction( name, arguments,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+        return callFunction( name, arguments, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n@@ -1003,11 +964,10 @@ public class AllStoreHolder extends Read\n     {\n         if ( !ktx.securityContext().mode().allowsReads() )\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+            throw ktx.securityContext().mode().onViolation( format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n         }\n-        return aggregationFunction( id,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+\n+return aggregationFunction( id, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n@@ -1015,25 +975,22 @@ public class AllStoreHolder extends Read\n     {\n         if ( !ktx.securityContext().mode().allowsReads() )\n         {\n-            throw ktx.securityContext().mode().onViolation(\n-                    format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n+            throw ktx.securityContext().mode().onViolation( format( \"Read operations are not allowed for %s.\", ktx.securityContext().description() ) );\n         }\n-        return aggregationFunction( name,\n-                new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+\n+return aggregationFunction( name, new RestrictedAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n     public UserAggregator aggregationFunctionOverride( int id ) throws ProcedureException\n     {\n-        return aggregationFunction( id,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+        return aggregationFunction( id, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n     public UserAggregator aggregationFunctionOverride( QualifiedName name ) throws ProcedureException\n     {\n-        return aggregationFunction( name,\n-                new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n+        return aggregationFunction( name, new OverriddenAccessMode( ktx.securityContext().mode(), AccessMode.Static.READ ) );\n     }\n \n     @Override\n@@ -1043,13 +1000,13 @@ public class AllStoreHolder extends Read\n     }\n \n     @Override\n-    public <K, V> V schemaStateGetOrCreate( K key, Function<K,V> creator )\n+    public <K,V> V schemaStateGetOrCreate( K key, Function<K,V> creator )\n     {\n         return schemaState.getOrCreate( key, creator );\n     }\n \n     @Override\n-    public <K, V> V schemaStateGet( K key )\n+    public <K,V> V schemaStateGet( K key )\n     {\n         return schemaState.get( key );\n     }\n@@ -1065,42 +1022,37 @@ public class AllStoreHolder extends Read\n         return explicitIndexStore;\n     }\n \n-    private RawIterator<Object[],ProcedureException> callProcedure(\n-            int id, Object[] input, final AccessMode override )\n-            throws ProcedureException\n-    {\n+    private RawIterator<Object[],ProcedureException> callProcedure( int id, Object[] input, final AccessMode override ) throws ProcedureException\n+{\n         ktx.assertOpen();\n \n         final SecurityContext procedureSecurityContext = ktx.securityContext().withMode( override );\n         final RawIterator<Object[],ProcedureException> procedureCall;\n         try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext );\n-              Statement statement = ktx.acquireStatement() )\n-        {\n-            procedureCall = procedures\n-                    .callProcedure( populateProcedureContext( procedureSecurityContext ), id, input, statement );\n+Statement statement = ktx.acquireStatement() )\n+{\n+            procedureCall = procedures.callProcedure( populateProcedureContext( procedureSecurityContext ), id, input, statement );\n         }\n-        return createIterator( procedureSecurityContext, procedureCall );\n+\n+return createIterator( procedureSecurityContext, procedureCall );\n     }\n \n-    private RawIterator<Object[],ProcedureException> callProcedure(\n-            QualifiedName name, Object[] input, final AccessMode override )\n-            throws ProcedureException\n-    {\n+    private RawIterator<Object[],ProcedureException> callProcedure( QualifiedName name, Object[] input, final AccessMode override ) throws ProcedureException\n+{\n         ktx.assertOpen();\n \n         final SecurityContext procedureSecurityContext = ktx.securityContext().withMode( override );\n         final RawIterator<Object[],ProcedureException> procedureCall;\n         try ( KernelTransaction.Revertable ignore = ktx.overrideWith( procedureSecurityContext );\n-              Statement statement = ktx.acquireStatement() )\n-        {\n-            procedureCall = procedures\n-                    .callProcedure( populateProcedureContext( procedureSecurityContext ), name, input, statement );\n+Statement statement = ktx.acquireStatement() )\n+{\n+            procedureCall = procedures.callProcedure( populateProcedureContext( procedureSecurityContext ), name, input, statement );\n         }\n-        return createIterator( procedureSecurityContext, procedureCall );\n+\n+return createIterator( procedureSecurityContext, procedureCall );\n     }\n \n-    private RawIterator<Object[],ProcedureException> createIterator( SecurityContext procedureSecurityContext,\n-            RawIterator<Object[],ProcedureException> procedureCall )\n+    private RawIterator<Object[],ProcedureException> createIterator( SecurityContext procedureSecurityContext, RawIterator<Object[],ProcedureException> procedureCall )\n     {\n         return new RawIterator<Object[],ProcedureException>()\n         {\n@@ -1134,9 +1086,8 @@ public class AllStoreHolder extends Read\n         }\n     }\n \n-    private AnyValue callFunction( QualifiedName name, AnyValue[] input, final AccessMode mode )\n-            throws ProcedureException\n-    {\n+    private AnyValue callFunction( QualifiedName name, AnyValue[] input, final AccessMode mode ) throws ProcedureException\n+{\n         ktx.assertOpen();\n \n         try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n@@ -1145,9 +1096,8 @@ public class AllStoreHolder extends Read\n         }\n     }\n \n-    private UserAggregator aggregationFunction( int id, final AccessMode mode )\n-            throws ProcedureException\n-    {\n+    private UserAggregator aggregationFunction( int id, final AccessMode mode ) throws ProcedureException\n+{\n         ktx.assertOpen();\n \n         try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n@@ -1156,9 +1106,8 @@ public class AllStoreHolder extends Read\n         }\n     }\n \n-    private UserAggregator aggregationFunction( QualifiedName name, final AccessMode mode )\n-            throws ProcedureException\n-    {\n+    private UserAggregator aggregationFunction( QualifiedName name, final AccessMode mode ) throws ProcedureException\n+{\n         ktx.assertOpen();\n \n         try ( KernelTransaction.Revertable ignore = ktx.overrideWith( ktx.securityContext().withMode( mode ) ) )\n@@ -1210,4 +1159,4 @@ public class AllStoreHolder extends Read\n         ktx.statementLocks().pessimistic().acquireShared( ktx.lockTracer(), schema.keyType(), schema.keyId() );\n         return constraint;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 194
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
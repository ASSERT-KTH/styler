{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "104",
    "information": {
        "errors": [
            {
                "line": "84",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "            this.tableName = tableName;\n        }\n        MetadataFetcher(String dbName,String schemaName, String tableName) {\n            this.dbName = dbName + \".\" + schemaName;\n            this.tableName = tableName;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/104/MetadataPostman.java\nindex d23558eb711..35c53a5e3b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/104/MetadataPostman.java\n@@ -81,6 +81,7 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n+\n         MetadataFetcher(String dbName,String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/104/MetadataPostman.java\nindex d23558eb711..d623e34f5fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/104/MetadataPostman.java\n@@ -81,7 +81,8 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n-        MetadataFetcher(String dbName,String schemaName, String tableName) {\n+\n+        MetadataFetcher(String dbName, String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n         }\n@@ -198,7 +199,7 @@ public class MetadataPostman {\n                 SchemaAssembler prev = assemblers.get(j);\n                 SchemaAssembler curr = assemblers.get(i);\n \n-                if (! prev.dbName.equals(curr.dbName)) {\n+                if (!prev.dbName.equals(curr.dbName)) {\n                     List<SchemaAssembler> list = new ArrayList<>();\n \n                     for (int k = j; k < i; k++) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/104/MetadataPostman.java\nindex d23558eb711..5e338be5c20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/104/MetadataPostman.java\n@@ -81,7 +81,7 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n-        MetadataFetcher(String dbName,String schemaName, String tableName) {\n+        MetadataFetcher(String dbName, String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n         }\n@@ -215,4 +215,4 @@ public class MetadataPostman {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'switch' has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 43, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 43, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 43, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 43, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 47, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/104/MetadataPostman.java\nindex d23558eb711..db0c09cec33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/104/MetadataPostman.java\n@@ -17,6 +17,8 @@ import org.slf4j.LoggerFactory;\n /**\n  * Get metadata and transfer it to json format.\n  */\n+\n+\n public class MetadataPostman {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(MetadataPostman.class);\n@@ -30,27 +32,28 @@ public class MetadataPostman {\n      * @param identifiers Table names\n      * @return List of SchemaAssembler\n      */\n+\n+\n     public static List<SchemaAssembler> getAssembledSchema(List<String> identifiers) {\n-        return identifiers.stream()\n-            .map(identifier -> {\n-                String[] names = identifier.split(\"\\\\.\");\n-                MetadataFetcher fetcher;\n-                switch (names.length) {\n-                    case 1:\n-                        fetcher = new MetadataFetcher(\"\", names[0]);\n-                        break;\n-                    case 2:\n-                        fetcher = new MetadataFetcher(names[0], names[1]);\n-                        break;\n-                    case 3:\n-                        fetcher = new MetadataFetcher(names[0], names[1], names[2]);\n-                        break;\n-                    default:\n-                        throw new RuntimeException(\"Error sql identifier \" + identifier);\n-                }\n-                return fetcher.transformSchemaFormat();\n-            })\n-            .collect(Collectors.toList());\n+        return identifiers.stream().map(identifier -> {\n+                                       String[] names = identifier.split(\"\\\\.\");\n+                                       MetadataFetcher fetcher;\n+                                       switch (names.length) {\n+                                           case 1:\n+                                               fetcher = new MetadataFetcher(\"\", names[0]);\n+                                               break;\n+                                           case 2:\n+                                               fetcher = new MetadataFetcher(names[0], names[1]);\n+                                               break;\n+                                           case 3:\n+                                               fetcher = new MetadataFetcher(names[0], names[1], names[2]);\n+                                               break;\n+                                           default:\n+                                               throw new RuntimeException(\"Error sql identifier \" + identifier);\n+                                       }\n+                                       return fetcher.transformSchemaFormat();\n+                                   })\n+                                   .collect(Collectors.toList());\n     }\n \n     /**\n@@ -59,9 +62,9 @@ public class MetadataPostman {\n      * @param tablesNames TableNames showed in Sql\n      * @return List of SchemaAssembler\n      */\n+\n     public static String getCalciteModelSchema(List<String> tablesNames) {\n         List<SchemaAssembler> assembledSchema = getAssembledSchema(tablesNames);\n-\n         return assembleSchema(assembledSchema);\n     }\n \n@@ -72,6 +75,7 @@ public class MetadataPostman {\n     /**\n      * Fetch metadata.\n      */\n+\n     private static class MetadataFetcher {\n \n         private String dbName;\n@@ -81,7 +85,8 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n-        MetadataFetcher(String dbName,String schemaName, String tableName) {\n+\n+        MetadataFetcher(String dbName, String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n         }\n@@ -90,49 +95,44 @@ public class MetadataPostman {\n             Map<String, String> calciteProperties = new HashMap<>();\n             try (MetadataClient client = new MetadataClient()) {\n                 List<TableValue> values = client.getTableSchema(tableName);\n-\n                 TableValue theUniqueTable;\n                 List<DatabaseParamValue> params;\n                 DatabaseValue databaseValue;\n                 if (values.size() > 1) {\n                     if (dbName.isEmpty()) {\n-                        throw new RuntimeException(\"Metadata for table '\" + tableName\n-                            + \"' is ambiguous!, please add concrete database name\");\n+                        throw new RuntimeException(\"Metadata for table '\" + tableName + \"' is ambiguous!, please add concrete database name\");\n                     }\n-\n                     databaseValue = client.getBasicDatabaseInfo(dbName);\n+\n                     if (databaseValue == null) {\n                         throw new RuntimeException(\"The database '\" + dbName + \"' was not found\");\n                     }\n \n                     Long dbId = databaseValue.getDbId();\n                     theUniqueTable = values.stream().filter(table -> table.getDbId().equals(dbId))\n-                        .findFirst().orElseThrow(() -> new RuntimeException(\n-                            \"The table '\" + tableName + \"' for given database '\" + dbName + \"' was not found\"));\n+                                                    .findFirst()\n+                                                    .orElseThrow(() -> new RuntimeException(\"The table '\" + tableName + \"' for given database '\"\n+                                                    + dbName + \"' was not found\"));\n                     params = client.getDatabaseSchema(dbId);\n                 } else if (values.size() == 1) {\n-                    theUniqueTable = values.get(0);\n-                    Long dbId = theUniqueTable.getDbId();\n-                    databaseValue = client.getBasicDatabaseInfoById(dbId);\n-\n-                    if (databaseValue == null) {\n-                        throw new RuntimeException(\"The database '\" + dbName + \"' was not found\");\n-                    }\n-\n-                    client.getDatabaseSchema(dbId);\n-                    params = client.getDatabaseSchema(dbId);\n+                           theUniqueTable = values.get(0);\n+                           Long dbId = theUniqueTable.getDbId();\n+                           databaseValue = client.getBasicDatabaseInfoById(dbId);\n+\n+                           if (databaseValue == null) {\n+                               throw new RuntimeException(\"The database '\" + dbName + \"' was not found\");\n+                           }\n+                           client.getDatabaseSchema(dbId);\n+                           params = client.getDatabaseSchema(dbId);\n                 } else {\n-                    throw new RuntimeException(\"The table '\" + tableName + \"' not found in any database\");\n+                           throw new RuntimeException(\"The table '\" + tableName + \"' not found in any database\");\n                 }\n-\n                 params.forEach(param -> calciteProperties.put(param.getParamKey(), param.getParamValue()));\n-\n-                LOGGER.debug(\"Received connection info about table {} is {}\", tableName, calciteProperties);\n-\n+                LOGGER.debug(\"Received connection info about table {} is {}\",\n+                    tableName,\n+                    calciteProperties);\n                 List<ColumnValue> columnValues = client.getFieldsSchema(theUniqueTable.getTblId());\n-\n                 LOGGER.debug(\"Received fields about table {} are {}\", tableName, columnValues);\n-\n                 String dbType = databaseValue.getDbType().toLowerCase();\n                 String dbName = databaseValue.getName();\n                 String tbName = theUniqueTable.getTblName();\n@@ -141,7 +141,6 @@ public class MetadataPostman {\n                 calciteProperties.put(\"dbType\", dbType);\n                 MetadataMapping calciteMeta = MetadataMapping.convertToAdapter(dbType);\n                 calciteMeta.completeComponentProperties(calciteProperties);\n-\n                 return new SchemaAssembler(dbName, tbName, calciteMeta, calciteProperties, columnValues);\n             } catch (SQLException se) {\n                 throw new RuntimeException(se);\n@@ -155,29 +154,21 @@ public class MetadataPostman {\n             if (schemas.isEmpty()) {\n                 return \"\";\n             }\n-\n             schemas.sort(Comparator.comparing(x -> x.dbName));\n-\n             List<List<SchemaAssembler>> assemblerCollection = reduceSameSchema(schemas);\n-\n-            String jsonSchemas = assemblerCollection.stream()\n-                .map(assemblers -> assemblers.get(0).reduceSameJsonSchema(assemblers))\n-                .reduce((left, right) -> left + \",\\n\" + right)\n-                .orElse(\"\");\n-\n-            return \"{\\n\"\n-                + \"  \\\"version\\\": \\\"1.0\\\",\\n\"\n-                + \"  \\\"defaultSchema\\\": \\\"QSql\\\",\\n\"\n-                + \"  \\\"schemas\\\": [\"\n-                + jsonSchemas\n-                + \"  \\n]\\n\"\n-                + \"}\";\n+            String jsonSchemas = assemblerCollection.stream().map(assemblers -> assemblers.get(0).reduceSameJsonSchema(assemblers))\n+                                                             .reduce((left, right) -> left + \",\\n\" + right)\n+                                                             .orElse(\"\");\n+            return \"{\\n\" + \"  \\\"version\\\": \\\"1.0\\\",\\n\"\n+               + \"  \\\"defaultSchema\\\": \\\"QSql\\\",\\n\"\n+               + \"  \\\"schemas\\\": [\"\n+               + jsonSchemas + \"  \\n]\\n\" + \"}\";\n         }\n \n         //try to use lambda here\n+\n         private static List<List<SchemaAssembler>> reduceSameSchema(List<SchemaAssembler> assemblers) {\n             List<List<SchemaAssembler>> schemaCollections = new ArrayList<>();\n-\n             if (assemblers.size() == 1) {\n                 schemaCollections.add(new ArrayList<>(Collections.singletonList(assemblers.get(0))));\n                 return schemaCollections;\n@@ -190,29 +181,23 @@ public class MetadataPostman {\n                     for (int k = j; k < i; k++) {\n                         list.add(assemblers.get(k));\n                     }\n-\n                     schemaCollections.add(list);\n                     return schemaCollections;\n                 }\n \n                 SchemaAssembler prev = assemblers.get(j);\n                 SchemaAssembler curr = assemblers.get(i);\n-\n                 if (! prev.dbName.equals(curr.dbName)) {\n                     List<SchemaAssembler> list = new ArrayList<>();\n \n                     for (int k = j; k < i; k++) {\n                         list.add(assemblers.get(k));\n                     }\n-\n                     schemaCollections.add(list);\n                     j = i;\n                 }\n             }\n-\n             return schemaCollections;\n         }\n-\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/104/MetadataPostman.java\nindex d23558eb711..35c53a5e3b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/104/MetadataPostman.java\n@@ -81,6 +81,7 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n+\n         MetadataFetcher(String dbName,String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/104/MetadataPostman.java\nindex d23558eb711..35c53a5e3b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/104/MetadataPostman.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/104/MetadataPostman.java\n@@ -81,6 +81,7 @@ public class MetadataPostman {\n             this.dbName = dbName;\n             this.tableName = tableName;\n         }\n+\n         MetadataFetcher(String dbName,String schemaName, String tableName) {\n             this.dbName = dbName + \".\" + schemaName;\n             this.tableName = tableName;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
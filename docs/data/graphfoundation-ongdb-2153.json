{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2153",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2153/CoreSnapshotService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2153/CoreSnapshotService.java\nindex dc606491dc0..214f2615427 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2153/CoreSnapshotService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2153/CoreSnapshotService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state;\n \n import java.io.IOException;\n@@ -28,61 +29,60 @@ import org.neo4j.causalclustering.core.state.snapshot.CoreStateType;\n \n public class CoreSnapshotService\n {\n-    private static final String OPERATION_NAME = \"snapshot request\";\n+  private static final String OPERATION_NAME = \"snapshot request\";\n \n-    private final CommandApplicationProcess applicationProcess;\n-    private final CoreState coreState;\n-    private final RaftLog raftLog;\n-    private final RaftMachine raftMachine;\n+  private final CommandApplicationProcess applicationProcess;\n+  private final CoreState coreState;\n+  private final RaftLog raftLog;\n+  private final RaftMachine raftMachine;\n \n-    public CoreSnapshotService( CommandApplicationProcess applicationProcess, CoreState coreState, RaftLog raftLog,\n-            RaftMachine raftMachine )\n-    {\n-        this.applicationProcess = applicationProcess;\n-        this.coreState = coreState;\n-        this.raftLog = raftLog;\n-        this.raftMachine = raftMachine;\n-    }\n+  public CoreSnapshotService(CommandApplicationProcess applicationProcess, CoreState coreState, RaftLog raftLog,\n+                             RaftMachine raftMachine)\n+  {\n+    this.applicationProcess = applicationProcess;\n+    this.coreState = coreState;\n+    this.raftLog = raftLog;\n+    this.raftMachine = raftMachine;\n+  }\n \n-    public synchronized CoreSnapshot snapshot() throws Exception\n+  public synchronized CoreSnapshot snapshot() throws Exception\n+  {\n+    applicationProcess.pauseApplier(OPERATION_NAME);\n+    try\n     {\n-        applicationProcess.pauseApplier( OPERATION_NAME );\n-        try\n-        {\n-            long lastApplied = applicationProcess.lastApplied();\n+      long lastApplied = applicationProcess.lastApplied();\n \n-            long prevTerm = raftLog.readEntryTerm( lastApplied );\n-            CoreSnapshot coreSnapshot = new CoreSnapshot( lastApplied, prevTerm );\n+      long prevTerm = raftLog.readEntryTerm(lastApplied);\n+      CoreSnapshot coreSnapshot = new CoreSnapshot(lastApplied, prevTerm);\n \n-            coreState.augmentSnapshot( coreSnapshot );\n-            coreSnapshot.add( CoreStateType.RAFT_CORE_STATE, raftMachine.coreState() );\n+      coreState.augmentSnapshot(coreSnapshot);\n+      coreSnapshot.add(CoreStateType.RAFT_CORE_STATE, raftMachine.coreState());\n \n-            return coreSnapshot;\n-        }\n-        finally\n-        {\n-            applicationProcess.resumeApplier( OPERATION_NAME );\n-        }\n+      return coreSnapshot;\n+    } finally\n+    {\n+      applicationProcess.resumeApplier(OPERATION_NAME);\n     }\n+  }\n \n-    public synchronized void installSnapshot( CoreSnapshot coreSnapshot ) throws IOException\n-    {\n-        long snapshotPrevIndex = coreSnapshot.prevIndex();\n-        raftLog.skip( snapshotPrevIndex, coreSnapshot.prevTerm() );\n+  public synchronized void installSnapshot(CoreSnapshot coreSnapshot) throws IOException\n+  {\n+    long snapshotPrevIndex = coreSnapshot.prevIndex();\n+    raftLog.skip(snapshotPrevIndex, coreSnapshot.prevTerm());\n \n-        coreState.installSnapshot( coreSnapshot );\n-        raftMachine.installCoreState( coreSnapshot.get( CoreStateType.RAFT_CORE_STATE ) );\n-        coreState.flush( snapshotPrevIndex );\n+    coreState.installSnapshot(coreSnapshot);\n+    raftMachine.installCoreState(coreSnapshot.get(CoreStateType.RAFT_CORE_STATE));\n+    coreState.flush(snapshotPrevIndex);\n \n-        applicationProcess.installSnapshot( coreSnapshot );\n-        notifyAll();\n-    }\n+    applicationProcess.installSnapshot(coreSnapshot);\n+    notifyAll();\n+  }\n \n-    synchronized void awaitState() throws InterruptedException\n+  synchronized void awaitState() throws InterruptedException\n+  {\n+    while (raftMachine.state().appendIndex() < 0)\n     {\n-        while ( raftMachine.state().appendIndex() < 0 )\n-        {\n-            wait();\n-        }\n+      wait();\n     }\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2153/CoreSnapshotService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2153/CoreSnapshotService.java\nindex dc606491dc0..1df4fce9366 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2153/CoreSnapshotService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2153/CoreSnapshotService.java\n@@ -29,8 +29,7 @@ import org.neo4j.causalclustering.core.state.snapshot.CoreStateType;\n public class CoreSnapshotService\n {\n     private static final String OPERATION_NAME = \"snapshot request\";\n-\n-    private final CommandApplicationProcess applicationProcess;\n+private final CommandApplicationProcess applicationProcess;\n     private final CoreState coreState;\n     private final RaftLog raftLog;\n     private final RaftMachine raftMachine;\n@@ -53,11 +52,9 @@ public class CoreSnapshotService\n \n             long prevTerm = raftLog.readEntryTerm( lastApplied );\n             CoreSnapshot coreSnapshot = new CoreSnapshot( lastApplied, prevTerm );\n-\n-            coreState.augmentSnapshot( coreSnapshot );\n+coreState.augmentSnapshot( coreSnapshot );\n             coreSnapshot.add( CoreStateType.RAFT_CORE_STATE, raftMachine.coreState() );\n-\n-            return coreSnapshot;\n+return coreSnapshot;\n         }\n         finally\n         {\n@@ -69,12 +66,10 @@ public class CoreSnapshotService\n     {\n         long snapshotPrevIndex = coreSnapshot.prevIndex();\n         raftLog.skip( snapshotPrevIndex, coreSnapshot.prevTerm() );\n-\n-        coreState.installSnapshot( coreSnapshot );\n+coreState.installSnapshot( coreSnapshot );\n         raftMachine.installCoreState( coreSnapshot.get( CoreStateType.RAFT_CORE_STATE ) );\n         coreState.flush( snapshotPrevIndex );\n-\n-        applicationProcess.installSnapshot( coreSnapshot );\n+applicationProcess.installSnapshot( coreSnapshot );\n         notifyAll();\n     }\n \n@@ -85,4 +80,4 @@ public class CoreSnapshotService\n             wait();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
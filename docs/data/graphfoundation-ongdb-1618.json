{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1618",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1618/UserFunctionVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1618/UserFunctionVisitor.java\nindex cf9ea2e196c..8aed6700fe5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1618/UserFunctionVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1618/UserFunctionVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.util.function.Function;\n@@ -27,23 +28,23 @@ import javax.lang.model.util.SimpleElementVisitor8;\n import org.neo4j.procedure.UserFunction;\n import org.neo4j.tooling.procedure.messages.CompilationMessage;\n \n-public class UserFunctionVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+public class UserFunctionVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n \n-    private final FunctionVisitor functionVisitor;\n-\n-    public UserFunctionVisitor( FunctionVisitor<UserFunction> baseFunctionVisitor )\n-    {\n-        this.functionVisitor = baseFunctionVisitor;\n-    }\n-\n-    @Override\n-    public Stream<CompilationMessage> visitExecutable( ExecutableElement executableElement, Void ignored )\n-    {\n-        return Stream.<Stream<CompilationMessage>>of( functionVisitor.validateEnclosingClass( executableElement ),\n-                functionVisitor.validateParameters( executableElement.getParameters() ),\n-                functionVisitor.validateName( executableElement ),\n-                functionVisitor.validateReturnType( executableElement ) ).flatMap( Function.identity() );\n-    }\n+  private final FunctionVisitor functionVisitor;\n+\n+  public UserFunctionVisitor(FunctionVisitor<UserFunction> baseFunctionVisitor)\n+  {\n+    this.functionVisitor = baseFunctionVisitor;\n+  }\n+\n+  @Override\n+  public Stream<CompilationMessage> visitExecutable(ExecutableElement executableElement, Void ignored)\n+  {\n+    return Stream.<Stream<CompilationMessage>>of(functionVisitor.validateEnclosingClass(executableElement),\n+        functionVisitor.validateParameters(executableElement.getParameters()),\n+        functionVisitor.validateName(executableElement),\n+        functionVisitor.validateReturnType(executableElement)).flatMap(Function.identity());\n+  }\n \n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 328).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1618/UserFunctionVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1618/UserFunctionVisitor.java\nindex cf9ea2e196c..1c0e1a42537 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1618/UserFunctionVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1618/UserFunctionVisitor.java\n@@ -29,7 +29,6 @@ import org.neo4j.tooling.procedure.messages.CompilationMessage;\n \n public class UserFunctionVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n {\n-\n     private final FunctionVisitor functionVisitor;\n \n     public UserFunctionVisitor( FunctionVisitor<UserFunction> baseFunctionVisitor )\n@@ -40,10 +39,6 @@ public class UserFunctionVisitor extends SimpleElementVisitor8<Stream<Compilatio\n     @Override\n     public Stream<CompilationMessage> visitExecutable( ExecutableElement executableElement, Void ignored )\n     {\n-        return Stream.<Stream<CompilationMessage>>of( functionVisitor.validateEnclosingClass( executableElement ),\n-                functionVisitor.validateParameters( executableElement.getParameters() ),\n-                functionVisitor.validateName( executableElement ),\n-                functionVisitor.validateReturnType( executableElement ) ).flatMap( Function.identity() );\n+        return Stream.<Stream<CompilationMessage>>of( functionVisitor.validateEnclosingClass( executableElement ), functionVisitor.validateParameters( executableElement.getParameters() ), functionVisitor.validateName( executableElement ), functionVisitor.validateReturnType( executableElement ) ).flatMap( Function.identity() );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
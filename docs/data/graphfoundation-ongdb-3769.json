{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3769",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3769/HeartbeatContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3769/HeartbeatContextImpl.java\nindex 13cbf94cdd0..681f488ef64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3769/HeartbeatContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3769/HeartbeatContextImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.net.URI;\n@@ -41,343 +42,343 @@ import org.neo4j.logging.LogProvider;\n \n class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatContext\n {\n-    // HeartbeatContext\n-    private Set<InstanceId> failed = new HashSet<>();\n-\n-    private Map<InstanceId, Set<InstanceId>> nodeSuspicions = new HashMap<>();\n-\n-    private final Listeners<HeartbeatListener> heartBeatListeners;\n-\n-    private final Executor executor;\n-    private ClusterContext clusterContext;\n-    private LearnerContext learnerContext;\n-\n-    HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging,\n-                          Timeouts timeouts, Executor executor )\n+  // HeartbeatContext\n+  private Set<InstanceId> failed = new HashSet<>();\n+\n+  private Map<InstanceId, Set<InstanceId>> nodeSuspicions = new HashMap<>();\n+\n+  private final Listeners<HeartbeatListener> heartBeatListeners;\n+\n+  private final Executor executor;\n+  private ClusterContext clusterContext;\n+  private LearnerContext learnerContext;\n+\n+  HeartbeatContextImpl(InstanceId me, CommonContextState commonState, LogProvider logging,\n+                       Timeouts timeouts, Executor executor)\n+  {\n+    super(me, commonState, logging, timeouts);\n+    this.executor = executor;\n+    this.heartBeatListeners = new Listeners<>();\n+  }\n+\n+  private HeartbeatContextImpl(InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n+                               Set<InstanceId> failed, Map<InstanceId, Set<InstanceId>> nodeSuspicions,\n+                               Listeners<HeartbeatListener> heartBeatListeners, Executor executor)\n+  {\n+    super(me, commonState, logging, timeouts);\n+    this.failed = failed;\n+    this.nodeSuspicions = nodeSuspicions;\n+    this.heartBeatListeners = heartBeatListeners;\n+    this.executor = executor;\n+  }\n+\n+  void setCircularDependencies(ClusterContext clusterContext, LearnerContext learnerContext)\n+  {\n+    this.clusterContext = clusterContext;\n+    this.learnerContext = learnerContext;\n+  }\n+\n+  @Override\n+  public void started()\n+  {\n+    failed.clear();\n+  }\n+\n+  /**\n+   * @return True iff the node was suspected\n+   */\n+  @Override\n+  public boolean alive(InstanceId node)\n+  {\n+    Set<InstanceId> serverSuspicions = suspicionsFor(getMyId());\n+    boolean suspected = serverSuspicions.remove(node);\n+\n+    if (!isFailedBasedOnSuspicions(node) && failed.remove(node))\n     {\n-        super( me, commonState, logging, timeouts );\n-        this.executor = executor;\n-        this.heartBeatListeners = new Listeners<>();\n+      getLog(HeartbeatContext.class).info(\"Notifying listeners that instance \" + node + \" is alive\");\n+      heartBeatListeners.notify(executor, listener -> listener.alive(node));\n     }\n \n-    private HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n-                                  Set<InstanceId> failed, Map<InstanceId, Set<InstanceId>> nodeSuspicions,\n-                                  Listeners<HeartbeatListener> heartBeatListeners, Executor executor )\n-    {\n-        super( me, commonState, logging, timeouts );\n-        this.failed = failed;\n-        this.nodeSuspicions = nodeSuspicions;\n-        this.heartBeatListeners = heartBeatListeners;\n-        this.executor = executor;\n-    }\n+    return suspected;\n+  }\n \n-    void setCircularDependencies( ClusterContext clusterContext, LearnerContext learnerContext )\n-    {\n-        this.clusterContext = clusterContext;\n-        this.learnerContext = learnerContext;\n-    }\n+  @Override\n+  public void suspect(InstanceId node)\n+  {\n+    Set<InstanceId> serverSuspicions = suspicionsFor(getMyId());\n \n-    @Override\n-    public void started()\n+    if (!serverSuspicions.contains(node))\n     {\n-        failed.clear();\n-    }\n+      serverSuspicions.add(node);\n \n-    /**\n-     * @return True iff the node was suspected\n-     */\n-    @Override\n-    public boolean alive( InstanceId node )\n-    {\n-        Set<InstanceId> serverSuspicions = suspicionsFor( getMyId() );\n-        boolean suspected = serverSuspicions.remove( node );\n-\n-        if ( !isFailedBasedOnSuspicions( node ) && failed.remove( node ) )\n-        {\n-            getLog( HeartbeatContext.class ).info( \"Notifying listeners that instance \" + node + \" is alive\" );\n-            heartBeatListeners.notify( executor, listener -> listener.alive( node ) );\n-        }\n-\n-        return suspected;\n+      getLog(HeartbeatContext.class).info(getMyId() + \"(me) is now suspecting \" + node);\n     }\n \n-    @Override\n-    public void suspect( InstanceId node )\n+    if (isFailedBasedOnSuspicions(node) && !failed.contains(node))\n     {\n-        Set<InstanceId> serverSuspicions = suspicionsFor( getMyId() );\n-\n-        if ( !serverSuspicions.contains( node ) )\n-        {\n-            serverSuspicions.add( node );\n-\n-            getLog( HeartbeatContext.class ).info( getMyId() + \"(me) is now suspecting \" + node );\n-        }\n-\n-        if ( isFailedBasedOnSuspicions( node ) && !failed.contains( node ) )\n-        {\n-            getLog( HeartbeatContext.class ).info( \"Notifying listeners that instance \" + node + \" is failed\" );\n-            failed.add( node );\n-            heartBeatListeners.notify( executor, listener -> listener.failed( node ) );\n-        }\n-\n-        if ( checkSuspectEverybody() )\n-        {\n-            getLog( HeartbeatContext.class )\n-                    .warn( \"All other instances are being suspected. Moving on to mark all other instances as failed\" );\n-            markAllOtherMembersAsFailed();\n-        }\n+      getLog(HeartbeatContext.class).info(\"Notifying listeners that instance \" + node + \" is failed\");\n+      failed.add(node);\n+      heartBeatListeners.notify(executor, listener -> listener.failed(node));\n     }\n \n-    /*\n-     * Alters state so that all instances are marked as failed. The state is changed so that any timeouts will not\n-     * reset an instance to alive, allowing only for real heartbeats from an instance to mark it again as alive. This\n-     * method is expected to be called in the event where all instances are being suspected, in which case a network\n-     * partition has happened and we need to set ourselves in an unavailable state.\n-     * The way this method achieves its task is by introducing suspicions from everybody about everybody. This mimics\n-     * the normal way of doing things, effectively faking a series of suspicion messages from every other instance\n-     * before connectivity was lost. As a result, when connectivity is restored, the state will be restored properly\n-     * for every instance that actually manages to reconnect.\n-     */\n-    private void markAllOtherMembersAsFailed()\n+    if (checkSuspectEverybody())\n     {\n-        Set<InstanceId> everyoneElse = new HashSet<>();\n-        for ( InstanceId instanceId : getMembers().keySet() )\n-        {\n-            if ( !isMe( instanceId ) )\n-            {\n-                everyoneElse.add( instanceId );\n-            }\n-        }\n-\n-        for ( InstanceId instanceId : everyoneElse )\n-        {\n-            Set<InstanceId> instancesThisInstanceSuspects = new HashSet<>( everyoneElse );\n-            instancesThisInstanceSuspects.remove( instanceId ); // obviously an instance cannot suspect itself\n-            suspicions( instanceId, instancesThisInstanceSuspects );\n-        }\n+      getLog(HeartbeatContext.class)\n+          .warn(\"All other instances are being suspected. Moving on to mark all other instances as failed\");\n+      markAllOtherMembersAsFailed();\n     }\n-\n-    /**\n-     * Returns true iff this instance suspects every other instance currently in the cluster, except for itself.\n-     */\n-    private boolean checkSuspectEverybody()\n+  }\n+\n+  /*\n+   * Alters state so that all instances are marked as failed. The state is changed so that any timeouts will not\n+   * reset an instance to alive, allowing only for real heartbeats from an instance to mark it again as alive. This\n+   * method is expected to be called in the event where all instances are being suspected, in which case a network\n+   * partition has happened and we need to set ourselves in an unavailable state.\n+   * The way this method achieves its task is by introducing suspicions from everybody about everybody. This mimics\n+   * the normal way of doing things, effectively faking a series of suspicion messages from every other instance\n+   * before connectivity was lost. As a result, when connectivity is restored, the state will be restored properly\n+   * for every instance that actually manages to reconnect.\n+   */\n+  private void markAllOtherMembersAsFailed()\n+  {\n+    Set<InstanceId> everyoneElse = new HashSet<>();\n+    for (InstanceId instanceId : getMembers().keySet())\n     {\n-        Map<InstanceId, URI> allClusterMembers = getMembers();\n-        Set<InstanceId> suspectedInstances = getSuspicionsFor( getMyId() );\n-        int suspected = 0;\n-        for ( InstanceId suspectedInstance : suspectedInstances )\n-        {\n-            if ( allClusterMembers.containsKey( suspectedInstance ) )\n-            {\n-                suspected++;\n-            }\n-        }\n-\n-        return suspected == allClusterMembers.size() - 1;\n+      if (!isMe(instanceId))\n+      {\n+        everyoneElse.add(instanceId);\n+      }\n     }\n \n-    @Override\n-    public void suspicions( InstanceId from, Set<InstanceId> suspicions )\n+    for (InstanceId instanceId : everyoneElse)\n     {\n-        /*\n-         * A thing to be careful about here is the case where a cluster member is marked as failed but it's not yet\n-         * in the failed set. This implies the member has gathered enough suspicions to be marked as failed but is\n-         * not yet marked as such. This can happen if there is a cluster partition containing only us, in which case\n-         * markAllOthersAsFailed() will suspect everyone but not add them to failed (this happens here, further down).\n-         * In this case, all suspicions must be processed, since after processing half, the other half of the cluster\n-         * will be marked as failed (it has gathered enough suspicions) but we still need to process their messages, in\n-         * order to mark as failed the other half.\n-         */\n-        if ( isFailedBasedOnSuspicions( from ) && !failed.contains( from ) )\n-        {\n-            getLog( HeartbeatContext.class ).info(\n-                    \"Ignoring suspicions from failed instance \" + from + \": \" + Iterables.toString( suspicions, \",\" ) );\n-            return;\n-        }\n-\n-        Set<InstanceId> serverSuspicions = suspicionsFor( from );\n-\n-        // Check removals\n-        Iterator<InstanceId> suspicionsIterator = serverSuspicions.iterator();\n-        while ( suspicionsIterator.hasNext() )\n-        {\n-            InstanceId currentSuspicion = suspicionsIterator.next();\n-            if ( !suspicions.contains( currentSuspicion ) )\n-            {\n-                getLog( HeartbeatContext.class ).info( from + \" is no longer suspecting \" + currentSuspicion );\n-                suspicionsIterator.remove();\n-            }\n-        }\n-\n-        // Check additions\n-        for ( InstanceId suspicion : suspicions )\n-        {\n-            if ( !serverSuspicions.contains( suspicion ) )\n-            {\n-                getLog( HeartbeatContext.class ).info( from + \" is now suspecting \" + suspicion );\n-                serverSuspicions.add( suspicion );\n-            }\n-        }\n-\n-        // Check if anyone is considered failed\n-        for ( InstanceId node : suspicions )\n-        {\n-            if ( isFailedBasedOnSuspicions( node ) && !failed.contains( node ) )\n-            {\n-                failed.add( node );\n-                heartBeatListeners.notify( executor, listener -> listener.failed( node ) );\n-            }\n-        }\n+      Set<InstanceId> instancesThisInstanceSuspects = new HashSet<>(everyoneElse);\n+      instancesThisInstanceSuspects.remove(instanceId); // obviously an instance cannot suspect itself\n+      suspicions(instanceId, instancesThisInstanceSuspects);\n     }\n-\n-    @Override\n-    public Set<InstanceId> getFailed()\n+  }\n+\n+  /**\n+   * Returns true iff this instance suspects every other instance currently in the cluster, except for itself.\n+   */\n+  private boolean checkSuspectEverybody()\n+  {\n+    Map<InstanceId, URI> allClusterMembers = getMembers();\n+    Set<InstanceId> suspectedInstances = getSuspicionsFor(getMyId());\n+    int suspected = 0;\n+    for (InstanceId suspectedInstance : suspectedInstances)\n     {\n-        return failed;\n+      if (allClusterMembers.containsKey(suspectedInstance))\n+      {\n+        suspected++;\n+      }\n     }\n \n-    @Override\n-    public Iterable<InstanceId> getAlive()\n-    {\n-        return Iterables.filter( item -> !isFailedBasedOnSuspicions( item ), commonState.configuration().getMemberIds() );\n-    }\n+    return suspected == allClusterMembers.size() - 1;\n+  }\n \n-    @Override\n-    public void addHeartbeatListener( HeartbeatListener listener )\n-    {\n-        heartBeatListeners.add( listener );\n-    }\n-\n-    @Override\n-    public void removeHeartbeatListener( HeartbeatListener listener )\n-    {\n-        heartBeatListeners.remove( listener );\n-    }\n-\n-    @Override\n-    public void serverLeftCluster( InstanceId node )\n+  @Override\n+  public void suspicions(InstanceId from, Set<InstanceId> suspicions)\n+  {\n+    /*\n+     * A thing to be careful about here is the case where a cluster member is marked as failed but it's not yet\n+     * in the failed set. This implies the member has gathered enough suspicions to be marked as failed but is\n+     * not yet marked as such. This can happen if there is a cluster partition containing only us, in which case\n+     * markAllOthersAsFailed() will suspect everyone but not add them to failed (this happens here, further down).\n+     * In this case, all suspicions must be processed, since after processing half, the other half of the cluster\n+     * will be marked as failed (it has gathered enough suspicions) but we still need to process their messages, in\n+     * order to mark as failed the other half.\n+     */\n+    if (isFailedBasedOnSuspicions(from) && !failed.contains(from))\n     {\n-        failed.remove( node );\n-        for ( Set<InstanceId> uris : nodeSuspicions.values() )\n-        {\n-            uris.remove( node );\n-        }\n+      getLog(HeartbeatContext.class).info(\n+          \"Ignoring suspicions from failed instance \" + from + \": \" + Iterables.toString(suspicions, \",\"));\n+      return;\n     }\n \n-    @Override\n-    public boolean isFailedBasedOnSuspicions( InstanceId node )\n-    {\n-        List<InstanceId> suspicionsForNode = getSuspicionsOf( node );\n-        int countOfInstancesSuspectedByMe = getSuspicionsFor( getMyId() ).size();\n-\n-        /*\n-         * If more than half *non suspected instances* suspect this node, fail it. This takes care of partitions\n-         * that contain less than half of the cluster, ensuring that they will eventually detect the disconnect without\n-         * waiting to have a majority of suspicions. This is accomplished by counting as quorum only instances\n-         * that are not suspected by me.\n-         */\n-        return suspicionsForNode.size() >\n-                (commonState.configuration().getMembers().size() - countOfInstancesSuspectedByMe ) / 2;\n-    }\n+    Set<InstanceId> serverSuspicions = suspicionsFor(from);\n \n-    /**\n-     * Get all of the servers which suspect a specific member.\n-     *\n-     * @param instanceId for the member of interest.\n-     * @return a set of servers which suspect the specified member.\n-     */\n-    @Override\n-    public List<InstanceId> getSuspicionsOf( InstanceId instanceId )\n+    // Check removals\n+    Iterator<InstanceId> suspicionsIterator = serverSuspicions.iterator();\n+    while (suspicionsIterator.hasNext())\n     {\n-        List<InstanceId> suspicions = new ArrayList<>();\n-        for ( InstanceId member : commonState.configuration().getMemberIds() )\n-        {\n-            Set<InstanceId> memberSuspicions = nodeSuspicions.get( member );\n-            if ( memberSuspicions != null && !failed.contains( member )\n-                    && memberSuspicions.contains( instanceId ) )\n-            {\n-                suspicions.add( member );\n-            }\n-        }\n-\n-        return suspicions;\n+      InstanceId currentSuspicion = suspicionsIterator.next();\n+      if (!suspicions.contains(currentSuspicion))\n+      {\n+        getLog(HeartbeatContext.class).info(from + \" is no longer suspecting \" + currentSuspicion);\n+        suspicionsIterator.remove();\n+      }\n     }\n \n-    /**\n-     * Get the suspicions as reported by a specific server.\n-     *\n-     * @param instanceId which might suspect someone.\n-     * @return a list of those members which server suspects.\n-     */\n-    @Override\n-    public Set<InstanceId> getSuspicionsFor( InstanceId instanceId )\n+    // Check additions\n+    for (InstanceId suspicion : suspicions)\n     {\n-        Set<org.neo4j.cluster.InstanceId> suspicions = suspicionsFor( instanceId );\n-        return new HashSet<>( suspicions );\n+      if (!serverSuspicions.contains(suspicion))\n+      {\n+        getLog(HeartbeatContext.class).info(from + \" is now suspecting \" + suspicion);\n+        serverSuspicions.add(suspicion);\n+      }\n     }\n \n-    private Set<InstanceId> suspicionsFor( InstanceId instanceId )\n+    // Check if anyone is considered failed\n+    for (InstanceId node : suspicions)\n     {\n-        return nodeSuspicions.computeIfAbsent( instanceId, k -> new HashSet<>() );\n+      if (isFailedBasedOnSuspicions(node) && !failed.contains(node))\n+      {\n+        failed.add(node);\n+        heartBeatListeners.notify(executor, listener -> listener.failed(node));\n+      }\n     }\n-\n-    @Override\n-    public Iterable<InstanceId> getOtherInstances()\n+  }\n+\n+  @Override\n+  public Set<InstanceId> getFailed()\n+  {\n+    return failed;\n+  }\n+\n+  @Override\n+  public Iterable<InstanceId> getAlive()\n+  {\n+    return Iterables.filter(item -> !isFailedBasedOnSuspicions(item), commonState.configuration().getMemberIds());\n+  }\n+\n+  @Override\n+  public void addHeartbeatListener(HeartbeatListener listener)\n+  {\n+    heartBeatListeners.add(listener);\n+  }\n+\n+  @Override\n+  public void removeHeartbeatListener(HeartbeatListener listener)\n+  {\n+    heartBeatListeners.remove(listener);\n+  }\n+\n+  @Override\n+  public void serverLeftCluster(InstanceId node)\n+  {\n+    failed.remove(node);\n+    for (Set<InstanceId> uris : nodeSuspicions.values())\n     {\n-        return clusterContext.getOtherInstances();\n+      uris.remove(node);\n     }\n+  }\n \n-    @Override\n-    public long getLastKnownLearnedInstanceInCluster()\n-    {\n-        return learnerContext.getLastKnownLearnedInstanceInCluster();\n-    }\n+  @Override\n+  public boolean isFailedBasedOnSuspicions(InstanceId node)\n+  {\n+    List<InstanceId> suspicionsForNode = getSuspicionsOf(node);\n+    int countOfInstancesSuspectedByMe = getSuspicionsFor(getMyId()).size();\n \n-    @Override\n-    public long getLastLearnedInstanceId()\n+    /*\n+     * If more than half *non suspected instances* suspect this node, fail it. This takes care of partitions\n+     * that contain less than half of the cluster, ensuring that they will eventually detect the disconnect without\n+     * waiting to have a majority of suspicions. This is accomplished by counting as quorum only instances\n+     * that are not suspected by me.\n+     */\n+    return suspicionsForNode.size() >\n+        (commonState.configuration().getMembers().size() - countOfInstancesSuspectedByMe) / 2;\n+  }\n+\n+  /**\n+   * Get all of the servers which suspect a specific member.\n+   *\n+   * @param instanceId for the member of interest.\n+   * @return a set of servers which suspect the specified member.\n+   */\n+  @Override\n+  public List<InstanceId> getSuspicionsOf(InstanceId instanceId)\n+  {\n+    List<InstanceId> suspicions = new ArrayList<>();\n+    for (InstanceId member : commonState.configuration().getMemberIds())\n     {\n-        return learnerContext.getLastLearnedInstanceId();\n+      Set<InstanceId> memberSuspicions = nodeSuspicions.get(member);\n+      if (memberSuspicions != null && !failed.contains(member)\n+          && memberSuspicions.contains(instanceId))\n+      {\n+        suspicions.add(member);\n+      }\n     }\n \n-    @Override\n-    public void failed( InstanceId instanceId )\n+    return suspicions;\n+  }\n+\n+  /**\n+   * Get the suspicions as reported by a specific server.\n+   *\n+   * @param instanceId which might suspect someone.\n+   * @return a list of those members which server suspects.\n+   */\n+  @Override\n+  public Set<InstanceId> getSuspicionsFor(InstanceId instanceId)\n+  {\n+    Set<org.neo4j.cluster.InstanceId> suspicions = suspicionsFor(instanceId);\n+    return new HashSet<>(suspicions);\n+  }\n+\n+  private Set<InstanceId> suspicionsFor(InstanceId instanceId)\n+  {\n+    return nodeSuspicions.computeIfAbsent(instanceId, k -> new HashSet<>());\n+  }\n+\n+  @Override\n+  public Iterable<InstanceId> getOtherInstances()\n+  {\n+    return clusterContext.getOtherInstances();\n+  }\n+\n+  @Override\n+  public long getLastKnownLearnedInstanceInCluster()\n+  {\n+    return learnerContext.getLastKnownLearnedInstanceInCluster();\n+  }\n+\n+  @Override\n+  public long getLastLearnedInstanceId()\n+  {\n+    return learnerContext.getLastLearnedInstanceId();\n+  }\n+\n+  @Override\n+  public void failed(InstanceId instanceId)\n+  {\n+    failed.add(instanceId);\n+  }\n+\n+  public HeartbeatContextImpl snapshot(CommonContextState commonStateSnapshot, LogProvider logging,\n+                                       Timeouts timeouts, Executor executor)\n+  {\n+    return new HeartbeatContextImpl(me, commonStateSnapshot, logging, timeouts, new HashSet<>(failed),\n+        new HashMap<>(nodeSuspicions), new Listeners<>(heartBeatListeners), executor);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        failed.add( instanceId );\n+      return true;\n     }\n-\n-    public HeartbeatContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging,\n-            Timeouts timeouts, Executor executor )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return new HeartbeatContextImpl( me, commonStateSnapshot, logging, timeouts, new HashSet<>( failed ),\n-                new HashMap<>( nodeSuspicions ), new Listeners<>( heartBeatListeners ), executor );\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        HeartbeatContextImpl that = (HeartbeatContextImpl) o;\n-\n-        if ( failed != null ? !failed.equals( that.failed ) : that.failed != null )\n-        {\n-            return false;\n-        }\n-        return nodeSuspicions != null ? nodeSuspicions.equals( that.nodeSuspicions ) : that.nodeSuspicions == null;\n-    }\n+    HeartbeatContextImpl that = (HeartbeatContextImpl) o;\n \n-    @Override\n-    public int hashCode()\n+    if (failed != null ? !failed.equals(that.failed) : that.failed != null)\n     {\n-        int result = failed != null ? failed.hashCode() : 0;\n-        result = 31 * result + (nodeSuspicions != null ? nodeSuspicions.hashCode() : 0);\n-        return result;\n+      return false;\n     }\n+    return nodeSuspicions != null ? nodeSuspicions.equals(that.nodeSuspicions) : that.nodeSuspicions == null;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = failed != null ? failed.hashCode() : 0;\n+    result = 31 * result + (nodeSuspicions != null ? nodeSuspicions.hashCode() : 0);\n+    return result;\n+  }\n }\n",
            "diff_size": 476
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "column": "72",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "342",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3769/HeartbeatContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3769/HeartbeatContextImpl.java\nindex 13cbf94cdd0..5a0ab76ac69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3769/HeartbeatContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3769/HeartbeatContextImpl.java\n@@ -52,18 +52,15 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n     private ClusterContext clusterContext;\n     private LearnerContext learnerContext;\n \n-    HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging,\n-                          Timeouts timeouts, Executor executor )\n-    {\n+    HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts, Executor executor )\n+{\n         super( me, commonState, logging, timeouts );\n         this.executor = executor;\n         this.heartBeatListeners = new Listeners<>();\n     }\n \n-    private HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts,\n-                                  Set<InstanceId> failed, Map<InstanceId, Set<InstanceId>> nodeSuspicions,\n-                                  Listeners<HeartbeatListener> heartBeatListeners, Executor executor )\n-    {\n+    private HeartbeatContextImpl( InstanceId me, CommonContextState commonState, LogProvider logging, Timeouts timeouts, Set<InstanceId> failed, Map<InstanceId, Set<InstanceId>> nodeSuspicions, Listeners<HeartbeatListener> heartBeatListeners, Executor executor )\n+{\n         super( me, commonState, logging, timeouts );\n         this.failed = failed;\n         this.nodeSuspicions = nodeSuspicions;\n@@ -91,8 +88,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n     {\n         Set<InstanceId> serverSuspicions = suspicionsFor( getMyId() );\n         boolean suspected = serverSuspicions.remove( node );\n-\n-        if ( !isFailedBasedOnSuspicions( node ) && failed.remove( node ) )\n+if ( !isFailedBasedOnSuspicions( node ) && failed.remove( node ) )\n         {\n             getLog( HeartbeatContext.class ).info( \"Notifying listeners that instance \" + node + \" is alive\" );\n             heartBeatListeners.notify( executor, listener -> listener.alive( node ) );\n@@ -105,8 +101,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n     public void suspect( InstanceId node )\n     {\n         Set<InstanceId> serverSuspicions = suspicionsFor( getMyId() );\n-\n-        if ( !serverSuspicions.contains( node ) )\n+if ( !serverSuspicions.contains( node ) )\n         {\n             serverSuspicions.add( node );\n \n@@ -122,9 +117,8 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n \n         if ( checkSuspectEverybody() )\n         {\n-            getLog( HeartbeatContext.class )\n-                    .warn( \"All other instances are being suspected. Moving on to mark all other instances as failed\" );\n-            markAllOtherMembersAsFailed();\n+            getLog( HeartbeatContext.class ).warn( \"All other instances are being suspected. Moving on to mark all other instances as failed\" );\n+markAllOtherMembersAsFailed();\n         }\n     }\n \n@@ -162,7 +156,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n      */\n     private boolean checkSuspectEverybody()\n     {\n-        Map<InstanceId, URI> allClusterMembers = getMembers();\n+        Map<InstanceId,URI> allClusterMembers = getMembers();\n         Set<InstanceId> suspectedInstances = getSuspicionsFor( getMyId() );\n         int suspected = 0;\n         for ( InstanceId suspectedInstance : suspectedInstances )\n@@ -190,9 +184,8 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n          */\n         if ( isFailedBasedOnSuspicions( from ) && !failed.contains( from ) )\n         {\n-            getLog( HeartbeatContext.class ).info(\n-                    \"Ignoring suspicions from failed instance \" + from + \": \" + Iterables.toString( suspicions, \",\" ) );\n-            return;\n+            getLog( HeartbeatContext.class ).info( \"Ignoring suspicions from failed instance \" + from + \": \" + Iterables.toString( suspicions, \",\" ) );\n+return;\n         }\n \n         Set<InstanceId> serverSuspicions = suspicionsFor( from );\n@@ -276,8 +269,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n          * waiting to have a majority of suspicions. This is accomplished by counting as quorum only instances\n          * that are not suspected by me.\n          */\n-        return suspicionsForNode.size() >\n-                (commonState.configuration().getMembers().size() - countOfInstancesSuspectedByMe ) / 2;\n+        return suspicionsForNode.size() > (commonState.configuration().getMembers().size() - countOfInstancesSuspectedByMe ) / 2;\n     }\n \n     /**\n@@ -293,8 +285,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n         for ( InstanceId member : commonState.configuration().getMemberIds() )\n         {\n             Set<InstanceId> memberSuspicions = nodeSuspicions.get( member );\n-            if ( memberSuspicions != null && !failed.contains( member )\n-                    && memberSuspicions.contains( instanceId ) )\n+            if ( memberSuspicions != null && !failed.contains( member )&& memberSuspicions.contains( instanceId ) )\n             {\n                 suspicions.add( member );\n             }\n@@ -348,8 +339,7 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n     public HeartbeatContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging,\n             Timeouts timeouts, Executor executor )\n     {\n-        return new HeartbeatContextImpl( me, commonStateSnapshot, logging, timeouts, new HashSet<>( failed ),\n-                new HashMap<>( nodeSuspicions ), new Listeners<>( heartBeatListeners ), executor );\n+        return new HeartbeatContextImpl( me, commonStateSnapshot, logging, timeouts, new HashSet<>( failed ), new HashMap<>( nodeSuspicions ), new Listeners<>( heartBeatListeners ), executor );\n     }\n \n     @Override\n@@ -359,7 +349,8 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -370,14 +361,15 @@ class HeartbeatContextImpl extends AbstractContextImpl implements HeartbeatConte\n         {\n             return false;\n         }\n-        return nodeSuspicions != null ? nodeSuspicions.equals( that.nodeSuspicions ) : that.nodeSuspicions == null;\n+\n+return nodeSuspicions != null ? nodeSuspicions.equals( that.nodeSuspicions ) : that.nodeSuspicions == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = failed != null ? failed.hashCode() : 0;\n-        result = 31 * result + (nodeSuspicions != null ? nodeSuspicions.hashCode() : 0);\n+        result = 31 * result + (nodeSuspicions != null ? nodeSuspicions.hashCode() : 0 );\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
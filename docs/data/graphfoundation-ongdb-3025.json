{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3025",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "137",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3025/GetIndexFilesRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3025/GetIndexFilesRequest.java\nindex 9ce954f027f..86ec745f2c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3025/GetIndexFilesRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3025/GetIndexFilesRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import io.netty.buffer.ByteBuf;\n@@ -40,83 +41,83 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class GetIndexFilesRequest implements StoreCopyRequest\n {\n-    private final StoreId expectedStoreId;\n-    private final long indexId;\n-    private final long requiredTransactionId;\n+  private final StoreId expectedStoreId;\n+  private final long indexId;\n+  private final long requiredTransactionId;\n \n-    public GetIndexFilesRequest( StoreId expectedStoreId, long indexId, long requiredTransactionId )\n-    {\n-        this.expectedStoreId = expectedStoreId;\n-        this.indexId = indexId;\n-        this.requiredTransactionId = requiredTransactionId;\n-    }\n+  public GetIndexFilesRequest(StoreId expectedStoreId, long indexId, long requiredTransactionId)\n+  {\n+    this.expectedStoreId = expectedStoreId;\n+    this.indexId = indexId;\n+    this.requiredTransactionId = requiredTransactionId;\n+  }\n \n-    @Override\n-    public StoreId expectedStoreId()\n-    {\n-        return expectedStoreId;\n-    }\n+  @Override\n+  public StoreId expectedStoreId()\n+  {\n+    return expectedStoreId;\n+  }\n \n-    @Override\n-    public long requiredTransactionId()\n-    {\n-        return requiredTransactionId;\n-    }\n+  @Override\n+  public long requiredTransactionId()\n+  {\n+    return requiredTransactionId;\n+  }\n \n-    public long indexId()\n-    {\n-        return indexId;\n-    }\n+  public long indexId()\n+  {\n+    return indexId;\n+  }\n+\n+  @Override\n+  public RequestMessageType messageType()\n+  {\n+    return RequestMessageType.INDEX_SNAPSHOT;\n+  }\n \n+  static class IndexSnapshotRequestMarshall extends SafeChannelMarshal<GetIndexFilesRequest>\n+  {\n     @Override\n-    public RequestMessageType messageType()\n+    protected GetIndexFilesRequest unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n     {\n-        return RequestMessageType.INDEX_SNAPSHOT;\n+      StoreId storeId = StoreIdMarshal.INSTANCE.unmarshal(channel);\n+      long requiredTransactionId = channel.getLong();\n+      long indexId = channel.getLong();\n+      return new GetIndexFilesRequest(storeId, indexId, requiredTransactionId);\n     }\n \n-    static class IndexSnapshotRequestMarshall extends SafeChannelMarshal<GetIndexFilesRequest>\n-    {\n-        @Override\n-        protected GetIndexFilesRequest unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n-        {\n-            StoreId storeId = StoreIdMarshal.INSTANCE.unmarshal( channel );\n-            long requiredTransactionId = channel.getLong();\n-            long indexId = channel.getLong();\n-            return new GetIndexFilesRequest( storeId, indexId, requiredTransactionId );\n-        }\n-\n-        @Override\n-        public void marshal( GetIndexFilesRequest getIndexFilesRequest, WritableChannel channel ) throws IOException\n-        {\n-            StoreIdMarshal.INSTANCE.marshal( getIndexFilesRequest.expectedStoreId(), channel );\n-            channel.putLong( getIndexFilesRequest.requiredTransactionId() );\n-            channel.putLong( getIndexFilesRequest.indexId() );\n-        }\n-    }\n-\n-    public static class Encoder extends MessageToByteEncoder<GetIndexFilesRequest>\n+    @Override\n+    public void marshal(GetIndexFilesRequest getIndexFilesRequest, WritableChannel channel) throws IOException\n     {\n-        @Override\n-        protected void encode( ChannelHandlerContext ctx, GetIndexFilesRequest msg, ByteBuf out ) throws Exception\n-        {\n-            new IndexSnapshotRequestMarshall().marshal( msg, new NetworkFlushableByteBuf( out ) );\n-        }\n+      StoreIdMarshal.INSTANCE.marshal(getIndexFilesRequest.expectedStoreId(), channel);\n+      channel.putLong(getIndexFilesRequest.requiredTransactionId());\n+      channel.putLong(getIndexFilesRequest.indexId());\n     }\n+  }\n \n-    public static class Decoder extends ByteToMessageDecoder\n+  public static class Encoder extends MessageToByteEncoder<GetIndexFilesRequest>\n+  {\n+    @Override\n+    protected void encode(ChannelHandlerContext ctx, GetIndexFilesRequest msg, ByteBuf out) throws Exception\n     {\n-        @Override\n-        protected void decode( ChannelHandlerContext ctx, ByteBuf in, List<Object> out ) throws Exception\n-        {\n-            GetIndexFilesRequest getIndexFilesRequest = new IndexSnapshotRequestMarshall().unmarshal0( new NetworkReadableClosableChannelNetty4( in ) );\n-            out.add( getIndexFilesRequest );\n-        }\n+      new IndexSnapshotRequestMarshall().marshal(msg, new NetworkFlushableByteBuf(out));\n     }\n+  }\n \n+  public static class Decoder extends ByteToMessageDecoder\n+  {\n     @Override\n-    public String toString()\n+    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception\n     {\n-        return \"GetIndexFilesRequest{\" + \"expectedStoreId=\" + expectedStoreId + \", indexId=\" + indexId + \", requiredTransactionId=\" + requiredTransactionId +\n-                '}';\n+      GetIndexFilesRequest getIndexFilesRequest = new IndexSnapshotRequestMarshall().unmarshal0(new NetworkReadableClosableChannelNetty4(in));\n+      out.add(getIndexFilesRequest);\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"GetIndexFilesRequest{\" + \"expectedStoreId=\" + expectedStoreId + \", indexId=\" + indexId + \", requiredTransactionId=\" + requiredTransactionId +\n+        '}';\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3025/GetIndexFilesRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3025/GetIndexFilesRequest.java\nindex 9ce954f027f..cbfc76683e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3025/GetIndexFilesRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3025/GetIndexFilesRequest.java\n@@ -116,7 +116,6 @@ public class GetIndexFilesRequest implements StoreCopyRequest\n     @Override\n     public String toString()\n     {\n-        return \"GetIndexFilesRequest{\" + \"expectedStoreId=\" + expectedStoreId + \", indexId=\" + indexId + \", requiredTransactionId=\" + requiredTransactionId +\n-                '}';\n+        return \"GetIndexFilesRequest{\" + \"expectedStoreId=\" + expectedStoreId + \", indexId=\" + indexId + \", requiredTransactionId=\" + requiredTransactionId + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
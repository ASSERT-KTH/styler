{
    "project_name": "neo4j-neo4j",
    "error_id": "64",
    "information": {
        "errors": [
            {
                "line": "261",
                "severity": "error",
                "message": "Line is longer than 160 characters (found 174).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        //remove any custom logical logs location\n        Config recoveryConfig = Config.newBuilder().fromConfig( config ).set( GraphDatabaseSettings.transaction_logs_root_path, null ).build();\n        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine(), forceRunRecovery, NullLogProvider.getInstance(),\n                new Monitors(), loadExtensions(), Optional.empty(), EMPTY_CHECKER, memoryTracker, systemClock() );\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler/64/Recovery.java\nindex d28735986af..b62d54baf84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler/64/Recovery.java\n@@ -258,7 +258,9 @@ public final class Recovery\n         requireNonNull( storageEngineFactory );\n         //remove any custom logical logs location\n         Config recoveryConfig = Config.newBuilder().fromConfig( config ).set( GraphDatabaseSettings.transaction_logs_root_path, null ).build();\n-        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine(), forceRunRecovery, NullLogProvider.getInstance(),\n+        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine()\n+        ,forceRunRecovery ,NullLogProvider.getInstance(\n+        ) ,\n                 new Monitors(), loadExtensions(), Optional.empty(), EMPTY_CHECKER, memoryTracker, systemClock() );\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "151",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "155",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "254",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "410",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "155",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/64/Recovery.java\nindex d28735986af..dd77e0dab47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/64/Recovery.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.io.IOException;\n@@ -141,32 +142,33 @@ public final class Recovery\n     /**\n      * Provide recovery helper that can perform recovery of some database described by {@link DatabaseLayout}.\n      *\n-     * @param fs database filesystem\n+     * @param fs        database filesystem\n      * @param pageCache page cache used to perform database recovery.\n-     * @param tracers underlying operation tracers\n-     * @param config custom configuration\n+     * @param tracers   underlying operation tracers\n+     * @param config    custom configuration\n      * @return helper recovery checker\n      */\n-    public static RecoveryFacade recoveryFacade( FileSystemAbstraction fs, PageCache pageCache, Tracers tracers, Config config, MemoryTracker memoryTracker )\n+    public static RecoveryFacade recoveryFacade(FileSystemAbstraction fs, PageCache pageCache, Tracers tracers, Config config, MemoryTracker memoryTracker)\n     {\n-        return new RecoveryFacade( fs, pageCache, new DatabaseTracers( tracers ), config, memoryTracker );\n+        return new RecoveryFacade(fs, pageCache, new DatabaseTracers(tracers), config, memoryTracker);\n     }\n \n     /**\n      * Check if recovery is required for a store described by provided layout.\n      * Custom root location for transaction logs can be provided using {@link GraphDatabaseSettings#transaction_logs_root_path} config setting value.\n+     *\n      * @param databaseLayout layout of database to check for recovery\n-     * @param config custom configuration\n+     * @param config         custom configuration\n      * @return true if recovery is required, false otherwise.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static boolean isRecoveryRequired( DatabaseLayout databaseLayout, Config config, MemoryTracker memoryTracker ) throws Exception\n+    public static boolean isRecoveryRequired(DatabaseLayout databaseLayout, Config config, MemoryTracker memoryTracker) throws Exception\n     {\n-        requireNonNull( databaseLayout );\n-        requireNonNull( config );\n-        try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction() )\n+        requireNonNull(databaseLayout);\n+        requireNonNull(config);\n+        try (DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction())\n         {\n-            return isRecoveryRequired( fs, databaseLayout, config, memoryTracker );\n+            return isRecoveryRequired(fs, databaseLayout, config, memoryTracker);\n         }\n     }\n \n@@ -175,19 +177,20 @@ public final class Recovery\n      * Transaction logs should be located in their default location.\n      * If recovery is not required nothing will be done to the the database or logs.\n      * Note: used by external tools.\n+     *\n      * @param databaseLayout database to recover layout.\n-     * @param tracers underlying events tracers.\n+     * @param tracers        underlying events tracers.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static void performRecovery( DatabaseLayout databaseLayout, DatabaseTracers tracers, MemoryTracker memoryTracker ) throws Exception\n+    public static void performRecovery(DatabaseLayout databaseLayout, DatabaseTracers tracers, MemoryTracker memoryTracker) throws Exception\n     {\n-        requireNonNull( databaseLayout );\n+        requireNonNull(databaseLayout);\n         Config config = defaults();\n-        try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-                JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler();\n-                PageCache pageCache = getPageCache( config, fs, jobScheduler ) )\n+        try (DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n+             JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler();\n+             PageCache pageCache = getPageCache(config, fs, jobScheduler))\n         {\n-            performRecovery( fs, pageCache, tracers, config, databaseLayout, memoryTracker );\n+            performRecovery(fs, pageCache, tracers, config, databaseLayout, memoryTracker);\n         }\n     }\n \n@@ -195,23 +198,23 @@ public final class Recovery\n      * Check if recovery is required for a store described by provided layout.\n      * Custom root location for transaction logs can be provided using {@link GraphDatabaseSettings#transaction_logs_root_path} config setting value.\n      *\n-     * @param fs database filesystem\n+     * @param fs             database filesystem\n      * @param databaseLayout layout of database to check for recovery\n-     * @param config custom configuration\n+     * @param config         custom configuration\n      * @return true if recovery is required, false otherwise.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static boolean isRecoveryRequired( FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config,\n-            MemoryTracker memoryTracker ) throws Exception\n+    public static boolean isRecoveryRequired(FileSystemAbstraction fs, DatabaseLayout databaseLayout, Config config,\n+                                             MemoryTracker memoryTracker) throws Exception\n     {\n-        requireNonNull( databaseLayout );\n-        requireNonNull( config );\n-        requireNonNull( fs );\n-        try ( JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler();\n-                PageCache pageCache = getPageCache( config, fs, jobScheduler ) )\n+        requireNonNull(databaseLayout);\n+        requireNonNull(config);\n+        requireNonNull(fs);\n+        try (JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler();\n+             PageCache pageCache = getPageCache(config, fs, jobScheduler))\n         {\n             StorageEngineFactory storageEngineFactory = StorageEngineFactory.defaultStorageEngine();\n-            return isRecoveryRequired( fs, pageCache, databaseLayout, storageEngineFactory, config, Optional.empty(), memoryTracker );\n+            return isRecoveryRequired(fs, pageCache, databaseLayout, storageEngineFactory, config, Optional.empty(), memoryTracker);\n         }\n     }\n \n@@ -220,16 +223,16 @@ public final class Recovery\n      * <b>Transaction logs should be located in their default location and any provided custom location is ignored.</b>\n      * If recovery is not required nothing will be done to the the database or logs.\n      *\n-     * @param fs database filesystem\n-     * @param pageCache page cache used to perform database recovery.\n-     * @param config custom configuration\n+     * @param fs             database filesystem\n+     * @param pageCache      page cache used to perform database recovery.\n+     * @param config         custom configuration\n      * @param databaseLayout database to recover layout.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static void performRecovery( FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers,\n-            Config config, DatabaseLayout databaseLayout, MemoryTracker memoryTracker ) throws IOException\n+    public static void performRecovery(FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers,\n+                                       Config config, DatabaseLayout databaseLayout, MemoryTracker memoryTracker) throws IOException\n     {\n-        performRecovery( fs, pageCache, tracers, config, databaseLayout, selectStorageEngine( fs, databaseLayout, pageCache, config ), false, memoryTracker );\n+        performRecovery(fs, pageCache, tracers, config, databaseLayout, selectStorageEngine(fs, databaseLayout, pageCache, config), false, memoryTracker);\n     }\n \n     /**\n@@ -237,261 +240,266 @@ public final class Recovery\n      * <b>Transaction logs should be located in their default location and any provided custom location is ignored.</b>\n      * If recovery is not required nothing will be done to the the database or logs.\n      *\n-     * @param fs database filesystem\n-     * @param pageCache page cache used to perform database recovery.\n-     * @param tracers underlying operations tracer\n-     * @param config custom configuration\n-     * @param databaseLayout database to recover layout.\n+     * @param fs                   database filesystem\n+     * @param pageCache            page cache used to perform database recovery.\n+     * @param tracers              underlying operations tracer\n+     * @param config               custom configuration\n+     * @param databaseLayout       database to recover layout.\n      * @param storageEngineFactory storage engine factory\n-     * @param forceRunRecovery to force recovery to run even if the usual checks indicates that it's not required.\n-     * In specific cases, like after store copy there's always a need for doing a recovery or at least to start the db, checkpoint and shut down,\n-     * even if the normal \"is recovery required\" checks says that recovery isn't required.\n+     * @param forceRunRecovery     to force recovery to run even if the usual checks indicates that it's not required.\n+     *                             In specific cases, like after store copy there's always a need for doing a recovery or at least to start the db, checkpoint and shut down,\n+     *                             even if the normal \"is recovery required\" checks says that recovery isn't required.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static void performRecovery( FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers, Config config,\n-            DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory, boolean forceRunRecovery, MemoryTracker memoryTracker ) throws IOException\n+    public static void performRecovery(FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers, Config config,\n+                                       DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory, boolean forceRunRecovery,\n+                                       MemoryTracker memoryTracker) throws IOException\n     {\n-        requireNonNull( fs );\n-        requireNonNull( pageCache );\n-        requireNonNull( config );\n-        requireNonNull( databaseLayout );\n-        requireNonNull( storageEngineFactory );\n+        requireNonNull(fs);\n+        requireNonNull(pageCache);\n+        requireNonNull(config);\n+        requireNonNull(databaseLayout);\n+        requireNonNull(storageEngineFactory);\n         //remove any custom logical logs location\n-        Config recoveryConfig = Config.newBuilder().fromConfig( config ).set( GraphDatabaseSettings.transaction_logs_root_path, null ).build();\n-        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine(), forceRunRecovery, NullLogProvider.getInstance(),\n-                new Monitors(), loadExtensions(), Optional.empty(), EMPTY_CHECKER, memoryTracker, systemClock() );\n+        Config recoveryConfig = Config.newBuilder().fromConfig(config).set(GraphDatabaseSettings.transaction_logs_root_path, null).build();\n+        performRecovery(fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine(), forceRunRecovery,\n+          NullLogProvider.getInstance(),\n+          new Monitors(), loadExtensions(), Optional.empty(), EMPTY_CHECKER, memoryTracker, systemClock());\n     }\n \n     /**\n      * Performs recovery of database described by provided layout.\n      *\n-     * @param fs database filesystem\n-     * @param pageCache page cache used to perform database recovery.\n-     * @param tracers underlying operation tracers\n-     * @param config custom configuration\n-     * @param databaseLayout database to recover layout.\n+     * @param fs                   database filesystem\n+     * @param pageCache            page cache used to perform database recovery.\n+     * @param tracers              underlying operation tracers\n+     * @param config               custom configuration\n+     * @param databaseLayout       database to recover layout.\n      * @param storageEngineFactory {@link StorageEngineFactory} for the storage to recover.\n-     * @param logProvider log provider\n-     * @param globalMonitors global server monitors\n-     * @param extensionFactories extension factories for extensions that should participate in recovery\n-     * @param providedLogFiles log files from database\n-     * @param forceRunRecovery to force recovery to run even if the usual checks indicates that it's not required.\n-     * In specific cases, like after store copy there's always a need for doing a recovery or at least to start the db, checkpoint and shut down,\n-     * even if the normal \"is recovery required\" checks says that recovery isn't required.\n+     * @param logProvider          log provider\n+     * @param globalMonitors       global server monitors\n+     * @param extensionFactories   extension factories for extensions that should participate in recovery\n+     * @param providedLogFiles     log files from database\n+     * @param forceRunRecovery     to force recovery to run even if the usual checks indicates that it's not required.\n+     *                             In specific cases, like after store copy there's always a need for doing a recovery or at least to start the db, checkpoint and shut down,\n+     *                             even if the normal \"is recovery required\" checks says that recovery isn't required.\n      * @throws IOException on any unexpected I/O exception encountered during recovery.\n      */\n-    public static void performRecovery( FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers,\n-            Config config, DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory, boolean forceRunRecovery,\n-            LogProvider logProvider, Monitors globalMonitors,\n-            Iterable<ExtensionFactory<?>> extensionFactories, Optional<LogFiles> providedLogFiles,\n-            RecoveryStartupChecker startupChecker, MemoryTracker memoryTracker, Clock clock ) throws IOException\n+    public static void performRecovery(FileSystemAbstraction fs, PageCache pageCache, DatabaseTracers tracers,\n+                                       Config config, DatabaseLayout databaseLayout, StorageEngineFactory storageEngineFactory, boolean forceRunRecovery,\n+                                       LogProvider logProvider, Monitors globalMonitors,\n+                                       Iterable<ExtensionFactory<?>> extensionFactories, Optional<LogFiles> providedLogFiles,\n+                                       RecoveryStartupChecker startupChecker, MemoryTracker memoryTracker, Clock clock) throws IOException\n     {\n-        Log recoveryLog = logProvider.getLog( Recovery.class );\n-        if ( !forceRunRecovery && !isRecoveryRequired( fs, pageCache, databaseLayout, storageEngineFactory, config, providedLogFiles, memoryTracker ) )\n+        Log recoveryLog = logProvider.getLog(Recovery.class);\n+        if (!forceRunRecovery && !isRecoveryRequired(fs, pageCache, databaseLayout, storageEngineFactory, config, providedLogFiles, memoryTracker))\n         {\n             return;\n         }\n-        checkAllFilesPresence( databaseLayout, fs, pageCache, storageEngineFactory );\n+        checkAllFilesPresence(databaseLayout, fs, pageCache, storageEngineFactory);\n         LifeSupport recoveryLife = new LifeSupport();\n-        Monitors monitors = new Monitors( globalMonitors, logProvider );\n-        DatabasePageCache databasePageCache = new DatabasePageCache( pageCache, IOController.DISABLED );\n-        SimpleLogService logService = new SimpleLogService( logProvider );\n-        VersionAwareLogEntryReader logEntryReader = new VersionAwareLogEntryReader( storageEngineFactory.commandReaderFactory() );\n+        Monitors monitors = new Monitors(globalMonitors, logProvider);\n+        DatabasePageCache databasePageCache = new DatabasePageCache(pageCache, IOController.DISABLED);\n+        SimpleLogService logService = new SimpleLogService(logProvider);\n+        VersionAwareLogEntryReader logEntryReader = new VersionAwareLogEntryReader(storageEngineFactory.commandReaderFactory());\n         DatabaseReadOnlyChecker readOnlyChecker = writable();\n \n-        DatabaseSchemaState schemaState = new DatabaseSchemaState( logProvider );\n+        DatabaseSchemaState schemaState = new DatabaseSchemaState(logProvider);\n         JobScheduler scheduler = JobSchedulerFactory.createInitialisedScheduler();\n \n         VersionContextSupplier versionContextSupplier = EmptyVersionContextSupplier.EMPTY;\n-        DatabaseHealth databaseHealth = new DatabaseHealth( PanicEventGenerator.NO_OP, recoveryLog );\n+        DatabaseHealth databaseHealth = new DatabaseHealth(PanicEventGenerator.NO_OP, recoveryLog);\n \n-        TokenHolders tokenHolders = new TokenHolders( new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TYPE_PROPERTY_KEY ),\n-                new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TYPE_LABEL ),\n-                new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TYPE_RELATIONSHIP_TYPE ) );\n+        TokenHolders tokenHolders = new TokenHolders(new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TYPE_PROPERTY_KEY),\n+          new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TYPE_LABEL),\n+          new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TYPE_RELATIONSHIP_TYPE));\n \n         RecoveryCleanupWorkCollector recoveryCleanupCollector =\n-                new GroupingRecoveryCleanupWorkCollector( scheduler, INDEX_CLEANUP, INDEX_CLEANUP_WORK, databaseLayout.getDatabaseName() );\n-        DatabaseExtensions extensions = instantiateRecoveryExtensions( databaseLayout, fs, config, logService, databasePageCache, scheduler,\n-                                                                       DbmsInfo.TOOL, monitors, tokenHolders, recoveryCleanupCollector, readOnlyChecker,\n-                                                                       extensionFactories, tracers.getPageCacheTracer() );\n-        DefaultIndexProviderMap indexProviderMap = new DefaultIndexProviderMap( extensions, config );\n-\n-        StorageEngine storageEngine = storageEngineFactory.instantiate( fs, databaseLayout, config, databasePageCache, tokenHolders, schemaState,\n-                getConstraintSemantics(), indexProviderMap, NO_LOCK_SERVICE,\n-                new DefaultIdGeneratorFactory( fs, recoveryCleanupCollector, databaseLayout.getDatabaseName() ),\n-                new DefaultIdController(), databaseHealth, logService.getInternalLogProvider(), recoveryCleanupCollector, tracers.getPageCacheTracer(),\n-                true, readOnlyChecker, memoryTracker );\n+          new GroupingRecoveryCleanupWorkCollector(scheduler, INDEX_CLEANUP, INDEX_CLEANUP_WORK, databaseLayout.getDatabaseName());\n+        DatabaseExtensions extensions = instantiateRecoveryExtensions(databaseLayout, fs, config, logService, databasePageCache, scheduler,\n+          DbmsInfo.TOOL, monitors, tokenHolders, recoveryCleanupCollector, readOnlyChecker,\n+          extensionFactories, tracers.getPageCacheTracer());\n+        DefaultIndexProviderMap indexProviderMap = new DefaultIndexProviderMap(extensions, config);\n+\n+        StorageEngine storageEngine = storageEngineFactory.instantiate(fs, databaseLayout, config, databasePageCache, tokenHolders, schemaState,\n+          getConstraintSemantics(), indexProviderMap, NO_LOCK_SERVICE,\n+          new DefaultIdGeneratorFactory(fs, recoveryCleanupCollector, databaseLayout.getDatabaseName()),\n+          new DefaultIdController(), databaseHealth, logService.getInternalLogProvider(), recoveryCleanupCollector, tracers.getPageCacheTracer(),\n+          true, readOnlyChecker, memoryTracker);\n \n         // Label index\n-        FullScanStoreView fullScanStoreView = new FullScanStoreView( NO_LOCK_SERVICE, storageEngine::newReader, config, scheduler );\n-        LabelScanStore labelScanStore = Database.buildLabelIndex( recoveryCleanupCollector, storageEngine, fullScanStoreView, monitors,\n-                logProvider, databasePageCache, databaseLayout, fs, readOnlyChecker, config, tracers.getPageCacheTracer(), memoryTracker );\n+        FullScanStoreView fullScanStoreView = new FullScanStoreView(NO_LOCK_SERVICE, storageEngine::newReader, config, scheduler);\n+        LabelScanStore labelScanStore = Database.buildLabelIndex(recoveryCleanupCollector, storageEngine, fullScanStoreView, monitors,\n+          logProvider, databasePageCache, databaseLayout, fs, readOnlyChecker, config, tracers.getPageCacheTracer(), memoryTracker);\n \n         // Schema indexes\n         IndexStoreViewFactory indexStoreViewFactory =\n-                new IndexStoreViewFactory( config, storageEngine::newReader, NO_LOCKS, fullScanStoreView,\n-                                           labelScanStore, NO_LOCK_SERVICE, logProvider );\n+          new IndexStoreViewFactory(config, storageEngine::newReader, NO_LOCKS, fullScanStoreView,\n+            labelScanStore, NO_LOCK_SERVICE, logProvider);\n \n         IndexStatisticsStore indexStatisticsStore =\n-                new IndexStatisticsStore( databasePageCache, databaseLayout, recoveryCleanupCollector, readOnlyChecker, tracers.getPageCacheTracer() );\n-        IndexingService indexingService = Database.buildIndexingService( storageEngine, schemaState, indexStoreViewFactory, indexStatisticsStore,\n-                config, scheduler, indexProviderMap, tokenHolders, logProvider, logProvider, monitors.newMonitor( IndexingService.Monitor.class ),\n-                tracers.getPageCacheTracer(), memoryTracker, databaseLayout.getDatabaseName(), readOnlyChecker );\n+          new IndexStatisticsStore(databasePageCache, databaseLayout, recoveryCleanupCollector, readOnlyChecker, tracers.getPageCacheTracer());\n+        IndexingService indexingService = Database.buildIndexingService(storageEngine, schemaState, indexStoreViewFactory, indexStatisticsStore,\n+          config, scheduler, indexProviderMap, tokenHolders, logProvider, logProvider, monitors.newMonitor(IndexingService.Monitor.class),\n+          tracers.getPageCacheTracer(), memoryTracker, databaseLayout.getDatabaseName(), readOnlyChecker);\n \n         MetadataProvider metadataProvider = storageEngine.metadataProvider();\n \n         Dependencies dependencies = new Dependencies();\n-        dependencies.satisfyDependencies( databaseLayout, config, databasePageCache, fs, logProvider, tokenHolders, schemaState, getConstraintSemantics(),\n-                NO_LOCK_SERVICE, databaseHealth, new DefaultIdGeneratorFactory( fs, recoveryCleanupCollector, databaseLayout.getDatabaseName() ),\n-                new DefaultIdController(), readOnlyChecker, versionContextSupplier, logService, metadataProvider );\n+        dependencies.satisfyDependencies(databaseLayout, config, databasePageCache, fs, logProvider, tokenHolders, schemaState, getConstraintSemantics(),\n+          NO_LOCK_SERVICE, databaseHealth, new DefaultIdGeneratorFactory(fs, recoveryCleanupCollector, databaseLayout.getDatabaseName()),\n+          new DefaultIdController(), readOnlyChecker, versionContextSupplier, logService, metadataProvider);\n \n-        LogFiles logFiles = LogFilesBuilder.builder( databaseLayout, fs )\n-                .withLogEntryReader( logEntryReader )\n-                .withConfig( config )\n-                .withDependencies( dependencies )\n-                .withMemoryTracker( memoryTracker )\n-                .build();\n+        LogFiles logFiles = LogFilesBuilder.builder(databaseLayout, fs)\n+          .withLogEntryReader(logEntryReader)\n+          .withConfig(config)\n+          .withDependencies(dependencies)\n+          .withMemoryTracker(memoryTracker)\n+          .build();\n \n-        boolean failOnCorruptedLogFiles = config.get( GraphDatabaseInternalSettings.fail_on_corrupted_log_files );\n-        validateStoreId( logFiles, storageEngine.getStoreId(), config );\n+        boolean failOnCorruptedLogFiles = config.get(GraphDatabaseInternalSettings.fail_on_corrupted_log_files);\n+        validateStoreId(logFiles, storageEngine.getStoreId(), config);\n \n         TransactionMetadataCache metadataCache = new TransactionMetadataCache();\n-        PhysicalLogicalTransactionStore transactionStore = new PhysicalLogicalTransactionStore( logFiles, metadataCache, logEntryReader, monitors,\n-                failOnCorruptedLogFiles );\n-        BatchingTransactionAppender transactionAppender = new BatchingTransactionAppender( logFiles, LogRotation.NO_ROTATION, metadataCache,\n-                metadataProvider, databaseHealth );\n+        PhysicalLogicalTransactionStore transactionStore = new PhysicalLogicalTransactionStore(logFiles, metadataCache, logEntryReader, monitors,\n+          failOnCorruptedLogFiles);\n+        BatchingTransactionAppender transactionAppender = new BatchingTransactionAppender(logFiles, LogRotation.NO_ROTATION, metadataCache,\n+          metadataProvider, databaseHealth);\n \n         LifeSupport schemaLife = new LifeSupport();\n-        schemaLife.add( storageEngine.schemaAndTokensLifecycle() );\n-        schemaLife.add( indexingService );\n+        schemaLife.add(storageEngine.schemaAndTokensLifecycle());\n+        schemaLife.add(indexingService);\n \n-        var doParallelRecovery = config.get( GraphDatabaseInternalSettings.do_parallel_recovery );\n+        var doParallelRecovery = config.get(GraphDatabaseInternalSettings.do_parallel_recovery);\n         TransactionLogsRecovery transactionLogsRecovery =\n-                transactionLogRecovery( fs, metadataProvider, monitors.newMonitor( RecoveryMonitor.class ),\n-                                        monitors.newMonitor( RecoveryStartInformationProvider.Monitor.class ), logFiles, storageEngine,\n-                                        transactionStore, metadataProvider, schemaLife, databaseLayout, failOnCorruptedLogFiles, recoveryLog,\n-                                        startupChecker, tracers.getPageCacheTracer(), memoryTracker, doParallelRecovery );\n+          transactionLogRecovery(fs, metadataProvider, monitors.newMonitor(RecoveryMonitor.class),\n+            monitors.newMonitor(RecoveryStartInformationProvider.Monitor.class), logFiles, storageEngine,\n+            transactionStore, metadataProvider, schemaLife, databaseLayout, failOnCorruptedLogFiles, recoveryLog,\n+            startupChecker, tracers.getPageCacheTracer(), memoryTracker, doParallelRecovery);\n \n-        CheckPointerImpl.ForceOperation forceOperation = new DefaultForceOperation( indexingService, labelScanStore, storageEngine );\n+        CheckPointerImpl.ForceOperation forceOperation = new DefaultForceOperation(indexingService, labelScanStore, storageEngine);\n         var checkpointAppender = logFiles.getCheckpointFile().getCheckpointAppender();\n         CheckPointerImpl checkPointer =\n-                new CheckPointerImpl( metadataProvider, RecoveryThreshold.INSTANCE, forceOperation, LogPruning.NO_PRUNING, checkpointAppender,\n-                        databaseHealth, logProvider, tracers, IOController.DISABLED, new StoreCopyCheckPointMutex(), versionContextSupplier, clock );\n-        recoveryLife.add( scheduler );\n-        recoveryLife.add( recoveryCleanupCollector );\n-        recoveryLife.add( extensions );\n-        recoveryLife.add( indexProviderMap );\n-        recoveryLife.add( storageEngine );\n-        recoveryLife.add( new MissingTransactionLogsCheck( databaseLayout, config, fs, logFiles, recoveryLog ) );\n-        recoveryLife.add( labelScanStore );\n-        recoveryLife.add( logFiles );\n-        recoveryLife.add( transactionLogsRecovery );\n-        recoveryLife.add( transactionAppender );\n-        recoveryLife.add( checkPointer );\n+          new CheckPointerImpl(metadataProvider, RecoveryThreshold.INSTANCE, forceOperation, LogPruning.NO_PRUNING, checkpointAppender,\n+            databaseHealth, logProvider, tracers, IOController.DISABLED, new StoreCopyCheckPointMutex(), versionContextSupplier, clock);\n+        recoveryLife.add(scheduler);\n+        recoveryLife.add(recoveryCleanupCollector);\n+        recoveryLife.add(extensions);\n+        recoveryLife.add(indexProviderMap);\n+        recoveryLife.add(storageEngine);\n+        recoveryLife.add(new MissingTransactionLogsCheck(databaseLayout, config, fs, logFiles, recoveryLog));\n+        recoveryLife.add(labelScanStore);\n+        recoveryLife.add(logFiles);\n+        recoveryLife.add(transactionLogsRecovery);\n+        recoveryLife.add(transactionAppender);\n+        recoveryLife.add(checkPointer);\n         try\n         {\n             recoveryLife.start();\n \n-            if ( databaseHealth.isHealthy() )\n+            if (databaseHealth.isHealthy())\n             {\n-                checkPointer.forceCheckPoint( new SimpleTriggerInfo( \"Recovery completed.\" ) );\n+                checkPointer.forceCheckPoint(new SimpleTriggerInfo(\"Recovery completed.\"));\n             }\n-        }\n-        finally\n+        } finally\n         {\n             recoveryLife.shutdown();\n         }\n     }\n \n-    public static void validateStoreId( LogFiles logFiles, StoreId storeId, Config config )\n+    public static void validateStoreId(LogFiles logFiles, StoreId storeId, Config config)\n     {\n-        if ( !config.get( GraphDatabaseInternalSettings.recovery_ignore_store_id_validation ) )\n+        if (!config.get(GraphDatabaseInternalSettings.recovery_ignore_store_id_validation))\n         {\n             StoreId txStoreId = logFiles.getTailInformation().lastStoreId;\n-            if ( !StoreId.UNKNOWN.equals( txStoreId ) )\n+            if (!StoreId.UNKNOWN.equals(txStoreId))\n             {\n-                if ( !storeId.equalsIgnoringVersion( txStoreId ) )\n+                if (!storeId.equalsIgnoringVersion(txStoreId))\n                 {\n-                    throw new RuntimeException( \"Mismatching store id. Store StoreId: \" + storeId +\n-                            \". Transaction log StoreId: \" + txStoreId );\n+                    throw new RuntimeException(\"Mismatching store id. Store StoreId: \" + storeId +\n+                      \". Transaction log StoreId: \" + txStoreId);\n                 }\n             }\n         }\n     }\n \n-    private static void checkAllFilesPresence( DatabaseLayout databaseLayout, FileSystemAbstraction fs, PageCache pageCache,\n-            StorageEngineFactory storageEngineFactory )\n+    private static void checkAllFilesPresence(DatabaseLayout databaseLayout, FileSystemAbstraction fs, PageCache pageCache,\n+                                              StorageEngineFactory storageEngineFactory)\n     {\n-        StorageFilesState state = storageEngineFactory.checkStoreFileState( fs, databaseLayout, pageCache );\n-        if ( state.getRecoveryState() == RecoveryState.UNRECOVERABLE )\n+        StorageFilesState state = storageEngineFactory.checkStoreFileState(fs, databaseLayout, pageCache);\n+        if (state.getRecoveryState() == RecoveryState.UNRECOVERABLE)\n         {\n-            throw new RuntimeException( format( \"Store files %s is(are) missing and recovery is not possible. Please restore from a consistent backup.\",\n-                    state.getMissingFiles() ) );\n+            throw new RuntimeException(format(\"Store files %s is(are) missing and recovery is not possible. Please restore from a consistent backup.\",\n+              state.getMissingFiles()));\n         }\n     }\n \n-    private static TransactionLogsRecovery transactionLogRecovery( FileSystemAbstraction fileSystemAbstraction, TransactionIdStore transactionIdStore,\n-            RecoveryMonitor recoveryMonitor, RecoveryStartInformationProvider.Monitor positionMonitor, LogFiles logFiles,\n-            StorageEngine storageEngine, LogicalTransactionStore logicalTransactionStore, LogVersionRepository logVersionRepository,\n-            Lifecycle schemaLife, DatabaseLayout databaseLayout, boolean failOnCorruptedLogFiles, Log log, RecoveryStartupChecker startupChecker,\n-            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker, boolean doParallelRecovery )\n+    private static TransactionLogsRecovery transactionLogRecovery(FileSystemAbstraction fileSystemAbstraction, TransactionIdStore transactionIdStore,\n+                                                                  RecoveryMonitor recoveryMonitor, RecoveryStartInformationProvider.Monitor positionMonitor,\n+                                                                  LogFiles logFiles,\n+                                                                  StorageEngine storageEngine, LogicalTransactionStore logicalTransactionStore,\n+                                                                  LogVersionRepository logVersionRepository,\n+                                                                  Lifecycle schemaLife, DatabaseLayout databaseLayout, boolean failOnCorruptedLogFiles, Log log,\n+                                                                  RecoveryStartupChecker startupChecker,\n+                                                                  PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker, boolean doParallelRecovery)\n     {\n-        RecoveryService recoveryService = new DefaultRecoveryService( storageEngine, transactionIdStore, logicalTransactionStore,\n-                                                                      logVersionRepository, logFiles, positionMonitor, log, doParallelRecovery );\n+        RecoveryService recoveryService = new DefaultRecoveryService(storageEngine, transactionIdStore, logicalTransactionStore,\n+          logVersionRepository, logFiles, positionMonitor, log, doParallelRecovery);\n         CorruptedLogsTruncator logsTruncator =\n-                new CorruptedLogsTruncator( databaseLayout.databaseDirectory(), logFiles, fileSystemAbstraction, memoryTracker );\n-        ProgressReporter progressReporter = new LogProgressReporter( log );\n-        return new TransactionLogsRecovery( recoveryService, logsTruncator, schemaLife, recoveryMonitor, progressReporter, failOnCorruptedLogFiles,\n-                startupChecker, pageCacheTracer );\n+          new CorruptedLogsTruncator(databaseLayout.databaseDirectory(), logFiles, fileSystemAbstraction, memoryTracker);\n+        ProgressReporter progressReporter = new LogProgressReporter(log);\n+        return new TransactionLogsRecovery(recoveryService, logsTruncator, schemaLife, recoveryMonitor, progressReporter, failOnCorruptedLogFiles,\n+          startupChecker, pageCacheTracer);\n     }\n \n     private static Iterable<ExtensionFactory<?>> loadExtensions()\n     {\n-        return Iterables.cast( Services.loadAll( ExtensionFactory.class ) );\n+        return Iterables.cast(Services.loadAll(ExtensionFactory.class));\n     }\n \n-    private static DatabaseExtensions instantiateRecoveryExtensions( DatabaseLayout databaseLayout, FileSystemAbstraction fileSystem, Config config,\n-                                                                     LogService logService, PageCache pageCache, JobScheduler jobScheduler,\n-                                                                     DbmsInfo dbmsInfo, Monitors monitors, TokenHolders tokenHolders,\n-                                                                     RecoveryCleanupWorkCollector recoveryCleanupCollector,\n-                                                                     DatabaseReadOnlyChecker readOnlyChecker,\n-                                                                     Iterable<ExtensionFactory<?>> extensionFactories,\n-                                                                     PageCacheTracer pageCacheTracer )\n+    private static DatabaseExtensions instantiateRecoveryExtensions(DatabaseLayout databaseLayout, FileSystemAbstraction fileSystem, Config config,\n+                                                                    LogService logService, PageCache pageCache, JobScheduler jobScheduler,\n+                                                                    DbmsInfo dbmsInfo, Monitors monitors, TokenHolders tokenHolders,\n+                                                                    RecoveryCleanupWorkCollector recoveryCleanupCollector,\n+                                                                    DatabaseReadOnlyChecker readOnlyChecker,\n+                                                                    Iterable<ExtensionFactory<?>> extensionFactories,\n+                                                                    PageCacheTracer pageCacheTracer)\n     {\n-        List<ExtensionFactory<?>> recoveryExtensions = stream( extensionFactories )\n-                .filter( extension -> extension.getClass().isAnnotationPresent( RecoveryExtension.class ) )\n-                .collect( toList() );\n+        List<ExtensionFactory<?>> recoveryExtensions = stream(extensionFactories)\n+          .filter(extension -> extension.getClass().isAnnotationPresent(RecoveryExtension.class))\n+          .collect(toList());\n \n         Dependencies deps = new Dependencies();\n-        NonListenableMonitors nonListenableMonitors = new NonListenableMonitors( monitors, logService.getInternalLogProvider() );\n-        deps.satisfyDependencies( fileSystem, config, logService, pageCache, nonListenableMonitors, jobScheduler,\n-                tokenHolders, recoveryCleanupCollector, pageCacheTracer, databaseLayout, readOnlyChecker );\n-        DatabaseExtensionContext extensionContext = new DatabaseExtensionContext( databaseLayout, dbmsInfo, deps );\n-        return new DatabaseExtensions( extensionContext, recoveryExtensions, deps, ExtensionFailureStrategies.fail() );\n+        NonListenableMonitors nonListenableMonitors = new NonListenableMonitors(monitors, logService.getInternalLogProvider());\n+        deps.satisfyDependencies(fileSystem, config, logService, pageCache, nonListenableMonitors, jobScheduler,\n+          tokenHolders, recoveryCleanupCollector, pageCacheTracer, databaseLayout, readOnlyChecker);\n+        DatabaseExtensionContext extensionContext = new DatabaseExtensionContext(databaseLayout, dbmsInfo, deps);\n+        return new DatabaseExtensions(extensionContext, recoveryExtensions, deps, ExtensionFailureStrategies.fail());\n     }\n \n-    private static boolean isRecoveryRequired( FileSystemAbstraction fs, PageCache pageCache, DatabaseLayout databaseLayout,\n-            StorageEngineFactory storageEngineFactory, Config config, Optional<LogFiles> logFiles, MemoryTracker memoryTracker ) throws IOException\n+    private static boolean isRecoveryRequired(FileSystemAbstraction fs, PageCache pageCache, DatabaseLayout databaseLayout,\n+                                              StorageEngineFactory storageEngineFactory, Config config, Optional<LogFiles> logFiles,\n+                                              MemoryTracker memoryTracker) throws IOException\n     {\n-        RecoveryRequiredChecker requiredChecker = new RecoveryRequiredChecker( fs, pageCache, config, storageEngineFactory );\n-        return logFiles.isPresent() ? requiredChecker.isRecoveryRequiredAt( databaseLayout, logFiles.get() )\n-                                          : requiredChecker.isRecoveryRequiredAt( databaseLayout, memoryTracker );\n+        RecoveryRequiredChecker requiredChecker = new RecoveryRequiredChecker(fs, pageCache, config, storageEngineFactory);\n+        return logFiles.isPresent() ? requiredChecker.isRecoveryRequiredAt(databaseLayout, logFiles.get())\n+          : requiredChecker.isRecoveryRequiredAt(databaseLayout, memoryTracker);\n     }\n \n-    private static PageCache getPageCache( Config config, FileSystemAbstraction fs, JobScheduler jobScheduler )\n+    private static PageCache getPageCache(Config config, FileSystemAbstraction fs, JobScheduler jobScheduler)\n     {\n         ConfiguringPageCacheFactory pageCacheFactory =\n-                new ConfiguringPageCacheFactory( fs, config, PageCacheTracer.NULL, NullLog.getInstance(), jobScheduler, Clocks.nanoClock(), new MemoryPools() );\n+          new ConfiguringPageCacheFactory(fs, config, PageCacheTracer.NULL, NullLog.getInstance(), jobScheduler, Clocks.nanoClock(), new MemoryPools());\n         return pageCacheFactory.getOrCreatePageCache();\n     }\n \n-    static void throwUnableToCleanRecover( Throwable t )\n+    static void throwUnableToCleanRecover(Throwable t)\n     {\n         throw new RuntimeException(\n-                \"Error reading transaction logs, recovery not possible. To force the database to start anyway, you can specify '\" +\n-                        GraphDatabaseInternalSettings.fail_on_corrupted_log_files.name() + \"=false'. This will try to recover as much \" +\n-                        \"as possible and then truncate the corrupt part of the transaction log. Doing this means your database \" +\n-                        \"integrity might be compromised, please consider restoring from a consistent backup instead.\", t );\n+          \"Error reading transaction logs, recovery not possible. To force the database to start anyway, you can specify '\" +\n+            GraphDatabaseInternalSettings.fail_on_corrupted_log_files.name() + \"=false'. This will try to recover as much \" +\n+            \"as possible and then truncate the corrupt part of the transaction log. Doing this means your database \" +\n+            \"integrity might be compromised, please consider restoring from a consistent backup instead.\", t);\n     }\n \n     // We need to create monitors that do not allow listener registration here since at this point another version of extensions already stared by owning\n@@ -499,13 +507,13 @@ public final class Recovery\n     // for example duplicated logging records in user facing logs\n     private static class NonListenableMonitors extends Monitors\n     {\n-        NonListenableMonitors( Monitors monitors, LogProvider logProvider )\n+        NonListenableMonitors(Monitors monitors, LogProvider logProvider)\n         {\n-            super( monitors, logProvider );\n+            super(monitors, logProvider);\n         }\n \n         @Override\n-        public void addMonitorListener( Object monitorListener, String... tags )\n+        public void addMonitorListener(Object monitorListener, String... tags)\n         {\n         }\n     }\n@@ -518,8 +526,8 @@ public final class Recovery\n         private final LogFiles logFiles;\n         private final Log log;\n \n-        MissingTransactionLogsCheck( DatabaseLayout databaseLayout, Config config, FileSystemAbstraction fs,\n-                                     LogFiles logFiles, Log log )\n+        MissingTransactionLogsCheck(DatabaseLayout databaseLayout, Config config, FileSystemAbstraction fs,\n+                                    LogFiles logFiles, Log log)\n         {\n             this.databaseLayout = databaseLayout;\n             this.config = config;\n@@ -536,39 +544,39 @@ public final class Recovery\n \n         private void checkForMissingLogFiles() throws IOException\n         {\n-            if ( logFiles.getTailInformation().logsMissing() )\n+            if (logFiles.getTailInformation().logsMissing())\n             {\n-                if ( config.get( GraphDatabaseSettings.fail_on_missing_files ) )\n+                if (config.get(GraphDatabaseSettings.fail_on_missing_files))\n                 {\n-                    log.error( \"Transaction logs are missing and recovery is not possible.\" );\n-                    log.info( \"To force the database to start anyway, you can specify '%s=false'. \" +\n-                            \"This will create new transaction log and will update database metadata accordingly. \" +\n-                            \"Doing this means your database integrity might be compromised, \" +\n-                            \"please consider restoring from a consistent backup instead.\",\n-                            GraphDatabaseSettings.fail_on_missing_files.name() );\n+                    log.error(\"Transaction logs are missing and recovery is not possible.\");\n+                    log.info(\"To force the database to start anyway, you can specify '%s=false'. \" +\n+                        \"This will create new transaction log and will update database metadata accordingly. \" +\n+                        \"Doing this means your database integrity might be compromised, \" +\n+                        \"please consider restoring from a consistent backup instead.\",\n+                      GraphDatabaseSettings.fail_on_missing_files.name());\n \n                     Path[] logFiles = findLegacyLogFiles();\n-                    if ( logFiles.length > 0 )\n+                    if (logFiles.length > 0)\n                     {\n-                        log.warn( \"Transaction log files were found in database directory, rather than the transaction log directory.\" );\n-                        log.warn( \"Please move or remove the following %s misplaced transaction log file or files:\", logFiles.length );\n-                        for ( Path logFile : logFiles )\n+                        log.warn(\"Transaction log files were found in database directory, rather than the transaction log directory.\");\n+                        log.warn(\"Please move or remove the following %s misplaced transaction log file or files:\", logFiles.length);\n+                        for (Path logFile : logFiles)\n                         {\n-                            log.warn( logFile.toAbsolutePath().toString() );\n+                            log.warn(logFile.toAbsolutePath().toString());\n                         }\n                     }\n \n-                    throw new RuntimeException( \"Transaction logs are missing and recovery is not possible.\" );\n+                    throw new RuntimeException(\"Transaction logs are missing and recovery is not possible.\");\n                 }\n-                log.warn( \"No transaction logs were detected, but recovery was forced by user.\" );\n+                log.warn(\"No transaction logs were detected, but recovery was forced by user.\");\n             }\n         }\n \n         private Path[] findLegacyLogFiles() throws IOException\n         {\n-            LegacyTransactionLogsLocator locator = new LegacyTransactionLogsLocator( Config.defaults(), databaseLayout );\n+            LegacyTransactionLogsLocator locator = new LegacyTransactionLogsLocator(Config.defaults(), databaseLayout);\n             Path logsDirectory = locator.getTransactionLogsDirectory();\n-            TransactionLogFilesHelper logFilesHelper = new TransactionLogFilesHelper( fs, logsDirectory );\n+            TransactionLogFilesHelper logFilesHelper = new TransactionLogFilesHelper(fs, logsDirectory);\n             return logFilesHelper.getMatchedFiles();\n         }\n     }\n",
            "diff_size": 223
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler_random/64/Recovery.java\nindex d28735986af..b62d54baf84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/64/Recovery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/styler_random/64/Recovery.java\n@@ -258,7 +258,9 @@ public final class Recovery\n         requireNonNull( storageEngineFactory );\n         //remove any custom logical logs location\n         Config recoveryConfig = Config.newBuilder().fromConfig( config ).set( GraphDatabaseSettings.transaction_logs_root_path, null ).build();\n-        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine(), forceRunRecovery, NullLogProvider.getInstance(),\n+        performRecovery( fs, pageCache, tracers, recoveryConfig, databaseLayout, StorageEngineFactory.defaultStorageEngine()\n+        ,forceRunRecovery ,NullLogProvider.getInstance(\n+        ) ,\n                 new Monitors(), loadExtensions(), Optional.empty(), EMPTY_CHECKER, memoryTracker, systemClock() );\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
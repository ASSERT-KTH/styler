{
    "project_name": "Activiti-Activiti",
    "error_id": "166",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.process.model.builders;\n\nimport java.util.LinkedHashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/166/StartMessagePayloadBuilder.java\nindex d264d28080c..22f7fcfcbe3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/166/StartMessagePayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.LinkedHashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/166/StartMessagePayloadBuilder.java\nindex d264d28080c..d134e6f8c18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/166/StartMessagePayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.LinkedHashMap;\n@@ -31,8 +32,8 @@ public class StartMessagePayloadBuilder {\n         Objects.requireNonNull(messagePayload, \"messagePayload must not be null\");\n \n         return new StartMessagePayloadBuilder().withName(messagePayload.getName())\n-                                               .withBusinessKey(messagePayload.getBusinessKey())\n-                                               .withVariables(messagePayload.getVariables());\n+                .withBusinessKey(messagePayload.getBusinessKey())\n+                .withVariables(messagePayload.getVariables());\n     }\n \n     public static StartMessagePayloadBuilder start(String name) {\n@@ -59,7 +60,7 @@ public class StartMessagePayloadBuilder {\n             this.variables = new LinkedHashMap<>();\n         }\n         this.variables.put(name,\n-                           value);\n+                value);\n         return this;\n     }\n \n@@ -71,7 +72,7 @@ public class StartMessagePayloadBuilder {\n \n     public StartMessagePayload build() {\n         return new StartMessagePayload(name,\n-                                       businessKey,\n-                                       this.variables);\n+                businessKey,\n+                this.variables);\n     }\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/166/StartMessagePayloadBuilder.java\nindex d264d28080c..91893eee2a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/166/StartMessagePayloadBuilder.java\n@@ -18,60 +18,52 @@ package org.activiti.api.process.model.builders;\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Objects;\n-\n import org.activiti.api.process.model.payloads.StartMessagePayload;\n \n+\n public class StartMessagePayloadBuilder {\n \n-    private String name;\n-    private String businessKey;\n-    private Map<String, Object> variables;\n+  private String name;\n \n-    public static StartMessagePayloadBuilder from(StartMessagePayload messagePayload) {\n-        Objects.requireNonNull(messagePayload, \"messagePayload must not be null\");\n+  private String businessKey;\n \n-        return new StartMessagePayloadBuilder().withName(messagePayload.getName())\n-                                               .withBusinessKey(messagePayload.getBusinessKey())\n-                                               .withVariables(messagePayload.getVariables());\n-    }\n+  private Map<String, Object> variables;\n+  public static StartMessagePayloadBuilder from(StartMessagePayload messagePayload) {\n+    Objects.requireNonNull(messagePayload,\n+                           \"messagePayload must not be null\");\n+    return new StartMessagePayloadBuilder().withName(messagePayload.getName()).withBusinessKey(messagePayload.getBusinessKey()).withVariables(messagePayload.getVariables());\n+  }\n \n-    public static StartMessagePayloadBuilder start(String name) {\n-        return new StartMessagePayloadBuilder().withName(name);\n-    }\n+  public static StartMessagePayloadBuilder start(String name) {\n+    return new StartMessagePayloadBuilder().withName(name);\n+  }\n \n-    public StartMessagePayloadBuilder withName(String name) {\n-        Objects.requireNonNull(name, \"name must not be null\");\n+  public StartMessagePayloadBuilder withName(String name) {\n+    Objects.requireNonNull(name, \"name must not be null\");\n+    this.name = name;\n+    return this;\n+  }\n \n-        this.name = name;\n+  public StartMessagePayloadBuilder withVariables(Map<String, Object> variables) {\n+    this.variables = variables;\n+    return this;\n+  }\n \n-        return this;\n+  public StartMessagePayloadBuilder withVariable(String name, Object value) {\n+    if (this.variables == null) {\n+      this.variables = new LinkedHashMap<>();\n     }\n+    this.variables.put(name, value);\n+    return this;\n+  }\n \n-    public StartMessagePayloadBuilder withVariables(Map<String, Object> variables) {\n-        this.variables = variables;\n+  public StartMessagePayloadBuilder withBusinessKey(String businessKey) {\n+    this.businessKey = businessKey;\n+    return this;\n+  }\n \n-        return this;\n-    }\n+  public StartMessagePayload build() {\n+    return new StartMessagePayload(name, businessKey, this.variables);\n+  }\n \n-    public StartMessagePayloadBuilder withVariable(String name,\n-                                                   Object value) {\n-        if (this.variables == null) {\n-            this.variables = new LinkedHashMap<>();\n-        }\n-        this.variables.put(name,\n-                           value);\n-        return this;\n-    }\n-\n-    public StartMessagePayloadBuilder withBusinessKey(String businessKey) {\n-        this.businessKey = businessKey;\n-\n-        return this;\n-    }\n-\n-    public StartMessagePayload build() {\n-        return new StartMessagePayload(name,\n-                                       businessKey,\n-                                       this.variables);\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/166/StartMessagePayloadBuilder.java\nindex d264d28080c..22f7fcfcbe3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/166/StartMessagePayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.LinkedHashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/166/StartMessagePayloadBuilder.java\nindex d264d28080c..22f7fcfcbe3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/166/StartMessagePayloadBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/166/StartMessagePayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.LinkedHashMap;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
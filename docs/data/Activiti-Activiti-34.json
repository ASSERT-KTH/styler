{
    "project_name": "Activiti-Activiti",
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.delegate;\n\nimport java.util.Map;\nimport java.util.Optional;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/34/ThrowMessage.java\nindex 7d1d54285b4..8167f59a9f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/34/ThrowMessage.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.delegate;\n \n import java.util.Map;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/34/ThrowMessage.java\nindex 7d1d54285b4..ccf08983d8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/34/ThrowMessage.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.delegate;\n \n import java.util.Map;\n@@ -38,7 +39,7 @@ public class ThrowMessage {\n     public String getName() {\n         return name;\n     }\n-    \n+\n     public Optional<Map<String, Object>> getPayload() {\n         return payload;\n     }\n@@ -53,6 +54,7 @@ public class ThrowMessage {\n \n     /**\n      * Creates builder to build {@link ThrowMessage}.\n+     *\n      * @return created builder\n      */\n     public static INameStage builder() {\n@@ -65,10 +67,11 @@ public class ThrowMessage {\n     public interface INameStage {\n \n         /**\n-        * Builder method for name parameter.\n-        * @param name field to set\n-        * @return builder\n-        */\n+         * Builder method for name parameter.\n+         *\n+         * @param name field to set\n+         * @return builder\n+         */\n         public IBuildStage name(String name);\n     }\n \n@@ -78,30 +81,34 @@ public class ThrowMessage {\n     public interface IBuildStage {\n \n         /**\n-        * Builder method for payload parameter.\n-        * @param payload field to set\n-        * @return builder\n-        */\n+         * Builder method for payload parameter.\n+         *\n+         * @param payload field to set\n+         * @return builder\n+         */\n         public IBuildStage payload(Optional<Map<String, Object>> payload);\n \n         /**\n-        * Builder method for businessKey parameter.\n-        * @param businessKey field to set\n-        * @return builder\n-        */\n+         * Builder method for businessKey parameter.\n+         *\n+         * @param businessKey field to set\n+         * @return builder\n+         */\n         public IBuildStage businessKey(Optional<String> businessKey);\n \n         /**\n-        * Builder method for correlationKey parameter.\n-        * @param correlationKey field to set\n-        * @return builder\n-        */\n+         * Builder method for correlationKey parameter.\n+         *\n+         * @param correlationKey field to set\n+         * @return builder\n+         */\n         public IBuildStage correlationKey(Optional<String> correlationKey);\n \n         /**\n-        * Builder method of the builder.\n-        * @return built class\n-        */\n+         * Builder method of the builder.\n+         *\n+         * @return built class\n+         */\n         public ThrowMessage build();\n     }\n \n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 80.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 104.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 113.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 121.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 129.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/34/ThrowMessage.java\nindex 7d1d54285b4..aa4b6c0601b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/34/ThrowMessage.java\n@@ -15,136 +15,158 @@ package org.activiti.engine.impl.delegate;\n import java.util.Map;\n import java.util.Optional;\n \n+\n public class ThrowMessage {\n-    private String name;\n-    private Optional<Map<String, Object>> payload = Optional.empty();\n-    private Optional<String> businessKey = Optional.empty();\n-    private Optional<String> correlationKey = Optional.empty();\n \n-    private ThrowMessage(ThrowMessagBuilder builder) {\n-        this.name = builder.name;\n-        this.payload = builder.payload;\n-        this.businessKey = builder.businessKey;\n-        this.correlationKey = builder.correlationKey;\n-    }\n+  private String name;\n \n-    ThrowMessage() {\n-    }\n+  private Optional<Map<String, Object>> payload = Optional.empty();\n \n-    public ThrowMessage(String name) {\n-        this.name = name;\n-    }\n+  private Optional<String> businessKey = Optional.empty();\n \n-    public String getName() {\n-        return name;\n-    }\n-    \n-    public Optional<Map<String, Object>> getPayload() {\n-        return payload;\n-    }\n+  private Optional<String> correlationKey = Optional.empty();\n \n-    public Optional<String> getBusinessKey() {\n-        return businessKey;\n-    }\n+  private ThrowMessage(ThrowMessagBuilder builder) {\n+    this.name = builder.name;\n+    this.payload = builder.payload;\n+    this.businessKey = builder.businessKey;\n+    this.correlationKey = builder.correlationKey;\n+  }\n \n-    public Optional<String> getCorrelationKey() {\n-        return correlationKey;\n-    }\n+  ThrowMessage() {\n+  }\n+\n+  public ThrowMessage(String name) {\n+    this.name = name;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public Optional<Map<String, Object>> getPayload() {\n+    return payload;\n+  }\n+\n+  public Optional<String> getBusinessKey() {\n+    return businessKey;\n+  }\n+\n+  public Optional<String> getCorrelationKey() {\n+    return correlationKey;\n+  }\n \n     /**\n      * Creates builder to build {@link ThrowMessage}.\n      * @return created builder\n      */\n-    public static INameStage builder() {\n-        return new ThrowMessagBuilder();\n-    }\n+\n+  public static INameStage builder() {\n+    return new ThrowMessagBuilder();\n+  }\n \n     /**\n      * Definition of a stage for staged builder.\n      */\n-    public interface INameStage {\n+\n+  public interface INameStage {\n \n         /**\n         * Builder method for name parameter.\n         * @param name field to set\n         * @return builder\n         */\n-        public IBuildStage name(String name);\n-    }\n+\n+    public IBuildStage name(String name);\n+  }\n \n     /**\n      * Definition of a stage for staged builder.\n      */\n-    public interface IBuildStage {\n+\n+  public interface IBuildStage {\n \n         /**\n         * Builder method for payload parameter.\n         * @param payload field to set\n         * @return builder\n         */\n-        public IBuildStage payload(Optional<Map<String, Object>> payload);\n+\n+    public IBuildStage payload(Optional<Map<String, Object>> payload);\n \n         /**\n         * Builder method for businessKey parameter.\n         * @param businessKey field to set\n         * @return builder\n         */\n-        public IBuildStage businessKey(Optional<String> businessKey);\n+\n+\n+    public IBuildStage businessKey(Optional<String> businessKey);\n \n         /**\n         * Builder method for correlationKey parameter.\n         * @param correlationKey field to set\n         * @return builder\n         */\n-        public IBuildStage correlationKey(Optional<String> correlationKey);\n+\n+\n+    public IBuildStage correlationKey(Optional<String> correlationKey);\n \n         /**\n         * Builder method of the builder.\n         * @return built class\n         */\n-        public ThrowMessage build();\n-    }\n+\n+\n+    public ThrowMessage build();\n+\n+  }\n \n     /**\n      * Builder to build {@link ThrowMessage}.\n      */\n-    public static final class ThrowMessagBuilder implements INameStage, IBuildStage {\n-\n-        private String name;\n-        private Optional<Map<String, Object>> payload = Optional.empty();\n-        private Optional<String> businessKey = Optional.empty();\n-        private Optional<String> correlationKey = Optional.empty();\n-\n-        private ThrowMessagBuilder() {\n-        }\n-\n-        @Override\n-        public IBuildStage name(String name) {\n-            this.name = name;\n-            return this;\n-        }\n-\n-        @Override\n-        public IBuildStage payload(Optional<Map<String, Object>> payload) {\n-            this.payload = payload;\n-            return this;\n-        }\n-\n-        @Override\n-        public IBuildStage businessKey(Optional<String> businessKey) {\n-            this.businessKey = businessKey;\n-            return this;\n-        }\n-\n-        @Override\n-        public IBuildStage correlationKey(Optional<String> correlationKey) {\n-            this.correlationKey = correlationKey;\n-            return this;\n-        }\n-\n-        @Override\n-        public ThrowMessage build() {\n-            return new ThrowMessage(this);\n-        }\n+\n+  public static final class ThrowMessagBuilder implements INameStage, IBuildStage {\n+\n+    private String name;\n+\n+    private Optional<Map<String, Object>> payload = Optional.empty();\n+\n+    private Optional<String> businessKey = Optional.empty();\n+\n+    private Optional<String> correlationKey = Optional.empty();\n+\n+    private ThrowMessagBuilder() {\n+    }\n+\n+    @Override\n+    public IBuildStage name(String name) {\n+      this.name = name;\n+      return this;\n     }\n-}\n+\n+    @Override\n+    public IBuildStage payload(Optional<Map<String, Object>> payload) {\n+      this.payload = payload;\n+      return this;\n+    }\n+\n+    @Override\n+    public IBuildStage businessKey(Optional<String> businessKey) {\n+      this.businessKey = businessKey;\n+      return this;\n+    }\n+\n+    @Override\n+    public IBuildStage correlationKey(Optional<String> correlationKey) {\n+      this.correlationKey = correlationKey;\n+      return this;\n+    }\n+\n+    @Override\n+    public ThrowMessage build() {\n+      return new ThrowMessage(this);\n+    }\n+\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 139
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/34/ThrowMessage.java\nindex 7d1d54285b4..8167f59a9f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/34/ThrowMessage.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.delegate;\n \n import java.util.Map;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/34/ThrowMessage.java\nindex 7d1d54285b4..8167f59a9f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/34/ThrowMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/34/ThrowMessage.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.delegate;\n \n import java.util.Map;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1292",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1292/MessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1292/MessageDecoder.java\nindex 5f667eb7683..79922e28b08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1292/MessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1292/MessageDecoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport.pipeline;\n \n import io.netty.buffer.ByteBuf;\n@@ -36,55 +37,51 @@ import static io.netty.buffer.ByteBufUtil.hexDump;\n \n public class MessageDecoder extends SimpleChannelInboundHandler<ByteBuf>\n {\n-    private final ByteBufInput input;\n-    private final BoltRequestMessageReader reader;\n-    private final BoltRequestMessageHandler messageHandler;\n-    private final Log log;\n+  private final ByteBufInput input;\n+  private final BoltRequestMessageReader reader;\n+  private final BoltRequestMessageHandler messageHandler;\n+  private final Log log;\n \n-    public MessageDecoder( Neo4jPack pack, BoltRequestMessageHandler messageHandler, LogService logService )\n-    {\n-        this.input = new ByteBufInput();\n-        this.reader = new BoltRequestMessageReader( pack.newUnpacker( input ) );\n-        this.messageHandler = messageHandler;\n-        this.log = logService.getInternalLog( getClass() );\n-    }\n+  public MessageDecoder(Neo4jPack pack, BoltRequestMessageHandler messageHandler, LogService logService)\n+  {\n+    this.input = new ByteBufInput();\n+    this.reader = new BoltRequestMessageReader(pack.newUnpacker(input));\n+    this.messageHandler = messageHandler;\n+    this.log = logService.getInternalLog(getClass());\n+  }\n \n-    @Override\n-    protected void channelRead0( ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf ) throws Exception\n+  @Override\n+  protected void channelRead0(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf) throws Exception\n+  {\n+    input.start(byteBuf);\n+    byteBuf.markReaderIndex();\n+    try\n     {\n-        input.start( byteBuf );\n-        byteBuf.markReaderIndex();\n-        try\n-        {\n-            reader.read( messageHandler );\n-        }\n-        catch ( BoltIOException ex )\n-        {\n-            if ( ex.causesFailureMessage() )\n-            {\n-                messageHandler.onExternalError( Neo4jError.from( ex ) );\n-            }\n-            else\n-            {\n-                logMessageOnError( byteBuf );\n-                throw ex;\n-            }\n-        }\n-        catch ( Throwable error )\n-        {\n-            logMessageOnError( byteBuf );\n-            throw error;\n-        }\n-        finally\n-        {\n-            input.stop();\n-        }\n-    }\n-\n-    private void logMessageOnError( ByteBuf byteBuf )\n+      reader.read(messageHandler);\n+    } catch (BoltIOException ex)\n+    {\n+      if (ex.causesFailureMessage())\n+      {\n+        messageHandler.onExternalError(Neo4jError.from(ex));\n+      } else\n+      {\n+        logMessageOnError(byteBuf);\n+        throw ex;\n+      }\n+    } catch (Throwable error)\n     {\n-        // move reader index back to the beginning of the message in order to log its full content\n-        byteBuf.resetReaderIndex();\n-        log.error( \"Failed to read an inbound message:\\n\" + hexDump( byteBuf ) + '\\n' );\n+      logMessageOnError(byteBuf);\n+      throw error;\n+    } finally\n+    {\n+      input.stop();\n     }\n+  }\n+\n+  private void logMessageOnError(ByteBuf byteBuf)\n+  {\n+    // move reader index back to the beginning of the message in order to log its full content\n+    byteBuf.resetReaderIndex();\n+    log.error(\"Failed to read an inbound message:\\n\" + hexDump(byteBuf) + '\\n');\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1292/MessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1292/MessageDecoder.java\nindex 5f667eb7683..031caf5a4da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1292/MessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1292/MessageDecoder.java\n@@ -87,4 +87,4 @@ public class MessageDecoder extends SimpleChannelInboundHandler<ByteBuf>\n         byteBuf.resetReaderIndex();\n         log.error( \"Failed to read an inbound message:\\n\" + hexDump( byteBuf ) + '\\n' );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4148",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4148/LabelIdArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4148/LabelIdArray.java\nindex e8a05b743d4..b1bc05aaa48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4148/LabelIdArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4148/LabelIdArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.Arrays;\n@@ -25,67 +26,67 @@ import static java.lang.System.arraycopy;\n \n public class LabelIdArray\n {\n-    private LabelIdArray()\n-    {\n-    }\n+  private LabelIdArray()\n+  {\n+  }\n \n-    static long[] concatAndSort( long[] existing, long additional )\n-    {\n-        assertNotContains( existing, additional );\n+  static long[] concatAndSort(long[] existing, long additional)\n+  {\n+    assertNotContains(existing, additional);\n \n-        long[] result = new long[existing.length + 1];\n-        arraycopy( existing, 0, result, 0, existing.length );\n-        result[existing.length] = additional;\n-        Arrays.sort( result );\n-        return result;\n-    }\n+    long[] result = new long[existing.length + 1];\n+    arraycopy(existing, 0, result, 0, existing.length);\n+    result[existing.length] = additional;\n+    Arrays.sort(result);\n+    return result;\n+  }\n \n-    private static void assertNotContains( long[] existingLabels, long labelId )\n+  private static void assertNotContains(long[] existingLabels, long labelId)\n+  {\n+    if (Arrays.binarySearch(existingLabels, labelId) >= 0)\n     {\n-        if ( Arrays.binarySearch( existingLabels, labelId ) >= 0 )\n-        {\n-            throw new IllegalStateException( \"Label \" + labelId + \" already exists.\" );\n-        }\n+      throw new IllegalStateException(\"Label \" + labelId + \" already exists.\");\n     }\n+  }\n \n-    static long[] filter( long[] ids, long excludeId )\n+  static long[] filter(long[] ids, long excludeId)\n+  {\n+    boolean found = false;\n+    for (long id : ids)\n     {\n-        boolean found = false;\n-        for ( long id : ids )\n-        {\n-            if ( id == excludeId )\n-            {\n-                found = true;\n-                break;\n-            }\n-        }\n-        if ( !found )\n-        {\n-            throw new IllegalStateException( \"Label \" + excludeId + \" not found.\" );\n-        }\n-\n-        long[] result = new long[ids.length - 1];\n-        int writerIndex = 0;\n-        for ( long id : ids )\n-        {\n-            if ( id != excludeId )\n-            {\n-                result[writerIndex++] = id;\n-            }\n-        }\n-        return result;\n+      if (id == excludeId)\n+      {\n+        found = true;\n+        break;\n+      }\n     }\n-\n-    public static long[] prependNodeId( long nodeId, long[] labelIds )\n+    if (!found)\n     {\n-        long[] result = new long[ labelIds.length + 1 ];\n-        arraycopy( labelIds, 0, result, 1, labelIds.length );\n-        result[0] = nodeId;\n-        return result;\n+      throw new IllegalStateException(\"Label \" + excludeId + \" not found.\");\n     }\n \n-    public static long[] stripNodeId( long[] storedLongs )\n+    long[] result = new long[ids.length - 1];\n+    int writerIndex = 0;\n+    for (long id : ids)\n     {\n-        return Arrays.copyOfRange( storedLongs, 1, storedLongs.length );\n+      if (id != excludeId)\n+      {\n+        result[writerIndex++] = id;\n+      }\n     }\n+    return result;\n+  }\n+\n+  public static long[] prependNodeId(long nodeId, long[] labelIds)\n+  {\n+    long[] result = new long[labelIds.length + 1];\n+    arraycopy(labelIds, 0, result, 1, labelIds.length);\n+    result[0] = nodeId;\n+    return result;\n+  }\n+\n+  public static long[] stripNodeId(long[] storedLongs)\n+  {\n+    return Arrays.copyOfRange(storedLongs, 1, storedLongs.length);\n+  }\n }\n",
            "diff_size": 77
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4148/LabelIdArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4148/LabelIdArray.java\nindex e8a05b743d4..7c5e1a2efdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4148/LabelIdArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4148/LabelIdArray.java\n@@ -78,7 +78,7 @@ public class LabelIdArray\n \n     public static long[] prependNodeId( long nodeId, long[] labelIds )\n     {\n-        long[] result = new long[ labelIds.length + 1 ];\n+        long[] result = new long[labelIds.length + 1];\n         arraycopy( labelIds, 0, result, 1, labelIds.length );\n         result[0] = nodeId;\n         return result;\n@@ -88,4 +88,4 @@ public class LabelIdArray\n     {\n         return Arrays.copyOfRange( storedLongs, 1, storedLongs.length );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
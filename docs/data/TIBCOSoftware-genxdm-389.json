{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "389",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n\n\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\n\t{\n\t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\n\t\tfinal StringExpr se = e2.makeStringExpr(statEnv);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/389/FormatNumberFunction.java\nindex 97844cab69c..ccb1b530762 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/389/FormatNumberFunction.java\n@@ -37,7 +37,7 @@ public final class FormatNumberFunction\n     extends Function2\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n+ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n \t{\r\n \t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n \t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/389/FormatNumberFunction.java\nindex 97844cab69c..3cf3c43a0cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/389/FormatNumberFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import java.text.DecimalFormat;\r\n@@ -33,36 +34,36 @@ import org.genxdm.xpath.v10.NumberExpr;\n import org.genxdm.xpath.v10.StringExpr;\r\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n-public final class FormatNumberFunction \r\n-    extends Function2\r\n-{\r\n+public final class FormatNumberFunction\r\n+    extends Function2 {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n-\t{\r\n-\t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n-\t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2,\r\n+                                     StaticContext statEnv) {\r\n+        final NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n+        final StringExpr se = e2.makeStringExpr(statEnv);\r\n \r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n+        return new ConvertibleStringExpr() {\r\n             @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> context) {\r\n-\t\t\t\ttry {\r\n-\t\t\t\t\treturn new DecimalFormat(se.stringFunction(model, node, context)).format(ne.numberFunction(model, node, context));\r\n-\t\t\t\t}\r\n-\t\t\t\tcatch (final IllegalArgumentException e) {\r\n-\t\t\t\t\tthrow new RuntimeException(\"invalid format pattern\");\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n+            public <N> String stringFunction(Model<N> model, final N node,\r\n+                                             final NodeDynamicContext<N> context) {\r\n+                try {\r\n+                    return new DecimalFormat(se.stringFunction(model, node, context))\r\n+                        .format(ne.numberFunction(model, node, context));\r\n+                } catch (final IllegalArgumentException e) {\r\n+                    throw new RuntimeException(\"invalid format pattern\");\r\n+                }\r\n+            }\r\n \r\n             @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n+            public String stringFunction(TraversingInformer contextNode,\r\n+                                         TraverserDynamicContext dynEnv) {\r\n                 try {\r\n-                    return new DecimalFormat(se.stringFunction(contextNode, dynEnv)).format(ne.numberFunction(contextNode, dynEnv));\r\n-                }\r\n-                catch (final IllegalArgumentException e) {\r\n+                    return new DecimalFormat(se.stringFunction(contextNode, dynEnv))\r\n+                        .format(ne.numberFunction(contextNode, dynEnv));\r\n+                } catch (final IllegalArgumentException e) {\r\n                     throw new RuntimeException(\"invalid format pattern\", e);\r\n                 }\r\n             }\r\n-\t\t};\r\n-\t}\r\n+        };\r\n+    }\r\n }\r\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/389/FormatNumberFunction.java\nindex 97844cab69c..da551fbd2f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/389/FormatNumberFunction.java\n@@ -34,27 +34,26 @@ import org.genxdm.xpath.v10.StringExpr;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n public final class FormatNumberFunction \r\n-    extends Function2\r\n-{\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n-\t{\r\n-\t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n+    extends Function2\n+{\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n+\t{\n+    final NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n \t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n \r\n \t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> context) {\r\n-\t\t\t\ttry {\r\n-\t\t\t\t\treturn new DecimalFormat(se.stringFunction(model, node, context)).format(ne.numberFunction(model, node, context));\r\n-\t\t\t\t}\r\n-\t\t\t\tcatch (final IllegalArgumentException e) {\r\n-\t\t\t\t\tthrow new RuntimeException(\"invalid format pattern\");\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n+\t\t{\n+    @Override\n+public <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> context) {\n+    try {\n+return new DecimalFormat(se.stringFunction(model, node, context)).format(ne.numberFunction(model, node, context));\n+    }\r\n+\t\t\t\tcatch (final IllegalArgumentException e) {\n+    throw new RuntimeException(\"invalid format pattern\");\n+    }\n+    }\n+\n+@Override\r\n             public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n                 try {\r\n                     return new DecimalFormat(se.stringFunction(contextNode, dynEnv)).format(ne.numberFunction(contextNode, dynEnv));\r\n@@ -62,7 +61,7 @@ public final class FormatNumberFunction\n                 catch (final IllegalArgumentException e) {\r\n                     throw new RuntimeException(\"invalid format pattern\", e);\r\n                 }\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+            }\n+    };\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/389/FormatNumberFunction.java\nindex 97844cab69c..fc5aca3f27f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/389/FormatNumberFunction.java\n@@ -18,51 +18,55 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import java.text.DecimalFormat;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.NodeDynamicContext;\r\n-import org.genxdm.xpath.v10.StaticContext;\r\n-import org.genxdm.xpath.v10.NumberExpr;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n-\r\n-public final class FormatNumberFunction \r\n-    extends Function2\r\n-{\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n-\t{\r\n-\t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n-\t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n-\r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> context) {\r\n-\t\t\t\ttry {\r\n-\t\t\t\t\treturn new DecimalFormat(se.stringFunction(model, node, context)).format(ne.numberFunction(model, node, context));\r\n-\t\t\t\t}\r\n-\t\t\t\tcatch (final IllegalArgumentException e) {\r\n-\t\t\t\t\tthrow new RuntimeException(\"invalid format pattern\");\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-                try {\r\n-                    return new DecimalFormat(se.stringFunction(contextNode, dynEnv)).format(ne.numberFunction(contextNode, dynEnv));\r\n-                }\r\n-                catch (final IllegalArgumentException e) {\r\n-                    throw new RuntimeException(\"invalid format pattern\", e);\r\n-                }\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import java.text.DecimalFormat;\n+import org.genxdm.Model;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.NodeDynamicContext;\n+import org.genxdm.xpath.v10.StaticContext;\n+import org.genxdm.xpath.v10.NumberExpr;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n+\n+public final class FormatNumberFunction extends Function2\n+{\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\n+    {\n+        final NumberExpr ne = e1.makeNumberExpr(statEnv);\n+        final StringExpr se = e2.makeStringExpr(statEnv);\n+        return new ConvertibleStringExpr()\n+        {\n+\n+            @Override\n+            public <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> context)\n+            {\n+                try\n+                {\n+                    return new DecimalFormat(se.stringFunction(model, node, context)).format(ne.numberFunction(model, node, context));\n+                }\n+                catch (final IllegalArgumentException e)\n+                {\n+                    throw new RuntimeException(\"invalid format pattern\");\n+                }\n+            }\n+\n+            @Override\n+            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+            {\n+                try\n+                {\n+                    return new DecimalFormat(se.stringFunction(contextNode, dynEnv)).format(ne.numberFunction(contextNode, dynEnv));\n+                }\n+                catch (final IllegalArgumentException e)\n+                {\n+                    throw new RuntimeException(\"invalid format pattern\", e);\n+                }\n+            }\n+        };\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/389/FormatNumberFunction.java\nindex 97844cab69c..ccb1b530762 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/389/FormatNumberFunction.java\n@@ -37,7 +37,7 @@ public final class FormatNumberFunction\n     extends Function2\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n+ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n \t{\r\n \t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n \t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/389/FormatNumberFunction.java\nindex 97844cab69c..0385dca9cfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/389/FormatNumberFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/389/FormatNumberFunction.java\n@@ -37,7 +37,7 @@ public final class FormatNumberFunction\n     extends Function2\r\n {\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e1, final ConvertibleExpr e2, StaticContext statEnv)\r\n \t{\r\n \t\tfinal NumberExpr ne = e1.makeNumberExpr(statEnv);\r\n \t\tfinal StringExpr se = e2.makeStringExpr(statEnv);\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
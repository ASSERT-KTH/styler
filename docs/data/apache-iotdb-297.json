{
    "project_name": "apache-iotdb",
    "error_id": "297",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.cli;\n\nimport org.apache.iotdb.exception.ArgsErrorException;\nimport org.apache.iotdb.jdbc.Config;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/297/Cli.java\nindex d1b0735d772..86a48e609e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/297/Cli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/297/Cli.java\nindex d1b0735d772..3de4793b3bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/297/Cli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n@@ -38,7 +39,9 @@ import java.sql.SQLException;\n \n import static org.apache.iotdb.cli.utils.IoTPrinter.println;\n \n-/** args[]: -h 127.0.0.1 -p 6667 -u root -pw root */\n+/**\n+ * args[]: -h 127.0.0.1 -p 6667 -u root -pw root\n+ */\n public class Cli extends AbstractCli {\n \n   private static CommandLine commandLine;\n@@ -117,9 +120,9 @@ public class Cli extends AbstractCli {\n       password = commandLine.getOptionValue(PASSWORD_ARGS);\n       if (hasExecuteSQL && password != null) {\n         try (IoTDBConnection connection =\n-            (IoTDBConnection)\n-                DriverManager.getConnection(\n-                    Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+                 (IoTDBConnection)\n+                     DriverManager.getConnection(\n+                         Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n           properties = connection.getServerProperties();\n           AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n           processCommand(execute, connection);\n@@ -144,9 +147,9 @@ public class Cli extends AbstractCli {\n \n   private static void receiveCommands(ConsoleReader reader) throws TException, IOException {\n     try (IoTDBConnection connection =\n-        (IoTDBConnection)\n-            DriverManager.getConnection(\n-                Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+             (IoTDBConnection)\n+                 DriverManager.getConnection(\n+                     Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n       String s;\n       properties = connection.getServerProperties();\n       AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'Options' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/297/Cli.java\nindex d1b0735d772..a5bd417e626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/297/Cli.java\n@@ -22,7 +22,6 @@ import org.apache.iotdb.exception.ArgsErrorException;\n import org.apache.iotdb.jdbc.Config;\n import org.apache.iotdb.jdbc.IoTDBConnection;\n import org.apache.iotdb.rpc.RpcUtils;\n-\n import jline.console.ConsoleReader;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n@@ -31,7 +30,6 @@ import org.apache.commons.cli.HelpFormatter;\n import org.apache.commons.cli.Options;\n import org.apache.commons.cli.ParseException;\n import org.apache.thrift.TException;\n-\n import java.io.IOException;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n@@ -39,6 +37,7 @@ import java.sql.SQLException;\n import static org.apache.iotdb.cli.utils.IoTPrinter.println;\n \n /** args[]: -h 127.0.0.1 -p 6667 -u root -pw root */\n+\n public class Cli extends AbstractCli {\n \n   private static CommandLine commandLine;\n@@ -55,11 +54,8 @@ public class Cli extends AbstractCli {\n     HelpFormatter hf = new HelpFormatter();\n     hf.setWidth(MAX_HELP_CONSOLE_WIDTH);\n     commandLine = null;\n-\n     if (args == null || args.length == 0) {\n-      println(\n-          \"Require more params input, eg. ./start-cli.sh(start-cli.bat if Windows) \"\n-              + \"-h xxx.xxx.xxx.xxx -p xxxx -u xxx.\");\n+      println(\"Require more params input, eg. ./start-cli.sh(start-cli.bat if Windows) \" + \"-h xxx.xxx.xxx.xxx -p xxxx -u xxx.\");\n       println(\"For more information, please check the following hint.\");\n       hf.printHelp(SCRIPT_HINT, options, true);\n       return;\n@@ -71,11 +67,11 @@ public class Cli extends AbstractCli {\n     if (!continues) {\n       return;\n     }\n-\n     serve();\n   }\n \n-  private static boolean parseCommandLine(Options options, String[] newArgs, HelpFormatter hf) {\n+  private static boolean parseCommandLine(\n+    Options options, String[] newArgs, HelpFormatter hf) {\n     try {\n       CommandLineParser parser = new DefaultParser();\n       commandLine = parser.parse(options, newArgs);\n@@ -93,16 +89,12 @@ public class Cli extends AbstractCli {\n         setMaxDisplayNumber(commandLine.getOptionValue(MAX_PRINT_ROW_COUNT_ARGS));\n       }\n     } catch (ParseException e) {\n-      println(\n-          \"Require more params input, eg. ./start-cli.sh(start-cli.bat if Windows) \"\n-              + \"-h xxx.xxx.xxx.xxx -p xxxx -u xxx.\");\n+      println(\"Require more params input, eg. ./start-cli.sh(start-cli.bat if Windows) \" + \"-h xxx.xxx.xxx.xxx -p xxxx -u xxx.\");\n       println(\"For more information, please check the following hint.\");\n       hf.printHelp(IOTDB_CLI_PREFIX, options, true);\n       return false;\n     } catch (NumberFormatException e) {\n-      println(\n-          IOTDB_CLI_PREFIX\n-              + \"> error format of max print row count, it should be a number and greater than 0\");\n+      println(IOTDB_CLI_PREFIX + \"> error format of max print row count, it should be a number and greater than 0\");\n       return false;\n     }\n     return true;\n@@ -113,13 +105,11 @@ public class Cli extends AbstractCli {\n       host = checkRequiredArg(HOST_ARGS, HOST_NAME, commandLine, false, host);\n       port = checkRequiredArg(PORT_ARGS, PORT_NAME, commandLine, false, port);\n       username = checkRequiredArg(USERNAME_ARGS, USERNAME_NAME, commandLine, true, null);\n-\n       password = commandLine.getOptionValue(PASSWORD_ARGS);\n       if (hasExecuteSQL && password != null) {\n-        try (IoTDBConnection connection =\n-            (IoTDBConnection)\n-                DriverManager.getConnection(\n-                    Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+        try (IoTDBConnection connection = (IoTDBConnection) DriverManager.getConnection(Config.IOTDB_URL_PREFIX + host\n+        + \":\"\n+        + port + \"/\", username, password)) {\n           properties = connection.getServerProperties();\n           AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n           processCommand(execute, connection);\n@@ -143,15 +133,13 @@ public class Cli extends AbstractCli {\n   }\n \n   private static void receiveCommands(ConsoleReader reader) throws TException, IOException {\n-    try (IoTDBConnection connection =\n-        (IoTDBConnection)\n-            DriverManager.getConnection(\n-                Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+    try (IoTDBConnection connection = (IoTDBConnection) DriverManager.getConnection(Config.IOTDB_URL_PREFIX + host\n+    + \":\"\n+    + port + \"/\", username, password)) {\n       String s;\n       properties = connection.getServerProperties();\n       AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n       timestampPrecision = properties.getTimestampPrecision();\n-\n       echoStarting();\n       displayLogo(properties.getVersion());\n       println(IOTDB_CLI_PREFIX + \"> login successfully\");\n@@ -163,9 +151,7 @@ public class Cli extends AbstractCli {\n         }\n       }\n     } catch (SQLException e) {\n-      println(\n-          String.format(\n-              \"%s> %s Host is %s, port is %s.\", IOTDB_CLI_PREFIX, e.getMessage(), host, port));\n+      println(String.format(\"%s> %s Host is %s, port is %s.\", IOTDB_CLI_PREFIX, e.getMessage(), host, port));\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/297/Cli.java\nindex d1b0735d772..86a48e609e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/297/Cli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/297/Cli.java\nindex d1b0735d772..86a48e609e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/297/Cli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/297/Cli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
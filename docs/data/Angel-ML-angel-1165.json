{
    "project_name": "Angel-ML-angel",
    "error_id": "1165",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1165/RowPartitionMeta.java\nindex bdbecde7237..e1f1bebaa7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1165/RowPartitionMeta.java\n@@ -45,8 +45,9 @@ public class RowPartitionMeta {\n \n   /**\n    * Create meta for row split\n-   * @param rowId row split\n-   * @param offset data offset in the saved file\n+   *\n+   * @param rowId      row split\n+   * @param offset     data offset in the saved file\n    * @param elementNum save element number\n    */\n   public RowPartitionMeta(int rowId, long offset, int elementNum) {\n@@ -57,6 +58,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Write row split meta to output stream use binary format\n+   *\n    * @param output output stream\n    * @throws IOException\n    */\n@@ -68,6 +70,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Read row split meta from input stream use binary format\n+   *\n    * @param input input stream\n    * @throws IOException\n    */\n@@ -79,6 +82,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Write row split meta to a Json object\n+   *\n    * @return json object\n    * @throws IOException\n    * @throws JSONException\n@@ -91,6 +95,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Read row split meta from a Json object\n+   *\n    * @param jsonObject json object\n    * @throws IOException\n    * @throws JSONException\n@@ -103,6 +108,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get the row id for the row split\n+   *\n    * @return row id\n    */\n   public int getRowId() {\n@@ -111,7 +117,8 @@ public class RowPartitionMeta {\n \n   /**\n    * Set the row id for the row split\n-   * @param  rowId row id\n+   *\n+   * @param rowId row id\n    */\n   public void setRowId(int rowId) {\n     this.rowId = rowId;\n@@ -119,6 +126,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get the data offset in the saved file for this row split\n+   *\n    * @return the data offset in the saved file for this row split\n    */\n   public long getOffset() {\n@@ -127,6 +135,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Set the data offset in the saved file for this row split\n+   *\n    * @param offset the data offset in the saved file for this row split\n    */\n   public void setOffset(long offset) {\n@@ -135,6 +144,7 @@ public class RowPartitionMeta {\n \n   /**\n    * Get save element number\n+   *\n    * @return save element number\n    */\n   public int getElementNum() {\n@@ -143,14 +153,16 @@ public class RowPartitionMeta {\n \n   /**\n    * Set save element number\n+   *\n    * @param elementNum save element number\n    */\n   public void setElementNum(int elementNum) {\n     this.elementNum = elementNum;\n   }\n \n-  @Override public String toString() {\n+  @Override\n+  public String toString() {\n     return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+        + elementNum + '}';\n   }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1165/RowPartitionMeta.java\nindex bdbecde7237..8f85247b95f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1165/RowPartitionMeta.java\n@@ -149,8 +149,8 @@ public class RowPartitionMeta {\n     this.elementNum = elementNum;\n   }\n \n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+  @Override\n+public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1165/RowPartitionMeta.java\nindex bdbecde7237..511bc169ead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1165/RowPartitionMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1165/RowPartitionMeta.java\n@@ -19,7 +19,6 @@ package com.tencent.angel.model.output.format;\n \n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -27,10 +26,12 @@ import java.io.IOException;\n /**\n  * The meta data for row split\n  */\n+\n public class RowPartitionMeta {\n   /**\n    * Row id\n    */\n+\n   private int rowId;\n \n   /**\n@@ -49,6 +50,7 @@ public class RowPartitionMeta {\n    * @param offset data offset in the saved file\n    * @param elementNum save element number\n    */\n+\n   public RowPartitionMeta(int rowId, long offset, int elementNum) {\n     this.rowId = rowId;\n     this.offset = offset;\n@@ -60,6 +62,7 @@ public class RowPartitionMeta {\n    * @param output output stream\n    * @throws IOException\n    */\n+\n   public void write(DataOutputStream output) throws IOException {\n     output.writeInt(rowId);\n     output.writeLong(offset);\n@@ -71,6 +74,7 @@ public class RowPartitionMeta {\n    * @param input input stream\n    * @throws IOException\n    */\n+\n   public void read(DataInputStream input) throws IOException {\n     rowId = input.readInt();\n     offset = input.readLong();\n@@ -83,6 +87,7 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n+\n   public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n     rowJsonObject.put(\"rowId\", rowId);\n     rowJsonObject.put(\"offset\", offset);\n@@ -95,6 +100,7 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n+\n   public void read(JSONObject jsonObject) throws IOException, JSONException {\n     rowId = jsonObject.getInt(\"rowId\");\n     offset = jsonObject.getInt(\"offset\");\n@@ -105,6 +111,7 @@ public class RowPartitionMeta {\n    * Get the row id for the row split\n    * @return row id\n    */\n+\n   public int getRowId() {\n     return rowId;\n   }\n@@ -113,6 +120,7 @@ public class RowPartitionMeta {\n    * Set the row id for the row split\n    * @param  rowId row id\n    */\n+\n   public void setRowId(int rowId) {\n     this.rowId = rowId;\n   }\n@@ -121,6 +129,7 @@ public class RowPartitionMeta {\n    * Get the data offset in the saved file for this row split\n    * @return the data offset in the saved file for this row split\n    */\n+\n   public long getOffset() {\n     return offset;\n   }\n@@ -129,6 +138,7 @@ public class RowPartitionMeta {\n    * Set the data offset in the saved file for this row split\n    * @param offset the data offset in the saved file for this row split\n    */\n+\n   public void setOffset(long offset) {\n     this.offset = offset;\n   }\n@@ -137,6 +147,7 @@ public class RowPartitionMeta {\n    * Get save element number\n    * @return save element number\n    */\n+\n   public int getElementNum() {\n     return elementNum;\n   }\n@@ -145,12 +156,14 @@ public class RowPartitionMeta {\n    * Set save element number\n    * @param elementNum save element number\n    */\n+\n   public void setElementNum(int elementNum) {\n     this.elementNum = elementNum;\n   }\n \n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+  @Override\n+  public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
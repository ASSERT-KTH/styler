{
    "project_name": "neo4j-neo4j",
    "error_id": "3244",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "98",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3244/Entity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3244/Entity.java\nindex aa6a5db6c4f..61ad8fe9ecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3244/Entity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3244/Entity.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import java.util.Map;\n@@ -27,10 +28,10 @@ import org.neo4j.annotations.api.PublicApi;\n  * An Entity is a {@link Entity} that is persisted in the database, and identified by an {@link #getId() id}.\n  * <p>\n  * {@link Node Nodes} and {@link Relationship Relationships} are Entities.\n- *\n+ * <p>\n  * Entities are attached to transaction in which they were accessed. Outside of transaction its possible only to access entity id.\n  * All other methods should be called only in the scope of the owning transaction.\n- *\n+ * <p>\n  * Defines a common API for handling properties on both {@link Node nodes} and\n  * {@link Relationship relationships}.\n  * <p>\n@@ -92,9 +93,9 @@ public interface Entity\n      *\n      * @param key the property key\n      * @return <code>true</code> if this property container has a property\n-     *         accessible through the given key, <code>false</code> otherwise\n+     * accessible through the given key, <code>false</code> otherwise\n      */\n-    boolean hasProperty( String key );\n+    boolean hasProperty(String key);\n \n     /**\n      * Returns the property value associated with the given key. The value is of\n@@ -113,9 +114,9 @@ public interface Entity\n      * @param key the property key\n      * @return the property value associated with the given key\n      * @throws NotFoundException if there's no property associated with\n-     *             <code>key</code>\n+     *                           <code>key</code>\n      */\n-    Object getProperty( String key );\n+    Object getProperty(String key);\n \n     /**\n      * Returns the property value associated with the given key, or a default\n@@ -125,12 +126,12 @@ public interface Entity\n      * See the {@link Entity the class description}\n      * for a full list of known types.\n      *\n-     * @param key the property key\n+     * @param key          the property key\n      * @param defaultValue the default value that will be returned if no\n-     *            property value was associated with the given key\n+     *                     property value was associated with the given key\n      * @return the property value associated with the given key\n      */\n-    Object getProperty( String key, Object defaultValue );\n+    Object getProperty(String key, Object defaultValue);\n \n     /**\n      * Sets the property value for the given key to <code>value</code>. The\n@@ -142,12 +143,12 @@ public interface Entity\n      * <p>\n      * This means that <code>null</code> is not an accepted property value.\n      *\n-     * @param key the key with which the new property value will be associated\n+     * @param key   the key with which the new property value will be associated\n      * @param value the new property value, of one of the valid property types\n      * @throws IllegalArgumentException if <code>value</code> is of an\n-     *             unsupported type (including <code>null</code>)\n+     *                                  unsupported type (including <code>null</code>)\n      */\n-    void setProperty( String key, Object value );\n+    void setProperty(String key, Object value);\n \n     /**\n      * Removes the property associated with the given key and returns the old\n@@ -157,7 +158,7 @@ public interface Entity\n      * @param key the property key\n      * @return the property value that used to be associated with the given key\n      */\n-    Object removeProperty( String key );\n+    Object removeProperty(String key);\n \n     /**\n      * Returns all existing property keys, or an empty iterable if this property\n@@ -176,7 +177,7 @@ public interface Entity\n      * @return specified properties on this property container\n      * @throws NullPointerException if the array of keys or any key is null\n      */\n-    Map<String, Object> getProperties( String... keys );\n+    Map<String, Object> getProperties(String... keys);\n \n     /**\n      * Returns all existing properties.\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3244/Entity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3244/Entity.java\nindex aa6a5db6c4f..67bb34b66b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3244/Entity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3244/Entity.java\n@@ -184,4 +184,4 @@ public interface Entity\n      * @return all properties on this property container\n      */\n     Map<String, Object> getAllProperties();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
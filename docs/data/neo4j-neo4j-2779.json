{
    "project_name": "neo4j-neo4j",
    "error_id": "2779",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2779/NativeMemoryAllocationRefusedError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2779/NativeMemoryAllocationRefusedError.java\nindex 827dc4ceb69..3e5a551b92d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2779/NativeMemoryAllocationRefusedError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2779/NativeMemoryAllocationRefusedError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.unsafe;\n \n import static org.neo4j.io.os.OsBeanUtil.VALUE_UNAVAILABLE;\n@@ -29,7 +30,7 @@ public class NativeMemoryAllocationRefusedError extends Error\n     private final long attemptedAllocationSizeBytes;\n     private final long alreadyAllocatedBytes;\n \n-    NativeMemoryAllocationRefusedError( long size, long alreadyAllocatedBytes )\n+    NativeMemoryAllocationRefusedError(long size, long alreadyAllocatedBytes)\n     {\n         this.attemptedAllocationSizeBytes = size;\n         this.alreadyAllocatedBytes = alreadyAllocatedBytes;\n@@ -40,49 +41,47 @@ public class NativeMemoryAllocationRefusedError extends Error\n     {\n         String message = super.getMessage();\n         StringBuilder sb = new StringBuilder();\n-        sb.append( \"Failed to allocate \" ).append( attemptedAllocationSizeBytes ).append( \" bytes. \" );\n-        sb.append( \"So far \" ).append( alreadyAllocatedBytes );\n-        sb.append( \" bytes have already been successfully allocated. \" );\n-        sb.append( \"The system currently has \" );\n-        appendBytes( sb, getTotalPhysicalMemory() ).append( \" total physical memory, \" );\n-        appendBytes( sb, getCommittedVirtualMemory() ).append( \" committed virtual memory, and \" );\n-        appendBytes( sb, getFreePhysicalMemory() ).append( \" free physical memory. \" );\n-        sb.append( \"Relevant system properties: \" );\n-        appendSysProp( sb, \"java.vm.name\" );\n-        appendSysProp( sb.append( \", \" ), \"java.vm.vendor\" );\n-        appendSysProp( sb.append( \", \" ), \"os.arch\" );\n+        sb.append(\"Failed to allocate \").append(attemptedAllocationSizeBytes).append(\" bytes. \");\n+        sb.append(\"So far \").append(alreadyAllocatedBytes);\n+        sb.append(\" bytes have already been successfully allocated. \");\n+        sb.append(\"The system currently has \");\n+        appendBytes(sb, getTotalPhysicalMemory()).append(\" total physical memory, \");\n+        appendBytes(sb, getCommittedVirtualMemory()).append(\" committed virtual memory, and \");\n+        appendBytes(sb, getFreePhysicalMemory()).append(\" free physical memory. \");\n+        sb.append(\"Relevant system properties: \");\n+        appendSysProp(sb, \"java.vm.name\");\n+        appendSysProp(sb.append(\", \"), \"java.vm.vendor\");\n+        appendSysProp(sb.append(\", \"), \"os.arch\");\n \n-        if ( getCause() instanceof OutOfMemoryError )\n+        if (getCause() instanceof OutOfMemoryError)\n         {\n-            sb.append( \". The allocation was refused by the operating system\" );\n+            sb.append(\". The allocation was refused by the operating system\");\n         }\n \n-        if ( message != null )\n+        if (message != null)\n         {\n-            sb.append( \": \" ).append( message );\n-        }\n-        else\n+            sb.append(\": \").append(message);\n+        } else\n         {\n-            sb.append( '.' );\n+            sb.append('.');\n         }\n         return sb.toString();\n     }\n \n-    private static StringBuilder appendBytes( StringBuilder sb, long bytes )\n+    private static StringBuilder appendBytes(StringBuilder sb, long bytes)\n     {\n-        if ( bytes == VALUE_UNAVAILABLE )\n+        if (bytes == VALUE_UNAVAILABLE)\n         {\n-            sb.append( \"(?) bytes\" );\n-        }\n-        else\n+            sb.append(\"(?) bytes\");\n+        } else\n         {\n-            sb.append( bytes ).append( \" bytes\" );\n+            sb.append(bytes).append(\" bytes\");\n         }\n         return sb;\n     }\n \n-    private static void appendSysProp( StringBuilder sb, String sysProp )\n+    private static void appendSysProp(StringBuilder sb, String sysProp)\n     {\n-        sb.append( '\"' ).append( sysProp ).append( \"\\\" = \\\"\" ).append( System.getProperty( sysProp ) ).append( '\"' );\n+        sb.append('\"').append(sysProp).append(\"\\\" = \\\"\").append(System.getProperty(sysProp)).append('\"');\n     }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
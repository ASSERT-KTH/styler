{
    "project_name": "graphfoundation-ongdb",
    "error_id": "667",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/667/RelationshipSparseSelectionIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/667/RelationshipSparseSelectionIterator.java\nindex 5ae461eb0ec..b01151658a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/667/RelationshipSparseSelectionIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/667/RelationshipSparseSelectionIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.helpers;\n \n import java.util.NoSuchElementException;\n@@ -27,56 +28,55 @@ import org.neo4j.graphdb.ResourceIterator;\n  * Helper iterator for traversing specific types and directions of a sparse node.\n  */\n public final class RelationshipSparseSelectionIterator<R> extends RelationshipSparseSelection\n-        implements ResourceIterator<R>\n+    implements ResourceIterator<R>\n {\n \n-    private final RelationshipFactory<R> factory;\n-    private long next;\n+  private final RelationshipFactory<R> factory;\n+  private long next;\n+\n+  RelationshipSparseSelectionIterator(RelationshipFactory<R> factory)\n+  {\n+    this.factory = factory;\n+    this.next = RelationshipSelections.UNINITIALIZED;\n+  }\n \n-    RelationshipSparseSelectionIterator( RelationshipFactory<R> factory )\n+  @Override\n+  public boolean hasNext()\n+  {\n+    if (next == RelationshipSelections.UNINITIALIZED)\n     {\n-        this.factory = factory;\n-        this.next = RelationshipSelections.UNINITIALIZED;\n+      next = fetchNext() ? cursor.relationshipReference() : RelationshipSelections.NO_ID;\n     }\n \n-    @Override\n-    public boolean hasNext()\n+    if (next == RelationshipSelections.NO_ID)\n     {\n-        if ( next == RelationshipSelections.UNINITIALIZED )\n-        {\n-            next = fetchNext() ? cursor.relationshipReference() : RelationshipSelections.NO_ID;\n-        }\n-\n-        if ( next == RelationshipSelections.NO_ID )\n-        {\n-            close();\n-            return false;\n-        }\n-        return true;\n+      close();\n+      return false;\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public R next()\n+  @Override\n+  public R next()\n+  {\n+    if (!hasNext())\n     {\n-        if ( !hasNext() )\n-        {\n-            throw new NoSuchElementException();\n-        }\n-        R current = factory.relationship( next,\n-                                          cursor.sourceNodeReference(),\n-                                          cursor.type(),\n-                                          cursor.targetNodeReference() );\n-\n-        if ( !fetchNext() )\n-        {\n-            close();\n-            next = RelationshipSelections.NO_ID;\n-        }\n-        else\n-        {\n-            next = cursor.relationshipReference();\n-        }\n+      throw new NoSuchElementException();\n+    }\n+    R current = factory.relationship(next,\n+        cursor.sourceNodeReference(),\n+        cursor.type(),\n+        cursor.targetNodeReference());\n \n-        return current;\n+    if (!fetchNext())\n+    {\n+      close();\n+      next = RelationshipSelections.NO_ID;\n+    } else\n+    {\n+      next = cursor.relationshipReference();\n     }\n+\n+    return current;\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "126",
                    "severity": "error",
                    "message": "'{' at column 126 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/667/RelationshipSparseSelectionIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/667/RelationshipSparseSelectionIterator.java\nindex 5ae461eb0ec..99f1a75292d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/667/RelationshipSparseSelectionIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/667/RelationshipSparseSelectionIterator.java\n@@ -26,10 +26,7 @@ import org.neo4j.graphdb.ResourceIterator;\n /**\n  * Helper iterator for traversing specific types and directions of a sparse node.\n  */\n-public final class RelationshipSparseSelectionIterator<R> extends RelationshipSparseSelection\n-        implements ResourceIterator<R>\n-{\n-\n+public final class RelationshipSparseSelectionIterator<R> extends RelationshipSparseSelection implements ResourceIterator<R> {\n     private final RelationshipFactory<R> factory;\n     private long next;\n \n@@ -62,12 +59,9 @@ public final class RelationshipSparseSelectionIterator<R> extends RelationshipSp\n         {\n             throw new NoSuchElementException();\n         }\n-        R current = factory.relationship( next,\n-                                          cursor.sourceNodeReference(),\n-                                          cursor.type(),\n-                                          cursor.targetNodeReference() );\n \n-        if ( !fetchNext() )\n+R current = factory.relationship( next, cursor.sourceNodeReference(), cursor.type(), cursor.targetNodeReference() );\n+if ( !fetchNext() )\n         {\n             close();\n             next = RelationshipSelections.NO_ID;\n@@ -79,4 +73,4 @@ public final class RelationshipSparseSelectionIterator<R> extends RelationshipSp\n \n         return current;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "891",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/891/FileHistorian.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/891/FileHistorian.java\nindex 09b3f5c0896..94243d490df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/891/FileHistorian.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/891/FileHistorian.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.cli;\n \n import jline.console.ConsoleReader;\n@@ -42,44 +43,43 @@ public class FileHistorian implements Historian\n \n     private final MemoryHistory history;\n \n-    private FileHistorian( MemoryHistory history )\n+    private FileHistorian(MemoryHistory history)\n     {\n         this.history = history;\n     }\n \n     @Nonnull\n-    public static Historian setupHistory( @Nonnull final ConsoleReader reader,\n-                                          @Nonnull final Logger logger,\n-                                          @Nonnull final File historyFile ) throws IOException\n+    public static Historian setupHistory(@Nonnull final ConsoleReader reader,\n+                                         @Nonnull final Logger logger,\n+                                         @Nonnull final File historyFile) throws IOException\n     {\n         try\n         {\n             File dir = historyFile.getParentFile();\n-            if ( !dir.isDirectory() && !dir.mkdir() )\n+            if (!dir.isDirectory() && !dir.mkdir())\n             {\n-                throw new IOException( \"Failed to create directory for history: \" + dir.getAbsolutePath() );\n+                throw new IOException(\"Failed to create directory for history: \" + dir.getAbsolutePath());\n             }\n-            final FileHistory history = new FileHistory( historyFile );\n-            reader.setHistory( history );\n+            final FileHistory history = new FileHistory(historyFile);\n+            reader.setHistory(history);\n \n             // Make sure we flush history on exit\n-            addShutdownHookToFlushHistory( logger, history );\n+            addShutdownHookToFlushHistory(logger, history);\n \n-            return new FileHistorian( history );\n-        }\n-        catch ( IOException e )\n+            return new FileHistorian(history);\n+        } catch (IOException e)\n         {\n-            logger.printError( \"Could not load history file. Falling back to session-based history.\\n\"\n-                               + e.getMessage() );\n+            logger.printError(\"Could not load history file. Falling back to session-based history.\\n\"\n+              + e.getMessage());\n             MemoryHistory history = new MemoryHistory();\n-            reader.setHistory( history );\n-            return new FileHistorian( history );\n+            reader.setHistory(history);\n+            return new FileHistorian(history);\n         }\n     }\n \n-    private static void addShutdownHookToFlushHistory( @Nonnull final Logger logger, final FileHistory history )\n+    private static void addShutdownHookToFlushHistory(@Nonnull final Logger logger, final FileHistory history)\n     {\n-        Runtime.getRuntime().addShutdownHook( new Thread()\n+        Runtime.getRuntime().addShutdownHook(new Thread()\n         {\n             @Override\n             public void run()\n@@ -87,21 +87,20 @@ public class FileHistorian implements Historian\n                 try\n                 {\n                     history.flush();\n-                }\n-                catch ( IOException e )\n+                } catch (IOException e)\n                 {\n-                    logger.printError( \"Failed to save history:\\n\" + e.getMessage() );\n+                    logger.printError(\"Failed to save history:\\n\" + e.getMessage());\n                 }\n             }\n-        } );\n+        });\n     }\n \n     @Nonnull\n     public static File getDefaultHistoryFile()\n     {\n         // Storing in same directory as driver uses\n-        File dir = new File( getProperty( \"user.home\" ), \".neo4j\" );\n-        return new File( dir, \".neo4j_history\" );\n+        File dir = new File(getProperty(\"user.home\"), \".neo4j\");\n+        return new File(dir, \".neo4j_history\");\n     }\n \n     @Nonnull\n@@ -110,7 +109,7 @@ public class FileHistorian implements Historian\n     {\n         List<String> result = new ArrayList<>();\n \n-        history.forEach( entry -> result.add( String.valueOf( entry.value() ) ) );\n+        history.forEach(entry -> result.add(String.valueOf(entry.value())));\n \n         return result;\n     }\n@@ -118,7 +117,7 @@ public class FileHistorian implements Historian\n     @Override\n     public void flushHistory() throws IOException\n     {\n-        if ( history instanceof FileHistory )\n+        if (history instanceof FileHistory)\n         {\n             ((FileHistory) history).flush();\n         }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
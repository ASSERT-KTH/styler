{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3484",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "54",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3484/ReplicatedTransactionCommitProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3484/ReplicatedTransactionCommitProcess.java\nindex 2fb3dd4098c..a7a54be00b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3484/ReplicatedTransactionCommitProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3484/ReplicatedTransactionCommitProcess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n import java.util.concurrent.ExecutionException;\n@@ -33,46 +34,43 @@ import static org.neo4j.causalclustering.core.state.machines.tx.ReplicatedTransa\n \n public class ReplicatedTransactionCommitProcess implements TransactionCommitProcess\n {\n-    private final Replicator replicator;\n+  private final Replicator replicator;\n+\n+  public ReplicatedTransactionCommitProcess(Replicator replicator)\n+  {\n+    this.replicator = replicator;\n+  }\n \n-    public ReplicatedTransactionCommitProcess( Replicator replicator )\n+  @Override\n+  public long commit(final TransactionToApply tx,\n+                     final CommitEvent commitEvent,\n+                     TransactionApplicationMode mode) throws TransactionFailureException\n+  {\n+    ReplicatedTransaction transaction = createImmutableReplicatedTransaction(tx.transactionRepresentation());\n+    Future<Object> futureTxId;\n+    try\n+    {\n+      futureTxId = replicator.replicate(transaction, true);\n+    } catch (InterruptedException e)\n     {\n-        this.replicator = replicator;\n+      throw new TransactionFailureException(\"Interrupted replicating transaction.\", e);\n     }\n \n-    @Override\n-    public long commit( final TransactionToApply tx,\n-                        final CommitEvent commitEvent,\n-                        TransactionApplicationMode mode ) throws TransactionFailureException\n+    try\n     {\n-        ReplicatedTransaction transaction = createImmutableReplicatedTransaction( tx.transactionRepresentation() );\n-        Future<Object> futureTxId;\n-        try\n-        {\n-            futureTxId = replicator.replicate( transaction, true );\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            throw new TransactionFailureException( \"Interrupted replicating transaction.\", e );\n-        }\n-\n-        try\n-        {\n-            return (long) futureTxId.get();\n-        }\n-        catch ( ExecutionException e )\n-        {\n-            if ( e.getCause() instanceof TransactionFailureException )\n-            {\n-                throw (TransactionFailureException) e.getCause();\n-            }\n-            // TODO: Panic?\n-            throw new RuntimeException( e );\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            // TODO Wait for the transaction to possibly finish within a user configurable time, before aborting.\n-            throw new TransactionFailureException( \"Interrupted while waiting for txId\", e );\n-        }\n+      return (long) futureTxId.get();\n+    } catch (ExecutionException e)\n+    {\n+      if (e.getCause() instanceof TransactionFailureException)\n+      {\n+        throw (TransactionFailureException) e.getCause();\n+      }\n+      // TODO: Panic?\n+      throw new RuntimeException(e);\n+    } catch (InterruptedException e)\n+    {\n+      // TODO Wait for the transaction to possibly finish within a user configurable time, before aborting.\n+      throw new TransactionFailureException(\"Interrupted while waiting for txId\", e);\n     }\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3484/ReplicatedTransactionCommitProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3484/ReplicatedTransactionCommitProcess.java\nindex 2fb3dd4098c..38a96b82b38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3484/ReplicatedTransactionCommitProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3484/ReplicatedTransactionCommitProcess.java\n@@ -21,14 +21,12 @@ package org.neo4j.causalclustering.core.state.machines.tx;\n \n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Future;\n-\n import org.neo4j.causalclustering.core.replication.Replicator;\n import org.neo4j.internal.kernel.api.exceptions.TransactionFailureException;\n import org.neo4j.kernel.impl.api.TransactionCommitProcess;\n import org.neo4j.kernel.impl.api.TransactionToApply;\n import org.neo4j.kernel.impl.transaction.tracing.CommitEvent;\n import org.neo4j.storageengine.api.TransactionApplicationMode;\n-\n import static org.neo4j.causalclustering.core.state.machines.tx.ReplicatedTransactionFactory.createImmutableReplicatedTransaction;\n \n public class ReplicatedTransactionCommitProcess implements TransactionCommitProcess\n@@ -41,9 +39,7 @@ public class ReplicatedTransactionCommitProcess implements TransactionCommitProc\n     }\n \n     @Override\n-    public long commit( final TransactionToApply tx,\n-                        final CommitEvent commitEvent,\n-                        TransactionApplicationMode mode ) throws TransactionFailureException\n+    public long commit( final TransactionToApply tx, final CommitEvent commitEvent, TransactionApplicationMode mode ) throws TransactionFailureException\n     {\n         ReplicatedTransaction transaction = createImmutableReplicatedTransaction( tx.transactionRepresentation() );\n         Future<Object> futureTxId;\n@@ -67,12 +63,14 @@ public class ReplicatedTransactionCommitProcess implements TransactionCommitProc\n                 throw (TransactionFailureException) e.getCause();\n             }\n             // TODO: Panic?\n+\n             throw new RuntimeException( e );\n         }\n-        catch ( InterruptedException e )\n-        {\n+\n+            catch ( InterruptedException e )\n+            {\n             // TODO Wait for the transaction to possibly finish within a user configurable time, before aborting.\n-            throw new TransactionFailureException( \"Interrupted while waiting for txId\", e );\n-        }\n+                throw new TransactionFailureException( \"Interrupted while waiting for txId\", e );\n+            }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
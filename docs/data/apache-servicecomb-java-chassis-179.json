{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "179",
    "information": {
        "errors": [
            {
                "line": "166",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      if (parameter.getName().equals(providerParameter.getName())) {\n        LOGGER.warn(\n            \"Param name [{}] is duplicated which may cause ambiguous deserialization result. Please check you schema definition\",\n            parameter.getName());\n        return;\n      }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/179/OperationGenerator.java\nindex eecfdc80588..993cc7ac6a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/179/OperationGenerator.java\n@@ -274,7 +274,6 @@ public class OperationGenerator {\n   }\n \n   /**\n-   *\n    * \u6839\u636emethod\u4e0a\u7684\u6570\u636e\uff0c\u7efc\u5408\u751f\u6210\u5951\u7ea6\u53c2\u6570\n    */\n   protected void scanMethodParameters() {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "332",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/179/OperationGenerator.java\nindex eecfdc80588..88f82a8ff50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/179/OperationGenerator.java\n@@ -329,9 +329,9 @@ public class OperationGenerator {\n     if (parameter instanceof AbstractSerializableParameter) {\n       if (defaultValue != null) {\n         ((AbstractSerializableParameter<?>) parameter).setDefaultValue(defaultValue);\n-      } else if ((((AbstractSerializableParameter<?>) parameter).getDefaultValue() == null)\n-          && (!((AbstractSerializableParameter<?>) parameter)\n-          .getRequired())) { //if required false then only take java primitive values as defaults\n+      } else if ((((AbstractSerializableParameter<?>) parameter).getDefaultValue() == null) && (!((AbstractSerializableParameter<?>) parameter)\n+          .getRequired())) {\n+  //if required false then only take java primitive values as defaults\n         if (parameterType instanceof Class && ((Class) parameterType).isPrimitive()) {\n           switch (parameterType.getTypeName()) {\n             case \"boolean\":\n@@ -450,4 +450,4 @@ public class OperationGenerator {\n     }\n     pathObj.set(httpMethod, operation);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "333",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/179/OperationGenerator.java\nindex eecfdc80588..f99c1855686 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/179/OperationGenerator.java\n@@ -27,9 +27,7 @@ import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import javax.ws.rs.DefaultValue;\n-\n import org.apache.servicecomb.swagger.SwaggerUtils;\n import org.apache.servicecomb.swagger.extend.parameter.ContextParameter;\n import org.apache.servicecomb.swagger.generator.core.processor.annotation.AnnotationUtils;\n@@ -37,9 +35,7 @@ import org.apache.servicecomb.swagger.generator.core.utils.ParamUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.StringUtils;\n-\n import com.google.inject.util.Types;\n-\n import io.swagger.models.HttpMethod;\n import io.swagger.models.Model;\n import io.swagger.models.Operation;\n@@ -62,20 +58,25 @@ public class OperationGenerator {\n \n   // \u6839\u636e\u65b9\u6cd5\u4e0a\u72ec\u7acb\u7684ResponseHeader(s)\u6807\u6ce8\u751f\u6210\u7684\u6570\u636e\n   // \u5982\u679cResponse\u4e2d\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684header\uff0c\u5219\u4f1a\u5c06\u8fd9\u4e9bheader\u8865\u5145\u8fdb\u53bb\n+\n   protected Map<String, Property> responseHeaderMap = new HashMap<>();\n \n   // provider\u7684\u65b9\u6cd5\n+\n   protected Method providerMethod;\n \n   // \u65b9\u6cd5annotation\u6240\u6709\u7684\u53c2\u6570\n+\n   private List<Parameter> methodAnnotationParameters = new ArrayList<>();\n \n   // provider\u6240\u6709\u7684\u53c2\u6570\n   // \u5982\u679c\u76f8\u540c\u7684\u53c2\u6570\u540d\u5728annotationParameters\u4e2d\u5df2\u7ecf\u5b58\u5728\n   // \u5219\u4eceannotationParameters\u79fb\u9664\uff0c\u5c06\u4e4b\u8f6c\u79fb\u5230providerParameters\u4e2d\u6765\uff0c\u8986\u76d6\u5728\u540c\u540d\u4f4d\u7f6e\n+\n   private List<Parameter> providerParameters = new ArrayList<>();\n \n   // \u751f\u6210\u7684\u5951\u7ea6\u53c2\u6570\n+\n   private List<Parameter> swaggerParameters = new ArrayList<>();\n \n   protected SwaggerGeneratorContext context;\n@@ -90,7 +91,6 @@ public class OperationGenerator {\n     this.operation = new Operation();\n     this.providerMethod = providerMethod;\n     this.context = swaggerGenerator.context;\n-\n     if (swagger.getParameters() != null) {\n       methodAnnotationParameters.addAll(swagger.getParameters().values());\n     }\n@@ -129,6 +129,7 @@ public class OperationGenerator {\n     if (!path.startsWith(\"/\")) {\n       path = \"/\" + path;\n     }\n+\n     this.path = path;\n   }\n \n@@ -152,6 +153,7 @@ public class OperationGenerator {\n    * Add a parameter into {@linkplain #providerParameters},\n    * duplicated name params will be ignored(excepting for {@linkplain ContextParameter}s)\n    */\n+\n   public void addProviderParameter(Parameter parameter) {\n     if (ContextParameter.class.isInstance(parameter)) {\n       // ContextParameter has no name and is not written in schema,\n@@ -160,11 +162,11 @@ public class OperationGenerator {\n       return;\n     }\n     // check duplicated param according to param name\n+\n     for (Parameter providerParameter : providerParameters) {\n       if (parameter.getName().equals(providerParameter.getName())) {\n-        LOGGER.warn(\n-            \"Param name [{}] is duplicated which may cause ambiguous deserialization result. Please check you schema definition\",\n-            parameter.getName());\n+        LOGGER.warn(\"Param name [{}] is duplicated which may cause ambiguous deserialization result. Please check you schema definition\",\n+parameter.getName());\n         return;\n       }\n     }\n@@ -180,11 +182,9 @@ public class OperationGenerator {\n     scanMethodAnnotation();\n     scanMethodParameters();\n     scanResponse();\n-\n     checkBodyParameter();\n     copyToSwaggerParameters();\n     operation.setParameters(swaggerParameters);\n-\n     correctOperation();\n   }\n \n@@ -214,7 +214,6 @@ public class OperationGenerator {\n         count++;\n       }\n     }\n-\n     return count;\n   }\n \n@@ -223,25 +222,25 @@ public class OperationGenerator {\n     int annotationBodyCount = countRealBodyParameter(methodAnnotationParameters);\n     if (annotationBodyCount > 1) {\n       throw new Error(String.format(\"too many (%d) body parameter in %s:%s annotation\",\n-          annotationBodyCount,\n-          providerMethod.getDeclaringClass().getName(),\n-          providerMethod.getName()));\n+annotationBodyCount,\n+providerMethod.getDeclaringClass().getName(),\n+providerMethod.getName()));\n     }\n \n     // providerParameters\u4e2d\u4e0d\u80fd\u6709\u591a\u4e2abody\n+\n     int parameterBodyCount = countRealBodyParameter(providerParameters);\n     if (parameterBodyCount > 1) {\n       throw new Error(String.format(\"too many (%d) body parameter in %s:%s parameters\",\n-          parameterBodyCount,\n-          providerMethod.getDeclaringClass().getName(),\n-          providerMethod.getName()));\n+parameterBodyCount,\n+providerMethod.getDeclaringClass().getName(),\n+providerMethod.getName()));\n     }\n \n     // annotationParameters\u548cproviderParameters\u4e0d\u80fd\u540c\u65f6\u51fa\u73b0body\n+\n     if (annotationBodyCount + parameterBodyCount >= 2) {\n-      throw new Error(String.format(\"not allow both defined body parameter in %s:%s annotation and parameters\",\n-          providerMethod.getDeclaringClass().getName(),\n-          providerMethod.getName()));\n+      throw new Error(String.format(\"not allow both defined body parameter in %s:%s annotation and parameters\", providerMethod.getDeclaringClass().getName(), providerMethod.getName()));\n     }\n   }\n \n@@ -251,6 +250,7 @@ public class OperationGenerator {\n       if (processor == null) {\n         continue;\n       }\n+\n       processor.process(annotation, this);\n     }\n \n@@ -268,6 +268,7 @@ public class OperationGenerator {\n     }\n \n     // if there is no tag, set default tag\n+\n     if (!swaggerGenerator.getDefaultTags().isEmpty()) {\n       operation.setTags(new ArrayList<>(swaggerGenerator.getDefaultTags()));\n     }\n@@ -277,6 +278,7 @@ public class OperationGenerator {\n    *\n    * \u6839\u636emethod\u4e0a\u7684\u6570\u636e\uff0c\u7efc\u5408\u751f\u6210\u5951\u7ea6\u53c2\u6570\n    */\n+\n   protected void scanMethodParameters() {\n     Annotation[][] allAnnotations = providerMethod.getParameterAnnotations();\n     Type[] parameterTypes = providerMethod.getGenericParameterTypes();\n@@ -287,7 +289,6 @@ public class OperationGenerator {\n       // \u6839\u636eannotation\u5904\u7406\n       Annotation[] paramAnnotations = allAnnotations[paramIdx];\n       processByParameterAnnotation(paramAnnotations, paramIdx, type);\n-\n       if (isArgumentNotProcessed(swaggerParamCount)) {\n         // \u662f\u5426\u9700\u8981\u6839\u636e\u53c2\u6570\u7c7b\u578b\u5904\u7406\uff0c\u76ee\u6807\u573a\u666f\uff1ahttpRequest\u4e4b\u7c7b\n         processByParameterType(type, paramIdx);\n@@ -318,30 +319,29 @@ public class OperationGenerator {\n       if (annotation instanceof DefaultValue) {\n         defaultValue = ((DefaultValue) annotation).value();\n       } else {\n-        ParameterAnnotationProcessor processor =\n-            context.findParameterAnnotationProcessor(annotation.annotationType());\n+        ParameterAnnotationProcessor processor = context.findParameterAnnotationProcessor(annotation.annotationType());\n         if (processor != null) {\n           processor.process(annotation, this, paramIdx);\n           parameter = this.providerParameters.get(this.providerParameters.size() - 1);\n         }\n       }\n     }\n+\n     if (parameter instanceof AbstractSerializableParameter) {\n       if (defaultValue != null) {\n         ((AbstractSerializableParameter<?>) parameter).setDefaultValue(defaultValue);\n-      } else if ((((AbstractSerializableParameter<?>) parameter).getDefaultValue() == null)\n-          && (!((AbstractSerializableParameter<?>) parameter)\n-          .getRequired())) { //if required false then only take java primitive values as defaults\n-        if (parameterType instanceof Class && ((Class) parameterType).isPrimitive()) {\n-          switch (parameterType.getTypeName()) {\n-            case \"boolean\":\n-              defaultValue = \"false\";\n-              break;\n-            default:\n-              defaultValue = \"0\";\n-          }\n-        }\n-        ((AbstractSerializableParameter<?>) parameter).setDefaultValue(defaultValue);\n+      } else if ((((AbstractSerializableParameter<?>) parameter).getDefaultValue() == null) && (!((AbstractSerializableParameter<?>) parameter).getRequired())) { //if required false then only take java primitive values as defaults\n+               if (parameterType instanceof Class && ((Class) parameterType).isPrimitive()) {\n+                 switch (parameterType.getTypeName()) {\n+                   case \"boolean\":\n+                     defaultValue = \"false\";\n+                     break;\n+                   default:\n+                     defaultValue = \"0\";\n+                 }\n+               }\n+\n+               ((AbstractSerializableParameter<?>) parameter).setDefaultValue(defaultValue);\n       }\n     }\n   }\n@@ -355,12 +355,14 @@ public class OperationGenerator {\n         processor = context.findParameterTypeProcessor(realType);\n       }\n     }\n+\n     if (processor != null) {\n       processor.process(this, paramIdx);\n     }\n   }\n \n   // check whether is ArrayList , LinkedList ...  or not\n+\n   private Type checkAndGetType(Type type) {\n     if (ParameterizedType.class.isAssignableFrom(type.getClass())) {\n       ParameterizedType targetType = (ParameterizedType) type;\n@@ -378,7 +380,6 @@ public class OperationGenerator {\n     }\n \n     context.postProcessOperation(this);\n-\n     SwaggerUtils.correctResponses(operation);\n     addHeaderToResponse();\n   }\n@@ -386,7 +387,6 @@ public class OperationGenerator {\n   private void addHeaderToResponse() {\n     for (Entry<String, Response> responseEntry : operation.getResponses().entrySet()) {\n       Response response = responseEntry.getValue();\n-\n       for (Entry<String, Property> entry : responseHeaderMap.entrySet()) {\n         if (response.getHeaders() != null && response.getHeaders().containsKey(entry.getKey())) {\n           continue;\n@@ -445,9 +445,10 @@ public class OperationGenerator {\n     HttpMethod hm = HttpMethod.valueOf(httpMethod.toUpperCase(Locale.US));\n     if (pathObj.getOperationMap().get(hm) != null) {\n       throw new Error(String.format(\"Only allowed one default path. %s:%s\",\n-          swaggerGenerator.getCls().getName(),\n-          providerMethod.getName()));\n+swaggerGenerator.getCls().getName(),\n+providerMethod.getName()));\n     }\n+\n     pathObj.set(httpMethod, operation);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/179/OperationGenerator.java\nindex eecfdc80588..8c4c7f92c5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/179/OperationGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/179/OperationGenerator.java\n@@ -162,8 +162,7 @@ public class OperationGenerator {\n     // check duplicated param according to param name\n     for (Parameter providerParameter : providerParameters) {\n       if (parameter.getName().equals(providerParameter.getName())) {\n-        LOGGER.warn(\n-            \"Param name [{}] is duplicated which may cause ambiguous deserialization result. Please check you schema definition\",\n+        LOGGER.warn(\"Param name [{}] is duplicated which may cause ambiguous deserialization result. Please check you schema definition\",\n             parameter.getName());\n         return;\n       }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
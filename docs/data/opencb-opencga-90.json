{
    "project_name": "opencb-opencga",
    "error_id": "90",
    "information": {
        "errors": [
            {
                "line": "15",
                "column": "24",
                "severity": "error",
                "message": "')' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\n    public static YesNoAuto parse(Map<String, ?> map, String key) {\n        if (map == null ) {\n            return AUTO;\n        }\n        return parse(map.get(key));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/90/YesNoAuto.java\nindex 0641d2a8c8b..840a400cf7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/90/YesNoAuto.java\n@@ -12,7 +12,7 @@ public enum YesNoAuto {\n \n \n     public static YesNoAuto parse(Map<String, ?> map, String key) {\n-        if (map == null ) {\n+        if (map == null) {\n             return AUTO;\n         }\n         return parse(map.get(key));\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/90/YesNoAuto.java\nindex 0641d2a8c8b..a5d7925ef29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/90/YesNoAuto.java\n@@ -6,57 +6,57 @@ import java.util.Map;\n \n public enum YesNoAuto {\n \n-    YES,\n-    NO,\n-    AUTO;\n+  YES,\n+  NO,\n+  AUTO;\n \n \n-    public static YesNoAuto parse(Map<String, ?> map, String key) {\n-        if (map == null ) {\n-            return AUTO;\n-        }\n-        return parse(map.get(key));\n+  public static YesNoAuto parse(Map<String, ?> map, String key) {\n+    if (map == null) {\n+      return AUTO;\n     }\n+    return parse(map.get(key));\n+  }\n \n-    public static YesNoAuto parse(Object value) {\n-        if (value == null) {\n-            return AUTO;\n-        }\n-        if (value instanceof YesNoAuto) {\n-            return ((YesNoAuto) value);\n-        }\n-        return parse(value.toString());\n+  public static YesNoAuto parse(Object value) {\n+    if (value == null) {\n+      return AUTO;\n     }\n+    if (value instanceof YesNoAuto) {\n+      return ((YesNoAuto) value);\n+    }\n+    return parse(value.toString());\n+  }\n \n-    private static YesNoAuto parse(String value) {\n-        if (StringUtils.isBlank(value)) {\n-            return AUTO;\n-        }\n-\n-        switch (value.toLowerCase()) {\n-            case \"auto\":\n-                return AUTO;\n-            case \"yes\":\n-            case \"true\":\n-                return YES;\n-            case \"no\":\n-            case \"false\":\n-                return NO;\n-            default:\n-                throw new IllegalArgumentException(\"Unknown option \" + value);\n-        }\n+  private static YesNoAuto parse(String value) {\n+    if (StringUtils.isBlank(value)) {\n+      return AUTO;\n     }\n \n-    public Boolean booleanValue() {\n-        switch (this) {\n-            case YES:\n-                return true;\n-            case NO:\n-                return false;\n-            case AUTO:\n-                return null;\n-            default:\n-                throw new IllegalArgumentException(\"Unknown option \" + this);\n-        }\n+    switch (value.toLowerCase()) {\n+      case \"auto\":\n+        return AUTO;\n+      case \"yes\":\n+      case \"true\":\n+        return YES;\n+      case \"no\":\n+      case \"false\":\n+        return NO;\n+      default:\n+        throw new IllegalArgumentException(\"Unknown option \" + value);\n+    }\n+  }\n+\n+  public Boolean booleanValue() {\n+    switch (this) {\n+      case YES:\n+        return true;\n+      case NO:\n+        return false;\n+      case AUTO:\n+        return null;\n+      default:\n+        throw new IllegalArgumentException(\"Unknown option \" + this);\n     }\n+  }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/90/YesNoAuto.java\nindex 0641d2a8c8b..bc2dc3410b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/90/YesNoAuto.java\n@@ -5,14 +5,13 @@ import org.apache.commons.lang3.StringUtils;\n import java.util.Map;\n \n public enum YesNoAuto {\n-\n     YES,\n     NO,\n     AUTO;\n \n \n     public static YesNoAuto parse(Map<String, ?> map, String key) {\n-        if (map == null ) {\n+        if (map == null) {\n             return AUTO;\n         }\n         return parse(map.get(key));\n@@ -59,4 +58,4 @@ public enum YesNoAuto {\n                 throw new IllegalArgumentException(\"Unknown option \" + this);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/90/YesNoAuto.java\nindex 0641d2a8c8b..840a400cf7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/90/YesNoAuto.java\n@@ -12,7 +12,7 @@ public enum YesNoAuto {\n \n \n     public static YesNoAuto parse(Map<String, ?> map, String key) {\n-        if (map == null ) {\n+        if (map == null) {\n             return AUTO;\n         }\n         return parse(map.get(key));\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/90/YesNoAuto.java\nindex 0641d2a8c8b..840a400cf7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/90/YesNoAuto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/90/YesNoAuto.java\n@@ -12,7 +12,7 @@ public enum YesNoAuto {\n \n \n     public static YesNoAuto parse(Map<String, ?> map, String key) {\n-        if (map == null ) {\n+        if (map == null) {\n             return AUTO;\n         }\n         return parse(map.get(key));\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
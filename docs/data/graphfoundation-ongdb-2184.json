{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2184",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2184/HighlyAvailableCommitProcessFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2184/HighlyAvailableCommitProcessFactory.java\nindex 472c9b845c8..8ae9564fca5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2184/HighlyAvailableCommitProcessFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2184/HighlyAvailableCommitProcessFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.factory;\n \n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n@@ -32,22 +33,22 @@ import static java.lang.reflect.Proxy.newProxyInstance;\n \n class HighlyAvailableCommitProcessFactory implements CommitProcessFactory\n {\n-    private final DelegateInvocationHandler<TransactionCommitProcess> commitProcessDelegate;\n+  private final DelegateInvocationHandler<TransactionCommitProcess> commitProcessDelegate;\n \n-    HighlyAvailableCommitProcessFactory( DelegateInvocationHandler<TransactionCommitProcess> commitProcessDelegate )\n-    {\n-        this.commitProcessDelegate = commitProcessDelegate;\n-    }\n+  HighlyAvailableCommitProcessFactory(DelegateInvocationHandler<TransactionCommitProcess> commitProcessDelegate)\n+  {\n+    this.commitProcessDelegate = commitProcessDelegate;\n+  }\n \n-    @Override\n-    public TransactionCommitProcess create( TransactionAppender appender, StorageEngine storageEngine,\n-            Config config )\n+  @Override\n+  public TransactionCommitProcess create(TransactionAppender appender, StorageEngine storageEngine,\n+                                         Config config)\n+  {\n+    if (config.get(GraphDatabaseSettings.read_only))\n     {\n-        if ( config.get( GraphDatabaseSettings.read_only ) )\n-        {\n-            return new ReadOnlyTransactionCommitProcess();\n-        }\n-        return (TransactionCommitProcess) newProxyInstance( TransactionCommitProcess.class.getClassLoader(),\n-                new Class[]{TransactionCommitProcess.class}, commitProcessDelegate );\n+      return new ReadOnlyTransactionCommitProcess();\n     }\n+    return (TransactionCommitProcess) newProxyInstance(TransactionCommitProcess.class.getClassLoader(),\n+        new Class[] {TransactionCommitProcess.class}, commitProcessDelegate);\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2184/HighlyAvailableCommitProcessFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2184/HighlyAvailableCommitProcessFactory.java\nindex 472c9b845c8..a892a6146d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2184/HighlyAvailableCommitProcessFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2184/HighlyAvailableCommitProcessFactory.java\n@@ -47,7 +47,6 @@ class HighlyAvailableCommitProcessFactory implements CommitProcessFactory\n         {\n             return new ReadOnlyTransactionCommitProcess();\n         }\n-        return (TransactionCommitProcess) newProxyInstance( TransactionCommitProcess.class.getClassLoader(),\n-                new Class[]{TransactionCommitProcess.class}, commitProcessDelegate );\n+        return (TransactionCommitProcess) newProxyInstance( TransactionCommitProcess.class.getClassLoader(), new Class[]{TransactionCommitProcess.class }, commitProcessDelegate );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3099",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3099/IndexKeyStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3099/IndexKeyStorage.java\nindex bb2e504f5d6..52c1ddc6207 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3099/IndexKeyStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3099/IndexKeyStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -30,40 +31,40 @@ import org.neo4j.memory.MemoryTracker;\n \n import static java.lang.String.format;\n \n-class IndexKeyStorage<KEY extends NativeIndexKey<KEY>> extends SimpleEntryStorage<KEY,IndexKeyStorage.KeyEntryCursor<KEY>>\n+class IndexKeyStorage<KEY extends NativeIndexKey<KEY>> extends SimpleEntryStorage<KEY, IndexKeyStorage.KeyEntryCursor<KEY>>\n {\n     private static final byte KEY_TYPE = 1;\n-    private final Layout<KEY,?> layout;\n+    private final Layout<KEY, ?> layout;\n \n-    IndexKeyStorage( FileSystemAbstraction fs, Path file, ByteBufferFactory.Allocator byteBufferFactory, int blockSize, Layout<KEY,?> layout,\n-            MemoryTracker memoryTracker )\n+    IndexKeyStorage(FileSystemAbstraction fs, Path file, ByteBufferFactory.Allocator byteBufferFactory, int blockSize, Layout<KEY, ?> layout,\n+                    MemoryTracker memoryTracker)\n     {\n-        super( fs, file, byteBufferFactory, blockSize, memoryTracker );\n+        super(fs, file, byteBufferFactory, blockSize, memoryTracker);\n         this.layout = layout;\n     }\n \n     @Override\n-    void add( KEY key, PageCursor pageCursor ) throws IOException\n+    void add(KEY key, PageCursor pageCursor) throws IOException\n     {\n-        int entrySize = TYPE_SIZE + BlockEntry.keySize( layout, key );\n-        prepareWrite( entrySize );\n-        pageCursor.putByte( KEY_TYPE );\n-        BlockEntry.write( pageCursor, layout, key );\n+        int entrySize = TYPE_SIZE + BlockEntry.keySize(layout, key);\n+        prepareWrite(entrySize);\n+        pageCursor.putByte(KEY_TYPE);\n+        BlockEntry.write(pageCursor, layout, key);\n     }\n \n     @Override\n-    KeyEntryCursor<KEY> reader( PageCursor pageCursor )\n+    KeyEntryCursor<KEY> reader(PageCursor pageCursor)\n     {\n-        return new KeyEntryCursor<>( pageCursor, layout );\n+        return new KeyEntryCursor<>(pageCursor, layout);\n     }\n \n-    static class KeyEntryCursor<KEY> implements BlockEntryCursor<KEY,Void>\n+    static class KeyEntryCursor<KEY> implements BlockEntryCursor<KEY, Void>\n     {\n         private final PageCursor pageCursor;\n-        private final Layout<KEY,?> layout;\n+        private final Layout<KEY, ?> layout;\n         private final KEY key;\n \n-        KeyEntryCursor( PageCursor pageCursor, Layout<KEY,?> layout )\n+        KeyEntryCursor(PageCursor pageCursor, Layout<KEY, ?> layout)\n         {\n             this.pageCursor = pageCursor;\n             this.layout = layout;\n@@ -74,15 +75,15 @@ class IndexKeyStorage<KEY extends NativeIndexKey<KEY>> extends SimpleEntryStorag\n         public boolean next() throws IOException\n         {\n             byte type = pageCursor.getByte();\n-            if ( type == STOP_TYPE )\n+            if (type == STOP_TYPE)\n             {\n                 return false;\n             }\n-            if ( type != KEY_TYPE )\n+            if (type != KEY_TYPE)\n             {\n-                throw new RuntimeException( format( \"Unexpected entry type. Expected %d or %d, but was %d.\", STOP_TYPE, KEY_TYPE, type ) );\n+                throw new RuntimeException(format(\"Unexpected entry type. Expected %d or %d, but was %d.\", STOP_TYPE, KEY_TYPE, type));\n             }\n-            BlockEntry.read( pageCursor, layout, key );\n+            BlockEntry.read(pageCursor, layout, key);\n             return true;\n         }\n \n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
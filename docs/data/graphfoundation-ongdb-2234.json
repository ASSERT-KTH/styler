{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2234",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2234/InputEntityDecorators.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2234/InputEntityDecorators.java\nindex b7053d67bbf..da67b55bce2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2234/InputEntityDecorators.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2234/InputEntityDecorators.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -30,157 +31,157 @@ import org.neo4j.unsafe.impl.batchimport.input.csv.Decorator;\n  */\n public class InputEntityDecorators\n {\n-    private InputEntityDecorators()\n+  private InputEntityDecorators()\n+  {\n+  }\n+\n+  /**\n+   * Ensures that all input nodes will at least have the given set of labels.\n+   */\n+  public static Decorator additiveLabels(final String[] labelNamesToAdd)\n+  {\n+    if (labelNamesToAdd == null || labelNamesToAdd.length == 0)\n     {\n+      return NO_DECORATOR;\n     }\n \n-    /**\n-     * Ensures that all input nodes will at least have the given set of labels.\n-     */\n-    public static Decorator additiveLabels( final String[] labelNamesToAdd )\n+    return node -> new AdditiveLabelsDecorator(node, labelNamesToAdd);\n+  }\n+\n+  /**\n+   * Ensures that input relationships without a specified relationship type will get\n+   * the specified default relationship type.\n+   */\n+  public static Decorator defaultRelationshipType(final String defaultType)\n+  {\n+    return defaultType == null\n+        ? NO_DECORATOR\n+        : relationship -> new RelationshipTypeDecorator(relationship, defaultType);\n+  }\n+\n+  private static final class AdditiveLabelsDecorator extends InputEntityVisitor.Delegate\n+  {\n+    private final String[] transport = new String[1];\n+    private final String[] labelNamesToAdd;\n+    private final boolean[] seenLabels;\n+    private boolean seenLabelField;\n+\n+    AdditiveLabelsDecorator(InputEntityVisitor actual, String[] labelNamesToAdd)\n     {\n-        if ( labelNamesToAdd == null || labelNamesToAdd.length == 0 )\n-        {\n-            return NO_DECORATOR;\n-        }\n-\n-        return node -> new AdditiveLabelsDecorator( node, labelNamesToAdd );\n+      super(actual);\n+      this.labelNamesToAdd = labelNamesToAdd;\n+      this.seenLabels = new boolean[labelNamesToAdd.length];\n     }\n \n-    /**\n-     * Ensures that input relationships without a specified relationship type will get\n-     * the specified default relationship type.\n-     */\n-    public static Decorator defaultRelationshipType( final String defaultType )\n+    @Override\n+    public boolean labelField(long labelField)\n     {\n-        return defaultType == null\n-                ? NO_DECORATOR\n-                : relationship -> new RelationshipTypeDecorator( relationship, defaultType );\n+      seenLabelField = true;\n+      return super.labelField(labelField);\n     }\n \n-    private static final class AdditiveLabelsDecorator extends InputEntityVisitor.Delegate\n+    @Override\n+    public boolean labels(String[] labels)\n     {\n-        private final String[] transport = new String[1];\n-        private final String[] labelNamesToAdd;\n-        private final boolean[] seenLabels;\n-        private boolean seenLabelField;\n-\n-        AdditiveLabelsDecorator( InputEntityVisitor actual, String[] labelNamesToAdd )\n-        {\n-            super( actual );\n-            this.labelNamesToAdd = labelNamesToAdd;\n-            this.seenLabels = new boolean[labelNamesToAdd.length];\n-        }\n-\n-        @Override\n-        public boolean labelField( long labelField )\n-        {\n-            seenLabelField = true;\n-            return super.labelField( labelField );\n-        }\n-\n-        @Override\n-        public boolean labels( String[] labels )\n+      if (!seenLabelField)\n+      {\n+        for (String label : labels)\n         {\n-            if ( !seenLabelField )\n+          for (int i = 0; i < labelNamesToAdd.length; i++)\n+          {\n+            if (!seenLabels[i] && labelNamesToAdd[i].equals(label))\n             {\n-                for ( String label : labels )\n-                {\n-                    for ( int i = 0; i < labelNamesToAdd.length; i++ )\n-                    {\n-                        if ( !seenLabels[i] && labelNamesToAdd[i].equals( label ) )\n-                        {\n-                            seenLabels[i] = true;\n-                        }\n-                    }\n-                }\n+              seenLabels[i] = true;\n             }\n-            return super.labels( labels );\n-        }\n-\n-        @Override\n-        public void endOfEntity() throws IOException\n-        {\n-            if ( !seenLabelField )\n-            {\n-                for ( int i = 0; i < seenLabels.length; i++ )\n-                {\n-                    if ( !seenLabels[i] )\n-                    {\n-                        transport[0] = labelNamesToAdd[i];\n-                        super.labels( transport );\n-                    }\n-                }\n-            }\n-\n-            Arrays.fill( seenLabels, false );\n-            seenLabelField = false;\n-            super.endOfEntity();\n+          }\n         }\n+      }\n+      return super.labels(labels);\n     }\n \n-    private static final class RelationshipTypeDecorator extends InputEntityVisitor.Delegate\n+    @Override\n+    public void endOfEntity() throws IOException\n     {\n-        private final String defaultType;\n-        private boolean hasType;\n-\n-        RelationshipTypeDecorator( InputEntityVisitor actual, String defaultType )\n+      if (!seenLabelField)\n+      {\n+        for (int i = 0; i < seenLabels.length; i++)\n         {\n-            super( actual );\n-            this.defaultType = defaultType;\n+          if (!seenLabels[i])\n+          {\n+            transport[0] = labelNamesToAdd[i];\n+            super.labels(transport);\n+          }\n         }\n+      }\n \n-        @Override\n-        public boolean type( int type )\n-        {\n-            hasType = true;\n-            return super.type( type );\n-        }\n+      Arrays.fill(seenLabels, false);\n+      seenLabelField = false;\n+      super.endOfEntity();\n+    }\n+  }\n \n-        @Override\n-        public boolean type( String type )\n-        {\n-            if ( type != null )\n-            {\n-                hasType = true;\n-            }\n-            return super.type( type );\n-        }\n+  private static final class RelationshipTypeDecorator extends InputEntityVisitor.Delegate\n+  {\n+    private final String defaultType;\n+    private boolean hasType;\n \n-        @Override\n-        public void endOfEntity() throws IOException\n-        {\n-            if ( !hasType )\n-            {\n-                super.type( defaultType );\n-                hasType = false;\n-            }\n+    RelationshipTypeDecorator(InputEntityVisitor actual, String defaultType)\n+    {\n+      super(actual);\n+      this.defaultType = defaultType;\n+    }\n \n-            super.endOfEntity();\n-        }\n+    @Override\n+    public boolean type(int type)\n+    {\n+      hasType = true;\n+      return super.type(type);\n     }\n \n-    public static Decorator decorators( final Decorator... decorators )\n+    @Override\n+    public boolean type(String type)\n     {\n-        return new Decorator()\n-        {\n-            @Override\n-            public InputEntityVisitor apply( InputEntityVisitor from )\n-            {\n-                for ( Decorator decorator : decorators )\n-                {\n-                    from = decorator.apply( from );\n-                }\n-                return from;\n-            }\n+      if (type != null)\n+      {\n+        hasType = true;\n+      }\n+      return super.type(type);\n+    }\n \n-            @Override\n-            public boolean isMutable()\n-            {\n-                return Stream.of( decorators ).anyMatch( Decorator::isMutable );\n-            }\n-        };\n+    @Override\n+    public void endOfEntity() throws IOException\n+    {\n+      if (!hasType)\n+      {\n+        super.type(defaultType);\n+        hasType = false;\n+      }\n+\n+      super.endOfEntity();\n     }\n+  }\n \n-    public static final Decorator NO_DECORATOR = value -> value;\n+  public static Decorator decorators(final Decorator... decorators)\n+  {\n+    return new Decorator()\n+    {\n+      @Override\n+      public InputEntityVisitor apply(InputEntityVisitor from)\n+      {\n+        for (Decorator decorator : decorators)\n+        {\n+          from = decorator.apply(from);\n+        }\n+        return from;\n+      }\n+\n+      @Override\n+      public boolean isMutable()\n+      {\n+        return Stream.of(decorators).anyMatch(Decorator::isMutable);\n+      }\n+    };\n+  }\n+\n+  public static final Decorator NO_DECORATOR = value -> value;\n }\n",
            "diff_size": 194
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "50",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2234/InputEntityDecorators.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2234/InputEntityDecorators.java\nindex b7053d67bbf..3c193a39191 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2234/InputEntityDecorators.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2234/InputEntityDecorators.java\n@@ -53,9 +53,7 @@ public class InputEntityDecorators\n      */\n     public static Decorator defaultRelationshipType( final String defaultType )\n     {\n-        return defaultType == null\n-                ? NO_DECORATOR\n-                : relationship -> new RelationshipTypeDecorator( relationship, defaultType );\n+        return defaultType == null ? NO_DECORATOR: relationship -> new RelationshipTypeDecorator( relationship, defaultType );\n     }\n \n     private static final class AdditiveLabelsDecorator extends InputEntityVisitor.Delegate\n@@ -171,7 +169,8 @@ public class InputEntityDecorators\n                 {\n                     from = decorator.apply( from );\n                 }\n-                return from;\n+\n+return from;\n             }\n \n             @Override\n@@ -183,4 +182,4 @@ public class InputEntityDecorators\n     }\n \n     public static final Decorator NO_DECORATOR = value -> value;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
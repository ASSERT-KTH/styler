{
    "project_name": "neo4j-neo4j",
    "error_id": "1212",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1212/HighestTransactionId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1212/HighestTransactionId.java\nindex 7dac3475f39..e837bf78a8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1212/HighestTransactionId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1212/HighestTransactionId.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.concurrent.atomic.AtomicReference;\n@@ -31,34 +32,34 @@ public class HighestTransactionId\n {\n     private final AtomicReference<TransactionId> highest = new AtomicReference<>();\n \n-    public HighestTransactionId( long initialTransactionId, int initialChecksum, long commitTimestamp )\n+    public HighestTransactionId(long initialTransactionId, int initialChecksum, long commitTimestamp)\n     {\n-        set( initialTransactionId, initialChecksum, commitTimestamp );\n+        set(initialTransactionId, initialChecksum, commitTimestamp);\n     }\n \n     /**\n      * Offers a transaction id. Will be accepted if this is higher than the current highest.\n      * This method is thread-safe.\n      *\n-     * @param transactionId transaction id to compare for highest.\n-     * @param checksum checksum of the transaction.\n+     * @param transactionId   transaction id to compare for highest.\n+     * @param checksum        checksum of the transaction.\n      * @param commitTimestamp commit time for transaction with {@code transactionId}.\n      * @return {@code true} if the given transaction id was higher than the current highest,\n      * {@code false}.\n      */\n-    public boolean offer( long transactionId, int checksum, long commitTimestamp )\n+    public boolean offer(long transactionId, int checksum, long commitTimestamp)\n     {\n         TransactionId high = highest.get();\n-        if ( transactionId < high.transactionId() )\n+        if (transactionId < high.transactionId())\n         {   // a higher id has already been offered\n             return false;\n         }\n \n-        TransactionId update = new TransactionId( transactionId, checksum, commitTimestamp );\n-        while ( !highest.compareAndSet( high, update ) )\n+        TransactionId update = new TransactionId(transactionId, checksum, commitTimestamp);\n+        while (!highest.compareAndSet(high, update))\n         {\n             high = highest.get();\n-            if ( high.transactionId() >= transactionId )\n+            if (high.transactionId() >= transactionId)\n             {   // apparently someone else set a higher id while we were trying to set this id\n                 return false;\n             }\n@@ -70,13 +71,13 @@ public class HighestTransactionId\n     /**\n      * Overrides the highest transaction id value, no matter what it currently is. Used for initialization purposes.\n      *\n-     * @param transactionId id of the transaction.\n-     * @param checksum checksum of the transaction.\n+     * @param transactionId   id of the transaction.\n+     * @param checksum        checksum of the transaction.\n      * @param commitTimestamp commit time for transaction with {@code transactionId}.\n      */\n-    public final void set( long transactionId, int checksum, long commitTimestamp )\n+    public final void set(long transactionId, int checksum, long commitTimestamp)\n     {\n-        highest.set( new TransactionId( transactionId, checksum, commitTimestamp ) );\n+        highest.set(new TransactionId(transactionId, checksum, commitTimestamp));\n     }\n \n     /**\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Stratio-bdt",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "657",
                "severity": "error",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @param numberOfCookies number of cookies that must be saved\n     */\n    @Then(\"^I have '(.+?)' selenium cookies saved$\")\n    public void getSeleniumCookiesSize(int numberOfCookies) throws Exception {\n        Assertions.assertThat(commonspec.getSeleniumCookies().size()).isEqualTo(numberOfCookies);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "657",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/36/ThenGSpec.java\nindex 117ee8dd18f..964bc4ea522 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/36/ThenGSpec.java\n@@ -75,8 +75,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @param exceptionMsg\n      */\n     @Then(\"^an exception '(.+?)' thrown( with class '(.+?)'( and message like '(.+?)')?)?\")\n-    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar, String exceptionMsg)\n-            throws ClassNotFoundException {\n+    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar,\n+                                         String exceptionMsg)\n+        throws ClassNotFoundException {\n         List<Exception> exceptions = commonspec.getExceptions();\n         if (\"IS NOT\".equals(exception)) {\n             assertThat(exceptions).as(\"Captured exception list is not empty\").isEmpty();\n@@ -85,10 +86,12 @@ public class ThenGSpec extends BaseGSpec {\n             Exception ex = exceptions.get(exceptions.size() - 1);\n             if ((clazz != null) && (exceptionMsg != null)) {\n                 assertThat(ex.toString()).as(\"Unexpected last exception class\").contains(clazz);\n-                assertThat(ex.toString()).as(\"Unexpected last exception message\").contains(exceptionMsg);\n+                assertThat(ex.toString()).as(\"Unexpected last exception message\")\n+                    .contains(exceptionMsg);\n \n             } else if (clazz != null) {\n-                assertThat(exceptions.get(exceptions.size() - 1).getClass().getSimpleName()).as(\"Unexpected last exception class\").isEqualTo(clazz);\n+                assertThat(exceptions.get(exceptions.size() - 1).getClass().getSimpleName())\n+                    .as(\"Unexpected last exception class\").isEqualTo(clazz);\n             }\n \n             commonspec.getExceptions().clear();\n@@ -102,7 +105,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' exists$\")\n     public void assertKeyspaceOnCassandraExists(String keyspace) {\n-        assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" exists on cassandra\").contains(keyspace);\n+        assertThat(commonspec.getCassandraClient().getKeyspaces())\n+            .as(\"The keyspace \" + keyspace + \" exists on cassandra\").contains(keyspace);\n     }\n \n     /**\n@@ -112,7 +116,9 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' does not exist$\")\n     public void assertKeyspaceOnCassandraDoesNotExist(String keyspace) {\n-        assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" does not exist on cassandra\").doesNotContain(keyspace);\n+        assertThat(commonspec.getCassandraClient().getKeyspaces())\n+            .as(\"The keyspace \" + keyspace + \" does not exist on cassandra\")\n+            .doesNotContain(keyspace);\n     }\n \n     /**\n@@ -123,7 +129,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)'$\")\n     public void assertTableExistsOnCassandraKeyspace(String keyspace, String tableName) {\n-        assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").contains(tableName);\n+        assertThat(commonspec.getCassandraClient().getTables(keyspace))\n+            .as(\"The table \" + tableName + \"exists on cassandra\").contains(tableName);\n     }\n \n     /**\n@@ -134,7 +141,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' does not contain a table '(.+?)'$\")\n     public void assertTableDoesNotExistOnCassandraKeyspace(String keyspace, String tableName) {\n-        assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").doesNotContain(tableName);\n+        assertThat(commonspec.getCassandraClient().getTables(keyspace))\n+            .as(\"The table \" + tableName + \"exists on cassandra\").doesNotContain(tableName);\n     }\n \n     /**\n@@ -145,11 +153,14 @@ public class ThenGSpec extends BaseGSpec {\n      * @param numberRows\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with '(.+?)' rows$\")\n-    public void assertRowNumberOfTableOnCassandraKeyspace(String keyspace, String tableName, String numberRows) {\n+    public void assertRowNumberOfTableOnCassandraKeyspace(String keyspace, String tableName,\n+                                                          String numberRows) {\n         Long numberRowsLong = Long.parseLong(numberRows);\n         commonspec.getCassandraClient().useKeyspace(keyspace);\n-        assertThat(commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\").all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").\n-                isEqualTo(numberRowsLong);\n+        assertThat(\n+            commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\")\n+                .all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").\n+            isEqualTo(numberRowsLong);\n     }\n \n     /**\n@@ -161,7 +172,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws InterruptedException\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with values:$\")\n-    public void assertValuesOfTable(String keyspace, String tableName, DataTable data) throws InterruptedException {\n+    public void assertValuesOfTable(String keyspace, String tableName, DataTable data)\n+        throws InterruptedException {\n         //  USE of Keyspace\n         commonspec.getCassandraClient().useKeyspace(keyspace);\n         // Obtain the types and column names of the datatable\n@@ -169,19 +181,24 @@ public class ThenGSpec extends BaseGSpec {\n         Map<String, String> dataTableColumns = extractColumnNamesAndTypes(data.raw().get(0));\n         // check if the table has columns\n         String query = \"SELECT * FROM \" + tableName + \" LIMIT 1;\";\n-        com.datastax.driver.core.ResultSet res = commonspec.getCassandraClient().executeQuery(query);\n+        com.datastax.driver.core.ResultSet res =\n+            commonspec.getCassandraClient().executeQuery(query);\n         equalsColumns(res.getColumnDefinitions(), dataTableColumns);\n         //receiving the string from the select with the columns\n         // that belong to the dataTable\n-        List<String> selectQueries = giveQueriesList(data, tableName, columnNames(data.raw().get(0)));\n+        List<String> selectQueries =\n+            giveQueriesList(data, tableName, columnNames(data.raw().get(0)));\n         //Check the data  of cassandra with different queries\n         int index = 1;\n         for (String execQuery : selectQueries) {\n             res = commonspec.getCassandraClient().executeQuery(execQuery);\n             List<Row> resAsList = res.all();\n-            assertThat(resAsList.size()).as(\"The query \" + execQuery + \" not return any result on Cassandra\").isGreaterThan(0);\n+            assertThat(resAsList.size())\n+                .as(\"The query \" + execQuery + \" not return any result on Cassandra\")\n+                .isGreaterThan(0);\n             assertThat(resAsList.get(0).toString()\n-                    .substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\").isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n+                .substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\")\n+                .isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n             index++;\n         }\n     }\n@@ -191,9 +208,11 @@ public class ThenGSpec extends BaseGSpec {\n         Iterator it = dataTableColumns.entrySet().iterator();\n         while (it.hasNext()) {\n             Map.Entry e = (Map.Entry) it.next();\n-            assertThat(resCols.toString()).as(\"The table not contains the column.\").contains(e.getKey().toString());\n+            assertThat(resCols.toString()).as(\"The table not contains the column.\")\n+                .contains(e.getKey().toString());\n             DataType type = resCols.getType(e.getKey().toString());\n-            assertThat(type.getName().toString()).as(\"The column type is not equals.\").isEqualTo(e.getValue().toString());\n+            assertThat(type.getName().toString()).as(\"The column type is not equals.\")\n+                .isEqualTo(e.getValue().toString());\n         }\n     }\n \n@@ -253,7 +272,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Then(\"^a Mongo dataBase '(.+?)' contains a table '(.+?)' with values:\")\n     public void assertValuesOfTableMongo(String dataBase, String tableName, DataTable data) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(dataBase);\n-        ArrayList<DBObject> result = (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(\n+        ArrayList<DBObject> result =\n+            (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(\n                 tableName, data);\n         DBObjectsAssert.assertThat(result).containedInMongoDBResult(data);\n \n@@ -269,7 +289,8 @@ public class ThenGSpec extends BaseGSpec {\n     public void aMongoDataBaseContainsaTable(String database, String tableName) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(database);\n         Set<String> collectionsNames = commonspec.getMongoDBClient().getMongoDBCollections();\n-        assertThat(collectionsNames).as(\"The Mongo dataBase contains the table\").doesNotContain(tableName);\n+        assertThat(collectionsNames).as(\"The Mongo dataBase contains the table\")\n+            .doesNotContain(tableName);\n     }\n \n     /**\n@@ -280,15 +301,20 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as text$\")\n     public void assertSeleniumTextOnElementPresent(Integer index, String text) {\n-        assertThat(commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String elementText = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText().replace(\"\\n\", \" \").replace(\"\\r\", \" \");\n+        assertThat(commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String elementText =\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText()\n+                .replace(\"\\n\", \" \").replace(\"\\r\", \" \");\n         if (!elementText.startsWith(\"regex:\")) {\n             //We are verifying that a web element contains a string\n             assertThat(elementText.matches(\"(.*)\" + text + \"(.*)\")).isTrue();\n         } else {\n             //We are verifying that a web element contains a regex\n-            assertThat(elementText.matches(text.substring(text.indexOf(\"regex:\") + 6, text.length()))).isTrue();\n+            assertThat(\n+                elementText.matches(text.substring(text.indexOf(\"regex:\") + 6, text.length())))\n+                .isTrue();\n         }\n     }\n \n@@ -299,7 +325,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^this text exists '(.+?)'$\")\n     public void assertSeleniumTextInSource(String text) {\n-        assertThat(this.commonspec, commonspec.getDriver()).as(\"Expected text not found at page\").contains(text);\n+        assertThat(this.commonspec, commonspec.getDriver()).as(\"Expected text not found at page\")\n+            .contains(text);\n     }\n \n     /**\n@@ -315,7 +342,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^'(\\\\d+?)' elements? exists? with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExists(Integer expectedCount, String method, String element) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertSeleniumNElementExists(Integer expectedCount, String method, String element)\n+        throws ClassNotFoundException, NoSuchFieldException, SecurityException,\n+        IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = commonspec.locateElement(method, element, expectedCount);\n         PreviousWebElements pwel = new PreviousWebElements(wel);\n         commonspec.setPreviousWebElements(pwel);\n@@ -339,8 +368,11 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, '(\\\\d+?)' elements exists with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount,\n-                                                      String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait,\n+                                                      Integer expectedCount,\n+                                                      String method, String element)\n+        throws InterruptedException, ClassNotFoundException, NoSuchFieldException,\n+        SecurityException, IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = null;\n         for (int i = 0; i < timeout; i += wait) {\n             wel = commonspec.locateElement(method, element, -1);\n@@ -369,7 +401,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws InterruptedException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, the command output '(.+?)' contains '(.+?)'( with exit status '(.+?)')?$\")\n-    public void assertCommandExistsOnTimeOut(Integer timeout, Integer wait, String command, String search, String foo, Integer exitStatus) throws Exception {\n+    public void assertCommandExistsOnTimeOut(Integer timeout, Integer wait, String command,\n+                                             String search, String foo, Integer exitStatus)\n+        throws Exception {\n         Boolean found = false;\n         AssertionError ex = null;\n         command = \"set -o pipefail && alias grep='grep --color=never' && \" + command;\n@@ -382,13 +416,16 @@ public class ThenGSpec extends BaseGSpec {\n             commonspec.setCommandResult(commonspec.getRemoteSSHConnection().getResult());\n             try {\n                 if (exitStatus != null) {\n-                    assertThat(commonspec.getRemoteSSHConnection().getExitStatus()).isEqualTo(exitStatus);\n+                    assertThat(commonspec.getRemoteSSHConnection().getExitStatus())\n+                        .isEqualTo(exitStatus);\n                 }\n-                assertThat(commonspec.getCommandResult()).as(\"Contains \" + search + \".\").contains(search);\n+                assertThat(commonspec.getCommandResult()).as(\"Contains \" + search + \".\")\n+                    .contains(search);\n                 found = true;\n                 timeout = i;\n             } catch (AssertionError e) {\n-                commonspec.getLogger().info(\"Command output don't found yet after \" + i + \" seconds\");\n+                commonspec.getLogger()\n+                    .info(\"Command output don't found yet after \" + i + \" seconds\");\n                 Thread.sleep(wait * 1000);\n                 ex = e;\n             }\n@@ -408,9 +445,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) displayed$\")\n     public void assertSeleniumIsDisplayed(Integer index, Boolean isDisplayed) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed()).as(\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed())\n+            .as(\n                 \"Unexpected element display property\").isEqualTo(isDisplayed);\n     }\n \n@@ -422,10 +462,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) enabled$\")\n     public void assertSeleniumIsEnabled(Integer index, Boolean isEnabled) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled())\n-                .as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled())\n+            .as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n     }\n \n     /**\n@@ -436,9 +478,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) selected$\")\n     public void assertSeleniumIsSelected(Integer index, Boolean isSelected) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected()).as(\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected())\n+            .as(\n                 \"Unexpected element selected property\").isEqualTo(isSelected);\n     }\n \n@@ -451,11 +496,14 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as '(.+?)'$\")\n     public void assertSeleniumHasAttributeValue(Integer index, String attribute, String value) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String val = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getAttribute(attribute);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String val = commonspec.getPreviousWebElements().getPreviousWebElements().get(index)\n+            .getAttribute(attribute);\n         assertThat(this.commonspec, val).as(\"Attribute not found\").isNotNull();\n-        assertThat(this.commonspec, val).as(\"Unexpected value for specified attribute\").matches(value);\n+        assertThat(this.commonspec, val).as(\"Unexpected value for specified attribute\")\n+            .matches(value);\n     }\n \n     /**\n@@ -487,18 +535,22 @@ public class ThenGSpec extends BaseGSpec {\n \n         String webURL = commonspec.getWebHost() + commonspec.getWebPort();\n \n-        assertThat(commonspec.getDriver().getCurrentUrl()).as(\"We are not in the expected url: \" + webURL.toLowerCase() + url)\n-                .endsWith(webURL.toLowerCase() + url);\n+        assertThat(commonspec.getDriver().getCurrentUrl())\n+            .as(\"We are not in the expected url: \" + webURL.toLowerCase() + url)\n+            .endsWith(webURL.toLowerCase() + url);\n     }\n \n     @Then(\"^the service response must contain the text '(.*?)'$\")\n-    public void assertResponseMessage(String expectedText) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertResponseMessage(String expectedText)\n+        throws ClassNotFoundException, NoSuchFieldException, SecurityException,\n+        IllegalArgumentException, IllegalAccessException {\n         Pattern pattern = CommonG.matchesOrContains(expectedText);\n         assertThat(commonspec.getResponse().getResponse()).containsPattern(pattern);\n     }\n \n     @Then(\"^the service response status must be '(.*?)'( and its response length must be '(.*?)' | and its response must contain the text '(.*?)')?$\")\n-    public void assertResponseStatusLength(Integer expectedStatus, String foo, Integer expectedLength, String expectedText) {\n+    public void assertResponseStatusLength(Integer expectedStatus, String foo,\n+                                           Integer expectedLength, String expectedText) {\n         if (foo != null) {\n             if (foo.contains(\"length\")) {\n                 assertThat(Optional.of(commonspec.getResponse())).hasValueSatisfying(r -> {\n@@ -542,7 +594,8 @@ public class ThenGSpec extends BaseGSpec {\n     public void resultsMustBe(DataTable expectedResults) throws Exception {\n \n         String type = commonspec.getResultsType();\n-        assertThat(type).isNotEqualTo(\"\").overridingErrorMessage(\"It's necessary to define the result type\");\n+        assertThat(type).isNotEqualTo(\"\")\n+            .overridingErrorMessage(\"It's necessary to define the result type\");\n         switch (type) {\n             case \"cassandra\":\n                 commonspec.resultsMustBeCassandra(expectedResults);\n@@ -578,7 +631,8 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^the command output does not contain '(.+?)'$\")\n     public void notFindShellOutput(String search) throws Exception {\n-        assertThat(commonspec.getCommandResult()).as(\"NotContains \" + search + \".\").doesNotContain(search);\n+        assertThat(commonspec.getCommandResult()).as(\"NotContains \" + search + \".\")\n+            .doesNotContain(search);\n     }\n \n     /**\n@@ -591,7 +645,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Deprecated\n     @Then(\"^the command exit status is '(.+?)'$\")\n     public void checkShellExitStatus(int expectedExitStatus) throws Exception {\n-        assertThat(commonspec.getCommandExitStatus()).as(\"Is equal to \" + expectedExitStatus + \".\").isEqualTo(expectedExitStatus);\n+        assertThat(commonspec.getCommandExitStatus()).as(\"Is equal to \" + expectedExitStatus + \".\")\n+            .isEqualTo(expectedExitStatus);\n     }\n \n     /**\n@@ -608,8 +663,9 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^I save selenium dcos acs auth cookie in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String envVar) throws Exception {\n-        if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+        if (commonspec.getSeleniumCookies() != null &&\n+            commonspec.getSeleniumCookies().size() != 0) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(\"dcos-acs-auth-cookie\")) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -626,8 +682,9 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^I save selenium cookie '(.+?)' in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String cookieName, String envVar) throws Exception {\n-        if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+        if (commonspec.getSeleniumCookies() != null &&\n+            commonspec.getSeleniumCookies().size() != 0) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(cookieName)) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -649,6 +706,7 @@ public class ThenGSpec extends BaseGSpec {\n         Assertions.assertThat(commonspec.cookieExists(cookieName)).isEqualTo(true);\n \n     }\n+\n     /**\n      * Check if the length of the cookie set match with the number of cookies thas must be saved\n      *\n@@ -690,23 +748,30 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I add a new DCOS label with key '(.+?)' and value '(.+?)' to the service '(.+?)'?$\")\n     public void sendAppendRequest(String key, String value, String service) throws Exception {\n-        commonspec.runCommandAndGetResult(\"touch \" + service + \".json && dcos marathon app show \" + service + \" > /dcos/\" + service + \".json\");\n+        commonspec.runCommandAndGetResult(\n+            \"touch \" + service + \".json && dcos marathon app show \" + service + \" > /dcos/\" +\n+                service + \".json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \".json\");\n \n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n         String myValue = commonspec.getJSONPathString(configFile, \".labels\", \"0\");\n-        String myJson = commonspec.updateMarathonJson(commonspec.removeJSONPathElement(configFile, \"$.labels\"));\n+        String myJson =\n+            commonspec.updateMarathonJson(commonspec.removeJSONPathElement(configFile, \"$.labels\"));\n \n         String newValue = myValue.replaceFirst(\"\\\\{\", \"{\\\"\" + key + \"\\\": \\\"\" + value + \"\\\", \");\n         newValue = \"\\\"labels\\\":\" + newValue;\n-        String myFinalJson = myJson.replaceFirst(\"\\\\{\", \"{\" + newValue.replace(\"\\\\n\", \"\\\\\\\\n\") + \",\");\n+        String myFinalJson =\n+            myJson.replaceFirst(\"\\\\{\", \"{\" + newValue.replace(\"\\\\n\", \"\\\\\\\\n\") + \",\");\n         if (myFinalJson.contains(\"uris\")) {\n             String test = myFinalJson.replaceAll(\"\\\"uris\\\"\", \"\\\"none\\\"\");\n-            commonspec.runCommandAndGetResult(\"echo '\" + test + \"' > /dcos/final\" + service + \".json\");\n+            commonspec\n+                .runCommandAndGetResult(\"echo '\" + test + \"' > /dcos/final\" + service + \".json\");\n         } else {\n-            commonspec.runCommandAndGetResult(\"echo '\" + myFinalJson + \"' > /dcos/final\" + service + \".json\");\n+            commonspec.runCommandAndGetResult(\n+                \"echo '\" + myFinalJson + \"' > /dcos/final\" + service + \".json\");\n         }\n-        commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \".json\");\n+        commonspec.runCommandAndGetResult(\n+            \"dcos marathon app update \" + service + \" < /dcos/final\" + service + \".json\");\n \n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n     }\n@@ -723,7 +788,8 @@ public class ThenGSpec extends BaseGSpec {\n             String breakpoint = commonspec.getZookeeperSecClient().zRead(zNode);\n             assert breakpoint.equals(\"\") : \"The zNode does not exist\";\n         } else {\n-            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document) : \"The zNode does not exist or the content does not match\";\n+            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document) :\n+                \"The zNode does not exist or the content does not match\";\n         }\n     }\n \n@@ -739,7 +805,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^A kafka topic named '(.+?)' exists\")\n     public void kafkaTopicExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is no topic with that name\";\n+        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) :\n+            \"There is no topic with that name\";\n     }\n \n     /**\n@@ -749,7 +816,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^A kafka topic named '(.+?)' does not exist\")\n     public void kafkaTopicNotExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert !commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is a topic with that name\";\n+        assert !commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) :\n+            \"There is a topic with that name\";\n     }\n \n \n@@ -763,7 +831,9 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I modify marathon environment variable '(.+?)' with value '(.+?)' for service '(.+?)'?$\")\n     public void setMarathonProperty(String key, String value, String service) throws Exception {\n-        commonspec.runCommandAndGetResult(\"touch \" + service + \"-env.json && dcos marathon app show \" + service + \" > /dcos/\" + service + \"-env.json\");\n+        commonspec.runCommandAndGetResult(\n+            \"touch \" + service + \"-env.json && dcos marathon app show \" + service + \" > /dcos/\" +\n+                service + \"-env.json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \"-env.json\");\n \n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n@@ -771,8 +841,10 @@ public class ThenGSpec extends BaseGSpec {\n         String myJson4 = commonspec.updateMarathonJson(myJson1);\n         String myJson = myJson4.replaceAll(\"\\\"uris\\\"\", \"\\\"none\\\"\");\n \n-        commonspec.runCommandAndGetResult(\"echo '\" + myJson + \"' > /dcos/final\" + service + \"-env.json\");\n-        commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \"-env.json\");\n+        commonspec\n+            .runCommandAndGetResult(\"echo '\" + myJson + \"' > /dcos/final\" + service + \"-env.json\");\n+        commonspec.runCommandAndGetResult(\n+            \"dcos marathon app update \" + service + \" < /dcos/final\" + service + \"-env.json\");\n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n     }\n \n@@ -785,7 +857,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^The number of partitions in topic '(.+?)' should be '(.+?)''?$\")\n     public void checkNumberOfPartitions(String topic_name, int numOfPartitions) throws Exception {\n-        Assertions.assertThat(commonspec.getKafkaUtils().getPartitions(topic_name)).isEqualTo(numOfPartitions);\n+        Assertions.assertThat(commonspec.getKafkaUtils().getPartitions(topic_name))\n+            .isEqualTo(numOfPartitions);\n \n     }\n \n@@ -796,7 +869,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' exists\")\n     public void elasticSearchIndexExist(String indexName) {\n-        assert (commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n+        assert (commonspec.getElasticSearchClient().indexExists(indexName)) :\n+            \"There is no index with that name\";\n     }\n \n     /**\n@@ -806,7 +880,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' does not exist\")\n     public void elasticSearchIndexDoesNotExist(String indexName) {\n-        assert !commonspec.getElasticSearchClient().indexExists(indexName) : \"There is an index with that name\";\n+        assert !commonspec.getElasticSearchClient().indexExists(indexName) :\n+            \"There is an index with that name\";\n     }\n \n     /**\n@@ -817,14 +892,17 @@ public class ThenGSpec extends BaseGSpec {\n      * @param columnValue\n      */\n     @Then(\"^The Elasticsearch index named '(.+?)' and mapping '(.+?)' contains a column named '(.+?)' with the value '(.+?)'$\")\n-    public void elasticSearchIndexContainsDocument(String indexName, String mappingName, String columnName, String columnValue) throws Exception {\n-        Assertions.assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(\n+    public void elasticSearchIndexContainsDocument(String indexName, String mappingName,\n+                                                   String columnName, String columnValue)\n+        throws Exception {\n+        Assertions\n+            .assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(\n                 indexName,\n                 mappingName,\n                 columnName,\n                 columnValue,\n                 \"equals\"\n-        ).size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n+            ).size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n     }\n \n     /*\n@@ -845,16 +923,20 @@ public class ThenGSpec extends BaseGSpec {\n                 break;\n             case \"is higher than\":\n                 if (envVar.matches(\"^-?\\\\d+$\") && value.matches(\"^-?\\\\d+$\")) {\n-                    Assertions.assertThat(Integer.parseInt(envVar)).isGreaterThan(Integer.parseInt(value));\n+                    Assertions.assertThat(Integer.parseInt(envVar))\n+                        .isGreaterThan(Integer.parseInt(value));\n                 } else {\n-                    Fail.fail(\"A number should be provided in order to perform a valid comparison.\");\n+                    Fail.fail(\n+                        \"A number should be provided in order to perform a valid comparison.\");\n                 }\n                 break;\n             case \"is lower than\":\n                 if (envVar.matches(\"^-?\\\\d+$\") && value.matches(\"^-?\\\\d+$\")) {\n-                    Assertions.assertThat(Integer.parseInt(envVar)).isLessThan(Integer.parseInt(value));\n+                    Assertions.assertThat(Integer.parseInt(envVar))\n+                        .isLessThan(Integer.parseInt(value));\n                 } else {\n-                    Fail.fail(\"A number should be provided in order to perform a valid comparison.\");\n+                    Fail.fail(\n+                        \"A number should be provided in order to perform a valid comparison.\");\n                 }\n                 break;\n             case \"contains\":\n@@ -867,23 +949,27 @@ public class ThenGSpec extends BaseGSpec {\n                 Assertions.assertThat(envVar).isNotEqualTo(value);\n                 break;\n             default:\n-                Fail.fail(\"Not a valid comparison. Valid ones are: is | matches | is higher than | is lower than | contains | does not contain | is different from\");\n+                Fail.fail(\n+                    \"Not a valid comparison. Valid ones are: is | matches | is higher than | is lower than | contains | does not contain | is different from\");\n         }\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has a message containing '(.*?)'$\")\n     public void checkMessages(String topic, String content) {\n-        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content) :\n+            \"Topic does not exist or the content does not match\";\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has a message that contains '(.*?)'$\")\n     public void checkMessagesContent(String topic, String content) {\n-        assert commonspec.getKafkaUtils().checkMessageContent(topic, content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().checkMessageContent(topic, content) :\n+            \"Topic does not exist or the content does not match\";\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has '(.+?)' messages$\")\n     public void checkMessageOfTopicLentgh(String topic, int numberOfMessages) {\n-        Assertions.assertThat(commonspec.getKafkaUtils().checkTopicMessagesLenght(topic)).isEqualTo(numberOfMessages);\n+        Assertions.assertThat(commonspec.getKafkaUtils().checkTopicMessagesLenght(topic))\n+            .isEqualTo(numberOfMessages);\n     }\n \n     /**\n@@ -894,9 +980,11 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I save content of element in index '(\\\\d+?)' in environment variable '(.+?)'$\")\n     public void saveContentWebElementInEnvVar(Integer index, String envVar) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String text = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText();\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String text =\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText();\n         ThreadProperty.set(envVar, text);\n     }\n \n@@ -909,7 +997,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Then(\"^the LDAP entry contains the attribute '(.+?)' with the value '(.+?)'$\")\n     public void ldapEntryContains(String attributeName, String expectedValue) {\n         if (this.commonspec.getPreviousLdapResults().isPresent()) {\n-            Assertions.assertThat(this.commonspec.getPreviousLdapResults().get().getEntry().getAttribute(attributeName).getStringValues()).contains(expectedValue);\n+            Assertions.assertThat(this.commonspec.getPreviousLdapResults().get().getEntry()\n+                .getAttribute(attributeName).getStringValues()).contains(expectedValue);\n         } else {\n             fail(\"No previous LDAP results were stored in memory\");\n         }\n@@ -936,7 +1025,8 @@ public class ThenGSpec extends BaseGSpec {\n             } else {\n                 //data exist\n                 String resultTableName = rs.getString(2);\n-                assertThat(resultTableName).as(\"there are incorrect table name \" + tableName).contains(tableName);\n+                assertThat(resultTableName).as(\"there are incorrect table name \" + tableName)\n+                    .contains(tableName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -966,7 +1056,8 @@ public class ThenGSpec extends BaseGSpec {\n                 Assertions.assertThat(rs.next()).as(\"table exists \" + tableName).isFalse();\n             } else {\n                 String resultTableName = rs.getString(2);\n-                assertThat(resultTableName).as(\"table exists \" + tableName).isEqualToIgnoringCase(tableName);\n+                assertThat(resultTableName).as(\"table exists \" + tableName)\n+                    .isEqualToIgnoringCase(tableName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -1078,47 +1169,66 @@ public class ThenGSpec extends BaseGSpec {\n \n         switch (objetType) {\n             case \"Database\":\n-                query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Table\":\n-                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName +\n+                    \"\\'\" + \";\";\n                 break;\n \n             case \"View\":\n-                query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Sequence\":\n-                query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Data Wrapper\":\n-                query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Server\":\n-                query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Function\":\n-                query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Schema\":\n-                query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Domain\":\n-                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Type\":\n-                query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Column\":\n-                query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"select column_name from information_schema.columns WHERE column_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             default:\n@@ -1135,7 +1245,9 @@ public class ThenGSpec extends BaseGSpec {\n             } else {\n                 //data exist\n                 String resultName = rs.getString(1);\n-                assertThat(resultName).as(\"there are incorrect \" + objetType + \" name: \" + objectName).contains(objectName);\n+                assertThat(resultName)\n+                    .as(\"there are incorrect \" + objetType + \" name: \" + objectName)\n+                    .contains(objectName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -1153,47 +1265,66 @@ public class ThenGSpec extends BaseGSpec {\n \n         switch (objetType) {\n             case \"Database\":\n-                query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Table\":\n-                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName +\n+                    \"\\'\" + \";\";\n                 break;\n \n             case \"View\":\n-                query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Sequence\":\n-                query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Data Wrapper\":\n-                query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Server\":\n-                query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Function\":\n-                query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Schema\":\n-                query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Domain\":\n-                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Type\":\n-                query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Column\":\n-                query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"select column_name from information_schema.columns WHERE column_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             default:\n@@ -1209,7 +1340,8 @@ public class ThenGSpec extends BaseGSpec {\n                 assertThat(rs.next()).as(objectName + \" exists \" + objectName).isFalse();\n             } else {\n                 String resultName = rs.getString(1);\n-                assertThat(resultName).as(objectName + \" exists \" + objectName).isEqualToIgnoringCase(objectName);\n+                assertThat(resultName).as(objectName + \" exists \" + objectName)\n+                    .isEqualToIgnoringCase(objectName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -1221,13 +1353,14 @@ public class ThenGSpec extends BaseGSpec {\n     /**\n      * Check service status has value specified\n      *\n-     * @param service   name of the service to be checked\n-     * @param cluster   URI of the cluster\n-     * @param status    status expected\n+     * @param service name of the service to be checked\n+     * @param cluster URI of the cluster\n+     * @param status  status expected\n      * @throws Exception exception     *\n      */\n     @Then(\"^service '(.+?)' status in cluster '(.+?)' is '(suspended|running|deploying)'( in less than '(\\\\d+?)' seconds checking every '(\\\\d+?)' seconds)?\")\n-    public void serviceStatusCheck(String service, String cluster, String status, String foo, Integer totalWait, Integer interval) throws Exception {\n+    public void serviceStatusCheck(String service, String cluster, String status, String foo,\n+                                   Integer totalWait, Integer interval) throws Exception {\n         String response;\n         Integer i = 0;\n         boolean matched;\n@@ -1237,27 +1370,31 @@ public class ThenGSpec extends BaseGSpec {\n         if (foo != null) {\n             matched = status.matches(response);\n             while (!matched && i < totalWait) {\n-                this.commonspec.getLogger().info(\"Service status not found yet after \" + i + \" seconds\");\n+                this.commonspec.getLogger()\n+                    .info(\"Service status not found yet after \" + i + \" seconds\");\n                 i = i + interval;\n                 response = commonspec.retrieveServiceStatus(service, cluster);\n                 matched = status.matches(response);\n             }\n         }\n \n-        assertThat(status).as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response).matches(response);\n+        assertThat(status)\n+            .as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response)\n+            .matches(response);\n \n     }\n \n     /**\n      * Check service health status has value specified\n      *\n-     * @param service   name of the service to be checked\n-     * @param cluster   URI of the cluster\n-     * @param status    health status expected\n+     * @param service name of the service to be checked\n+     * @param cluster URI of the cluster\n+     * @param status  health status expected\n      * @throws Exception exception     *\n      */\n     @Then(\"^service '(.+?)' health status in cluster '(.+?)' is '(unhealthy|healthy|unknown)'( in less than '(\\\\d+?)' seconds checking every '(\\\\d+?)' seconds)?\")\n-    public void serviceHealthStatusCheck(String service, String cluster, String status, String foo, Integer totalWait, Integer interval) throws Exception {\n+    public void serviceHealthStatusCheck(String service, String cluster, String status, String foo,\n+                                         Integer totalWait, Integer interval) throws Exception {\n         String response;\n         Integer i = 0;\n         boolean matched;\n@@ -1267,26 +1404,33 @@ public class ThenGSpec extends BaseGSpec {\n         if (foo != null) {\n             matched = status.matches(response);\n             while (!matched && i < totalWait) {\n-                this.commonspec.getLogger().info(\"Service health status not found yet after \" + i + \" seconds\");\n+                this.commonspec.getLogger()\n+                    .info(\"Service health status not found yet after \" + i + \" seconds\");\n                 i = i + interval;\n                 response = commonspec.retrieveHealthServiceStatus(service, cluster);\n                 matched = status.matches(response);\n             }\n         }\n \n-        assertThat(status).as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response).matches(response);\n+        assertThat(status)\n+            .as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response)\n+            .matches(response);\n     }\n \n     @Then(\"^I obtain metabase id for user '(.+?)' and password '(.+?)' in endpoint '(.+?)' and save in context cookies$\")\n     public void saveMetabaseCookie(String user, String password, String url) throws Exception {\n-        String command = \"curl -X POST -k -H \\\"Content-Type: application/json\\\" -d '{\\\"username\\\": \\\"\" + user + \"\\\", \\\"password\\\": \\\"\" + password + \"\\\"}' \" + url;\n+        String command =\n+            \"curl -X POST -k -H \\\"Content-Type: application/json\\\" -d '{\\\"username\\\": \\\"\" + user +\n+                \"\\\", \\\"password\\\": \\\"\" + password + \"\\\"}' \" + url;\n         commonspec.runLocalCommand(command);\n         commonspec.runCommandLoggerAndEnvVar(0, null, Boolean.TRUE);\n \n         Assertions.assertThat(commonspec.getCommandExitStatus()).isEqualTo(0);\n         String result = JsonPath.parse(commonspec.getCommandResult().trim()).read(\"$.id\");\n \n-        com.ning.http.client.cookie.Cookie cookie = new com.ning.http.client.cookie.Cookie(\"metabase.SESSION_ID\", result, false, \"\", \"\", 99999L, false, false);\n+        com.ning.http.client.cookie.Cookie cookie =\n+            new com.ning.http.client.cookie.Cookie(\"metabase.SESSION_ID\", result, false, \"\", \"\",\n+                99999L, false, false);\n         ArrayList cookieList = new ArrayList();\n         cookieList.add(cookie);\n         this.commonspec.setCookies(cookieList);\n",
            "diff_size": 271
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "344",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "800",
                    "column": "15",
                    "severity": "error",
                    "message": "'assert' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "998",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1080",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1083",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1086",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1089",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1092",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1095",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1098",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1101",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1104",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1107",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1110",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1113",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1144",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1147",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1150",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1153",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1156",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1159",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1162",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1165",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1168",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1171",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1174",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1177",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/36/ThenGSpec.java\nindex 117ee8dd18f..12a98e9ceaf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/36/ThenGSpec.java\n@@ -339,9 +339,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, '(\\\\d+?)' elements exists with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount,\n-                                                      String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n-        List<WebElement> wel = null;\n+    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount, String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+\n+    List<WebElement> wel = null;\n         for (int i = 0; i < timeout; i += wait) {\n             wel = commonspec.locateElement(method, element, -1);\n             if (wel.size() == expectedCount) {\n@@ -649,7 +649,8 @@ public class ThenGSpec extends BaseGSpec {\n         Assertions.assertThat(commonspec.cookieExists(cookieName)).isEqualTo(true);\n \n     }\n-    /**\n+\n+/**\n      * Check if the length of the cookie set match with the number of cookies thas must be saved\n      *\n      * @param numberOfCookies number of cookies that must be saved\n@@ -796,7 +797,7 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' exists\")\n     public void elasticSearchIndexExist(String indexName) {\n-        assert (commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n+        assert(commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n     }\n \n     /**\n@@ -943,7 +944,6 @@ public class ThenGSpec extends BaseGSpec {\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n     }\n \n \n@@ -995,9 +995,7 @@ public class ThenGSpec extends BaseGSpec {\n         List<String> tablePattern = new ArrayList<String>();\n         //comparison is by lists of string\n         tablePattern = dataTable.asList(String.class);\n-\n-\n-        Connection myConnection = this.commonspec.getConnection();\n+Connection myConnection = this.commonspec.getConnection();\n         String query = \"SELECT * FROM \" + tableName + \" order by \" + \"id\" + \";\";\n         try {\n             myStatement = myConnection.createStatement();\n@@ -1044,8 +1042,7 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I check that result is:$\")\n     public void comparetable(DataTable dataTable) throws Exception {\n-\n-        //from Cucumber Datatable, the pattern to verify\n+    //from Cucumber Datatable, the pattern to verify\n         List<String> tablePattern = new ArrayList<String>();\n         tablePattern = dataTable.asList(String.class);\n         //the result from select\n@@ -1080,51 +1077,40 @@ public class ThenGSpec extends BaseGSpec {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Table\":\n+    case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"View\":\n+    case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Sequence\":\n+    case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Data Wrapper\":\n+    case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Server\":\n+    case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Function\":\n+    case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Schema\":\n+    case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Domain\":\n+    case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Type\":\n+    case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Column\":\n+    case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            default:\n+    default:\n                 query = \"SELECT 1;\";\n                 break;\n-        }\n+    }\n \n         try {\n             myStatement = myConnection.createStatement();\n@@ -1155,51 +1141,40 @@ public class ThenGSpec extends BaseGSpec {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Table\":\n+    case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"View\":\n+    case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Sequence\":\n+    case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Data Wrapper\":\n+    case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Server\":\n+    case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Function\":\n+    case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Schema\":\n+    case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Domain\":\n+    case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Type\":\n+    case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Column\":\n+    case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            default:\n+    default:\n                 query = \"SELECT 1;\";\n                 break;\n-        }\n+    }\n \n         try {\n             myStatement = myConnection.createStatement();\n@@ -1291,5 +1266,4 @@ public class ThenGSpec extends BaseGSpec {\n         cookieList.add(cookie);\n         this.commonspec.setCookies(cookieList);\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "772",
                    "column": "41",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "774",
                    "column": "86",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "781",
                    "column": "15",
                    "severity": "error",
                    "message": "'assert' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "781",
                    "column": "64",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "793",
                    "column": "84",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "805",
                    "column": "15",
                    "severity": "error",
                    "message": "'assert' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "805",
                    "column": "84",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "855",
                    "column": "76",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "867",
                    "column": "15",
                    "severity": "error",
                    "message": "'assert' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "867",
                    "column": "74",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "933",
                    "column": "90",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "939",
                    "column": "78",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/36/ThenGSpec.java\nindex 117ee8dd18f..1a37cfbed6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/36/ThenGSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/36/ThenGSpec.java\n@@ -34,17 +34,16 @@ import org.json.JSONArray;\n import org.ldaptive.LdapAttribute;\n import org.openqa.selenium.Cookie;\n import org.openqa.selenium.WebElement;\n-\n import java.sql.Connection;\n import java.sql.ResultSet;\n import java.sql.ResultSetMetaData;\n import java.sql.Statement;\n import java.util.*;\n import java.util.regex.Pattern;\n-\n import com.jayway.jsonpath.JsonPath;\n \n import static com.stratio.qa.assertions.Assertions.assertThat;\n+\n import static org.testng.AssertJUnit.fail;\n \n /**\n@@ -52,6 +51,8 @@ import static org.testng.AssertJUnit.fail;\n  *\n  * @see <a href=\"ThenGSpec-annotations.html\">Then Steps &amp; Matching Regex</a>\n  */\n+\n+\n public class ThenGSpec extends BaseGSpec {\n \n     public static final int VALUE_SUBSTRING = 3;\n@@ -61,6 +62,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param spec\n      */\n+\n+\n     public ThenGSpec(CommonG spec) {\n         this.commonspec = spec;\n     }\n@@ -74,9 +77,10 @@ public class ThenGSpec extends BaseGSpec {\n      * @param bar\n      * @param exceptionMsg\n      */\n+\n+\n     @Then(\"^an exception '(.+?)' thrown( with class '(.+?)'( and message like '(.+?)')?)?\")\n-    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar, String exceptionMsg)\n-            throws ClassNotFoundException {\n+    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar, String exceptionMsg) throws ClassNotFoundException {\n         List<Exception> exceptions = commonspec.getExceptions();\n         if (\"IS NOT\".equals(exception)) {\n             assertThat(exceptions).as(\"Captured exception list is not empty\").isEmpty();\n@@ -86,11 +90,9 @@ public class ThenGSpec extends BaseGSpec {\n             if ((clazz != null) && (exceptionMsg != null)) {\n                 assertThat(ex.toString()).as(\"Unexpected last exception class\").contains(clazz);\n                 assertThat(ex.toString()).as(\"Unexpected last exception message\").contains(exceptionMsg);\n-\n             } else if (clazz != null) {\n                 assertThat(exceptions.get(exceptions.size() - 1).getClass().getSimpleName()).as(\"Unexpected last exception class\").isEqualTo(clazz);\n             }\n-\n             commonspec.getExceptions().clear();\n         }\n     }\n@@ -100,6 +102,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param keyspace\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' exists$\")\n     public void assertKeyspaceOnCassandraExists(String keyspace) {\n         assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" exists on cassandra\").contains(keyspace);\n@@ -110,6 +114,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param keyspace\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' does not exist$\")\n     public void assertKeyspaceOnCassandraDoesNotExist(String keyspace) {\n         assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" does not exist on cassandra\").doesNotContain(keyspace);\n@@ -121,6 +127,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param keyspace\n      * @param tableName\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)'$\")\n     public void assertTableExistsOnCassandraKeyspace(String keyspace, String tableName) {\n         assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").contains(tableName);\n@@ -132,6 +140,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param keyspace\n      * @param tableName\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' does not contain a table '(.+?)'$\")\n     public void assertTableDoesNotExistOnCassandraKeyspace(String keyspace, String tableName) {\n         assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").doesNotContain(tableName);\n@@ -144,12 +154,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param tableName\n      * @param numberRows\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with '(.+?)' rows$\")\n     public void assertRowNumberOfTableOnCassandraKeyspace(String keyspace, String tableName, String numberRows) {\n         Long numberRowsLong = Long.parseLong(numberRows);\n         commonspec.getCassandraClient().useKeyspace(keyspace);\n-        assertThat(commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\").all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").\n-                isEqualTo(numberRowsLong);\n+        assertThat(commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\").all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").isEqualTo(numberRowsLong);\n     }\n \n     /**\n@@ -160,6 +171,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param data\n      * @throws InterruptedException\n      */\n+\n+\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with values:$\")\n     public void assertValuesOfTable(String keyspace, String tableName, DataTable data) throws InterruptedException {\n         //  USE of Keyspace\n@@ -180,12 +193,12 @@ public class ThenGSpec extends BaseGSpec {\n             res = commonspec.getCassandraClient().executeQuery(execQuery);\n             List<Row> resAsList = res.all();\n             assertThat(resAsList.size()).as(\"The query \" + execQuery + \" not return any result on Cassandra\").isGreaterThan(0);\n-            assertThat(resAsList.get(0).toString()\n-                    .substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\").isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n+            assertThat(resAsList.get(0).toString().substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\").isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n             index++;\n         }\n     }\n \n+\n     @SuppressWarnings(\"rawtypes\")\n     private void equalsColumns(ColumnDefinitions resCols, Map<String, String> dataTableColumns) {\n         Iterator it = dataTableColumns.entrySet().iterator();\n@@ -219,7 +232,6 @@ public class ThenGSpec extends BaseGSpec {\n         }\n         condition.append(columnNames[columnNames.length - 1]).append(\" =\");\n         condition.append(\" \").append(values.get(values.size() - 1));\n-\n         condition.append(\" ALLOW FILTERING\");\n         return condition.toString();\n     }\n@@ -250,13 +262,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param tableName\n      * @param data\n      */\n+\n+\n     @Then(\"^a Mongo dataBase '(.+?)' contains a table '(.+?)' with values:\")\n     public void assertValuesOfTableMongo(String dataBase, String tableName, DataTable data) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(dataBase);\n-        ArrayList<DBObject> result = (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(\n-                tableName, data);\n+        ArrayList<DBObject> result = (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(tableName, data);\n         DBObjectsAssert.assertThat(result).containedInMongoDBResult(data);\n-\n     }\n \n     /**\n@@ -265,6 +277,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param database\n      * @param tableName\n      */\n+\n+\n     @Then(\"^a Mongo dataBase '(.+?)' doesnt contains a table '(.+?)'$\")\n     public void aMongoDataBaseContainsaTable(String database, String tableName) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(database);\n@@ -278,10 +292,11 @@ public class ThenGSpec extends BaseGSpec {\n      * @param index\n      * @param text\n      */\n+\n+\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as text$\")\n     public void assertSeleniumTextOnElementPresent(Integer index, String text) {\n-        assertThat(commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n+        assertThat(commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n         String elementText = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText().replace(\"\\n\", \" \").replace(\"\\r\", \" \");\n         if (!elementText.startsWith(\"regex:\")) {\n             //We are verifying that a web element contains a string\n@@ -297,6 +312,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param text\n      */\n+\n+\n     @Then(\"^this text exists '(.+?)'$\")\n     public void assertSeleniumTextInSource(String text) {\n         assertThat(this.commonspec, commonspec.getDriver()).as(\"Expected text not found at page\").contains(text);\n@@ -314,6 +331,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws NoSuchFieldException\n      * @throws ClassNotFoundException\n      */\n+\n+\n     @Then(\"^'(\\\\d+?)' elements? exists? with '([^:]*?):(.+?)'$\")\n     public void assertSeleniumNElementExists(Integer expectedCount, String method, String element) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = commonspec.locateElement(method, element, expectedCount);\n@@ -338,12 +357,14 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws NoSuchFieldException\n      * @throws ClassNotFoundException\n      */\n+\n+\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, '(\\\\d+?)' elements exists with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount,\n-                                                      String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount, String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = null;\n         for (int i = 0; i < timeout; i += wait) {\n             wel = commonspec.locateElement(method, element, -1);\n+\n             if (wel.size() == expectedCount) {\n                 break;\n             } else {\n@@ -354,7 +375,6 @@ public class ThenGSpec extends BaseGSpec {\n         PreviousWebElements pwel = new PreviousWebElements(wel);\n         assertThat(this.commonspec, pwel).as(\"Element count doesnt match\").hasSize(expectedCount);\n         commonspec.setPreviousWebElements(pwel);\n-\n     }\n \n     /**\n@@ -368,11 +388,14 @@ public class ThenGSpec extends BaseGSpec {\n      * @param search\n      * @throws InterruptedException\n      */\n+\n+\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, the command output '(.+?)' contains '(.+?)'( with exit status '(.+?)')?$\")\n     public void assertCommandExistsOnTimeOut(Integer timeout, Integer wait, String command, String search, String foo, Integer exitStatus) throws Exception {\n         Boolean found = false;\n         AssertionError ex = null;\n         command = \"set -o pipefail && alias grep='grep --color=never' && \" + command;\n+\n         for (int i = 0; (i <= timeout); i += wait) {\n             if (found) {\n                 break;\n@@ -406,12 +429,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param index\n      * @param isDisplayed\n      */\n+\n+\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) displayed$\")\n     public void assertSeleniumIsDisplayed(Integer index, Boolean isDisplayed) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed()).as(\n-                \"Unexpected element display property\").isEqualTo(isDisplayed);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed()).as(\"Unexpected element display property\").isEqualTo(isDisplayed);\n     }\n \n     /**\n@@ -420,12 +444,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param index\n      * @param isEnabled\n      */\n+\n+\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) enabled$\")\n     public void assertSeleniumIsEnabled(Integer index, Boolean isEnabled) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled())\n-                .as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled()).as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n     }\n \n     /**\n@@ -434,12 +459,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param index\n      * @param isSelected\n      */\n+\n+\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) selected$\")\n     public void assertSeleniumIsSelected(Integer index, Boolean isSelected) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected()).as(\n-                \"Unexpected element selected property\").isEqualTo(isSelected);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected()).as(\"Unexpected element selected property\").isEqualTo(isSelected);\n     }\n \n     /**\n@@ -449,10 +475,12 @@ public class ThenGSpec extends BaseGSpec {\n      * @param attribute\n      * @param value\n      */\n+\n+\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as '(.+?)'$\")\n     public void assertSeleniumHasAttributeValue(Integer index, String attribute, String value) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n         String val = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getAttribute(attribute);\n         assertThat(this.commonspec, val).as(\"Attribute not found\").isNotNull();\n         assertThat(this.commonspec, val).as(\"Unexpected value for specified attribute\").matches(value);\n@@ -463,6 +491,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^I take a snapshot$\")\n     public void seleniumSnapshot() throws Exception {\n         commonspec.captureEvidence(commonspec.getDriver(), \"screenCapture\");\n@@ -474,29 +504,29 @@ public class ThenGSpec extends BaseGSpec {\n      * @param url\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^we are in page '(.+?)'$\")\n     public void checkURL(String url) throws Exception {\n-\n         if (commonspec.getWebHost() == null) {\n             throw new Exception(\"Web host has not been set\");\n         }\n-\n         if (commonspec.getWebPort() == null) {\n             throw new Exception(\"Web port has not been set\");\n         }\n \n         String webURL = commonspec.getWebHost() + commonspec.getWebPort();\n-\n-        assertThat(commonspec.getDriver().getCurrentUrl()).as(\"We are not in the expected url: \" + webURL.toLowerCase() + url)\n-                .endsWith(webURL.toLowerCase() + url);\n+        assertThat(commonspec.getDriver().getCurrentUrl()).as(\"We are not in the expected url: \" + webURL.toLowerCase() + url).endsWith(webURL.toLowerCase() + url);\n     }\n \n+\n     @Then(\"^the service response must contain the text '(.*?)'$\")\n     public void assertResponseMessage(String expectedText) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n         Pattern pattern = CommonG.matchesOrContains(expectedText);\n         assertThat(commonspec.getResponse().getResponse()).containsPattern(pattern);\n     }\n \n+\n     @Then(\"^the service response status must be '(.*?)'( and its response length must be '(.*?)' | and its response must contain the text '(.*?)')?$\")\n     public void assertResponseStatusLength(Integer expectedStatus, String foo, Integer expectedLength, String expectedText) {\n         if (foo != null) {\n@@ -517,7 +547,8 @@ public class ThenGSpec extends BaseGSpec {\n             try {\n                 assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Response: {}\", commonspec.getResponse().getResponse());\n+                commonspec.getLogger().warn(\"Response: {}\",\n+                    commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         }\n@@ -538,9 +569,10 @@ public class ThenGSpec extends BaseGSpec {\n      *                        IMPORTANT: There no should be no existing columns\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^There are results found with:$\")\n     public void resultsMustBe(DataTable expectedResults) throws Exception {\n-\n         String type = commonspec.getResultsType();\n         assertThat(type).isNotEqualTo(\"\").overridingErrorMessage(\"It's necessary to define the result type\");\n         switch (type) {\n@@ -566,6 +598,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param search\n      **/\n+\n+\n     @Then(\"^the command output contains '(.+?)'$\")\n     public void findShellOutput(String search) throws Exception {\n         assertThat(commonspec.getCommandResult()).as(\"Contains \" + search + \".\").contains(search);\n@@ -576,6 +610,8 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param search\n      **/\n+\n+\n     @Then(\"^the command output does not contain '(.+?)'$\")\n     public void notFindShellOutput(String search) throws Exception {\n         assertThat(commonspec.getCommandResult()).as(\"NotContains \" + search + \".\").doesNotContain(search);\n@@ -588,6 +624,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @deprecated Success exit status is directly checked in the \"execute remote command\" method, so this is not\n      * needed anymore.\n      **/\n+\n+\n     @Deprecated\n     @Then(\"^the command exit status is '(.+?)'$\")\n     public void checkShellExitStatus(int expectedExitStatus) throws Exception {\n@@ -597,6 +635,8 @@ public class ThenGSpec extends BaseGSpec {\n     /**\n      * Save cookie in context for future references\n      **/\n+\n+\n     @Then(\"^I save selenium cookies in context$\")\n     public void saveSeleniumCookies() throws Exception {\n         commonspec.setSeleniumCookies(commonspec.getDriver().manage().getCookies());\n@@ -606,10 +646,12 @@ public class ThenGSpec extends BaseGSpec {\n     /**\n      * Get dcos-auth-cookie\n      **/\n+\n+\n     @Then(\"^I save selenium dcos acs auth cookie in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String envVar) throws Exception {\n         if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(\"dcos-acs-auth-cookie\")) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -624,10 +666,12 @@ public class ThenGSpec extends BaseGSpec {\n     /**\n      * Get dcos-auth-cookie\n      **/\n+\n+\n     @Then(\"^I save selenium cookie '(.+?)' in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String cookieName, String envVar) throws Exception {\n         if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(cookieName)) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -644,16 +688,19 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param cookieName string with the name of the cookie\n      */\n+\n+\n     @Then(\"^The cookie '(.+?)' exists in the saved cookies$\")\n     public void checkIfCookieExists(String cookieName) {\n         Assertions.assertThat(commonspec.cookieExists(cookieName)).isEqualTo(true);\n-\n     }\n     /**\n      * Check if the length of the cookie set match with the number of cookies thas must be saved\n      *\n      * @param numberOfCookies number of cookies that must be saved\n      */\n+\n+\n     @Then(\"^I have '(.+?)' selenium cookies saved$\")\n     public void getSeleniumCookiesSize(int numberOfCookies) throws Exception {\n         Assertions.assertThat(commonspec.getSeleniumCookies().size()).isEqualTo(numberOfCookies);\n@@ -666,15 +713,15 @@ public class ThenGSpec extends BaseGSpec {\n      * @param envVar environment variable where JSON is stored\n      * @param table  data table in which each row stores one expression\n      */\n+\n+\n     @Then(\"^'(.+?)' matches the following cases:$\")\n     public void matchWithExpresion(String envVar, DataTable table) throws Exception {\n         String jsonString = ThreadProperty.get(envVar);\n-\n         for (DataTableRow row : table.getGherkinRows()) {\n             String expression = row.getCells().get(0);\n             String condition = row.getCells().get(1);\n             String result = row.getCells().get(2);\n-\n             String value = commonspec.getJSONPathString(jsonString, expression, null);\n             commonspec.evaluateJSONElementOperation(value, condition, result);\n         }\n@@ -688,15 +735,15 @@ public class ThenGSpec extends BaseGSpec {\n      * @param service\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^I add a new DCOS label with key '(.+?)' and value '(.+?)' to the service '(.+?)'?$\")\n     public void sendAppendRequest(String key, String value, String service) throws Exception {\n         commonspec.runCommandAndGetResult(\"touch \" + service + \".json && dcos marathon app show \" + service + \" > /dcos/\" + service + \".json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \".json\");\n-\n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n         String myValue = commonspec.getJSONPathString(configFile, \".labels\", \"0\");\n         String myJson = commonspec.updateMarathonJson(commonspec.removeJSONPathElement(configFile, \"$.labels\"));\n-\n         String newValue = myValue.replaceFirst(\"\\\\{\", \"{\\\"\" + key + \"\\\": \\\"\" + value + \"\\\", \");\n         newValue = \"\\\"labels\\\":\" + newValue;\n         String myFinalJson = myJson.replaceFirst(\"\\\\{\", \"{\" + newValue.replace(\"\\\\n\", \"\\\\\\\\n\") + \",\");\n@@ -707,7 +754,6 @@ public class ThenGSpec extends BaseGSpec {\n             commonspec.runCommandAndGetResult(\"echo '\" + myFinalJson + \"' > /dcos/final\" + service + \".json\");\n         }\n         commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \".json\");\n-\n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n     }\n \n@@ -717,19 +763,22 @@ public class ThenGSpec extends BaseGSpec {\n      * @param zNode    path at zookeeper\n      * @param document expected content of znode\n      */\n+\n+\n     @Then(\"^the zNode '(.+?)' exists( and contains '(.+?)')?$\")\n     public void checkZnodeExists(String zNode, String foo, String document) throws Exception {\n         if (document == null) {\n             String breakpoint = commonspec.getZookeeperSecClient().zRead(zNode);\n-            assert breakpoint.equals(\"\") : \"The zNode does not exist\";\n+            assert breakpoint.equals(\"\"): \"The zNode does not exist\";\n         } else {\n-            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document) : \"The zNode does not exist or the content does not match\";\n+            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document): \"The zNode does not exist or the content does not match\";\n         }\n     }\n \n+\n     @Then(\"^the zNode '(.+?)' does not exist\")\n     public void checkZnodeNotExist(String zNode) throws Exception {\n-        assert !commonspec.getZookeeperSecClient().exists(zNode) : \"The zNode exists\";\n+        assert!commonspec.getZookeeperSecClient().exists(zNode): \"The zNode exists\";\n     }\n \n     /**\n@@ -737,9 +786,11 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param topic_name name of topic\n      */\n+\n+\n     @Then(\"^A kafka topic named '(.+?)' exists\")\n     public void kafkaTopicExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is no topic with that name\";\n+        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name): \"There is no topic with that name\";\n     }\n \n     /**\n@@ -747,9 +798,11 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param topic_name name of topic\n      */\n+\n+\n     @Then(\"^A kafka topic named '(.+?)' does not exist\")\n     public void kafkaTopicNotExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert !commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is a topic with that name\";\n+        assert!commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name): \"There is a topic with that name\";\n     }\n \n \n@@ -761,16 +814,16 @@ public class ThenGSpec extends BaseGSpec {\n      * @param service\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^I modify marathon environment variable '(.+?)' with value '(.+?)' for service '(.+?)'?$\")\n     public void setMarathonProperty(String key, String value, String service) throws Exception {\n         commonspec.runCommandAndGetResult(\"touch \" + service + \"-env.json && dcos marathon app show \" + service + \" > /dcos/\" + service + \"-env.json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \"-env.json\");\n-\n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n         String myJson1 = commonspec.replaceJSONPathElement(configFile, key, value);\n         String myJson4 = commonspec.updateMarathonJson(myJson1);\n         String myJson = myJson4.replaceAll(\"\\\"uris\\\"\", \"\\\"none\\\"\");\n-\n         commonspec.runCommandAndGetResult(\"echo '\" + myJson + \"' > /dcos/final\" + service + \"-env.json\");\n         commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \"-env.json\");\n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n@@ -783,10 +836,11 @@ public class ThenGSpec extends BaseGSpec {\n      * @param numOfPartitions Number of partitions\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^The number of partitions in topic '(.+?)' should be '(.+?)''?$\")\n     public void checkNumberOfPartitions(String topic_name, int numOfPartitions) throws Exception {\n         Assertions.assertThat(commonspec.getKafkaUtils().getPartitions(topic_name)).isEqualTo(numOfPartitions);\n-\n     }\n \n     /**\n@@ -794,9 +848,11 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param indexName\n      */\n+\n+\n     @Then(\"^An elasticsearch index named '(.+?)' exists\")\n     public void elasticSearchIndexExist(String indexName) {\n-        assert (commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n+        assert (commonspec.getElasticSearchClient().indexExists(indexName)): \"There is no index with that name\";\n     }\n \n     /**\n@@ -804,9 +860,11 @@ public class ThenGSpec extends BaseGSpec {\n      *\n      * @param indexName\n      */\n+\n+\n     @Then(\"^An elasticsearch index named '(.+?)' does not exist\")\n     public void elasticSearchIndexDoesNotExist(String indexName) {\n-        assert !commonspec.getElasticSearchClient().indexExists(indexName) : \"There is an index with that name\";\n+        assert!commonspec.getElasticSearchClient().indexExists(indexName): \"There is an index with that name\";\n     }\n \n     /**\n@@ -816,15 +874,11 @@ public class ThenGSpec extends BaseGSpec {\n      * @param columnName\n      * @param columnValue\n      */\n+\n+\n     @Then(\"^The Elasticsearch index named '(.+?)' and mapping '(.+?)' contains a column named '(.+?)' with the value '(.+?)'$\")\n     public void elasticSearchIndexContainsDocument(String indexName, String mappingName, String columnName, String columnValue) throws Exception {\n-        Assertions.assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(\n-                indexName,\n-                mappingName,\n-                columnName,\n-                columnValue,\n-                \"equals\"\n-        ).size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n+        Assertions.assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(indexName, mappingName, columnName, columnValue, \"equals\").size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n     }\n \n     /*\n@@ -834,6 +888,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param value\n      *\n      */\n+\n+\n     @Then(\"^'(?s)(.+?)' ((?!.*with).+?) '(.+?)'$\")\n     public void checkValue(String envVar, String operation, String value) throws Exception {\n         switch (operation.toLowerCase()) {\n@@ -871,16 +927,19 @@ public class ThenGSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @Then(\"^The kafka topic '(.*?)' has a message containing '(.*?)'$\")\n     public void checkMessages(String topic, String content) {\n-        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content): \"Topic does not exist or the content does not match\";\n     }\n \n+\n     @Then(\"^The kafka topic '(.*?)' has a message that contains '(.*?)'$\")\n     public void checkMessagesContent(String topic, String content) {\n-        assert commonspec.getKafkaUtils().checkMessageContent(topic, content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().checkMessageContent(topic, content): \"Topic does not exist or the content does not match\";\n     }\n \n+\n     @Then(\"^The kafka topic '(.*?)' has '(.+?)' messages$\")\n     public void checkMessageOfTopicLentgh(String topic, int numberOfMessages) {\n         Assertions.assertThat(commonspec.getKafkaUtils().checkTopicMessagesLenght(topic)).isEqualTo(numberOfMessages);\n@@ -892,10 +951,12 @@ public class ThenGSpec extends BaseGSpec {\n      * @param index  position of the element in the array of webElements found\n      * @param envVar name of the thread environment variable where to store the text\n      */\n+\n+\n     @Then(\"^I save content of element in index '(\\\\d+?)' in environment variable '(.+?)'$\")\n     public void saveContentWebElementInEnvVar(Integer index, String envVar) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements()).as(\"There are less found elements than required\").hasAtLeast(index);\n         String text = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText();\n         ThreadProperty.set(envVar, text);\n     }\n@@ -906,6 +967,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @param attributeName The name of the attribute to look for in the LdapEntry\n      * @param expectedValue The expected value of the attribute\n      */\n+\n+\n     @Then(\"^the LDAP entry contains the attribute '(.+?)' with the value '(.+?)'$\")\n     public void ldapEntryContains(String attributeName, String expectedValue) {\n         if (this.commonspec.getPreviousLdapResults().isPresent()) {\n@@ -920,6 +983,8 @@ public class ThenGSpec extends BaseGSpec {\n      * checks table existence\n      *\n      */\n+\n+\n     @Then(\"^table '(.+?)' exists$\")\n     public void checkTable(String tableName) throws Exception {\n         Statement myStatement = null;\n@@ -943,7 +1008,6 @@ public class ThenGSpec extends BaseGSpec {\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n     }\n \n \n@@ -952,11 +1016,12 @@ public class ThenGSpec extends BaseGSpec {\n      * checks table existence negative case\n      *\n      */\n+\n+\n     @Then(\"^table '(.+?)' doesn't exists$\")\n     public void checkTableFalse(String tableName) throws Exception {\n         Statement myStatement = null;\n         Connection myConnection = this.commonspec.getConnection();\n-\n         String query = \"SELECT * FROM pg_tables WHERE tablename = \" + \"\\'\" + tableName + \"\\'\" + \";\";\n         try {\n             myStatement = myConnection.createStatement();\n@@ -983,6 +1048,8 @@ public class ThenGSpec extends BaseGSpec {\n      * by default: order by id\n      *\n      */\n+\n+\n     @Then(\"^I check that table '(.+?)' is iqual to$\")\n     public void comparetable(String tableName, DataTable dataTable) throws Exception {\n         Statement myStatement = null;\n@@ -995,8 +1062,6 @@ public class ThenGSpec extends BaseGSpec {\n         List<String> tablePattern = new ArrayList<String>();\n         //comparison is by lists of string\n         tablePattern = dataTable.asList(String.class);\n-\n-\n         Connection myConnection = this.commonspec.getConnection();\n         String query = \"SELECT * FROM \" + tableName + \" order by \" + \"id\" + \";\";\n         try {\n@@ -1018,7 +1083,6 @@ public class ThenGSpec extends BaseGSpec {\n                 }\n             }\n             sqlTable.addAll(sqlTableAux);\n-\n             assertThat(sqlTable).as(\"Not equal elements!\").isEqualTo(tablePattern);\n             rs.close();\n             myStatement.close();\n@@ -1032,6 +1096,8 @@ public class ThenGSpec extends BaseGSpec {\n      * closes opened database\n      *\n      */\n+\n+\n     @Then(\"^I close database connection$\")\n     public void closeDatabase() throws Exception {\n         this.commonspec.getConnection().close();\n@@ -1042,6 +1108,8 @@ public class ThenGSpec extends BaseGSpec {\n      * checks the result from select\n      *\n      */\n+\n+\n     @Then(\"^I check that result is:$\")\n     public void comparetable(DataTable dataTable) throws Exception {\n \n@@ -1056,11 +1124,9 @@ public class ThenGSpec extends BaseGSpec {\n             String ip_value = ThreadProperty.get(\"queryresponse\" + i);\n             sqlTable.add(i, ip_value);\n         }\n-\n         for (int i = 0; ThreadProperty.get(\"queryresponse\" + i) != null; i++) {\n             ThreadProperty.remove(\"queryresponse\" + i);\n         }\n-\n         assertThat(tablePattern).as(\"response is not equal to the expected\").isEqualTo(sqlTable);\n     }\n \n@@ -1069,63 +1135,51 @@ public class ThenGSpec extends BaseGSpec {\n      * @param objectName\n      * @throws Exception\n      */\n+\n+\n     @Then(\"^'(.+?)' '(.+?)' exists$\")\n     public void checkObjectExists(String objetType, String objectName) throws Exception {\n         Statement myStatement = null;\n         Connection myConnection = this.commonspec.getConnection();\n-\n         String query;\n-\n         switch (objetType) {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             default:\n                 query = \"SELECT 1;\";\n                 break;\n         }\n-\n         try {\n             myStatement = myConnection.createStatement();\n             ResultSet rs = myStatement.executeQuery(query);\n@@ -1144,63 +1198,50 @@ public class ThenGSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @Then(\"^'(.+?)' '(.+?)' doesn't exists$\")\n     public void checkObjectNoExists(String objetType, String objectName) throws Exception {\n         Statement myStatement = null;\n         Connection myConnection = this.commonspec.getConnection();\n-\n         String query;\n-\n         switch (objetType) {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n             default:\n                 query = \"SELECT 1;\";\n                 break;\n         }\n-\n         try {\n             myStatement = myConnection.createStatement();\n             ResultSet rs = myStatement.executeQuery(query);\n@@ -1226,12 +1267,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param status    status expected\n      * @throws Exception exception     *\n      */\n+\n+\n     @Then(\"^service '(.+?)' status in cluster '(.+?)' is '(suspended|running|deploying)'( in less than '(\\\\d+?)' seconds checking every '(\\\\d+?)' seconds)?\")\n     public void serviceStatusCheck(String service, String cluster, String status, String foo, Integer totalWait, Integer interval) throws Exception {\n         String response;\n         Integer i = 0;\n         boolean matched;\n-\n         response = commonspec.retrieveServiceStatus(service, cluster);\n \n         if (foo != null) {\n@@ -1243,9 +1285,7 @@ public class ThenGSpec extends BaseGSpec {\n                 matched = status.matches(response);\n             }\n         }\n-\n         assertThat(status).as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response).matches(response);\n-\n     }\n \n     /**\n@@ -1256,12 +1296,13 @@ public class ThenGSpec extends BaseGSpec {\n      * @param status    health status expected\n      * @throws Exception exception     *\n      */\n+\n+\n     @Then(\"^service '(.+?)' health status in cluster '(.+?)' is '(unhealthy|healthy|unknown)'( in less than '(\\\\d+?)' seconds checking every '(\\\\d+?)' seconds)?\")\n     public void serviceHealthStatusCheck(String service, String cluster, String status, String foo, Integer totalWait, Integer interval) throws Exception {\n         String response;\n         Integer i = 0;\n         boolean matched;\n-\n         response = commonspec.retrieveHealthServiceStatus(service, cluster);\n \n         if (foo != null) {\n@@ -1273,23 +1314,27 @@ public class ThenGSpec extends BaseGSpec {\n                 matched = status.matches(response);\n             }\n         }\n-\n         assertThat(status).as(\"Expected status: \" + status + \" doesn't match obtained one: \" + response).matches(response);\n     }\n \n+\n     @Then(\"^I obtain metabase id for user '(.+?)' and password '(.+?)' in endpoint '(.+?)' and save in context cookies$\")\n     public void saveMetabaseCookie(String user, String password, String url) throws Exception {\n         String command = \"curl -X POST -k -H \\\"Content-Type: application/json\\\" -d '{\\\"username\\\": \\\"\" + user + \"\\\", \\\"password\\\": \\\"\" + password + \"\\\"}' \" + url;\n         commonspec.runLocalCommand(command);\n         commonspec.runCommandLoggerAndEnvVar(0, null, Boolean.TRUE);\n-\n         Assertions.assertThat(commonspec.getCommandExitStatus()).isEqualTo(0);\n         String result = JsonPath.parse(commonspec.getCommandResult().trim()).read(\"$.id\");\n-\n-        com.ning.http.client.cookie.Cookie cookie = new com.ning.http.client.cookie.Cookie(\"metabase.SESSION_ID\", result, false, \"\", \"\", 99999L, false, false);\n+        com.ning.http.client.cookie.Cookie cookie = new com.ning.http.client.cookie.Cookie(\"metabase.SESSION_ID\",\n+                                                                                           result,\n+                                                    false,\n+                                                                                           \"\",\n+                                                                                           \"\",\n+                                                                                           99999L,\n+                                                    false,\n+                                                    false);\n         ArrayList cookieList = new ArrayList();\n         cookieList.add(cookie);\n         this.commonspec.setCookies(cookieList);\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 237
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "657",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "657",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
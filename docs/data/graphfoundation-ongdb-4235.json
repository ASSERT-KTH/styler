{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4235",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4235/IndexSamplingController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4235/IndexSamplingController.java\nindex d184c3f53b3..b323b671240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4235/IndexSamplingController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4235/IndexSamplingController.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import java.util.concurrent.locks.Lock;\n@@ -38,189 +39,184 @@ import static org.neo4j.scheduler.JobScheduler.Groups.indexSamplingController;\n \n public class IndexSamplingController\n {\n-    private final IndexSamplingJobFactory jobFactory;\n-    private final IndexSamplingJobQueue<Long> jobQueue;\n-    private final IndexSamplingJobTracker jobTracker;\n-    private final IndexMapSnapshotProvider indexMapSnapshotProvider;\n-    private final JobScheduler scheduler;\n-    private final RecoveryCondition indexRecoveryCondition;\n-    private final boolean backgroundSampling;\n-    private final Lock samplingLock = new ReentrantLock();\n-\n-    private JobHandle backgroundSamplingHandle;\n-\n-    // use IndexSamplingControllerFactory.create do not instantiate directly\n-    IndexSamplingController( IndexSamplingConfig config,\n-                             IndexSamplingJobFactory jobFactory,\n-                             IndexSamplingJobQueue<Long> jobQueue,\n-                             IndexSamplingJobTracker jobTracker,\n-                             IndexMapSnapshotProvider indexMapSnapshotProvider,\n-                             JobScheduler scheduler,\n-                             RecoveryCondition indexRecoveryCondition )\n+  private final IndexSamplingJobFactory jobFactory;\n+  private final IndexSamplingJobQueue<Long> jobQueue;\n+  private final IndexSamplingJobTracker jobTracker;\n+  private final IndexMapSnapshotProvider indexMapSnapshotProvider;\n+  private final JobScheduler scheduler;\n+  private final RecoveryCondition indexRecoveryCondition;\n+  private final boolean backgroundSampling;\n+  private final Lock samplingLock = new ReentrantLock();\n+\n+  private JobHandle backgroundSamplingHandle;\n+\n+  // use IndexSamplingControllerFactory.create do not instantiate directly\n+  IndexSamplingController(IndexSamplingConfig config,\n+                          IndexSamplingJobFactory jobFactory,\n+                          IndexSamplingJobQueue<Long> jobQueue,\n+                          IndexSamplingJobTracker jobTracker,\n+                          IndexMapSnapshotProvider indexMapSnapshotProvider,\n+                          JobScheduler scheduler,\n+                          RecoveryCondition indexRecoveryCondition)\n+  {\n+    this.backgroundSampling = config.backgroundSampling();\n+    this.jobFactory = jobFactory;\n+    this.indexMapSnapshotProvider = indexMapSnapshotProvider;\n+    this.jobQueue = jobQueue;\n+    this.jobTracker = jobTracker;\n+    this.scheduler = scheduler;\n+    this.indexRecoveryCondition = indexRecoveryCondition;\n+  }\n+\n+  public void sampleIndexes(IndexSamplingMode mode)\n+  {\n+    IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n+    jobQueue.addAll(!mode.sampleOnlyIfUpdated, PrimitiveLongCollections.toIterator(indexMap.indexIds()));\n+    scheduleSampling(mode, indexMap);\n+  }\n+\n+  public void sampleIndex(long indexId, IndexSamplingMode mode)\n+  {\n+    IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n+    jobQueue.add(!mode.sampleOnlyIfUpdated, indexId);\n+    scheduleSampling(mode, indexMap);\n+  }\n+\n+  public void recoverIndexSamples()\n+  {\n+    samplingLock.lock();\n+    try\n     {\n-        this.backgroundSampling = config.backgroundSampling();\n-        this.jobFactory = jobFactory;\n-        this.indexMapSnapshotProvider = indexMapSnapshotProvider;\n-        this.jobQueue = jobQueue;\n-        this.jobTracker = jobTracker;\n-        this.scheduler = scheduler;\n-        this.indexRecoveryCondition = indexRecoveryCondition;\n-    }\n-\n-    public void sampleIndexes( IndexSamplingMode mode )\n+      IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n+      PrimitiveLongIterator indexIds = indexMap.indexIds();\n+      while (indexIds.hasNext())\n+      {\n+        long indexId = indexIds.next();\n+        if (indexRecoveryCondition.test(indexId, indexMap.getIndexProxy(indexId).getDescriptor()))\n+        {\n+          sampleIndexOnCurrentThread(indexMap, indexId);\n+        }\n+      }\n+    } finally\n     {\n-        IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n-        jobQueue.addAll( !mode.sampleOnlyIfUpdated, PrimitiveLongCollections.toIterator( indexMap.indexIds() ) );\n-        scheduleSampling( mode, indexMap );\n+      samplingLock.unlock();\n     }\n+  }\n \n-    public void sampleIndex( long indexId, IndexSamplingMode mode )\n-    {\n-        IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n-        jobQueue.add( !mode.sampleOnlyIfUpdated, indexId );\n-        scheduleSampling( mode, indexMap );\n-    }\n+  public interface RecoveryCondition\n+  {\n+    boolean test(long indexId, SchemaIndexDescriptor descriptor);\n+  }\n \n-    public void recoverIndexSamples()\n+  private void scheduleSampling(IndexSamplingMode mode, IndexMap indexMap)\n+  {\n+    if (mode.blockUntilAllScheduled)\n     {\n-        samplingLock.lock();\n-        try\n-        {\n-            IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n-            PrimitiveLongIterator indexIds = indexMap.indexIds();\n-            while ( indexIds.hasNext() )\n-            {\n-                long indexId = indexIds.next();\n-                if ( indexRecoveryCondition.test( indexId, indexMap.getIndexProxy( indexId ).getDescriptor() ) )\n-                {\n-                    sampleIndexOnCurrentThread( indexMap, indexId );\n-                }\n-            }\n-        }\n-        finally\n-        {\n-            samplingLock.unlock();\n-        }\n-    }\n-\n-    public interface RecoveryCondition\n+      // Wait until last sampling job has been started\n+      scheduleAllSampling(indexMap);\n+    } else\n     {\n-        boolean test( long indexId, SchemaIndexDescriptor descriptor );\n+      // Try to schedule as many sampling jobs as possible\n+      tryScheduleSampling(indexMap);\n     }\n+  }\n \n-    private void scheduleSampling( IndexSamplingMode mode, IndexMap indexMap )\n+  private void tryScheduleSampling(IndexMap indexMap)\n+  {\n+    if (tryEmptyLock())\n     {\n-        if ( mode.blockUntilAllScheduled )\n-        {\n-            // Wait until last sampling job has been started\n-            scheduleAllSampling( indexMap );\n-        }\n-        else\n+      try\n+      {\n+        while (jobTracker.canExecuteMoreSamplingJobs())\n         {\n-            // Try to schedule as many sampling jobs as possible\n-            tryScheduleSampling( indexMap );\n-        }\n-    }\n+          Long indexId = jobQueue.poll();\n+          if (indexId == null)\n+          {\n+            return;\n+          }\n \n-    private void tryScheduleSampling( IndexMap indexMap )\n-    {\n-        if ( tryEmptyLock() )\n-        {\n-            try\n-            {\n-                while ( jobTracker.canExecuteMoreSamplingJobs() )\n-                {\n-                    Long indexId = jobQueue.poll();\n-                    if ( indexId == null )\n-                    {\n-                        return;\n-                    }\n-\n-                    sampleIndexOnTracker( indexMap, indexId );\n-                }\n-            }\n-            finally\n-            {\n-                samplingLock.unlock();\n-            }\n+          sampleIndexOnTracker(indexMap, indexId);\n         }\n+      } finally\n+      {\n+        samplingLock.unlock();\n+      }\n     }\n+  }\n \n-    private boolean tryEmptyLock()\n+  private boolean tryEmptyLock()\n+  {\n+    try\n     {\n-        try\n-        {\n-            return samplingLock.tryLock( 0, SECONDS );\n-        }\n-        catch ( InterruptedException ex )\n-        {\n-            // ignored\n-            return false;\n-        }\n+      return samplingLock.tryLock(0, SECONDS);\n+    } catch (InterruptedException ex)\n+    {\n+      // ignored\n+      return false;\n     }\n+  }\n \n-    private void scheduleAllSampling( IndexMap indexMap )\n+  private void scheduleAllSampling(IndexMap indexMap)\n+  {\n+    samplingLock.lock();\n+    try\n     {\n-        samplingLock.lock();\n-        try\n-        {\n-            Iterable<Long> indexIds = jobQueue.pollAll();\n-\n-            for ( Long indexId : indexIds )\n-            {\n-                jobTracker.waitUntilCanExecuteMoreSamplingJobs();\n-                sampleIndexOnTracker( indexMap, indexId );\n-            }\n-        }\n-        finally\n-        {\n-            samplingLock.unlock();\n-        }\n+      Iterable<Long> indexIds = jobQueue.pollAll();\n+\n+      for (Long indexId : indexIds)\n+      {\n+        jobTracker.waitUntilCanExecuteMoreSamplingJobs();\n+        sampleIndexOnTracker(indexMap, indexId);\n+      }\n+    } finally\n+    {\n+      samplingLock.unlock();\n     }\n+  }\n \n-    private void sampleIndexOnTracker( IndexMap indexMap, long indexId )\n+  private void sampleIndexOnTracker(IndexMap indexMap, long indexId)\n+  {\n+    IndexSamplingJob job = createSamplingJob(indexMap, indexId);\n+    if (job != null)\n     {\n-        IndexSamplingJob job = createSamplingJob( indexMap, indexId );\n-        if ( job != null )\n-        {\n-            jobTracker.scheduleSamplingJob( job );\n-        }\n+      jobTracker.scheduleSamplingJob(job);\n     }\n+  }\n \n-    private void sampleIndexOnCurrentThread( IndexMap indexMap, long indexId )\n+  private void sampleIndexOnCurrentThread(IndexMap indexMap, long indexId)\n+  {\n+    IndexSamplingJob job = createSamplingJob(indexMap, indexId);\n+    if (job != null)\n     {\n-        IndexSamplingJob job = createSamplingJob( indexMap, indexId );\n-        if ( job != null )\n-        {\n-            job.run();\n-        }\n+      job.run();\n     }\n+  }\n \n-    private IndexSamplingJob createSamplingJob( IndexMap indexMap, long indexId )\n+  private IndexSamplingJob createSamplingJob(IndexMap indexMap, long indexId)\n+  {\n+    IndexProxy proxy = indexMap.getIndexProxy(indexId);\n+    if (proxy == null || proxy.getState() != InternalIndexState.ONLINE)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( indexId );\n-        if ( proxy == null || proxy.getState() != InternalIndexState.ONLINE )\n-        {\n-            return null;\n-        }\n-        return jobFactory.create( indexId, proxy );\n+      return null;\n     }\n+    return jobFactory.create(indexId, proxy);\n+  }\n \n-    public void start()\n+  public void start()\n+  {\n+    if (backgroundSampling)\n     {\n-        if ( backgroundSampling )\n-        {\n-            Runnable samplingRunner = () -> sampleIndexes( BACKGROUND_REBUILD_UPDATED );\n-            backgroundSamplingHandle = scheduler.scheduleRecurring( indexSamplingController, samplingRunner, 10, SECONDS );\n-        }\n+      Runnable samplingRunner = () -> sampleIndexes(BACKGROUND_REBUILD_UPDATED);\n+      backgroundSamplingHandle = scheduler.scheduleRecurring(indexSamplingController, samplingRunner, 10, SECONDS);\n     }\n+  }\n \n-    public void stop()\n+  public void stop()\n+  {\n+    if (backgroundSamplingHandle != null)\n     {\n-        if ( backgroundSamplingHandle != null )\n-        {\n-            backgroundSamplingHandle.cancel( true );\n-        }\n-        jobTracker.stopAndAwaitAllJobs();\n+      backgroundSamplingHandle.cancel(true);\n     }\n+    jobTracker.stopAndAwaitAllJobs();\n+  }\n }\n",
            "diff_size": 220
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4235/IndexSamplingController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4235/IndexSamplingController.java\nindex d184c3f53b3..8246a2b381a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4235/IndexSamplingController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4235/IndexSamplingController.java\n@@ -50,14 +50,12 @@ public class IndexSamplingController\n     private JobHandle backgroundSamplingHandle;\n \n     // use IndexSamplingControllerFactory.create do not instantiate directly\n-    IndexSamplingController( IndexSamplingConfig config,\n-                             IndexSamplingJobFactory jobFactory,\n-                             IndexSamplingJobQueue<Long> jobQueue,\n+    IndexSamplingController( IndexSamplingConfig config, IndexSamplingJobFactory jobFactory, IndexSamplingJobQueue<Long> jobQueue,\n                              IndexSamplingJobTracker jobTracker,\n                              IndexMapSnapshotProvider indexMapSnapshotProvider,\n                              JobScheduler scheduler,\n                              RecoveryCondition indexRecoveryCondition )\n-    {\n+{\n         this.backgroundSampling = config.backgroundSampling();\n         this.jobFactory = jobFactory;\n         this.indexMapSnapshotProvider = indexMapSnapshotProvider;\n@@ -165,8 +163,7 @@ public class IndexSamplingController\n         try\n         {\n             Iterable<Long> indexIds = jobQueue.pollAll();\n-\n-            for ( Long indexId : indexIds )\n+for ( Long indexId : indexIds )\n             {\n                 jobTracker.waitUntilCanExecuteMoreSamplingJobs();\n                 sampleIndexOnTracker( indexMap, indexId );\n@@ -203,7 +200,8 @@ public class IndexSamplingController\n         {\n             return null;\n         }\n-        return jobFactory.create( indexId, proxy );\n+\n+return jobFactory.create( indexId, proxy );\n     }\n \n     public void start()\n@@ -223,4 +221,4 @@ public class IndexSamplingController\n         }\n         jobTracker.stopAndAwaitAllJobs();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4567",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4567/DefaultNonUniqueIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4567/DefaultNonUniqueIndexSampler.java\nindex aad34199a59..8e5eef89a19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4567/DefaultNonUniqueIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4567/DefaultNonUniqueIndexSampler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import org.neo4j.helpers.collection.MultiSet;\n@@ -24,102 +25,102 @@ import org.neo4j.storageengine.api.schema.IndexSample;\n \n public class DefaultNonUniqueIndexSampler implements NonUniqueIndexSampler\n {\n-    private final int sampleSizeLimit;\n-    private final MultiSet<String> values;\n-\n-    private int sampledSteps;\n-\n-    // kept as longs to side step overflow issues\n-\n-    private long accumulatedUniqueValues;\n-    private long accumulatedSampledSize;\n-    private long sampleSize;\n-\n-    public DefaultNonUniqueIndexSampler( int sampleSizeLimit )\n-    {\n-        this.values = new MultiSet<>( calculateInitialSetSize( sampleSizeLimit ) );\n-        this.sampleSizeLimit = sampleSizeLimit;\n-    }\n-\n-    @Override\n-    public void include( String value )\n-    {\n-        include( value, 1 );\n-    }\n-\n-    @Override\n-    public void include( String value, long increment )\n-    {\n-        assert increment > 0;\n-        if ( sampleSize >= sampleSizeLimit )\n-        {\n-            nextStep();\n-        }\n-\n-        if ( values.increment( value, increment ) == increment )\n-        {\n-            sampleSize += value.length();\n-        }\n-    }\n-\n-    @Override\n-    public void exclude( String value )\n-    {\n-        exclude( value, 1 );\n-    }\n-\n-    @Override\n-    public void exclude( String value, long decrement )\n+  private final int sampleSizeLimit;\n+  private final MultiSet<String> values;\n+\n+  private int sampledSteps;\n+\n+  // kept as longs to side step overflow issues\n+\n+  private long accumulatedUniqueValues;\n+  private long accumulatedSampledSize;\n+  private long sampleSize;\n+\n+  public DefaultNonUniqueIndexSampler(int sampleSizeLimit)\n+  {\n+    this.values = new MultiSet<>(calculateInitialSetSize(sampleSizeLimit));\n+    this.sampleSizeLimit = sampleSizeLimit;\n+  }\n+\n+  @Override\n+  public void include(String value)\n+  {\n+    include(value, 1);\n+  }\n+\n+  @Override\n+  public void include(String value, long increment)\n+  {\n+    assert increment > 0;\n+    if (sampleSize >= sampleSizeLimit)\n     {\n-        assert decrement > 0;\n-        if ( values.increment( value, -decrement ) == 0 )\n-        {\n-            sampleSize -= value.length();\n-        }\n+      nextStep();\n     }\n \n-    @Override\n-    public IndexSample result()\n+    if (values.increment(value, increment) == increment)\n     {\n-        return result( -1 );\n+      sampleSize += value.length();\n     }\n-\n-    @Override\n-    public IndexSample result( int numDocs )\n+  }\n+\n+  @Override\n+  public void exclude(String value)\n+  {\n+    exclude(value, 1);\n+  }\n+\n+  @Override\n+  public void exclude(String value, long decrement)\n+  {\n+    assert decrement > 0;\n+    if (values.increment(value, -decrement) == 0)\n     {\n-        if ( !values.isEmpty() )\n-        {\n-            nextStep();\n-        }\n-\n-        long uniqueValues = sampledSteps != 0 ? accumulatedUniqueValues / sampledSteps : 0;\n-        long sampledSize = sampledSteps != 0 ? accumulatedSampledSize / sampledSteps : 0;\n-\n-        return new IndexSample( numDocs < 0 ? accumulatedSampledSize : numDocs, uniqueValues, sampledSize );\n+      sampleSize -= value.length();\n     }\n-\n-    private void nextStep()\n+  }\n+\n+  @Override\n+  public IndexSample result()\n+  {\n+    return result(-1);\n+  }\n+\n+  @Override\n+  public IndexSample result(int numDocs)\n+  {\n+    if (!values.isEmpty())\n     {\n-        accumulatedUniqueValues += values.uniqueSize();\n-        accumulatedSampledSize += values.size();\n-        sampleSize = 0;\n-\n-        sampledSteps++;\n-        values.clear();\n+      nextStep();\n     }\n \n-    /**\n-     * Evaluate initial set size that evaluate initial set as log2(sampleSizeLimit) / 2 based on provided sample size\n-     * limit.\n-     * Minimum possible size is 1 << 10.\n-     * Maximum possible size is 1 << 16.\n-     *\n-     * @param sampleSizeLimit specified sample size limit\n-     * @return initial set size\n-     */\n-    private int calculateInitialSetSize( int sampleSizeLimit )\n-    {\n-        int basedOnSampleSize = Math.max( 10, (int) (Math.log( sampleSizeLimit ) / Math.log( 2 )) / 2 );\n-        return 1 << Math.min( 16, basedOnSampleSize );\n-    }\n+    long uniqueValues = sampledSteps != 0 ? accumulatedUniqueValues / sampledSteps : 0;\n+    long sampledSize = sampledSteps != 0 ? accumulatedSampledSize / sampledSteps : 0;\n+\n+    return new IndexSample(numDocs < 0 ? accumulatedSampledSize : numDocs, uniqueValues, sampledSize);\n+  }\n+\n+  private void nextStep()\n+  {\n+    accumulatedUniqueValues += values.uniqueSize();\n+    accumulatedSampledSize += values.size();\n+    sampleSize = 0;\n+\n+    sampledSteps++;\n+    values.clear();\n+  }\n+\n+  /**\n+   * Evaluate initial set size that evaluate initial set as log2(sampleSizeLimit) / 2 based on provided sample size\n+   * limit.\n+   * Minimum possible size is 1 << 10.\n+   * Maximum possible size is 1 << 16.\n+   *\n+   * @param sampleSizeLimit specified sample size limit\n+   * @return initial set size\n+   */\n+  private int calculateInitialSetSize(int sampleSizeLimit)\n+  {\n+    int basedOnSampleSize = Math.max(10, (int) (Math.log(sampleSizeLimit) / Math.log(2)) / 2);\n+    return 1 << Math.min(16, basedOnSampleSize);\n+  }\n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "119",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4567/DefaultNonUniqueIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4567/DefaultNonUniqueIndexSampler.java\nindex aad34199a59..3d868addf1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4567/DefaultNonUniqueIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4567/DefaultNonUniqueIndexSampler.java\n@@ -94,17 +94,14 @@ public class DefaultNonUniqueIndexSampler implements NonUniqueIndexSampler\n \n         long uniqueValues = sampledSteps != 0 ? accumulatedUniqueValues / sampledSteps : 0;\n         long sampledSize = sampledSteps != 0 ? accumulatedSampledSize / sampledSteps : 0;\n-\n-        return new IndexSample( numDocs < 0 ? accumulatedSampledSize : numDocs, uniqueValues, sampledSize );\n+return new IndexSample( numDocs < 0 ? accumulatedSampledSize : numDocs, uniqueValues, sampledSize );\n     }\n \n     private void nextStep()\n     {\n         accumulatedUniqueValues += values.uniqueSize();\n         accumulatedSampledSize += values.size();\n-        sampleSize = 0;\n-\n-        sampledSteps++;\n+        sampleSize = 0; sampledSteps++;\n         values.clear();\n     }\n \n@@ -119,7 +116,7 @@ public class DefaultNonUniqueIndexSampler implements NonUniqueIndexSampler\n      */\n     private int calculateInitialSetSize( int sampleSizeLimit )\n     {\n-        int basedOnSampleSize = Math.max( 10, (int) (Math.log( sampleSizeLimit ) / Math.log( 2 )) / 2 );\n+        int basedOnSampleSize = Math.max( 10, ( int) (Math.log( sampleSizeLimit ) / Math.log( 2 )) / 2 );\n         return 1 << Math.min( 16, basedOnSampleSize );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
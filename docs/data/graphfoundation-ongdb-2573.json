{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2573",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2573/VerboseStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2573/VerboseStatistics.java\nindex 2d12b5ffd6f..26404de6d5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2573/VerboseStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2573/VerboseStatistics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.statistics;\n \n import org.neo4j.helpers.Format;\n@@ -27,50 +28,50 @@ import static java.lang.System.currentTimeMillis;\n \n public class VerboseStatistics implements Statistics\n {\n-    private final AccessStatistics accessStatistics;\n-    private final Counts counts;\n-    private final Log logger;\n-    private long startTime;\n+  private final AccessStatistics accessStatistics;\n+  private final Counts counts;\n+  private final Log logger;\n+  private long startTime;\n \n-    public VerboseStatistics( AccessStatistics accessStatistics, Counts counts, Log logger )\n-    {\n-        this.accessStatistics = accessStatistics;\n-        this.counts = counts;\n-        this.logger = logger;\n-    }\n+  public VerboseStatistics(AccessStatistics accessStatistics, Counts counts, Log logger)\n+  {\n+    this.accessStatistics = accessStatistics;\n+    this.counts = counts;\n+    this.logger = logger;\n+  }\n \n-    @Override\n-    public void print( String name )\n-    {\n-        String accessStr = accessStatistics.getAccessStatSummary();\n-        logger.info( format( \"=== %s ===\", name ) );\n-        logger.info( format( \"I/Os%n%s\", accessStr ) );\n-        logger.info( counts.toString() );\n-        logger.info( memoryStats() );\n-        logger.info( \"Done in  \" + Format.duration( currentTimeMillis() - startTime ) );\n-    }\n+  @Override\n+  public void print(String name)\n+  {\n+    String accessStr = accessStatistics.getAccessStatSummary();\n+    logger.info(format(\"=== %s ===\", name));\n+    logger.info(format(\"I/Os%n%s\", accessStr));\n+    logger.info(counts.toString());\n+    logger.info(memoryStats());\n+    logger.info(\"Done in  \" + Format.duration(currentTimeMillis() - startTime));\n+  }\n \n-    @Override\n-    public void reset()\n-    {\n-        accessStatistics.reset();\n-        counts.reset();\n-        startTime = currentTimeMillis();\n-    }\n+  @Override\n+  public void reset()\n+  {\n+    accessStatistics.reset();\n+    counts.reset();\n+    startTime = currentTimeMillis();\n+  }\n \n-    private static String memoryStats()\n-    {\n-        Runtime runtime = Runtime.getRuntime();\n-        return format( \"Memory[used:%s, free:%s, total:%s, max:%s]\",\n-                Format.bytes( runtime.totalMemory() - runtime.freeMemory() ),\n-                Format.bytes( runtime.freeMemory() ),\n-                Format.bytes( runtime.totalMemory() ),\n-                Format.bytes( runtime.maxMemory() ) );\n-    }\n+  private static String memoryStats()\n+  {\n+    Runtime runtime = Runtime.getRuntime();\n+    return format(\"Memory[used:%s, free:%s, total:%s, max:%s]\",\n+        Format.bytes(runtime.totalMemory() - runtime.freeMemory()),\n+        Format.bytes(runtime.freeMemory()),\n+        Format.bytes(runtime.totalMemory()),\n+        Format.bytes(runtime.maxMemory()));\n+  }\n \n-    @Override\n-    public Counts getCounts()\n-    {\n-        return counts;\n-    }\n+  @Override\n+  public Counts getCounts()\n+  {\n+    return counts;\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2573/VerboseStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2573/VerboseStatistics.java\nindex 2d12b5ffd6f..b78847cc994 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2573/VerboseStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2573/VerboseStatistics.java\n@@ -62,10 +62,7 @@ public class VerboseStatistics implements Statistics\n     {\n         Runtime runtime = Runtime.getRuntime();\n         return format( \"Memory[used:%s, free:%s, total:%s, max:%s]\",\n-                Format.bytes( runtime.totalMemory() - runtime.freeMemory() ),\n-                Format.bytes( runtime.freeMemory() ),\n-                Format.bytes( runtime.totalMemory() ),\n-                Format.bytes( runtime.maxMemory() ) );\n+                Format.bytes( runtime.totalMemory() - runtime.freeMemory() ), Format.bytes( runtime.freeMemory() ), Format.bytes( runtime.totalMemory() ), Format.bytes( runtime.maxMemory() ) );\n     }\n \n     @Override\n@@ -73,4 +70,4 @@ public class VerboseStatistics implements Statistics\n     {\n         return counts;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "47",
                "column": "39",
                "severity": "warning",
                "message": "';' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "  protected ReferenceConfig referenceConfig;\n\n  protected String versionRule = null;//DefinitionConst.VERSION_RULE_ALL;\n\n  protected RoutingContext routingContext;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/61/EdgeInvocation.java\nindex b0a6f32b901..30639f367f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/61/EdgeInvocation.java\n@@ -44,7 +44,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n \n   protected ReferenceConfig referenceConfig;\n \n-  protected String versionRule = null;//DefinitionConst.VERSION_RULE_ALL;\n+  protected String versionRule = null; //DefinitionConst.VERSION_RULE_ALL;\n \n   protected RoutingContext routingContext;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "47",
                    "column": "39",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/61/EdgeInvocation.java\nindex b0a6f32b901..4e6aba7a1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/61/EdgeInvocation.java\n@@ -49,7 +49,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n   protected RoutingContext routingContext;\n \n   public void init(String microserviceName, RoutingContext context, String path,\n-      List<HttpServerFilter> httpServerFilters) {\n+                   List<HttpServerFilter> httpServerFilters) {\n     this.microserviceName = microserviceName;\n     this.requestEx = new VertxServerRequestToHttpServletRequest(context, path);\n     this.responseEx = new VertxServerResponseToHttpServletResponse(context.response());\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "column": "39",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/61/EdgeInvocation.java\nindex b0a6f32b901..fe814822671 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/61/EdgeInvocation.java\n@@ -18,7 +18,6 @@\n package org.apache.servicecomb.edge.core;\n \n import java.util.List;\n-\n import org.apache.servicecomb.common.rest.AbstractRestInvocation;\n import org.apache.servicecomb.common.rest.RestConst;\n import org.apache.servicecomb.common.rest.filter.HttpServerFilter;\n@@ -31,7 +30,6 @@ import org.apache.servicecomb.core.provider.consumer.ReactiveResponseExecutor;\n import org.apache.servicecomb.core.provider.consumer.ReferenceConfig;\n import org.apache.servicecomb.foundation.vertx.http.VertxServerRequestToHttpServletRequest;\n import org.apache.servicecomb.foundation.vertx.http.VertxServerResponseToHttpServletResponse;\n-\n import io.vertx.core.Vertx;\n import io.vertx.ext.web.RoutingContext;\n \n@@ -48,8 +46,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n \n   protected RoutingContext routingContext;\n \n-  public void init(String microserviceName, RoutingContext context, String path,\n-      List<HttpServerFilter> httpServerFilters) {\n+  public void init(String microserviceName, RoutingContext context, String path, List<HttpServerFilter> httpServerFilters) {\n     this.microserviceName = microserviceName;\n     this.requestEx = new VertxServerRequestToHttpServletRequest(context, path);\n     this.responseEx = new VertxServerResponseToHttpServletResponse(context.response());\n@@ -61,15 +58,13 @@ public class EdgeInvocation extends AbstractRestInvocation {\n   public void edgeInvoke() {\n     findMicroserviceVersionMeta();\n     findRestOperation(microserviceReferenceConfig.getLatestMicroserviceMeta());\n-\n     scheduleInvocation();\n   }\n \n   protected void findMicroserviceVersionMeta() {\n     // if not present, should use configured value\n     String versionRule = chooseVersionRule();\n-    microserviceReferenceConfig = SCBEngine.getInstance()\n-        .createMicroserviceReferenceConfig(microserviceName, versionRule);\n+    microserviceReferenceConfig = SCBEngine.getInstance().createMicroserviceReferenceConfig(microserviceName, versionRule);\n   }\n \n   public void setVersionRule(String versionRule) {\n@@ -84,6 +79,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n   //   v2->2.0.0-3.0.0\n   // that means if a(1.x.x) bigger then b(1.y.y), then a compatible to b\n   //        but a(2.x.x) not compatible to b   \n+\n   protected String chooseVersionRule() {\n     // this will use all instance of the microservice\n     // and this required all new version compatible to old version\n@@ -97,13 +93,13 @@ public class EdgeInvocation extends AbstractRestInvocation {\n \n   @Override\n   protected void createInvocation() {\n-    ReferenceConfig referenceConfig = microserviceReferenceConfig\n-        .createReferenceConfig(restOperationMeta.getOperationMeta());\n+    ReferenceConfig referenceConfig = microserviceReferenceConfig.createReferenceConfig(restOperationMeta.getOperationMeta());\n+\n \n     this.invocation = InvocationFactory.forConsumer(referenceConfig,\n-        restOperationMeta.getOperationMeta(),\n-        restOperationMeta.getOperationMeta().buildBaseConsumerRuntimeType(),\n-        null);\n+restOperationMeta.getOperationMeta(),\n+restOperationMeta.getOperationMeta().buildBaseConsumerRuntimeType(),\n+null);\n     this.invocation.setSync(false);\n     this.invocation.setEdge(true);\n     this.invocation.getHandlerContext().put(EDGE_INVOCATION_CONTEXT, Vertx.currentContext());\n@@ -114,5 +110,6 @@ public class EdgeInvocation extends AbstractRestInvocation {\n   @Override\n   protected void setContext() throws Exception {\n     // do not read InvocationContext from HTTP header, for security reason\n+\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/61/EdgeInvocation.java\nindex b0a6f32b901..30639f367f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/61/EdgeInvocation.java\n@@ -44,7 +44,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n \n   protected ReferenceConfig referenceConfig;\n \n-  protected String versionRule = null;//DefinitionConst.VERSION_RULE_ALL;\n+  protected String versionRule = null; //DefinitionConst.VERSION_RULE_ALL;\n \n   protected RoutingContext routingContext;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/61/EdgeInvocation.java\nindex b0a6f32b901..4d182327320 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/61/EdgeInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/61/EdgeInvocation.java\n@@ -44,7 +44,7 @@ public class EdgeInvocation extends AbstractRestInvocation {\n \n   protected ReferenceConfig referenceConfig;\n \n-  protected String versionRule = null;//DefinitionConst.VERSION_RULE_ALL;\n+  protected String versionRule = null; //DefinitionConst.VERSION_RULE_ALL;protected RoutingContext routingContext;\n \n   protected RoutingContext routingContext;\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
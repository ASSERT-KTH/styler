{
    "project_name": "h2database-h2database",
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "271",
                "column": "94",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "     *      String)\n     */\n    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n            String functionNamePattern, String columnNamePattern);\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/59/DatabaseMeta.java\nindex 52566073b84..2f1455ea132 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/59/DatabaseMeta.java\n@@ -268,8 +268,9 @@ public abstract class DatabaseMeta {\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern,\n+            //\n+             String functionNamePattern, String columnNamePattern);\n \n     /**\n      * INTERNAL\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "312",
                    "column": "78",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/59/DatabaseMeta.java\nindex 52566073b84..f991f38928c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/59/DatabaseMeta.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.jdbc.meta;\n \n import org.h2.mode.DefaultNullOrdering;\n@@ -77,25 +78,31 @@ public abstract class DatabaseMeta {\n      *\n      * @see java.sql.DatabaseMetaData#getProcedures(String, String, String)\n      */\n-    public abstract ResultInterface getProcedures(String catalog, String schemaPattern, String procedureNamePattern);\n+    public abstract ResultInterface getProcedures(String catalog,\n+                                                  String schemaPattern,\n+                                                  String procedureNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getProcedureColumns(String, String,\n-     *      String, String)\n+     * String, String)\n      */\n-    public abstract ResultInterface getProcedureColumns(String catalog, String schemaPattern,\n-            String procedureNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getProcedureColumns(String catalog,\n+                                                        String schemaPattern,\n+                                                        String procedureNamePattern,\n+                                                        String columnNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getTables(String, String, String,\n-     *      String[])\n+     * String[])\n      */\n-    public abstract ResultInterface getTables(String catalog, String schemaPattern, String tableNamePattern,\n-            String[] types);\n+    public abstract ResultInterface getTables(String catalog,\n+                                              String schemaPattern,\n+                                              String tableNamePattern,\n+                                              String[] types);\n \n     /**\n      * INTERNAL\n@@ -123,70 +130,90 @@ public abstract class DatabaseMeta {\n      *\n      * @see java.sql.DatabaseMetaData#getColumns(String, String, String, String)\n      */\n-    public abstract ResultInterface getColumns(String catalog, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n+    public abstract ResultInterface getColumns(String catalog,\n+                                               String schemaPattern,\n+                                               String tableNamePattern,\n+                                               String columnNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getColumnPrivileges(String, String,\n-     *      String, String)\n+     * String, String)\n      */\n-    public abstract ResultInterface getColumnPrivileges(String catalog, String schema, String table,\n-            String columnNamePattern);\n+    public abstract ResultInterface getColumnPrivileges(String catalog,\n+                                                        String schema,\n+                                                        String table,\n+                                                        String columnNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getTablePrivileges(String, String, String)\n      */\n-    public abstract ResultInterface getTablePrivileges(String catalog, String schemaPattern, String tableNamePattern);\n+    public abstract ResultInterface getTablePrivileges(String catalog,\n+                                                       String schemaPattern,\n+                                                       String tableNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getBestRowIdentifier(String, String,\n-     *      String, int, boolean)\n+     * String, int, boolean)\n      */\n-    public abstract ResultInterface getBestRowIdentifier(String catalogPattern, String schemaPattern, String tableName,\n-            int scope, boolean nullable);\n+    public abstract ResultInterface getBestRowIdentifier(String catalogPattern,\n+                                                         String schemaPattern,\n+                                                         String tableName,\n+                                                         int scope,\n+                                                         boolean nullable);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getVersionColumns(String, String, String)\n      */\n-    public abstract ResultInterface getVersionColumns(String catalog, String schema, String table);\n+    public abstract ResultInterface getVersionColumns(String catalog,\n+                                                      String schema,\n+                                                      String table);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getPrimaryKeys(String, String, String)\n      */\n-    public abstract ResultInterface getPrimaryKeys(String catalog, String schema, String table);\n+    public abstract ResultInterface getPrimaryKeys(String catalog,\n+                                                   String schema, String table);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getImportedKeys(String, String, String)\n      */\n-    public abstract ResultInterface getImportedKeys(String catalog, String schema, String table);\n+    public abstract ResultInterface getImportedKeys(String catalog,\n+                                                    String schema,\n+                                                    String table);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getExportedKeys(String, String, String)\n      */\n-    public abstract ResultInterface getExportedKeys(String catalog, String schema, String table);\n+    public abstract ResultInterface getExportedKeys(String catalog,\n+                                                    String schema,\n+                                                    String table);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getCrossReference(String, String, String,\n-     *      String, String, String)\n+     * String, String, String)\n      */\n-    public abstract ResultInterface getCrossReference(String primaryCatalog, String primarySchema, String primaryTable,\n-            String foreignCatalog, String foreignSchema, String foreignTable);\n+    public abstract ResultInterface getCrossReference(String primaryCatalog,\n+                                                      String primarySchema,\n+                                                      String primaryTable,\n+                                                      String foreignCatalog,\n+                                                      String foreignSchema,\n+                                                      String foreignTable);\n \n     /**\n      * INTERNAL\n@@ -199,40 +226,50 @@ public abstract class DatabaseMeta {\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getIndexInfo(String, String, String,\n-     *      boolean, boolean)\n+     * boolean, boolean)\n      */\n-    public abstract ResultInterface getIndexInfo(String catalog, String schema, String table, boolean unique,\n-            boolean approximate);\n+    public abstract ResultInterface getIndexInfo(String catalog, String schema,\n+                                                 String table, boolean unique,\n+                                                 boolean approximate);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getUDTs(String, String, String, int[])\n      */\n-    public abstract ResultInterface getUDTs(String catalog, String schemaPattern, String typeNamePattern, int[] types);\n+    public abstract ResultInterface getUDTs(String catalog,\n+                                            String schemaPattern,\n+                                            String typeNamePattern,\n+                                            int[] types);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getSuperTypes(String, String, String)\n      */\n-    public abstract ResultInterface getSuperTypes(String catalog, String schemaPattern, String typeNamePattern);\n+    public abstract ResultInterface getSuperTypes(String catalog,\n+                                                  String schemaPattern,\n+                                                  String typeNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getSuperTables(String, String, String)\n      */\n-    public abstract ResultInterface getSuperTables(String catalog, String schemaPattern, String tableNamePattern);\n+    public abstract ResultInterface getSuperTables(String catalog,\n+                                                   String schemaPattern,\n+                                                   String tableNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getAttributes(String, String, String,\n-     *      String)\n+     * String)\n      */\n-    public abstract ResultInterface getAttributes(String catalog, String schemaPattern, String typeNamePattern,\n-            String attributeNamePattern);\n+    public abstract ResultInterface getAttributes(String catalog,\n+                                                  String schemaPattern,\n+                                                  String typeNamePattern,\n+                                                  String attributeNamePattern);\n \n     /**\n      * INTERNAL\n@@ -253,31 +290,38 @@ public abstract class DatabaseMeta {\n      *\n      * @see java.sql.DatabaseMetaData#getSchemas(String, String)\n      */\n-    public abstract ResultInterface getSchemas(String catalog, String schemaPattern);\n+    public abstract ResultInterface getSchemas(String catalog,\n+                                               String schemaPattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getFunctions(String, String, String)\n      */\n-    public abstract ResultInterface getFunctions(String catalog, String schemaPattern, String functionNamePattern);\n+    public abstract ResultInterface getFunctions(String catalog,\n+                                                 String schemaPattern,\n+                                                 String functionNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n-     *      String)\n+     * String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog,\n+                                                       String schemaPattern, //\n+                                                       String functionNamePattern,\n+                                                       String columnNamePattern);\n \n     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getPseudoColumns(String, String, String,\n-     *      String)\n+     * String)\n      */\n-    public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n+    public abstract ResultInterface getPseudoColumns(String catalog,\n+                                                     String schemaPattern,\n+                                                     String tableNamePattern,\n+                                                     String columnNamePattern);\n \n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/59/DatabaseMeta.java\nindex 52566073b84..2f1455ea132 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/59/DatabaseMeta.java\n@@ -268,8 +268,9 @@ public abstract class DatabaseMeta {\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern,\n+            //\n+             String functionNamePattern, String columnNamePattern);\n \n     /**\n      * INTERNAL\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/59/DatabaseMeta.java\nindex 52566073b84..79b284fc6c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/59/DatabaseMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/59/DatabaseMeta.java\n@@ -268,8 +268,9 @@ public abstract class DatabaseMeta {\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern,\n+        //\n+             String functionNamePattern, String columnNamePattern);\n \n     /**\n      * INTERNAL\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
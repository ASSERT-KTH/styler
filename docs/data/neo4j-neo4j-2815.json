{
    "project_name": "neo4j-neo4j",
    "error_id": "2815",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2815/ExhaustiveShortestPathForbiddenException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2815/ExhaustiveShortestPathForbiddenException.java\nindex dd00a064781..a26291af643 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2815/ExhaustiveShortestPathForbiddenException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2815/ExhaustiveShortestPathForbiddenException.java\n@@ -17,22 +17,23 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.exceptions;\n \n public class ExhaustiveShortestPathForbiddenException extends CypherExecutionException\n {\n     public static final String ERROR_MSG = \"Shortest path fallback has been explicitly disabled. That means that no full path enumeration is performed in\\n\" +\n-                                           \"case shortest path algorithms cannot be used. This might happen in case of existential predicates on the path,\\n\" +\n-                                           \"e.g., when searching for the shortest path containing a node with property 'name=Emil'. The problem is that\\n\" +\n-                                           \"graph algorithms work only on universal predicates, e.g., when searching for the shortest where all nodes have\\n\" +\n-                                           \"label 'Person'. In case this is an unexpected error please either disable the runtime error in the Neo4j\\n\" +\n-                                           \"configuration or please improve your query by consulting the Neo4j manual.  In order to avoid planning the\\n\" +\n-                                           \"shortest path fallback a WITH clause can be introduced to separate the MATCH describing the shortest paths and\\n\" +\n-                                           \"the existential predicates on the path; note though that in this case all shortest paths are computed before\\n\" +\n-                                           \"start filtering.\";\n+      \"case shortest path algorithms cannot be used. This might happen in case of existential predicates on the path,\\n\" +\n+      \"e.g., when searching for the shortest path containing a node with property 'name=Emil'. The problem is that\\n\" +\n+      \"graph algorithms work only on universal predicates, e.g., when searching for the shortest where all nodes have\\n\" +\n+      \"label 'Person'. In case this is an unexpected error please either disable the runtime error in the Neo4j\\n\" +\n+      \"configuration or please improve your query by consulting the Neo4j manual.  In order to avoid planning the\\n\" +\n+      \"shortest path fallback a WITH clause can be introduced to separate the MATCH describing the shortest paths and\\n\" +\n+      \"the existential predicates on the path; note though that in this case all shortest paths are computed before\\n\" +\n+      \"start filtering.\";\n \n-    public ExhaustiveShortestPathForbiddenException( )\n+    public ExhaustiveShortestPathForbiddenException()\n     {\n-        super( ERROR_MSG );\n+        super(ERROR_MSG);\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2815/ExhaustiveShortestPathForbiddenException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2815/ExhaustiveShortestPathForbiddenException.java\nindex dd00a064781..76aa3a9c1d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2815/ExhaustiveShortestPathForbiddenException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2815/ExhaustiveShortestPathForbiddenException.java\n@@ -35,4 +35,4 @@ public class ExhaustiveShortestPathForbiddenException extends CypherExecutionExc\n     {\n         super( ERROR_MSG );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
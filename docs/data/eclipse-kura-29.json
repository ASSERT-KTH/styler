{
    "project_name": "eclipse-kura",
    "error_id": "29",
    "information": {
        "errors": [
            {
                "line": "147",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    \n    @Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "148",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/29/WifiAccessPointImpl.java\nindex f85597b3012..9d8c6a8d4f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/29/WifiAccessPointImpl.java\n@@ -144,7 +144,7 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n     }\n     \n     @Override\n-\tpublic int hashCode() {\n+    public int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = 1;\n \t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/29/WifiAccessPointImpl.java\nindex f85597b3012..0e49312e42b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/29/WifiAccessPointImpl.java\n@@ -9,6 +9,7 @@\n  * Contributors:\n  *     Eurotech\n  *******************************************************************************/\n+\n package org.eclipse.kura.core.net;\n \n import java.util.Arrays;\n@@ -142,82 +143,82 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n         }\n         return sb.toString();\n     }\n-    \n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n+        result = prime * result + ((capabilities == null) ? 0 : capabilities.hashCode());\n+        result = prime * result + (int) (frequency ^ (frequency >>> 32));\n+        result = prime * result + Arrays.hashCode(hardwareAddress);\n+        result = prime * result + ((mode == null) ? 0 : mode.hashCode());\n+        result = prime * result + ((rsnSecurity == null) ? 0 : rsnSecurity.hashCode());\n+        result = prime * result + ((ssid == null) ? 0 : ssid.hashCode());\n+        result = prime * result + strength;\n+        result = prime * result + ((wpaSecurity == null) ? 0 : wpaSecurity.hashCode());\n+        return result;\n+    }\n+\n     @Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = 1;\n-\t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n-\t\tresult = prime * result + ((capabilities == null) ? 0 : capabilities.hashCode());\n-\t\tresult = prime * result + (int) (frequency ^ (frequency >>> 32));\n-\t\tresult = prime * result + Arrays.hashCode(hardwareAddress);\n-\t\tresult = prime * result + ((mode == null) ? 0 : mode.hashCode());\n-\t\tresult = prime * result + ((rsnSecurity == null) ? 0 : rsnSecurity.hashCode());\n-\t\tresult = prime * result + ((ssid == null) ? 0 : ssid.hashCode());\n-\t\tresult = prime * result + strength;\n-\t\tresult = prime * result + ((wpaSecurity == null) ? 0 : wpaSecurity.hashCode());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (obj == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!(obj instanceof WifiAccessPointImpl)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tWifiAccessPointImpl other = (WifiAccessPointImpl) obj;\n-\t\tif (bitrate == null) {\n-\t\t\tif (other.bitrate != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!bitrate.equals(other.bitrate)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (capabilities == null) {\n-\t\t\tif (other.capabilities != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!capabilities.equals(other.capabilities)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (frequency != other.frequency) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!Arrays.equals(hardwareAddress, other.hardwareAddress)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (mode != other.mode) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (rsnSecurity == null) {\n-\t\t\tif (other.rsnSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!rsnSecurity.equals(other.rsnSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (ssid == null) {\n-\t\t\tif (other.ssid != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!ssid.equals(other.ssid)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (strength != other.strength) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (wpaSecurity == null) {\n-\t\t\tif (other.wpaSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!wpaSecurity.equals(other.wpaSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (!(obj instanceof WifiAccessPointImpl)) {\n+            return false;\n+        }\n+        WifiAccessPointImpl other = (WifiAccessPointImpl) obj;\n+        if (bitrate == null) {\n+            if (other.bitrate != null) {\n+                return false;\n+            }\n+        } else if (!bitrate.equals(other.bitrate)) {\n+            return false;\n+        }\n+        if (capabilities == null) {\n+            if (other.capabilities != null) {\n+                return false;\n+            }\n+        } else if (!capabilities.equals(other.capabilities)) {\n+            return false;\n+        }\n+        if (frequency != other.frequency) {\n+            return false;\n+        }\n+        if (!Arrays.equals(hardwareAddress, other.hardwareAddress)) {\n+            return false;\n+        }\n+        if (mode != other.mode) {\n+            return false;\n+        }\n+        if (rsnSecurity == null) {\n+            if (other.rsnSecurity != null) {\n+                return false;\n+            }\n+        } else if (!rsnSecurity.equals(other.rsnSecurity)) {\n+            return false;\n+        }\n+        if (ssid == null) {\n+            if (other.ssid != null) {\n+                return false;\n+            }\n+        } else if (!ssid.equals(other.ssid)) {\n+            return false;\n+        }\n+        if (strength != other.strength) {\n+            return false;\n+        }\n+        if (wpaSecurity == null) {\n+            if (other.wpaSecurity != null) {\n+                return false;\n+            }\n+        } else if (!wpaSecurity.equals(other.wpaSecurity)) {\n+            return false;\n+        }\n+        return true;\n+    }\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "149",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/29/WifiAccessPointImpl.java\nindex f85597b3012..9489cf3c7c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/29/WifiAccessPointImpl.java\n@@ -142,10 +142,10 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n         }\n         return sb.toString();\n     }\n-    \n-    @Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n+\n+@Override\n+public int hashCode() {\n+    final int prime = 31;\n \t\tint result = 1;\n \t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n \t\tresult = prime * result + ((capabilities == null) ? 0 : capabilities.hashCode());\n@@ -157,67 +157,67 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n \t\tresult = prime * result + strength;\n \t\tresult = prime * result + ((wpaSecurity == null) ? 0 : wpaSecurity.hashCode());\n \t\treturn result;\n-\t}\n+    }\n \n \t@Override\n \tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n+    if (this == obj) {\n+    return true;\n+    }\n \t\tif (obj == null) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (!(obj instanceof WifiAccessPointImpl)) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tWifiAccessPointImpl other = (WifiAccessPointImpl) obj;\n \t\tif (bitrate == null) {\n-\t\t\tif (other.bitrate != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!bitrate.equals(other.bitrate)) {\n-\t\t\treturn false;\n-\t\t}\n+    if (other.bitrate != null) {\n+    return false;\n+    }\n+    } else if (!bitrate.equals(other.bitrate)) {\n+    return false;\n+    }\n \t\tif (capabilities == null) {\n-\t\t\tif (other.capabilities != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!capabilities.equals(other.capabilities)) {\n-\t\t\treturn false;\n-\t\t}\n+    if (other.capabilities != null) {\n+    return false;\n+    }\n+    } else if (!capabilities.equals(other.capabilities)) {\n+    return false;\n+    }\n \t\tif (frequency != other.frequency) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (!Arrays.equals(hardwareAddress, other.hardwareAddress)) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (mode != other.mode) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (rsnSecurity == null) {\n-\t\t\tif (other.rsnSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!rsnSecurity.equals(other.rsnSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n+    if (other.rsnSecurity != null) {\n+    return false;\n+    }\n+    } else if (!rsnSecurity.equals(other.rsnSecurity)) {\n+    return false;\n+    }\n \t\tif (ssid == null) {\n-\t\t\tif (other.ssid != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!ssid.equals(other.ssid)) {\n-\t\t\treturn false;\n-\t\t}\n+    if (other.ssid != null) {\n+    return false;\n+    }\n+    } else if (!ssid.equals(other.ssid)) {\n+    return false;\n+    }\n \t\tif (strength != other.strength) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (wpaSecurity == null) {\n-\t\t\tif (other.wpaSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!wpaSecurity.equals(other.wpaSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n+    if (other.wpaSecurity != null) {\n+    return false;\n+    }\n+    } else if (!wpaSecurity.equals(other.wpaSecurity)) {\n+    return false;\n+    }\n \t\treturn true;\n-\t}\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/29/WifiAccessPointImpl.java\nindex f85597b3012..6c800cbf5a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/29/WifiAccessPointImpl.java\n@@ -14,7 +14,6 @@ package org.eclipse.kura.core.net;\n import java.util.Arrays;\n import java.util.EnumSet;\n import java.util.List;\n-\n import org.eclipse.kura.core.net.util.NetworkUtil;\n import org.eclipse.kura.net.wifi.WifiAccessPoint;\n import org.eclipse.kura.net.wifi.WifiMode;\n@@ -117,10 +116,12 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n     public String toString() {\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"ssid=\").append(this.ssid);\n+\n         if (this.hardwareAddress != null && this.hardwareAddress.length == 6) {\n             sb.append(\" :: hardwareAddress=\").append(NetworkUtil.macToString(this.hardwareAddress));\n         }\n         sb.append(\" :: frequency=\").append(this.frequency).append(\" :: mode=\").append(this.mode);\n+\n         if (this.bitrate != null && this.bitrate.size() > 0) {\n             sb.append(\" :: bitrate=\");\n             for (Long rate : this.bitrate) {\n@@ -128,6 +129,7 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n             }\n         }\n         sb.append(\" :: strength=\").append(this.strength);\n+\n         if (this.wpaSecurity != null && this.wpaSecurity.size() > 0) {\n             sb.append(\" :: wpaSecurity=\");\n             for (WifiSecurity security : this.wpaSecurity) {\n@@ -142,82 +144,83 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n         }\n         return sb.toString();\n     }\n-    \n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n+        result = prime * result + ((capabilities == null) ? 0 : capabilities.hashCode());\n+        result = prime * result + (int) (frequency ^ (frequency >>> 32));\n+        result = prime * result + Arrays.hashCode(hardwareAddress);\n+        result = prime * result + ((mode == null) ? 0 : mode.hashCode());\n+        result = prime * result + ((rsnSecurity == null) ? 0 : rsnSecurity.hashCode());\n+        result = prime * result + ((ssid == null) ? 0 : ssid.hashCode());\n+        result = prime * result + strength;\n+        result = prime * result + ((wpaSecurity == null) ? 0 : wpaSecurity.hashCode());\n+        return result;\n+    }\n+\n     @Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = 1;\n-\t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n-\t\tresult = prime * result + ((capabilities == null) ? 0 : capabilities.hashCode());\n-\t\tresult = prime * result + (int) (frequency ^ (frequency >>> 32));\n-\t\tresult = prime * result + Arrays.hashCode(hardwareAddress);\n-\t\tresult = prime * result + ((mode == null) ? 0 : mode.hashCode());\n-\t\tresult = prime * result + ((rsnSecurity == null) ? 0 : rsnSecurity.hashCode());\n-\t\tresult = prime * result + ((ssid == null) ? 0 : ssid.hashCode());\n-\t\tresult = prime * result + strength;\n-\t\tresult = prime * result + ((wpaSecurity == null) ? 0 : wpaSecurity.hashCode());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (obj == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!(obj instanceof WifiAccessPointImpl)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tWifiAccessPointImpl other = (WifiAccessPointImpl) obj;\n-\t\tif (bitrate == null) {\n-\t\t\tif (other.bitrate != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!bitrate.equals(other.bitrate)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (capabilities == null) {\n-\t\t\tif (other.capabilities != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!capabilities.equals(other.capabilities)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (frequency != other.frequency) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!Arrays.equals(hardwareAddress, other.hardwareAddress)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (mode != other.mode) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (rsnSecurity == null) {\n-\t\t\tif (other.rsnSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!rsnSecurity.equals(other.rsnSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (ssid == null) {\n-\t\t\tif (other.ssid != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!ssid.equals(other.ssid)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (strength != other.strength) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (wpaSecurity == null) {\n-\t\t\tif (other.wpaSecurity != null) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!wpaSecurity.equals(other.wpaSecurity)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n-}\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (!(obj instanceof WifiAccessPointImpl)) {\n+            return false;\n+        }\n+\n+        WifiAccessPointImpl other = (WifiAccessPointImpl) obj;\n+        if (bitrate == null) {\n+            if (other.bitrate != null) {\n+                return false;\n+            }\n+        } else if (!bitrate.equals(other.bitrate)) {\n+            return false;\n+        }\n+        if (capabilities == null) {\n+            if (other.capabilities != null) {\n+                return false;\n+            }\n+        } else if (!capabilities.equals(other.capabilities)) {\n+            return false;\n+        }\n+        if (frequency != other.frequency) {\n+            return false;\n+        }\n+        if (!Arrays.equals(hardwareAddress, other.hardwareAddress)) {\n+            return false;\n+        }\n+        if (mode != other.mode) {\n+            return false;\n+        }\n+        if (rsnSecurity == null) {\n+            if (other.rsnSecurity != null) {\n+                return false;\n+            }\n+        } else if (!rsnSecurity.equals(other.rsnSecurity)) {\n+            return false;\n+        }\n+        if (ssid == null) {\n+            if (other.ssid != null) {\n+                return false;\n+            }\n+        } else if (!ssid.equals(other.ssid)) {\n+            return false;\n+        }\n+        if (strength != other.strength) {\n+            return false;\n+        }\n+        if (wpaSecurity == null) {\n+            if (other.wpaSecurity != null) {\n+                return false;\n+            }\n+        } else if (!wpaSecurity.equals(other.wpaSecurity)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 98
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "148",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/29/WifiAccessPointImpl.java\nindex f85597b3012..9d8c6a8d4f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/29/WifiAccessPointImpl.java\n@@ -144,7 +144,7 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n     }\n     \n     @Override\n-\tpublic int hashCode() {\n+    public int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = 1;\n \t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "148",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/29/WifiAccessPointImpl.java\nindex f85597b3012..9d8c6a8d4f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/29/WifiAccessPointImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/29/WifiAccessPointImpl.java\n@@ -144,7 +144,7 @@ public class WifiAccessPointImpl implements WifiAccessPoint {\n     }\n     \n     @Override\n-\tpublic int hashCode() {\n+    public int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = 1;\n \t\tresult = prime * result + ((bitrate == null) ? 0 : bitrate.hashCode());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
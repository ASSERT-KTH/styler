{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "652",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpi.adapter;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.mpi.adapter.component.proxy.AdapterComponentMpiProxy;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/652/AdapterMpiOrchImpl.java\nindex bf749cc640a..7cf2a7ad69b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/652/AdapterMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -35,7 +36,6 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * This is the business logic for the AdapterMpi. This is a thin layer, it simply takes the request and calls the\n  * AdapterComponentMpi.\n  *\n@@ -43,19 +43,19 @@ import org.slf4j.LoggerFactory;\n  */\n public class AdapterMpiOrchImpl {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterMpiOrchImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterMpiOrchImpl.class);\n \n-    /**\n-     * Send the patient query request to the actual MPI that is implemented.\n-     *\n-     * @param findCandidatesRequest The request containing the query information.\n-     * @param assertion The assertion for this message.\n-     * @return The results of the query.\n-     */\n-    public PRPAIN201306UV02 query(PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n-        LOG.trace(\"Entering AdapterMpiOrchImpl.query method...\");\n-        AdapterComponentMpiProxyObjectFactory oFactory = new AdapterComponentMpiProxyObjectFactory();\n-        AdapterComponentMpiProxy oMpiProxy = oFactory.getAdapterComponentMpiProxy();\n-        return oMpiProxy.findCandidates(findCandidatesRequest, assertion);\n-    }\n+  /**\n+   * Send the patient query request to the actual MPI that is implemented.\n+   *\n+   * @param findCandidatesRequest The request containing the query information.\n+   * @param assertion             The assertion for this message.\n+   * @return The results of the query.\n+   */\n+  public PRPAIN201306UV02 query(PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n+    LOG.trace(\"Entering AdapterMpiOrchImpl.query method...\");\n+    AdapterComponentMpiProxyObjectFactory oFactory = new AdapterComponentMpiProxyObjectFactory();\n+    AdapterComponentMpiProxy oMpiProxy = oFactory.getAdapterComponentMpiProxy();\n+    return oMpiProxy.findCandidates(findCandidatesRequest, assertion);\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/652/AdapterMpiOrchImpl.java\nindex bf749cc640a..e34bdcae305 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/652/AdapterMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -56,6 +57,7 @@ public class AdapterMpiOrchImpl {\n         LOG.trace(\"Entering AdapterMpiOrchImpl.query method...\");\n         AdapterComponentMpiProxyObjectFactory oFactory = new AdapterComponentMpiProxyObjectFactory();\n         AdapterComponentMpiProxy oMpiProxy = oFactory.getAdapterComponentMpiProxy();\n-        return oMpiProxy.findCandidates(findCandidatesRequest, assertion);\n+\n+return oMpiProxy.findCandidates(findCandidatesRequest, assertion);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/652/AdapterMpiOrchImpl.java\nindex bf749cc640a..9c478854b79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/652/AdapterMpiOrchImpl.java\n@@ -41,6 +41,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Les Westberg\n  */\n+\n+\n public class AdapterMpiOrchImpl {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterMpiOrchImpl.class);\n@@ -52,10 +54,13 @@ public class AdapterMpiOrchImpl {\n      * @param assertion The assertion for this message.\n      * @return The results of the query.\n      */\n+\n+\n     public PRPAIN201306UV02 query(PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n         LOG.trace(\"Entering AdapterMpiOrchImpl.query method...\");\n         AdapterComponentMpiProxyObjectFactory oFactory = new AdapterComponentMpiProxyObjectFactory();\n         AdapterComponentMpiProxy oMpiProxy = oFactory.getAdapterComponentMpiProxy();\n         return oMpiProxy.findCandidates(findCandidatesRequest, assertion);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "8",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/652/AdapterMpiOrchImpl.java\nindex bf749cc640a..31ec57d8992 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/652/AdapterMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/652/AdapterMpiOrchImpl.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpi.adapter;\n+\n+package gov.hhs.fha.nhinc.mpi.\n+\n+adapter ;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.mpi.adapter.component.proxy.AdapterComponentMpiProxy;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "233",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 120).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n          + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n\n        double [] delta = new double[10000000];",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/233/PSFTestTask.java\nindex 699c1f46852..3ce0e5fae21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/233/PSFTestTask.java\n@@ -53,7 +53,7 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs )+ \", sum of row 0=\" + sum((DenseDoubleVector)row)\n           + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n \n         double [] delta = new double[10000000];\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/233/PSFTestTask.java\nindex 699c1f46852..24df1d43122 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/233/PSFTestTask.java\n@@ -35,14 +35,18 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+  public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+  public void preProcess(TaskContext taskContext) {\n+  }\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+  @Override\n+  public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       Pull func1 = new Pull(client.getMatrixId(), 1);\n@@ -53,19 +57,20 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n-          + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n+            + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" +\n+            sum((DenseDoubleVector) row)\n+            + \" sum of row 1=\" + sum((DenseDoubleVector) row1));\n \n-        double [] delta = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+        double[] delta = new double[10000000];\n+        for (int i = 0; i < 10000000; i++) {\n           delta[i] = 1.0;\n         }\n         DenseDoubleVector deltaV = new DenseDoubleVector(10000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n \n-        double [] delta1 = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+        double[] delta1 = new double[10000000];\n+        for (int i = 0; i < 10000000; i++) {\n           delta1[i] = 2.0;\n         }\n         DenseDoubleVector deltaV1 = new DenseDoubleVector(10000000, delta1);\n@@ -83,9 +88,9 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   }\n \n   private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n \n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/233/PSFTestTask.java\nindex 699c1f46852..893abc2aab7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/233/PSFTestTask.java\n@@ -35,14 +35,17 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+  @Override\n+public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       Pull func1 = new Pull(client.getMatrixId(), 1);\n@@ -52,12 +55,10 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n           + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n-\n-        double [] delta = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+double [] delta = new double[10000000];\n+        for (int i = 0; i < 10000000; i++) {\n           delta[i] = 1.0;\n         }\n         DenseDoubleVector deltaV = new DenseDoubleVector(10000000, delta);\n@@ -65,7 +66,7 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         deltaV.setRowId(0);\n \n         double [] delta1 = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+        for (int i = 0; i < 10000000; i++) {\n           delta1[i] = 2.0;\n         }\n         DenseDoubleVector deltaV1 = new DenseDoubleVector(10000000, delta1);\n@@ -85,10 +86,10 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   private double sum(DenseDoubleVector row) {\n     double [] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n \n     return ret;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/233/PSFTestTask.java\nindex 699c1f46852..1eb09cf3dd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/233/PSFTestTask.java\n@@ -29,49 +29,50 @@ import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n public class PSFTestTask extends BaseTask<Long, Long, Long> {\n+\n   private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n \n   public PSFTestTask(TaskContext taskContext) {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+  public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+  public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+  @Override\n+  public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       Pull func1 = new Pull(client.getMatrixId(), 1);\n-\n       while (taskContext.getEpoch() < 100) {\n         taskContext.globalSync(client.getMatrixId());\n+\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n-          + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n-\n-        double [] delta = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector) row) + \" sum of row 1=\" + sum((DenseDoubleVector) row1));\n+        double[] delta = new double[10000000];\n+        for (int i = 0; i < 10000000; i++) {\n           delta[i] = 1.0;\n         }\n+\n         DenseDoubleVector deltaV = new DenseDoubleVector(10000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n-\n-        double [] delta1 = new double[10000000];\n-        for(int i = 0; i < 10000000; i++) {\n+        double[] delta1 = new double[10000000];\n+        for (int i = 0; i < 10000000; i++) {\n           delta1[i] = 2.0;\n         }\n+\n         DenseDoubleVector deltaV1 = new DenseDoubleVector(10000000, delta1);\n         deltaV1.setMatrixId(client.getMatrixId());\n         deltaV1.setRowId(1);\n-\n         client.increment(deltaV);\n         client.increment(deltaV1);\n         client.clock().get();\n@@ -83,12 +84,12 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   }\n \n   private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n-\n     return ret;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/233/PSFTestTask.java\nindex 699c1f46852..3ce0e5fae21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/233/PSFTestTask.java\n@@ -53,7 +53,7 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs )+ \", sum of row 0=\" + sum((DenseDoubleVector)row)\n           + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n \n         double [] delta = new double[10000000];\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/233/PSFTestTask.java\nindex 699c1f46852..f7cddfee27b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/233/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/233/PSFTestTask.java\n@@ -52,9 +52,8 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         TVector row1 = ((GetRowResult) client.get(func1)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n-          + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()+\" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum of row 0=\" + sum((DenseDoubleVector)row)\n+        + \" sum of row 1=\" + sum((DenseDoubleVector)row1));\n \n         double [] delta = new double[10000000];\n         for(int i = 0; i < 10000000; i++) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2100",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2100/RelationshipKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2100/RelationshipKey.java\nindex e5dc95cd85a..78272df76ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2100/RelationshipKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2100/RelationshipKey.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.counts.keys;\n \n import org.neo4j.kernel.impl.api.CountsVisitor;\n@@ -26,92 +27,92 @@ import static org.neo4j.kernel.impl.util.IdPrettyPrinter.relationshipType;\n \n public final class RelationshipKey implements CountsKey\n {\n-    private final int startLabelId;\n-    private final int typeId;\n-    private final int endLabelId;\n+  private final int startLabelId;\n+  private final int typeId;\n+  private final int endLabelId;\n \n-    RelationshipKey( int startLabelId, int typeId, int endLabelId )\n-    {\n-        this.startLabelId = startLabelId;\n-        this.typeId = typeId;\n-        this.endLabelId = endLabelId;\n-    }\n+  RelationshipKey(int startLabelId, int typeId, int endLabelId)\n+  {\n+    this.startLabelId = startLabelId;\n+    this.typeId = typeId;\n+    this.endLabelId = endLabelId;\n+  }\n \n-    public int getStartLabelId()\n-    {\n-        return startLabelId;\n-    }\n+  public int getStartLabelId()\n+  {\n+    return startLabelId;\n+  }\n \n-    public int getTypeId()\n-    {\n-        return typeId;\n-    }\n+  public int getTypeId()\n+  {\n+    return typeId;\n+  }\n \n-    public int getEndLabelId()\n-    {\n-        return endLabelId;\n-    }\n+  public int getEndLabelId()\n+  {\n+    return endLabelId;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"RelationshipKey[(%s)-%s->(%s)]\",\n-                              label( startLabelId ), relationshipType( typeId ), label( endLabelId ) );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"RelationshipKey[(%s)-%s->(%s)]\",\n+        label(startLabelId), relationshipType(typeId), label(endLabelId));\n+  }\n \n-    @Override\n-    public void accept( CountsVisitor visitor, long ignored, long count )\n-    {\n-        visitor.visitRelationshipCount( startLabelId, typeId, endLabelId, count );\n-    }\n+  @Override\n+  public void accept(CountsVisitor visitor, long ignored, long count)\n+  {\n+    visitor.visitRelationshipCount(startLabelId, typeId, endLabelId, count);\n+  }\n \n-    @Override\n-    public CountsKeyType recordType()\n-    {\n-        return CountsKeyType.ENTITY_RELATIONSHIP;\n-    }\n+  @Override\n+  public CountsKeyType recordType()\n+  {\n+    return CountsKeyType.ENTITY_RELATIONSHIP;\n+  }\n \n-    @Override\n-    public int hashCode()\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = startLabelId;\n+    result = 31 * result + typeId;\n+    result = 31 * result + endLabelId;\n+    result = 31 * result + recordType().hashCode();\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        int result = startLabelId;\n-        result = 31 * result + typeId;\n-        result = 31 * result + endLabelId;\n-        result = 31 * result + recordType().hashCode();\n-        return result;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o instanceof RelationshipKey)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o instanceof RelationshipKey )\n-        {\n-            RelationshipKey that = (RelationshipKey) o;\n-            return endLabelId == that.endLabelId && startLabelId == that.startLabelId && typeId == that.typeId;\n-        }\n-        return false;\n+      RelationshipKey that = (RelationshipKey) o;\n+      return endLabelId == that.endLabelId && startLabelId == that.startLabelId && typeId == that.typeId;\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public int compareTo( CountsKey other )\n+  @Override\n+  public int compareTo(CountsKey other)\n+  {\n+    if (other instanceof RelationshipKey)\n     {\n-        if ( other instanceof RelationshipKey )\n-        {\n-            RelationshipKey that = (RelationshipKey) other;\n-            if ( this.typeId != that.typeId )\n-            {\n-                return this.typeId - that.typeId;\n-            }\n-            if ( this.startLabelId != that.startLabelId )\n-            {\n-                return this.startLabelId - that.startLabelId;\n-            }\n-            return this.endLabelId - that.endLabelId;\n-        }\n-        return recordType().ordinal() - other.recordType().ordinal();\n+      RelationshipKey that = (RelationshipKey) other;\n+      if (this.typeId != that.typeId)\n+      {\n+        return this.typeId - that.typeId;\n+      }\n+      if (this.startLabelId != that.startLabelId)\n+      {\n+        return this.startLabelId - that.startLabelId;\n+      }\n+      return this.endLabelId - that.endLabelId;\n     }\n+    return recordType().ordinal() - other.recordType().ordinal();\n+  }\n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2100/RelationshipKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2100/RelationshipKey.java\nindex e5dc95cd85a..e0070a400aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2100/RelationshipKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2100/RelationshipKey.java\n@@ -55,8 +55,7 @@ public final class RelationshipKey implements CountsKey\n     @Override\n     public String toString()\n     {\n-        return String.format( \"RelationshipKey[(%s)-%s->(%s)]\",\n-                              label( startLabelId ), relationshipType( typeId ), label( endLabelId ) );\n+        return String.format( \"RelationshipKey[(%s)-%s->(%s)]\", label( startLabelId ), relationshipType( typeId ), label( endLabelId ) );\n     }\n \n     @Override\n@@ -88,7 +87,8 @@ public final class RelationshipKey implements CountsKey\n         {\n             return true;\n         }\n-        if ( o instanceof RelationshipKey )\n+\n+if ( o instanceof RelationshipKey )\n         {\n             RelationshipKey that = (RelationshipKey) o;\n             return endLabelId == that.endLabelId && startLabelId == that.startLabelId && typeId == that.typeId;\n@@ -106,12 +106,14 @@ public final class RelationshipKey implements CountsKey\n             {\n                 return this.typeId - that.typeId;\n             }\n-            if ( this.startLabelId != that.startLabelId )\n+\n+if ( this.startLabelId != that.startLabelId )\n             {\n                 return this.startLabelId - that.startLabelId;\n             }\n             return this.endLabelId - that.endLabelId;\n         }\n-        return recordType().ordinal() - other.recordType().ordinal();\n+\n+return recordType().ordinal() - other.recordType().ordinal();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "889",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/889/DefaultIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/889/DefaultIdGeneratorFactory.java\nindex f1647adfd56..e7c188468c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/889/DefaultIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/889/DefaultIdGeneratorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.io.File;\n@@ -30,54 +31,54 @@ import org.neo4j.kernel.impl.store.id.configuration.IdTypeConfigurationProvider;\n \n public class DefaultIdGeneratorFactory implements IdGeneratorFactory\n {\n-    private final EnumMap<IdType, IdGenerator> generators = new EnumMap<>( IdType.class );\n-    private final FileSystemAbstraction fs;\n-    private final IdTypeConfigurationProvider idTypeConfigurationProvider;\n+  private final EnumMap<IdType, IdGenerator> generators = new EnumMap<>(IdType.class);\n+  private final FileSystemAbstraction fs;\n+  private final IdTypeConfigurationProvider idTypeConfigurationProvider;\n \n-    public DefaultIdGeneratorFactory( FileSystemAbstraction fs )\n-    {\n-        this( fs, new CommunityIdTypeConfigurationProvider() );\n-    }\n+  public DefaultIdGeneratorFactory(FileSystemAbstraction fs)\n+  {\n+    this(fs, new CommunityIdTypeConfigurationProvider());\n+  }\n \n-    public DefaultIdGeneratorFactory( FileSystemAbstraction fs,\n-            IdTypeConfigurationProvider idTypeConfigurationProvider )\n-    {\n-        this.fs = fs;\n-        this.idTypeConfigurationProvider = idTypeConfigurationProvider;\n-    }\n+  public DefaultIdGeneratorFactory(FileSystemAbstraction fs,\n+                                   IdTypeConfigurationProvider idTypeConfigurationProvider)\n+  {\n+    this.fs = fs;\n+    this.idTypeConfigurationProvider = idTypeConfigurationProvider;\n+  }\n \n-    @Override\n-    public IdGenerator open( File filename, IdType idType, LongSupplier highId, long maxId )\n-    {\n-        IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration( idType );\n-        return open( filename, idTypeConfiguration.getGrabSize(), idType, highId, maxId );\n-    }\n+  @Override\n+  public IdGenerator open(File filename, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration(idType);\n+    return open(filename, idTypeConfiguration.getGrabSize(), idType, highId, maxId);\n+  }\n \n-    @Override\n-    public IdGenerator open( File fileName, int grabSize, IdType idType, LongSupplier highId, long maxId )\n-    {\n-        IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration( idType );\n-        IdGenerator generator = instantiate( fs, fileName, grabSize, maxId, idTypeConfiguration.allowAggressiveReuse(),\n-                idType, highId );\n-        generators.put( idType, generator );\n-        return generator;\n-    }\n+  @Override\n+  public IdGenerator open(File fileName, int grabSize, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration(idType);\n+    IdGenerator generator = instantiate(fs, fileName, grabSize, maxId, idTypeConfiguration.allowAggressiveReuse(),\n+        idType, highId);\n+    generators.put(idType, generator);\n+    return generator;\n+  }\n \n-    protected IdGenerator instantiate( FileSystemAbstraction fs, File fileName, int grabSize, long maxValue,\n-            boolean aggressiveReuse, IdType idType, LongSupplier highId )\n-    {\n-        return new IdGeneratorImpl( fs, fileName, grabSize, maxValue, aggressiveReuse, idType, highId );\n-    }\n+  protected IdGenerator instantiate(FileSystemAbstraction fs, File fileName, int grabSize, long maxValue,\n+                                    boolean aggressiveReuse, IdType idType, LongSupplier highId)\n+  {\n+    return new IdGeneratorImpl(fs, fileName, grabSize, maxValue, aggressiveReuse, idType, highId);\n+  }\n \n-    @Override\n-    public IdGenerator get( IdType idType )\n-    {\n-        return generators.get( idType );\n-    }\n+  @Override\n+  public IdGenerator get(IdType idType)\n+  {\n+    return generators.get(idType);\n+  }\n \n-    @Override\n-    public void create( File fileName, long highId, boolean throwIfFileExists )\n-    {\n-        IdGeneratorImpl.createGenerator( fs, fileName, highId, throwIfFileExists );\n-    }\n+  @Override\n+  public void create(File fileName, long highId, boolean throwIfFileExists)\n+  {\n+    IdGeneratorImpl.createGenerator(fs, fileName, highId, throwIfFileExists);\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/889/DefaultIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/889/DefaultIdGeneratorFactory.java\nindex f1647adfd56..338d8e3e105 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/889/DefaultIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/889/DefaultIdGeneratorFactory.java\n@@ -30,7 +30,7 @@ import org.neo4j.kernel.impl.store.id.configuration.IdTypeConfigurationProvider;\n \n public class DefaultIdGeneratorFactory implements IdGeneratorFactory\n {\n-    private final EnumMap<IdType, IdGenerator> generators = new EnumMap<>( IdType.class );\n+    private final EnumMap<IdType,IdGenerator> generators = new EnumMap<>( IdType.class );\n     private final FileSystemAbstraction fs;\n     private final IdTypeConfigurationProvider idTypeConfigurationProvider;\n \n@@ -59,7 +59,7 @@ public class DefaultIdGeneratorFactory implements IdGeneratorFactory\n         IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration( idType );\n         IdGenerator generator = instantiate( fs, fileName, grabSize, maxId, idTypeConfiguration.allowAggressiveReuse(),\n                 idType, highId );\n-        generators.put( idType, generator );\n+generators.put( idType, generator );\n         return generator;\n     }\n \n@@ -80,4 +80,4 @@ public class DefaultIdGeneratorFactory implements IdGeneratorFactory\n     {\n         IdGeneratorImpl.createGenerator( fs, fileName, highId, throwIfFileExists );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
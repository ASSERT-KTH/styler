{
    "project_name": "neo4j-neo4j",
    "error_id": "2260",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2260/IndexDirectoryStructure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2260/IndexDirectoryStructure.java\nindex dc44ea5f021..66c5e43bbc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2260/IndexDirectoryStructure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2260/IndexDirectoryStructure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.index;\n \n import java.nio.file.Path;\n@@ -28,7 +29,7 @@ import org.neo4j.internal.schema.IndexProviderDescriptor;\n  * {@link #rootDirectory() root directory} which contains all index directories in some shape and form.\n  * For getting a directory (which must be a sub-directory to the root directory) for a particular index there's the\n  * {@link #directoryForIndex(long)} method.\n- *\n+ * <p>\n  * These instances are created from a {@link Factory} which typically gets passed into an IndexProvider constructor,\n  * which then creates a {@link IndexDirectoryStructure} given its {@link IndexProviderDescriptor}.\n  */\n@@ -39,14 +40,14 @@ public abstract class IndexDirectoryStructure\n      */\n     public interface Factory\n     {\n-        IndexDirectoryStructure forProvider( IndexProviderDescriptor descriptor );\n+        IndexDirectoryStructure forProvider(IndexProviderDescriptor descriptor);\n     }\n \n     private static class SubDirectoryByIndexId extends IndexDirectoryStructure\n     {\n         private final Path providerRootFolder;\n \n-        private SubDirectoryByIndexId( Path providerRootFolder )\n+        private SubDirectoryByIndexId(Path providerRootFolder)\n         {\n             this.providerRootFolder = providerRootFolder;\n         }\n@@ -58,9 +59,9 @@ public abstract class IndexDirectoryStructure\n         }\n \n         @Override\n-        public Path directoryForIndex( long indexId )\n+        public Path directoryForIndex(long indexId)\n         {\n-            return providerRootFolder.resolve( String.valueOf( indexId ) );\n+            return providerRootFolder.resolve(String.valueOf(indexId));\n         }\n     }\n \n@@ -74,9 +75,9 @@ public abstract class IndexDirectoryStructure\n      * @param databaseStoreDir database store directory, i.e. {@code db} in the example above, where e.g. {@code nodestore} lives.\n      * @return the base directory of schema indexing.\n      */\n-    public static Path baseSchemaIndexFolder( Path databaseStoreDir )\n+    public static Path baseSchemaIndexFolder(Path databaseStoreDir)\n     {\n-        return databaseStoreDir.resolve( \"schema\" ).resolve( \"index\" );\n+        return databaseStoreDir.resolve(\"schema\").resolve(\"index\");\n     }\n \n     /**\n@@ -87,16 +88,16 @@ public abstract class IndexDirectoryStructure\n      * &lt;db&gt;/schema/index/&lt;providerKey&gt;-&lt;providerVersion&gt;/&lt;indexId&gt;/\n      * </pre>\n      */\n-    public static Factory directoriesByProvider( Path databaseStoreDir )\n+    public static Factory directoriesByProvider(Path databaseStoreDir)\n     {\n-        return descriptor -> new SubDirectoryByIndexId( baseSchemaIndexFolder( databaseStoreDir ).resolve( fileNameFriendly( descriptor ) ) );\n+        return descriptor -> new SubDirectoryByIndexId(baseSchemaIndexFolder(databaseStoreDir).resolve(fileNameFriendly(descriptor)));\n     }\n \n     /**\n      * @param directoryStructure existing {@link IndexDirectoryStructure}.\n      * @return a {@link Factory} returning an already existing {@link IndexDirectoryStructure}.\n      */\n-    public static Factory given( IndexDirectoryStructure directoryStructure )\n+    public static Factory given(IndexDirectoryStructure directoryStructure)\n     {\n         return descriptor -> directoryStructure;\n     }\n@@ -111,7 +112,7 @@ public abstract class IndexDirectoryStructure\n      * &lt;db&gt;/schema/index/.../&lt;indexId&gt;/&lt;childProviderKey&gt;-&lt;childProviderVersion&gt;/\n      * </pre>\n      */\n-    public static Factory directoriesBySubProvider( IndexDirectoryStructure parentStructure )\n+    public static Factory directoriesBySubProvider(IndexDirectoryStructure parentStructure)\n     {\n         return descriptor -> new IndexDirectoryStructure()\n         {\n@@ -122,21 +123,21 @@ public abstract class IndexDirectoryStructure\n             }\n \n             @Override\n-            public Path directoryForIndex( long indexId )\n+            public Path directoryForIndex(long indexId)\n             {\n-                return parentStructure.directoryForIndex( indexId ).resolve( fileNameFriendly( descriptor ) );\n+                return parentStructure.directoryForIndex(indexId).resolve(fileNameFriendly(descriptor));\n             }\n         };\n     }\n \n-    public static String fileNameFriendly( String name )\n+    public static String fileNameFriendly(String name)\n     {\n-        return name.replaceAll( \"\\\\+\", \"_\" );\n+        return name.replaceAll(\"\\\\+\", \"_\");\n     }\n \n-    static String fileNameFriendly( IndexProviderDescriptor descriptor )\n+    static String fileNameFriendly(IndexProviderDescriptor descriptor)\n     {\n-        return fileNameFriendly( descriptor.getKey() + \"-\" + descriptor.getVersion() );\n+        return fileNameFriendly(descriptor.getKey() + \"-\" + descriptor.getVersion());\n     }\n \n     private static final IndexDirectoryStructure NO_DIRECTORY_STRUCTURE = new IndexDirectoryStructure()\n@@ -148,7 +149,7 @@ public abstract class IndexDirectoryStructure\n         }\n \n         @Override\n-        public Path directoryForIndex( long indexId )\n+        public Path directoryForIndex(long indexId)\n         {\n             return null; // meaning there's no persistent storage\n         }\n@@ -178,12 +179,12 @@ public abstract class IndexDirectoryStructure\n      * <pre>\n      * &lt;db&gt;/schema/index/&lt;provider&gt;/&lt;indexId&gt;/\n      * </pre>\n-     *\n+     * <p>\n      * I.e. the root of the schema indexes for this specific provider.\n      *\n      * @param indexId index id to return directory for.\n      * @return {@link Path} denoting directory for the specific {@code indexId} for this provider.\n      * May return {@code null} if there's no root directory, i.e. no persistent storage at all.\n      */\n-    public abstract Path directoryForIndex( long indexId );\n+    public abstract Path directoryForIndex(long indexId);\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
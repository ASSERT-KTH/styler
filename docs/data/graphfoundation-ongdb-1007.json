{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1007",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1007/ConsistencyCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1007/ConsistencyCheck.java\nindex 07cc5ef5672..d13fc78734e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1007/ConsistencyCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1007/ConsistencyCheck.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.nio.file.Path;\n@@ -32,71 +33,70 @@ import org.neo4j.logging.LogProvider;\n \n public interface ConsistencyCheck\n {\n-    ConsistencyCheck NONE =\n-            new ConsistencyCheck()\n-            {\n-                @Override\n-                public String name()\n-                {\n-                    return \"none\";\n-                }\n+  ConsistencyCheck NONE =\n+      new ConsistencyCheck()\n+      {\n+        @Override\n+        public String name()\n+        {\n+          return \"none\";\n+        }\n \n-                @Override\n-                public boolean runFull( Path storeDir, Config tuningConfiguration,\n-                        ProgressMonitorFactory progressFactory, LogProvider logProvider,\n-                        FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n-                        ConsistencyFlags consistencyFlags )\n-                {\n-                    return true;\n-                }\n-            };\n+        @Override\n+        public boolean runFull(Path storeDir, Config tuningConfiguration,\n+                               ProgressMonitorFactory progressFactory, LogProvider logProvider,\n+                               FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n+                               ConsistencyFlags consistencyFlags)\n+        {\n+          return true;\n+        }\n+      };\n \n-    ConsistencyCheck FULL =\n-            new ConsistencyCheck()\n-            {\n-                @Override\n-                public String name()\n-                {\n-                    return \"full\";\n-                }\n+  ConsistencyCheck FULL =\n+      new ConsistencyCheck()\n+      {\n+        @Override\n+        public String name()\n+        {\n+          return \"full\";\n+        }\n \n-                @Override\n-                public boolean runFull( Path storeDir, Config tuningConfiguration,\n-                        ProgressMonitorFactory progressFactory, LogProvider logProvider,\n-                        FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n-                        ConsistencyFlags consistencyFlags ) throws ConsistencyCheckFailedException\n-                {\n-                    try\n-                    {\n-                        return new ConsistencyCheckService().runFullConsistencyCheck(\n-                                storeDir.toFile(), tuningConfiguration, progressFactory, logProvider, fileSystem,\n-                                pageCache, verbose, consistencyFlags ).isSuccessful();\n-                    }\n-                    catch ( ConsistencyCheckIncompleteException e )\n-                    {\n-                        throw new ConsistencyCheckFailedException( e );\n-                    }\n-                }\n-            };\n+        @Override\n+        public boolean runFull(Path storeDir, Config tuningConfiguration,\n+                               ProgressMonitorFactory progressFactory, LogProvider logProvider,\n+                               FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n+                               ConsistencyFlags consistencyFlags) throws ConsistencyCheckFailedException\n+        {\n+          try\n+          {\n+            return new ConsistencyCheckService().runFullConsistencyCheck(\n+                storeDir.toFile(), tuningConfiguration, progressFactory, logProvider, fileSystem,\n+                pageCache, verbose, consistencyFlags).isSuccessful();\n+          } catch (ConsistencyCheckIncompleteException e)\n+          {\n+            throw new ConsistencyCheckFailedException(e);\n+          }\n+        }\n+      };\n \n-    String name();\n+  String name();\n \n-    boolean runFull( Path storeDir, Config tuningConfiguration, ProgressMonitorFactory progressFactory,\n-                     LogProvider logProvider, FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n-                     ConsistencyFlags consistencyFlags ) throws ConsistencyCheckFailedException;\n+  boolean runFull(Path storeDir, Config tuningConfiguration, ProgressMonitorFactory progressFactory,\n+                  LogProvider logProvider, FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n+                  ConsistencyFlags consistencyFlags) throws ConsistencyCheckFailedException;\n \n-    String toString();\n+  String toString();\n \n-    static ConsistencyCheck fromString( String name )\n+  static ConsistencyCheck fromString(String name)\n+  {\n+    for (ConsistencyCheck consistencyCheck : new ConsistencyCheck[] {NONE, FULL})\n     {\n-        for ( ConsistencyCheck consistencyCheck : new ConsistencyCheck[]{NONE, FULL} )\n-        {\n-            if ( consistencyCheck.name().equalsIgnoreCase( name ) )\n-            {\n-                return consistencyCheck;\n-            }\n-        }\n-        throw new IllegalArgumentException( \"Unknown consistency check name: \" + name +\n-                \". Supported values: NONE, FULL\" );\n+      if (consistencyCheck.name().equalsIgnoreCase(name))\n+      {\n+        return consistencyCheck;\n+      }\n     }\n+    throw new IllegalArgumentException(\"Unknown consistency check name: \" + name +\n+        \". Supported values: NONE, FULL\");\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1007/ConsistencyCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1007/ConsistencyCheck.java\nindex 07cc5ef5672..70b3eea3b65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1007/ConsistencyCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1007/ConsistencyCheck.java\n@@ -32,8 +32,7 @@ import org.neo4j.logging.LogProvider;\n \n public interface ConsistencyCheck\n {\n-    ConsistencyCheck NONE =\n-            new ConsistencyCheck()\n+    ConsistencyCheck NONE = new ConsistencyCheck()\n             {\n                 @Override\n                 public String name()\n@@ -50,9 +49,7 @@ public interface ConsistencyCheck\n                     return true;\n                 }\n             };\n-\n-    ConsistencyCheck FULL =\n-            new ConsistencyCheck()\n+ConsistencyCheck FULL = new ConsistencyCheck()\n             {\n                 @Override\n                 public String name()\n@@ -65,13 +62,11 @@ public interface ConsistencyCheck\n                         ProgressMonitorFactory progressFactory, LogProvider logProvider,\n                         FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n                         ConsistencyFlags consistencyFlags ) throws ConsistencyCheckFailedException\n-                {\n+{\n                     try\n                     {\n-                        return new ConsistencyCheckService().runFullConsistencyCheck(\n-                                storeDir.toFile(), tuningConfiguration, progressFactory, logProvider, fileSystem,\n-                                pageCache, verbose, consistencyFlags ).isSuccessful();\n-                    }\n+                        return new ConsistencyCheckService().runFullConsistencyCheck( storeDir.toFile(), tuningConfiguration, progressFactory, logProvider, fileSystem, pageCache, verbose, consistencyFlags ).isSuccessful();\n+    }\n                     catch ( ConsistencyCheckIncompleteException e )\n                     {\n                         throw new ConsistencyCheckFailedException( e );\n@@ -79,13 +74,11 @@ public interface ConsistencyCheck\n                 }\n             };\n \n-    String name();\n+String name();\n \n-    boolean runFull( Path storeDir, Config tuningConfiguration, ProgressMonitorFactory progressFactory,\n-                     LogProvider logProvider, FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n+    boolean runFull( Path storeDir, Config tuningConfiguration, ProgressMonitorFactory progressFactory, LogProvider logProvider, FileSystemAbstraction fileSystem, PageCache pageCache, boolean verbose,\n                      ConsistencyFlags consistencyFlags ) throws ConsistencyCheckFailedException;\n-\n-    String toString();\n+String toString();\n \n     static ConsistencyCheck fromString( String name )\n     {\n@@ -96,7 +89,6 @@ public interface ConsistencyCheck\n                 return consistencyCheck;\n             }\n         }\n-        throw new IllegalArgumentException( \"Unknown consistency check name: \" + name +\n-                \". Supported values: NONE, FULL\" );\n+        throw new IllegalArgumentException( \"Unknown consistency check name: \" + name + \". Supported values: NONE, FULL\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
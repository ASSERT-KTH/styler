{
    "project_name": "CESNET-perun",
    "error_id": "230",
    "information": {
        "errors": [
            {
                "line": "223",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\t\t\t\thp.add(w);\n\n\t\t\t\t// lock icon \n\t\t\t\tif(item.getDisabled() != \"NEVER\") {\n\t\t\t\t\tImage lockIcon =  new Image(SmallIcons.INSTANCE.lockIcon());\n\t\t\t\t\tlockIcon.setStyleName(\"pointer\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/230/PreviewFormTabItem.java\nindex 227c11096bc..2785734b477 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/230/PreviewFormTabItem.java\n@@ -28,361 +28,369 @@ import java.util.stream.Collectors;\n /**\n  * Display preview of VOs/Groups application form based on current\n  * config state in GUI. Allows to set type and language on page and reload.\n- *\n+ * <p>\n  * USE AS INNER TAB ONLY or DON'T add tab url between vos tabs\n  *\n  * @author Pavel Zlamal <256627@mail.muni.cz>\n  */\n public class PreviewFormTabItem implements TabItem, TabItemWithUrl {\n \n-\tprivate PerunWebSession session = PerunWebSession.getInstance();\n-\tprivate ArrayList<ApplicationFormItem> formItems;\n-\tprivate Label titleWidget = new Label(\"form preview\");\n-\tprivate SimplePanel contentWidget = new SimplePanel();\n-\n-\tprivate String appType = \"INITIAL\";\n-\tprivate String locale = \"en\";\n-\tprivate ArrayList<RegistrarFormItemGenerator> applFormGenerators = new ArrayList<RegistrarFormItemGenerator>();\n-\tprivate Button sendButton;\n-\n-\tprivate ApplicationForm form;\n-\tprivate int formId;\n-\n-\t/**\n-\t * Create new instance of this tab\n-\t *\n-\t * @param form Form to get authz from\n-\t * @param formItems application form items to display\n-\t */\n-\tpublic PreviewFormTabItem(ApplicationForm form, ArrayList<ApplicationFormItem> formItems) {\n-\t\tthis.form = form;\n-\t\tthis.formId = form.getId();\n-\t\tthis.formItems = formItems;\n-\t}\n-\n-\tpublic boolean isPrepared() {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isRefreshParentOnClose() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic void onClose() {\n-\n-\t}\n-\n-\tpublic Widget draw() {\n-\n-\t\tif (form.getGroup() != null) {\n-\t\t\ttitleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getGroup().getShortName())+\": form preview\");\n-\t\t} else {\n-\t\t\ttitleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getVo().getName())+\": form preview\");\n-\t\t}\n-\n-\t\tfinal TabItem tab = this;\n-\n-\t\tfinal VerticalPanel vp = new VerticalPanel();\n-\t\tvp.setSize(\"100%\", \"100%\");\n-\n-\t\tTabMenu menu = new TabMenu();\n-\t\tfinal ScrollPanel sp = new ScrollPanel();\n-\n-\t\tfinal CustomButton switchType = new CustomButton(ButtonTranslation.INSTANCE.switchToExtensionButton(), ButtonTranslation.INSTANCE.switchBetweenInitialAndExtension(), SmallIcons.INSTANCE.applicationFormIcon());\n-\t\tswitchType.addClickHandler(new ClickHandler() {\n-\t\t\tpublic void onClick(ClickEvent event) {\n-\t\t\t\t// switch type\n-\t\t\t\tif (appType.equalsIgnoreCase(\"EXTENSION\")) {\n-\t\t\t\t\tappType = \"INITIAL\";\n-\t\t\t\t\tswitchType.setText(ButtonTranslation.INSTANCE.switchToExtensionButton());\n-\t\t\t\t} else {\n-\t\t\t\t\tappType = \"EXTENSION\";\n-\t\t\t\t\tswitchType.setText(ButtonTranslation.INSTANCE.switchToInitialButton());\n-\t\t\t\t}\n-\t\t\t\t// prepare new\n-\t\t\t\tprepareApplicationForm(sp);\n-\t\t\t}\n-\t\t});\n-\t\tmenu.addWidget(switchType);\n-\n-\t\tif (!Utils.getNativeLanguage().isEmpty()) {\n-\t\t\tfinal CustomButton switchLocale = new CustomButton(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)), ButtonTranslation.INSTANCE.switchBetweenCzechAndEnglish(), SmallIcons.INSTANCE.locateIcon());\n-\t\t\tmenu.addWidget(switchLocale);\n-\t\t\tswitchLocale.addClickHandler(new ClickHandler() {\n-\t\t\t\tpublic void onClick(ClickEvent event) {\n-\t\t\t\t\t// switch type\n-\t\t\t\t\tif (locale.equalsIgnoreCase(\"en\")) {\n-\t\t\t\t\t\tlocale = Utils.getNativeLanguage().get(0);\n-\t\t\t\t\t\tswitchLocale.setText(ButtonTranslation.INSTANCE.switchToEnglishButton());\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tlocale = \"en\";\n-\t\t\t\t\t\tswitchLocale.setText(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)));\n-\t\t\t\t\t}\n-\t\t\t\t\t// prepare new\n-\t\t\t\t\tprepareApplicationForm(sp);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n-\n-\t\tvp.add(menu);\n-\t\tvp.setCellHeight(menu, \"30px\");\n-\n-\t\tvp.add(sp);\n-\t\tvp.setCellHeight(sp, \"100%\");\n-\n-\t\tprepareApplicationForm(sp);\n-\n-\t\tsession.getUiElements().resizeSmallTabPanel(sp, 350, tab);\n-\t\tcontentWidget.setWidget(vp);\n-\t\treturn getWidget();\n-\n-\t}\n-\n-\t/**\n-\t * Prepares the widgets from the items as A DISPLAY FOR THE USER\n-\t *\n-\t * @param sp scroll panel\n-\t */\n-\tpublic void prepareApplicationForm(ScrollPanel sp){\n-\n-\t\tFlexTable ft = new FlexTable();\n-\t\tft.setSize(\"100%\", \"100%\");\n-\t\tft.setCellPadding(10);\n-\t\tFlexCellFormatter fcf = ft.getFlexCellFormatter();\n-\n-\t\tint i = 0;\n-\t\tfor(final ApplicationFormItem item : formItems) {\n-\n-\t\t\t// skip items not from correct app type\n-\t\t\tArrayList<String> itemApplicationTypes = JsonUtils.listFromJsArrayString(item.getApplicationTypes());\n-\t\t\tif (!itemApplicationTypes.contains(appType)) continue;\n-\n-\t\t\t// generate correct items\n-\t\t\tRegistrarFormItemGenerator gen = new RegistrarFormItemGenerator(item, locale);\n-\t\t\tthis.applFormGenerators.add(gen);\n-\t\t\tgen.addValidationTrigger(new FormValidator() {\n-\n-\t\t\t\tpublic void triggerValidation() {\n-\t\t\t\t\tvalidateFormValues(false);\n-\t\t\t\t}\n-\t\t\t});\n-\n-\n-\t\t\t// if button, add onclick\n-\t\t\tif(item.getType().equals(\"SUBMIT_BUTTON\")){\n-\n-\t\t\t\tthis.sendButton = (Button) gen.getWidget();\n-\t\t\t\tsendButton.addClickHandler(new ClickHandler() {\n-\t\t\t\t\tpublic void onClick(ClickEvent event) {\n-\n-\t\t\t\t\t\t// revalidate again, with force validation\n-\t\t\t\t\t\tif(!validateFormValues(true)){\n-\t\t\t\t\t\t\treturn;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t// sending is disabled\n-\t\t\t\t\t\tConfirm c = new Confirm(\"Sending disabled\", new Label(\"Sending form is disabled in preview mode, but form items value validation works.\"), true);\n-\t\t\t\t\t\tc.show();\n-\n-\t\t\t\t\t}\n-\t\t\t\t});\n-\t\t\t}\n-\n-\t\t\t// get localized texts\n-\t\t\tItemTexts itemTexts = item.getItemTexts(locale);\n-\n-\t\t\tif(item.getHidden().equals(\"ALWAYS\")) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\t// WITH LABEL (input box ...)\n-\t\t\tif(gen.isLabelShown()){\n-\n-\t\t\t\t// 0 = label\n-\t\t\t\tif (item.isRequired() == true) {\n-\t\t\t\t\t// required\n-\t\t\t\t\tft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"*</strong>\");\n-\t\t\t\t} else {\n-\t\t\t\t\t// optional\n-\t\t\t\t\tft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"</strong>\");\n-\t\t\t\t}\n-\n-\t\t\t\t// 1 = widget with icons\n-\t\t\t\tHorizontalPanel hp = new HorizontalPanel();\n-\t\t\t\thp.setSpacing(10);\n-\n-\t\t\t\tWidget w = gen.getWidget();\n-\t\t\t\tw.setTitle(itemTexts.getHelp());\n-\t\t\t\tif (item.getDisabled().equals(\"ALWAYS\")) {\n-\t\t\t\t\tw.getElement().setAttribute(\"disabled\",\"disabled\");\n-\t\t\t\t}\n-\t\t\t\thp.add(w);\n-\n-\t\t\t\t// lock icon \n-\t\t\t\tif(item.getDisabled() != \"NEVER\") {\n-\t\t\t\t\tImage lockIcon =  new Image(SmallIcons.INSTANCE.lockIcon());\n-\t\t\t\t\tlockIcon.setStyleName(\"pointer\");\n-\n-\t\t\t\t\tString dependency = item.getDisabledDependencyItemId() == 0 ? \"it\" : formItems.stream()\n-\t\t\t\t\t\t.filter(it -> it.getId() == item.getDisabledDependencyItemId())\n-\t\t\t\t\t\t.collect(Collectors.toList()).get(0).getShortname();\n-\t\t\t\t\tswitch (item.getDisabled()) {\n-\t\t\t\t\t\tcase \"ALWAYS\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Always disabled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_EMPTY\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Disabled when \" + dependency + \" is empty\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_PREFILLED\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Disabled when \" + dependency + \" is prefilled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\n-\t\t\t\t\thp.add(lockIcon);\n-\t\t\t\t}\n-\n-\t\t\t\t// eye icon\n-\t\t\t\tif(item.getHidden() != \"NEVER\") {\n-\t\t\t\t\tImage eyeIcon =  new Image(SmallIcons.INSTANCE.hiddenIcon());\n-\t\t\t\t\teyeIcon.setStyleName(\"pointer\");\n-\n-\t\t\t\t\tString dependency = item.getHiddenDependencyItemId() == 0 ? \"it\" : formItems.stream()\n-\t\t\t\t\t\t.filter(it -> it.getId() == item.getHiddenDependencyItemId())\n-\t\t\t\t\t\t.collect(Collectors.toList()).get(0).getShortname();\n-\t\t\t\t\tswitch (item.getHidden()) {\n-\t\t\t\t\t\tcase \"ALWAYS\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Always hidden\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_EMPTY\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Hidden when \" + dependency + \" is empty\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_PREFILLED\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Hidden when \" + dependency + \" is prefilled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\n-\t\t\t\t\thp.add(eyeIcon);\n-\t\t\t\t}\n-\n-\t\t\t\tft.setWidget(i, 1, hp);\n-\n-\t\t\t\t// 2 = status\n-\t\t\t\tft.setWidget(i, 2, gen.getStatusWidget());\n-\n-\t\t\t\t// 3 = HELP\n-\t\t\t\tif(itemTexts.getHelp() != null && itemTexts.getHelp().length() > 0) {\n-\t\t\t\t\tLabel help = new Label(itemTexts.getHelp());\n-\t\t\t\t\tft.setWidget(i, 3, help);\n-\t\t\t\t}\n-\n-\t\t\t\t// format\n-\t\t\t\tfcf.setStyleName(i, 0, \"applicationFormLabel\");\n-\t\t\t\tfcf.setStyleName(i, 1, \"applicationFormWidget\");\n-\t\t\t\tfcf.setStyleName(i, 2, \"applicationFormCheck\");\n-\t\t\t\tfcf.setStyleName(i, 3, \"applicationFormHelp\");\n-\t\t\t\tft.setWidth(\"100%\");\n-\n-\t\t\t\t// ELSE HTML COMMENT\n-\n-\t\t\t} else {\n-\t\t\t\tft.setWidget(i, 0, gen.getWidget());\n-\t\t\t\t// colspan = 2\n-\t\t\t\tfcf.setColSpan(i, 0, 4);\n-\t\t\t\tfcf.setHorizontalAlignment(i, 0, HasHorizontalAlignment.ALIGN_LEFT);\n-\t\t\t\tfcf.setVerticalAlignment(i, 0, HasVerticalAlignment.ALIGN_MIDDLE);\n-\t\t\t}\n-\t\t\ti++;\n-\t\t}\n-\n-\t\tsp.setWidget(ft);\n-\n-\t}\n-\n-\t/**\n-\t * Validates the form values\n-\t */\n-\tprotected boolean validateFormValues(boolean forcedValidation) {\n-\n-\t\tif(sendButton == null) return false;\n-\n-\t\tboolean valid = true;\n-\n-\t\tsendButton.setEnabled(true);\n-\t\tfor(RegistrarFormItemGenerator gen : applFormGenerators){\n-\t\t\tif(gen.getInputChecker().isValidating() || !gen.getInputChecker().isValid(forcedValidation)){\n-\t\t\t\tsendButton.setEnabled(false);\n-\t\t\t\tvalid = false;\n-\n-\t\t\t\tif(!forcedValidation){\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn valid;\n-\n-\t}\n-\n-\tpublic Widget getWidget() {\n-\t\treturn this.contentWidget;\n-\t}\n-\n-\tpublic Widget getTitle() {\n-\t\treturn this.titleWidget;\n-\t}\n-\n-\tpublic ImageResource getIcon() {\n-\t\treturn SmallIcons.INSTANCE.applicationFormMagnifyIcon();\n-\t}\n-\n-\tpublic boolean multipleInstancesEnabled() {\n-\t\treturn false;\n-\t}\n-\n-\tpublic void open() {\n-\t}\n-\n-\tpublic boolean isAuthorized() {\n-\n-\t\tif (session.isVoAdmin(form.getVo().getId()) || session.isGroupAdmin(form.getGroup().getId())) {\n-\t\t\treturn true;\n-\t\t} else {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t}\n-\n-\tpublic final static String URL = \"preview\";\n-\n-\tpublic String getUrl() {\n-\t\treturn URL;\n-\t}\n-\n-\tpublic String getUrlWithParameters() {\n-\t\treturn VosTabs.URL + UrlMapper.TAB_NAME_SEPARATOR + getUrl() + \"?id=\" + formId;\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 1493;\n-\t\tint result = 1;\n-\t\tresult = prime * result + formId;\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\t\tPreviewFormTabItem other = (PreviewFormTabItem) obj;\n-\t\tif (formId != other.formId)\n-\t\t\treturn false;\n-\t\treturn true;\n-\t}\n+    private PerunWebSession session = PerunWebSession.getInstance();\n+    private ArrayList<ApplicationFormItem> formItems;\n+    private Label titleWidget = new Label(\"form preview\");\n+    private SimplePanel contentWidget = new SimplePanel();\n+\n+    private String appType = \"INITIAL\";\n+    private String locale = \"en\";\n+    private ArrayList<RegistrarFormItemGenerator> applFormGenerators = new ArrayList<RegistrarFormItemGenerator>();\n+    private Button sendButton;\n+\n+    private ApplicationForm form;\n+    private int formId;\n+\n+    /**\n+     * Create new instance of this tab\n+     *\n+     * @param form      Form to get authz from\n+     * @param formItems application form items to display\n+     */\n+    public PreviewFormTabItem(ApplicationForm form, ArrayList<ApplicationFormItem> formItems) {\n+        this.form = form;\n+        this.formId = form.getId();\n+        this.formItems = formItems;\n+    }\n+\n+    public boolean isPrepared() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isRefreshParentOnClose() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void onClose() {\n+\n+    }\n+\n+    public Widget draw() {\n+\n+        if (form.getGroup() != null) {\n+            titleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getGroup().getShortName()) + \": form preview\");\n+        } else {\n+            titleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getVo().getName()) + \": form preview\");\n+        }\n+\n+        final TabItem tab = this;\n+\n+        final VerticalPanel vp = new VerticalPanel();\n+        vp.setSize(\"100%\", \"100%\");\n+\n+        TabMenu menu = new TabMenu();\n+        final ScrollPanel sp = new ScrollPanel();\n+\n+        final CustomButton switchType = new CustomButton(ButtonTranslation.INSTANCE.switchToExtensionButton(), ButtonTranslation.INSTANCE.switchBetweenInitialAndExtension(), SmallIcons.INSTANCE.applicationFormIcon());\n+        switchType.addClickHandler(new ClickHandler() {\n+            public void onClick(ClickEvent event) {\n+                // switch type\n+                if (appType.equalsIgnoreCase(\"EXTENSION\")) {\n+                    appType = \"INITIAL\";\n+                    switchType.setText(ButtonTranslation.INSTANCE.switchToExtensionButton());\n+                } else {\n+                    appType = \"EXTENSION\";\n+                    switchType.setText(ButtonTranslation.INSTANCE.switchToInitialButton());\n+                }\n+                // prepare new\n+                prepareApplicationForm(sp);\n+            }\n+        });\n+        menu.addWidget(switchType);\n+\n+        if (!Utils.getNativeLanguage().isEmpty()) {\n+            final CustomButton switchLocale = new CustomButton(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)), ButtonTranslation.INSTANCE.switchBetweenCzechAndEnglish(), SmallIcons.INSTANCE.locateIcon());\n+            menu.addWidget(switchLocale);\n+            switchLocale.addClickHandler(new ClickHandler() {\n+                public void onClick(ClickEvent event) {\n+                    // switch type\n+                    if (locale.equalsIgnoreCase(\"en\")) {\n+                        locale = Utils.getNativeLanguage().get(0);\n+                        switchLocale.setText(ButtonTranslation.INSTANCE.switchToEnglishButton());\n+                    } else {\n+                        locale = \"en\";\n+                        switchLocale.setText(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)));\n+                    }\n+                    // prepare new\n+                    prepareApplicationForm(sp);\n+                }\n+            });\n+        }\n+\n+        vp.add(menu);\n+        vp.setCellHeight(menu, \"30px\");\n+\n+        vp.add(sp);\n+        vp.setCellHeight(sp, \"100%\");\n+\n+        prepareApplicationForm(sp);\n+\n+        session.getUiElements().resizeSmallTabPanel(sp, 350, tab);\n+        contentWidget.setWidget(vp);\n+        return getWidget();\n+\n+    }\n+\n+    /**\n+     * Prepares the widgets from the items as A DISPLAY FOR THE USER\n+     *\n+     * @param sp scroll panel\n+     */\n+    public void prepareApplicationForm(ScrollPanel sp) {\n+\n+        FlexTable ft = new FlexTable();\n+        ft.setSize(\"100%\", \"100%\");\n+        ft.setCellPadding(10);\n+        FlexCellFormatter fcf = ft.getFlexCellFormatter();\n+\n+        int i = 0;\n+        for (final ApplicationFormItem item : formItems) {\n+\n+            // skip items not from correct app type\n+            ArrayList<String> itemApplicationTypes = JsonUtils.listFromJsArrayString(item.getApplicationTypes());\n+            if (!itemApplicationTypes.contains(appType)) {\n+                continue;\n+            }\n+\n+            // generate correct items\n+            RegistrarFormItemGenerator gen = new RegistrarFormItemGenerator(item, locale);\n+            this.applFormGenerators.add(gen);\n+            gen.addValidationTrigger(new FormValidator() {\n+\n+                public void triggerValidation() {\n+                    validateFormValues(false);\n+                }\n+            });\n+\n+\n+            // if button, add onclick\n+            if (item.getType().equals(\"SUBMIT_BUTTON\")) {\n+\n+                this.sendButton = (Button) gen.getWidget();\n+                sendButton.addClickHandler(new ClickHandler() {\n+                    public void onClick(ClickEvent event) {\n+\n+                        // revalidate again, with force validation\n+                        if (!validateFormValues(true)) {\n+                            return;\n+                        }\n+\n+                        // sending is disabled\n+                        Confirm c = new Confirm(\"Sending disabled\", new Label(\"Sending form is disabled in preview mode, but form items value validation works.\"), true);\n+                        c.show();\n+\n+                    }\n+                });\n+            }\n+\n+            // get localized texts\n+            ItemTexts itemTexts = item.getItemTexts(locale);\n+\n+            if (item.getHidden().equals(\"ALWAYS\")) {\n+                continue;\n+            }\n+\n+            // WITH LABEL (input box ...)\n+            if (gen.isLabelShown()) {\n+\n+                // 0 = label\n+                if (item.isRequired() == true) {\n+                    // required\n+                    ft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"*</strong>\");\n+                } else {\n+                    // optional\n+                    ft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"</strong>\");\n+                }\n+\n+                // 1 = widget with icons\n+                HorizontalPanel hp = new HorizontalPanel();\n+                hp.setSpacing(10);\n+\n+                Widget w = gen.getWidget();\n+                w.setTitle(itemTexts.getHelp());\n+                if (item.getDisabled().equals(\"ALWAYS\")) {\n+                    w.getElement().setAttribute(\"disabled\", \"disabled\");\n+                }\n+                hp.add(w);\n+\n+                // lock icon\n+                if (item.getDisabled() != \"NEVER\") {\n+                    Image lockIcon = new Image(SmallIcons.INSTANCE.lockIcon());\n+                    lockIcon.setStyleName(\"pointer\");\n+\n+                    String dependency = item.getDisabledDependencyItemId() == 0 ? \"it\" : formItems.stream()\n+                            .filter(it -> it.getId() == item.getDisabledDependencyItemId())\n+                            .collect(Collectors.toList()).get(0).getShortname();\n+                    switch (item.getDisabled()) {\n+                        case \"ALWAYS\":\n+                            lockIcon.setTitle(\"Always disabled\");\n+                            break;\n+                        case \"IF_EMPTY\":\n+                            lockIcon.setTitle(\"Disabled when \" + dependency + \" is empty\");\n+                            break;\n+                        case \"IF_PREFILLED\":\n+                            lockIcon.setTitle(\"Disabled when \" + dependency + \" is prefilled\");\n+                            break;\n+                    }\n+\n+                    hp.add(lockIcon);\n+                }\n+\n+                // eye icon\n+                if (item.getHidden() != \"NEVER\") {\n+                    Image eyeIcon = new Image(SmallIcons.INSTANCE.hiddenIcon());\n+                    eyeIcon.setStyleName(\"pointer\");\n+\n+                    String dependency = item.getHiddenDependencyItemId() == 0 ? \"it\" : formItems.stream()\n+                            .filter(it -> it.getId() == item.getHiddenDependencyItemId())\n+                            .collect(Collectors.toList()).get(0).getShortname();\n+                    switch (item.getHidden()) {\n+                        case \"ALWAYS\":\n+                            eyeIcon.setTitle(\"Always hidden\");\n+                            break;\n+                        case \"IF_EMPTY\":\n+                            eyeIcon.setTitle(\"Hidden when \" + dependency + \" is empty\");\n+                            break;\n+                        case \"IF_PREFILLED\":\n+                            eyeIcon.setTitle(\"Hidden when \" + dependency + \" is prefilled\");\n+                            break;\n+                    }\n+\n+                    hp.add(eyeIcon);\n+                }\n+\n+                ft.setWidget(i, 1, hp);\n+\n+                // 2 = status\n+                ft.setWidget(i, 2, gen.getStatusWidget());\n+\n+                // 3 = HELP\n+                if (itemTexts.getHelp() != null && itemTexts.getHelp().length() > 0) {\n+                    Label help = new Label(itemTexts.getHelp());\n+                    ft.setWidget(i, 3, help);\n+                }\n+\n+                // format\n+                fcf.setStyleName(i, 0, \"applicationFormLabel\");\n+                fcf.setStyleName(i, 1, \"applicationFormWidget\");\n+                fcf.setStyleName(i, 2, \"applicationFormCheck\");\n+                fcf.setStyleName(i, 3, \"applicationFormHelp\");\n+                ft.setWidth(\"100%\");\n+\n+                // ELSE HTML COMMENT\n+\n+            } else {\n+                ft.setWidget(i, 0, gen.getWidget());\n+                // colspan = 2\n+                fcf.setColSpan(i, 0, 4);\n+                fcf.setHorizontalAlignment(i, 0, HasHorizontalAlignment.ALIGN_LEFT);\n+                fcf.setVerticalAlignment(i, 0, HasVerticalAlignment.ALIGN_MIDDLE);\n+            }\n+            i++;\n+        }\n+\n+        sp.setWidget(ft);\n+\n+    }\n+\n+    /**\n+     * Validates the form values\n+     */\n+    protected boolean validateFormValues(boolean forcedValidation) {\n+\n+        if (sendButton == null) {\n+            return false;\n+        }\n+\n+        boolean valid = true;\n+\n+        sendButton.setEnabled(true);\n+        for (RegistrarFormItemGenerator gen : applFormGenerators) {\n+            if (gen.getInputChecker().isValidating() || !gen.getInputChecker().isValid(forcedValidation)) {\n+                sendButton.setEnabled(false);\n+                valid = false;\n+\n+                if (!forcedValidation) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return valid;\n+\n+    }\n+\n+    public Widget getWidget() {\n+        return this.contentWidget;\n+    }\n+\n+    public Widget getTitle() {\n+        return this.titleWidget;\n+    }\n+\n+    public ImageResource getIcon() {\n+        return SmallIcons.INSTANCE.applicationFormMagnifyIcon();\n+    }\n+\n+    public boolean multipleInstancesEnabled() {\n+        return false;\n+    }\n+\n+    public void open() {\n+    }\n+\n+    public boolean isAuthorized() {\n+\n+        if (session.isVoAdmin(form.getVo().getId()) || session.isGroupAdmin(form.getGroup().getId())) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+\n+    }\n+\n+    public final static String URL = \"preview\";\n+\n+    public String getUrl() {\n+        return URL;\n+    }\n+\n+    public String getUrlWithParameters() {\n+        return VosTabs.URL + UrlMapper.TAB_NAME_SEPARATOR + getUrl() + \"?id=\" + formId;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 1493;\n+        int result = 1;\n+        result = prime * result + formId;\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        PreviewFormTabItem other = (PreviewFormTabItem) obj;\n+        if (formId != other.formId) {\n+            return false;\n+        }\n+        return true;\n+    }\n \n }\n",
            "diff_size": 358
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/230/PreviewFormTabItem.java\nindex 227c11096bc..8f0cac3d46a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/230/PreviewFormTabItem.java\n@@ -21,7 +21,6 @@ import cz.metacentrum.perun.webgui.tabs.VosTabs;\n import cz.metacentrum.perun.webgui.widgets.Confirm;\n import cz.metacentrum.perun.webgui.widgets.CustomButton;\n import cz.metacentrum.perun.webgui.widgets.TabMenu;\n-\n import java.util.ArrayList;\n import java.util.stream.Collectors;\n \n@@ -33,356 +32,329 @@ import java.util.stream.Collectors;\n  *\n  * @author Pavel Zlamal <256627@mail.muni.cz>\n  */\n+\n+\n public class PreviewFormTabItem implements TabItem, TabItemWithUrl {\n \n-\tprivate PerunWebSession session = PerunWebSession.getInstance();\n-\tprivate ArrayList<ApplicationFormItem> formItems;\n-\tprivate Label titleWidget = new Label(\"form preview\");\n-\tprivate SimplePanel contentWidget = new SimplePanel();\n-\n-\tprivate String appType = \"INITIAL\";\n-\tprivate String locale = \"en\";\n-\tprivate ArrayList<RegistrarFormItemGenerator> applFormGenerators = new ArrayList<RegistrarFormItemGenerator>();\n-\tprivate Button sendButton;\n-\n-\tprivate ApplicationForm form;\n-\tprivate int formId;\n-\n-\t/**\n-\t * Create new instance of this tab\n-\t *\n-\t * @param form Form to get authz from\n-\t * @param formItems application form items to display\n-\t */\n-\tpublic PreviewFormTabItem(ApplicationForm form, ArrayList<ApplicationFormItem> formItems) {\n-\t\tthis.form = form;\n-\t\tthis.formId = form.getId();\n-\t\tthis.formItems = formItems;\n-\t}\n-\n-\tpublic boolean isPrepared() {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isRefreshParentOnClose() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic void onClose() {\n-\n-\t}\n-\n-\tpublic Widget draw() {\n-\n-\t\tif (form.getGroup() != null) {\n-\t\t\ttitleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getGroup().getShortName())+\": form preview\");\n-\t\t} else {\n-\t\t\ttitleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getVo().getName())+\": form preview\");\n-\t\t}\n-\n-\t\tfinal TabItem tab = this;\n-\n-\t\tfinal VerticalPanel vp = new VerticalPanel();\n-\t\tvp.setSize(\"100%\", \"100%\");\n-\n-\t\tTabMenu menu = new TabMenu();\n-\t\tfinal ScrollPanel sp = new ScrollPanel();\n-\n-\t\tfinal CustomButton switchType = new CustomButton(ButtonTranslation.INSTANCE.switchToExtensionButton(), ButtonTranslation.INSTANCE.switchBetweenInitialAndExtension(), SmallIcons.INSTANCE.applicationFormIcon());\n-\t\tswitchType.addClickHandler(new ClickHandler() {\n-\t\t\tpublic void onClick(ClickEvent event) {\n-\t\t\t\t// switch type\n-\t\t\t\tif (appType.equalsIgnoreCase(\"EXTENSION\")) {\n-\t\t\t\t\tappType = \"INITIAL\";\n-\t\t\t\t\tswitchType.setText(ButtonTranslation.INSTANCE.switchToExtensionButton());\n-\t\t\t\t} else {\n-\t\t\t\t\tappType = \"EXTENSION\";\n-\t\t\t\t\tswitchType.setText(ButtonTranslation.INSTANCE.switchToInitialButton());\n-\t\t\t\t}\n-\t\t\t\t// prepare new\n-\t\t\t\tprepareApplicationForm(sp);\n-\t\t\t}\n-\t\t});\n-\t\tmenu.addWidget(switchType);\n-\n-\t\tif (!Utils.getNativeLanguage().isEmpty()) {\n-\t\t\tfinal CustomButton switchLocale = new CustomButton(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)), ButtonTranslation.INSTANCE.switchBetweenCzechAndEnglish(), SmallIcons.INSTANCE.locateIcon());\n-\t\t\tmenu.addWidget(switchLocale);\n-\t\t\tswitchLocale.addClickHandler(new ClickHandler() {\n-\t\t\t\tpublic void onClick(ClickEvent event) {\n-\t\t\t\t\t// switch type\n-\t\t\t\t\tif (locale.equalsIgnoreCase(\"en\")) {\n-\t\t\t\t\t\tlocale = Utils.getNativeLanguage().get(0);\n-\t\t\t\t\t\tswitchLocale.setText(ButtonTranslation.INSTANCE.switchToEnglishButton());\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tlocale = \"en\";\n-\t\t\t\t\t\tswitchLocale.setText(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)));\n-\t\t\t\t\t}\n-\t\t\t\t\t// prepare new\n-\t\t\t\t\tprepareApplicationForm(sp);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n-\n-\t\tvp.add(menu);\n-\t\tvp.setCellHeight(menu, \"30px\");\n-\n-\t\tvp.add(sp);\n-\t\tvp.setCellHeight(sp, \"100%\");\n-\n-\t\tprepareApplicationForm(sp);\n-\n-\t\tsession.getUiElements().resizeSmallTabPanel(sp, 350, tab);\n-\t\tcontentWidget.setWidget(vp);\n-\t\treturn getWidget();\n-\n-\t}\n-\n-\t/**\n-\t * Prepares the widgets from the items as A DISPLAY FOR THE USER\n-\t *\n-\t * @param sp scroll panel\n-\t */\n-\tpublic void prepareApplicationForm(ScrollPanel sp){\n-\n-\t\tFlexTable ft = new FlexTable();\n-\t\tft.setSize(\"100%\", \"100%\");\n-\t\tft.setCellPadding(10);\n-\t\tFlexCellFormatter fcf = ft.getFlexCellFormatter();\n-\n-\t\tint i = 0;\n-\t\tfor(final ApplicationFormItem item : formItems) {\n-\n-\t\t\t// skip items not from correct app type\n-\t\t\tArrayList<String> itemApplicationTypes = JsonUtils.listFromJsArrayString(item.getApplicationTypes());\n-\t\t\tif (!itemApplicationTypes.contains(appType)) continue;\n-\n-\t\t\t// generate correct items\n-\t\t\tRegistrarFormItemGenerator gen = new RegistrarFormItemGenerator(item, locale);\n-\t\t\tthis.applFormGenerators.add(gen);\n-\t\t\tgen.addValidationTrigger(new FormValidator() {\n-\n-\t\t\t\tpublic void triggerValidation() {\n-\t\t\t\t\tvalidateFormValues(false);\n-\t\t\t\t}\n-\t\t\t});\n-\n-\n-\t\t\t// if button, add onclick\n-\t\t\tif(item.getType().equals(\"SUBMIT_BUTTON\")){\n-\n-\t\t\t\tthis.sendButton = (Button) gen.getWidget();\n-\t\t\t\tsendButton.addClickHandler(new ClickHandler() {\n-\t\t\t\t\tpublic void onClick(ClickEvent event) {\n-\n-\t\t\t\t\t\t// revalidate again, with force validation\n-\t\t\t\t\t\tif(!validateFormValues(true)){\n-\t\t\t\t\t\t\treturn;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t// sending is disabled\n-\t\t\t\t\t\tConfirm c = new Confirm(\"Sending disabled\", new Label(\"Sending form is disabled in preview mode, but form items value validation works.\"), true);\n-\t\t\t\t\t\tc.show();\n-\n-\t\t\t\t\t}\n-\t\t\t\t});\n-\t\t\t}\n-\n-\t\t\t// get localized texts\n-\t\t\tItemTexts itemTexts = item.getItemTexts(locale);\n-\n-\t\t\tif(item.getHidden().equals(\"ALWAYS\")) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\t// WITH LABEL (input box ...)\n-\t\t\tif(gen.isLabelShown()){\n-\n-\t\t\t\t// 0 = label\n-\t\t\t\tif (item.isRequired() == true) {\n-\t\t\t\t\t// required\n-\t\t\t\t\tft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"*</strong>\");\n-\t\t\t\t} else {\n-\t\t\t\t\t// optional\n-\t\t\t\t\tft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"</strong>\");\n-\t\t\t\t}\n-\n-\t\t\t\t// 1 = widget with icons\n-\t\t\t\tHorizontalPanel hp = new HorizontalPanel();\n-\t\t\t\thp.setSpacing(10);\n-\n-\t\t\t\tWidget w = gen.getWidget();\n-\t\t\t\tw.setTitle(itemTexts.getHelp());\n-\t\t\t\tif (item.getDisabled().equals(\"ALWAYS\")) {\n-\t\t\t\t\tw.getElement().setAttribute(\"disabled\",\"disabled\");\n-\t\t\t\t}\n-\t\t\t\thp.add(w);\n-\n-\t\t\t\t// lock icon \n-\t\t\t\tif(item.getDisabled() != \"NEVER\") {\n-\t\t\t\t\tImage lockIcon =  new Image(SmallIcons.INSTANCE.lockIcon());\n-\t\t\t\t\tlockIcon.setStyleName(\"pointer\");\n-\n-\t\t\t\t\tString dependency = item.getDisabledDependencyItemId() == 0 ? \"it\" : formItems.stream()\n-\t\t\t\t\t\t.filter(it -> it.getId() == item.getDisabledDependencyItemId())\n-\t\t\t\t\t\t.collect(Collectors.toList()).get(0).getShortname();\n-\t\t\t\t\tswitch (item.getDisabled()) {\n-\t\t\t\t\t\tcase \"ALWAYS\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Always disabled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_EMPTY\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Disabled when \" + dependency + \" is empty\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_PREFILLED\":\n-\t\t\t\t\t\t\tlockIcon.setTitle(\"Disabled when \" + dependency + \" is prefilled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\n-\t\t\t\t\thp.add(lockIcon);\n-\t\t\t\t}\n-\n-\t\t\t\t// eye icon\n-\t\t\t\tif(item.getHidden() != \"NEVER\") {\n-\t\t\t\t\tImage eyeIcon =  new Image(SmallIcons.INSTANCE.hiddenIcon());\n-\t\t\t\t\teyeIcon.setStyleName(\"pointer\");\n-\n-\t\t\t\t\tString dependency = item.getHiddenDependencyItemId() == 0 ? \"it\" : formItems.stream()\n-\t\t\t\t\t\t.filter(it -> it.getId() == item.getHiddenDependencyItemId())\n-\t\t\t\t\t\t.collect(Collectors.toList()).get(0).getShortname();\n-\t\t\t\t\tswitch (item.getHidden()) {\n-\t\t\t\t\t\tcase \"ALWAYS\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Always hidden\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_EMPTY\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Hidden when \" + dependency + \" is empty\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\tcase \"IF_PREFILLED\":\n-\t\t\t\t\t\t\teyeIcon.setTitle(\"Hidden when \" + dependency + \" is prefilled\");\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\n-\t\t\t\t\thp.add(eyeIcon);\n-\t\t\t\t}\n-\n-\t\t\t\tft.setWidget(i, 1, hp);\n-\n-\t\t\t\t// 2 = status\n-\t\t\t\tft.setWidget(i, 2, gen.getStatusWidget());\n-\n-\t\t\t\t// 3 = HELP\n-\t\t\t\tif(itemTexts.getHelp() != null && itemTexts.getHelp().length() > 0) {\n-\t\t\t\t\tLabel help = new Label(itemTexts.getHelp());\n-\t\t\t\t\tft.setWidget(i, 3, help);\n-\t\t\t\t}\n-\n-\t\t\t\t// format\n-\t\t\t\tfcf.setStyleName(i, 0, \"applicationFormLabel\");\n-\t\t\t\tfcf.setStyleName(i, 1, \"applicationFormWidget\");\n-\t\t\t\tfcf.setStyleName(i, 2, \"applicationFormCheck\");\n-\t\t\t\tfcf.setStyleName(i, 3, \"applicationFormHelp\");\n-\t\t\t\tft.setWidth(\"100%\");\n-\n-\t\t\t\t// ELSE HTML COMMENT\n-\n-\t\t\t} else {\n-\t\t\t\tft.setWidget(i, 0, gen.getWidget());\n-\t\t\t\t// colspan = 2\n-\t\t\t\tfcf.setColSpan(i, 0, 4);\n-\t\t\t\tfcf.setHorizontalAlignment(i, 0, HasHorizontalAlignment.ALIGN_LEFT);\n-\t\t\t\tfcf.setVerticalAlignment(i, 0, HasVerticalAlignment.ALIGN_MIDDLE);\n-\t\t\t}\n-\t\t\ti++;\n-\t\t}\n-\n-\t\tsp.setWidget(ft);\n-\n-\t}\n-\n-\t/**\n-\t * Validates the form values\n-\t */\n-\tprotected boolean validateFormValues(boolean forcedValidation) {\n-\n-\t\tif(sendButton == null) return false;\n-\n-\t\tboolean valid = true;\n-\n-\t\tsendButton.setEnabled(true);\n-\t\tfor(RegistrarFormItemGenerator gen : applFormGenerators){\n-\t\t\tif(gen.getInputChecker().isValidating() || !gen.getInputChecker().isValid(forcedValidation)){\n-\t\t\t\tsendButton.setEnabled(false);\n-\t\t\t\tvalid = false;\n-\n-\t\t\t\tif(!forcedValidation){\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn valid;\n-\n-\t}\n-\n-\tpublic Widget getWidget() {\n-\t\treturn this.contentWidget;\n-\t}\n-\n-\tpublic Widget getTitle() {\n-\t\treturn this.titleWidget;\n-\t}\n-\n-\tpublic ImageResource getIcon() {\n-\t\treturn SmallIcons.INSTANCE.applicationFormMagnifyIcon();\n-\t}\n-\n-\tpublic boolean multipleInstancesEnabled() {\n-\t\treturn false;\n-\t}\n-\n-\tpublic void open() {\n-\t}\n-\n-\tpublic boolean isAuthorized() {\n-\n-\t\tif (session.isVoAdmin(form.getVo().getId()) || session.isGroupAdmin(form.getGroup().getId())) {\n-\t\t\treturn true;\n-\t\t} else {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t}\n-\n-\tpublic final static String URL = \"preview\";\n-\n-\tpublic String getUrl() {\n-\t\treturn URL;\n-\t}\n-\n-\tpublic String getUrlWithParameters() {\n-\t\treturn VosTabs.URL + UrlMapper.TAB_NAME_SEPARATOR + getUrl() + \"?id=\" + formId;\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 1493;\n-\t\tint result = 1;\n-\t\tresult = prime * result + formId;\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\t\tPreviewFormTabItem other = (PreviewFormTabItem) obj;\n-\t\tif (formId != other.formId)\n-\t\t\treturn false;\n-\t\treturn true;\n-\t}\n-\n-}\n+\n+ private PerunWebSession session = PerunWebSession.getInstance();\n+ private ArrayList<ApplicationFormItem> formItems;\n+ private Label titleWidget = new Label(\"form preview\");\n+ private SimplePanel contentWidget = new SimplePanel();\n+ private String appType = \"INITIAL\";\n+ private String locale = \"en\";\n+ private ArrayList<RegistrarFormItemGenerator> applFormGenerators = new ArrayList<RegistrarFormItemGenerator>();\n+ private Button sendButton;\n+ private ApplicationForm form;\n+ private int formId;\n+\n+ /**\n+  * Create new instance of this tab\n+  *\n+  * @param form Form to get authz from\n+  * @param formItems application form items to display\n+  */\n+\n+\n+ public PreviewFormTabItem(ApplicationForm form, ArrayList<ApplicationFormItem> formItems) {\n+  this.form = form;\n+  this.formId = form.getId();\n+  this.formItems = formItems;\n+ }\n+\n+ public boolean isPrepared() {\n+  return true;\n+ }\n+\n+ @Override\n+ public boolean isRefreshParentOnClose() {\n+  return false;\n+ }\n+\n+ @Override\n+ public void onClose() { }\n+\n+ public Widget draw() {\n+  if (form.getGroup() != null) {\n+   titleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getGroup().getShortName()) + \": form preview\");\n+  } else {\n+   titleWidget.setText(Utils.getStrippedStringWithEllipsis(form.getVo().getName()) + \": form preview\");\n+  }\n+\n+\n+  final TabItem tab = this;\n+  final VerticalPanel vp = new VerticalPanel();\n+  vp.setSize(\"100%\", \"100%\");\n+  TabMenu menu = new TabMenu();\n+  final ScrollPanel sp = new ScrollPanel();\n+  final CustomButton switchType = new CustomButton(ButtonTranslation.INSTANCE.switchToExtensionButton(), ButtonTranslation.INSTANCE.switchBetweenInitialAndExtension(), SmallIcons.INSTANCE.applicationFormIcon());\n+  switchType.addClickHandler(new ClickHandler() {\n+   public void onClick(ClickEvent event) {\n+    // switch type\n+    if (appType.equalsIgnoreCase(\"EXTENSION\")) {\n+     appType = \"INITIAL\";\n+     switchType.setText(ButtonTranslation.INSTANCE.switchToExtensionButton());\n+    } else {\n+     appType = \"EXTENSION\";\n+     switchType.setText(ButtonTranslation.INSTANCE.switchToInitialButton());\n+    }\n+    // prepare new\n+    prepareApplicationForm(sp);\n+   }\n+  });\n+  menu.addWidget(switchType);\n+  if (!Utils.getNativeLanguage().isEmpty()) {\n+   final CustomButton switchLocale = new CustomButton(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)), ButtonTranslation.INSTANCE.switchBetweenCzechAndEnglish(), SmallIcons.INSTANCE.locateIcon());\n+   menu.addWidget(switchLocale);\n+   switchLocale.addClickHandler(new ClickHandler() {\n+    public void onClick(ClickEvent event) {\n+     // switch type\n+     if (locale.equalsIgnoreCase(\"en\")) {\n+      locale = Utils.getNativeLanguage().get(0);\n+      switchLocale.setText(ButtonTranslation.INSTANCE.switchToEnglishButton());\n+     } else {\n+      locale = \"en\";\n+      switchLocale.setText(ButtonTranslation.INSTANCE.switchToCzechButton(Utils.getNativeLanguage().get(1)));\n+     }\n+     // prepare new\n+     prepareApplicationForm(sp);\n+    }\n+   });\n+  }\n+  vp.add(menu);\n+  vp.setCellHeight(menu, \"30px\");\n+  vp.add(sp);\n+  vp.setCellHeight(sp, \"100%\");\n+  prepareApplicationForm(sp);\n+  session.getUiElements().resizeSmallTabPanel(sp, 350, tab);\n+  contentWidget.setWidget(vp);\n+  return getWidget();\n+ }\n+\n+ /**\n+  * Prepares the widgets from the items as A DISPLAY FOR THE USER\n+  *\n+  * @param sp scroll panel\n+  */\n+\n+ public void prepareApplicationForm(ScrollPanel sp) {\n+  FlexTable ft = new FlexTable();\n+  ft.setSize(\"100%\", \"100%\");\n+  ft.setCellPadding(10);\n+  FlexCellFormatter fcf = ft.getFlexCellFormatter();\n+  int i = 0;\n+  for (final ApplicationFormItem item : formItems) {\n+\n+   // skip items not from correct app type\n+   ArrayList<String> itemApplicationTypes = JsonUtils.listFromJsArrayString(item.getApplicationTypes());\n+   if (!itemApplicationTypes.contains(appType)) continue;\n+\n+   // generate correct items\n+   RegistrarFormItemGenerator gen = new RegistrarFormItemGenerator(item, locale);\n+   this.applFormGenerators.add(gen);\n+   gen.addValidationTrigger(new FormValidator() {\n+    public void triggerValidation() {\n+     validateFormValues(false);\n+    }\n+   });\n+\n+\n+   // if button, add onclick\n+   if (item.getType().equals(\"SUBMIT_BUTTON\")) {\n+    this.sendButton = (Button) gen.getWidget();\n+    sendButton.addClickHandler(new ClickHandler() {\n+     public void onClick(ClickEvent event) {\n+\n+      // revalidate again, with force validation\n+      if (!validateFormValues(true)) {\n+       return;\n+      }\n+\n+      // sending is disabled\n+      Confirm c = new Confirm(\"Sending disabled\",\n+new Label(\"Sending form is disabled in preview mode, but form items value validation works.\"), true);\n+      c.show();\n+     }\n+    });\n+   }\n+\n+   // get localized texts\n+   ItemTexts itemTexts = item.getItemTexts(locale);\n+   if (item.getHidden().equals(\"ALWAYS\")) {\n+    continue;\n+   }\n+\n+   // WITH LABEL (input box ...)\n+   if (gen.isLabelShown()) {\n+\n+    // 0 = label\n+    if (item.isRequired() == true) {\n+     // required\n+     ft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"*</strong>\");\n+    } else {\n+     // optional\n+     ft.setHTML(i, 0, \"<strong>\" + SafeHtmlUtils.fromString(gen.getLabelOrShortname()).asString() + \"</strong>\");\n+    }\n+\n+    // 1 = widget with icons\n+    HorizontalPanel hp = new HorizontalPanel();\n+    hp.setSpacing(10);\n+    Widget w = gen.getWidget();\n+    w.setTitle(itemTexts.getHelp());\n+    if (item.getDisabled().equals(\"ALWAYS\")) {\n+     w.getElement().setAttribute(\"disabled\", \"disabled\");\n+    }\n+    hp.add(w);\n+\n+    // lock icon \n+    if (item.getDisabled() != \"NEVER\") {\n+     Image lockIcon = new Image(SmallIcons.INSTANCE.lockIcon());\n+     lockIcon.setStyleName(\"pointer\");\n+     String dependency = item.getDisabledDependencyItemId() == 0 ? \"it\" : formItems.stream().filter(it->it.getId() == item.getDisabledDependencyItemId()).collect(Collectors.toList()).get(0).getShortname();\n+\n+     switch (item.getDisabled()) {\n+      case \"ALWAYS\":\n+       lockIcon.setTitle(\"Always disabled\");\n+       break;\n+      case \"IF_EMPTY\":\n+       lockIcon.setTitle(\"Disabled when \" + dependency + \" is empty\");\n+       break;\n+      case \"IF_PREFILLED\":\n+       lockIcon.setTitle(\"Disabled when \" + dependency + \" is prefilled\");\n+       break;\n+     }\n+     hp.add(lockIcon);\n+    }\n+\n+    // eye icon\n+    if (item.getHidden() != \"NEVER\") {\n+     Image eyeIcon = new Image(SmallIcons.INSTANCE.hiddenIcon());\n+     eyeIcon.setStyleName(\"pointer\");\n+     String dependency = item.getHiddenDependencyItemId() == 0 ? \"it\" : formItems.stream().filter(it->it.getId() == item.getHiddenDependencyItemId()).collect(Collectors.toList()).get(0).getShortname();\n+\n+     switch (item.getHidden()) {\n+      case \"ALWAYS\":\n+       eyeIcon.setTitle(\"Always hidden\");\n+       break;\n+      case \"IF_EMPTY\":\n+       eyeIcon.setTitle(\"Hidden when \" + dependency + \" is empty\");\n+       break;\n+      case \"IF_PREFILLED\":\n+       eyeIcon.setTitle(\"Hidden when \" + dependency + \" is prefilled\");\n+       break;\n+     }\n+     hp.add(eyeIcon);\n+    }\n+    ft.setWidget(i, 1, hp);\n+\n+    // 2 = status\n+    ft.setWidget(i, 2, gen.getStatusWidget());\n+\n+    // 3 = HELP\n+    if (itemTexts.getHelp() != null && itemTexts.getHelp().length() > 0) {\n+     Label help = new Label(itemTexts.getHelp());\n+     ft.setWidget(i, 3, help);\n+    }\n+\n+    // format\n+    fcf.setStyleName(i, 0, \"applicationFormLabel\");\n+    fcf.setStyleName(i, 1, \"applicationFormWidget\");\n+    fcf.setStyleName(i, 2, \"applicationFormCheck\");\n+    fcf.setStyleName(i, 3, \"applicationFormHelp\");\n+    ft.setWidth(\"100%\");\n+\n+    // ELSE HTML COMMENT\n+   } else {\n+    ft.setWidget(i, 0, gen.getWidget());\n+    // colspan = 2\n+    fcf.setColSpan(i, 0, 4);\n+    fcf.setHorizontalAlignment(i, 0, HasHorizontalAlignment.ALIGN_LEFT);\n+    fcf.setVerticalAlignment(i, 0, HasVerticalAlignment.ALIGN_MIDDLE);\n+   }\n+   i++;\n+  }\n+  sp.setWidget(ft);\n+ }\n+\n+ /**\n+  * Validates the form values\n+  */\n+\n+ protected boolean validateFormValues(boolean forcedValidation) {\n+  if (sendButton == null)\n+   return false;\n+\n+  boolean valid = true;\n+  sendButton.setEnabled(true);\n+  for (RegistrarFormItemGenerator gen : applFormGenerators) {\n+   if (gen.getInputChecker().isValidating() || !gen.getInputChecker().isValid(forcedValidation)) {\n+    sendButton.setEnabled(false);\n+    valid = false;\n+    if (!forcedValidation) {\n+     return false;\n+    }\n+   }\n+  }\n+\n+  return valid;\n+ }\n+\n+ public Widget getWidget() {\n+  return this.contentWidget;\n+ }\n+\n+ public Widget getTitle() {\n+  return this.titleWidget;\n+ }\n+\n+ public ImageResource getIcon() {\n+  return SmallIcons.INSTANCE.applicationFormMagnifyIcon();\n+ }\n+\n+ public boolean multipleInstancesEnabled() {\n+  return false;\n+ }\n+\n+ public void open() { }\n+\n+ public boolean isAuthorized() {\n+  if (session.isVoAdmin(form.getVo().getId()) || session.isGroupAdmin(form.getGroup().getId())) {\n+   return true;\n+  } else {\n+   return false;\n+  }\n+ }\n+\n+ public final static String URL = \"preview\";\n+\n+ public String getUrl() {\n+  return URL;\n+ }\n+\n+ public String getUrlWithParameters() {\n+  return VosTabs.URL + UrlMapper.TAB_NAME_SEPARATOR + getUrl() + \"?id=\" + formId;\n+ }\n+\n+ @Override\n+ public int hashCode() {\n+  final int prime = 1493;\n+  int result = 1;\n+  result = prime * result + formId;\n+  return result;\n+ }\n+\n+ @Override\n+ public boolean equals(Object obj) {\n+  if (this == obj)\n+   return true;\n+  if (obj == null)\n+   return false;\n+  if (getClass() != obj.getClass())\n+   return false;\n+  PreviewFormTabItem other = (PreviewFormTabItem) obj;\n+  if (formId != other.formId)\n+   return false;\n+  return true;\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 354
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/230/PreviewFormTabItem.java\nindex 227c11096bc..3d4255b9c55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/230/PreviewFormTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/230/PreviewFormTabItem.java\n@@ -221,7 +221,7 @@ public class PreviewFormTabItem implements TabItem, TabItemWithUrl {\n \t\t\t\thp.add(w);\n \n \t\t\t\t// lock icon \n-\t\t\t\tif(item.getDisabled() != \"NEVER\") {\n+\t\t\t\tif (item.getDisabled() != \"NEVER\") {\n \t\t\t\t\tImage lockIcon =  new Image(SmallIcons.INSTANCE.lockIcon());\n \t\t\t\t\tlockIcon.setStyleName(\"pointer\");\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
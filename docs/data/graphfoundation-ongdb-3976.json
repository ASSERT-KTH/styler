{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3976",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3976/CrashGenerationCleaner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3976/CrashGenerationCleaner.java\nindex 3fa5c47f937..7b9ac9e685f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3976/CrashGenerationCleaner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3976/CrashGenerationCleaner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -41,218 +42,215 @@ import static java.util.concurrent.TimeUnit.SECONDS;\n  */\n class CrashGenerationCleaner\n {\n-    private static final long MIN_BATCH_SIZE = 10;\n-    static final long MAX_BATCH_SIZE = 1000;\n-    private final PagedFile pagedFile;\n-    private final TreeNode<?,?> treeNode;\n-    private final long lowTreeNodeId;\n-    private final long highTreeNodeId;\n-    private final long stableGeneration;\n-    private final long unstableGeneration;\n-    private final Monitor monitor;\n+  private static final long MIN_BATCH_SIZE = 10;\n+  static final long MAX_BATCH_SIZE = 1000;\n+  private final PagedFile pagedFile;\n+  private final TreeNode<?, ?> treeNode;\n+  private final long lowTreeNodeId;\n+  private final long highTreeNodeId;\n+  private final long stableGeneration;\n+  private final long unstableGeneration;\n+  private final Monitor monitor;\n \n-    CrashGenerationCleaner( PagedFile pagedFile, TreeNode<?,?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n-            long stableGeneration, long unstableGeneration, Monitor monitor )\n-    {\n-        this.pagedFile = pagedFile;\n-        this.treeNode = treeNode;\n-        this.lowTreeNodeId = lowTreeNodeId;\n-        this.highTreeNodeId = highTreeNodeId;\n-        this.stableGeneration = stableGeneration;\n-        this.unstableGeneration = unstableGeneration;\n-        this.monitor = monitor;\n-    }\n+  CrashGenerationCleaner(PagedFile pagedFile, TreeNode<?, ?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n+                         long stableGeneration, long unstableGeneration, Monitor monitor)\n+  {\n+    this.pagedFile = pagedFile;\n+    this.treeNode = treeNode;\n+    this.lowTreeNodeId = lowTreeNodeId;\n+    this.highTreeNodeId = highTreeNodeId;\n+    this.stableGeneration = stableGeneration;\n+    this.unstableGeneration = unstableGeneration;\n+    this.monitor = monitor;\n+  }\n \n-    static long batchSize( long pagesToClean, int threads )\n-    {\n-        // Batch size at most maxBatchSize, at least minBatchSize and trying to give each thread 100 batches each\n-        return min( MAX_BATCH_SIZE, max( MIN_BATCH_SIZE, pagesToClean / (100 * threads) ) );\n-    }\n+  static long batchSize(long pagesToClean, int threads)\n+  {\n+    // Batch size at most maxBatchSize, at least minBatchSize and trying to give each thread 100 batches each\n+    return min(MAX_BATCH_SIZE, max(MIN_BATCH_SIZE, pagesToClean / (100 * threads)));\n+  }\n \n-    // === Methods about the execution and threading ===\n+  // === Methods about the execution and threading ===\n \n-    public void clean( ExecutorService executor )\n-    {\n-        monitor.cleanupStarted();\n-        assert unstableGeneration > stableGeneration : unexpectedGenerations();\n-        assert unstableGeneration - stableGeneration > 1 : unexpectedGenerations();\n+  public void clean(ExecutorService executor)\n+  {\n+    monitor.cleanupStarted();\n+    assert unstableGeneration > stableGeneration : unexpectedGenerations();\n+    assert unstableGeneration - stableGeneration > 1 : unexpectedGenerations();\n \n-        long startTime = currentTimeMillis();\n-        long pagesToClean = highTreeNodeId - lowTreeNodeId;\n-        int threads = Runtime.getRuntime().availableProcessors();\n-        long batchSize = batchSize( pagesToClean, threads );\n-        AtomicLong nextId = new AtomicLong( lowTreeNodeId );\n-        AtomicReference<Throwable> error = new AtomicReference<>();\n-        AtomicInteger cleanedPointers = new AtomicInteger();\n-        CountDownLatch activeThreadLatch = new CountDownLatch( threads );\n-        for ( int i = 0; i < threads; i++ )\n-        {\n-            executor.submit( cleaner( nextId, batchSize, cleanedPointers, activeThreadLatch, error ) );\n-        }\n-\n-        try\n-        {\n-            long lastProgression = nextId.get();\n-            // Have max no-progress-timeout quite high to be able to cope with huge\n-            // I/O congestion spikes w/o failing in vain.\n-            while ( !activeThreadLatch.await( 30, SECONDS ) )\n-            {\n-                if ( lastProgression == nextId.get() )\n-                {\n-                    // No progression at all, abort\n-                    error.compareAndSet( null, new IOException( \"No progress, so forcing abort\" ) );\n-                }\n-                lastProgression = nextId.get();\n-            }\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            Thread.currentThread().interrupt();\n-        }\n+    long startTime = currentTimeMillis();\n+    long pagesToClean = highTreeNodeId - lowTreeNodeId;\n+    int threads = Runtime.getRuntime().availableProcessors();\n+    long batchSize = batchSize(pagesToClean, threads);\n+    AtomicLong nextId = new AtomicLong(lowTreeNodeId);\n+    AtomicReference<Throwable> error = new AtomicReference<>();\n+    AtomicInteger cleanedPointers = new AtomicInteger();\n+    CountDownLatch activeThreadLatch = new CountDownLatch(threads);\n+    for (int i = 0; i < threads; i++)\n+    {\n+      executor.submit(cleaner(nextId, batchSize, cleanedPointers, activeThreadLatch, error));\n+    }\n \n-        Throwable finalError = error.get();\n-        if ( finalError != null )\n+    try\n+    {\n+      long lastProgression = nextId.get();\n+      // Have max no-progress-timeout quite high to be able to cope with huge\n+      // I/O congestion spikes w/o failing in vain.\n+      while (!activeThreadLatch.await(30, SECONDS))\n+      {\n+        if (lastProgression == nextId.get())\n         {\n-            Exceptions.throwIfUnchecked( finalError );\n-            throw new RuntimeException( finalError );\n+          // No progression at all, abort\n+          error.compareAndSet(null, new IOException(\"No progress, so forcing abort\"));\n         }\n-\n-        long endTime = currentTimeMillis();\n-        monitor.cleanupFinished( pagesToClean, cleanedPointers.get(), endTime - startTime );\n+        lastProgression = nextId.get();\n+      }\n+    } catch (InterruptedException e)\n+    {\n+      Thread.currentThread().interrupt();\n     }\n \n-    private Runnable cleaner( AtomicLong nextId, long batchSize, AtomicInteger cleanedPointers, CountDownLatch activeThreadLatch,\n-            AtomicReference<Throwable> error )\n+    Throwable finalError = error.get();\n+    if (finalError != null)\n     {\n-        return () ->\n-        {\n-            try ( PageCursor cursor = pagedFile.io( 0, PagedFile.PF_SHARED_READ_LOCK );\n-                    PageCursor writeCursor = pagedFile.io( 0, PagedFile.PF_SHARED_WRITE_LOCK ) )\n-            {\n-                long localNextId;\n-                while ( ( localNextId = nextId.getAndAdd( batchSize )) < highTreeNodeId )\n-                {\n-                    for ( int i = 0; i < batchSize && localNextId < highTreeNodeId; i++, localNextId++ )\n-                    {\n-                        PageCursorUtil.goTo( cursor, \"clean\", localNextId );\n-\n-                        if ( hasCrashedGSPP( treeNode, cursor ) )\n-                        {\n-                            writeCursor.next( cursor.getCurrentPageId() );\n-                            cleanTreeNode( treeNode, writeCursor, cleanedPointers );\n-                        }\n-                    }\n-\n-                    // Check error status after a batch, to reduce volatility overhead.\n-                    // Is this over thinking things? Perhaps\n-                    if ( error.get() != null )\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-            catch ( Throwable e )\n-            {\n-                error.accumulateAndGet( e, Exceptions::chain );\n-            }\n-            finally\n-            {\n-                activeThreadLatch.countDown();\n-            }\n-        };\n+      Exceptions.throwIfUnchecked(finalError);\n+      throw new RuntimeException(finalError);\n     }\n \n-    // === Methods about checking if a tree node has crashed pointers ===\n+    long endTime = currentTimeMillis();\n+    monitor.cleanupFinished(pagesToClean, cleanedPointers.get(), endTime - startTime);\n+  }\n \n-    private boolean hasCrashedGSPP( TreeNode<?,?> treeNode, PageCursor cursor ) throws IOException\n+  private Runnable cleaner(AtomicLong nextId, long batchSize, AtomicInteger cleanedPointers, CountDownLatch activeThreadLatch,\n+                           AtomicReference<Throwable> error)\n+  {\n+    return () ->\n     {\n-        boolean isTreeNode;\n-        int keyCount;\n-        do\n+      try (PageCursor cursor = pagedFile.io(0, PagedFile.PF_SHARED_READ_LOCK);\n+           PageCursor writeCursor = pagedFile.io(0, PagedFile.PF_SHARED_WRITE_LOCK))\n+      {\n+        long localNextId;\n+        while ((localNextId = nextId.getAndAdd(batchSize)) < highTreeNodeId)\n         {\n-            isTreeNode = TreeNode.nodeType( cursor ) == TreeNode.NODE_TYPE_TREE_NODE;\n-            keyCount = TreeNode.keyCount( cursor );\n-        }\n-        while ( cursor.shouldRetry() );\n-        PageCursorUtil.checkOutOfBounds( cursor );\n+          for (int i = 0; i < batchSize && localNextId < highTreeNodeId; i++, localNextId++)\n+          {\n+            PageCursorUtil.goTo(cursor, \"clean\", localNextId);\n \n-        if ( !isTreeNode )\n-        {\n-            return false;\n-        }\n-\n-        boolean hasCrashed;\n-        do\n-        {\n-            hasCrashed =\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR ) ||\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING ) ||\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING );\n-\n-            if ( !hasCrashed && TreeNode.isInternal( cursor ) )\n+            if (hasCrashedGSPP(treeNode, cursor))\n             {\n-                for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ) && !hasCrashed; i++ )\n-                {\n-                    hasCrashed = hasCrashedGSPP( cursor, treeNode.childOffset( i ) );\n-                }\n+              writeCursor.next(cursor.getCurrentPageId());\n+              cleanTreeNode(treeNode, writeCursor, cleanedPointers);\n             }\n+          }\n+\n+          // Check error status after a batch, to reduce volatility overhead.\n+          // Is this over thinking things? Perhaps\n+          if (error.get() != null)\n+          {\n+            break;\n+          }\n         }\n-        while ( cursor.shouldRetry() );\n-        PageCursorUtil.checkOutOfBounds( cursor );\n-        return hasCrashed;\n-    }\n+      } catch (Throwable e)\n+      {\n+        error.accumulateAndGet(e, Exceptions::chain);\n+      } finally\n+      {\n+        activeThreadLatch.countDown();\n+      }\n+    };\n+  }\n+\n+  // === Methods about checking if a tree node has crashed pointers ===\n \n-    private boolean hasCrashedGSPP( PageCursor cursor, int gsppOffset )\n+  private boolean hasCrashedGSPP(TreeNode<?, ?> treeNode, PageCursor cursor) throws IOException\n+  {\n+    boolean isTreeNode;\n+    int keyCount;\n+    do\n     {\n-        return hasCrashedGSP( cursor, gsppOffset ) || hasCrashedGSP( cursor, gsppOffset + GenerationSafePointer.SIZE );\n+      isTreeNode = TreeNode.nodeType(cursor) == TreeNode.NODE_TYPE_TREE_NODE;\n+      keyCount = TreeNode.keyCount(cursor);\n     }\n+    while (cursor.shouldRetry());\n+    PageCursorUtil.checkOutOfBounds(cursor);\n \n-    private boolean hasCrashedGSP( PageCursor cursor, int offset )\n+    if (!isTreeNode)\n     {\n-        cursor.setOffset( offset );\n-        long generation = GenerationSafePointer.readGeneration( cursor );\n-        return generation > stableGeneration && generation < unstableGeneration;\n+      return false;\n     }\n \n-    // === Methods about actually cleaning a discovered crashed tree node ===\n-\n-    private void cleanTreeNode( TreeNode<?,?> treeNode, PageCursor cursor, AtomicInteger cleanedPointers )\n+    boolean hasCrashed;\n+    do\n     {\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR, cleanedPointers );\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING, cleanedPointers );\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING, cleanedPointers );\n+      hasCrashed =\n+          hasCrashedGSPP(cursor, TreeNode.BYTE_POS_SUCCESSOR) ||\n+              hasCrashedGSPP(cursor, TreeNode.BYTE_POS_LEFTSIBLING) ||\n+              hasCrashedGSPP(cursor, TreeNode.BYTE_POS_RIGHTSIBLING);\n \n-        if ( TreeNode.isInternal( cursor ) )\n+      if (!hasCrashed && TreeNode.isInternal(cursor))\n+      {\n+        for (int i = 0; i <= keyCount && treeNode.reasonableChildCount(i) && !hasCrashed; i++)\n         {\n-            int keyCount = TreeNode.keyCount( cursor );\n-            for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ); i++ )\n-            {\n-                cleanCrashedGSPP( cursor, treeNode.childOffset( i ), cleanedPointers );\n-            }\n+          hasCrashed = hasCrashedGSPP(cursor, treeNode.childOffset(i));\n         }\n+      }\n     }\n+    while (cursor.shouldRetry());\n+    PageCursorUtil.checkOutOfBounds(cursor);\n+    return hasCrashed;\n+  }\n \n-    private void cleanCrashedGSPP( PageCursor cursor, int gsppOffset, AtomicInteger cleanedPointers )\n-    {\n-        cleanCrashedGSP( cursor, gsppOffset, cleanedPointers );\n-        cleanCrashedGSP( cursor, gsppOffset + GenerationSafePointer.SIZE, cleanedPointers );\n-    }\n+  private boolean hasCrashedGSPP(PageCursor cursor, int gsppOffset)\n+  {\n+    return hasCrashedGSP(cursor, gsppOffset) || hasCrashedGSP(cursor, gsppOffset + GenerationSafePointer.SIZE);\n+  }\n+\n+  private boolean hasCrashedGSP(PageCursor cursor, int offset)\n+  {\n+    cursor.setOffset(offset);\n+    long generation = GenerationSafePointer.readGeneration(cursor);\n+    return generation > stableGeneration && generation < unstableGeneration;\n+  }\n \n-    /**\n-     * NOTE: No shouldRetry is used because cursor is assumed to be a write cursor.\n-     */\n-    private void cleanCrashedGSP( PageCursor cursor, int gspOffset, AtomicInteger cleanedPointers )\n+  // === Methods about actually cleaning a discovered crashed tree node ===\n+\n+  private void cleanTreeNode(TreeNode<?, ?> treeNode, PageCursor cursor, AtomicInteger cleanedPointers)\n+  {\n+    cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_SUCCESSOR, cleanedPointers);\n+    cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_LEFTSIBLING, cleanedPointers);\n+    cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_RIGHTSIBLING, cleanedPointers);\n+\n+    if (TreeNode.isInternal(cursor))\n     {\n-        if ( hasCrashedGSP( cursor, gspOffset ) )\n-        {\n-            cursor.setOffset( gspOffset );\n-            GenerationSafePointer.clean( cursor );\n-            cleanedPointers.incrementAndGet();\n-        }\n+      int keyCount = TreeNode.keyCount(cursor);\n+      for (int i = 0; i <= keyCount && treeNode.reasonableChildCount(i); i++)\n+      {\n+        cleanCrashedGSPP(cursor, treeNode.childOffset(i), cleanedPointers);\n+      }\n     }\n+  }\n+\n+  private void cleanCrashedGSPP(PageCursor cursor, int gsppOffset, AtomicInteger cleanedPointers)\n+  {\n+    cleanCrashedGSP(cursor, gsppOffset, cleanedPointers);\n+    cleanCrashedGSP(cursor, gsppOffset + GenerationSafePointer.SIZE, cleanedPointers);\n+  }\n \n-    private String unexpectedGenerations( )\n+  /**\n+   * NOTE: No shouldRetry is used because cursor is assumed to be a write cursor.\n+   */\n+  private void cleanCrashedGSP(PageCursor cursor, int gspOffset, AtomicInteger cleanedPointers)\n+  {\n+    if (hasCrashedGSP(cursor, gspOffset))\n     {\n-        return \"Unexpected generations, stableGeneration=\" + stableGeneration + \", unstableGeneration=\" + unstableGeneration;\n+      cursor.setOffset(gspOffset);\n+      GenerationSafePointer.clean(cursor);\n+      cleanedPointers.incrementAndGet();\n     }\n+  }\n+\n+  private String unexpectedGenerations()\n+  {\n+    return \"Unexpected generations, stableGeneration=\" + stableGeneration + \", unstableGeneration=\" + unstableGeneration;\n+  }\n }\n",
            "diff_size": 252
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "210",
                    "column": "26",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3976/CrashGenerationCleaner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3976/CrashGenerationCleaner.java\nindex 3fa5c47f937..895eebc1f0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3976/CrashGenerationCleaner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3976/CrashGenerationCleaner.java\n@@ -44,14 +44,14 @@ class CrashGenerationCleaner\n     private static final long MIN_BATCH_SIZE = 10;\n     static final long MAX_BATCH_SIZE = 1000;\n     private final PagedFile pagedFile;\n-    private final TreeNode<?,?> treeNode;\n+    private final TreeNode<?, ?> treeNode;\n     private final long lowTreeNodeId;\n     private final long highTreeNodeId;\n     private final long stableGeneration;\n     private final long unstableGeneration;\n     private final Monitor monitor;\n \n-    CrashGenerationCleaner( PagedFile pagedFile, TreeNode<?,?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n+    CrashGenerationCleaner( PagedFile pagedFile, TreeNode<?, ?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n             long stableGeneration, long unstableGeneration, Monitor monitor )\n     {\n         this.pagedFile = pagedFile;\n@@ -66,7 +66,7 @@ class CrashGenerationCleaner\n     static long batchSize( long pagesToClean, int threads )\n     {\n         // Batch size at most maxBatchSize, at least minBatchSize and trying to give each thread 100 batches each\n-        return min( MAX_BATCH_SIZE, max( MIN_BATCH_SIZE, pagesToClean / (100 * threads) ) );\n+        return min( MAX_BATCH_SIZE, max( MIN_BATCH_SIZE, pagesToClean / ( 100 * threads) ) );\n     }\n \n     // === Methods about the execution and threading ===\n@@ -102,7 +102,8 @@ class CrashGenerationCleaner\n                     // No progression at all, abort\n                     error.compareAndSet( null, new IOException( \"No progress, so forcing abort\" ) );\n                 }\n-                lastProgression = nextId.get();\n+\n+lastProgression = nextId.get();\n             }\n         }\n         catch ( InterruptedException e )\n@@ -121,13 +122,12 @@ class CrashGenerationCleaner\n         monitor.cleanupFinished( pagesToClean, cleanedPointers.get(), endTime - startTime );\n     }\n \n-    private Runnable cleaner( AtomicLong nextId, long batchSize, AtomicInteger cleanedPointers, CountDownLatch activeThreadLatch,\n-            AtomicReference<Throwable> error )\n+    private Runnable cleaner( AtomicLong nextId, long batchSize, AtomicInteger cleanedPointers, CountDownLatch activeThreadLatch, AtomicReference<Throwable> error )\n     {\n         return () ->\n         {\n             try ( PageCursor cursor = pagedFile.io( 0, PagedFile.PF_SHARED_READ_LOCK );\n-                    PageCursor writeCursor = pagedFile.io( 0, PagedFile.PF_SHARED_WRITE_LOCK ) )\n+PageCursor writeCursor = pagedFile.io( 0, PagedFile.PF_SHARED_WRITE_LOCK ) )\n             {\n                 long localNextId;\n                 while ( ( localNextId = nextId.getAndAdd( batchSize )) < highTreeNodeId )\n@@ -135,8 +135,7 @@ class CrashGenerationCleaner\n                     for ( int i = 0; i < batchSize && localNextId < highTreeNodeId; i++, localNextId++ )\n                     {\n                         PageCursorUtil.goTo( cursor, \"clean\", localNextId );\n-\n-                        if ( hasCrashedGSPP( treeNode, cursor ) )\n+if ( hasCrashedGSPP( treeNode, cursor ) )\n                         {\n                             writeCursor.next( cursor.getCurrentPageId() );\n                             cleanTreeNode( treeNode, writeCursor, cleanedPointers );\n@@ -164,7 +163,7 @@ class CrashGenerationCleaner\n \n     // === Methods about checking if a tree node has crashed pointers ===\n \n-    private boolean hasCrashedGSPP( TreeNode<?,?> treeNode, PageCursor cursor ) throws IOException\n+    private boolean hasCrashedGSPP( TreeNode<?, ?> treeNode, PageCursor cursor ) throws IOException\n     {\n         boolean isTreeNode;\n         int keyCount;\n@@ -175,8 +174,7 @@ class CrashGenerationCleaner\n         }\n         while ( cursor.shouldRetry() );\n         PageCursorUtil.checkOutOfBounds( cursor );\n-\n-        if ( !isTreeNode )\n+if ( !isTreeNode )\n         {\n             return false;\n         }\n@@ -184,12 +182,10 @@ class CrashGenerationCleaner\n         boolean hasCrashed;\n         do\n         {\n-            hasCrashed =\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR ) ||\n+            hasCrashed = hasCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR ) ||\n                     hasCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING ) ||\n                     hasCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING );\n-\n-            if ( !hasCrashed && TreeNode.isInternal( cursor ) )\n+if ( !hasCrashed && TreeNode.isInternal( cursor ) )\n             {\n                 for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ) && !hasCrashed; i++ )\n                 {\n@@ -211,18 +207,17 @@ class CrashGenerationCleaner\n     {\n         cursor.setOffset( offset );\n         long generation = GenerationSafePointer.readGeneration( cursor );\n-        return generation > stableGeneration && generation < unstableGeneration;\n+        return generation> stableGeneration && generation < unstableGeneration;\n     }\n \n     // === Methods about actually cleaning a discovered crashed tree node ===\n \n-    private void cleanTreeNode( TreeNode<?,?> treeNode, PageCursor cursor, AtomicInteger cleanedPointers )\n+    private void cleanTreeNode( TreeNode<?, ?> treeNode, PageCursor cursor, AtomicInteger cleanedPointers )\n     {\n         cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR, cleanedPointers );\n         cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING, cleanedPointers );\n         cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING, cleanedPointers );\n-\n-        if ( TreeNode.isInternal( cursor ) )\n+if ( TreeNode.isInternal( cursor ) )\n         {\n             int keyCount = TreeNode.keyCount( cursor );\n             for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ); i++ )\n@@ -255,4 +250,4 @@ class CrashGenerationCleaner\n     {\n         return \"Unexpected generations, stableGeneration=\" + stableGeneration + \", unstableGeneration=\" + unstableGeneration;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-shardingsphere",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "153",
                "column": "9",
                "severity": "warning",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n        /**\n         * Build configuration.\n         *\n         * @return plugin advice definition.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/39/PluginAdviceDefine.java\nindex fcc7b19c567..9c7518c45e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/39/PluginAdviceDefine.java\n@@ -149,7 +149,6 @@ public final class PluginAdviceDefine {\n             return new StaticMethodPointBuilder(this, matcher);\n         }\n \n-\n         /**\n          * Build configuration.\n          *\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "153",
                    "column": "9",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/39/PluginAdviceDefine.java\nindex fcc7b19c567..151d87f8b6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/39/PluginAdviceDefine.java\n@@ -50,7 +50,7 @@ public final class PluginAdviceDefine {\n     private PluginAdviceDefine(final List<ConstructorPoint> constructorPoints,\n                                final List<InstanceMethodPoint> instanceMethodPoints,\n                                final List<ClassStaticMethodPoint> classStaticMethodPoints) {\n-        this.constructorPoints = constructorPoints;\n+this.constructorPoints = constructorPoints;\n         this.instanceMethodPoints = instanceMethodPoints;\n         this.classStaticMethodPoints = classStaticMethodPoints;\n     }\n@@ -96,6 +96,7 @@ public final class PluginAdviceDefine {\n      * Plugin advice configuration builder.\n      */\n     public static final class Builder {\n+\n         private final List<ConstructorPoint> constructorPoints = Lists.newArrayList();\n \n         private final List<InstanceMethodPoint> instanceMethodPoints = Lists.newArrayList();\n@@ -149,8 +150,7 @@ public final class PluginAdviceDefine {\n             return new StaticMethodPointBuilder(this, matcher);\n         }\n \n-\n-        /**\n+/**\n          * Build configuration.\n          *\n          * @return plugin advice definition.\n@@ -163,7 +163,8 @@ public final class PluginAdviceDefine {\n          * Instance method intercepting point configuration builder.\n          */\n         public static final class InstanceMethodPointBuilder {\n-            private final Builder builder;\n+\n+        private final Builder builder;\n \n             private String classNameOfAdvice;\n \n@@ -213,7 +214,8 @@ public final class PluginAdviceDefine {\n          * Static method intercepting point configuration builder.\n          */\n         public static final class StaticMethodPointBuilder {\n-            private final Builder builder;\n+\n+        private final Builder builder;\n \n             private String classNameOfAdvice;\n \n@@ -257,14 +259,14 @@ public final class PluginAdviceDefine {\n                 builder.classStaticMethodPoints.add(new ClassStaticMethodPoint(matcher, classNameOfAdvice, overrideArgs));\n                 return builder;\n             }\n-\n-        }\n+    }\n \n         /**\n          * Instance constructor intercepting point configuration builder.\n          */\n         public static final class ConstructorPointBuilder {\n-            private final Builder builder;\n+\n+        private final Builder builder;\n \n             private String classNameOfAdvice;\n \n@@ -297,4 +299,4 @@ public final class PluginAdviceDefine {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "171",
                    "column": "9",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "210",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "223",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "294",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "305",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "326",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "338",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/39/PluginAdviceDefine.java\nindex fcc7b19c567..de5046cbe55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/39/PluginAdviceDefine.java\n@@ -25,7 +25,6 @@ import net.bytebuddy.matcher.ElementMatchers;\n import org.apache.shardingsphere.agent.core.plugin.point.ClassStaticMethodPoint;\n import org.apache.shardingsphere.agent.core.plugin.point.ConstructorPoint;\n import org.apache.shardingsphere.agent.core.plugin.point.InstanceMethodPoint;\n-\n import java.util.List;\n \n /**\n@@ -39,6 +38,8 @@ import java.util.List;\n  * .install();\n  * </code>\n  */\n+\n+\n public final class PluginAdviceDefine {\n \n     private final List<ConstructorPoint> constructorPoints;\n@@ -47,9 +48,7 @@ public final class PluginAdviceDefine {\n \n     private final List<ClassStaticMethodPoint> classStaticMethodPoints;\n \n-    private PluginAdviceDefine(final List<ConstructorPoint> constructorPoints,\n-                               final List<InstanceMethodPoint> instanceMethodPoints,\n-                               final List<ClassStaticMethodPoint> classStaticMethodPoints) {\n+    private PluginAdviceDefine(final List<ConstructorPoint> constructorPoints, final List<InstanceMethodPoint> instanceMethodPoints, final List<ClassStaticMethodPoint> classStaticMethodPoints) {\n         this.constructorPoints = constructorPoints;\n         this.instanceMethodPoints = instanceMethodPoints;\n         this.classStaticMethodPoints = classStaticMethodPoints;\n@@ -61,6 +60,8 @@ public final class PluginAdviceDefine {\n      * @param classNameOfTarget a class name of wanted advice target.\n      * @return builder.\n      */\n+\n+\n     public static Builder intercept(final String classNameOfTarget) {\n         return new Builder(classNameOfTarget);\n     }\n@@ -70,6 +71,8 @@ public final class PluginAdviceDefine {\n      *\n      * @return series of static method point configuration.\n      */\n+\n+\n     public List<ClassStaticMethodPoint> getClassStaticMethodPoints() {\n         return classStaticMethodPoints;\n     }\n@@ -79,6 +82,8 @@ public final class PluginAdviceDefine {\n      *\n      * @return series of constructor point configuration.\n      */\n+\n+\n     public List<ConstructorPoint> getConstructorPoints() {\n         return constructorPoints;\n     }\n@@ -88,6 +93,8 @@ public final class PluginAdviceDefine {\n      *\n      * @return series of instance method point configuration.\n      */\n+\n+\n     public List<InstanceMethodPoint> getInstanceMethodPoints() {\n         return instanceMethodPoints;\n     }\n@@ -95,7 +102,10 @@ public final class PluginAdviceDefine {\n     /**\n      * Plugin advice configuration builder.\n      */\n+\n+\n     public static final class Builder {\n+\n         private final List<ConstructorPoint> constructorPoints = Lists.newArrayList();\n \n         private final List<InstanceMethodPoint> instanceMethodPoints = Lists.newArrayList();\n@@ -114,6 +124,8 @@ public final class PluginAdviceDefine {\n          * @param classNameOfTarget the class name of target.\n          * @return configuration builder.\n          */\n+\n+\n         public Builder intercept(final String classNameOfTarget) {\n             // TODO not-implemented yet\n             return this;\n@@ -125,6 +137,8 @@ public final class PluginAdviceDefine {\n          * @param matcher constraints\n          * @return configuration builder\n          */\n+\n+\n         public ConstructorPointBuilder onConstructor(final ElementMatcher<? super MethodDescription> matcher) {\n             return new ConstructorPointBuilder(this, matcher);\n         }\n@@ -135,6 +149,8 @@ public final class PluginAdviceDefine {\n          * @param matcher constraints\n          * @return configuration builder\n          */\n+\n+\n         public InstanceMethodPointBuilder method(final ElementMatcher<? super MethodDescription> matcher) {\n             return new InstanceMethodPointBuilder(this, matcher);\n         }\n@@ -145,6 +161,8 @@ public final class PluginAdviceDefine {\n          * @param matcher constraints\n          * @return configuration builder\n          */\n+\n+\n         public StaticMethodPointBuilder staticMethod(final ElementMatcher<? super MethodDescription> matcher) {\n             return new StaticMethodPointBuilder(this, matcher);\n         }\n@@ -155,6 +173,8 @@ public final class PluginAdviceDefine {\n          *\n          * @return plugin advice definition.\n          */\n+\n+\n         public PluginAdviceDefine install() {\n             return new PluginAdviceDefine(constructorPoints, instanceMethodPoints, classStaticMethodPoints);\n         }\n@@ -162,7 +182,10 @@ public final class PluginAdviceDefine {\n         /**\n          * Instance method intercepting point configuration builder.\n          */\n+\n+\n         public static final class InstanceMethodPointBuilder {\n+\n             private final Builder builder;\n \n             private String classNameOfAdvice;\n@@ -182,6 +205,8 @@ public final class PluginAdviceDefine {\n              * @param classNameOfAdvice the class name of advice\n              * @return instance method point builder.\n              */\n+\n+\n             public InstanceMethodPointBuilder implement(final String classNameOfAdvice) {\n                 this.classNameOfAdvice = classNameOfAdvice;\n                 return this;\n@@ -193,6 +218,8 @@ public final class PluginAdviceDefine {\n              * @param overrideArgs whether to override origin method arguments.\n              * @return instance method point configurer.\n              */\n+\n+\n             public InstanceMethodPointBuilder overrideArgs(final boolean overrideArgs) {\n                 this.overrideArgs = overrideArgs;\n                 return this;\n@@ -203,6 +230,8 @@ public final class PluginAdviceDefine {\n              *\n              * @return plugin advice builder.\n              */\n+\n+\n             public Builder build() {\n                 builder.instanceMethodPoints.add(new InstanceMethodPoint(matcher, classNameOfAdvice, overrideArgs));\n                 return builder;\n@@ -212,7 +241,10 @@ public final class PluginAdviceDefine {\n         /**\n          * Static method intercepting point configuration builder.\n          */\n+\n+\n         public static final class StaticMethodPointBuilder {\n+\n             private final Builder builder;\n \n             private String classNameOfAdvice;\n@@ -232,6 +264,8 @@ public final class PluginAdviceDefine {\n              * @param classNameOfAdvice the class name of advice\n              * @return static method point configurer.\n              */\n+\n+\n             public StaticMethodPointBuilder implement(final String classNameOfAdvice) {\n                 this.classNameOfAdvice = classNameOfAdvice;\n                 return this;\n@@ -243,6 +277,8 @@ public final class PluginAdviceDefine {\n              * @param overrideArgs whether to override origin method arguments.\n              * @return static method point configurer.\n              */\n+\n+\n             public StaticMethodPointBuilder overrideArgs(final boolean overrideArgs) {\n                 this.overrideArgs = overrideArgs;\n                 return this;\n@@ -253,17 +289,21 @@ public final class PluginAdviceDefine {\n              *\n              * @return plugin advice builder.\n              */\n+\n+\n             public Builder build() {\n                 builder.classStaticMethodPoints.add(new ClassStaticMethodPoint(matcher, classNameOfAdvice, overrideArgs));\n                 return builder;\n             }\n-\n         }\n \n         /**\n          * Instance constructor intercepting point configuration builder.\n          */\n+\n+\n         public static final class ConstructorPointBuilder {\n+\n             private final Builder builder;\n \n             private String classNameOfAdvice;\n@@ -281,6 +321,8 @@ public final class PluginAdviceDefine {\n              * @param classNameOfAdvice the class name of advice\n              * @return constructor point builder.\n              */\n+\n+\n             public ConstructorPointBuilder implement(final String classNameOfAdvice) {\n                 this.classNameOfAdvice = classNameOfAdvice;\n                 return this;\n@@ -291,10 +333,12 @@ public final class PluginAdviceDefine {\n              *\n              * @return plugin advice builder.\n              */\n+\n+\n             public Builder build() {\n                 builder.constructorPoints.add(new ConstructorPoint(matcher, classNameOfAdvice));\n                 return builder;\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/39/PluginAdviceDefine.java\nindex fcc7b19c567..9c7518c45e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/39/PluginAdviceDefine.java\n@@ -149,7 +149,6 @@ public final class PluginAdviceDefine {\n             return new StaticMethodPointBuilder(this, matcher);\n         }\n \n-\n         /**\n          * Build configuration.\n          *\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/39/PluginAdviceDefine.java\nindex fcc7b19c567..9c7518c45e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/39/PluginAdviceDefine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/39/PluginAdviceDefine.java\n@@ -149,7 +149,6 @@ public final class PluginAdviceDefine {\n             return new StaticMethodPointBuilder(this, matcher);\n         }\n \n-\n         /**\n          * Build configuration.\n          *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
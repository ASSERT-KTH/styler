{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "640",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.entity;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/640/OutboundAdminDistributionOrchestrationContextBuilder.java\nindex d27579144fc..0eba573821c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admindistribution.entity;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;\n import gov.hhs.fha.nhinc.common.nhinccommonentity.RespondingGatewaySendAlertMessageType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/640/OutboundAdminDistributionOrchestrationContextBuilder.java\nindex d27579144fc..8dbbf646281 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -36,85 +37,87 @@ import gov.hhs.fha.nhinc.orchestration.OutboundOrchestratable;\n \n \n /**\n- *\n  * @author nnguyen\n  */\n public abstract class OutboundAdminDistributionOrchestrationContextBuilder implements OrchestrationContextBuilder {\n \n-    private RespondingGatewaySendAlertMessageType request;\n-    private AssertionType assertionType;\n-    private OutboundDelegate nhinDelegate;\n-    private NhinTargetSystemType targetSystem;\n+  private RespondingGatewaySendAlertMessageType request;\n+  private AssertionType assertionType;\n+  private OutboundDelegate nhinDelegate;\n+  private NhinTargetSystemType targetSystem;\n \n-    /**\n-     * Implement OrchestrationContext build() in the implemntation classes.\n-     * @return OrchestrationContext.\n-     */\n-    @Override\n-    public abstract OrchestrationContext build();\n+  /**\n+   * Implement OrchestrationContext build() in the implemntation classes.\n+   *\n+   * @return OrchestrationContext.\n+   */\n+  @Override\n+  public abstract OrchestrationContext build();\n \n-    /**\n-     * @return assertionType AssertionType assertionType received.\n-     */\n-    public AssertionType getAssertionType() {\n-        return assertionType;\n-    }\n+  /**\n+   * @return assertionType AssertionType assertionType received.\n+   */\n+  public AssertionType getAssertionType() {\n+    return assertionType;\n+  }\n \n-    /**\n-     * @param assertionType AssertionType assertionType received.\n-     */\n-    public void setAssertionType(AssertionType assertionType) {\n-        this.assertionType = assertionType;\n-    }\n+  /**\n+   * @param assertionType AssertionType assertionType received.\n+   */\n+  public void setAssertionType(AssertionType assertionType) {\n+    this.assertionType = assertionType;\n+  }\n \n-    /**\n-     * @return nhinDelegate.\n-     */\n-    public OutboundDelegate getNhinDelegate() {\n-        return nhinDelegate;\n-    }\n+  /**\n+   * @return nhinDelegate.\n+   */\n+  public OutboundDelegate getNhinDelegate() {\n+    return nhinDelegate;\n+  }\n \n-    /**\n-     * @param nhinDelegate OutboundDelegate nhinDelegate received.\n-     */\n-    public void setNhinDelegate(OutboundDelegate nhinDelegate) {\n-        this.nhinDelegate = nhinDelegate;\n-    }\n+  /**\n+   * @param nhinDelegate OutboundDelegate nhinDelegate received.\n+   */\n+  public void setNhinDelegate(OutboundDelegate nhinDelegate) {\n+    this.nhinDelegate = nhinDelegate;\n+  }\n \n-    /**\n-     * @return SendAlertMessage received.\n-     */\n-    public RespondingGatewaySendAlertMessageType getRequest() {\n-        return request;\n-    }\n+  /**\n+   * @return SendAlertMessage received.\n+   */\n+  public RespondingGatewaySendAlertMessageType getRequest() {\n+    return request;\n+  }\n \n-    /**\n-     * @param request SendAlertMessage Request.\n-     */\n-    public void setRequest(RespondingGatewaySendAlertMessageType request) {\n-        this.request = request;\n-    }\n+  /**\n+   * @param request SendAlertMessage Request.\n+   */\n+  public void setRequest(RespondingGatewaySendAlertMessageType request) {\n+    this.request = request;\n+  }\n \n-    /**\n-     * @return NhinTargetSystem targetSystem.\n-     */\n-    public NhinTargetSystemType getTargetSystem() {\n-        return targetSystem;\n-    }\n+  /**\n+   * @return NhinTargetSystem targetSystem.\n+   */\n+  public NhinTargetSystemType getTargetSystem() {\n+    return targetSystem;\n+  }\n \n-    /**\n-     * @param targetSystem NhinTargetSystemType targetSystem received.\n-     */\n-    public void setTargetSystem(NhinTargetSystemType targetSystem) {\n-        this.targetSystem = targetSystem;\n-    }\n+  /**\n+   * @param targetSystem NhinTargetSystemType targetSystem received.\n+   */\n+  public void setTargetSystem(NhinTargetSystemType targetSystem) {\n+    this.targetSystem = targetSystem;\n+  }\n \n-    /** This method gets and sets assertion,request and target info from orchestartable message.\n-     * @param message outboundOrchestratable message.\n-     */\n-    public void init(OutboundOrchestratable message) {\n-        setAssertionType(message.getAssertion());\n-        setRequest(((OutboundAdminDistributionOrchestratable) message).getRequest());\n-        setTargetSystem(((OutboundAdminDistributionOrchestratable) message).getTarget());\n-    }\n+  /**\n+   * This method gets and sets assertion,request and target info from orchestartable message.\n+   *\n+   * @param message outboundOrchestratable message.\n+   */\n+  public void init(OutboundOrchestratable message) {\n+    setAssertionType(message.getAssertion());\n+    setRequest(((OutboundAdminDistributionOrchestratable) message).getRequest());\n+    setTargetSystem(((OutboundAdminDistributionOrchestratable) message).getTarget());\n+  }\n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/640/OutboundAdminDistributionOrchestrationContextBuilder.java\nindex d27579144fc..7e217f7f6e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -117,4 +118,4 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n         setRequest(((OutboundAdminDistributionOrchestratable) message).getRequest());\n         setTargetSystem(((OutboundAdminDistributionOrchestratable) message).getTarget());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/640/OutboundAdminDistributionOrchestrationContextBuilder.java\nindex d27579144fc..0b3c607dba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n@@ -39,6 +39,8 @@ import gov.hhs.fha.nhinc.orchestration.OutboundOrchestratable;\n  *\n  * @author nnguyen\n  */\n+\n+\n public abstract class OutboundAdminDistributionOrchestrationContextBuilder implements OrchestrationContextBuilder {\n \n     private RespondingGatewaySendAlertMessageType request;\n@@ -50,12 +52,16 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n      * Implement OrchestrationContext build() in the implemntation classes.\n      * @return OrchestrationContext.\n      */\n+\n+\n     @Override\n     public abstract OrchestrationContext build();\n \n     /**\n      * @return assertionType AssertionType assertionType received.\n      */\n+\n+\n     public AssertionType getAssertionType() {\n         return assertionType;\n     }\n@@ -63,6 +69,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @param assertionType AssertionType assertionType received.\n      */\n+\n+\n     public void setAssertionType(AssertionType assertionType) {\n         this.assertionType = assertionType;\n     }\n@@ -70,6 +78,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @return nhinDelegate.\n      */\n+\n+\n     public OutboundDelegate getNhinDelegate() {\n         return nhinDelegate;\n     }\n@@ -77,6 +87,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @param nhinDelegate OutboundDelegate nhinDelegate received.\n      */\n+\n+\n     public void setNhinDelegate(OutboundDelegate nhinDelegate) {\n         this.nhinDelegate = nhinDelegate;\n     }\n@@ -84,6 +96,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @return SendAlertMessage received.\n      */\n+\n+\n     public RespondingGatewaySendAlertMessageType getRequest() {\n         return request;\n     }\n@@ -91,6 +105,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @param request SendAlertMessage Request.\n      */\n+\n+\n     public void setRequest(RespondingGatewaySendAlertMessageType request) {\n         this.request = request;\n     }\n@@ -98,6 +114,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @return NhinTargetSystem targetSystem.\n      */\n+\n+\n     public NhinTargetSystemType getTargetSystem() {\n         return targetSystem;\n     }\n@@ -105,6 +123,8 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /**\n      * @param targetSystem NhinTargetSystemType targetSystem received.\n      */\n+\n+\n     public void setTargetSystem(NhinTargetSystemType targetSystem) {\n         this.targetSystem = targetSystem;\n     }\n@@ -112,9 +132,14 @@ public abstract class OutboundAdminDistributionOrchestrationContextBuilder imple\n     /** This method gets and sets assertion,request and target info from orchestartable message.\n      * @param message outboundOrchestratable message.\n      */\n+\n+\n     public void init(OutboundOrchestratable message) {\n         setAssertionType(message.getAssertion());\n-        setRequest(((OutboundAdminDistributionOrchestratable) message).getRequest());\n-        setTargetSystem(((OutboundAdminDistributionOrchestratable) message).getTarget());\n+        setRequest(((OutboundAdminDistributionOrchestratable)\n+                        message ).getRequest());\n+        setTargetSystem(((OutboundAdminDistributionOrchestratable)\n+                             message ).getTarget());\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/640/OutboundAdminDistributionOrchestrationContextBuilder.java\nindex d27579144fc..0eba573821c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/640/OutboundAdminDistributionOrchestrationContextBuilder.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admindistribution.entity;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;\n import gov.hhs.fha.nhinc.common.nhinccommonentity.RespondingGatewaySendAlertMessageType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
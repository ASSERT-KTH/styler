{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "147",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    if (getPort() == 0) {\n      LOGGER.warn(\n          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n      return;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "column": "141",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/147/RestServletInitializer.java\nindex 0055c5b0b58..670bada47da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/147/RestServletInitializer.java\n@@ -48,8 +48,7 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n       LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\"); return ;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/147/RestServletInitializer.java\nindex 0055c5b0b58..da30d6b1e97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/147/RestServletInitializer.java\n@@ -66,4 +66,4 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n       throw new ServletException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/147/RestServletInitializer.java\nindex 0055c5b0b58..36d70b64b0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/147/RestServletInitializer.java\n@@ -19,10 +19,8 @@ package org.apache.servicecomb.springboot.starter.transport;\n \n import java.io.IOException;\n import java.net.ServerSocket;\n-\n import javax.servlet.ServletContext;\n import javax.servlet.ServletException;\n-\n import org.apache.commons.configuration.Configuration;\n import org.apache.servicecomb.transport.rest.servlet.RestServletInjector;\n import org.apache.servicecomb.transport.rest.servlet.ServletConfig;\n@@ -33,37 +31,36 @@ import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedSer\n import org.springframework.boot.web.servlet.ServletContextInitializer;\n import org.springframework.stereotype.Component;\n import org.springframework.util.StringUtils;\n-\n import com.netflix.config.DynamicPropertyFactory;\n \n @Component\n // extends from AbstractConfigurableEmbeddedServletContainer, only want to get embed web container's port and address\n // when org.springframework.web.context.ServletContextAware invoked, ServletContext already rejected to addServlet\n // should implements org.springframework.boot.web.servlet.ServletContextInitializer to inject servlet\n-public class RestServletInitializer extends AbstractConfigurableEmbeddedServletContainer\n-    implements ServletContextInitializer {\n+public class RestServletInitializer extends AbstractConfigurableEmbeddedServletContainer implements ServletContextInitializer {\n   private static final Logger LOGGER = LoggerFactory.getLogger(RestServletInitializer.class);\n \n   @Override\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n-      LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n+      LOGGER.warn(\"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n       return;\n     }\n \n     // web container did not did listen now.\n     // so mock to listen, and then close.\n+\n     try (ServerSocket ss = new ServerSocket(getPort(), 0, getAddress())) {\n       if (StringUtils.isEmpty(ServletConfig.getServletUrlPattern())) {\n         // ensure the servlet will be instantiated\n         Configuration configuration = (Configuration) DynamicPropertyFactory.getBackingConfigurationSource();\n         configuration.setProperty(ServletConfig.KEY_SERVLET_URL_PATTERN, ServletConfig.DEFAULT_URL_PATTERN);\n       }\n+\n       RestServletInjector.defaultInject(servletContext);\n       ServletUtils.saveUrlPrefix(servletContext);\n     } catch (IOException e) {\n       throw new ServletException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "column": "134",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "51",
                    "column": "134",
                    "severity": "warning",
                    "message": "'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/147/RestServletInitializer.java\nindex 0055c5b0b58..34b3198d1b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/147/RestServletInitializer.java\n@@ -48,8 +48,7 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n       LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");return;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "column": "141",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/147/RestServletInitializer.java\nindex 0055c5b0b58..670bada47da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/147/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/147/RestServletInitializer.java\n@@ -48,8 +48,7 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n       LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\"); return ;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
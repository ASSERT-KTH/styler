{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "82",
                "severity": "error",
                "message": "'}' at column 82 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "82",
                    "severity": "error",
                    "message": "'}' at column 82 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\nindex e6b60af5002..2cd8e197941 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n@@ -16,13 +16,14 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n     implements ConstraintValidator<SetHasBeenReleasedBeforeOnlyOnce, DataAcquisitionProject> {\n \n   private final DataAcquisitionProjectRepository dataAcquisitionProjectRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {}\n+  public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -31,27 +32,27 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n    */\n   @Override\n   public boolean isValid(DataAcquisitionProject value, ConstraintValidatorContext context) {\n-    \n+\n     //No id, no validation\n     if (value.getId() == null) {\n       return true;\n     }\n-    \n-    DataAcquisitionProject oldProjectState = \n+\n+    DataAcquisitionProject oldProjectState =\n         this.dataAcquisitionProjectRepository.findById(value.getId())\n-        .orElse(null);\n+            .orElse(null);\n \n     //No old version. Project will be saved the first time\n     if (oldProjectState == null) {\n       return true;\n     }\n-    \n+\n     //it is not allowed to set the has been released before to false, if it was true before\n     if (oldProjectState.getHasBeenReleasedBefore() && !value.getHasBeenReleasedBefore()) {\n       return false;\n     }\n-    \n+\n     //all other cases is true\n     return true;\n-  } \n+  }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "82",
                    "severity": "error",
                    "message": "'}' at column 82 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\nindex e6b60af5002..091c5b9df36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n@@ -37,8 +37,7 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n       return true;\n     }\n     \n-    DataAcquisitionProject oldProjectState = \n-        this.dataAcquisitionProjectRepository.findById(value.getId())\n+    DataAcquisitionProject oldProjectState = this.dataAcquisitionProjectRepository.findById(value.getId())\n         .orElse(null);\n \n     //No old version. Project will be saved the first time\n@@ -54,4 +53,4 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n     //all other cases is true\n     return true;\n   } \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'DataAcquisitionProject' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\nindex e6b60af5002..8a91685169f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.DataAcquisitionProject;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.repository.DataAcquisitionProjectRepository;\n import lombok.RequiredArgsConstructor;\n@@ -11,35 +10,40 @@ import lombok.RequiredArgsConstructor;\n  * Ensure that there is enough information to display a histogram\n  * for ratio variables.\n  */\n-@RequiredArgsConstructor\n-public class SetHasBeenReleasedBeforeOnlyOnceValidator\n-    implements ConstraintValidator<SetHasBeenReleasedBeforeOnlyOnce, DataAcquisitionProject> {\n \n+\n+@RequiredArgsConstructor\n+public class SetHasBeenReleasedBeforeOnlyOnceValidator implements ConstraintValidator<SetHasBeenReleasedBeforeOnlyOnce,\n+DataAcquisitionProject> {\n   private final DataAcquisitionProjectRepository dataAcquisitionProjectRepository;\n   \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {}\n+  public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(\n    * java.lang.Object, javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(DataAcquisitionProject value, ConstraintValidatorContext context) {\n+  public boolean isValid(DataAcquisitionProject value,\n+    ConstraintValidatorContext context) {\n     \n     //No id, no validation\n     if (value.getId() == null) {\n       return true;\n     }\n-    \n-    DataAcquisitionProject oldProjectState = \n-        this.dataAcquisitionProjectRepository.findById(value.getId())\n-        .orElse(null);\n+    DataAcquisitionProject oldProjectState = this.dataAcquisitionProjectRepository.findById(value.getId())\n+                                                 .orElse(null);\n \n     //No old version. Project will be saved the first time\n     if (oldProjectState == null) {\n@@ -52,6 +56,7 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n     }\n     \n     //all other cases is true\n+\n     return true;\n-  } \n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "82",
                    "severity": "error",
                    "message": "'}' at column 82 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "82",
                    "severity": "error",
                    "message": "'}' at column 82 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\nindex e6b60af5002..a41ea55972e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/22/SetHasBeenReleasedBeforeOnlyOnceValidator.java\n@@ -23,7 +23,6 @@ public class SetHasBeenReleasedBeforeOnlyOnceValidator\n    */\n   @Override\n   public void initialize(SetHasBeenReleasedBeforeOnlyOnce constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-metron",
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.metron.solr.dao;\n\nimport static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/10/SolrDao.java\nindex d4617927ece..74f196efcc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/10/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/10/SolrDao.java\nindex d4617927ece..2421448b4a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/10/SolrDao.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n@@ -62,11 +63,11 @@ public class SolrDao implements IndexDao {\n   private AccessConfig accessConfig;\n \n   protected SolrDao(SolrClient client,\n-      AccessConfig config,\n-      SolrSearchDao solrSearchDao,\n-      SolrUpdateDao solrUpdateDao,\n-      SolrRetrieveLatestDao retrieveLatestDao,\n-      SolrColumnMetadataDao solrColumnMetadataDao) {\n+                    AccessConfig config,\n+                    SolrSearchDao solrSearchDao,\n+                    SolrUpdateDao solrUpdateDao,\n+                    SolrRetrieveLatestDao retrieveLatestDao,\n+                    SolrColumnMetadataDao solrColumnMetadataDao) {\n     this.client = client;\n     this.accessConfig = config;\n     this.solrSearchDao = solrSearchDao;\n@@ -126,7 +127,7 @@ public class SolrDao implements IndexDao {\n \n   @Override\n   public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n+                    Optional<Long> timestamp)\n       throws OriginalNotFoundException, IOException {\n     solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/10/SolrDao.java\nindex d4617927ece..98b267ef097 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/10/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n@@ -60,8 +61,7 @@ public class SolrDao implements IndexDao {\n   private ColumnMetadataDao solrColumnMetadataDao;\n \n   private AccessConfig accessConfig;\n-\n-  protected SolrDao(SolrClient client,\n+protected SolrDao(SolrClient client,\n       AccessConfig config,\n       SolrSearchDao solrSearchDao,\n       SolrUpdateDao solrUpdateDao,\n@@ -125,10 +125,8 @@ public class SolrDao implements IndexDao {\n   }\n \n   @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n-    solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n+  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n+  solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n \n   @Override\n@@ -158,8 +156,7 @@ public class SolrDao implements IndexDao {\n    */\n   public List<String> getZkHosts() {\n     Map<String, Object> globalConfig = accessConfig.getGlobalConfigSupplier().get();\n-    return Splitter.on(',').trimResults()\n-        .splitToList((String) globalConfig.getOrDefault(SOLR_ZOOKEEPER, \"\"));\n+    return Splitter.on(',').trimResults().splitToList((String) globalConfig.getOrDefault(SOLR_ZOOKEEPER, \"\"));\n   }\n \n   void enableKerberos() {\n@@ -173,4 +170,4 @@ public class SolrDao implements IndexDao {\n   public SolrSearchDao getSolrUpdateDao() {\n     return solrSearchDao;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/10/SolrDao.java\nindex d4617927ece..23dbda7f721 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/10/SolrDao.java\n@@ -18,7 +18,6 @@\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n-\n import com.google.common.base.Splitter;\n import java.io.IOException;\n import java.lang.invoke.MethodHandles;\n@@ -50,23 +49,18 @@ import org.slf4j.LoggerFactory;\n public class SolrDao implements IndexDao {\n \n   private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n   public static final String ROOT_FIELD = \"_root_\";\n-  public static final String VERSION_FIELD = \"_version_\";\n \n+  public static final String VERSION_FIELD = \"_version_\";\n   private transient SolrClient client;\n   private SolrSearchDao solrSearchDao;\n   private SolrUpdateDao solrUpdateDao;\n   private SolrRetrieveLatestDao solrRetrieveLatestDao;\n   private ColumnMetadataDao solrColumnMetadataDao;\n-\n   private AccessConfig accessConfig;\n \n-  protected SolrDao(SolrClient client,\n-      AccessConfig config,\n-      SolrSearchDao solrSearchDao,\n-      SolrUpdateDao solrUpdateDao,\n-      SolrRetrieveLatestDao retrieveLatestDao,\n-      SolrColumnMetadataDao solrColumnMetadataDao) {\n+  protected SolrDao(SolrClient client, AccessConfig config, SolrSearchDao solrSearchDao, SolrUpdateDao solrUpdateDao, SolrRetrieveLatestDao retrieveLatestDao, SolrColumnMetadataDao solrColumnMetadataDao) {\n     this.client = client;\n     this.accessConfig = config;\n     this.solrSearchDao = solrSearchDao;\n@@ -125,9 +119,7 @@ public class SolrDao implements IndexDao {\n   }\n \n   @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n+  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n     solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n \n@@ -140,6 +132,7 @@ public class SolrDao implements IndexDao {\n    * Builds a Solr client using the ZK hosts from the global config.\n    * @return SolrClient\n    */\n+\n   public SolrClient getSolrClient() {\n     return new CloudSolrClient.Builder().withZkHost(getZkHosts()).build();\n   }\n@@ -148,6 +141,7 @@ public class SolrDao implements IndexDao {\n    * Builds a Solr client using the ZK hosts specified.\n    * @return SolrClient\n    */\n+\n   public SolrClient getSolrClient(List<String> zkHosts) {\n     return new CloudSolrClient.Builder().withZkHost(zkHosts).build();\n   }\n@@ -156,10 +150,10 @@ public class SolrDao implements IndexDao {\n    * Get ZK hosts from the global config.\n    * @return List of ZkHosts\n    */\n+\n   public List<String> getZkHosts() {\n     Map<String, Object> globalConfig = accessConfig.getGlobalConfigSupplier().get();\n-    return Splitter.on(',').trimResults()\n-        .splitToList((String) globalConfig.getOrDefault(SOLR_ZOOKEEPER, \"\"));\n+    return Splitter.on(',').trimResults().splitToList((String) globalConfig.getOrDefault(SOLR_ZOOKEEPER,\"\"));\n   }\n \n   void enableKerberos() {\n@@ -173,4 +167,4 @@ public class SolrDao implements IndexDao {\n   public SolrSearchDao getSolrUpdateDao() {\n     return solrSearchDao;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/10/SolrDao.java\nindex d4617927ece..74f196efcc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/10/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/10/SolrDao.java\nindex d4617927ece..74f196efcc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/10/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/10/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import static org.apache.metron.solr.SolrConstants.SOLR_ZOOKEEPER;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
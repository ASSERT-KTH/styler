{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void testNotInLoadList() {\n    MagikCheck check = new FileNotInLoadListCheck();\n    Path path = Paths.get(\"src/test/resources/test_product/test_module/source/not_in_load_list.magik\");\n    List<MagikIssue> issues = runFileCheck(path, check);\n    assertThat(issues).isNotEmpty();\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/4/FileNotInLoadListCheckTest.java\nindex 26ee866deb2..211bd6f4dea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/4/FileNotInLoadListCheckTest.java\n@@ -15,7 +15,8 @@ public class FileNotInLoadListCheckTest extends MagikCheckTestBase {\n   @Test\n   public void testNotInLoadList() {\n     MagikCheck check = new FileNotInLoadListCheck();\n-    Path path = Paths.get(\"src/test/resources/test_product/test_module/source/not_in_load_list.magik\");\n+    Path path =\n+        Paths.get(\"src/test/resources/test_product/test_module/source/not_in_load_list.magik\");\n     List<MagikIssue> issues = runFileCheck(path, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/4/FileNotInLoadListCheckTest.java\nindex 26ee866deb2..02dede1330d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/4/FileNotInLoadListCheckTest.java\n@@ -28,4 +28,4 @@ public class FileNotInLoadListCheckTest extends MagikCheckTestBase {\n     assertThat(issues).isEmpty();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/4/FileNotInLoadListCheckTest.java\nindex 26ee866deb2..496b3d63786 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/4/FileNotInLoadListCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/4/FileNotInLoadListCheckTest.java\n@@ -1,17 +1,14 @@\n package org.stevenlooman.sw.magik.checks;\n \n import static org.fest.assertions.Assertions.assertThat;\n-\n import org.junit.Test;\n import org.stevenlooman.sw.magik.MagikCheck;\n import org.stevenlooman.sw.magik.MagikIssue;\n-\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.List;\n \n public class FileNotInLoadListCheckTest extends MagikCheckTestBase {\n-\n   @Test\n   public void testNotInLoadList() {\n     MagikCheck check = new FileNotInLoadListCheck();\n@@ -27,5 +24,4 @@ public class FileNotInLoadListCheckTest extends MagikCheckTestBase {\n     List<MagikIssue> issues = runFileCheck(path, check);\n     assertThat(issues).isEmpty();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
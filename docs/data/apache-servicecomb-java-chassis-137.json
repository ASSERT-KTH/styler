{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "137",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "66",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n\n  private boolean scanRestController = restControllerCls != null &&\n      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n\n  public List<ProducerMeta> getProducerMetaList() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/137/RestProducers.java\nindex 16d2cf93bb2..742604a529f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/137/RestProducers.java\n@@ -38,8 +38,8 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null\n+      && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "66",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/137/RestProducers.java\nindex 16d2cf93bb2..1c230276300 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/137/RestProducers.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.provider.rest.common;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/137/RestProducers.java\nindex 16d2cf93bb2..cc656bbf839 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/137/RestProducers.java\n@@ -38,8 +38,7 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n@@ -76,4 +75,4 @@ public class RestProducers implements BeanPostProcessor {\n       producerMetaList.add(producerMeta);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/137/RestProducers.java\nindex 16d2cf93bb2..d02a1babc08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/137/RestProducers.java\n@@ -19,7 +19,6 @@ package org.apache.servicecomb.provider.rest.common;\n import java.lang.annotation.Annotation;\n import java.util.ArrayList;\n import java.util.List;\n-\n import org.apache.servicecomb.common.rest.RestConst;\n import org.apache.servicecomb.core.provider.producer.ProducerMeta;\n import org.apache.servicecomb.foundation.common.utils.BeanUtils;\n@@ -27,7 +26,6 @@ import org.apache.servicecomb.foundation.common.utils.ReflectUtils;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.config.BeanPostProcessor;\n import org.springframework.stereotype.Component;\n-\n import com.netflix.config.DynamicPropertyFactory;\n \n @Component\n@@ -35,11 +33,10 @@ public class RestProducers implements BeanPostProcessor {\n   private List<ProducerMeta> producerMetaList = new ArrayList<>();\n \n   @SuppressWarnings(\"unchecked\")\n-  private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n-      .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n+  private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils.getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true)\n+                                                                                                        .get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n@@ -53,7 +50,6 @@ public class RestProducers implements BeanPostProcessor {\n   @Override\n   public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\n     processProvider(beanName, bean);\n-\n     return bean;\n   }\n \n@@ -64,6 +60,7 @@ public class RestProducers implements BeanPostProcessor {\n     if (beanCls == null) {\n       return;\n     }\n+\n     RestSchema restSchema = beanCls.getAnnotation(RestSchema.class);\n     if (restSchema != null) {\n       ProducerMeta producerMeta = new ProducerMeta(restSchema.schemaId(), bean);\n@@ -76,4 +73,4 @@ public class RestProducers implements BeanPostProcessor {\n       producerMetaList.add(producerMeta);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "66",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/137/RestProducers.java\nindex 16d2cf93bb2..742604a529f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/137/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/137/RestProducers.java\n@@ -38,8 +38,8 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null\n+      && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "116",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "9",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        if (installLocation == null) {\n            // check if we debugging eclipse and see classpath of the findbugs core project \n        \tBundle bundle2 = Platform.getBundle(\"findbugs\");\n            if(bundle2 != null){\n                installLocation = bundle2.getEntry(libName);\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/116/AnnotationClasspathInitializer.java\nindex 82c66f40e53..fffad18e84e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/116/AnnotationClasspathInitializer.java\n@@ -50,7 +50,7 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         URL installLocation = bundle.getEntry(libName);\n         if (installLocation == null) {\n             // check if we debugging eclipse and see classpath of the findbugs core project \n-        \tBundle bundle2 = Platform.getBundle(\"findbugs\");\n+        Bundle bundle2 = Platform.getBundle(\"findbugs\");\n             if(bundle2 != null){\n                 installLocation = bundle2.getEntry(libName);\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/116/AnnotationClasspathInitializer.java\nindex 82c66f40e53..c870fe29b48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/116/AnnotationClasspathInitializer.java\n@@ -50,12 +50,12 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         URL installLocation = bundle.getEntry(libName);\n         if (installLocation == null) {\n             // check if we debugging eclipse and see classpath of the findbugs core project \n-        \tBundle bundle2 = Platform.getBundle(\"findbugs\");\n-            if(bundle2 != null){\n+            Bundle bundle2 = Platform.getBundle(\"findbugs\");\n+            if (bundle2 != null) {\n                 installLocation = bundle2.getEntry(libName);\n             }\n-            \n-            if(installLocation == null){\n+\n+            if (installLocation == null) {\n                 FindbugsPlugin.getDefault().logError(\"Library not found in plugin: \" + libName);\n                 return null;\n             }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/116/AnnotationClasspathInitializer.java\nindex 82c66f40e53..4733d0aba8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/116/AnnotationClasspathInitializer.java\n@@ -3,7 +3,6 @@ package de.tobject.findbugs;\n import java.io.File;\n import java.io.IOException;\n import java.net.URL;\n-\n import org.eclipse.core.runtime.FileLocator;\n import org.eclipse.core.runtime.Path;\n import org.eclipse.core.runtime.Platform;\n@@ -13,7 +12,6 @@ import org.eclipse.jdt.core.JavaModelException;\n import org.osgi.framework.Bundle;\n \n public class AnnotationClasspathInitializer extends ClasspathVariableInitializer {\n-\n     private static final String FINDBUGS_ANNOTATIONS = \"FINDBUGS_ANNOTATIONS\";\n \n     private static final String JSR305_ANNOTATIONS = \"JSR305_ANNOTATIONS\";\n@@ -34,6 +32,7 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         setVariable(fullPath, JSR305_ANNOTATIONS);\n     }\n \n+\n     private void setVariable(String fullPath, String variableName) {\n         if (fullPath == null) {\n             FindbugsPlugin.getDefault().logError(\"unable to find path for variable: \" + variableName);\n@@ -46,16 +45,16 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         }\n     }\n \n+\n     private String getLibraryPath(Bundle bundle, String libName) {\n         URL installLocation = bundle.getEntry(libName);\n         if (installLocation == null) {\n             // check if we debugging eclipse and see classpath of the findbugs core project \n-        \tBundle bundle2 = Platform.getBundle(\"findbugs\");\n-            if(bundle2 != null){\n+            Bundle bundle2 = Platform.getBundle(\"findbugs\");\n+            if (bundle2 != null) {\n                 installLocation = bundle2.getEntry(libName);\n             }\n-            \n-            if(installLocation == null){\n+            if (installLocation == null) {\n                 FindbugsPlugin.getDefault().logError(\"Library not found in plugin: \" + libName);\n                 return null;\n             }\n@@ -69,5 +68,4 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         }\n         return fullPath;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/116/AnnotationClasspathInitializer.java\nindex 82c66f40e53..fffad18e84e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/116/AnnotationClasspathInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/116/AnnotationClasspathInitializer.java\n@@ -50,7 +50,7 @@ public class AnnotationClasspathInitializer extends ClasspathVariableInitializer\n         URL installLocation = bundle.getEntry(libName);\n         if (installLocation == null) {\n             // check if we debugging eclipse and see classpath of the findbugs core project \n-        \tBundle bundle2 = Platform.getBundle(\"findbugs\");\n+        Bundle bundle2 = Platform.getBundle(\"findbugs\");\n             if(bundle2 != null){\n                 installLocation = bundle2.getEntry(libName);\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_three_grams"
    ]
}
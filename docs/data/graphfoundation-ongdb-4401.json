{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4401",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4401/ZonedDateTimeLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4401/ZonedDateTimeLayout.java\nindex 132a8932a5b..e5e027bcff0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4401/ZonedDateTimeLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4401/ZonedDateTimeLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.Layout;\n@@ -27,99 +28,96 @@ import org.neo4j.io.pagecache.PageCursor;\n  */\n class ZonedDateTimeLayout extends SchemaLayout<ZonedDateTimeSchemaKey>\n {\n-    // A 1 signals a named time zone is stored, a 0 that an offset is stored\n-    private static final int ZONE_ID_FLAG = 0x0100_0000;\n-    // Mask for offsets to remove to not collide with the flag for negative numbers\n-    // It is 24 bits which allows to store all possible minute offsets\n-    private static final int ZONE_ID_MASK = 0x00FF_FFFF;\n-    // This is used to determine if the value is negative (after applying the bitmask)\n-    private static final int ZONE_ID_HIGH = 0x0080_0000;\n-    // This is ised to restore masked negative offsets to their real value\n-    private static final int ZONE_ID_EXT =  0xFF00_0000;\n+  // A 1 signals a named time zone is stored, a 0 that an offset is stored\n+  private static final int ZONE_ID_FLAG = 0x0100_0000;\n+  // Mask for offsets to remove to not collide with the flag for negative numbers\n+  // It is 24 bits which allows to store all possible minute offsets\n+  private static final int ZONE_ID_MASK = 0x00FF_FFFF;\n+  // This is used to determine if the value is negative (after applying the bitmask)\n+  private static final int ZONE_ID_HIGH = 0x0080_0000;\n+  // This is ised to restore masked negative offsets to their real value\n+  private static final int ZONE_ID_EXT = 0xFF00_0000;\n \n-    ZonedDateTimeLayout()\n-    {\n-        super( \"Tdt\", 0, 1 );\n-    }\n+  ZonedDateTimeLayout()\n+  {\n+    super(\"Tdt\", 0, 1);\n+  }\n \n-    @Override\n-    public ZonedDateTimeSchemaKey newKey()\n-    {\n-        return new ZonedDateTimeSchemaKey();\n-    }\n+  @Override\n+  public ZonedDateTimeSchemaKey newKey()\n+  {\n+    return new ZonedDateTimeSchemaKey();\n+  }\n \n-    @Override\n-    public ZonedDateTimeSchemaKey copyKey( ZonedDateTimeSchemaKey key, ZonedDateTimeSchemaKey into )\n-    {\n-        into.epochSecondUTC = key.epochSecondUTC;\n-        into.nanoOfSecond = key.nanoOfSecond;\n-        into.zoneId = key.zoneId;\n-        into.zoneOffsetSeconds = key.zoneOffsetSeconds;\n-        into.setEntityId( key.getEntityId() );\n-        into.setCompareId( key.getCompareId() );\n-        return into;\n-    }\n+  @Override\n+  public ZonedDateTimeSchemaKey copyKey(ZonedDateTimeSchemaKey key, ZonedDateTimeSchemaKey into)\n+  {\n+    into.epochSecondUTC = key.epochSecondUTC;\n+    into.nanoOfSecond = key.nanoOfSecond;\n+    into.zoneId = key.zoneId;\n+    into.zoneOffsetSeconds = key.zoneOffsetSeconds;\n+    into.setEntityId(key.getEntityId());\n+    into.setCompareId(key.getCompareId());\n+    return into;\n+  }\n \n-    @Override\n-    public int keySize( ZonedDateTimeSchemaKey key )\n-    {\n-        return ZonedDateTimeSchemaKey.SIZE;\n-    }\n+  @Override\n+  public int keySize(ZonedDateTimeSchemaKey key)\n+  {\n+    return ZonedDateTimeSchemaKey.SIZE;\n+  }\n \n-    @Override\n-    public void writeKey( PageCursor cursor, ZonedDateTimeSchemaKey key )\n+  @Override\n+  public void writeKey(PageCursor cursor, ZonedDateTimeSchemaKey key)\n+  {\n+    cursor.putLong(key.epochSecondUTC);\n+    cursor.putInt(key.nanoOfSecond);\n+    if (key.zoneId >= 0)\n     {\n-        cursor.putLong( key.epochSecondUTC );\n-        cursor.putInt( key.nanoOfSecond );\n-        if ( key.zoneId >= 0 )\n-        {\n-            cursor.putInt( key.zoneId | ZONE_ID_FLAG );\n-        }\n-        else\n-        {\n-            cursor.putInt( key.zoneOffsetSeconds & ZONE_ID_MASK );\n-        }\n-        cursor.putLong( key.getEntityId() );\n-    }\n-\n-    @Override\n-    public void readKey( PageCursor cursor, ZonedDateTimeSchemaKey into, int keySize )\n+      cursor.putInt(key.zoneId | ZONE_ID_FLAG);\n+    } else\n     {\n-        into.epochSecondUTC = cursor.getLong();\n-        into.nanoOfSecond = cursor.getInt();\n-        int encodedZone = cursor.getInt();\n-        if ( isZoneId( encodedZone ) )\n-        {\n-            into.zoneId = asZoneId( encodedZone );\n-            into.zoneOffsetSeconds = 0;\n-        }\n-        else\n-        {\n-            into.zoneId = -1;\n-            into.zoneOffsetSeconds = asZoneOffset( encodedZone );\n-        }\n-        into.setEntityId( cursor.getLong() );\n+      cursor.putInt(key.zoneOffsetSeconds & ZONE_ID_MASK);\n     }\n+    cursor.putLong(key.getEntityId());\n+  }\n \n-    private int asZoneOffset( int encodedZone )\n+  @Override\n+  public void readKey(PageCursor cursor, ZonedDateTimeSchemaKey into, int keySize)\n+  {\n+    into.epochSecondUTC = cursor.getLong();\n+    into.nanoOfSecond = cursor.getInt();\n+    int encodedZone = cursor.getInt();\n+    if (isZoneId(encodedZone))\n     {\n-        if ( (ZONE_ID_HIGH & encodedZone) == ZONE_ID_HIGH )\n-        {\n-            return ZONE_ID_EXT | encodedZone;\n-        }\n-        else\n-        {\n-            return encodedZone;\n-        }\n-    }\n-\n-    private short asZoneId( int encodedZone )\n+      into.zoneId = asZoneId(encodedZone);\n+      into.zoneOffsetSeconds = 0;\n+    } else\n     {\n-        return (short) ( encodedZone & ZONE_ID_MASK );\n+      into.zoneId = -1;\n+      into.zoneOffsetSeconds = asZoneOffset(encodedZone);\n     }\n+    into.setEntityId(cursor.getLong());\n+  }\n \n-    private boolean isZoneId( int encodedZone )\n+  private int asZoneOffset(int encodedZone)\n+  {\n+    if ((ZONE_ID_HIGH & encodedZone) == ZONE_ID_HIGH)\n+    {\n+      return ZONE_ID_EXT | encodedZone;\n+    } else\n     {\n-        return ( encodedZone & ZONE_ID_FLAG ) != 0;\n+      return encodedZone;\n     }\n+  }\n+\n+  private short asZoneId(int encodedZone)\n+  {\n+    return (short) (encodedZone & ZONE_ID_MASK);\n+  }\n+\n+  private boolean isZoneId(int encodedZone)\n+  {\n+    return (encodedZone & ZONE_ID_FLAG) != 0;\n+  }\n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Stratio-bdt",
    "error_id": "103",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.aspects;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.assertj.core.api.AssertionsForClassTypes.assertThatExceptionOfType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/103/ReplacementAspectTest.java\nindex 6a81cfd72f6..94f09d6ca20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/103/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/103/ReplacementAspectTest.java\nindex 6a81cfd72f6..b6e9d171147 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/103/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -31,7 +32,8 @@ public class ReplacementAspectTest {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"\", pjp)).as(\"Replacing an empty placeholded string should not modify it\").isEqualTo(\"\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"\", pjp))\n+            .as(\"Replacing an empty placeholded string should not modify it\").isEqualTo(\"\");\n     }\n \n     @Test\n@@ -43,13 +45,16 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n \n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(\n+            repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n+        assertThat(\n+            repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n     }\n \n     @Test\n@@ -60,13 +65,22 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV1\", \"33\");\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aA\");\n \n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"AA\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV2}.toUpper\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"|aA.toUpper\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"AA\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV2}.toUpper\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"|aA.toUpper\");\n     }\n \n     @Test\n@@ -83,15 +97,20 @@ public class ReplacementAspectTest {\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toLower}\", pjp)).isEqualTo(\"aa\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toUpper}\", pjp)).isEqualTo(\"AA\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"aA\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33aA\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}:${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33:aA\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}${STRATIOBDD_ENV5}\", pjp))\n+            .isEqualTo(\"33aA\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}:${STRATIOBDD_ENV5}\", pjp))\n+            .isEqualTo(\"33:aA\");\n \n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}\", pjp)).isEqualTo(\"44\");\n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"cC\");\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44cC\");\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}:!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44:cC\");\n+        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}!{STRATIOBDD_ENV7}\", pjp))\n+            .isEqualTo(\"44cC\");\n+        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}:!{STRATIOBDD_ENV7}\", pjp))\n+            .isEqualTo(\"44:cC\");\n \n-        assertThat(repAspect.replacedElement(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n+        assertThat(repAspect.replacedElement(\"@{JSON.schemas/simple1.json}\", pjp))\n+            .isEqualTo(\"{\\\"a\\\":true}\");\n     }\n \n     @Test\n@@ -100,7 +119,8 @@ public class ReplacementAspectTest {\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n \n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n+        assertThatExceptionOfType(Exception.class)\n+            .isThrownBy(() -> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n     }\n \n     @Test\n@@ -110,8 +130,10 @@ public class ReplacementAspectTest {\n         ProceedingJoinPoint pjp = null;\n \n         assertThat(repAspect.replaceCodePlaceholders(\"@{schemas/simple1.json}\", pjp)).isEqualTo(\"\");\n-        assertThat(repAspect.replaceCodePlaceholders(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n+        assertThat(repAspect.replaceCodePlaceholders(\"@{JSON.schemas/simple1.json}\", pjp))\n+            .isEqualTo(\"{\\\"a\\\":true}\");\n+        assertThatExceptionOfType(Exception.class)\n+            .isThrownBy(() -> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n     }\n \n     @Test\n@@ -122,10 +144,12 @@ public class ReplacementAspectTest {\n         ReplacementAspect repAspect = new ReplacementAspect();\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n \n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect\n+            .replaceEnvironmentPlaceholders(\"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n     }\n \n     @Test\n@@ -136,20 +160,45 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV1\", \"aa\");\n         System.setProperty(\"STRATIOBDD_ENV3\", \"cc\");\n \n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bb\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV4:-dd}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bbdd\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV1}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bbaa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabb\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"AAbbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toUpper:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aaBBcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3.toUpper:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbCC\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb.bb}${STRATIOBDD_ENV3:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabb.bbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa.aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-\\\"\\\"}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"{}\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"[]\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bb\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV4:-dd}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bbdd\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV1}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bbaa\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabb\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1.toUpper}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"AAbbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toUpper:-bb}${STRATIOBDD_ENV3}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aaBBcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3.toUpper:-aa}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabbCC\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb.bb}${STRATIOBDD_ENV3:-aa}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabb.bbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa.aa}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-\\\"\\\"}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"{}\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"[]\");\n     }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/103/ReplacementAspectTest.java\nindex 6a81cfd72f6..185e372ca13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/103/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -152,4 +153,4 @@ public class ReplacementAspectTest {\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"{}\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"[]\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/103/ReplacementAspectTest.java\nindex 6a81cfd72f6..94f09d6ca20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/103/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/103/ReplacementAspectTest.java\nindex 6a81cfd72f6..94f09d6ca20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/103/ReplacementAspectTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/103/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
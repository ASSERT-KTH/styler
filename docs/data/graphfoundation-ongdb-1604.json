{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1604",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1604/ToNetworkStoreWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1604/ToNetworkStoreWriter.java\nindex c9ca0202ffc..d8f6268d763 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1604/ToNetworkStoreWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1604/ToNetworkStoreWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -32,41 +33,41 @@ import org.neo4j.kernel.monitoring.Monitors;\n \n public class ToNetworkStoreWriter implements StoreWriter\n {\n-    public static final String STORE_COPIER_MONITOR_TAG = \"storeCopier\";\n+  public static final String STORE_COPIER_MONITOR_TAG = \"storeCopier\";\n \n-    private final ChannelBuffer targetBuffer;\n-    private final ByteCounterMonitor bufferMonitor;\n+  private final ChannelBuffer targetBuffer;\n+  private final ByteCounterMonitor bufferMonitor;\n \n-    public ToNetworkStoreWriter( ChannelBuffer targetBuffer, Monitors monitors )\n-    {\n-        this.targetBuffer = targetBuffer;\n-        bufferMonitor = monitors.newMonitor( ByteCounterMonitor.class, getClass(), STORE_COPIER_MONITOR_TAG );\n-    }\n+  public ToNetworkStoreWriter(ChannelBuffer targetBuffer, Monitors monitors)\n+  {\n+    this.targetBuffer = targetBuffer;\n+    bufferMonitor = monitors.newMonitor(ByteCounterMonitor.class, getClass(), STORE_COPIER_MONITOR_TAG);\n+  }\n \n-    @Override\n-    public long write( String path, ReadableByteChannel data, ByteBuffer temporaryBuffer,\n-            boolean hasData, int requiredElementAlignment ) throws IOException\n+  @Override\n+  public long write(String path, ReadableByteChannel data, ByteBuffer temporaryBuffer,\n+                    boolean hasData, int requiredElementAlignment) throws IOException\n+  {\n+    char[] chars = path.toCharArray();\n+    targetBuffer.writeShort(chars.length);\n+    Protocol.writeChars(targetBuffer, chars);\n+    targetBuffer.writeByte(hasData ? 1 : 0);\n+    // TODO Make use of temporaryBuffer?\n+    BlockLogBuffer buffer = new BlockLogBuffer(targetBuffer, bufferMonitor);\n+    long totalWritten = Short.BYTES + chars.length * Character.BYTES + Byte.BYTES;\n+    if (hasData)\n     {\n-        char[] chars = path.toCharArray();\n-        targetBuffer.writeShort( chars.length );\n-        Protocol.writeChars( targetBuffer, chars );\n-        targetBuffer.writeByte( hasData ? 1 : 0 );\n-        // TODO Make use of temporaryBuffer?\n-        BlockLogBuffer buffer = new BlockLogBuffer( targetBuffer, bufferMonitor );\n-        long totalWritten = Short.BYTES + chars.length * Character.BYTES + Byte.BYTES;\n-        if ( hasData )\n-        {\n-            targetBuffer.writeInt( requiredElementAlignment );\n-            totalWritten += Integer.BYTES;\n-            totalWritten += buffer.write( data );\n-            buffer.close();\n-        }\n-        return totalWritten;\n+      targetBuffer.writeInt(requiredElementAlignment);\n+      totalWritten += Integer.BYTES;\n+      totalWritten += buffer.write(data);\n+      buffer.close();\n     }\n+    return totalWritten;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        targetBuffer.writeShort( 0 );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    targetBuffer.writeShort(0);\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1604/ToNetworkStoreWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1604/ToNetworkStoreWriter.java\nindex c9ca0202ffc..51430d2565f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1604/ToNetworkStoreWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1604/ToNetworkStoreWriter.java\n@@ -33,8 +33,7 @@ import org.neo4j.kernel.monitoring.Monitors;\n public class ToNetworkStoreWriter implements StoreWriter\n {\n     public static final String STORE_COPIER_MONITOR_TAG = \"storeCopier\";\n-\n-    private final ChannelBuffer targetBuffer;\n+private final ChannelBuffer targetBuffer;\n     private final ByteCounterMonitor bufferMonitor;\n \n     public ToNetworkStoreWriter( ChannelBuffer targetBuffer, Monitors monitors )\n@@ -46,7 +45,7 @@ public class ToNetworkStoreWriter implements StoreWriter\n     @Override\n     public long write( String path, ReadableByteChannel data, ByteBuffer temporaryBuffer,\n             boolean hasData, int requiredElementAlignment ) throws IOException\n-    {\n+{\n         char[] chars = path.toCharArray();\n         targetBuffer.writeShort( chars.length );\n         Protocol.writeChars( targetBuffer, chars );\n@@ -61,7 +60,8 @@ public class ToNetworkStoreWriter implements StoreWriter\n             totalWritten += buffer.write( data );\n             buffer.close();\n         }\n-        return totalWritten;\n+\n+return totalWritten;\n     }\n \n     @Override\n@@ -69,4 +69,4 @@ public class ToNetworkStoreWriter implements StoreWriter\n     {\n         targetBuffer.writeShort( 0 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
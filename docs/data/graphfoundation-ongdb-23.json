{
    "project_name": "graphfoundation-ongdb",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/23/LongArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/23/LongArray.java\nindex 25d53307e5e..9cb7f2a7d35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/23/LongArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/23/LongArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -28,120 +29,120 @@ import static java.lang.String.format;\n \n public class LongArray extends IntegralArray\n {\n-    private final long[] value;\n-\n-    LongArray( long[] value )\n-    {\n-        assert value != null;\n-        this.value = value;\n-    }\n-\n-    @Override\n-    public int length()\n-    {\n-        return value.length;\n-    }\n-\n-    @Override\n-    public long longValue( int index )\n-    {\n-        return value[index];\n-    }\n-\n-    @Override\n-    public int computeHash()\n-    {\n-        return NumberValues.hash( value );\n-    }\n-\n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapLongArray( this );\n-    }\n-\n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        return other.equals( value );\n-    }\n-\n-    @Override\n-    public boolean equals( byte[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( short[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( int[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( long[] x )\n-    {\n-        return Arrays.equals( value, x );\n-    }\n-\n-    @Override\n-    public boolean equals( float[] x )\n-    {\n-        return PrimitiveArrayValues.equals( value, x );\n-    }\n-\n-    @Override\n-    public boolean equals( double[] x )\n-    {\n-        return PrimitiveArrayValues.equals( value, x );\n-    }\n-\n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-    {\n-        PrimitiveArrayWriting.writeTo( writer, value );\n-    }\n-\n-    @Override\n-    public long[] asObjectCopy()\n-    {\n-        return value.clone();\n-    }\n-\n-    @Override\n-    public String prettyPrint()\n-    {\n-        return Arrays.toString( value );\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public long[] asObject()\n-    {\n-        return value;\n-    }\n-\n-    @Override\n-    public AnyValue value( int offset )\n-    {\n-        return Values.longValue( longValue( offset ) );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return format( \"%s%s\", getTypeName(), Arrays.toString( value ) );\n-    }\n-\n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"LongArray\";\n-    }\n+  private final long[] value;\n+\n+  LongArray(long[] value)\n+  {\n+    assert value != null;\n+    this.value = value;\n+  }\n+\n+  @Override\n+  public int length()\n+  {\n+    return value.length;\n+  }\n+\n+  @Override\n+  public long longValue(int index)\n+  {\n+    return value[index];\n+  }\n+\n+  @Override\n+  public int computeHash()\n+  {\n+    return NumberValues.hash(value);\n+  }\n+\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapLongArray(this);\n+  }\n+\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    return other.equals(value);\n+  }\n+\n+  @Override\n+  public boolean equals(byte[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(short[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(int[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(long[] x)\n+  {\n+    return Arrays.equals(value, x);\n+  }\n+\n+  @Override\n+  public boolean equals(float[] x)\n+  {\n+    return PrimitiveArrayValues.equals(value, x);\n+  }\n+\n+  @Override\n+  public boolean equals(double[] x)\n+  {\n+    return PrimitiveArrayValues.equals(value, x);\n+  }\n+\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    PrimitiveArrayWriting.writeTo(writer, value);\n+  }\n+\n+  @Override\n+  public long[] asObjectCopy()\n+  {\n+    return value.clone();\n+  }\n+\n+  @Override\n+  public String prettyPrint()\n+  {\n+    return Arrays.toString(value);\n+  }\n+\n+  @Override\n+  @Deprecated\n+  public long[] asObject()\n+  {\n+    return value;\n+  }\n+\n+  @Override\n+  public AnyValue value(int offset)\n+  {\n+    return Values.longValue(longValue(offset));\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"%s%s\", getTypeName(), Arrays.toString(value));\n+  }\n+\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"LongArray\";\n+  }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/23/LongArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/23/LongArray.java\nindex 25d53307e5e..2d3e71f9900 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/23/LongArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/23/LongArray.java\n@@ -144,4 +144,4 @@ public class LongArray extends IntegralArray\n     {\n         return \"LongArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
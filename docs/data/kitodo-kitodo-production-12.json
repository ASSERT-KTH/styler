{
    "project_name": "kitodo-kitodo-production",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "warning",
                "message": "Required pattern '\\A/\\*' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "package org.kitodo.production.model.bibliography.course;\n\npublic class IssueController {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/12/IssueController.java\nindex 4faaa88c475..23a48ca3dd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/12/IssueController.java\n@@ -16,10 +16,8 @@ public class IssueController {\n      * Constructor. Creates a new IssueController for the given issue and\n      * sets its index value.\n      *\n-     * @param issue\n-     *            Issue that shall be managed by this controller\n-     * @param index\n-     *            consecutive index of the issue in the block\n+     * @param issue Issue that shall be managed by this controller\n+     * @param index consecutive index of the issue in the block\n      */\n     public IssueController(Issue issue, int index) {\n         this.issue = issue;\n@@ -147,8 +145,7 @@ public class IssueController {\n      * of the read-write property \"friday\" which represents whether the\n      * issue held by this controller regularly appears on Fridays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Fridays\n+     * @param appears whether the issue appears on Fridays\n      */\n     public void setFriday(boolean appears) {\n         if (appears) {\n@@ -163,8 +160,7 @@ public class IssueController {\n      * of the read-write property \"heading\" which represents the issue\u2019s\n      * name.\n      *\n-     * @param heading\n-     *            heading to be used\n+     * @param heading heading to be used\n      */\n     public void setHeading(String heading) {\n         issue.setHeading(heading);\n@@ -175,8 +171,7 @@ public class IssueController {\n      * of the read-write property \"monday\" which represents whether the\n      * issue held by this controller regularly appears on Mondays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Mondays\n+     * @param appears whether the issue appears on Mondays\n      */\n     public void setMonday(boolean appears) {\n         if (appears) {\n@@ -191,8 +186,7 @@ public class IssueController {\n      * of the read-write property \"saturday\" which represents whether the\n      * issue held by this controller regularly appears on Saturdays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Saturdays\n+     * @param appears whether the issue appears on Saturdays\n      */\n     public void setSaturday(boolean appears) {\n         if (appears) {\n@@ -207,8 +201,7 @@ public class IssueController {\n      * of the read-write property \"sunday\" which represents whether the\n      * issue held by this controller regularly appears on Sundays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Sundays\n+     * @param appears whether the issue appears on Sundays\n      */\n     public void setSunday(boolean appears) {\n         if (appears) {\n@@ -223,8 +216,7 @@ public class IssueController {\n      * of the read-write property \"thursday\" which represents whether the\n      * issue held by this controller regularly appears on Thursdays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Thursdays\n+     * @param appears whether the issue appears on Thursdays\n      */\n     public void setThursday(boolean appears) {\n         if (appears) {\n@@ -239,8 +231,7 @@ public class IssueController {\n      * of the read-write property \"tuesday\" which represents whether the\n      * issue held by this controller regularly appears on Tuesdays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Tuesdays\n+     * @param appears whether the issue appears on Tuesdays\n      */\n     public void setTuesday(boolean appears) {\n         if (appears) {\n@@ -255,8 +246,7 @@ public class IssueController {\n      * value of the read-write property \"wednesday\" which represents whether\n      * the issue held by this controller regularly appears on Wednesdays.\n      *\n-     * @param appears\n-     *            whether the issue appears on Wednesdays\n+     * @param appears whether the issue appears on Wednesdays\n      */\n     public void setWednesday(boolean appears) {\n         if (appears) {\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/12/IssueController.java\nindex 4faaa88c475..956627deb7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/12/IssueController.java\n@@ -265,4 +265,4 @@ public class IssueController {\n             issue.removeWednesday();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/12/IssueController.java\nindex 4faaa88c475..b5e178c86ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/12/IssueController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/12/IssueController.java\n@@ -1,15 +1,19 @@\n package org.kitodo.production.model.bibliography.course;\n \n+\n public class IssueController {\n     /**\n      * The field index holds a consecutive index representing its position\n      * in the list of issues held by the block.\n      */\n+\n     protected final int index;\n \n     /**\n      * The field issue holds the issue that is managed by this controller.\n      */\n+\n+\n     protected final Issue issue;\n \n     /**\n@@ -21,6 +25,8 @@ public class IssueController {\n      * @param index\n      *            consecutive index of the issue in the block\n      */\n+\n+\n     public IssueController(Issue issue, int index) {\n         this.issue = issue;\n         this.index = index;\n@@ -30,8 +36,11 @@ public class IssueController {\n      * Deletes the issue wrapped by this controller\n      * from the set of issues held by the block currently showing.\n      */\n+\n+\n     public void deleteClick() {\n         // TODO implement?\n+\n     }\n \n     /**\n@@ -40,6 +49,8 @@ public class IssueController {\n      *\n      * @return the HTML color code of the issue\n      */\n+\n+\n     public String getColour() {\n         return \"\";\n         // TODO implement\n@@ -53,6 +64,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Fridays\n      */\n+\n+\n     public boolean getFriday() {\n         return issue.isFriday();\n     }\n@@ -63,6 +76,8 @@ public class IssueController {\n      *\n      * @return the issue\u2019s name\n      */\n+\n+\n     public String getHeading() {\n         return issue.getHeading();\n     }\n@@ -72,6 +87,8 @@ public class IssueController {\n      *\n      * @return the issue managed by this adapter\n      */\n+\n+\n     public Issue getIssue() {\n         return issue;\n     }\n@@ -83,6 +100,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Mondays\n      */\n+\n+\n     public boolean getMonday() {\n         return issue.isMonday();\n     }\n@@ -94,6 +113,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Saturdays\n      */\n+\n+\n     public boolean getSaturday() {\n         return issue.isSaturday();\n     }\n@@ -105,6 +126,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Sundays\n      */\n+\n+\n     public boolean getSunday() {\n         return issue.isSunday();\n     }\n@@ -116,6 +139,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Thursdays\n      */\n+\n+\n     public boolean getThursday() {\n         return issue.isThursday();\n     }\n@@ -127,6 +152,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Tuesdays\n      */\n+\n+\n     public boolean getTuesday() {\n         return issue.isTuesday();\n     }\n@@ -138,6 +165,8 @@ public class IssueController {\n      *\n      * @return whether the issue appears on Wednesdays\n      */\n+\n+\n     public boolean getWednesday() {\n         return issue.isWednesday();\n     }\n@@ -150,6 +179,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Fridays\n      */\n+\n+\n     public void setFriday(boolean appears) {\n         if (appears) {\n             issue.addFriday();\n@@ -166,6 +197,8 @@ public class IssueController {\n      * @param heading\n      *            heading to be used\n      */\n+\n+\n     public void setHeading(String heading) {\n         issue.setHeading(heading);\n     }\n@@ -178,6 +211,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Mondays\n      */\n+\n+\n     public void setMonday(boolean appears) {\n         if (appears) {\n             issue.addMonday();\n@@ -194,6 +229,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Saturdays\n      */\n+\n+\n     public void setSaturday(boolean appears) {\n         if (appears) {\n             issue.addSaturday();\n@@ -210,6 +247,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Sundays\n      */\n+\n+\n     public void setSunday(boolean appears) {\n         if (appears) {\n             issue.addSunday();\n@@ -226,6 +265,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Thursdays\n      */\n+\n+\n     public void setThursday(boolean appears) {\n         if (appears) {\n             issue.addThursday();\n@@ -242,6 +283,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Tuesdays\n      */\n+\n+\n     public void setTuesday(boolean appears) {\n         if (appears) {\n             issue.addTuesday();\n@@ -258,6 +301,8 @@ public class IssueController {\n      * @param appears\n      *            whether the issue appears on Wednesdays\n      */\n+\n+\n     public void setWednesday(boolean appears) {\n         if (appears) {\n             issue.addWednesday();\n@@ -265,4 +310,4 @@ public class IssueController {\n             issue.removeWednesday();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "warning",
                    "message": "Required pattern '\\A/\\*' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
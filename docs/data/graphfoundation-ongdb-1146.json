{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1146",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "113",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "170",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "269",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "296",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "353",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "368",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "537",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "539",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "549",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1146/LdapRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1146/LdapRealm.java\nindex 9e0257c08f7..259f3da9d65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1146/LdapRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1146/LdapRealm.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import org.apache.shiro.authc.AuthenticationInfo;\n@@ -77,621 +78,603 @@ import static java.lang.String.format;\n  */\n public class LdapRealm extends DefaultLdapRealm implements RealmLifecycle, ShiroAuthorizationInfoProvider\n {\n-    private static final String GROUP_DELIMITER = \";\";\n-    private static final String KEY_VALUE_DELIMITER = \"=\";\n-    private static final String ROLE_DELIMITER = \",\";\n-    public static final String LDAP_REALM = \"ldap\";\n-\n-    private static final String JNDI_LDAP_CONNECT_TIMEOUT = \"com.sun.jndi.ldap.connect.timeout\";\n-    private static final String JNDI_LDAP_READ_TIMEOUT = \"com.sun.jndi.ldap.read.timeout\";\n-    private static final String JNDI_LDAP_CONNECTION_TIMEOUT_MESSAGE_PART = \"timed out\"; // \"connect timed out\"\n-    private static final String JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART = \"timed out\"; // \"LDAP response read timed out\"\n-\n-    public static final String LDAP_CONNECTION_TIMEOUT_CLIENT_MESSAGE = \"LDAP connection timed out.\";\n-    public static final String LDAP_READ_TIMEOUT_CLIENT_MESSAGE = \"LDAP response timed out.\";\n-    public static final String LDAP_AUTHORIZATION_FAILURE_CLIENT_MESSAGE = \"LDAP authorization request failed.\";\n-    public static final String LDAP_CONNECTION_REFUSED_CLIENT_MESSAGE = \"LDAP connection refused.\";\n-\n-    private Boolean authenticationEnabled;\n-    private Boolean authorizationEnabled;\n-    private Boolean useStartTls;\n-    private boolean useSAMAccountName;\n-    private String userSearchBase;\n-    private String userSearchFilter;\n-    private List<String> membershipAttributeNames;\n-    private Boolean useSystemAccountForAuthorization;\n-    private Map<String,Collection<String>> groupToRoleMapping;\n-    private final SecurityLog securityLog;\n-    private final SecureHasher secureHasher;\n-\n-    // Parser regex for group-to-role-mapping\n-    private static final String KEY_GROUP = \"\\\\s*('(.+)'|\\\"(.+)\\\"|(\\\\S)|(\\\\S.*\\\\S))\\\\s*\";\n-    private static final String VALUE_GROUP = \"\\\\s*(.*)\";\n-    private Pattern keyValuePattern = Pattern.compile( KEY_GROUP + KEY_VALUE_DELIMITER + VALUE_GROUP );\n-\n-    public LdapRealm( Config config, SecurityLog securityLog, SecureHasher secureHasher )\n+  private static final String GROUP_DELIMITER = \";\";\n+  private static final String KEY_VALUE_DELIMITER = \"=\";\n+  private static final String ROLE_DELIMITER = \",\";\n+  public static final String LDAP_REALM = \"ldap\";\n+\n+  private static final String JNDI_LDAP_CONNECT_TIMEOUT = \"com.sun.jndi.ldap.connect.timeout\";\n+  private static final String JNDI_LDAP_READ_TIMEOUT = \"com.sun.jndi.ldap.read.timeout\";\n+  private static final String JNDI_LDAP_CONNECTION_TIMEOUT_MESSAGE_PART = \"timed out\"; // \"connect timed out\"\n+  private static final String JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART = \"timed out\"; // \"LDAP response read timed out\"\n+\n+  public static final String LDAP_CONNECTION_TIMEOUT_CLIENT_MESSAGE = \"LDAP connection timed out.\";\n+  public static final String LDAP_READ_TIMEOUT_CLIENT_MESSAGE = \"LDAP response timed out.\";\n+  public static final String LDAP_AUTHORIZATION_FAILURE_CLIENT_MESSAGE = \"LDAP authorization request failed.\";\n+  public static final String LDAP_CONNECTION_REFUSED_CLIENT_MESSAGE = \"LDAP connection refused.\";\n+\n+  private Boolean authenticationEnabled;\n+  private Boolean authorizationEnabled;\n+  private Boolean useStartTls;\n+  private boolean useSAMAccountName;\n+  private String userSearchBase;\n+  private String userSearchFilter;\n+  private List<String> membershipAttributeNames;\n+  private Boolean useSystemAccountForAuthorization;\n+  private Map<String, Collection<String>> groupToRoleMapping;\n+  private final SecurityLog securityLog;\n+  private final SecureHasher secureHasher;\n+\n+  // Parser regex for group-to-role-mapping\n+  private static final String KEY_GROUP = \"\\\\s*('(.+)'|\\\"(.+)\\\"|(\\\\S)|(\\\\S.*\\\\S))\\\\s*\";\n+  private static final String VALUE_GROUP = \"\\\\s*(.*)\";\n+  private Pattern keyValuePattern = Pattern.compile(KEY_GROUP + KEY_VALUE_DELIMITER + VALUE_GROUP);\n+\n+  public LdapRealm(Config config, SecurityLog securityLog, SecureHasher secureHasher)\n+  {\n+    super();\n+    this.securityLog = securityLog;\n+    this.secureHasher = secureHasher;\n+    setName(SecuritySettings.LDAP_REALM_NAME);\n+    setRolePermissionResolver(PredefinedRolesBuilder.rolePermissionResolver);\n+    configureRealm(config);\n+    if (isAuthenticationCachingEnabled())\n     {\n-        super();\n-        this.securityLog = securityLog;\n-        this.secureHasher = secureHasher;\n-        setName( SecuritySettings.LDAP_REALM_NAME );\n-        setRolePermissionResolver( PredefinedRolesBuilder.rolePermissionResolver );\n-        configureRealm( config );\n-        if ( isAuthenticationCachingEnabled() )\n-        {\n-            setCredentialsMatcher( secureHasher.getHashedCredentialsMatcher() );\n-        }\n-        else\n-        {\n-            setCredentialsMatcher( new AllowAllCredentialsMatcher() );\n-        }\n-    }\n-\n-    private String withRealm( String template, Object... args )\n+      setCredentialsMatcher(secureHasher.getHashedCredentialsMatcher());\n+    } else\n     {\n-        return \"{LdapRealm}: \" + format( template, args );\n-    }\n-\n-    private String server( JndiLdapContextFactory jndiLdapContextFactory )\n-    {\n-        return \"'\" + jndiLdapContextFactory.getUrl() + \"'\" +\n-                ( useStartTls ? \" using StartTLS\" : \"\" );\n-    }\n-\n-    @Override\n-    protected AuthenticationInfo queryForAuthenticationInfo( AuthenticationToken token,\n-            LdapContextFactory ldapContextFactory )\n-            throws NamingException\n-    {\n-        if ( authenticationEnabled )\n-        {\n-            if ( useSAMAccountName )\n-            {\n-                return queryForAuthenticationInfoSAM( token, ldapContextFactory );\n-            }\n-            else\n-            {\n-                String serverString = server( (JndiLdapContextFactory) ldapContextFactory );\n-                try\n-                {\n-                    AuthenticationInfo info =\n-                            useStartTls ? queryForAuthenticationInfoUsingStartTls( token, ldapContextFactory )\n-                                        : super.queryForAuthenticationInfo( token, ldapContextFactory );\n-                    securityLog.debug( withRealm( \"Authenticated user '%s' against %s\", token.getPrincipal(),\n-                            serverString ) );\n-                    return info;\n-                }\n-                catch ( Exception e )\n-                {\n-                    if ( isExceptionAnLdapConnectionTimeout( e ) )\n-                    {\n-                        throw new AuthProviderTimeoutException( LDAP_CONNECTION_TIMEOUT_CLIENT_MESSAGE, e );\n-                    }\n-                    else if ( isExceptionAnLdapReadTimeout( e ) )\n-                    {\n-                        throw new AuthProviderTimeoutException( LDAP_READ_TIMEOUT_CLIENT_MESSAGE, e );\n-                    }\n-                    else if ( isExceptionConnectionRefused( e ) )\n-                    {\n-                        throw new AuthProviderFailedException( LDAP_CONNECTION_REFUSED_CLIENT_MESSAGE, e );\n-                    }\n-                    // This exception will be caught and rethrown by Shiro, and then by us, so we do not need to wrap it here\n-                    throw e;\n-                }\n-            }\n-        }\n-        else\n-        {\n-            return null;\n-        }\n+      setCredentialsMatcher(new AllowAllCredentialsMatcher());\n     }\n-\n-    protected AuthenticationInfo queryForAuthenticationInfoUsingStartTls( AuthenticationToken token,\n-            LdapContextFactory ldapContextFactory ) throws NamingException\n+  }\n+\n+  private String withRealm(String template, Object... args)\n+  {\n+    return \"{LdapRealm}: \" + format(template, args);\n+  }\n+\n+  private String server(JndiLdapContextFactory jndiLdapContextFactory)\n+  {\n+    return \"'\" + jndiLdapContextFactory.getUrl() + \"'\" +\n+        (useStartTls ? \" using StartTLS\" : \"\");\n+  }\n+\n+  @Override\n+  protected AuthenticationInfo queryForAuthenticationInfo(AuthenticationToken token,\n+                                                          LdapContextFactory ldapContextFactory)\n+      throws NamingException\n+  {\n+    if (authenticationEnabled)\n     {\n-        Object principal = getLdapPrincipal(token);\n-        Object credentials = token.getCredentials();\n-\n-        LdapContext ctx = null;\n-\n+      if (useSAMAccountName)\n+      {\n+        return queryForAuthenticationInfoSAM(token, ldapContextFactory);\n+      } else\n+      {\n+        String serverString = server((JndiLdapContextFactory) ldapContextFactory);\n         try\n         {\n-            ctx = getLdapContextUsingStartTls( ldapContextFactory, principal, credentials );\n-            return createAuthenticationInfo( token, principal, credentials, ctx );\n-        }\n-        finally\n+          AuthenticationInfo info =\n+              useStartTls ? queryForAuthenticationInfoUsingStartTls(token, ldapContextFactory)\n+                  : super.queryForAuthenticationInfo(token, ldapContextFactory);\n+          securityLog.debug(withRealm(\"Authenticated user '%s' against %s\", token.getPrincipal(),\n+              serverString));\n+          return info;\n+        } catch (Exception e)\n         {\n-            LdapUtils.closeContext( ctx );\n+          if (isExceptionAnLdapConnectionTimeout(e))\n+          {\n+            throw new AuthProviderTimeoutException(LDAP_CONNECTION_TIMEOUT_CLIENT_MESSAGE, e);\n+          } else if (isExceptionAnLdapReadTimeout(e))\n+          {\n+            throw new AuthProviderTimeoutException(LDAP_READ_TIMEOUT_CLIENT_MESSAGE, e);\n+          } else if (isExceptionConnectionRefused(e))\n+          {\n+            throw new AuthProviderFailedException(LDAP_CONNECTION_REFUSED_CLIENT_MESSAGE, e);\n+          }\n+          // This exception will be caught and rethrown by Shiro, and then by us, so we do not need to wrap it here\n+          throw e;\n         }\n+      }\n+    } else\n+    {\n+      return null;\n     }\n+  }\n \n-    private LdapContext getLdapContextUsingStartTls( LdapContextFactory ldapContextFactory,\n-            Object principal, Object credentials ) throws NamingException\n-    {\n-        JndiLdapContextFactory jndiLdapContextFactory = (JndiLdapContextFactory) ldapContextFactory;\n-        Hashtable<String, Object> env = new Hashtable<>();\n-        env.put( Context.INITIAL_CONTEXT_FACTORY, jndiLdapContextFactory.getContextFactoryClassName() );\n-        env.put( Context.PROVIDER_URL, jndiLdapContextFactory.getUrl() );\n+  protected AuthenticationInfo queryForAuthenticationInfoUsingStartTls(AuthenticationToken token,\n+                                                                       LdapContextFactory ldapContextFactory) throws NamingException\n+  {\n+    Object principal = getLdapPrincipal(token);\n+    Object credentials = token.getCredentials();\n \n-        LdapContext ctx = null;\n+    LdapContext ctx = null;\n \n-        try\n-        {\n-            ctx = new InitialLdapContext( env, null );\n+    try\n+    {\n+      ctx = getLdapContextUsingStartTls(ldapContextFactory, principal, credentials);\n+      return createAuthenticationInfo(token, principal, credentials, ctx);\n+    } finally\n+    {\n+      LdapUtils.closeContext(ctx);\n+    }\n+  }\n \n-            StartTlsRequest startTlsRequest = new StartTlsRequest();\n-            StartTlsResponse tls = (StartTlsResponse) ctx.extendedOperation( startTlsRequest );\n+  private LdapContext getLdapContextUsingStartTls(LdapContextFactory ldapContextFactory,\n+                                                  Object principal, Object credentials) throws NamingException\n+  {\n+    JndiLdapContextFactory jndiLdapContextFactory = (JndiLdapContextFactory) ldapContextFactory;\n+    Hashtable<String, Object> env = new Hashtable<>();\n+    env.put(Context.INITIAL_CONTEXT_FACTORY, jndiLdapContextFactory.getContextFactoryClassName());\n+    env.put(Context.PROVIDER_URL, jndiLdapContextFactory.getUrl());\n \n-            tls.negotiate();\n+    LdapContext ctx = null;\n \n-            ctx.addToEnvironment( Context.SECURITY_AUTHENTICATION,\n-                    jndiLdapContextFactory.getAuthenticationMechanism() );\n-            ctx.addToEnvironment( Context.SECURITY_PRINCIPAL, principal );\n-            ctx.addToEnvironment( Context.SECURITY_CREDENTIALS, credentials );\n+    try\n+    {\n+      ctx = new InitialLdapContext(env, null);\n \n-            return ctx;\n-        }\n-        catch ( IOException e )\n-        {\n-            LdapUtils.closeContext( ctx );\n-            securityLog.error( withRealm( \"Failed to negotiate TLS connection with '%s': \",\n-                    server( jndiLdapContextFactory ), e ) );\n-            throw new CommunicationException( e.getMessage() );\n-        }\n-        catch ( Throwable t )\n-        {\n-            LdapUtils.closeContext( ctx );\n-            securityLog.error( withRealm( \"Unexpected failure to negotiate TLS connection with '%s': \",\n-                    server( jndiLdapContextFactory ), t ) );\n-            throw t;\n-        }\n-    }\n+      StartTlsRequest startTlsRequest = new StartTlsRequest();\n+      StartTlsResponse tls = (StartTlsResponse) ctx.extendedOperation(startTlsRequest);\n \n-    @Override\n-    protected AuthorizationInfo queryForAuthorizationInfo( PrincipalCollection principals,\n-            LdapContextFactory ldapContextFactory ) throws NamingException\n-    {\n-        if ( authorizationEnabled )\n-        {\n-            String username = getUsername( principals );\n-            if ( username == null )\n-            {\n-                return null;\n-            }\n+      tls.negotiate();\n \n-            if ( useSystemAccountForAuthorization )\n-            {\n-                // Perform context search using the system context\n-                LdapContext ldapContext = useStartTls ? getSystemLdapContextUsingStartTls( ldapContextFactory ) :\n-                                          ldapContextFactory.getSystemLdapContext();\n-\n-                Set<String> roleNames;\n-                try\n-                {\n-                    roleNames = findRoleNamesForUser( username, ldapContext );\n-                }\n-                finally\n-                {\n-                    LdapUtils.closeContext( ldapContext );\n-                }\n-\n-                return new SimpleAuthorizationInfo( roleNames );\n-            }\n-            else\n-            {\n-                // Authorization info is cached during authentication\n-                Cache<Object,AuthorizationInfo> authorizationCache = getAuthorizationCache();\n-                AuthorizationInfo authorizationInfo = authorizationCache.get( username );\n-                if ( authorizationInfo == null )\n-                {\n-                    // The cached authorization info has expired.\n-                    // Since we do not have the subject's credentials we cannot perform a new LDAP search\n-                    // for authorization info. Instead we need to fail with a special status,\n-                    // so that the client can react by re-authenticating.\n-                    throw new AuthorizationExpiredException( \"LDAP authorization info expired.\" );\n-                }\n-                return authorizationInfo;\n-            }\n-        }\n-        return null;\n-    }\n+      ctx.addToEnvironment(Context.SECURITY_AUTHENTICATION,\n+          jndiLdapContextFactory.getAuthenticationMechanism());\n+      ctx.addToEnvironment(Context.SECURITY_PRINCIPAL, principal);\n+      ctx.addToEnvironment(Context.SECURITY_CREDENTIALS, credentials);\n \n-    private String getUsername( PrincipalCollection principals )\n+      return ctx;\n+    } catch (IOException e)\n     {\n-        String username = null;\n-        Collection ldapPrincipals = principals.fromRealm( getName() );\n-        if ( !ldapPrincipals.isEmpty() )\n-        {\n-            username = (String) ldapPrincipals.iterator().next();\n-        }\n-        else if ( useSystemAccountForAuthorization )\n-        {\n-            username = (String) principals.getPrimaryPrincipal();\n-        }\n-        return username;\n-    }\n-\n-    private LdapContext getSystemLdapContextUsingStartTls( LdapContextFactory ldapContextFactory )\n-            throws NamingException\n+      LdapUtils.closeContext(ctx);\n+      securityLog.error(withRealm(\"Failed to negotiate TLS connection with '%s': \",\n+          server(jndiLdapContextFactory), e));\n+      throw new CommunicationException(e.getMessage());\n+    } catch (Throwable t)\n     {\n-        JndiLdapContextFactory jndiLdapContextFactory = (JndiLdapContextFactory) ldapContextFactory;\n-        return getLdapContextUsingStartTls( ldapContextFactory, jndiLdapContextFactory.getSystemUsername(),\n-                jndiLdapContextFactory.getSystemPassword() );\n+      LdapUtils.closeContext(ctx);\n+      securityLog.error(withRealm(\"Unexpected failure to negotiate TLS connection with '%s': \",\n+          server(jndiLdapContextFactory), t));\n+      throw t;\n     }\n+  }\n \n-    @Override\n-    protected AuthenticationInfo createAuthenticationInfo( AuthenticationToken token, Object ldapPrincipal,\n-            Object ldapCredentials, LdapContext ldapContext )\n-            throws NamingException\n+  @Override\n+  protected AuthorizationInfo queryForAuthorizationInfo(PrincipalCollection principals,\n+                                                        LdapContextFactory ldapContextFactory) throws NamingException\n+  {\n+    if (authorizationEnabled)\n     {\n-        // If authorization is enabled but useSystemAccountForAuthorization is disabled, we should perform\n-        // the search for groups directly here while the user's authenticated ldap context is open.\n-        if ( authorizationEnabled && !useSystemAccountForAuthorization )\n-        {\n-            String username = (String) token.getPrincipal();\n-            Set<String> roleNames = findRoleNamesForUser( username, ldapContext );\n-            cacheAuthorizationInfo( username, roleNames );\n-        }\n-\n-        if ( isAuthenticationCachingEnabled() )\n-        {\n-            SimpleHash hashedCredentials = secureHasher.hash( ((String) token.getCredentials()).getBytes() );\n-            return new ShiroAuthenticationInfo( token.getPrincipal(), hashedCredentials.getBytes(),\n-                    hashedCredentials.getSalt(), getName(), AuthenticationResult.SUCCESS );\n-        }\n-        else\n-        {\n-            return new ShiroAuthenticationInfo( token.getPrincipal(), getName(), AuthenticationResult.SUCCESS );\n-        }\n-    }\n+      String username = getUsername(principals);\n+      if (username == null)\n+      {\n+        return null;\n+      }\n \n-    @Override\n-    public boolean supports( AuthenticationToken token )\n-    {\n-        return supportsSchemeAndRealm( token );\n-    }\n+      if (useSystemAccountForAuthorization)\n+      {\n+        // Perform context search using the system context\n+        LdapContext ldapContext = useStartTls ? getSystemLdapContextUsingStartTls(ldapContextFactory) :\n+            ldapContextFactory.getSystemLdapContext();\n \n-    private boolean supportsSchemeAndRealm( AuthenticationToken token )\n-    {\n+        Set<String> roleNames;\n         try\n         {\n-            if ( token instanceof ShiroAuthToken )\n-            {\n-                ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n-                return shiroAuthToken.getScheme().equals( AuthToken.BASIC_SCHEME ) &&\n-                       (shiroAuthToken.supportsRealm( LDAP_REALM ));\n-            }\n-            return false;\n-        }\n-        catch ( InvalidAuthTokenException e )\n+          roleNames = findRoleNamesForUser(username, ldapContext);\n+        } finally\n         {\n-            return false;\n+          LdapUtils.closeContext(ldapContext);\n         }\n-    }\n \n-    @Override\n-    protected AuthorizationInfo doGetAuthorizationInfo( PrincipalCollection principals )\n-    {\n-        try\n+        return new SimpleAuthorizationInfo(roleNames);\n+      } else\n+      {\n+        // Authorization info is cached during authentication\n+        Cache<Object, AuthorizationInfo> authorizationCache = getAuthorizationCache();\n+        AuthorizationInfo authorizationInfo = authorizationCache.get(username);\n+        if (authorizationInfo == null)\n         {\n-            AuthorizationInfo info = super.doGetAuthorizationInfo( principals );\n-            securityLog.debug( withRealm( \"Queried for authorization info for user '%s'\",\n-                    principals.getPrimaryPrincipal() ) );\n-            return info;\n-        }\n-        catch ( AuthorizationException e )\n-        {\n-            securityLog.error( withRealm( \"Failed to get authorization info: '%s' caused by '%s'\",\n-                    e.getMessage(), e.getCause().getMessage() ) );\n-            if ( isAuthorizationExceptionAnLdapReadTimeout( e ) )\n-            {\n-                throw new AuthProviderTimeoutException( LDAP_READ_TIMEOUT_CLIENT_MESSAGE, e );\n-            }\n-            throw new AuthProviderFailedException( LDAP_AUTHORIZATION_FAILURE_CLIENT_MESSAGE, e );\n+          // The cached authorization info has expired.\n+          // Since we do not have the subject's credentials we cannot perform a new LDAP search\n+          // for authorization info. Instead we need to fail with a special status,\n+          // so that the client can react by re-authenticating.\n+          throw new AuthorizationExpiredException(\"LDAP authorization info expired.\");\n         }\n+        return authorizationInfo;\n+      }\n     }\n-\n-    // Unfortunately we need to identify timeouts by looking at the exception messages, which is not very robust.\n-    // To make it slightly more robust we look for a key part of the actual message\n-    private boolean isExceptionAnLdapReadTimeout( Exception e )\n+    return null;\n+  }\n+\n+  private String getUsername(PrincipalCollection principals)\n+  {\n+    String username = null;\n+    Collection ldapPrincipals = principals.fromRealm(getName());\n+    if (!ldapPrincipals.isEmpty())\n     {\n-        return e instanceof NamingException &&\n-               e.getMessage().contains( JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART );\n-    }\n-\n-    private boolean isExceptionAnLdapConnectionTimeout( Exception e )\n+      username = (String) ldapPrincipals.iterator().next();\n+    } else if (useSystemAccountForAuthorization)\n     {\n-        return e instanceof CommunicationException &&\n-               (((CommunicationException) e).getRootCause() instanceof SocketTimeoutException ||\n-                ((CommunicationException) e).getRootCause().getMessage().contains(\n-                        JNDI_LDAP_CONNECTION_TIMEOUT_MESSAGE_PART ) );\n+      username = (String) principals.getPrimaryPrincipal();\n     }\n-\n-    private boolean isExceptionConnectionRefused( Exception e )\n+    return username;\n+  }\n+\n+  private LdapContext getSystemLdapContextUsingStartTls(LdapContextFactory ldapContextFactory)\n+      throws NamingException\n+  {\n+    JndiLdapContextFactory jndiLdapContextFactory = (JndiLdapContextFactory) ldapContextFactory;\n+    return getLdapContextUsingStartTls(ldapContextFactory, jndiLdapContextFactory.getSystemUsername(),\n+        jndiLdapContextFactory.getSystemPassword());\n+  }\n+\n+  @Override\n+  protected AuthenticationInfo createAuthenticationInfo(AuthenticationToken token, Object ldapPrincipal,\n+                                                        Object ldapCredentials, LdapContext ldapContext)\n+      throws NamingException\n+  {\n+    // If authorization is enabled but useSystemAccountForAuthorization is disabled, we should perform\n+    // the search for groups directly here while the user's authenticated ldap context is open.\n+    if (authorizationEnabled && !useSystemAccountForAuthorization)\n     {\n-        return e instanceof CommunicationException &&\n-                ((CommunicationException) e).getRootCause() instanceof ConnectException;\n+      String username = (String) token.getPrincipal();\n+      Set<String> roleNames = findRoleNamesForUser(username, ldapContext);\n+      cacheAuthorizationInfo(username, roleNames);\n     }\n \n-    private boolean isAuthorizationExceptionAnLdapReadTimeout( AuthorizationException e )\n+    if (isAuthenticationCachingEnabled())\n     {\n-        // Shiro's doGetAuthorizationInfo() wraps a NamingException in an AuthorizationException\n-        return e.getCause() != null && e.getCause() instanceof NamingException &&\n-               e.getCause().getMessage().contains( JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART );\n+      SimpleHash hashedCredentials = secureHasher.hash(((String) token.getCredentials()).getBytes());\n+      return new ShiroAuthenticationInfo(token.getPrincipal(), hashedCredentials.getBytes(),\n+          hashedCredentials.getSalt(), getName(), AuthenticationResult.SUCCESS);\n+    } else\n+    {\n+      return new ShiroAuthenticationInfo(token.getPrincipal(), getName(), AuthenticationResult.SUCCESS);\n     }\n+  }\n+\n+  @Override\n+  public boolean supports(AuthenticationToken token)\n+  {\n+    return supportsSchemeAndRealm(token);\n+  }\n \n-    private void cacheAuthorizationInfo( String username, Set<String> roleNames )\n+  private boolean supportsSchemeAndRealm(AuthenticationToken token)\n+  {\n+    try\n     {\n-        // Use the existing authorizationCache in our base class\n-        Cache<Object, AuthorizationInfo> authorizationCache = getAuthorizationCache();\n-        authorizationCache.put( username, new SimpleAuthorizationInfo( roleNames ) );\n+      if (token instanceof ShiroAuthToken)\n+      {\n+        ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n+        return shiroAuthToken.getScheme().equals(AuthToken.BASIC_SCHEME) &&\n+            (shiroAuthToken.supportsRealm(LDAP_REALM));\n+      }\n+      return false;\n+    } catch (InvalidAuthTokenException e)\n+    {\n+      return false;\n     }\n+  }\n \n-    private void configureRealm( Config config )\n+  @Override\n+  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)\n+  {\n+    try\n     {\n-        JndiLdapContextFactory contextFactory = new JndiLdapContextFactory();\n-        Map<String,Object> environment = contextFactory.getEnvironment();\n-        Long connectionTimeoutMillis = config.get( SecuritySettings.ldap_connection_timeout ).toMillis();\n-        Long readTimeoutMillis = config.get( SecuritySettings.ldap_read_timeout ).toMillis();\n-        environment.put( JNDI_LDAP_CONNECT_TIMEOUT, connectionTimeoutMillis.toString() );\n-        environment.put( JNDI_LDAP_READ_TIMEOUT, readTimeoutMillis.toString() );\n-        contextFactory.setEnvironment( environment );\n-        contextFactory.setUrl( parseLdapServerUrl( config.get( SecuritySettings.ldap_server ) ) );\n-        contextFactory.setAuthenticationMechanism( config.get( SecuritySettings.ldap_authentication_mechanism ) );\n-        contextFactory.setReferral( config.get( SecuritySettings.ldap_referral ) );\n-        contextFactory.setSystemUsername( config.get( SecuritySettings.ldap_authorization_system_username ) );\n-        contextFactory.setSystemPassword( config.get( SecuritySettings.ldap_authorization_system_password ) );\n-        contextFactory.setPoolingEnabled( config.get( SecuritySettings.ldap_authorization_connection_pooling ) );\n-\n-        setContextFactory( contextFactory );\n-\n-        String userDnTemplate = config.get( SecuritySettings.ldap_authentication_user_dn_template );\n-        if ( userDnTemplate != null )\n-        {\n-            setUserDnTemplate( userDnTemplate );\n-        }\n-\n-        authenticationEnabled = config.get( SecuritySettings.ldap_authentication_enabled );\n-        authorizationEnabled = config.get( SecuritySettings.ldap_authorization_enabled );\n-        useStartTls = config.get( SecuritySettings.ldap_use_starttls );\n-\n-        userSearchBase = config.get( SecuritySettings.ldap_authorization_user_search_base );\n-        userSearchFilter = config.get( SecuritySettings.ldap_authorization_user_search_filter );\n-        useSAMAccountName = config.get( SecuritySettings.ldap_authentication_use_samaccountname );\n-        membershipAttributeNames = config.get( SecuritySettings.ldap_authorization_group_membership_attribute_names );\n-        useSystemAccountForAuthorization = config.get( SecuritySettings.ldap_authorization_use_system_account );\n-        groupToRoleMapping =\n-                parseGroupToRoleMapping( config.get( SecuritySettings.ldap_authorization_group_to_role_mapping ) );\n-\n-        setAuthenticationCachingEnabled( config.get( SecuritySettings.ldap_authentication_cache_enabled ) );\n-        setAuthorizationCachingEnabled( true );\n+      AuthorizationInfo info = super.doGetAuthorizationInfo(principals);\n+      securityLog.debug(withRealm(\"Queried for authorization info for user '%s'\",\n+          principals.getPrimaryPrincipal()));\n+      return info;\n+    } catch (AuthorizationException e)\n+    {\n+      securityLog.error(withRealm(\"Failed to get authorization info: '%s' caused by '%s'\",\n+          e.getMessage(), e.getCause().getMessage()));\n+      if (isAuthorizationExceptionAnLdapReadTimeout(e))\n+      {\n+        throw new AuthProviderTimeoutException(LDAP_READ_TIMEOUT_CLIENT_MESSAGE, e);\n+      }\n+      throw new AuthProviderFailedException(LDAP_AUTHORIZATION_FAILURE_CLIENT_MESSAGE, e);\n     }\n-\n-    private String parseLdapServerUrl( String rawLdapServer )\n+  }\n+\n+  // Unfortunately we need to identify timeouts by looking at the exception messages, which is not very robust.\n+  // To make it slightly more robust we look for a key part of the actual message\n+  private boolean isExceptionAnLdapReadTimeout(Exception e)\n+  {\n+    return e instanceof NamingException &&\n+        e.getMessage().contains(JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART);\n+  }\n+\n+  private boolean isExceptionAnLdapConnectionTimeout(Exception e)\n+  {\n+    return e instanceof CommunicationException &&\n+        (((CommunicationException) e).getRootCause() instanceof SocketTimeoutException ||\n+            ((CommunicationException) e).getRootCause().getMessage().contains(\n+                JNDI_LDAP_CONNECTION_TIMEOUT_MESSAGE_PART));\n+  }\n+\n+  private boolean isExceptionConnectionRefused(Exception e)\n+  {\n+    return e instanceof CommunicationException &&\n+        ((CommunicationException) e).getRootCause() instanceof ConnectException;\n+  }\n+\n+  private boolean isAuthorizationExceptionAnLdapReadTimeout(AuthorizationException e)\n+  {\n+    // Shiro's doGetAuthorizationInfo() wraps a NamingException in an AuthorizationException\n+    return e.getCause() != null && e.getCause() instanceof NamingException &&\n+        e.getCause().getMessage().contains(JNDI_LDAP_READ_TIMEOUT_MESSAGE_PART);\n+  }\n+\n+  private void cacheAuthorizationInfo(String username, Set<String> roleNames)\n+  {\n+    // Use the existing authorizationCache in our base class\n+    Cache<Object, AuthorizationInfo> authorizationCache = getAuthorizationCache();\n+    authorizationCache.put(username, new SimpleAuthorizationInfo(roleNames));\n+  }\n+\n+  private void configureRealm(Config config)\n+  {\n+    JndiLdapContextFactory contextFactory = new JndiLdapContextFactory();\n+    Map<String, Object> environment = contextFactory.getEnvironment();\n+    Long connectionTimeoutMillis = config.get(SecuritySettings.ldap_connection_timeout).toMillis();\n+    Long readTimeoutMillis = config.get(SecuritySettings.ldap_read_timeout).toMillis();\n+    environment.put(JNDI_LDAP_CONNECT_TIMEOUT, connectionTimeoutMillis.toString());\n+    environment.put(JNDI_LDAP_READ_TIMEOUT, readTimeoutMillis.toString());\n+    contextFactory.setEnvironment(environment);\n+    contextFactory.setUrl(parseLdapServerUrl(config.get(SecuritySettings.ldap_server)));\n+    contextFactory.setAuthenticationMechanism(config.get(SecuritySettings.ldap_authentication_mechanism));\n+    contextFactory.setReferral(config.get(SecuritySettings.ldap_referral));\n+    contextFactory.setSystemUsername(config.get(SecuritySettings.ldap_authorization_system_username));\n+    contextFactory.setSystemPassword(config.get(SecuritySettings.ldap_authorization_system_password));\n+    contextFactory.setPoolingEnabled(config.get(SecuritySettings.ldap_authorization_connection_pooling));\n+\n+    setContextFactory(contextFactory);\n+\n+    String userDnTemplate = config.get(SecuritySettings.ldap_authentication_user_dn_template);\n+    if (userDnTemplate != null)\n     {\n-        return (rawLdapServer == null) ? null :\n-               rawLdapServer.contains( \"://\" ) ? rawLdapServer : \"ldap://\" + rawLdapServer;\n+      setUserDnTemplate(userDnTemplate);\n     }\n \n-    private Map<String,Collection<String>> parseGroupToRoleMapping( String groupToRoleMappingString )\n+    authenticationEnabled = config.get(SecuritySettings.ldap_authentication_enabled);\n+    authorizationEnabled = config.get(SecuritySettings.ldap_authorization_enabled);\n+    useStartTls = config.get(SecuritySettings.ldap_use_starttls);\n+\n+    userSearchBase = config.get(SecuritySettings.ldap_authorization_user_search_base);\n+    userSearchFilter = config.get(SecuritySettings.ldap_authorization_user_search_filter);\n+    useSAMAccountName = config.get(SecuritySettings.ldap_authentication_use_samaccountname);\n+    membershipAttributeNames = config.get(SecuritySettings.ldap_authorization_group_membership_attribute_names);\n+    useSystemAccountForAuthorization = config.get(SecuritySettings.ldap_authorization_use_system_account);\n+    groupToRoleMapping =\n+        parseGroupToRoleMapping(config.get(SecuritySettings.ldap_authorization_group_to_role_mapping));\n+\n+    setAuthenticationCachingEnabled(config.get(SecuritySettings.ldap_authentication_cache_enabled));\n+    setAuthorizationCachingEnabled(true);\n+  }\n+\n+  private String parseLdapServerUrl(String rawLdapServer)\n+  {\n+    return (rawLdapServer == null) ? null :\n+        rawLdapServer.contains(\"://\") ? rawLdapServer : \"ldap://\" + rawLdapServer;\n+  }\n+\n+  private Map<String, Collection<String>> parseGroupToRoleMapping(String groupToRoleMappingString)\n+  {\n+    Map<String, Collection<String>> map = new HashMap<>();\n+\n+    if (groupToRoleMappingString != null)\n     {\n-        Map<String,Collection<String>> map = new HashMap<>();\n-\n-        if ( groupToRoleMappingString != null )\n+      for (String groupAndRoles : groupToRoleMappingString.split(GROUP_DELIMITER))\n+      {\n+        if (!groupAndRoles.isEmpty())\n         {\n-            for ( String groupAndRoles : groupToRoleMappingString.split( GROUP_DELIMITER ) )\n+          Matcher matcher = keyValuePattern.matcher(groupAndRoles);\n+          if (!(matcher.find() && matcher.groupCount() == 6))\n+          {\n+            String errorMessage = format(\"Failed to parse setting %s: wrong number of fields\",\n+                SecuritySettings.ldap_authorization_group_to_role_mapping.name());\n+            throw new IllegalArgumentException(errorMessage);\n+          }\n+\n+          String group = matcher.group(2) != null ? matcher.group(2) :\n+              matcher.group(3) != null ? matcher.group(3) :\n+                  matcher.group(4) != null ? matcher.group(4) :\n+                      matcher.group(5) != null ? matcher.group(5) : \"\";\n+\n+          if (group.isEmpty())\n+          {\n+            String errorMessage = format(\"Failed to parse setting %s: empty group name\",\n+                SecuritySettings.ldap_authorization_group_to_role_mapping.name());\n+            throw new IllegalArgumentException(errorMessage);\n+          }\n+          Collection<String> roleList = new ArrayList<>();\n+          for (String role : matcher.group(6).trim().split(ROLE_DELIMITER))\n+          {\n+            if (!role.isEmpty())\n             {\n-                if ( !groupAndRoles.isEmpty() )\n-                {\n-                    Matcher matcher = keyValuePattern.matcher( groupAndRoles );\n-                    if ( !(matcher.find() && matcher.groupCount() == 6) )\n-                    {\n-                        String errorMessage = format( \"Failed to parse setting %s: wrong number of fields\",\n-                                SecuritySettings.ldap_authorization_group_to_role_mapping.name() );\n-                        throw new IllegalArgumentException( errorMessage );\n-                    }\n-\n-                    String group = matcher.group(2) != null ? matcher.group(2) :\n-                                   matcher.group(3) != null ? matcher.group(3) :\n-                                   matcher.group(4) != null ? matcher.group(4) :\n-                                   matcher.group(5) != null ? matcher.group(5) : \"\";\n-\n-                    if ( group.isEmpty() )\n-                    {\n-                        String errorMessage = format( \"Failed to parse setting %s: empty group name\",\n-                                SecuritySettings.ldap_authorization_group_to_role_mapping.name() );\n-                        throw new IllegalArgumentException( errorMessage );\n-                    }\n-                    Collection<String> roleList = new ArrayList<>();\n-                    for ( String role : matcher.group(6).trim().split( ROLE_DELIMITER ) )\n-                    {\n-                        if ( !role.isEmpty() )\n-                        {\n-                            roleList.add( role );\n-                        }\n-                    }\n-                    // We only support case-insensitive comparison of group DNs\n-                    map.put( group.toLowerCase(), roleList );\n-                }\n+              roleList.add(role);\n             }\n+          }\n+          // We only support case-insensitive comparison of group DNs\n+          map.put(group.toLowerCase(), roleList);\n         }\n-\n-        return map;\n+      }\n     }\n \n-    private AuthenticationInfo queryForAuthenticationInfoSAM(\n-            AuthenticationToken token, LdapContextFactory ldapContextFactory ) throws NamingException\n-    {\n-        Object principal = token.getPrincipal();\n-        Object credentials = token.getCredentials();\n+    return map;\n+  }\n \n-        LdapContext ctx = null;\n-        try\n+  private AuthenticationInfo queryForAuthenticationInfoSAM(\n+      AuthenticationToken token, LdapContextFactory ldapContextFactory) throws NamingException\n+  {\n+    Object principal = token.getPrincipal();\n+    Object credentials = token.getCredentials();\n+\n+    LdapContext ctx = null;\n+    try\n+    {\n+      ctx = useStartTls ? getSystemLdapContextUsingStartTls(ldapContextFactory) :\n+          ldapContextFactory.getSystemLdapContext();\n+      String[] attrs = {\"cn\"};\n+      SearchControls searchCtls = new SearchControls(SearchControls.SUBTREE_SCOPE, 1, 0, attrs, false, false);\n+      Object[] searchArguments = new Object[] {principal};\n+      String filter = \"sAMAccountName={0}\";\n+      NamingEnumeration<SearchResult> search = ctx.search(userSearchBase, filter, searchArguments, searchCtls);\n+      if (search.hasMore())\n+      {\n+        final SearchResult next = search.next();\n+        String loginUser = next.getNameInNamespace();\n+        if (search.hasMore())\n         {\n-            ctx = useStartTls ? getSystemLdapContextUsingStartTls( ldapContextFactory ) :\n-                                      ldapContextFactory.getSystemLdapContext();\n-            String[] attrs = {\"cn\"};\n-            SearchControls searchCtls = new SearchControls( SearchControls.SUBTREE_SCOPE, 1, 0, attrs, false, false );\n-            Object[] searchArguments = new Object[]{principal};\n-            String filter = \"sAMAccountName={0}\";\n-            NamingEnumeration<SearchResult> search = ctx.search( userSearchBase, filter, searchArguments, searchCtls );\n-            if ( search.hasMore() )\n-            {\n-                final SearchResult next = search.next();\n-                String loginUser = next.getNameInNamespace();\n-                if ( search.hasMore() )\n-                {\n-                    securityLog.error( \"More than one user matching: \" + principal );\n-                    throw new AuthenticationException( \"More than one user matching: \" + principal );\n-                }\n-                else\n-                {\n-                    LdapContext ctx2 = ldapContextFactory.getLdapContext( loginUser, credentials );\n-                    LdapUtils.closeContext( ctx2 );\n-                }\n-            }\n-            else\n-            {\n-                throw new AuthenticationException( \"No user matching: \" + principal );\n-            }\n-            return createAuthenticationInfo( token, principal, credentials, ctx );\n-        }\n-        finally\n+          securityLog.error(\"More than one user matching: \" + principal);\n+          throw new AuthenticationException(\"More than one user matching: \" + principal);\n+        } else\n         {\n-            LdapUtils.closeContext( ctx );\n+          LdapContext ctx2 = ldapContextFactory.getLdapContext(loginUser, credentials);\n+          LdapUtils.closeContext(ctx2);\n         }\n-    }\n-\n-    // TODO: Extract to an LdapAuthorizationStrategy ? This (\"group by attribute\") is one of multiple possible strategies\n-    Set<String> findRoleNamesForUser( String username, LdapContext ldapContext ) throws NamingException\n+      } else\n+      {\n+        throw new AuthenticationException(\"No user matching: \" + principal);\n+      }\n+      return createAuthenticationInfo(token, principal, credentials, ctx);\n+    } finally\n     {\n-        Set<String> roleNames = new LinkedHashSet<>();\n+      LdapUtils.closeContext(ctx);\n+    }\n+  }\n \n-        SearchControls searchCtls = new SearchControls();\n-        searchCtls.setSearchScope( SearchControls.SUBTREE_SCOPE );\n-        searchCtls.setReturningAttributes( membershipAttributeNames.toArray( new String[1] ) );\n+  // TODO: Extract to an LdapAuthorizationStrategy ? This (\"group by attribute\") is one of multiple possible strategies\n+  Set<String> findRoleNamesForUser(String username, LdapContext ldapContext) throws NamingException\n+  {\n+    Set<String> roleNames = new LinkedHashSet<>();\n \n-        // Use search argument to prevent potential code injection\n-        Object[] searchArguments = new Object[]{username};\n+    SearchControls searchCtls = new SearchControls();\n+    searchCtls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n+    searchCtls.setReturningAttributes(membershipAttributeNames.toArray(new String[1]));\n \n-        NamingEnumeration result = ldapContext.search( userSearchBase, userSearchFilter, searchArguments, searchCtls );\n+    // Use search argument to prevent potential code injection\n+    Object[] searchArguments = new Object[] {username};\n \n-        if ( result.hasMoreElements() )\n-        {\n-            SearchResult searchResult = (SearchResult) result.next();\n+    NamingEnumeration result = ldapContext.search(userSearchBase, userSearchFilter, searchArguments, searchCtls);\n \n-            if ( result.hasMoreElements() )\n-            {\n-                securityLog.warn(\n-                        securityLog.isDebugEnabled() ?\n-                        withRealm(\n-                            \"LDAP user search for user principal '%s' is ambiguous. The first match that will \" +\n-                                            \"be checked for group membership is '%s' but the search also matches '%s'. \" +\n-                                            \"Please check your LDAP realm configuration.\",\n-                            username, searchResult.toString(), result.next().toString() )\n-                        :\n-                        withRealm(\n-                            \"LDAP user search for user principal '%s' is ambiguous. The search matches more \" +\n-                                            \"than one entry. Please check your LDAP realm configuration.\",\n-                            username )\n-                    );\n-            }\n-\n-            Attributes attributes = searchResult.getAttributes();\n-            if ( attributes != null )\n-            {\n-                NamingEnumeration attributeEnumeration = attributes.getAll();\n-                while ( attributeEnumeration.hasMore() )\n-                {\n-                    Attribute attribute = (Attribute) attributeEnumeration.next();\n-                    String attributeId = attribute.getID();\n-                    if ( membershipAttributeNames.stream().anyMatch( attributeId::equalsIgnoreCase ) )\n-                    {\n-                        Collection<String> groupNames = LdapUtils.getAllAttributeValues( attribute );\n-                        Collection<String> rolesForGroups = getRoleNamesForGroups( groupNames );\n-                        roleNames.addAll( rolesForGroups );\n-                    }\n-                }\n-            }\n-        }\n-        return roleNames;\n-    }\n-\n-    private void assertValidUserSearchSettings()\n+    if (result.hasMoreElements())\n     {\n-        boolean proceedWithSearch = true;\n-\n-        if ( userSearchBase == null || userSearchBase.isEmpty() )\n-        {\n-            securityLog.error( \"LDAP user search base is empty.\" );\n-            proceedWithSearch = false;\n-        }\n-        if ( userSearchFilter == null || !userSearchFilter.contains( \"{0}\" ) )\n-        {\n-            securityLog.warn( \"LDAP user search filter does not contain the argument placeholder {0}, \" +\n-                    \"so the search result will be independent of the user principal.\" );\n-        }\n-        if ( membershipAttributeNames == null || membershipAttributeNames.isEmpty() )\n+      SearchResult searchResult = (SearchResult) result.next();\n+\n+      if (result.hasMoreElements())\n+      {\n+        securityLog.warn(\n+            securityLog.isDebugEnabled() ?\n+                withRealm(\n+                    \"LDAP user search for user principal '%s' is ambiguous. The first match that will \" +\n+                        \"be checked for group membership is '%s' but the search also matches '%s'. \" +\n+                        \"Please check your LDAP realm configuration.\",\n+                    username, searchResult.toString(), result.next().toString())\n+                :\n+                withRealm(\n+                    \"LDAP user search for user principal '%s' is ambiguous. The search matches more \" +\n+                        \"than one entry. Please check your LDAP realm configuration.\",\n+                    username)\n+        );\n+      }\n+\n+      Attributes attributes = searchResult.getAttributes();\n+      if (attributes != null)\n+      {\n+        NamingEnumeration attributeEnumeration = attributes.getAll();\n+        while (attributeEnumeration.hasMore())\n         {\n-            // If we don't have any attributes to look for we will never find anything\n-            securityLog.error( \"LDAP group membership attribute names are empty. Authorization will not be possible.\" );\n-            proceedWithSearch = false;\n-        }\n-\n-        if ( !proceedWithSearch )\n-        {\n-            throw new IllegalArgumentException( \"Illegal LDAP user search settings, see security log for details.\" );\n+          Attribute attribute = (Attribute) attributeEnumeration.next();\n+          String attributeId = attribute.getID();\n+          if (membershipAttributeNames.stream().anyMatch(attributeId::equalsIgnoreCase))\n+          {\n+            Collection<String> groupNames = LdapUtils.getAllAttributeValues(attribute);\n+            Collection<String> rolesForGroups = getRoleNamesForGroups(groupNames);\n+            roleNames.addAll(rolesForGroups);\n+          }\n         }\n+      }\n     }\n+    return roleNames;\n+  }\n \n-    private Collection<String> getRoleNamesForGroups( Collection<String> groupNames )\n-    {\n-        Collection<String> roles = new ArrayList<>();\n-        for ( String group : groupNames )\n-        {\n-            Collection<String> rolesForGroup = groupToRoleMapping.get( group.toLowerCase() );\n-            if ( rolesForGroup != null )\n-            {\n-                roles.addAll( rolesForGroup );\n-            }\n-        }\n-        return roles;\n-    }\n+  private void assertValidUserSearchSettings()\n+  {\n+    boolean proceedWithSearch = true;\n \n-    // Exposed for testing\n-    Map<String,Collection<String>> getGroupToRoleMapping()\n+    if (userSearchBase == null || userSearchBase.isEmpty())\n     {\n-        return groupToRoleMapping;\n+      securityLog.error(\"LDAP user search base is empty.\");\n+      proceedWithSearch = false;\n     }\n-\n-    @Override\n-    public void initialize()\n+    if (userSearchFilter == null || !userSearchFilter.contains(\"{0}\"))\n     {\n-        if ( authorizationEnabled )\n-        {\n-            // For some combinations of settings we will never find anything\n-            assertValidUserSearchSettings();\n-        }\n+      securityLog.warn(\"LDAP user search filter does not contain the argument placeholder {0}, \" +\n+          \"so the search result will be independent of the user principal.\");\n     }\n-\n-    @Override\n-    public void start()\n+    if (membershipAttributeNames == null || membershipAttributeNames.isEmpty())\n     {\n+      // If we don't have any attributes to look for we will never find anything\n+      securityLog.error(\"LDAP group membership attribute names are empty. Authorization will not be possible.\");\n+      proceedWithSearch = false;\n     }\n \n-    @Override\n-    public void stop()\n+    if (!proceedWithSearch)\n     {\n+      throw new IllegalArgumentException(\"Illegal LDAP user search settings, see security log for details.\");\n     }\n+  }\n \n-    @Override\n-    public void shutdown()\n+  private Collection<String> getRoleNamesForGroups(Collection<String> groupNames)\n+  {\n+    Collection<String> roles = new ArrayList<>();\n+    for (String group : groupNames)\n     {\n+      Collection<String> rolesForGroup = groupToRoleMapping.get(group.toLowerCase());\n+      if (rolesForGroup != null)\n+      {\n+        roles.addAll(rolesForGroup);\n+      }\n     }\n-\n-    @Override\n-    public AuthorizationInfo getAuthorizationInfoSnapshot( PrincipalCollection principalCollection )\n+    return roles;\n+  }\n+\n+  // Exposed for testing\n+  Map<String, Collection<String>> getGroupToRoleMapping()\n+  {\n+    return groupToRoleMapping;\n+  }\n+\n+  @Override\n+  public void initialize()\n+  {\n+    if (authorizationEnabled)\n     {\n-        return getAuthorizationInfo( principalCollection );\n+      // For some combinations of settings we will never find anything\n+      assertValidUserSearchSettings();\n     }\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+  }\n+\n+  @Override\n+  public AuthorizationInfo getAuthorizationInfoSnapshot(PrincipalCollection principalCollection)\n+  {\n+    return getAuthorizationInfo(principalCollection);\n+  }\n }\n",
            "diff_size": 833
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
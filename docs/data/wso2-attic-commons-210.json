{
    "project_name": "wso2-attic-commons",
    "error_id": "210",
    "information": {
        "errors": [
            {
                "line": "64",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "//        try{\n//            ConcurrentUserTest con = new ConcurrentUserTest();\n//            System.out.println(\"Average Time take to read a resouce by\" + concurentUsers + \"concurrent users \" + con.calculateGetTime());\n//        }catch (Exception e) {\n//            e.printStackTrace();\n//        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/210/ConcurrentPerformanceTestSuite.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/210/ConcurrentPerformanceTestSuite.java\nindex 04038023960..e16c418cf47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/210/ConcurrentPerformanceTestSuite.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/210/ConcurrentPerformanceTestSuite.java\n@@ -16,48 +16,47 @@ import javax.sql.DataSource;\n import java.io.InputStream;\r\n import java.io.FileInputStream;\r\n \r\n-public class ConcurrentPerformanceTestSuite extends TestSuite{\r\n+public class ConcurrentPerformanceTestSuite extends TestSuite {\r\n \r\n-    static Registry adminRegistry = null;\r\n+  static Registry adminRegistry = null;\r\n \r\n-    static UserRegistry userRegistry = null;\r\n-    static RegistryRealm realm = null;\r\n-    static DataSource dataSource = null;\r\n-    static RegistryRealm registryRealm = null;\r\n-    static EmbeddedRegistry registry = null;\r\n+  static UserRegistry userRegistry = null;\r\n+  static RegistryRealm realm = null;\r\n+  static DataSource dataSource = null;\r\n+  static RegistryRealm registryRealm = null;\r\n+  static EmbeddedRegistry registry = null;\r\n \r\n-    static int concurentUsers = 20;\r\n+  static int concurentUsers = 20;\r\n \r\n-    public static Test suite(){\r\n+  public static Test suite() {\r\n \r\n-        try{\r\n+    try {\r\n \r\n-            dataSource = new RegistryDataSource(\"jdbc:mysql://localhost:3306/regdb5\",\r\n-                    \"com.mysql.jdbc.Driver\",\"regadmin\",\"regadmin\");\r\n+      dataSource = new RegistryDataSource(\"jdbc:mysql://localhost:3306/regdb5\",\r\n+        \"com.mysql.jdbc.Driver\", \"regadmin\", \"regadmin\");\r\n \r\n-            registryRealm = new RegistryRealm(dataSource);\r\n-            InputStream in = new FileInputStream(\"registry.xml\");\r\n-            RegistryContext registryContext = new RegistryContext(in);\r\n-            registry = new EmbeddedRegistry(registryContext);\r\n-            adminRegistry = registry.getUserRegistry(RegistryConstants.ADMIN_USER, RegistryConstants.ADMIN_PASSWORD);\r\n-            userRegistry = registry.getUserRegistry(RegistryConstants.ADMIN_USER, RegistryConstants.ADMIN_PASSWORD);\r\n+      registryRealm = new RegistryRealm(dataSource);\r\n+      InputStream in = new FileInputStream(\"registry.xml\");\r\n+      RegistryContext registryContext = new RegistryContext(in);\r\n+      registry = new EmbeddedRegistry(registryContext);\r\n+      adminRegistry = registry.getUserRegistry(RegistryConstants.ADMIN_USER, RegistryConstants.ADMIN_PASSWORD);\r\n+      userRegistry = registry.getUserRegistry(RegistryConstants.ADMIN_USER, RegistryConstants.ADMIN_PASSWORD);\r\n \r\n-        }catch (RegistryException e) {\r\n-            e.printStackTrace();\r\n-        }\r\n-        catch (Exception e) {\r\n-            e.printStackTrace();\r\n-        }\r\n+    } catch (RegistryException e) {\r\n+      e.printStackTrace();\r\n+    } catch (Exception e) {\r\n+      e.printStackTrace();\r\n+    }\r\n \r\n-        Test testCaseGet = new ConcurrentUserTest(\"testGetConcurrentResources\", userRegistry, concurentUsers);\r\n-        Test testCasePut = new ConcurrentUserTest(\"testPutConcurrentResource\", userRegistry, concurentUsers);\r\n-        Test loadTestResourceGet = new LoadTest(testCaseGet, concurentUsers);\r\n-        Test loadTestResourcePut = new LoadTest(testCasePut, concurentUsers);\r\n-        TestSuite suite = new TestSuite();\r\n+    Test testCaseGet = new ConcurrentUserTest(\"testGetConcurrentResources\", userRegistry, concurentUsers);\r\n+    Test testCasePut = new ConcurrentUserTest(\"testPutConcurrentResource\", userRegistry, concurentUsers);\r\n+    Test loadTestResourceGet = new LoadTest(testCaseGet, concurentUsers);\r\n+    Test loadTestResourcePut = new LoadTest(testCasePut, concurentUsers);\r\n+    TestSuite suite = new TestSuite();\r\n \r\n-        suite.addTest(new ConcurrentUserTest(\"testPopulateResources\",userRegistry, concurentUsers));\r\n-        suite.addTest(loadTestResourceGet);\r\n-        suite.addTest(loadTestResourcePut);\r\n+    suite.addTest(new ConcurrentUserTest(\"testPopulateResources\", userRegistry, concurentUsers));\r\n+    suite.addTest(loadTestResourceGet);\r\n+    suite.addTest(loadTestResourcePut);\r\n \r\n //        try{\r\n //            ConcurrentUserTest con = new ConcurrentUserTest();\r\n@@ -66,8 +65,8 @@ public class ConcurrentPerformanceTestSuite extends TestSuite{\n //            e.printStackTrace();\r\n //        }\r\n \r\n-        return suite;\r\n-    }\r\n+    return suite;\r\n+  }\r\n \r\n \r\n }\r\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/210/ConcurrentPerformanceTestSuite.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/210/ConcurrentPerformanceTestSuite.java\nindex 04038023960..3f649a28c5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/210/ConcurrentPerformanceTestSuite.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/210/ConcurrentPerformanceTestSuite.java\n@@ -16,7 +16,7 @@ import javax.sql.DataSource;\n import java.io.InputStream;\r\n import java.io.FileInputStream;\r\n \r\n-public class ConcurrentPerformanceTestSuite extends TestSuite{\r\n+public class ConcurrentPerformanceTestSuite extends TestSuite {\r\n \r\n     static Registry adminRegistry = null;\r\n \r\n@@ -28,11 +28,9 @@ public class ConcurrentPerformanceTestSuite extends TestSuite{\n \r\n     static int concurentUsers = 20;\r\n \r\n-    public static Test suite(){\r\n-\r\n-        try{\r\n-\r\n-            dataSource = new RegistryDataSource(\"jdbc:mysql://localhost:3306/regdb5\",\r\n+    public static Test suite() {\n+    try {\n+    dataSource = new RegistryDataSource(\"jdbc:mysql://localhost:3306/regdb5\",\r\n                     \"com.mysql.jdbc.Driver\",\"regadmin\",\"regadmin\");\r\n \r\n             registryRealm = new RegistryRealm(dataSource);\r\n@@ -59,15 +57,9 @@ public class ConcurrentPerformanceTestSuite extends TestSuite{\n         suite.addTest(loadTestResourceGet);\r\n         suite.addTest(loadTestResourcePut);\r\n \r\n-//        try{\r\n-//            ConcurrentUserTest con = new ConcurrentUserTest();\r\n-//            System.out.println(\"Average Time take to read a resouce by\" + concurentUsers + \"concurrent users \" + con.calculateGetTime());\r\n-//        }catch (Exception e) {\r\n-//            e.printStackTrace();\r\n-//        }\r\n-\r\n-        return suite;\r\n+//        t\n+return suite;\r\n     }\r\n \r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
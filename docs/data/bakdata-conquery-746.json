{
    "project_name": "bakdata-conquery",
    "error_id": "746",
    "information": {
        "errors": [
            {
                "line": "86",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t// Check if script handles a simple SelectResultInfo\n\t\ttry {\n\t\t\tscript.run();\t\t\t\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\",e)).addConstraintViolation();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/746/ColumnNamerValidator.java\nindex 0167a256c3c..4b4cd69b75f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/746/ColumnNamerValidator.java\n@@ -83,7 +83,7 @@ public class ColumnNamerValidator implements ConstraintValidator<ValidColumnName\n \t\t\n \t\t// Check if script handles a simple SelectResultInfo\n \t\ttry {\n-\t\t\tscript.run();\t\t\t\n+\t\t\tscript.run();\n \t\t}\n \t\tcatch (Exception e) {\n \t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\",e)).addConstraintViolation();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/746/ColumnNamerValidator.java\nindex 0167a256c3c..7b57acdd4f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/746/ColumnNamerValidator.java\n@@ -21,79 +21,76 @@ import lombok.extern.slf4j.Slf4j;\n /**\n  * This validator checks a common use case for the column name creation. It may be extended.\n  * For now the parsing, compilation and a column name creation based on the labels is checked.\n- *\n  */\n @Slf4j\n public class ColumnNamerValidator implements ConstraintValidator<ValidColumnNamer, String> {\n-\tprivate static final String SELECT_NAME = \"selectName\";\n-\tprivate static final String CONCEPT_NAME = \"conceptName\";\n-\t\n-\tprivate static final CQConcept CQ_CONCEPT = new CQConcept();\n-\tprivate static final Select SELECT = new Select() {\n-\t\t@Override\n-\t\tpublic Aggregator<?> createAggregator() {\n-\t\t\treturn null;\n-\t\t}\n-\t};\n-\tprivate static final VirtualConcept V_CONCEPT = new VirtualConcept();\n-\t\n-\tstatic {\n-\t\tCQ_CONCEPT.setLabel(CONCEPT_NAME);\n-\t\tSELECT.setName(SELECT_NAME);\n-\t\tSELECT.setHolder(V_CONCEPT);\n-\t}\n-\t\n-\tprivate final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n-\t\n-\n-\t@Override\n-\tpublic void initialize(ValidColumnNamer constraintAnnotation) {\n-\t\t// Nothing to initialize\n-\t}\n-\n-\t@Override\n-\tpublic boolean isValid(String value, ConstraintValidatorContext context) {\n-\t\tcontext.disableDefaultConstraintViolation();\n-\t\tString scriptString = value;\n-\t\t\n-\t\tif(Strings.isNullOrEmpty(scriptString)) {\n-\t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script is not alloed to be null or empty\")).addConstraintViolation();\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\t/*\n-\t\t * Instantiate a column info. Be aware that this instance is not fully resolved (e.g. json backreferences are not set),\n-\t\t * so the validator might fail if the script intents to use these.\n-\t\t * Regarding this aspect, the validator has to be extend.\n-\t\t */\n-\t\tSelectResultInfo columnInfo = new SelectResultInfo(SELECT, CQ_CONCEPT);\n-\t\t\n-\t\tgroovyShell.setProperty(PrintSettings.GROOVY_VARIABLE, columnInfo);\n-\n-\t\t// Check if script can be parsed\n-\t\tScript script;\n-\t\ttry {\n-\t\t\tscript  = groovyShell.parse(scriptString);\n-\t\t}\n-\t\tcatch (CompilationFailedException|IllegalArgumentException e) {\n-\t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script could not be parsed/compiled: %s\", e)).addConstraintViolation();\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\t\n-\t\t// Check if script handles a simple SelectResultInfo\n-\t\ttry {\n-\t\t\tscript.run();\t\t\t\n-\t\t}\n-\t\tcatch (Exception e) {\n-\t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\",e)).addConstraintViolation();\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\t\n-\t\tlog.info(String.format(\"Configured column namer script is okay: %s\", scriptString));\n-\t\t\n-\t\treturn true;\n-\t}\n+    private static final String SELECT_NAME = \"selectName\";\n+    private static final String CONCEPT_NAME = \"conceptName\";\n+\n+    private static final CQConcept CQ_CONCEPT = new CQConcept();\n+    private static final Select SELECT = new Select() {\n+        @Override\n+        public Aggregator<?> createAggregator() {\n+            return null;\n+        }\n+    };\n+    private static final VirtualConcept V_CONCEPT = new VirtualConcept();\n+\n+    static {\n+        CQ_CONCEPT.setLabel(CONCEPT_NAME);\n+        SELECT.setName(SELECT_NAME);\n+        SELECT.setHolder(V_CONCEPT);\n+    }\n+\n+    private final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n+\n+\n+    @Override\n+    public void initialize(ValidColumnNamer constraintAnnotation) {\n+        // Nothing to initialize\n+    }\n+\n+    @Override\n+    public boolean isValid(String value, ConstraintValidatorContext context) {\n+        context.disableDefaultConstraintViolation();\n+        String scriptString = value;\n+\n+        if (Strings.isNullOrEmpty(scriptString)) {\n+            context.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script is not alloed to be null or empty\")).addConstraintViolation();\n+            return false;\n+        }\n+\n+        /*\n+         * Instantiate a column info. Be aware that this instance is not fully resolved (e.g. json backreferences are not set),\n+         * so the validator might fail if the script intents to use these.\n+         * Regarding this aspect, the validator has to be extend.\n+         */\n+        SelectResultInfo columnInfo = new SelectResultInfo(SELECT, CQ_CONCEPT);\n+\n+        groovyShell.setProperty(PrintSettings.GROOVY_VARIABLE, columnInfo);\n+\n+        // Check if script can be parsed\n+        Script script;\n+        try {\n+            script = groovyShell.parse(scriptString);\n+        } catch (CompilationFailedException | IllegalArgumentException e) {\n+            context.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script could not be parsed/compiled: %s\", e)).addConstraintViolation();\n+            return false;\n+        }\n+\n+\n+        // Check if script handles a simple SelectResultInfo\n+        try {\n+            script.run();\n+        } catch (Exception e) {\n+            context.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\", e)).addConstraintViolation();\n+            return false;\n+        }\n+\n+\n+        log.info(String.format(\"Configured column namer script is okay: %s\", scriptString));\n+\n+        return true;\n+    }\n \n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/746/ColumnNamerValidator.java\nindex 0167a256c3c..4b4cd69b75f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/746/ColumnNamerValidator.java\n@@ -83,7 +83,7 @@ public class ColumnNamerValidator implements ConstraintValidator<ValidColumnName\n \t\t\n \t\t// Check if script handles a simple SelectResultInfo\n \t\ttry {\n-\t\t\tscript.run();\t\t\t\n+\t\t\tscript.run();\n \t\t}\n \t\tcatch (Exception e) {\n \t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\",e)).addConstraintViolation();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "86",
                    "column": "26",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/746/ColumnNamerValidator.java\nindex 0167a256c3c..fb6b37d60aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/746/ColumnNamerValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/746/ColumnNamerValidator.java\n@@ -83,8 +83,7 @@ public class ColumnNamerValidator implements ConstraintValidator<ValidColumnName\n \t\t\n \t\t// Check if script handles a simple SelectResultInfo\n \t\ttry {\n-\t\t\tscript.run();\t\t\t\n-\t\t}\n+\t\t\tscript.run();}\n \t\tcatch (Exception e) {\n \t\t\tcontext.buildConstraintViolationWithTemplate(String.format(\"Column Namer Script failed execution: %s\",e)).addConstraintViolation();\n \t\t\treturn false;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
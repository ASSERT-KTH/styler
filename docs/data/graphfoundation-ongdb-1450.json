{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1450",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1450/ByteUnit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1450/ByteUnit.java\nindex 69f7e612728..5130fe19d7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1450/ByteUnit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1450/ByteUnit.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io;\n \n import java.util.Arrays;\n@@ -45,221 +46,217 @@ public enum ByteUnit\n     XXX Future notes: This class can potentially replace some of the functionality in org.neo4j.helpers.Format.\n      */\n \n-    Byte( 0, \"B\" ),\n-    KibiByte( 1, \"KiB\", \"KB\", \"K\", \"kB\", \"kb\", \"k\" ),\n-    MebiByte( 2, \"MiB\", \"MB\", \"M\", \"mB\", \"mb\", \"m\" ),\n-    GibiByte( 3, \"GiB\", \"GB\", \"G\", \"gB\", \"gb\", \"g\" ),\n-    TebiByte( 4, \"TiB\", \"TB\" ),\n-    PebiByte( 5, \"PiB\", \"PB\" ),\n-    ExbiByte( 6, \"EiB\", \"EB\" );\n-\n-    public static final long ONE_KIBI_BYTE = ByteUnit.KibiByte.toBytes( 1 );\n-    public static final long ONE_MEBI_BYTE = ByteUnit.MebiByte.toBytes( 1 );\n-    public static final long ONE_GIBI_BYTE = ByteUnit.GibiByte.toBytes( 1 );\n-\n-    private static final long EIC_MULTIPLIER = 1024;\n-\n-    private final long factor;\n-    private final String shortName;\n-    private final String[] names;\n-\n-    ByteUnit( long power, String... names )\n+  Byte(0, \"B\"),\n+  KibiByte(1, \"KiB\", \"KB\", \"K\", \"kB\", \"kb\", \"k\"),\n+  MebiByte(2, \"MiB\", \"MB\", \"M\", \"mB\", \"mb\", \"m\"),\n+  GibiByte(3, \"GiB\", \"GB\", \"G\", \"gB\", \"gb\", \"g\"),\n+  TebiByte(4, \"TiB\", \"TB\"),\n+  PebiByte(5, \"PiB\", \"PB\"),\n+  ExbiByte(6, \"EiB\", \"EB\");\n+\n+  public static final long ONE_KIBI_BYTE = ByteUnit.KibiByte.toBytes(1);\n+  public static final long ONE_MEBI_BYTE = ByteUnit.MebiByte.toBytes(1);\n+  public static final long ONE_GIBI_BYTE = ByteUnit.GibiByte.toBytes(1);\n+\n+  private static final long EIC_MULTIPLIER = 1024;\n+\n+  private final long factor;\n+  private final String shortName;\n+  private final String[] names;\n+\n+  ByteUnit(long power, String... names)\n+  {\n+    this.factor = factorFromPower(power);\n+    this.shortName = names[0];\n+    this.names = names;\n+  }\n+\n+  /**\n+   * Compute the increment factor from the given power.\n+   * <p>\n+   * Giving zero always produces 1. Giving 1 will produce 1000 or 1024, for SI and EIC respectively, and so on.\n+   */\n+  private long factorFromPower(long power)\n+  {\n+    if (power == 0)\n     {\n-        this.factor = factorFromPower( power );\n-        this.shortName = names[0];\n-        this.names = names;\n+      return 1;\n     }\n-\n-    /**\n-     * Compute the increment factor from the given power.\n-     * <p>\n-     * Giving zero always produces 1. Giving 1 will produce 1000 or 1024, for SI and EIC respectively, and so on.\n-     */\n-    private long factorFromPower( long power )\n+    long product = EIC_MULTIPLIER;\n+    for (int i = 0; i < power - 1; i++)\n     {\n-        if ( power == 0 )\n-        {\n-            return 1;\n-        }\n-        long product = EIC_MULTIPLIER;\n-        for ( int i = 0; i < power - 1; i++ )\n-        {\n-            product = product * EIC_MULTIPLIER;\n-        }\n-        return product;\n+      product = product * EIC_MULTIPLIER;\n     }\n-\n-    /**\n-     * Get the short or abbreviated name of this unit, e.g. KiB or MiB.\n-     *\n-     * @return The short unit name.\n-     */\n-    public String abbreviation()\n+    return product;\n+  }\n+\n+  /**\n+   * Get the short or abbreviated name of this unit, e.g. KiB or MiB.\n+   *\n+   * @return The short unit name.\n+   */\n+  public String abbreviation()\n+  {\n+    return shortName;\n+  }\n+\n+  /**\n+   * Convert the given value of this unit, to a value in the given unit.\n+   *\n+   * @param value  The value to convert from this unit.\n+   * @param toUnit The unit of the resulting value.\n+   * @return The value in the given result unit.\n+   */\n+  public long convert(long value, ByteUnit toUnit)\n+  {\n+    return toBytes(value) / toUnit.factor;\n+  }\n+\n+  public long toBytes(long value)\n+  {\n+    return factor * value;\n+  }\n+\n+  public long toKibiBytes(long value)\n+  {\n+    return convert(value, KibiByte);\n+  }\n+\n+  public long toMebiBytes(long value)\n+  {\n+    return convert(value, MebiByte);\n+  }\n+\n+  public long toGibiBytes(long value)\n+  {\n+    return convert(value, GibiByte);\n+  }\n+\n+  public long toTebiBytes(long value)\n+  {\n+    return convert(value, TebiByte);\n+  }\n+\n+  public long toPebiBytes(long value)\n+  {\n+    return convert(value, PebiByte);\n+  }\n+\n+  public long toExbiBytes(long value)\n+  {\n+    return convert(value, ExbiByte);\n+  }\n+\n+  public static long bytes(long bytes)\n+  {\n+    return bytes;\n+  }\n+\n+  public static long kibiBytes(long kibibytes)\n+  {\n+    return KibiByte.toBytes(kibibytes);\n+  }\n+\n+  public static long mebiBytes(long mebibytes)\n+  {\n+    return MebiByte.toBytes(mebibytes);\n+  }\n+\n+  public static long gibiBytes(long gibibytes)\n+  {\n+    return GibiByte.toBytes(gibibytes);\n+  }\n+\n+  public static long tebiBytes(long tebibytes)\n+  {\n+    return TebiByte.toBytes(tebibytes);\n+  }\n+\n+  public static long pebiBytes(long pebibytes)\n+  {\n+    return PebiByte.toBytes(pebibytes);\n+  }\n+\n+  public static long exbiBytes(long exbibytes)\n+  {\n+    return ExbiByte.toBytes(exbibytes);\n+  }\n+\n+  public static String bytesToString(long bytes)\n+  {\n+    if (bytes > ONE_GIBI_BYTE)\n     {\n-        return shortName;\n-    }\n-\n-    /**\n-     * Convert the given value of this unit, to a value in the given unit.\n-     *\n-     * @param value The value to convert from this unit.\n-     * @param toUnit The unit of the resulting value.\n-     * @return The value in the given result unit.\n-     */\n-    public long convert( long value, ByteUnit toUnit )\n+      return format(Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_GIBI_BYTE, GibiByte.shortName);\n+    } else if (bytes > ONE_MEBI_BYTE)\n     {\n-        return toBytes( value ) / toUnit.factor;\n-    }\n-\n-    public long toBytes( long value )\n+      return format(Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_MEBI_BYTE, MebiByte.shortName);\n+    } else if (bytes > ONE_KIBI_BYTE)\n     {\n-        return factor * value;\n-    }\n-\n-    public long toKibiBytes( long value )\n-    {\n-        return convert( value, KibiByte );\n-    }\n-\n-    public long toMebiBytes( long value )\n-    {\n-        return convert( value, MebiByte );\n-    }\n-\n-    public long toGibiBytes( long value )\n-    {\n-        return convert( value, GibiByte );\n-    }\n-\n-    public long toTebiBytes( long value )\n+      return format(Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_KIBI_BYTE, KibiByte.shortName);\n+    } else\n     {\n-        return convert( value, TebiByte );\n+      return bytes + Byte.shortName;\n     }\n+  }\n \n-    public long toPebiBytes( long value )\n-    {\n-        return convert( value, PebiByte );\n-    }\n-\n-    public long toExbiBytes( long value )\n-    {\n-        return convert( value, ExbiByte );\n-    }\n-\n-    public static long bytes( long bytes )\n-    {\n-        return bytes;\n-    }\n+  public static long parse(String text)\n+  {\n+    long result = 0;\n+    int len = text.length();\n+    int unitCharacter = 0;\n+    int digitCharacters = 0;\n+    Stream<Pair<String, ByteUnit>> unitsStream = listUnits();\n \n-    public static long kibiBytes( long kibibytes )\n+    for (int i = 0; i < len; i++)\n     {\n-        return KibiByte.toBytes( kibibytes );\n-    }\n-\n-    public static long mebiBytes( long mebibytes )\n-    {\n-        return MebiByte.toBytes( mebibytes );\n-    }\n-\n-    public static long gibiBytes( long gibibytes )\n-    {\n-        return GibiByte.toBytes( gibibytes );\n-    }\n-\n-    public static long tebiBytes( long tebibytes )\n-    {\n-        return TebiByte.toBytes( tebibytes );\n-    }\n-\n-    public static long pebiBytes( long pebibytes )\n-    {\n-        return PebiByte.toBytes( pebibytes );\n-    }\n-\n-    public static long exbiBytes( long exbibytes )\n-    {\n-        return ExbiByte.toBytes( exbibytes );\n-    }\n-\n-    public static String bytesToString( long bytes )\n-    {\n-        if ( bytes > ONE_GIBI_BYTE )\n+      char ch = text.charAt(i);\n+      int digit = Character.digit(ch, 10);\n+      if (digit != -1)\n+      {\n+        if (unitCharacter != 0)\n         {\n-            return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_GIBI_BYTE, GibiByte.shortName );\n+          throw invalidFormat(text);\n         }\n-        else if ( bytes > ONE_MEBI_BYTE )\n+        if (result != 0)\n         {\n-            return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_MEBI_BYTE, MebiByte.shortName );\n-        }\n-        else if ( bytes > ONE_KIBI_BYTE )\n-        {\n-            return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_KIBI_BYTE, KibiByte.shortName );\n-        }\n-        else\n-        {\n-            return bytes + Byte.shortName;\n+          result *= 10;\n         }\n+        result += digit;\n+        digitCharacters++;\n+      } else if (!Character.isWhitespace(ch))\n+      {\n+        int idx = unitCharacter;\n+        unitsStream = unitsStream.filter(p -> p.first().length() > idx && p.first().charAt(idx) == ch);\n+        unitCharacter++;\n+      }\n     }\n \n-    public static long parse( String text )\n+    if (digitCharacters == 0)\n     {\n-        long result = 0;\n-        int len = text.length();\n-        int unitCharacter = 0;\n-        int digitCharacters = 0;\n-        Stream<Pair<String,ByteUnit>> unitsStream = listUnits();\n-\n-        for ( int i = 0; i < len; i++ )\n-        {\n-            char ch = text.charAt( i );\n-            int digit = Character.digit( ch, 10 );\n-            if ( digit != -1 )\n-            {\n-                if ( unitCharacter != 0 )\n-                {\n-                    throw invalidFormat( text );\n-                }\n-                if ( result != 0 )\n-                {\n-                    result *= 10;\n-                }\n-                result += digit;\n-                digitCharacters++;\n-            }\n-            else if ( !Character.isWhitespace( ch ) )\n-            {\n-                int idx = unitCharacter;\n-                unitsStream = unitsStream.filter( p -> p.first().length() > idx && p.first().charAt( idx ) == ch );\n-                unitCharacter++;\n-            }\n-        }\n-\n-        if ( digitCharacters == 0 )\n-        {\n-            throw invalidFormat( text );\n-        }\n-\n-        if ( unitCharacter > 0 )\n-        {\n-            ByteUnit byteUnit = unitsStream.map( Pair::other ).findFirst().orElse( null );\n-            if ( byteUnit == null )\n-            {\n-                throw invalidFormat( text );\n-            }\n-            result = byteUnit.toBytes( result );\n-        }\n-\n-        return result;\n+      throw invalidFormat(text);\n     }\n \n-    private static IllegalArgumentException invalidFormat( String text )\n+    if (unitCharacter > 0)\n     {\n-        return new IllegalArgumentException( \"Invalid number format: '\" + text + \"'\" );\n+      ByteUnit byteUnit = unitsStream.map(Pair::other).findFirst().orElse(null);\n+      if (byteUnit == null)\n+      {\n+        throw invalidFormat(text);\n+      }\n+      result = byteUnit.toBytes(result);\n     }\n \n-    private static Stream<Pair<String,ByteUnit>> listUnits()\n-    {\n-        return Arrays.stream( values() ).flatMap(\n-                b -> Stream.of( b.names ).map( n -> Pair.of( n, b ) ) );\n-    }\n+    return result;\n+  }\n+\n+  private static IllegalArgumentException invalidFormat(String text)\n+  {\n+    return new IllegalArgumentException(\"Invalid number format: '\" + text + \"'\");\n+  }\n+\n+  private static Stream<Pair<String, ByteUnit>> listUnits()\n+  {\n+    return Arrays.stream(values()).flatMap(\n+        b -> Stream.of(b.names).map(n -> Pair.of(n, b)));\n+  }\n }\n",
            "diff_size": 321
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "180",
                    "column": "19",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "184",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "188",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "221",
                    "column": "35",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1450/ByteUnit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1450/ByteUnit.java\nindex 69f7e612728..3e98f43f93f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1450/ByteUnit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1450/ByteUnit.java\n@@ -45,21 +45,14 @@ public enum ByteUnit\n     XXX Future notes: This class can potentially replace some of the functionality in org.neo4j.helpers.Format.\n      */\n \n-    Byte( 0, \"B\" ),\n-    KibiByte( 1, \"KiB\", \"KB\", \"K\", \"kB\", \"kb\", \"k\" ),\n-    MebiByte( 2, \"MiB\", \"MB\", \"M\", \"mB\", \"mb\", \"m\" ),\n-    GibiByte( 3, \"GiB\", \"GB\", \"G\", \"gB\", \"gb\", \"g\" ),\n-    TebiByte( 4, \"TiB\", \"TB\" ),\n-    PebiByte( 5, \"PiB\", \"PB\" ),\n-    ExbiByte( 6, \"EiB\", \"EB\" );\n+    Byte( 0, \"B\" ), KibiByte( 1, \"KiB\", \"KB\", \"K\", \"kB\", \"kb\", \"k\" ), MebiByte( 2, \"MiB\", \"MB\", \"M\", \"mB\", \"mb\", \"m\" ), GibiByte( 3, \"GiB\", \"GB\", \"G\", \"gB\", \"gb\", \"g\" ), TebiByte( 4, \"TiB\", \"TB\" ), PebiByte( 5, \"PiB\", \"PB\" ), ExbiByte( 6, \"EiB\", \"EB\" );\n \n     public static final long ONE_KIBI_BYTE = ByteUnit.KibiByte.toBytes( 1 );\n     public static final long ONE_MEBI_BYTE = ByteUnit.MebiByte.toBytes( 1 );\n     public static final long ONE_GIBI_BYTE = ByteUnit.GibiByte.toBytes( 1 );\n \n     private static final long EIC_MULTIPLIER = 1024;\n-\n-    private final long factor;\n+private final long factor;\n     private final String shortName;\n     private final String[] names;\n \n@@ -86,7 +79,8 @@ public enum ByteUnit\n         {\n             product = product * EIC_MULTIPLIER;\n         }\n-        return product;\n+\n+return product;\n     }\n \n     /**\n@@ -183,15 +177,15 @@ public enum ByteUnit\n \n     public static String bytesToString( long bytes )\n     {\n-        if ( bytes > ONE_GIBI_BYTE )\n+        if ( bytes> ONE_GIBI_BYTE )\n         {\n             return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_GIBI_BYTE, GibiByte.shortName );\n         }\n-        else if ( bytes > ONE_MEBI_BYTE )\n+        else if ( bytes> ONE_MEBI_BYTE )\n         {\n             return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_MEBI_BYTE, MebiByte.shortName );\n         }\n-        else if ( bytes > ONE_KIBI_BYTE )\n+        else if ( bytes> ONE_KIBI_BYTE )\n         {\n             return format( Locale.ROOT, \"%.4g%s\", bytes / (double) ONE_KIBI_BYTE, KibiByte.shortName );\n         }\n@@ -208,8 +202,7 @@ public enum ByteUnit\n         int unitCharacter = 0;\n         int digitCharacters = 0;\n         Stream<Pair<String,ByteUnit>> unitsStream = listUnits();\n-\n-        for ( int i = 0; i < len; i++ )\n+for ( int i = 0; i < len; i++ )\n         {\n             char ch = text.charAt( i );\n             int digit = Character.digit( ch, 10 );\n@@ -219,12 +212,13 @@ public enum ByteUnit\n                 {\n                     throw invalidFormat( text );\n                 }\n-                if ( result != 0 )\n+\n+if ( result != 0 )\n                 {\n                     result *= 10;\n                 }\n-                result += digit;\n-                digitCharacters++;\n+\n+result += digit; digitCharacters++;\n             }\n             else if ( !Character.isWhitespace( ch ) )\n             {\n@@ -246,7 +240,8 @@ public enum ByteUnit\n             {\n                 throw invalidFormat( text );\n             }\n-            result = byteUnit.toBytes( result );\n+\n+result = byteUnit.toBytes( result );\n         }\n \n         return result;\n@@ -259,7 +254,6 @@ public enum ByteUnit\n \n     private static Stream<Pair<String,ByteUnit>> listUnits()\n     {\n-        return Arrays.stream( values() ).flatMap(\n-                b -> Stream.of( b.names ).map( n -> Pair.of( n, b ) ) );\n+        return Arrays.stream( values() ).flatMap( b -> Stream.of( b.names ).map( n -> Pair.of( n, b ) ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
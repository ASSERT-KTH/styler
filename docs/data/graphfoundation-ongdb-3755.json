{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3755",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3755/FileChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3755/FileChunk.java\nindex 98eff488e61..995cea57ec4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3755/FileChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3755/FileChunk.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import java.io.IOException;\n@@ -31,97 +32,97 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class FileChunk\n {\n-    static final int MAX_SIZE = 8192;\n-    private static final int USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS = -1;\n-    private final int encodedLength;\n-    private final byte[] bytes;\n-\n-    static FileChunk create( byte[] bytes, boolean last )\n-    {\n-        if ( !last && bytes.length != MAX_SIZE )\n-        {\n-            throw new IllegalArgumentException( \"All chunks except for the last must be of max size.\" );\n-        }\n-        return new FileChunk( last ? bytes.length : USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS, bytes );\n-    }\n-\n-    FileChunk( int encodedLength, byte[] bytes )\n+  static final int MAX_SIZE = 8192;\n+  private static final int USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS = -1;\n+  private final int encodedLength;\n+  private final byte[] bytes;\n+\n+  static FileChunk create(byte[] bytes, boolean last)\n+  {\n+    if (!last && bytes.length != MAX_SIZE)\n     {\n-        this.encodedLength = encodedLength;\n-        this.bytes = bytes;\n+      throw new IllegalArgumentException(\"All chunks except for the last must be of max size.\");\n     }\n-\n-    public boolean isLast()\n-    {\n-        return encodedLength != USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS;\n-    }\n-\n-    public byte[] bytes()\n+    return new FileChunk(last ? bytes.length : USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS, bytes);\n+  }\n+\n+  FileChunk(int encodedLength, byte[] bytes)\n+  {\n+    this.encodedLength = encodedLength;\n+    this.bytes = bytes;\n+  }\n+\n+  public boolean isLast()\n+  {\n+    return encodedLength != USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS;\n+  }\n+\n+  public byte[] bytes()\n+  {\n+    return bytes;\n+  }\n+\n+  public int length()\n+  {\n+    return encodedLength;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return bytes;\n+      return true;\n     }\n-\n-    public int length()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return encodedLength;\n+      return false;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    FileChunk fileChunk = (FileChunk) o;\n+    return encodedLength == fileChunk.encodedLength && Arrays.equals(bytes, fileChunk.bytes);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(encodedLength, Arrays.hashCode(bytes));\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"FileChunk{\" + Arrays.toString(bytes) + '}';\n+  }\n+\n+  public static ChannelMarshal<FileChunk> marshal()\n+  {\n+    return Marshal.INSTANCE;\n+  }\n+\n+  private static class Marshal extends SafeChannelMarshal<FileChunk>\n+  {\n+    private static final Marshal INSTANCE = new Marshal();\n+\n+    private Marshal()\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        FileChunk fileChunk = (FileChunk) o;\n-        return encodedLength == fileChunk.encodedLength && Arrays.equals( bytes, fileChunk.bytes );\n     }\n \n     @Override\n-    public int hashCode()\n+    public void marshal(FileChunk fileChunk, WritableChannel channel) throws IOException\n     {\n-        return Objects.hash( encodedLength, Arrays.hashCode( bytes ) );\n+      channel.putInt(fileChunk.encodedLength);\n+      byte[] bytes = fileChunk.bytes();\n+      channel.put(bytes, bytes.length);\n     }\n \n     @Override\n-    public String toString()\n-    {\n-        return \"FileChunk{\" + Arrays.toString( bytes ) + '}';\n-    }\n-\n-    public static ChannelMarshal<FileChunk> marshal()\n-    {\n-        return Marshal.INSTANCE;\n-    }\n-\n-    private static class Marshal extends SafeChannelMarshal<FileChunk>\n+    protected FileChunk unmarshal0(ReadableChannel channel) throws IOException\n     {\n-        private static final Marshal INSTANCE = new Marshal();\n-\n-        private Marshal()\n-        {\n-        }\n-\n-        @Override\n-        public void marshal( FileChunk fileChunk, WritableChannel channel ) throws IOException\n-        {\n-            channel.putInt( fileChunk.encodedLength );\n-            byte[] bytes = fileChunk.bytes();\n-            channel.put( bytes, bytes.length );\n-        }\n-\n-        @Override\n-        protected FileChunk unmarshal0( ReadableChannel channel ) throws IOException\n-        {\n-            int encodedLength = channel.getInt();\n-            int length = encodedLength == USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS ? MAX_SIZE : encodedLength;\n-            byte[] bytes = new byte[length];\n-            channel.get( bytes, length );\n-            return new FileChunk( encodedLength, bytes );\n-        }\n+      int encodedLength = channel.getInt();\n+      int length = encodedLength == USE_MAX_SIZE_AND_EXPECT_MORE_CHUNKS ? MAX_SIZE : encodedLength;\n+      byte[] bytes = new byte[length];\n+      channel.get(bytes, length);\n+      return new FileChunk(encodedLength, bytes);\n     }\n+  }\n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3755/FileChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3755/FileChunk.java\nindex 98eff488e61..24fe2e2cc01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3755/FileChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3755/FileChunk.java\n@@ -73,11 +73,13 @@ public class FileChunk\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        FileChunk fileChunk = (FileChunk) o;\n+\n+FileChunk fileChunk = (FileChunk) o;\n         return encodedLength == fileChunk.encodedLength && Arrays.equals( bytes, fileChunk.bytes );\n     }\n \n@@ -124,4 +126,4 @@ public class FileChunk\n             return new FileChunk( encodedLength, bytes );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
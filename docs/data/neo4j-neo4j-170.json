{
    "project_name": "neo4j-neo4j",
    "error_id": "170",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/170/Neo4jWithSocket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/170/Neo4jWithSocket.java\nindex 37fa4967912..8e2c9490728 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/170/Neo4jWithSocket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/170/Neo4jWithSocket.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import org.junit.jupiter.api.TestInfo;\n@@ -53,7 +54,7 @@ public class Neo4jWithSocket\n     static final String NEO4J_WITH_SOCKET = \"org.neo4j.bolt.transport.Neo4jWithSocket\";\n \n     private final Supplier<FileSystemAbstraction> fileSystemProvider;\n-    private Consumer<Map<Setting<?>,Object>> configure;\n+    private Consumer<Map<Setting<?>, Object>> configure;\n     private final TestDirectory testDirectory;\n     private TestDatabaseManagementServiceBuilder graphDatabaseFactory;\n     private GraphDatabaseService gdb;\n@@ -61,8 +62,8 @@ public class Neo4jWithSocket\n     private ConnectorPortRegister connectorRegister;\n     private DatabaseManagementService managementService;\n \n-    public Neo4jWithSocket( TestDatabaseManagementServiceBuilder graphDatabaseFactory,\n-                            Supplier<TestDirectory> testDirectorySupplier, Consumer<Map<Setting<?>,Object>> configure )\n+    public Neo4jWithSocket(TestDatabaseManagementServiceBuilder graphDatabaseFactory,\n+                           Supplier<TestDirectory> testDirectorySupplier, Consumer<Map<Setting<?>, Object>> configure)\n     {\n         this.testDirectory = testDirectorySupplier.get();\n         this.graphDatabaseFactory = graphDatabaseFactory;\n@@ -80,45 +81,45 @@ public class Neo4jWithSocket\n         return managementService;\n     }\n \n-    public void setConfigure( Consumer<Map<Setting<?>, Object>> configure )\n+    public void setConfigure(Consumer<Map<Setting<?>, Object>> configure)\n     {\n         this.configure = configure;\n     }\n \n-    public void setGraphDatabaseFactory( TestDatabaseManagementServiceBuilder graphDatabaseFactory )\n+    public void setGraphDatabaseFactory(TestDatabaseManagementServiceBuilder graphDatabaseFactory)\n     {\n         this.graphDatabaseFactory = graphDatabaseFactory;\n     }\n \n-    public void init( TestInfo testInfo ) throws IOException\n+    public void init(TestInfo testInfo) throws IOException\n     {\n         var testName = testInfo.getTestMethod().get().getName();\n-        testDirectory.prepareDirectory( testInfo.getTestClass().get(), testName );\n-        workingDirectory = testDirectory.directory( testName );\n+        testDirectory.prepareDirectory(testInfo.getTestClass().get(), testName);\n+        workingDirectory = testDirectory.directory(testName);\n \n-        ensureDatabase( settings -> {} );\n+        ensureDatabase(settings -> {\n+        });\n     }\n \n-    public HostnamePort lookupConnector( String connectorKey )\n+    public HostnamePort lookupConnector(String connectorKey)\n     {\n-        return connectorRegister.getLocalAddress( connectorKey );\n+        return connectorRegister.getLocalAddress(connectorKey);\n     }\n \n     public HostnamePort lookupDefaultConnector()\n     {\n-        return connectorRegister.getLocalAddress( BoltConnector.NAME );\n+        return connectorRegister.getLocalAddress(BoltConnector.NAME);\n     }\n \n     public void shutdownDatabase()\n     {\n         try\n         {\n-            if ( managementService != null )\n+            if (managementService != null)\n             {\n                 managementService.shutdown();\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connectorRegister = null;\n             gdb = null;\n@@ -126,64 +127,64 @@ public class Neo4jWithSocket\n         }\n     }\n \n-    public void ensureDatabase( Consumer<Map<Setting<?>,Object>> overrideSettingsFunction )\n+    public void ensureDatabase(Consumer<Map<Setting<?>, Object>> overrideSettingsFunction)\n     {\n-        if ( gdb != null )\n+        if (gdb != null)\n         {\n             return;\n         }\n \n-        Map<Setting<?>,Object> settings = configure( overrideSettingsFunction );\n-        Path storeDir = workingDirectory.resolve( \"storeDir\" );\n+        Map<Setting<?>, Object> settings = configure(overrideSettingsFunction);\n+        Path storeDir = workingDirectory.resolve(\"storeDir\");\n \n-        installSelfSignedCertificateIfEncryptionEnabled( settings );\n+        installSelfSignedCertificateIfEncryptionEnabled(settings);\n \n-        graphDatabaseFactory.setFileSystem( fileSystemProvider.get() );\n-        managementService = graphDatabaseFactory.setDatabaseRootDirectory( storeDir ).impermanent().setConfig( settings ).build();\n-        gdb = managementService.database( DEFAULT_DATABASE_NAME );\n+        graphDatabaseFactory.setFileSystem(fileSystemProvider.get());\n+        managementService = graphDatabaseFactory.setDatabaseRootDirectory(storeDir).impermanent().setConfig(settings).build();\n+        gdb = managementService.database(DEFAULT_DATABASE_NAME);\n         connectorRegister =\n-                ((GraphDatabaseAPI) gdb).getDependencyResolver().resolveDependency( ConnectorPortRegister.class );\n+          ((GraphDatabaseAPI) gdb).getDependencyResolver().resolveDependency(ConnectorPortRegister.class);\n     }\n \n-    private void installSelfSignedCertificateIfEncryptionEnabled( Map<Setting<?>,Object> settings )\n+    private void installSelfSignedCertificateIfEncryptionEnabled(Map<Setting<?>, Object> settings)\n     {\n-        var encryptionLevel = settings.get( BoltConnector.encryption_level );\n-        if ( encryptionLevel != DISABLED )\n+        var encryptionLevel = settings.get(BoltConnector.encryption_level);\n+        if (encryptionLevel != DISABLED)\n         {\n             // Install self-signed certs if ssl is enabled\n-            var certificates = workingDirectory.resolve( \"certificates\" );\n-            SelfSignedCertificateFactory.create( certificates );\n+            var certificates = workingDirectory.resolve(\"certificates\");\n+            SelfSignedCertificateFactory.create(certificates);\n \n-            settings.put( SslPolicyConfig.forScope( SslPolicyScope.BOLT ).enabled, Boolean.TRUE );\n-            settings.put( SslPolicyConfig.forScope( SslPolicyScope.BOLT ).base_directory, certificates );\n+            settings.put(SslPolicyConfig.forScope(SslPolicyScope.BOLT).enabled, Boolean.TRUE);\n+            settings.put(SslPolicyConfig.forScope(SslPolicyScope.BOLT).base_directory, certificates);\n         }\n \n-        SslPolicyConfig clusterConfig = SslPolicyConfig.forScope( SslPolicyScope.CLUSTER );\n-        if ( settings.containsKey( clusterConfig.enabled ) )\n+        SslPolicyConfig clusterConfig = SslPolicyConfig.forScope(SslPolicyScope.CLUSTER);\n+        if (settings.containsKey(clusterConfig.enabled))\n         {\n-            var clusterCertificates = workingDirectory.resolve( \"cluster-cert\" );\n-            SelfSignedCertificateFactory.create( clusterCertificates );\n+            var clusterCertificates = workingDirectory.resolve(\"cluster-cert\");\n+            SelfSignedCertificateFactory.create(clusterCertificates);\n \n-            settings.put( SslPolicyConfig.forScope( SslPolicyScope.CLUSTER ).enabled, Boolean.TRUE );\n-            settings.put( SslPolicyConfig.forScope( SslPolicyScope.CLUSTER ).base_directory, clusterCertificates );\n+            settings.put(SslPolicyConfig.forScope(SslPolicyScope.CLUSTER).enabled, Boolean.TRUE);\n+            settings.put(SslPolicyConfig.forScope(SslPolicyScope.CLUSTER).base_directory, clusterCertificates);\n         }\n     }\n \n-    private Map<Setting<?>,Object> configure( Consumer<Map<Setting<?>,Object>> overrideSettingsFunction )\n+    private Map<Setting<?>, Object> configure(Consumer<Map<Setting<?>, Object>> overrideSettingsFunction)\n     {\n-        Map<Setting<?>,Object> settings = new HashMap<>();\n-        settings.put( GraphDatabaseSettings.auth_enabled, false );\n-        settings.put( BoltConnector.enabled, true );\n-        settings.put( BoltConnector.listen_address, new SocketAddress( \"localhost\", 0 ) );\n-        settings.put( BoltConnector.encryption_level, DISABLED );\n-        configure.accept( settings );\n-        overrideSettingsFunction.accept( settings );\n+        Map<Setting<?>, Object> settings = new HashMap<>();\n+        settings.put(GraphDatabaseSettings.auth_enabled, false);\n+        settings.put(BoltConnector.enabled, true);\n+        settings.put(BoltConnector.listen_address, new SocketAddress(\"localhost\", 0));\n+        settings.put(BoltConnector.encryption_level, DISABLED);\n+        configure.accept(settings);\n+        overrideSettingsFunction.accept(settings);\n         return settings;\n     }\n \n-    public static Consumer<Map<Setting<?>,Object>> withOptionalBoltEncryption()\n+    public static Consumer<Map<Setting<?>, Object>> withOptionalBoltEncryption()\n     {\n-        return settings -> settings.put( BoltConnector.encryption_level, OPTIONAL );\n+        return settings -> settings.put(BoltConnector.encryption_level, OPTIONAL);\n     }\n \n     public GraphDatabaseService graphDatabaseService()\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
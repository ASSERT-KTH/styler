{
    "project_name": "neo4j-neo4j",
    "error_id": "1830",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "104",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "189",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "252",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "261",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "271",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "277",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "325",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "365",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "410",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "424",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "510",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "529",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "547",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "564",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "581",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1830/DefaultEntityValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1830/DefaultEntityValueIndexCursor.java\nindex 63d249728f7..35db35cf1e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1830/DefaultEntityValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1830/DefaultEntityValueIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -70,11 +71,11 @@ import static org.neo4j.kernel.impl.newapi.TxStateIndexChanges.indexUpdatesWithV\n import static org.neo4j.kernel.impl.newapi.TxStateIndexChanges.indexUpdatesWithValuesForScan;\n import static org.neo4j.kernel.impl.newapi.TxStateIndexChanges.indexUpdatesWithValuesForSuffixOrContains;\n \n-abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexProgressor,CURSOR> implements\n-        ValueIndexCursor, IndexResultScore, EntityIndexSeekClient, SortedMergeJoin.Sink\n+abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexProgressor, CURSOR> implements\n+  ValueIndexCursor, IndexResultScore, EntityIndexSeekClient, SortedMergeJoin.Sink\n {\n-    private static final Comparator<LongObjectPair<Value[]>> ASCENDING_COMPARATOR = computeComparator( Values.COMPARATOR );\n-    private static final Comparator<LongObjectPair<Value[]>> DESCENDING_COMPARATOR = computeComparator( ( o1, o2 ) -> - Values.COMPARATOR.compare( o1, o2 ) );\n+    private static final Comparator<LongObjectPair<Value[]>> ASCENDING_COMPARATOR = computeComparator(Values.COMPARATOR);\n+    private static final Comparator<LongObjectPair<Value[]>> DESCENDING_COMPARATOR = computeComparator((o1, o2) -> -Values.COMPARATOR.compare(o1, o2));\n \n     private Read read;\n     private long entity;\n@@ -93,9 +94,9 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     private AccessMode accessMode;\n     private boolean shortcutSecurity;\n \n-    DefaultEntityValueIndexCursor( CursorPool<CURSOR> pool, MemoryTracker memoryTracker )\n+    DefaultEntityValueIndexCursor(CursorPool<CURSOR> pool, MemoryTracker memoryTracker)\n     {\n-        super( pool );\n+        super(pool);\n         this.memoryTracker = memoryTracker;\n         entity = NO_ID;\n         score = Float.NaN;\n@@ -103,91 +104,89 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     }\n \n     @Override\n-    public final void initialize( IndexDescriptor descriptor,\n-            IndexProgressor progressor,\n-            IndexQuery[] query,\n-            IndexQueryConstraints constraints,\n-            boolean indexIncludesTransactionState )\n+    public final void initialize(IndexDescriptor descriptor,\n+                                 IndexProgressor progressor,\n+                                 IndexQuery[] query,\n+                                 IndexQueryConstraints constraints,\n+                                 boolean indexIncludesTransactionState)\n     {\n         assert query != null;\n-        super.initialize( progressor );\n+        super.initialize(progressor);\n         this.indexOrder = constraints.order();\n         this.needsValues = constraints.needsValues();\n-        sortedMergeJoin.initialize( indexOrder );\n+        sortedMergeJoin.initialize(indexOrder);\n \n         this.query = query;\n \n-        if ( tracer != null )\n+        if (tracer != null)\n         {\n-            tracer.onIndexSeek( );\n+            tracer.onIndexSeek();\n         }\n \n-        shortcutSecurity = setupSecurity( descriptor );\n+        shortcutSecurity = setupSecurity(descriptor);\n \n-        if ( !indexIncludesTransactionState && read.hasTxStateWithChanges() && query.length > 0 )\n+        if (!indexIncludesTransactionState && read.hasTxStateWithChanges() && query.length > 0)\n         {\n             // Extract out the equality queries\n-            List<Value> exactQueryValues = new ArrayList<>( query.length );\n+            List<Value> exactQueryValues = new ArrayList<>(query.length);\n             int i = 0;\n-            while ( i < query.length && query[i] instanceof IndexQuery.ExactPredicate )\n+            while (i < query.length && query[i] instanceof IndexQuery.ExactPredicate)\n             {\n-                exactQueryValues.add( ((IndexQuery.ExactPredicate) query[i]).value() );\n+                exactQueryValues.add(((IndexQuery.ExactPredicate) query[i]).value());\n                 i++;\n             }\n-            Value[] exactValues = exactQueryValues.toArray( new Value[0] );\n+            Value[] exactValues = exactQueryValues.toArray(new Value[0]);\n \n-            if ( i == query.length )\n+            if (i == query.length)\n             {\n                 // Only exact queries\n                 // No need to order, all values are the same\n                 this.indexOrder = IndexOrder.NONE;\n-                seekQuery( descriptor, exactValues );\n-            }\n-            else\n+                seekQuery(descriptor, exactValues);\n+            } else\n             {\n                 IndexQuery nextQuery = query[i];\n-                switch ( nextQuery.type() )\n+                switch (nextQuery.type())\n                 {\n-                case exists:\n-                    // This also covers the rewritten suffix/contains for composite index\n-                    // If composite index all following will be exists as well so no need to consider those\n-                    setNeedsValuesIfRequiresOrder();\n-                    if ( exactQueryValues.isEmpty() )\n-                    {\n-                        // First query is exists, use scan\n-                        scanQuery( descriptor );\n-                    }\n-                    else\n-                    {\n-                        rangeQuery( descriptor, exactValues, null );\n-                    }\n-                    break;\n-\n-                case range:\n-                    // This case covers first query to be range or exact followed by range\n-                    // If composite index all following will be exists as well so no need to consider those\n-                    setNeedsValuesIfRequiresOrder();\n-                    rangeQuery( descriptor, exactValues, (IndexQuery.RangePredicate<?>) nextQuery );\n-                    break;\n-\n-                case stringPrefix:\n-                    // This case covers first query to be prefix or exact followed by prefix\n-                    // If composite index all following will be exists as well so no need to consider those\n-                    setNeedsValuesIfRequiresOrder();\n-                    prefixQuery( descriptor, exactValues, (IndexQuery.StringPrefixPredicate) nextQuery );\n-                    break;\n-\n-                case stringSuffix:\n-                case stringContains:\n-                    // This case covers suffix/contains for singular indexes\n-                    // for composite index, the suffix/contains should already\n-                    // have been rewritten as exists + filter, so no need to consider it here\n-                    assert query.length == 1;\n-                    suffixOrContainsQuery( descriptor, nextQuery );\n-                    break;\n-\n-                default:\n-                    throw new UnsupportedOperationException( \"Query not supported: \" + Arrays.toString( query ) );\n+                    case exists:\n+                        // This also covers the rewritten suffix/contains for composite index\n+                        // If composite index all following will be exists as well so no need to consider those\n+                        setNeedsValuesIfRequiresOrder();\n+                        if (exactQueryValues.isEmpty())\n+                        {\n+                            // First query is exists, use scan\n+                            scanQuery(descriptor);\n+                        } else\n+                        {\n+                            rangeQuery(descriptor, exactValues, null);\n+                        }\n+                        break;\n+\n+                    case range:\n+                        // This case covers first query to be range or exact followed by range\n+                        // If composite index all following will be exists as well so no need to consider those\n+                        setNeedsValuesIfRequiresOrder();\n+                        rangeQuery(descriptor, exactValues, (IndexQuery.RangePredicate<?>) nextQuery);\n+                        break;\n+\n+                    case stringPrefix:\n+                        // This case covers first query to be prefix or exact followed by prefix\n+                        // If composite index all following will be exists as well so no need to consider those\n+                        setNeedsValuesIfRequiresOrder();\n+                        prefixQuery(descriptor, exactValues, (IndexQuery.StringPrefixPredicate) nextQuery);\n+                        break;\n+\n+                    case stringSuffix:\n+                    case stringContains:\n+                        // This case covers suffix/contains for singular indexes\n+                        // for composite index, the suffix/contains should already\n+                        // have been rewritten as exists + filter, so no need to consider it here\n+                        assert query.length == 1;\n+                        suffixOrContainsQuery(descriptor, nextQuery);\n+                        break;\n+\n+                    default:\n+                        throw new UnsupportedOperationException(\"Query not supported: \" + Arrays.toString(query));\n                 }\n             }\n         }\n@@ -199,25 +198,24 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n      */\n     private void setNeedsValuesIfRequiresOrder()\n     {\n-        if ( indexOrder != IndexOrder.NONE )\n+        if (indexOrder != IndexOrder.NONE)\n         {\n             this.needsValues = true;\n         }\n     }\n \n-    private boolean isRemoved( long reference )\n+    private boolean isRemoved(long reference)\n     {\n-        return removed.contains( reference );\n+        return removed.contains(reference);\n     }\n \n     @Override\n-    public final boolean acceptEntity( long reference, float score, Value... values )\n+    public final boolean acceptEntity(long reference, float score, Value... values)\n     {\n-        if ( isRemoved( reference ) || !allowed( reference ) )\n+        if (isRemoved(reference) || !allowed(reference))\n         {\n             return false;\n-        }\n-        else\n+        } else\n         {\n             this.entity = reference;\n             this.score = score;\n@@ -240,11 +238,10 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     @Override\n     public final boolean next()\n     {\n-        if ( indexOrder == IndexOrder.NONE )\n+        if (indexOrder == IndexOrder.NONE)\n         {\n             return nextWithoutOrder();\n-        }\n-        else\n+        } else\n         {\n             return nextWithOrdering();\n         }\n@@ -252,37 +249,34 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n \n     private boolean nextWithoutOrder()\n     {\n-        if ( !needsValues && added.hasNext() )\n+        if (!needsValues && added.hasNext())\n         {\n             this.entity = added.next();\n             this.values = null;\n-            if ( tracer != null )\n+            if (tracer != null)\n             {\n-                traceOnEntity( tracer, entity );\n+                traceOnEntity(tracer, entity);\n             }\n             return true;\n-        }\n-        else if ( needsValues && addedWithValues.hasNext() )\n+        } else if (needsValues && addedWithValues.hasNext())\n         {\n             EntityWithPropertyValues entityWithPropertyValues = addedWithValues.next();\n             this.entity = entityWithPropertyValues.getEntityId();\n             this.values = entityWithPropertyValues.getValues();\n-            if ( tracer != null )\n+            if (tracer != null)\n             {\n-                traceOnEntity( tracer, entity );\n+                traceOnEntity(tracer, entity);\n             }\n             return true;\n-        }\n-        else if ( added.hasNext() || addedWithValues.hasNext() )\n+        } else if (added.hasNext() || addedWithValues.hasNext())\n         {\n-            throw new IllegalStateException( \"Index cursor cannot have transaction state with values and without values simultaneously\" );\n-        }\n-        else\n+            throw new IllegalStateException(\"Index cursor cannot have transaction state with values and without values simultaneously\");\n+        } else\n         {\n             boolean next = innerNext();\n-            if ( tracer != null && next )\n+            if (tracer != null && next)\n             {\n-                traceOnEntity( tracer, entity );\n+                traceOnEntity(tracer, entity);\n             }\n             return next;\n         }\n@@ -290,38 +284,37 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n \n     private boolean nextWithOrdering()\n     {\n-        if ( sortedMergeJoin.needsA() && addedWithValues.hasNext() )\n+        if (sortedMergeJoin.needsA() && addedWithValues.hasNext())\n         {\n             EntityWithPropertyValues entityWithPropertyValues = addedWithValues.next();\n-            sortedMergeJoin.setA( entityWithPropertyValues.getEntityId(), entityWithPropertyValues.getValues() );\n+            sortedMergeJoin.setA(entityWithPropertyValues.getEntityId(), entityWithPropertyValues.getValues());\n         }\n \n-        if ( sortedMergeJoin.needsB() && innerNextFromBuffer() )\n+        if (sortedMergeJoin.needsB() && innerNextFromBuffer())\n         {\n-            sortedMergeJoin.setB( entity, values );\n+            sortedMergeJoin.setB(entity, values);\n         }\n \n-        boolean next = sortedMergeJoin.next( this );\n-        if ( tracer != null && next )\n+        boolean next = sortedMergeJoin.next(this);\n+        if (tracer != null && next)\n         {\n-            traceOnEntity( tracer, entity );\n+            traceOnEntity(tracer, entity);\n         }\n         return next;\n     }\n \n     private boolean innerNextFromBuffer()\n     {\n-        if ( eagerPointIterator != null )\n+        if (eagerPointIterator != null)\n         {\n             return streamPointsFromIterator();\n         }\n \n         boolean innerNext = innerNext();\n-        if ( values != null && innerNext && indexOrder != IndexOrder.NONE )\n+        if (values != null && innerNext && indexOrder != IndexOrder.NONE)\n         {\n             return eagerizingPoints();\n-        }\n-        else\n+        } else\n         {\n             return innerNext;\n         }\n@@ -329,9 +322,9 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n \n     private boolean containsPoints()\n     {\n-        for ( Value value : values )\n+        for (Value value : values)\n         {\n-            if ( value instanceof PointValue || value instanceof PointArray )\n+            if (value instanceof PointValue || value instanceof PointArray)\n             {\n                 return true;\n             }\n@@ -344,47 +337,46 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n         HeapTrackingArrayList<LongObjectPair<Value[]>> eagerPointBuffer = null;\n         boolean shouldContinue = true;\n \n-        while ( shouldContinue && containsPoints() )\n+        while (shouldContinue && containsPoints())\n         {\n-            if ( eagerPointBuffer == null )\n+            if (eagerPointBuffer == null)\n             {\n-                eagerPointBuffer = HeapTrackingArrayList.newArrayList( 256, memoryTracker );\n+                eagerPointBuffer = HeapTrackingArrayList.newArrayList(256, memoryTracker);\n             }\n-            eagerPointBuffer.add( PrimitiveTuples.pair( entity, Arrays.copyOf( values, values.length ) ));\n+            eagerPointBuffer.add(PrimitiveTuples.pair(entity, Arrays.copyOf(values, values.length)));\n             shouldContinue = innerNext();\n         }\n-        if ( eagerPointBuffer != null )\n+        if (eagerPointBuffer != null)\n         {\n-            if ( shouldContinue )\n+            if (shouldContinue)\n             {\n-                this.cachedValues = PrimitiveTuples.pair( entity, Arrays.copyOf( values, values.length ) );\n+                this.cachedValues = PrimitiveTuples.pair(entity, Arrays.copyOf(values, values.length));\n             }\n \n-            eagerPointBuffer.sort( comparator() );\n-            eagerPointIterator = ResourceClosingIterator.newResourceIterator( eagerPointBuffer.autoClosingIterator(), asResource( eagerPointBuffer ) );\n+            eagerPointBuffer.sort(comparator());\n+            eagerPointIterator = ResourceClosingIterator.newResourceIterator(eagerPointBuffer.autoClosingIterator(), asResource(eagerPointBuffer));\n             return streamPointsFromIterator();\n-        }\n-        else\n+        } else\n         {\n             return true;\n         }\n     }\n \n-    private Resource asResource( AutoCloseable resource )\n+    private Resource asResource(AutoCloseable resource)\n     {\n-        return () -> IOUtils.closeAllUnchecked( resource );\n+        return () -> IOUtils.closeAllUnchecked(resource);\n     }\n \n-    private static Comparator<LongObjectPair<Value[]>> computeComparator( Comparator<Value> comparator )\n+    private static Comparator<LongObjectPair<Value[]>> computeComparator(Comparator<Value> comparator)\n     {\n-        return ( o1, o2 ) ->\n+        return (o1, o2) ->\n         {\n             Value[] v1 = o1.getTwo();\n             Value[] v2 = o2.getTwo();\n-            for ( int i = 0; i < v1.length; i++ )\n+            for (int i = 0; i < v1.length; i++)\n             {\n-                int compare = comparator.compare( v1[i], v2[i] );\n-                if ( compare != 0 )\n+                int compare = comparator.compare(v1[i], v2[i]);\n+                if (compare != 0)\n                 {\n                     return compare;\n                 }\n@@ -396,49 +388,47 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n \n     private Comparator<LongObjectPair<Value[]>> comparator()\n     {\n-        switch ( indexOrder )\n+        switch (indexOrder)\n         {\n-        case ASCENDING:\n-            return ASCENDING_COMPARATOR;\n-        case DESCENDING:\n-            return DESCENDING_COMPARATOR;\n-        default:\n-            throw new IllegalStateException( \"can't sort if no indexOrder defined\" );\n+            case ASCENDING:\n+                return ASCENDING_COMPARATOR;\n+            case DESCENDING:\n+                return DESCENDING_COMPARATOR;\n+            default:\n+                throw new IllegalStateException(\"can't sort if no indexOrder defined\");\n         }\n     }\n \n     private boolean streamPointsFromIterator()\n     {\n-        if ( eagerPointIterator.hasNext() )\n+        if (eagerPointIterator.hasNext())\n         {\n             LongObjectPair<Value[]> nextPair = eagerPointIterator.next();\n             entity = nextPair.getOne();\n             values = nextPair.getTwo();\n             return true;\n-        }\n-        else if ( cachedValues != null )\n+        } else if (cachedValues != null)\n         {\n             values = cachedValues.getTwo();\n             entity = cachedValues.getOne();\n             eagerPointIterator = null;\n             cachedValues = null;\n             return true;\n-        }\n-        else\n+        } else\n         {\n             return false;\n         }\n     }\n \n     @Override\n-    public final void acceptSortedMergeJoin( long entityId, Value[] values )\n+    public final void acceptSortedMergeJoin(long entityId, Value[] values)\n     {\n         this.entity = entityId;\n         this.values = values;\n     }\n \n     @Override\n-    public final void setRead( Read read )\n+    public final void setRead(Read read)\n     {\n         this.read = read;\n     }\n@@ -450,7 +440,7 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     }\n \n     @Override\n-    public final int propertyKey( int offset )\n+    public final int propertyKey(int offset)\n     {\n         return query[offset].propertyKeyId();\n     }\n@@ -468,7 +458,7 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     }\n \n     @Override\n-    public final Value propertyValue( int offset )\n+    public final Value propertyValue(int offset)\n     {\n         return values[offset];\n     }\n@@ -476,7 +466,7 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     @Override\n     public final void closeInternal()\n     {\n-        if ( !isClosed() )\n+        if (!isClosed())\n         {\n             closeProgressor();\n             this.entity = NO_ID;\n@@ -489,7 +479,7 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n             this.addedWithValues = Collections.emptyIterator();\n             this.removed = LongSets.immutable.empty();\n \n-            if ( eagerPointIterator  != null )\n+            if (eagerPointIterator != null)\n             {\n                 eagerPointIterator.close();\n             }\n@@ -506,100 +496,95 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     @Override\n     public String toString()\n     {\n-        if ( isClosed() )\n+        if (isClosed())\n         {\n             return implementationName() + \"[closed state]\";\n-        }\n-        else\n+        } else\n         {\n-            String keys = query == null ? \"unknown\" : Arrays.toString( stream( query ).map( IndexQuery::propertyKeyId ).toArray( Integer[]::new ) );\n+            String keys = query == null ? \"unknown\" : Arrays.toString(stream(query).map(IndexQuery::propertyKeyId).toArray(Integer[]::new));\n             return implementationName() + \"[entity=\" + entity + \", open state with: keys=\" + keys +\n-                    \", values=\" + Arrays.toString( values ) + \"]\";\n+              \", values=\" + Arrays.toString(values) + \"]\";\n         }\n     }\n \n-    private void prefixQuery( IndexDescriptor descriptor, Value[] equalityPrefix, IndexQuery.StringPrefixPredicate predicate )\n+    private void prefixQuery(IndexDescriptor descriptor, Value[] equalityPrefix, IndexQuery.StringPrefixPredicate predicate)\n     {\n         TransactionState txState = read.txState();\n \n-        if ( needsValues )\n+        if (needsValues)\n         {\n             AddedWithValuesAndRemoved changes =\n-                    indexUpdatesWithValuesForRangeSeekByPrefix( txState, descriptor, equalityPrefix, predicate.prefix(), indexOrder );\n+              indexUpdatesWithValuesForRangeSeekByPrefix(txState, descriptor, equalityPrefix, predicate.prefix(), indexOrder);\n             addedWithValues = changes.getAdded().iterator();\n-            removed = removed( txState, changes.getRemoved() );\n-        }\n-        else\n+            removed = removed(txState, changes.getRemoved());\n+        } else\n         {\n             AddedAndRemoved changes =\n-                    indexUpdatesForRangeSeekByPrefix( txState, descriptor, equalityPrefix, predicate.prefix(), indexOrder );\n+              indexUpdatesForRangeSeekByPrefix(txState, descriptor, equalityPrefix, predicate.prefix(), indexOrder);\n             added = changes.getAdded().longIterator();\n-            removed = removed( txState, changes.getRemoved() );\n+            removed = removed(txState, changes.getRemoved());\n         }\n     }\n \n-    private void rangeQuery( IndexDescriptor descriptor, Value[] equalityPrefix, IndexQuery.RangePredicate<?> predicate )\n+    private void rangeQuery(IndexDescriptor descriptor, Value[] equalityPrefix, IndexQuery.RangePredicate<?> predicate)\n     {\n         TransactionState txState = read.txState();\n \n-        if ( needsValues )\n+        if (needsValues)\n         {\n             AddedWithValuesAndRemoved\n-                    changes = indexUpdatesWithValuesForRangeSeek( txState, descriptor, equalityPrefix, predicate, indexOrder );\n+              changes = indexUpdatesWithValuesForRangeSeek(txState, descriptor, equalityPrefix, predicate, indexOrder);\n             addedWithValues = changes.getAdded().iterator();\n-            removed = removed( txState, changes.getRemoved() );\n-        }\n-        else\n+            removed = removed(txState, changes.getRemoved());\n+        } else\n         {\n-            AddedAndRemoved changes = indexUpdatesForRangeSeek( txState, descriptor, equalityPrefix, predicate, indexOrder );\n+            AddedAndRemoved changes = indexUpdatesForRangeSeek(txState, descriptor, equalityPrefix, predicate, indexOrder);\n             added = changes.getAdded().longIterator();\n-            removed = removed( txState, changes.getRemoved() );\n+            removed = removed(txState, changes.getRemoved());\n         }\n     }\n \n-    private void scanQuery( IndexDescriptor descriptor )\n+    private void scanQuery(IndexDescriptor descriptor)\n     {\n         TransactionState txState = read.txState();\n \n-        if ( needsValues )\n+        if (needsValues)\n         {\n-            AddedWithValuesAndRemoved changes = indexUpdatesWithValuesForScan( txState, descriptor, indexOrder );\n+            AddedWithValuesAndRemoved changes = indexUpdatesWithValuesForScan(txState, descriptor, indexOrder);\n             addedWithValues = changes.getAdded().iterator();\n-            removed = removed( txState, changes.getRemoved() );\n-        }\n-        else\n+            removed = removed(txState, changes.getRemoved());\n+        } else\n         {\n-            AddedAndRemoved changes = indexUpdatesForScan( txState, descriptor, indexOrder );\n+            AddedAndRemoved changes = indexUpdatesForScan(txState, descriptor, indexOrder);\n             added = changes.getAdded().longIterator();\n-            removed = removed( txState, changes.getRemoved() );\n+            removed = removed(txState, changes.getRemoved());\n         }\n     }\n \n-    private void suffixOrContainsQuery( IndexDescriptor descriptor, IndexQuery query )\n+    private void suffixOrContainsQuery(IndexDescriptor descriptor, IndexQuery query)\n     {\n         TransactionState txState = read.txState();\n \n-        if ( needsValues )\n+        if (needsValues)\n         {\n-            AddedWithValuesAndRemoved changes = indexUpdatesWithValuesForSuffixOrContains( txState, descriptor, query, indexOrder );\n+            AddedWithValuesAndRemoved changes = indexUpdatesWithValuesForSuffixOrContains(txState, descriptor, query, indexOrder);\n             addedWithValues = changes.getAdded().iterator();\n-            removed = removed( txState, changes.getRemoved() );\n-        }\n-        else\n+            removed = removed(txState, changes.getRemoved());\n+        } else\n         {\n-            AddedAndRemoved changes = indexUpdatesForSuffixOrContains( txState, descriptor, query, indexOrder );\n+            AddedAndRemoved changes = indexUpdatesForSuffixOrContains(txState, descriptor, query, indexOrder);\n             added = changes.getAdded().longIterator();\n-            removed = removed( txState, changes.getRemoved() );\n+            removed = removed(txState, changes.getRemoved());\n         }\n     }\n \n-    private void seekQuery( IndexDescriptor descriptor, Value[] values )\n+    private void seekQuery(IndexDescriptor descriptor, Value[] values)\n     {\n         TransactionState txState = read.txState();\n \n-        AddedAndRemoved changes = indexUpdatesForSeek( txState, descriptor, ValueTuple.of( values ) );\n+        AddedAndRemoved changes = indexUpdatesForSeek(txState, descriptor, ValueTuple.of(values));\n         added = changes.getAdded().longIterator();\n-        removed = removed( txState, changes.getRemoved() );\n+        removed = removed(txState, changes.getRemoved());\n     }\n \n     final long entityReference()\n@@ -607,34 +592,34 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n         return entity;\n     }\n \n-    final void readEntity( EntityReader entityReader )\n+    final void readEntity(EntityReader entityReader)\n     {\n-        entityReader.read( read );\n+        entityReader.read(read);\n     }\n \n-    private boolean setupSecurity( IndexDescriptor descriptor )\n+    private boolean setupSecurity(IndexDescriptor descriptor)\n     {\n-        if ( allowsAll() )\n+        if (allowsAll())\n         {\n             return true;\n         }\n \n-        if ( accessMode == null )\n+        if (accessMode == null)\n         {\n             accessMode = read.ktx.securityContext().mode();\n         }\n \n-        return canAccessAllDescribedEntities( descriptor, accessMode );\n+        return canAccessAllDescribedEntities(descriptor, accessMode);\n     }\n \n-    boolean allowed( long reference )\n+    boolean allowed(long reference)\n     {\n-        if ( shortcutSecurity )\n+        if (shortcutSecurity)\n         {\n             return true;\n         }\n \n-        return allowed( reference, accessMode );\n+        return allowed(reference, accessMode);\n     }\n \n     /**\n@@ -642,22 +627,22 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n      * <p>\n      * If {@code true} is returned, it means that security check does not need to be performed for each item in the cursor.\n      */\n-    abstract boolean canAccessAllDescribedEntities( IndexDescriptor descriptor, AccessMode accessMode );\n+    abstract boolean canAccessAllDescribedEntities(IndexDescriptor descriptor, AccessMode accessMode);\n \n     /**\n      * Gets entities removed in the current transaction that are relevant for the index.\n      */\n-    abstract ImmutableLongSet removed( TransactionState txState, LongSet removedFromIndex );\n+    abstract ImmutableLongSet removed(TransactionState txState, LongSet removedFromIndex);\n \n     /**\n      * Checks if the user is allowed to see the entity and properties the cursor is currently pointing at.\n      */\n-    abstract boolean allowed( long reference, AccessMode accessMode );\n+    abstract boolean allowed(long reference, AccessMode accessMode);\n \n     /**\n      * An abstraction over {@link KernelReadTracer#onNode(long)} and {@link KernelReadTracer#onRelationship(long)}.\n      */\n-    abstract void traceOnEntity( KernelReadTracer tracer, long entity );\n+    abstract void traceOnEntity(KernelReadTracer tracer, long entity);\n \n     /**\n      * Name of the concrete implementation used in {@link #toString()}.\n@@ -667,6 +652,6 @@ abstract class DefaultEntityValueIndexCursor<CURSOR> extends IndexCursor<IndexPr\n     @FunctionalInterface\n     interface EntityReader\n     {\n-        void read( Read read );\n+        void read(Read read);\n     }\n }\n",
            "diff_size": 194
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2625",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2625/AbstractIndexKeyLengthValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2625/AbstractIndexKeyLengthValidator.java\nindex 81dbac000ba..09f0dd9a030 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2625/AbstractIndexKeyLengthValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2625/AbstractIndexKeyLengthValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.kernel.impl.util.Validator;\n@@ -26,39 +27,39 @@ import org.neo4j.values.storable.Values;\n \n public abstract class AbstractIndexKeyLengthValidator implements Validator<Value>\n {\n-    protected final int maxByteLength;\n-    private final int checkThreshold;\n+  protected final int maxByteLength;\n+  private final int checkThreshold;\n \n-    protected AbstractIndexKeyLengthValidator( int maxByteLength )\n-    {\n-        this.maxByteLength = maxByteLength;\n+  protected AbstractIndexKeyLengthValidator(int maxByteLength)\n+  {\n+    this.maxByteLength = maxByteLength;\n \n-        // This check threshold is for not having to check every value that comes in, only those that may have a chance to exceed the max length.\n-        // The value 5 comes from a safer 4, which is the number of bytes that a max size UTF-8 code point needs.\n-        this.checkThreshold = maxByteLength / 5;\n-    }\n+    // This check threshold is for not having to check every value that comes in, only those that may have a chance to exceed the max length.\n+    // The value 5 comes from a safer 4, which is the number of bytes that a max size UTF-8 code point needs.\n+    this.checkThreshold = maxByteLength / 5;\n+  }\n \n-    @Override\n-    public void validate( Value value )\n+  @Override\n+  public void validate(Value value)\n+  {\n+    if (value == null || value == Values.NO_VALUE)\n+    {\n+      throw new IllegalArgumentException(\"Null value\");\n+    }\n+    if (Values.isTextValue(value) && ((TextValue) value).length() >= checkThreshold)\n     {\n-        if ( value == null || value == Values.NO_VALUE )\n-        {\n-            throw new IllegalArgumentException( \"Null value\" );\n-        }\n-        if ( Values.isTextValue( value ) && ((TextValue)value).length() >= checkThreshold )\n-        {\n-            int length = indexKeyLength( value );\n-            validateLength( length );\n-        }\n+      int length = indexKeyLength(value);\n+      validateLength(length);\n     }\n+  }\n \n-    void validateLength( int byteLength )\n+  void validateLength(int byteLength)\n+  {\n+    if (byteLength > maxByteLength)\n     {\n-        if ( byteLength > maxByteLength )\n-        {\n-            throw new IllegalArgumentException( \"Property value size is too large for index. Please see index documentation for limitations.\" );\n-        }\n+      throw new IllegalArgumentException(\"Property value size is too large for index. Please see index documentation for limitations.\");\n     }\n+  }\n \n-    protected abstract int indexKeyLength( Value value );\n+  protected abstract int indexKeyLength(Value value);\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2625/AbstractIndexKeyLengthValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2625/AbstractIndexKeyLengthValidator.java\nindex 81dbac000ba..dfcfae5c844 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2625/AbstractIndexKeyLengthValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2625/AbstractIndexKeyLengthValidator.java\n@@ -45,7 +45,8 @@ public abstract class AbstractIndexKeyLengthValidator implements Validator<Value\n         {\n             throw new IllegalArgumentException( \"Null value\" );\n         }\n-        if ( Values.isTextValue( value ) && ((TextValue)value).length() >= checkThreshold )\n+\n+if ( Values.isTextValue( value ) && ((TextValue) value).length() >= checkThreshold )\n         {\n             int length = indexKeyLength( value );\n             validateLength( length );\n@@ -54,11 +55,11 @@ public abstract class AbstractIndexKeyLengthValidator implements Validator<Value\n \n     void validateLength( int byteLength )\n     {\n-        if ( byteLength > maxByteLength )\n+        if ( byteLength> maxByteLength )\n         {\n             throw new IllegalArgumentException( \"Property value size is too large for index. Please see index documentation for limitations.\" );\n         }\n     }\n \n     protected abstract int indexKeyLength( Value value );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
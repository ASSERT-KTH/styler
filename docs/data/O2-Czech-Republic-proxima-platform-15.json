{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class StateTest {\n\n  private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-transactions.conf\"));\n  private final EntityDescriptor gateway = repo.getEntity(\"gateway\");\n  private final AttributeDescriptor<byte[]> status = gateway.getAttribute(\"status\");\n  private final AttributeDescriptor<byte[]> device = gateway.getAttribute(\"device.*\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/15/StateTest.java\nindex 746d42928a2..a17fbb9f9ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/15/StateTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.transaction;\n \n import static org.junit.Assert.*;\n@@ -29,7 +30,8 @@ import org.junit.Test;\n /** Test {@link State} transitions. */\n public class StateTest {\n \n-  private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-transactions.conf\"));\n+  private final Repository repo =\n+      Repository.ofTest(ConfigFactory.load(\"test-transactions.conf\"));\n   private final EntityDescriptor gateway = repo.getEntity(\"gateway\");\n   private final AttributeDescriptor<byte[]> status = gateway.getAttribute(\"status\");\n   private final AttributeDescriptor<byte[]> device = gateway.getAttribute(\"device.*\");\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/15/StateTest.java\nindex 746d42928a2..43f2159b0f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/15/StateTest.java\n@@ -60,4 +60,4 @@ public class StateTest {\n     assertEquals(5L, aborted.getSequentialId());\n     assertEquals(1234567890000L, s.getStamp());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'Iterables' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'Iterables' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/15/StateTest.java\nindex 746d42928a2..46060d4f6ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/15/StateTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/15/StateTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.transaction;\n \n import static org.junit.Assert.*;\n-\n import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n import com.typesafe.config.ConfigFactory;\n@@ -27,6 +26,8 @@ import java.util.Collections;\n import org.junit.Test;\n \n /** Test {@link State} transitions. */\n+\n+\n public class StateTest {\n \n   private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-transactions.conf\"));\n@@ -51,8 +52,8 @@ public class StateTest {\n     assertEquals(1, committed.getInputAttributes().size());\n     assertEquals(1, committed.getCommittedAttributes().size());\n     assertNotEquals(\n-        Iterables.get(committed.getInputAttributes(), 0),\n-        Iterables.get(committed.getCommittedAttributes(), 0));\n+      Iterables.get(committed.getInputAttributes(), 0),\n+      Iterables.get(committed.getCommittedAttributes(), 0));\n     assertEquals(ka, Iterables.get(committed.getCommittedAttributes(), 0));\n     assertEquals(5L, committed.getSequentialId());\n     assertEquals(1234567890000L, s.getStamp());\n@@ -60,4 +61,4 @@ public class StateTest {\n     assertEquals(5L, aborted.getSequentialId());\n     assertEquals(1234567890000L, s.getStamp());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
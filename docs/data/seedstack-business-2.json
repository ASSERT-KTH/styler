{
    "project_name": "seedstack-business",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler;\n\nimport com.google.inject.AbstractModule;\nimport com.google.inject.Key;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/2/AssemblerModule.java\nindex 8a7e2776f22..e709f2827a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/2/AssemblerModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler;\n \n import com.google.inject.AbstractModule;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/2/AssemblerModule.java\nindex 8a7e2776f22..fc9434530b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/2/AssemblerModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler;\n \n import com.google.inject.AbstractModule;\n@@ -30,8 +31,8 @@ class AssemblerModule extends AbstractModule {\n     private final Collection<BindingStrategy> bindingStrategies;\n \n     AssemblerModule(Map<Key<?>, Class<?>> bindings,\n-            List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses,\n-            Collection<BindingStrategy> bindingStrategies) {\n+                    List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses,\n+                    Collection<BindingStrategy> bindingStrategies) {\n         this.bindings = bindings;\n         this.dtoInfoResolverClasses = dtoInfoResolverClasses;\n         this.bindingStrategies = bindingStrategies;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/2/AssemblerModule.java\nindex 8a7e2776f22..306d55e39ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/2/AssemblerModule.java\n@@ -29,10 +29,8 @@ class AssemblerModule extends AbstractModule {\n     private final List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses;\n     private final Collection<BindingStrategy> bindingStrategies;\n \n-    AssemblerModule(Map<Key<?>, Class<?>> bindings,\n-            List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses,\n-            Collection<BindingStrategy> bindingStrategies) {\n-        this.bindings = bindings;\n+    AssemblerModule(Map<Key<?>, Class<?>> bindings, List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses, Collection<BindingStrategy> bindingStrategies) {\n+    this.bindings = bindings;\n         this.dtoInfoResolverClasses = dtoInfoResolverClasses;\n         this.bindingStrategies = bindingStrategies;\n     }\n@@ -71,10 +69,10 @@ class AssemblerModule extends AbstractModule {\n                 LOGGER.trace(\"Binding DTO info resolver {}\", dtoInfoResolverClass.getName());\n                 multibinder.addBinding()\n                         .to(dtoInfoResolverClass);\n-            }\n+    }\n \n             expose(AssemblerRegistry.class);\n             expose(FluentAssembler.class);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "75",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 74, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "79",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 78, expected level should be 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "75",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 74, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "71",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 70, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "column": "69",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 68, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "65",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 64, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "4",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "column": "91",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 90, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "91",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 90, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "87",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 86, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/2/AssemblerModule.java\nindex 8a7e2776f22..8676a552b68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/2/AssemblerModule.java\n@@ -23,15 +23,15 @@ import org.seedstack.shed.reflect.Classes;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n class AssemblerModule extends AbstractModule {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(AssemblerModule.class);\n     private final Map<Key<?>, Class<?>> bindings;\n     private final List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses;\n     private final Collection<BindingStrategy> bindingStrategies;\n \n-    AssemblerModule(Map<Key<?>, Class<?>> bindings,\n-            List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses,\n-            Collection<BindingStrategy> bindingStrategies) {\n+    AssemblerModule(Map<Key<?>, Class<?>> bindings, List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses, Collection<BindingStrategy> bindingStrategies) {\n         this.bindings = bindings;\n         this.dtoInfoResolverClasses = dtoInfoResolverClasses;\n         this.bindingStrategies = bindingStrategies;\n@@ -40,41 +40,37 @@ class AssemblerModule extends AbstractModule {\n     @Override\n     protected void configure() {\n         install(new AssemblerPrivateModule(dtoInfoResolverClasses));\n-\n-        for (Map.Entry<Key<?>, Class<?>> binding : bindings.entrySet()) {\n-            LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue()\n-                    .getSimpleName());\n-            bind(binding.getKey()).to(Classes.cast(binding.getValue()));\n-        }\n+        for(Map.Entry<Key<?>, Class<?>> binding :bindings.entrySet()) {\n+                                                                          LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue()\n+                                                                              .getSimpleName());\n+                                                                          bind(binding.getKey()).to(Classes.cast(binding.getValue()));\n+                                                                      }\n \n         // Bind strategies\n-        for (BindingStrategy bindingStrategy : bindingStrategies) {\n-            bindingStrategy.resolve(binder());\n-        }\n+        for(BindingStrategy bindingStrategy :bindingStrategies) {\n+                                                                    bindingStrategy.resolve(binder());\n+                                                                }\n     }\n \n     private static class AssemblerPrivateModule extends PrivateModule {\n \n-        private final List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses;\n-\n-        AssemblerPrivateModule(List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses) {\n-            this.dtoInfoResolverClasses = dtoInfoResolverClasses;\n-        }\n+private final List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses;\n \n-        @Override\n-        protected void configure() {\n-            bind(AssemblerRegistry.class).to(AssemblerRegistryImpl.class);\n-            bind(FluentAssembler.class).to(FluentAssemblerImpl.class);\n-\n-            Multibinder<DtoInfoResolver> multibinder = Multibinder.newSetBinder(binder(), DtoInfoResolver.class);\n-            for (Class<? extends DtoInfoResolver> dtoInfoResolverClass : dtoInfoResolverClasses) {\n-                LOGGER.trace(\"Binding DTO info resolver {}\", dtoInfoResolverClass.getName());\n-                multibinder.addBinding()\n-                        .to(dtoInfoResolverClass);\n-            }\n+AssemblerPrivateModule(List<Class<? extends DtoInfoResolver>> dtoInfoResolverClasses) {\n+   this.dtoInfoResolverClasses = dtoInfoResolverClasses;\n+}\n \n-            expose(AssemblerRegistry.class);\n-            expose(FluentAssembler.class);\n-        }\n-    }\n+@Override\n+protected void configure() {\n+   bind(AssemblerRegistry.class).to(AssemblerRegistryImpl.class);\n+   bind(FluentAssembler.class).to(FluentAssemblerImpl.class);\n+   Multibinder<DtoInfoResolver> multibinder = Multibinder.newSetBinder(binder(), DtoInfoResolver.class);\n+   for(Class<? extends DtoInfoResolver> dtoInfoResolverClass :dtoInfoResolverClasses) {\n+                                                                                          LOGGER.trace(\"Binding DTO info resolver {}\", dtoInfoResolverClass.getName());\n+                                                                                          multibinder.addBinding().to(dtoInfoResolverClass);\n+                                                                                      }\n+   expose(AssemblerRegistry.class);\n+   expose(FluentAssembler.class);\n }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/2/AssemblerModule.java\nindex 8a7e2776f22..e709f2827a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/2/AssemblerModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler;\n \n import com.google.inject.AbstractModule;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/2/AssemblerModule.java\nindex 8a7e2776f22..e709f2827a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/2/AssemblerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/2/AssemblerModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler;\n \n import com.google.inject.AbstractModule;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
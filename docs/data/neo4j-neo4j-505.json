{
    "project_name": "neo4j-neo4j",
    "error_id": "505",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/505/LocalDateTimeArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/505/LocalDateTimeArray.java\nindex 5b785f7ecb6..56ea8dd550f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/505/LocalDateTimeArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/505/LocalDateTimeArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.LocalDateTime;\n@@ -30,11 +31,11 @@ import static org.neo4j.memory.HeapEstimator.sizeOfObjectArray;\n \n public class LocalDateTimeArray extends TemporalArray<LocalDateTime>\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( LocalDateTimeArray.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(LocalDateTimeArray.class);\n \n     private final LocalDateTime[] value;\n \n-    LocalDateTimeArray( LocalDateTime[] value )\n+    LocalDateTimeArray(LocalDateTime[] value)\n     {\n         assert value != null;\n         this.value = value;\n@@ -47,27 +48,27 @@ public class LocalDateTimeArray extends TemporalArray<LocalDateTime>\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n-        return mapper.mapLocalDateTimeArray( this );\n+        return mapper.mapLocalDateTimeArray(this);\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n-        return other.equals( value );\n+        return other.equals(value);\n     }\n \n     @Override\n-    public boolean equals( LocalDateTime[] x )\n+    public boolean equals(LocalDateTime[] x)\n     {\n-        return Arrays.equals( value, x);\n+        return Arrays.equals(value, x);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        writeTo( writer, ValueWriter.ArrayType.LOCAL_DATE_TIME ,value );\n+        writeTo(writer, ValueWriter.ArrayType.LOCAL_DATE_TIME, value);\n     }\n \n     @Override\n@@ -77,9 +78,9 @@ public class LocalDateTimeArray extends TemporalArray<LocalDateTime>\n     }\n \n     @Override\n-    int unsafeCompareTo( Value otherValue )\n+    int unsafeCompareTo(Value otherValue)\n     {\n-        return compareToNonPrimitiveArray( (LocalDateTimeArray) otherValue );\n+        return compareToNonPrimitiveArray((LocalDateTimeArray) otherValue);\n     }\n \n     @Override\n@@ -91,6 +92,6 @@ public class LocalDateTimeArray extends TemporalArray<LocalDateTime>\n     @Override\n     public long estimatedHeapUsage()\n     {\n-        return SHALLOW_SIZE + sizeOfObjectArray( LOCAL_DATE_TIME_SIZE, value.length );\n+        return SHALLOW_SIZE + sizeOfObjectArray(LOCAL_DATE_TIME_SIZE, value.length);\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
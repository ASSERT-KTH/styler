{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1069",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1069/VirtualRelationshipValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1069/VirtualRelationshipValue.java\nindex 4682f08660c..754736df09b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1069/VirtualRelationshipValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1069/VirtualRelationshipValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.virtual;\n \n \n@@ -28,46 +29,46 @@ import org.neo4j.values.VirtualValue;\n \n public abstract class VirtualRelationshipValue extends VirtualValue\n {\n-    public abstract long id();\n+  public abstract long id();\n \n-    @Override\n-    public int compareTo( VirtualValue other, Comparator<AnyValue> comparator )\n+  @Override\n+  public int compareTo(VirtualValue other, Comparator<AnyValue> comparator)\n+  {\n+    if (!(other instanceof VirtualRelationshipValue))\n     {\n-        if ( !(other instanceof VirtualRelationshipValue) )\n-        {\n-            throw new IllegalArgumentException( \"Cannot compare different virtual values\" );\n-        }\n-\n-        VirtualRelationshipValue otherNode = (VirtualRelationshipValue) other;\n-        return Long.compare( id(), otherNode.id() );\n+      throw new IllegalArgumentException(\"Cannot compare different virtual values\");\n     }\n \n-    @Override\n-    public int computeHash()\n-    {\n-        return Long.hashCode( id() );\n-    }\n+    VirtualRelationshipValue otherNode = (VirtualRelationshipValue) other;\n+    return Long.compare(id(), otherNode.id());\n+  }\n \n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapRelationship( this );\n-    }\n+  @Override\n+  public int computeHash()\n+  {\n+    return Long.hashCode(id());\n+  }\n \n-    @Override\n-    public boolean equals( VirtualValue other )\n-    {\n-        if ( !(other instanceof VirtualRelationshipValue) )\n-        {\n-            return false;\n-        }\n-        VirtualRelationshipValue that = (VirtualRelationshipValue) other;\n-        return id() == that.id();\n-    }\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapRelationship(this);\n+  }\n \n-    @Override\n-    public VirtualValueGroup valueGroup()\n+  @Override\n+  public boolean equals(VirtualValue other)\n+  {\n+    if (!(other instanceof VirtualRelationshipValue))\n     {\n-        return VirtualValueGroup.EDGE;\n+      return false;\n     }\n+    VirtualRelationshipValue that = (VirtualRelationshipValue) other;\n+    return id() == that.id();\n+  }\n+\n+  @Override\n+  public VirtualValueGroup valueGroup()\n+  {\n+    return VirtualValueGroup.EDGE;\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1069/VirtualRelationshipValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1069/VirtualRelationshipValue.java\nindex 4682f08660c..81ef34921ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1069/VirtualRelationshipValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1069/VirtualRelationshipValue.java\n@@ -18,8 +18,6 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.values.virtual;\n-\n-\n import java.util.Comparator;\n \n import org.neo4j.values.AnyValue;\n@@ -33,7 +31,7 @@ public abstract class VirtualRelationshipValue extends VirtualValue\n     @Override\n     public int compareTo( VirtualValue other, Comparator<AnyValue> comparator )\n     {\n-        if ( !(other instanceof VirtualRelationshipValue) )\n+        if ( !( other instanceof VirtualRelationshipValue) )\n         {\n             throw new IllegalArgumentException( \"Cannot compare different virtual values\" );\n         }\n@@ -57,11 +55,12 @@ public abstract class VirtualRelationshipValue extends VirtualValue\n     @Override\n     public boolean equals( VirtualValue other )\n     {\n-        if ( !(other instanceof VirtualRelationshipValue) )\n+        if ( !( other instanceof VirtualRelationshipValue) )\n         {\n             return false;\n         }\n-        VirtualRelationshipValue that = (VirtualRelationshipValue) other;\n+\n+VirtualRelationshipValue that = (VirtualRelationshipValue) other;\n         return id() == that.id();\n     }\n \n@@ -70,4 +69,4 @@ public abstract class VirtualRelationshipValue extends VirtualValue\n     {\n         return VirtualValueGroup.EDGE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
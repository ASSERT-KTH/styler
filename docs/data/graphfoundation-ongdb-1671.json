{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1671",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1671/PrepareStoreCopyRequestHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1671/PrepareStoreCopyRequestHandler.java\nindex b3f38bc6438..b24e336d1a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1671/PrepareStoreCopyRequestHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1671/PrepareStoreCopyRequestHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import io.netty.channel.ChannelHandlerContext;\n@@ -39,70 +40,68 @@ import static org.neo4j.causalclustering.catchup.storecopy.DataSourceChecks.hasS\n \n public class PrepareStoreCopyRequestHandler extends SimpleChannelInboundHandler<PrepareStoreCopyRequest>\n {\n-    private final CatchupServerProtocol protocol;\n-    private final Supplier<CheckPointer> checkPointerSupplier;\n-    private final StoreCopyCheckPointMutex storeCopyCheckPointMutex;\n-    private final PrepareStoreCopyFilesProvider prepareStoreCopyFilesProvider;\n-    private final Supplier<NeoStoreDataSource> dataSourceSupplier;\n-    private final StoreFileStreamingProtocol streamingProtocol = new StoreFileStreamingProtocol();\n+  private final CatchupServerProtocol protocol;\n+  private final Supplier<CheckPointer> checkPointerSupplier;\n+  private final StoreCopyCheckPointMutex storeCopyCheckPointMutex;\n+  private final PrepareStoreCopyFilesProvider prepareStoreCopyFilesProvider;\n+  private final Supplier<NeoStoreDataSource> dataSourceSupplier;\n+  private final StoreFileStreamingProtocol streamingProtocol = new StoreFileStreamingProtocol();\n \n-    public PrepareStoreCopyRequestHandler( CatchupServerProtocol catchupServerProtocol, Supplier<CheckPointer> checkPointerSupplier,\n-            StoreCopyCheckPointMutex storeCopyCheckPointMutex, Supplier<NeoStoreDataSource> dataSourceSupplier,\n-            PrepareStoreCopyFilesProvider prepareStoreCopyFilesProvider )\n-    {\n-        this.protocol = catchupServerProtocol;\n-        this.checkPointerSupplier = checkPointerSupplier;\n-        this.storeCopyCheckPointMutex = storeCopyCheckPointMutex;\n-        this.prepareStoreCopyFilesProvider = prepareStoreCopyFilesProvider;\n-        this.dataSourceSupplier = dataSourceSupplier;\n-    }\n+  public PrepareStoreCopyRequestHandler(CatchupServerProtocol catchupServerProtocol, Supplier<CheckPointer> checkPointerSupplier,\n+                                        StoreCopyCheckPointMutex storeCopyCheckPointMutex, Supplier<NeoStoreDataSource> dataSourceSupplier,\n+                                        PrepareStoreCopyFilesProvider prepareStoreCopyFilesProvider)\n+  {\n+    this.protocol = catchupServerProtocol;\n+    this.checkPointerSupplier = checkPointerSupplier;\n+    this.storeCopyCheckPointMutex = storeCopyCheckPointMutex;\n+    this.prepareStoreCopyFilesProvider = prepareStoreCopyFilesProvider;\n+    this.dataSourceSupplier = dataSourceSupplier;\n+  }\n \n-    @Override\n-    protected void channelRead0( ChannelHandlerContext channelHandlerContext, PrepareStoreCopyRequest prepareStoreCopyRequest ) throws IOException\n+  @Override\n+  protected void channelRead0(ChannelHandlerContext channelHandlerContext, PrepareStoreCopyRequest prepareStoreCopyRequest) throws IOException\n+  {\n+    CloseablesListener closeablesListener = new CloseablesListener();\n+    PrepareStoreCopyResponse response = PrepareStoreCopyResponse.error(PrepareStoreCopyResponse.Status.E_LISTING_STORE);\n+    try\n     {\n-        CloseablesListener closeablesListener = new CloseablesListener();\n-        PrepareStoreCopyResponse response = PrepareStoreCopyResponse.error( PrepareStoreCopyResponse.Status.E_LISTING_STORE );\n-        try\n-        {\n-            NeoStoreDataSource neoStoreDataSource = dataSourceSupplier.get();\n-            if ( !hasSameStoreId( prepareStoreCopyRequest.getStoreId(), neoStoreDataSource ) )\n-            {\n-                channelHandlerContext.write( ResponseMessageType.PREPARE_STORE_COPY_RESPONSE );\n-                response = PrepareStoreCopyResponse.error( PrepareStoreCopyResponse.Status.E_STORE_ID_MISMATCH );\n-            }\n-            else\n-            {\n-                CheckPointer checkPointer = checkPointerSupplier.get();\n-                closeablesListener.add( tryCheckpointAndAcquireMutex( checkPointer ) );\n-                PrepareStoreCopyFiles prepareStoreCopyFiles =\n-                        closeablesListener.add( prepareStoreCopyFilesProvider.prepareStoreCopyFiles( neoStoreDataSource ) );\n+      NeoStoreDataSource neoStoreDataSource = dataSourceSupplier.get();\n+      if (!hasSameStoreId(prepareStoreCopyRequest.getStoreId(), neoStoreDataSource))\n+      {\n+        channelHandlerContext.write(ResponseMessageType.PREPARE_STORE_COPY_RESPONSE);\n+        response = PrepareStoreCopyResponse.error(PrepareStoreCopyResponse.Status.E_STORE_ID_MISMATCH);\n+      } else\n+      {\n+        CheckPointer checkPointer = checkPointerSupplier.get();\n+        closeablesListener.add(tryCheckpointAndAcquireMutex(checkPointer));\n+        PrepareStoreCopyFiles prepareStoreCopyFiles =\n+            closeablesListener.add(prepareStoreCopyFilesProvider.prepareStoreCopyFiles(neoStoreDataSource));\n \n-                StoreResource[] nonReplayable = prepareStoreCopyFiles.getAtomicFilesSnapshot();\n-                for ( StoreResource storeResource : nonReplayable )\n-                {\n-                    streamingProtocol.stream( channelHandlerContext, storeResource );\n-                }\n-                channelHandlerContext.write( ResponseMessageType.PREPARE_STORE_COPY_RESPONSE );\n-                response = createSuccessfulResponse( checkPointer, prepareStoreCopyFiles );\n-            }\n-        }\n-        finally\n+        StoreResource[] nonReplayable = prepareStoreCopyFiles.getAtomicFilesSnapshot();\n+        for (StoreResource storeResource : nonReplayable)\n         {\n-            channelHandlerContext.writeAndFlush( response ).addListener( closeablesListener );\n-            protocol.expect( CatchupServerProtocol.State.MESSAGE_TYPE );\n+          streamingProtocol.stream(channelHandlerContext, storeResource);\n         }\n-    }\n-\n-    private PrepareStoreCopyResponse createSuccessfulResponse( CheckPointer checkPointer, PrepareStoreCopyFiles prepareStoreCopyFiles ) throws IOException\n+        channelHandlerContext.write(ResponseMessageType.PREPARE_STORE_COPY_RESPONSE);\n+        response = createSuccessfulResponse(checkPointer, prepareStoreCopyFiles);\n+      }\n+    } finally\n     {\n-        PrimitiveLongSet indexIds = prepareStoreCopyFiles.getNonAtomicIndexIds();\n-        File[] files = prepareStoreCopyFiles.listReplayableFiles();\n-        long lastCommittedTxId = checkPointer.lastCheckPointedTransactionId();\n-        return PrepareStoreCopyResponse.success( files, indexIds, lastCommittedTxId );\n+      channelHandlerContext.writeAndFlush(response).addListener(closeablesListener);\n+      protocol.expect(CatchupServerProtocol.State.MESSAGE_TYPE);\n     }\n+  }\n \n-    private Resource tryCheckpointAndAcquireMutex( CheckPointer checkPointer ) throws IOException\n-    {\n-        return storeCopyCheckPointMutex.storeCopy( () -> checkPointer.tryCheckPoint( new SimpleTriggerInfo( \"Store copy\" ) ) );\n-    }\n+  private PrepareStoreCopyResponse createSuccessfulResponse(CheckPointer checkPointer, PrepareStoreCopyFiles prepareStoreCopyFiles) throws IOException\n+  {\n+    PrimitiveLongSet indexIds = prepareStoreCopyFiles.getNonAtomicIndexIds();\n+    File[] files = prepareStoreCopyFiles.listReplayableFiles();\n+    long lastCommittedTxId = checkPointer.lastCheckPointedTransactionId();\n+    return PrepareStoreCopyResponse.success(files, indexIds, lastCommittedTxId);\n+  }\n+\n+  private Resource tryCheckpointAndAcquireMutex(CheckPointer checkPointer) throws IOException\n+  {\n+    return storeCopyCheckPointMutex.storeCopy(() -> checkPointer.tryCheckPoint(new SimpleTriggerInfo(\"Store copy\")));\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1671/PrepareStoreCopyRequestHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1671/PrepareStoreCopyRequestHandler.java\nindex b3f38bc6438..95dc9adf8c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1671/PrepareStoreCopyRequestHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1671/PrepareStoreCopyRequestHandler.java\n@@ -74,10 +74,8 @@ public class PrepareStoreCopyRequestHandler extends SimpleChannelInboundHandler<\n             {\n                 CheckPointer checkPointer = checkPointerSupplier.get();\n                 closeablesListener.add( tryCheckpointAndAcquireMutex( checkPointer ) );\n-                PrepareStoreCopyFiles prepareStoreCopyFiles =\n-                        closeablesListener.add( prepareStoreCopyFilesProvider.prepareStoreCopyFiles( neoStoreDataSource ) );\n-\n-                StoreResource[] nonReplayable = prepareStoreCopyFiles.getAtomicFilesSnapshot();\n+                PrepareStoreCopyFiles prepareStoreCopyFiles = closeablesListener.add( prepareStoreCopyFilesProvider.prepareStoreCopyFiles( neoStoreDataSource ) );\n+StoreResource[] nonReplayable = prepareStoreCopyFiles.getAtomicFilesSnapshot();\n                 for ( StoreResource storeResource : nonReplayable )\n                 {\n                     streamingProtocol.stream( channelHandlerContext, storeResource );\n@@ -105,4 +103,4 @@ public class PrepareStoreCopyRequestHandler extends SimpleChannelInboundHandler<\n     {\n         return storeCopyCheckPointMutex.storeCopy( () -> checkPointer.tryCheckPoint( new SimpleTriggerInfo( \"Store copy\" ) ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3029",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3029/OwningNodeRelationshipChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3029/OwningNodeRelationshipChain.java\nindex be855909ce0..14843a675bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3029/OwningNodeRelationshipChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3029/OwningNodeRelationshipChain.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.repair;\n \n import org.neo4j.kernel.impl.store.RecordStore;\n@@ -26,28 +27,28 @@ import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n public class OwningNodeRelationshipChain\n {\n-    private final RelationshipChainExplorer relationshipChainExplorer;\n-    private final RecordStore<NodeRecord> nodeStore;\n-    private final NodeRecord nodeRecord;\n+  private final RelationshipChainExplorer relationshipChainExplorer;\n+  private final RecordStore<NodeRecord> nodeStore;\n+  private final NodeRecord nodeRecord;\n \n-    public OwningNodeRelationshipChain( RelationshipChainExplorer relationshipChainExplorer,\n-                                        RecordStore<NodeRecord> nodeStore )\n-    {\n-        this.relationshipChainExplorer = relationshipChainExplorer;\n-        this.nodeStore = nodeStore;\n-        this.nodeRecord = nodeStore.newRecord();\n-    }\n+  public OwningNodeRelationshipChain(RelationshipChainExplorer relationshipChainExplorer,\n+                                     RecordStore<NodeRecord> nodeStore)\n+  {\n+    this.relationshipChainExplorer = relationshipChainExplorer;\n+    this.nodeStore = nodeStore;\n+    this.nodeRecord = nodeStore.newRecord();\n+  }\n \n-    public RecordSet<RelationshipRecord> findRelationshipChainsThatThisRecordShouldBelongTo(\n-            RelationshipRecord relationship )\n+  public RecordSet<RelationshipRecord> findRelationshipChainsThatThisRecordShouldBelongTo(\n+      RelationshipRecord relationship)\n+  {\n+    RecordSet<RelationshipRecord> records = new RecordSet<>();\n+    for (RelationshipNodeField field : RelationshipNodeField.values())\n     {\n-        RecordSet<RelationshipRecord> records = new RecordSet<>();\n-        for ( RelationshipNodeField field : RelationshipNodeField.values() )\n-        {\n-            long nodeId = field.get( relationship );\n-            nodeStore.getRecord( nodeId, nodeRecord, RecordLoad.FORCE );\n-            records.addAll( relationshipChainExplorer.followChainFromNode( nodeId, nodeRecord.getNextRel() ) );\n-        }\n-        return records;\n+      long nodeId = field.get(relationship);\n+      nodeStore.getRecord(nodeId, nodeRecord, RecordLoad.FORCE);\n+      records.addAll(relationshipChainExplorer.followChainFromNode(nodeId, nodeRecord.getNextRel()));\n     }\n+    return records;\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3029/OwningNodeRelationshipChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3029/OwningNodeRelationshipChain.java\nindex be855909ce0..0e01335d1d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3029/OwningNodeRelationshipChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3029/OwningNodeRelationshipChain.java\n@@ -30,16 +30,14 @@ public class OwningNodeRelationshipChain\n     private final RecordStore<NodeRecord> nodeStore;\n     private final NodeRecord nodeRecord;\n \n-    public OwningNodeRelationshipChain( RelationshipChainExplorer relationshipChainExplorer,\n-                                        RecordStore<NodeRecord> nodeStore )\n-    {\n+    public OwningNodeRelationshipChain( RelationshipChainExplorer relationshipChainExplorer, RecordStore<NodeRecord> nodeStore )\n+{\n         this.relationshipChainExplorer = relationshipChainExplorer;\n         this.nodeStore = nodeStore;\n         this.nodeRecord = nodeStore.newRecord();\n     }\n \n-    public RecordSet<RelationshipRecord> findRelationshipChainsThatThisRecordShouldBelongTo(\n-            RelationshipRecord relationship )\n+    public RecordSet<RelationshipRecord> findRelationshipChainsThatThisRecordShouldBelongTo( RelationshipRecord relationship )\n     {\n         RecordSet<RelationshipRecord> records = new RecordSet<>();\n         for ( RelationshipNodeField field : RelationshipNodeField.values() )\n@@ -48,6 +46,7 @@ public class OwningNodeRelationshipChain\n             nodeStore.getRecord( nodeId, nodeRecord, RecordLoad.FORCE );\n             records.addAll( relationshipChainExplorer.followChainFromNode( nodeId, nodeRecord.getNextRel() ) );\n         }\n-        return records;\n+\n+return records;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "414",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends FunctionOpt1\n{\n\tprivate static String normalize(final String s)\n\t{\n\t\tfinal StringBuilder buf = new StringBuilder();\n\t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..d6ecb36be1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/414/NormalizeSpaceFunction.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class NormalizeSpaceFunction \r\n     extends FunctionOpt1\r\n {\r\n-\tprivate static String normalize(final String s)\r\n+private static String normalize(final String s)\r\n \t{\r\n \t\tfinal StringBuilder buf = new StringBuilder();\r\n \t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..f7e5efe25cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/414/NormalizeSpaceFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import java.util.StringTokenizer;\r\n@@ -33,37 +34,34 @@ import org.genxdm.xpath.v10.ExprParseException;\n import org.genxdm.xpath.v10.StringExpr;\r\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n-public final class NormalizeSpaceFunction \r\n-    extends FunctionOpt1\r\n-{\r\n-\tprivate static String normalize(final String s)\r\n-\t{\r\n-\t\tfinal StringBuilder buf = new StringBuilder();\r\n-\t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n-\t\t{\r\n-\t\t\tif (buf.length() > 0)\r\n-\t\t\t{\r\n-\t\t\t\tbuf.append(' ');\r\n-\t\t\t}\r\n-\t\t\tbuf.append((String)e.nextElement());\r\n-\t\t}\r\n-\t\treturn buf.toString();\r\n-\t}\r\n+public final class NormalizeSpaceFunction\r\n+    extends FunctionOpt1 {\r\n+    private static String normalize(final String s) {\r\n+        final StringBuilder buf = new StringBuilder();\r\n+        for (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements(); ) {\r\n+            if (buf.length() > 0) {\r\n+                buf.append(' ');\r\n+            }\r\n+            buf.append((String) e.nextElement());\r\n+        }\r\n+        return buf.toString();\r\n+    }\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr expr, StaticContext statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = expr.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr expr, StaticContext statEnv)\r\n+        throws ExprParseException {\r\n+        final StringExpr se = expr.makeStringExpr(statEnv);\r\n+        return new ConvertibleStringExpr() {\r\n             @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> dynEnv) {\r\n-\t\t\t\treturn normalize(se.stringFunction(model, node, dynEnv));\r\n-\t\t\t}\r\n+            public <N> String stringFunction(Model<N> model, final N node,\r\n+                                             final NodeDynamicContext<N> dynEnv) {\r\n+                return normalize(se.stringFunction(model, node, dynEnv));\r\n+            }\r\n \r\n             @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n+            public String stringFunction(TraversingInformer contextNode,\r\n+                                         TraverserDynamicContext dynEnv) {\r\n                 return normalize(se.stringFunction(contextNode, dynEnv));\r\n             }\r\n-\t\t};\r\n-\t}\r\n+        };\r\n+    }\r\n }\r\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..f2aee13e92b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/414/NormalizeSpaceFunction.java\n@@ -34,36 +34,37 @@ import org.genxdm.xpath.v10.StringExpr;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n public final class NormalizeSpaceFunction \r\n-    extends FunctionOpt1\r\n-{\r\n-\tprivate static String normalize(final String s)\r\n-\t{\r\n-\t\tfinal StringBuilder buf = new StringBuilder();\r\n-\t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n-\t\t{\r\n-\t\t\tif (buf.length() > 0)\r\n-\t\t\t{\r\n-\t\t\t\tbuf.append(' ');\r\n-\t\t\t}\r\n-\t\t\tbuf.append((String)e.nextElement());\r\n-\t\t}\r\n-\t\treturn buf.toString();\r\n-\t}\r\n+    extends FunctionOpt1\n+{\n+    private static String normalize(final String s)\r\n+\t{\n+    final StringBuilder buf = new StringBuilder();\r\n+\t\tfor (StringTokenizer e = new StringTokenizer(s);\n+e.hasMoreElements();)\r\n+\t\t{\n+    if (buf.length() > 0)\r\n+\t\t\t{\n+    buf.append(' ');\n+    }\r\n+\t\t\tbuf.append((String)e.nextElement());\n+    }\r\n+\t\treturn buf.toString();\n+    }\r\n \r\n \tConvertibleExprImpl makeCallExpr(final ConvertibleExpr expr, StaticContext statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = expr.makeStringExpr(statEnv);\r\n+\t{\n+    final StringExpr se = expr.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> dynEnv) {\r\n-\t\t\t\treturn normalize(se.stringFunction(model, node, dynEnv));\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n+\t\t{\n+    @Override\n+public <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> dynEnv) {\n+    return normalize(se.stringFunction(model, node, dynEnv));\n+    }\n+\n+@Override\r\n             public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n                 return normalize(se.stringFunction(contextNode, dynEnv));\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+            }\n+    };\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..e46ce6965d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/414/NormalizeSpaceFunction.java\n@@ -18,52 +18,54 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import java.util.StringTokenizer;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.NodeDynamicContext;\r\n-import org.genxdm.xpath.v10.StaticContext;\r\n-import org.genxdm.xpath.v10.ExprParseException;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n-\r\n-public final class NormalizeSpaceFunction \r\n-    extends FunctionOpt1\r\n-{\r\n-\tprivate static String normalize(final String s)\r\n-\t{\r\n-\t\tfinal StringBuilder buf = new StringBuilder();\r\n-\t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n-\t\t{\r\n-\t\t\tif (buf.length() > 0)\r\n-\t\t\t{\r\n-\t\t\t\tbuf.append(' ');\r\n-\t\t\t}\r\n-\t\t\tbuf.append((String)e.nextElement());\r\n-\t\t}\r\n-\t\treturn buf.toString();\r\n-\t}\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr expr, StaticContext statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = expr.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> dynEnv) {\r\n-\t\t\t\treturn normalize(se.stringFunction(model, node, dynEnv));\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-                return normalize(se.stringFunction(contextNode, dynEnv));\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import java.util.StringTokenizer;\n+import org.genxdm.Model;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.NodeDynamicContext;\n+import org.genxdm.xpath.v10.StaticContext;\n+import org.genxdm.xpath.v10.ExprParseException;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n+\n+public final class NormalizeSpaceFunction extends FunctionOpt1\n+{\n+    private static String normalize(final String s)\n+    {\n+        final StringBuilder buf = new StringBuilder();\n+        for (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements() ;)\n+        {\n+            if (buf.length() > 0)\n+            {\n+                buf.append(' ');\n+            }\n+            buf.append((String)e.nextElement());\n+        }\n+        return buf.toString();\n+    }\n+\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr expr, StaticContext statEnv)\n+        throws ExprParseException\n+    {\n+        final StringExpr se = expr.makeStringExpr(statEnv);\n+        return new ConvertibleStringExpr()\n+        {\n+\n+            @Override\n+            public <N> String stringFunction(Model<N> model, final N node, final NodeDynamicContext<N> dynEnv)\n+            {\n+                return normalize(se.stringFunction(model, node, dynEnv));\n+            }\n+\n+            @Override\n+            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+            {\n+                return normalize(se.stringFunction(contextNode, dynEnv));\n+            }\n+        };\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..d6ecb36be1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/414/NormalizeSpaceFunction.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class NormalizeSpaceFunction \r\n     extends FunctionOpt1\r\n {\r\n-\tprivate static String normalize(final String s)\r\n+private static String normalize(final String s)\r\n \t{\r\n \t\tfinal StringBuilder buf = new StringBuilder();\r\n \t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/414/NormalizeSpaceFunction.java\nindex 1233e1b40b2..ee1d4ca4955 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/414/NormalizeSpaceFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/414/NormalizeSpaceFunction.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class NormalizeSpaceFunction \r\n     extends FunctionOpt1\r\n {\r\n-\tprivate static String normalize(final String s)\r\n+    private static String normalize(final String s)\r\n \t{\r\n \t\tfinal StringBuilder buf = new StringBuilder();\r\n \t\tfor (StringTokenizer e = new StringTokenizer(s); e.hasMoreElements();)\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "456",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/456/RecoveryRequiredChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/456/RecoveryRequiredChecker.java\nindex 88750ec2f52..d0968f6edf0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/456/RecoveryRequiredChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/456/RecoveryRequiredChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.io.IOException;\n@@ -46,7 +47,7 @@ class RecoveryRequiredChecker\n     private final Config config;\n     private final StorageEngineFactory storageEngineFactory;\n \n-    RecoveryRequiredChecker( FileSystemAbstraction fs, PageCache pageCache, Config config, StorageEngineFactory storageEngineFactory )\n+    RecoveryRequiredChecker(FileSystemAbstraction fs, PageCache pageCache, Config config, StorageEngineFactory storageEngineFactory)\n     {\n         this.fs = fs;\n         this.pageCache = pageCache;\n@@ -54,33 +55,33 @@ class RecoveryRequiredChecker\n         this.storageEngineFactory = storageEngineFactory;\n     }\n \n-    public boolean isRecoveryRequiredAt( DatabaseLayout databaseLayout, MemoryTracker memoryTracker ) throws IOException\n+    public boolean isRecoveryRequiredAt(DatabaseLayout databaseLayout, MemoryTracker memoryTracker) throws IOException\n     {\n-        LogEntryReader reader = new VersionAwareLogEntryReader( storageEngineFactory.commandReaderFactory() );\n-        LogFiles logFiles = buildLogFiles( databaseLayout, reader, memoryTracker );\n-        return isRecoveryRequiredAt( databaseLayout, logFiles );\n+        LogEntryReader reader = new VersionAwareLogEntryReader(storageEngineFactory.commandReaderFactory());\n+        LogFiles logFiles = buildLogFiles(databaseLayout, reader, memoryTracker);\n+        return isRecoveryRequiredAt(databaseLayout, logFiles);\n     }\n \n-    private LogFiles buildLogFiles( DatabaseLayout databaseLayout, LogEntryReader reader, MemoryTracker memoryTracker ) throws IOException\n+    private LogFiles buildLogFiles(DatabaseLayout databaseLayout, LogEntryReader reader, MemoryTracker memoryTracker) throws IOException\n     {\n-        return LogFilesBuilder.activeFilesBuilder( databaseLayout, fs, pageCache )\n-                    .withConfig( config )\n-                    .withMemoryTracker( memoryTracker )\n-                    .withCommandReaderFactory( storageEngineFactory.commandReaderFactory() )\n-                    .withLogEntryReader( reader ).build();\n+        return LogFilesBuilder.activeFilesBuilder(databaseLayout, fs, pageCache)\n+          .withConfig(config)\n+          .withMemoryTracker(memoryTracker)\n+          .withCommandReaderFactory(storageEngineFactory.commandReaderFactory())\n+          .withLogEntryReader(reader).build();\n     }\n \n-    boolean isRecoveryRequiredAt( DatabaseLayout databaseLayout, LogFiles logFiles )\n+    boolean isRecoveryRequiredAt(DatabaseLayout databaseLayout, LogFiles logFiles)\n     {\n-        if ( !storageEngineFactory.storageExists( fs, databaseLayout, pageCache ) )\n+        if (!storageEngineFactory.storageExists(fs, databaseLayout, pageCache))\n         {\n             return false;\n         }\n-        StorageFilesState filesRecoveryState = storageEngineFactory.checkRecoveryRequired( fs, databaseLayout, pageCache );\n-        if ( filesRecoveryState.getRecoveryState() != RecoveryState.RECOVERED )\n+        StorageFilesState filesRecoveryState = storageEngineFactory.checkRecoveryRequired(fs, databaseLayout, pageCache);\n+        if (filesRecoveryState.getRecoveryState() != RecoveryState.RECOVERED)\n         {\n             return true;\n         }\n-        return new RecoveryStartInformationProvider( logFiles, NO_MONITOR ).get().isRecoveryRequired();\n+        return new RecoveryStartInformationProvider(logFiles, NO_MONITOR).get().isRecoveryRequired();\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "130",
                "column": "5",
                "severity": "warning",
                "message": "'}' at column 5 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        readMessagePatch = hasReadMessagePatch(node);\n      }\n    } while (line != null);\n\n    return resultNode;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "130",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "133",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/15/MagikParser.java\nindex 5c0570985fa..c09a2cba2ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/15/MagikParser.java\n@@ -37,6 +37,7 @@ public class MagikParser {\n \n   /**\n    * Constructor.\n+   *\n    * @param charset Encoding of file to parse\n    */\n   public MagikParser(Charset charset) {\n@@ -48,6 +49,7 @@ public class MagikParser {\n \n   /**\n    * Parse a string and return the AstNode.\n+   *\n    * @param source Source to parse\n    * @return Tree\n    */\n@@ -63,6 +65,7 @@ public class MagikParser {\n \n   /**\n    * Parse a file and return the AstNode.\n+   *\n    * @param path Path to file\n    * @return Tree\n    */\n@@ -146,7 +149,7 @@ public class MagikParser {\n       }\n     }\n \n-    for (AstNode childNode: node.getChildren()) {\n+    for (AstNode childNode : node.getChildren()) {\n       updateIdentifiersSymbolsCasing(childNode);\n     }\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'do..while while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 241.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/15/MagikParser.java\nindex 5c0570985fa..eca85fa6177 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/15/MagikParser.java\n@@ -127,7 +127,8 @@ public class MagikParser {\n         // read message patch next up?\n         readMessagePatch = hasReadMessagePatch(node);\n       }\n-    } while (line != null);\n+    }\n+while (line != null);\n \n     return resultNode;\n   }\n@@ -228,13 +229,17 @@ public class MagikParser {\n     // else read lowercase\n     StringBuilder sb = new StringBuilder(value.length());\n \n-    for (int i = 0; i < value.length(); ++i) {\n+    for (int i = 0; i < value.length();\n+++i) {\n       char chr = value.charAt(i);\n       if (chr == '|') {\n         // piped segment\n-        ++i; // skip first |\n+        ++i;\n+\n+// skip first |\n         // read until next |\n-        for (; i < value.length(); ++i) {\n+        for (; i < value.length();\n+++i) {\n           chr = value.charAt(i);\n           if (chr == '|') {\n             break;\n@@ -256,4 +261,4 @@ public class MagikParser {\n     return sb.toString();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'do..while while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "251",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 15, indentation should be the same level as line 252.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 15, indentation should be the same level as line 257.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "258",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/15/MagikParser.java\nindex 5c0570985fa..e5b5972eb47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/15/MagikParser.java\n@@ -5,7 +5,6 @@ import com.sonar.sslr.api.AstNodeType;\n import com.sonar.sslr.api.Token;\n import com.sonar.sslr.api.Trivia;\n import com.sonar.sslr.impl.Parser;\n-\n import org.apache.commons.lang.reflect.FieldUtils;\n import org.sonar.api.utils.log.Logger;\n import org.sonar.api.utils.log.Loggers;\n@@ -13,7 +12,6 @@ import org.sonar.sslr.parser.LexerlessGrammar;\n import org.sonar.sslr.parser.ParserAdapter;\n import org.stevenlooman.sw.magik.api.MagikGrammar;\n import org.stevenlooman.sw.magik.api.MessagePatchGrammar;\n-\n import java.io.BufferedReader;\n import java.io.File;\n import java.io.FileReader;\n@@ -31,7 +29,6 @@ public class MagikParser {\n   private static final String TRANSMIT = \"$\";\n   private static final String END_OF_MESSAGE_PATCH = \"$\";\n   private static final Logger LOGGER = Loggers.get(MagikParser.class);\n-\n   Parser<LexerlessGrammar> magikParser;\n   ParserAdapter<LexerlessGrammar> messagePatchParser;\n \n@@ -39,11 +36,11 @@ public class MagikParser {\n    * Constructor.\n    * @param charset Encoding of file to parse\n    */\n+\n+\n   public MagikParser(Charset charset) {\n     magikParser = new ParserAdapter<>(charset, MagikGrammar.create());\n-    messagePatchParser = new ParserAdapter<>(\n-        charset,\n-        MessagePatchGrammar.create(END_OF_MESSAGE_PATCH));\n+    messagePatchParser = new ParserAdapter<>(charset, MessagePatchGrammar.create(END_OF_MESSAGE_PATCH));\n   }\n \n   /**\n@@ -51,6 +48,8 @@ public class MagikParser {\n    * @param source Source to parse\n    * @return Tree\n    */\n+\n+\n   public AstNode parse(String source) {\n     AstNode node = null;\n     try (StringReader sr = new StringReader(source)) {\n@@ -58,6 +57,7 @@ public class MagikParser {\n     } catch (IOException ex) {\n       LOGGER.error(\"Caught exception during parsing\", ex);\n     }\n+\n     return node;\n   }\n \n@@ -66,6 +66,7 @@ public class MagikParser {\n    * @param path Path to file\n    * @return Tree\n    */\n+\n   public AstNode parse(Path path) {\n     AstNode node = null;\n     try (FileReader sr = new FileReader(path.toFile())) {\n@@ -73,29 +74,28 @@ public class MagikParser {\n     } catch (IOException ex) {\n       LOGGER.error(\"Caught exception during parsing\", ex);\n     }\n+\n     return node;\n   }\n \n   private AstNode parse(Reader reader) throws IOException {\n     AstNode resultNode = new AstNode(MagikGrammar.MAGIK, \"MAGIK\", null);\n-\n     int lineNumber = 0;\n     int startLineOffset = 0;\n     StringBuilder sb = new StringBuilder();\n     boolean readMessagePatch = false;\n-\n     BufferedReader br = new BufferedReader(reader);\n     String line;\n     do {\n       line = br.readLine();\n       lineNumber++;\n-\n       if (line != null) {\n         sb.append(line);\n         sb.append('\\n');\n       }\n \n-      if (TRANSMIT.equals(line) || line == null) {\n+      if (TRANSMIT.equals(line)\n+          || line == null) {\n         // transmit to parser/compiler and reset buffer\n         String part = sb.toString();\n \n@@ -112,6 +112,7 @@ public class MagikParser {\n         }\n \n         // fix tokens/lines\n+\n         updateTokenLines(node.getTokens(), startLineOffset);\n \n         // fix identifier casing\n@@ -127,16 +128,17 @@ public class MagikParser {\n         // read message patch next up?\n         readMessagePatch = hasReadMessagePatch(node);\n       }\n-    } while (line != null);\n+    }\n \n+while(line != null);\n     return resultNode;\n   }\n \n   private void updateIdentifiersSymbolsCasing(AstNode node) {\n     Field field = FieldUtils.getField(Token.class, \"value\", true);\n-\n     AstNodeType nodeType = node.getType();\n-    if (nodeType == MagikGrammar.IDENTIFIER || nodeType == MagikGrammar.SYMBOL) {\n+    if (nodeType == MagikGrammar.IDENTIFIER\n+        || nodeType == MagikGrammar.SYMBOL) {\n       Token token = node.getToken();\n       String value = parseIdentifier(token.getValue());\n       try {\n@@ -146,7 +148,8 @@ public class MagikParser {\n       }\n     }\n \n-    for (AstNode childNode: node.getChildren()) {\n+\n+    for (AstNode childNode : node.getChildren()) {\n       updateIdentifiersSymbolsCasing(childNode);\n     }\n   }\n@@ -170,6 +173,7 @@ public class MagikParser {\n       return true;\n     }\n \n+\n     for (AstNode child : node.getChildren()) {\n       if (hasReadMessagePatch(child)) {\n         return true;\n@@ -203,6 +207,8 @@ public class MagikParser {\n       }\n \n       // update trivia-token lines\n+\n+\n       for (Trivia trivia : token.getTrivia()) {\n         for (Token triviaToken : trivia.getTokens()) {\n           newLine = lineOffset + triviaToken.getLine();\n@@ -227,7 +233,6 @@ public class MagikParser {\n     // if \\\\., read .\n     // else read lowercase\n     StringBuilder sb = new StringBuilder(value.length());\n-\n     for (int i = 0; i < value.length(); ++i) {\n       char chr = value.charAt(i);\n       if (chr == '|') {\n@@ -239,21 +244,21 @@ public class MagikParser {\n           if (chr == '|') {\n             break;\n           }\n+\n           sb.append(chr);\n         }\n       } else if (chr == '\\\\') {\n         // escaped character\n-        ++i; // skip \\\n-        chr = value.charAt(i);\n-        sb.append(chr);\n-      } else {\n+               ++i; // skip \\\n+               chr = value.charAt(i);\n+               sb.append(chr);\n+             } else {\n         // normal character\n-        chr = Character.toLowerCase(chr);\n-        sb.append(chr);\n+               chr = Character.toLowerCase(chr);\n+               sb.append(chr);\n       }\n     }\n \n     return sb.toString();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "130",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'do..while rcurly' has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "7",
                    "severity": "warning",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/15/MagikParser.java\nindex 5c0570985fa..e5f8186dfbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/15/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/15/MagikParser.java\n@@ -127,7 +127,8 @@ public class MagikParser {\n         // read message patch next up?\n         readMessagePatch = hasReadMessagePatch(node);\n       }\n-    } while (line != null);\n+\n+      }while (line != null);\n \n     return resultNode;\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
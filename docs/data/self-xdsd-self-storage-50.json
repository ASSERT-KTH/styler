{
    "project_name": "self-xdsd-self-storage",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "88",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                )\n            ).fetch();\n        for(final Record rec : result) {\n            ofTask.add(\n                new StoredResignation(\n                    task,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/50/SelfResignations.java\nindex 8b8e718a632..88ebc61a39e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/50/SelfResignations.java\n@@ -85,7 +85,7 @@ public final class SelfResignations implements Resignations {\n                         .and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofTask.add(\n                 new StoredResignation(\n                     task,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/50/SelfResignations.java\nindex 8b8e718a632..886751c96b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/50/SelfResignations.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.*;\n@@ -38,11 +39,12 @@ import static com.selfxdsd.storage.generated.jooq.Tables.*;\n \n /**\n  * All the Resignations in Self.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.8\n  * @todo #129:30min Implement the methods of this class using\n- *  JOOQ and write integration tests for them.\n+ * JOOQ and write integration tests for them.\n+ * @since 0.0.8\n  */\n public final class SelfResignations implements Resignations {\n \n@@ -58,7 +60,8 @@ public final class SelfResignations implements Resignations {\n \n     /**\n      * Ctor.\n-     * @param storage Parent Storage.\n+     *\n+     * @param storage  Parent Storage.\n      * @param database Database.\n      */\n     public SelfResignations(\n@@ -85,7 +88,7 @@ public final class SelfResignations implements Resignations {\n                         .and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofTask.add(\n                 new StoredResignation(\n                     task,\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/50/SelfResignations.java\nindex 8b8e718a632..194c0ebe91f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/50/SelfResignations.java\n@@ -61,10 +61,8 @@ public final class SelfResignations implements Resignations {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfResignations(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+    public SelfResignations(final Storage storage,\n+        final Database database) {\n         this.storage = storage;\n         this.database = database;\n     }\n@@ -73,17 +71,12 @@ public final class SelfResignations implements Resignations {\n     public Resignations ofTask(final Task task) {\n         final Project project = task.project();\n         final List<Resignation> ofTask = new ArrayList<>();\n-        final Result<Record> result = this.database\n-            .jooq()\n-            .select()\n-            .from(SLF_RESIGNATIONS_XDSD)\n-            .where(\n+        final Result<Record> result = this.database.jooq().select().from(SLF_RESIGNATIONS_XDSD).where(\n                 SLF_RESIGNATIONS_XDSD.REPO_FULLNAME.eq(\n                     project.repoFullName()\n                 ).and(\n-                    SLF_RESIGNATIONS_XDSD.PROVIDER.eq(project.provider())\n-                        .and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n-                )\n+                    SLF_RESIGNATIONS_XDSD.PROVIDER.eq(project.provider()).and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n+    )\n             ).fetch();\n         for(final Record rec : result) {\n             ofTask.add(\n@@ -91,8 +84,7 @@ public final class SelfResignations implements Resignations {\n                     task,\n                     new StoredContributor(\n                         rec.getValue(SLF_RESIGNATIONS_XDSD.USERNAME),\n-                        rec.getValue(SLF_RESIGNATIONS_XDSD.PROVIDER),\n-                        this.storage\n+                        rec.getValue(SLF_RESIGNATIONS_XDSD.PROVIDER), this.storage\n                     ),\n                     rec.getValue(SLF_RESIGNATIONS_XDSD.TIMESTAMP),\n                     rec.getValue(SLF_RESIGNATIONS_XDSD.REASON)\n@@ -101,15 +93,12 @@ public final class SelfResignations implements Resignations {\n         }\n         return new TaskResignations(\n             task,\n-            () -> ofTask.stream(),\n-            this.storage\n+            () -> ofTask.stream(), this.storage\n         );\n     }\n \n     @Override\n-    public Resignation register(\n-        final Task task, final String reason\n-    ) {\n+    public Resignation register(final Task task, final String reason) {\n         return null;\n     }\n \n@@ -119,4 +108,4 @@ public final class SelfResignations implements Resignations {\n             \"You cannot iterate over all Resignations in Self.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 76, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "83",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "83",
                    "column": "56",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "86",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 280).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "121",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "152",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "187",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "206",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "214",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "248",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "263",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "265",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "267",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "269",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "116",
                    "column": "22",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/50/SelfResignations.java\nindex 8b8e718a632..604aa8457ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/50/SelfResignations.java\n@@ -29,11 +29,11 @@ import com.selfxdsd.core.tasks.StoredResignation;\n import com.selfxdsd.core.tasks.TaskResignations;\n import org.jooq.Record;\n import org.jooq.Result;\n-\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n \n+\n import static com.selfxdsd.storage.generated.jooq.Tables.*;\n \n /**\n@@ -44,16 +44,21 @@ import static com.selfxdsd.storage.generated.jooq.Tables.*;\n  * @todo #129:30min Implement the methods of this class using\n  *  JOOQ and write integration tests for them.\n  */\n+\n+\n public final class SelfResignations implements Resignations {\n \n     /**\n      * Parent Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Database.\n      */\n+\n     private final Database database;\n \n     /**\n@@ -61,62 +66,56 @@ public final class SelfResignations implements Resignations {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfResignations(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+\n+\n+    public SelfResignations(final Storage storage, final Database database) {\n         this.storage = storage;\n-        this.database = database;\n+\n+\n+                                                                            this.database = database;\n     }\n \n     @Override\n     public Resignations ofTask(final Task task) {\n-        final Project project = task.project();\n-        final List<Resignation> ofTask = new ArrayList<>();\n-        final Result<Record> result = this.database\n-            .jooq()\n-            .select()\n-            .from(SLF_RESIGNATIONS_XDSD)\n-            .where(\n-                SLF_RESIGNATIONS_XDSD.REPO_FULLNAME.eq(\n-                    project.repoFullName()\n-                ).and(\n-                    SLF_RESIGNATIONS_XDSD.PROVIDER.eq(project.provider())\n-                        .and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n-                )\n-            ).fetch();\n-        for(final Record rec : result) {\n-            ofTask.add(\n-                new StoredResignation(\n-                    task,\n-                    new StoredContributor(\n-                        rec.getValue(SLF_RESIGNATIONS_XDSD.USERNAME),\n-                        rec.getValue(SLF_RESIGNATIONS_XDSD.PROVIDER),\n-                        this.storage\n-                    ),\n-                    rec.getValue(SLF_RESIGNATIONS_XDSD.TIMESTAMP),\n-                    rec.getValue(SLF_RESIGNATIONS_XDSD.REASON)\n-                )\n-            );\n-        }\n+        final Project project= task.project();\n+\n+\n+        final List < Resignation> ofTask= new ArrayList <>();\n+\n+\n+        final Result < Record> result=\n+            this.database.jooq() .select() .from( SLF_RESIGNATIONS_XDSD) .where( SLF_RESIGNATIONS_XDSD.REPO_FULLNAME.eq( project.repoFullName() ) .and( SLF_RESIGNATIONS_XDSD.PROVIDER.eq( project.provider() ) .and( SLF_RESIGNATIONS_XDSD.ISSUEID.eq( task.issueId() ) ) ) ) .fetch();\n+\n+\n+        for( final Record rec: result) {\n+                                           ofTask.add( new StoredResignation(\n+                                                           task,\n+                                                           new StoredContributor(\n+                                                               rec.getValue( SLF_RESIGNATIONS_XDSD.USERNAME),\n+                                                               rec.getValue( SLF_RESIGNATIONS_XDSD.PROVIDER),\n+                                                               this.storage\n+                                                           ),\n+                                                           rec.getValue( SLF_RESIGNATIONS_XDSD.TIMESTAMP),\n+                                                           rec.getValue( SLF_RESIGNATIONS_XDSD.REASON)\n+                                                       ) );\n+                                       }\n+\n         return new TaskResignations(\n-            task,\n-            () -> ofTask.stream(),\n-            this.storage\n-        );\n+                   task,\n+                   ( )-> ofTask.stream(),\n+                   this.storage\n+               );\n     }\n \n     @Override\n-    public Resignation register(\n-        final Task task, final String reason\n-    ) {\n+    public Resignation register(final Task task, final String reason) {\n         return null;\n     }\n \n     @Override\n-    public Iterator<Resignation> iterator() {\n+    public Iterator < Resignation> iterator() {\n         throw new UnsupportedOperationException(\n-            \"You cannot iterate over all Resignations in Self.\"\n+                  \"You cannot iterate over all Resignations in Self.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/50/SelfResignations.java\nindex 8b8e718a632..88ebc61a39e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/50/SelfResignations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/50/SelfResignations.java\n@@ -85,7 +85,7 @@ public final class SelfResignations implements Resignations {\n                         .and(SLF_RESIGNATIONS_XDSD.ISSUEID.eq(task.issueId()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofTask.add(\n                 new StoredResignation(\n                     task,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
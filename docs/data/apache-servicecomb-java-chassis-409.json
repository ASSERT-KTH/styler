{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "409",
    "information": {
        "errors": [
            {
                "line": "71",
                "column": "7",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    // cookies handler are enabled by default start from 3.8.3\n    String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n    if(pattern == null) {\n      router.route().handler(createBodyHandler());\n      router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n    } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/409/VertxRestDispatcher.java\nindex bbecec51489..fd9a76709ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/409/VertxRestDispatcher.java\n@@ -68,7 +68,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n   public void init(Router router) {\n     // cookies handler are enabled by default start from 3.8.3\n     String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n-    if(pattern == null) {\n+    if (pattern == null) {\n       router.route().handler(createBodyHandler());\n       router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n     } else {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/409/VertxRestDispatcher.java\nindex bbecec51489..7e7ac7323b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/409/VertxRestDispatcher.java\n@@ -68,7 +68,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n   public void init(Router router) {\n     // cookies handler are enabled by default start from 3.8.3\n     String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n-    if(pattern == null) {\n+    if (pattern == null) {\n       router.route().handler(createBodyHandler());\n       router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n     } else {\n@@ -98,7 +98,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n    * Try to find out the failure information and send it in response.\n    */\n   private void handleFailureAndClose(RoutingContext context, AbstractRestInvocation restProducerInvocation,\n-      Throwable e) {\n+                                     Throwable e) {\n     if (null != restProducerInvocation) {\n       // if there is restProducerInvocation, let it send exception in response. The exception is allowed to be null.\n       sendFailResponseByInvocation(context, restProducerInvocation, e);\n@@ -170,6 +170,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n \n   /**\n    * Check if the message is a valid Json string.\n+   *\n    * @param message the message to be checked.\n    * @return true if message is a valid Json string, otherwise false.\n    */\n@@ -186,7 +187,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n    * Use restProducerInvocation to send failure message. The throwable is allowed to be null.\n    */\n   private void sendFailResponseByInvocation(RoutingContext context, AbstractRestInvocation restProducerInvocation,\n-      Throwable e) {\n+                                            Throwable e) {\n     restProducerInvocation.sendFailResponse(e);\n     context.response().close();\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/409/VertxRestDispatcher.java\nindex bbecec51489..612c4af3239 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/409/VertxRestDispatcher.java\n@@ -68,7 +68,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n   public void init(Router router) {\n     // cookies handler are enabled by default start from 3.8.3\n     String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n-    if(pattern == null) {\n+    if (pattern == null) {\n       router.route().handler(createBodyHandler());\n       router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n     } else {\n@@ -120,8 +120,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n    */\n   private void sendFailureRespDeterminedByStatus(RoutingContext context) {\n     Family statusFamily = Family.familyOf(context.statusCode());\n-    if (Family.CLIENT_ERROR.equals(statusFamily) || Family.SERVER_ERROR.equals(statusFamily) || Family.OTHER\n-        .equals(statusFamily)) {\n+    if (Family.CLIENT_ERROR.equals(statusFamily) || Family.SERVER_ERROR.equals(statusFamily) || Family.OTHER.equals(statusFamily)) {\n       context.response().putHeader(HttpHeaders.CONTENT_TYPE, MediaType.WILDCARD)\n           .setStatusCode(context.statusCode()).end();\n     } else {\n@@ -202,4 +201,4 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n     context.put(RestConst.REST_PRODUCER_INVOCATION, vertxRestInvocation);\n     vertxRestInvocation.invoke(transport, requestEx, responseEx, httpServerFilters);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/409/VertxRestDispatcher.java\nindex bbecec51489..fd9a76709ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/409/VertxRestDispatcher.java\n@@ -68,7 +68,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n   public void init(Router router) {\n     // cookies handler are enabled by default start from 3.8.3\n     String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n-    if(pattern == null) {\n+    if (pattern == null) {\n       router.route().handler(createBodyHandler());\n       router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n     } else {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/409/VertxRestDispatcher.java\nindex bbecec51489..fd9a76709ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/409/VertxRestDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/409/VertxRestDispatcher.java\n@@ -68,7 +68,7 @@ public class VertxRestDispatcher extends AbstractVertxHttpDispatcher {\n   public void init(Router router) {\n     // cookies handler are enabled by default start from 3.8.3\n     String pattern = DynamicPropertyFactory.getInstance().getStringProperty(KEY_PATTERN, null).get();\n-    if(pattern == null) {\n+    if (pattern == null) {\n       router.route().handler(createBodyHandler());\n       router.route().failureHandler(this::failureHandler).handler(this::onRequest);\n     } else {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
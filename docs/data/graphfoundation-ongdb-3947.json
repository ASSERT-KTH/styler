{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3947",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3947/AbstractRoleRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3947/AbstractRoleRepository.java\nindex 803c11ed195..eb59edf7f6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3947/AbstractRoleRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3947/AbstractRoleRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import java.io.IOException;\n@@ -42,246 +43,248 @@ import static org.neo4j.helpers.collection.MapUtil.trimToList;\n \n public abstract class AbstractRoleRepository extends LifecycleAdapter implements RoleRepository\n {\n-    // TODO: We could improve concurrency by using a ReadWriteLock\n+  // TODO: We could improve concurrency by using a ReadWriteLock\n+\n+  /**\n+   * Quick lookup of roles by name\n+   */\n+  private final Map<String, RoleRecord> rolesByName = new ConcurrentHashMap<>();\n+  private final Map<String, SortedSet<String>> rolesByUsername = new ConcurrentHashMap<>();\n+\n+  /**\n+   * Master list of roles\n+   */\n+  protected volatile List<RoleRecord> roles = new ArrayList<>();\n+  protected AtomicLong lastLoaded = new AtomicLong(0L);\n+\n+  private final Pattern roleNamePattern = Pattern.compile(\"^[a-zA-Z0-9_]+$\");\n+\n+  @Override\n+  public void clear()\n+  {\n+    roles.clear();\n+    rolesByName.clear();\n+    rolesByUsername.clear();\n+  }\n+\n+  @Override\n+  public RoleRecord getRoleByName(String roleName)\n+  {\n+    return roleName == null ? null : rolesByName.get(roleName);\n+  }\n+\n+  @Override\n+  public Set<String> getRoleNamesByUsername(String username)\n+  {\n+    Set<String> roleNames = rolesByUsername.get(username);\n+    return roleNames != null ? roleNames : Collections.emptySet();\n+  }\n+\n+  @Override\n+  public void create(RoleRecord role) throws InvalidArgumentsException, IOException\n+  {\n+    assertValidRoleName(role.name());\n+\n+    synchronized (this)\n+    {\n+      // Check for existing role\n+      for (RoleRecord other : roles)\n+      {\n+        if (other.name().equals(role.name()))\n+        {\n+          throw new InvalidArgumentsException(\"The specified role '\" + role.name() + \"' already exists.\");\n+        }\n+      }\n \n-    /** Quick lookup of roles by name */\n-    private final Map<String,RoleRecord> rolesByName = new ConcurrentHashMap<>();\n-    private final Map<String,SortedSet<String>> rolesByUsername = new ConcurrentHashMap<>();\n+      roles.add(role);\n \n-    /** Master list of roles */\n-    protected volatile List<RoleRecord> roles = new ArrayList<>();\n-    protected AtomicLong lastLoaded = new AtomicLong( 0L );\n+      persistRoles();\n \n-    private final Pattern roleNamePattern = Pattern.compile( \"^[a-zA-Z0-9_]+$\" );\n+      rolesByName.put(role.name(), role);\n \n-    @Override\n-    public void clear()\n-    {\n-        roles.clear();\n-        rolesByName.clear();\n-        rolesByUsername.clear();\n+      populateUserMap(role);\n     }\n+  }\n \n-    @Override\n-    public RoleRecord getRoleByName( String roleName )\n+  @Override\n+  public void setRoles(ListSnapshot<RoleRecord> rolesSnapshot) throws InvalidArgumentsException\n+  {\n+    for (RoleRecord role : rolesSnapshot.values())\n     {\n-        return roleName == null ? null : rolesByName.get( roleName );\n+      assertValidRoleName(role.name());\n     }\n \n-    @Override\n-    public Set<String> getRoleNamesByUsername( String username )\n+    synchronized (this)\n     {\n-        Set<String> roleNames = rolesByUsername.get( username );\n-        return roleNames != null ? roleNames : Collections.emptySet();\n-    }\n+      roles.clear();\n \n-    @Override\n-    public void create( RoleRecord role ) throws InvalidArgumentsException, IOException\n-    {\n-        assertValidRoleName( role.name() );\n+      this.roles.addAll(rolesSnapshot.values());\n+      this.lastLoaded.set(rolesSnapshot.timestamp());\n \n-        synchronized ( this )\n-        {\n-            // Check for existing role\n-            for ( RoleRecord other : roles )\n-            {\n-                if ( other.name().equals( role.name() ) )\n-                {\n-                    throw new InvalidArgumentsException( \"The specified role '\" + role.name() + \"' already exists.\" );\n-                }\n-            }\n-\n-            roles.add( role );\n-\n-            persistRoles();\n+      trimToList(rolesByName, roles, RoleRecord::name);\n+      trimToFlattenedList(rolesByUsername, roles, r -> r.users().stream());\n \n-            rolesByName.put( role.name(), role );\n-\n-            populateUserMap( role );\n-        }\n+      for (RoleRecord role : roles)\n+      {\n+        rolesByName.put(role.name(), role);\n+        populateUserMap(role);\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public void update(RoleRecord existingRole, RoleRecord updatedRole)\n+      throws ConcurrentModificationException, IOException\n+  {\n+    // Assert input is ok\n+    if (!existingRole.name().equals(updatedRole.name()))\n+    {\n+      throw new IllegalArgumentException(\"The attempt to update the role from '\" + existingRole.name() +\n+          \"' to '\" + updatedRole.name() + \"' failed. Changing a roles name is not allowed.\");\n     }\n \n-    @Override\n-    public void setRoles( ListSnapshot<RoleRecord> rolesSnapshot ) throws InvalidArgumentsException\n+    synchronized (this)\n     {\n-        for ( RoleRecord role : rolesSnapshot.values() )\n+      // Copy-on-write for the roles list\n+      List<RoleRecord> newRoles = new ArrayList<>();\n+      boolean foundRole = false;\n+      for (RoleRecord other : roles)\n+      {\n+        if (other.equals(existingRole))\n+        {\n+          foundRole = true;\n+          newRoles.add(updatedRole);\n+        } else\n         {\n-            assertValidRoleName( role.name() );\n+          newRoles.add(other);\n         }\n+      }\n \n-        synchronized ( this )\n-        {\n-            roles.clear();\n+      if (!foundRole)\n+      {\n+        throw new ConcurrentModificationException();\n+      }\n \n-            this.roles.addAll( rolesSnapshot.values() );\n-            this.lastLoaded.set( rolesSnapshot.timestamp() );\n+      roles = newRoles;\n \n-            trimToList( rolesByName, roles, RoleRecord::name );\n-            trimToFlattenedList( rolesByUsername, roles, r -> r.users().stream() );\n+      persistRoles();\n \n-            for ( RoleRecord role : roles )\n-            {\n-                rolesByName.put( role.name(), role );\n-                populateUserMap( role );\n-            }\n-        }\n-    }\n+      rolesByName.put(updatedRole.name(), updatedRole);\n \n-    @Override\n-    public void update( RoleRecord existingRole, RoleRecord updatedRole )\n-            throws ConcurrentModificationException, IOException\n+      removeFromUserMap(existingRole);\n+      populateUserMap(updatedRole);\n+    }\n+  }\n+\n+  @Override\n+  public synchronized boolean delete(RoleRecord role) throws IOException\n+  {\n+    boolean foundRole = false;\n+    // Copy-on-write for the roles list\n+    List<RoleRecord> newRoles = new ArrayList<>();\n+    for (RoleRecord other : roles)\n     {\n-        // Assert input is ok\n-        if ( !existingRole.name().equals( updatedRole.name() ) )\n-        {\n-            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingRole.name() +\n-                    \"' to '\" + updatedRole.name() + \"' failed. Changing a roles name is not allowed.\" );\n-        }\n-\n-        synchronized ( this )\n-        {\n-            // Copy-on-write for the roles list\n-            List<RoleRecord> newRoles = new ArrayList<>();\n-            boolean foundRole = false;\n-            for ( RoleRecord other : roles )\n-            {\n-                if ( other.equals( existingRole ) )\n-                {\n-                    foundRole = true;\n-                    newRoles.add( updatedRole );\n-                }\n-                else\n-                {\n-                    newRoles.add( other );\n-                }\n-            }\n-\n-            if ( !foundRole )\n-            {\n-                throw new ConcurrentModificationException();\n-            }\n-\n-            roles = newRoles;\n-\n-            persistRoles();\n-\n-            rolesByName.put( updatedRole.name(), updatedRole );\n-\n-            removeFromUserMap( existingRole );\n-            populateUserMap( updatedRole );\n-        }\n+      if (other.name().equals(role.name()))\n+      {\n+        foundRole = true;\n+      } else\n+      {\n+        newRoles.add(other);\n+      }\n     }\n \n-    @Override\n-    public synchronized boolean delete( RoleRecord role ) throws IOException\n+    if (foundRole)\n     {\n-        boolean foundRole = false;\n-        // Copy-on-write for the roles list\n-        List<RoleRecord> newRoles = new ArrayList<>();\n-        for ( RoleRecord other : roles )\n-        {\n-            if ( other.name().equals( role.name() ) )\n-            {\n-                foundRole = true;\n-            }\n-            else\n-            {\n-                newRoles.add( other );\n-            }\n-        }\n-\n-        if ( foundRole )\n-        {\n-            roles = newRoles;\n+      roles = newRoles;\n \n-            persistRoles();\n+      persistRoles();\n \n-            rolesByName.remove( role.name() );\n-        }\n-\n-        removeFromUserMap( role );\n-        return foundRole;\n+      rolesByName.remove(role.name());\n     }\n \n-    @Override\n-    public synchronized int numberOfRoles()\n-    {\n-        return roles.size();\n-    }\n+    removeFromUserMap(role);\n+    return foundRole;\n+  }\n+\n+  @Override\n+  public synchronized int numberOfRoles()\n+  {\n+    return roles.size();\n+  }\n \n-    @Override\n-    public void assertValidRoleName( String name ) throws InvalidArgumentsException\n+  @Override\n+  public void assertValidRoleName(String name) throws InvalidArgumentsException\n+  {\n+    if (name == null || name.isEmpty())\n     {\n-        if ( name == null || name.isEmpty() )\n-        {\n-            throw new InvalidArgumentsException( \"The provided role name is empty.\" );\n-        }\n-        if ( !roleNamePattern.matcher( name ).matches() )\n-        {\n-            throw new InvalidArgumentsException(\n-                    \"Role name '\" + name + \"' contains illegal characters. Use simple ascii characters and numbers.\" );\n-        }\n+      throw new InvalidArgumentsException(\"The provided role name is empty.\");\n     }\n-\n-    @Override\n-    public synchronized void removeUserFromAllRoles( String username )\n-            throws ConcurrentModificationException, IOException\n+    if (!roleNamePattern.matcher(name).matches())\n     {\n-        Set<String> roles = rolesByUsername.get( username );\n-        if ( roles != null )\n-        {\n-            // Since update() is modifying the set we create a copy for the iteration\n-            List<String> rolesToRemoveFrom = new ArrayList<>( roles );\n-            for ( String roleName : rolesToRemoveFrom )\n-            {\n-                RoleRecord role = rolesByName.get( roleName );\n-                RoleRecord newRole = role.augment().withoutUser( username ).build();\n-                update( role, newRole );\n-            }\n-        }\n+      throw new InvalidArgumentsException(\n+          \"Role name '\" + name + \"' contains illegal characters. Use simple ascii characters and numbers.\");\n     }\n-\n-    @Override\n-    public synchronized Set<String> getAllRoleNames()\n+  }\n+\n+  @Override\n+  public synchronized void removeUserFromAllRoles(String username)\n+      throws ConcurrentModificationException, IOException\n+  {\n+    Set<String> roles = rolesByUsername.get(username);\n+    if (roles != null)\n     {\n-        return roles.stream().map( RoleRecord::name ).collect( Collectors.toSet() );\n+      // Since update() is modifying the set we create a copy for the iteration\n+      List<String> rolesToRemoveFrom = new ArrayList<>(roles);\n+      for (String roleName : rolesToRemoveFrom)\n+      {\n+        RoleRecord role = rolesByName.get(roleName);\n+        RoleRecord newRole = role.augment().withoutUser(username).build();\n+        update(role, newRole);\n+      }\n     }\n-\n-    /**\n-     * Override this in the implementing class to persist roles\n-     *\n-     * @throws IOException\n-     */\n-    protected abstract void persistRoles() throws IOException;\n-\n-    /**\n-     * Override this in the implementing class to load roles\n-     *\n-     * @return a timestamped snapshot of roles, or null if the backing file did not exist\n-     * @throws IOException\n-     */\n-    protected abstract ListSnapshot<RoleRecord> readPersistedRoles() throws IOException;\n-\n-    // ------------------ helpers --------------------\n-\n-    protected void populateUserMap( RoleRecord role )\n+  }\n+\n+  @Override\n+  public synchronized Set<String> getAllRoleNames()\n+  {\n+    return roles.stream().map(RoleRecord::name).collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * Override this in the implementing class to persist roles\n+   *\n+   * @throws IOException\n+   */\n+  protected abstract void persistRoles() throws IOException;\n+\n+  /**\n+   * Override this in the implementing class to load roles\n+   *\n+   * @return a timestamped snapshot of roles, or null if the backing file did not exist\n+   * @throws IOException\n+   */\n+  protected abstract ListSnapshot<RoleRecord> readPersistedRoles() throws IOException;\n+\n+  // ------------------ helpers --------------------\n+\n+  protected void populateUserMap(RoleRecord role)\n+  {\n+    for (String username : role.users())\n     {\n-        for ( String username : role.users() )\n-        {\n-            SortedSet<String> memberOfRoles = rolesByUsername.computeIfAbsent( username, k -> new ConcurrentSkipListSet<>() );\n-            memberOfRoles.add( role.name() );\n-        }\n+      SortedSet<String> memberOfRoles = rolesByUsername.computeIfAbsent(username, k -> new ConcurrentSkipListSet<>());\n+      memberOfRoles.add(role.name());\n     }\n+  }\n \n-    protected void removeFromUserMap( RoleRecord role )\n+  protected void removeFromUserMap(RoleRecord role)\n+  {\n+    for (String username : role.users())\n     {\n-        for ( String username : role.users() )\n-        {\n-            SortedSet<String> memberOfRoles = rolesByUsername.get( username );\n-            if ( memberOfRoles != null )\n-            {\n-                memberOfRoles.remove( role.name() );\n-            }\n-        }\n+      SortedSet<String> memberOfRoles = rolesByUsername.get(username);\n+      if (memberOfRoles != null)\n+      {\n+        memberOfRoles.remove(role.name());\n+      }\n     }\n+  }\n }\n",
            "diff_size": 318
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3947/AbstractRoleRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3947/AbstractRoleRepository.java\nindex 803c11ed195..a9cdba51e41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3947/AbstractRoleRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3947/AbstractRoleRepository.java\n@@ -94,8 +94,7 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n             roles.add( role );\n \n             persistRoles();\n-\n-            rolesByName.put( role.name(), role );\n+rolesByName.put( role.name(), role );\n \n             populateUserMap( role );\n         }\n@@ -112,14 +111,12 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n         synchronized ( this )\n         {\n             roles.clear();\n-\n-            this.roles.addAll( rolesSnapshot.values() );\n+this.roles.addAll( rolesSnapshot.values() );\n             this.lastLoaded.set( rolesSnapshot.timestamp() );\n \n             trimToList( rolesByName, roles, RoleRecord::name );\n             trimToFlattenedList( rolesByUsername, roles, r -> r.users().stream() );\n-\n-            for ( RoleRecord role : roles )\n+for ( RoleRecord role : roles )\n             {\n                 rolesByName.put( role.name(), role );\n                 populateUserMap( role );\n@@ -128,14 +125,12 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n     }\n \n     @Override\n-    public void update( RoleRecord existingRole, RoleRecord updatedRole )\n-            throws ConcurrentModificationException, IOException\n-    {\n+    public void update( RoleRecord existingRole, RoleRecord updatedRole ) throws ConcurrentModificationException, IOException\n+{\n         // Assert input is ok\n         if ( !existingRole.name().equals( updatedRole.name() ) )\n         {\n-            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingRole.name() +\n-                    \"' to '\" + updatedRole.name() + \"' failed. Changing a roles name is not allowed.\" );\n+            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingRole.name() + \"' to '\" + updatedRole.name() + \"' failed. Changing a roles name is not allowed.\" );\n         }\n \n         synchronized ( this )\n@@ -164,8 +159,7 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n             roles = newRoles;\n \n             persistRoles();\n-\n-            rolesByName.put( updatedRole.name(), updatedRole );\n+rolesByName.put( updatedRole.name(), updatedRole );\n \n             removeFromUserMap( existingRole );\n             populateUserMap( updatedRole );\n@@ -195,8 +189,7 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n             roles = newRoles;\n \n             persistRoles();\n-\n-            rolesByName.remove( role.name() );\n+rolesByName.remove( role.name() );\n         }\n \n         removeFromUserMap( role );\n@@ -216,17 +209,16 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n         {\n             throw new InvalidArgumentsException( \"The provided role name is empty.\" );\n         }\n-        if ( !roleNamePattern.matcher( name ).matches() )\n+\n+if ( !roleNamePattern.matcher( name ).matches() )\n         {\n-            throw new InvalidArgumentsException(\n-                    \"Role name '\" + name + \"' contains illegal characters. Use simple ascii characters and numbers.\" );\n-        }\n+            throw new InvalidArgumentsException( \"Role name '\" + name + \"' contains illegal characters. Use simple ascii characters and numbers.\" );\n+    }\n     }\n \n     @Override\n-    public synchronized void removeUserFromAllRoles( String username )\n-            throws ConcurrentModificationException, IOException\n-    {\n+    public synchronized void removeUserFromAllRoles( String username ) throws ConcurrentModificationException, IOException\n+{\n         Set<String> roles = rolesByUsername.get( username );\n         if ( roles != null )\n         {\n@@ -284,4 +276,4 @@ public abstract class AbstractRoleRepository extends LifecycleAdapter implements\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
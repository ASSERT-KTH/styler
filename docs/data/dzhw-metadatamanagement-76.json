{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "76",
    "information": {
        "errors": [
            {
                "line": "24",
                "column": "46",
                "severity": "error",
                "message": "'}' at column 46 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  private byte[] authentication;\n\n  public OAuth2AuthenticationRefreshToken() {}\n\n  /**\n   * Create the refresh token.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/76/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa2..d7680d66c40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/76/OAuth2AuthenticationRefreshToken.java\n@@ -13,7 +13,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The oauth2 refresh token.\n  */\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n   @Id\n@@ -21,14 +21,15 @@ public class OAuth2AuthenticationRefreshToken {\n   private byte[] token;\n   private byte[] authentication;\n \n-  public OAuth2AuthenticationRefreshToken() {}\n+  public OAuth2AuthenticationRefreshToken() {\n+  }\n \n   /**\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n   public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n-      final byte[] authentication) {\n+                                          final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authentication = authentication;\n@@ -48,11 +49,11 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/76/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa2..baca02f01c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/76/OAuth2AuthenticationRefreshToken.java\n@@ -13,7 +13,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The oauth2 refresh token.\n  */\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n   @Id\n@@ -27,7 +27,8 @@ public class OAuth2AuthenticationRefreshToken {\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n-  public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n+  public OAuth2AuthenticationRefreshToken(final String tokenId,\n+final byte[] token,\n       final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n@@ -48,13 +49,13 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n-      return true;\n+    if (this == other) {\n+  return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n-      return false;\n-    }\n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n+  return false;\n+  }\n \n     OAuth2AuthenticationRefreshToken that = (OAuth2AuthenticationRefreshToken) other;\n \n@@ -73,4 +74,4 @@ public class OAuth2AuthenticationRefreshToken {\n     return new ToStringBuilder(this).append(\"tokenId\", tokenId).append(\"token\", token)\n         .append(\"authentication\", authentication).toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/76/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa2..50ebaa22538 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/76/OAuth2AuthenticationRefreshToken.java\n@@ -6,29 +6,35 @@ import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.springframework.data.annotation.Id;\n import org.springframework.data.annotation.PersistenceConstructor;\n import org.springframework.data.mongodb.core.mapping.Document;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n \n /**\n  * The oauth2 refresh token.\n  */\n+\n+\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n   @Id\n   private String tokenId;\n+\n   private byte[] token;\n+\n   private byte[] authentication;\n \n-  public OAuth2AuthenticationRefreshToken() {}\n+  public OAuth2AuthenticationRefreshToken() {\n+  }\n \n   /**\n    * Create the refresh token.\n    */\n+\n+\n   @PersistenceConstructor\n   public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n-      final byte[] authentication) {\n+  final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authentication = authentication;\n@@ -46,31 +52,37 @@ public class OAuth2AuthenticationRefreshToken {\n     return authentication;\n   }\n \n+\n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n-\n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n-\n     OAuth2AuthenticationRefreshToken that = (OAuth2AuthenticationRefreshToken) other;\n-\n-    return new EqualsBuilder().append(tokenId, that.tokenId).append(token, that.token)\n-        .append(authentication, that.authentication).isEquals();\n+    return new EqualsBuilder().append(tokenId, that.tokenId)\n+                              .append(token, that.token)\n+                              .append(authentication, that.authentication)\n+                              .isEquals();\n   }\n \n+\n   @Override\n   public int hashCode() {\n-    return new HashCodeBuilder(17, 37).append(tokenId).append(token).append(authentication)\n-        .toHashCode();\n+    return new HashCodeBuilder(17, 37).append(tokenId)\n+                                      .append(token)\n+                                      .append(authentication)\n+                                      .toHashCode();\n   }\n \n+\n   @Override\n   public String toString() {\n-    return new ToStringBuilder(this).append(\"tokenId\", tokenId).append(\"token\", token)\n-        .append(\"authentication\", authentication).toString();\n+    return new ToStringBuilder(this).append(\"tokenId\", tokenId)\n+                                    .append(\"token\", token)\n+                                    .append(\"authentication\", authentication)\n+                                    .toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/76/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa2..3e9c385f7d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/76/OAuth2AuthenticationRefreshToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/76/OAuth2AuthenticationRefreshToken.java\n@@ -22,8 +22,7 @@ public class OAuth2AuthenticationRefreshToken {\n   private byte[] authentication;\n \n   public OAuth2AuthenticationRefreshToken() {}\n-\n-  /**\n+      /**\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
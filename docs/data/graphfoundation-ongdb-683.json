{
    "project_name": "graphfoundation-ongdb",
    "error_id": "683",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/683/BigIdTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/683/BigIdTracker.java\nindex 495e2dd2ecc..4e8e4d30ae1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/683/BigIdTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/683/BigIdTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import java.util.Arrays;\n@@ -29,48 +30,49 @@ import org.neo4j.unsafe.impl.batchimport.cache.LongBitsManipulator;\n  */\n public class BigIdTracker extends AbstractTracker<ByteArray>\n {\n-    static final int SIZE = 5;\n-    static final int ID_BITS = (Byte.SIZE * SIZE) - 1;\n-    static final byte[] DEFAULT_VALUE;\n-    public static final long MAX_ID = 1L << ID_BITS - 1;\n-    private static final LongBitsManipulator BITS = new LongBitsManipulator( ID_BITS, 1 );\n-    static\n-    {\n-        DEFAULT_VALUE = new byte[SIZE];\n-        Arrays.fill( DEFAULT_VALUE, (byte) -1 );\n-    }\n+  static final int SIZE = 5;\n+  static final int ID_BITS = (Byte.SIZE * SIZE) - 1;\n+  static final byte[] DEFAULT_VALUE;\n+  public static final long MAX_ID = 1L << ID_BITS - 1;\n+  private static final LongBitsManipulator BITS = new LongBitsManipulator(ID_BITS, 1);\n+\n+  static\n+  {\n+    DEFAULT_VALUE = new byte[SIZE];\n+    Arrays.fill(DEFAULT_VALUE, (byte) -1);\n+  }\n \n-    public BigIdTracker( ByteArray array )\n-    {\n-        super( array );\n-    }\n+  public BigIdTracker(ByteArray array)\n+  {\n+    super(array);\n+  }\n \n-    @Override\n-    public long get( long index )\n-    {\n-        return BITS.get( array.get5ByteLong( index, 0 ), 0 );\n-    }\n+  @Override\n+  public long get(long index)\n+  {\n+    return BITS.get(array.get5ByteLong(index, 0), 0);\n+  }\n \n-    @Override\n-    public void set( long index, long value )\n-    {\n-        long field = array.get5ByteLong( index, 0 );\n-        field = BITS.set( field, 0, value );\n-        array.set5ByteLong( index, 0, field );\n-    }\n+  @Override\n+  public void set(long index, long value)\n+  {\n+    long field = array.get5ByteLong(index, 0);\n+    field = BITS.set(field, 0, value);\n+    array.set5ByteLong(index, 0, field);\n+  }\n \n-    @Override\n-    public void markAsDuplicate( long index )\n-    {\n-        long field = array.get5ByteLong( index, 0 );\n-        field = BITS.set( field, 1, 0 );\n-        array.set5ByteLong( index, 0, field );\n-    }\n+  @Override\n+  public void markAsDuplicate(long index)\n+  {\n+    long field = array.get5ByteLong(index, 0);\n+    field = BITS.set(field, 1, 0);\n+    array.set5ByteLong(index, 0, field);\n+  }\n \n-    @Override\n-    public boolean isMarkedAsDuplicate( long index )\n-    {\n-        long field = array.get5ByteLong( index, 0 );\n-        return BITS.get( field, 1 ) == 0;\n-    }\n+  @Override\n+  public boolean isMarkedAsDuplicate(long index)\n+  {\n+    long field = array.get5ByteLong(index, 0);\n+    return BITS.get(field, 1) == 0;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/683/BigIdTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/683/BigIdTracker.java\nindex 495e2dd2ecc..86abd74612d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/683/BigIdTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/683/BigIdTracker.java\n@@ -32,7 +32,8 @@ public class BigIdTracker extends AbstractTracker<ByteArray>\n     static final int SIZE = 5;\n     static final int ID_BITS = (Byte.SIZE * SIZE) - 1;\n     static final byte[] DEFAULT_VALUE;\n-    public static final long MAX_ID = 1L << ID_BITS - 1;\n+\n+public static final long MAX_ID = 1L << ID_BITS - 1;\n     private static final LongBitsManipulator BITS = new LongBitsManipulator( ID_BITS, 1 );\n     static\n     {\n@@ -73,4 +74,4 @@ public class BigIdTracker extends AbstractTracker<ByteArray>\n         long field = array.get5ByteLong( index, 0 );\n         return BITS.get( field, 1 ) == 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
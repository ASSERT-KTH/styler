{
    "project_name": "Activiti-Activiti",
    "error_id": "245",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "        this.setElementId(elementId);\n    }\n    public BPMNErrorImpl(String elementId,\n                         String activityName,\n                         String activityType) {\n        this.setElementId(elementId);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/245/BPMNErrorImpl.java\nindex 88c4941f29c..24d41eca8b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/245/BPMNErrorImpl.java\n@@ -31,8 +31,9 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     public BPMNErrorImpl(String elementId) {\n         this.setElementId(elementId);\n     }\n+\n     public BPMNErrorImpl(String elementId,\n-                         String activityName,\n+                                        String activityName,\n                          String activityType) {\n         this.setElementId(elementId);\n         this.setActivityName(activityName);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/245/BPMNErrorImpl.java\nindex 88c4941f29c..207a6a875e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/245/BPMNErrorImpl.java\n@@ -31,6 +31,7 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     public BPMNErrorImpl(String elementId) {\n         this.setElementId(elementId);\n     }\n+\n     public BPMNErrorImpl(String elementId,\n                          String activityName,\n                          String activityType) {\n@@ -38,7 +39,7 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n         this.setActivityName(activityName);\n         this.setActivityType(activityType);\n     }\n-    \n+\n     public String getErrorCode() {\n         return errorCode;\n     }\n@@ -46,7 +47,7 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     public void setErrorCode(String errorCode) {\n         this.errorCode = errorCode;\n     }\n-    \n+\n     public String getErrorId() {\n         return errorId;\n     }\n@@ -58,10 +59,10 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     @Override\n     public int hashCode() {\n         return Objects.hash(getElementId(),\n-                            getActivityName(),\n-                            getActivityType(),\n-                            getErrorId(),\n-                            getErrorCode());\n+                getActivityName(),\n+                getActivityType(),\n+                getErrorId(),\n+                getErrorCode());\n     }\n \n     @Override\n@@ -75,15 +76,15 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n         BPMNErrorImpl that = (BPMNErrorImpl) o;\n \n         return Objects.equals(getElementId(),\n-                              that.getElementId()) &&\n-               Objects.equals(getActivityName(),\n-                              that.getActivityName()) &&\n-               Objects.equals(getActivityType(),\n-                              that.getActivityType()) &&\n-               Objects.equals(getErrorCode(),\n-                              that.getErrorCode()) &&\n-               Objects.equals(getErrorId(),\n-                              that.getErrorId());\n+                that.getElementId()) &&\n+                Objects.equals(getActivityName(),\n+                        that.getActivityName()) &&\n+                Objects.equals(getActivityType(),\n+                        that.getActivityType()) &&\n+                Objects.equals(getErrorCode(),\n+                        that.getErrorCode()) &&\n+                Objects.equals(getErrorId(),\n+                        that.getErrorId());\n     }\n \n     @Override\n@@ -94,7 +95,7 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n                 \", elementId='\" + getElementId() + '\\'' +\n                 \", errorId='\" + getErrorId() + '\\'' +\n                 \", errorCode='\" + getErrorCode() + '\\'' +\n-                '}';       \n+                '}';\n     }\n- \n+\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/245/BPMNErrorImpl.java\nindex 88c4941f29c..f9c99030eb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/245/BPMNErrorImpl.java\n@@ -17,84 +17,69 @@\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n-\n import org.activiti.api.process.model.BPMNError;\n \n+\n public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n \n-    private String errorCode;\n-    private String errorId;\n+  private String errorCode;\n \n-    public BPMNErrorImpl() {\n-    }\n+  private String errorId;\n \n-    public BPMNErrorImpl(String elementId) {\n-        this.setElementId(elementId);\n-    }\n-    public BPMNErrorImpl(String elementId,\n-                         String activityName,\n-                         String activityType) {\n-        this.setElementId(elementId);\n-        this.setActivityName(activityName);\n-        this.setActivityType(activityType);\n-    }\n-    \n-    public String getErrorCode() {\n-        return errorCode;\n-    }\n+  public BPMNErrorImpl() {\n+  }\n \n-    public void setErrorCode(String errorCode) {\n-        this.errorCode = errorCode;\n-    }\n-    \n-    public String getErrorId() {\n-        return errorId;\n-    }\n+  public BPMNErrorImpl(String elementId) {\n+    this.setElementId(elementId);\n+  }\n \n-    public void setErrorId(String errorId) {\n-        this.errorId = errorId;\n-    }\n+  public BPMNErrorImpl(String elementId, String activityName, String activityType) {\n+    this.setElementId(elementId);\n+    this.setActivityName(activityName);\n+    this.setActivityType(activityType);\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(getElementId(),\n-                            getActivityName(),\n-                            getActivityType(),\n-                            getErrorId(),\n-                            getErrorCode());\n-    }\n+  public String getErrorCode() {\n+    return errorCode;\n+  }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        BPMNErrorImpl that = (BPMNErrorImpl) o;\n-\n-        return Objects.equals(getElementId(),\n-                              that.getElementId()) &&\n-               Objects.equals(getActivityName(),\n-                              that.getActivityName()) &&\n-               Objects.equals(getActivityType(),\n-                              that.getActivityType()) &&\n-               Objects.equals(getErrorCode(),\n-                              that.getErrorCode()) &&\n-               Objects.equals(getErrorId(),\n-                              that.getErrorId());\n-    }\n+  public void setErrorCode(String errorCode) {\n+    this.errorCode = errorCode;\n+  }\n+\n+  public String getErrorId() {\n+    return errorId;\n+  }\n+\n+  public void setErrorId(String errorId) {\n+    this.errorId = errorId;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(getElementId(),\n+                        getActivityName(),\n+                        getActivityType(),\n+                        getErrorId(),\n+                        getErrorCode());\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"BPMNActivityImpl{\" +\n-                \"activityName='\" + getActivityName() + '\\'' +\n-                \", activityType='\" + getActivityType() + '\\'' +\n-                \", elementId='\" + getElementId() + '\\'' +\n-                \", errorId='\" + getErrorId() + '\\'' +\n-                \", errorCode='\" + getErrorCode() + '\\'' +\n-                '}';       \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n     }\n- \n-}\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    BPMNErrorImpl that = (BPMNErrorImpl) o;\n+    return Objects.equals(getElementId(), that.getElementId()) && Objects.equals(getActivityName(), that.getActivityName()) && Objects.equals(getActivityType(), that.getActivityType()) && Objects.equals(getErrorCode(), that.getErrorCode()) && Objects.equals(getErrorId(), that.getErrorId());\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"BPMNActivityImpl{\" + \"activityName='\" + getActivityName() + '\\'' + \", activityType='\" + getActivityType() + '\\'' + \", elementId='\" + getElementId() + '\\'' + \", errorId='\" + getErrorId() + '\\'' + \", errorCode='\" + getErrorCode() + '\\'' + '}';\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/245/BPMNErrorImpl.java\nindex 88c4941f29c..24d41eca8b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/245/BPMNErrorImpl.java\n@@ -31,8 +31,9 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     public BPMNErrorImpl(String elementId) {\n         this.setElementId(elementId);\n     }\n+\n     public BPMNErrorImpl(String elementId,\n-                         String activityName,\n+                                        String activityName,\n                          String activityType) {\n         this.setElementId(elementId);\n         this.setActivityName(activityName);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/245/BPMNErrorImpl.java\nindex 88c4941f29c..13eccb36c02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/245/BPMNErrorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/245/BPMNErrorImpl.java\n@@ -31,8 +31,9 @@ public class BPMNErrorImpl extends BPMNActivityImpl implements BPMNError {\n     public BPMNErrorImpl(String elementId) {\n         this.setElementId(elementId);\n     }\n+\n     public BPMNErrorImpl(String elementId,\n-                         String activityName,\n+                                String activityName,\n                          String activityType) {\n         this.setElementId(elementId);\n         this.setActivityName(activityName);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
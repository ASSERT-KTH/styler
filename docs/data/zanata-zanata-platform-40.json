{
    "project_name": "zanata-zanata-platform",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "61",
                "severity": "error",
                "message": "'+' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n    public static String ilike(String property, String namedParam) {\n        return \"lower(\" + property + \") like \" + namedParam +\"\";\n    }\n\n    public static String like(String property, String namedParam) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/40/HqlCriterion.java\nindex 3553a488b13..27bc8219123 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/40/HqlCriterion.java\n@@ -22,7 +22,7 @@ public class HqlCriterion {\n     }\n \n     public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n+        return \"lower(\" + property + \") like \" + namedParam + \"\";\n     }\n \n     public static String like(String property, String namedParam) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/40/HqlCriterion.java\nindex 3553a488b13..749474e5aac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/40/HqlCriterion.java\n@@ -4,52 +4,53 @@ import org.hibernate.criterion.MatchMode;\n \n /**\n  * To make writing HQL easier.\n+ *\n  * @author Patrick Huang\n- *         <a href=\"mailto:pahuang@redhat.com\">pahuang@redhat.com</a>\n+ * <a href=\"mailto:pahuang@redhat.com\">pahuang@redhat.com</a>\n  */\n public class HqlCriterion {\n \n-    public static String eq(String property, String namedParam) {\n-        return property + \"=\" + namedParam;\n-    }\n+  public static String eq(String property, String namedParam) {\n+    return property + \"=\" + namedParam;\n+  }\n \n-    public static String ne(String property, String namedParam) {\n-        return property + \"<>\" + namedParam;\n-    }\n+  public static String ne(String property, String namedParam) {\n+    return property + \"<>\" + namedParam;\n+  }\n \n-    public static String isNull(String property) {\n-        return property + \" is null\";\n-    }\n+  public static String isNull(String property) {\n+    return property + \" is null\";\n+  }\n \n-    public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n-    }\n+  public static String ilike(String property, String namedParam) {\n+    return \"lower(\" + property + \") like \" + namedParam + \"\";\n+  }\n \n-    public static String like(String property, String namedParam) {\n-        return property + \" like \" + namedParam;\n-    }\n+  public static String like(String property, String namedParam) {\n+    return property + \" like \" + namedParam;\n+  }\n \n-    public static String like(String property, boolean caseSensitive, String namedParam) {\n-        if (caseSensitive) {\n-            return like(property, namedParam);\n-        } else {\n-            return ilike(property, namedParam);\n-        }\n+  public static String like(String property, boolean caseSensitive, String namedParam) {\n+    if (caseSensitive) {\n+      return like(property, namedParam);\n+    } else {\n+      return ilike(property, namedParam);\n     }\n+  }\n \n-    public static String escapeWildcard(String value) {\n-        return value.replaceAll(\"%\", \"\\\\\\\\%\").replaceAll(\"_\", \"\\\\\\\\_\");\n-    }\n+  public static String escapeWildcard(String value) {\n+    return value.replaceAll(\"%\", \"\\\\\\\\%\").replaceAll(\"_\", \"\\\\\\\\_\");\n+  }\n \n-    public static String match(String pattern, MatchMode matchMode) {\n-        return matchMode.toMatchString(pattern);\n-    }\n+  public static String match(String pattern, MatchMode matchMode) {\n+    return matchMode.toMatchString(pattern);\n+  }\n \n-    public static String gt(String property, String namedParam) {\n-        return property + \">\" + namedParam;\n-    }\n+  public static String gt(String property, String namedParam) {\n+    return property + \">\" + namedParam;\n+  }\n \n-    public static String lt(String property, String namedParam) {\n-        return property + \"<\" + namedParam;\n-    }\n+  public static String lt(String property, String namedParam) {\n+    return property + \"<\" + namedParam;\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/40/HqlCriterion.java\nindex 3553a488b13..5f0a3a2c823 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/40/HqlCriterion.java\n@@ -22,7 +22,7 @@ public class HqlCriterion {\n     }\n \n     public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n+        return \"lower(\" + property + \") like \" + namedParam + \"\";\n     }\n \n     public static String like(String property, String namedParam) {\n@@ -52,4 +52,4 @@ public class HqlCriterion {\n     public static String lt(String property, String namedParam) {\n         return property + \"<\" + namedParam;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/40/HqlCriterion.java\nindex 3553a488b13..e8b9eff7e40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/40/HqlCriterion.java\n@@ -7,8 +7,9 @@ import org.hibernate.criterion.MatchMode;\n  * @author Patrick Huang\n  *         <a href=\"mailto:pahuang@redhat.com\">pahuang@redhat.com</a>\n  */\n-public class HqlCriterion {\n \n+\n+public class HqlCriterion {\n     public static String eq(String property, String namedParam) {\n         return property + \"=\" + namedParam;\n     }\n@@ -22,7 +23,7 @@ public class HqlCriterion {\n     }\n \n     public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n+        return \"lower(\" + property + \") like \" + namedParam + \"\";\n     }\n \n     public static String like(String property, String namedParam) {\n@@ -52,4 +53,4 @@ public class HqlCriterion {\n     public static String lt(String property, String namedParam) {\n         return property + \"<\" + namedParam;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/40/HqlCriterion.java\nindex 3553a488b13..27bc8219123 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/40/HqlCriterion.java\n@@ -22,7 +22,7 @@ public class HqlCriterion {\n     }\n \n     public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n+        return \"lower(\" + property + \") like \" + namedParam + \"\";\n     }\n \n     public static String like(String property, String namedParam) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/40/HqlCriterion.java\nindex 3553a488b13..27bc8219123 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/40/HqlCriterion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/40/HqlCriterion.java\n@@ -22,7 +22,7 @@ public class HqlCriterion {\n     }\n \n     public static String ilike(String property, String namedParam) {\n-        return \"lower(\" + property + \") like \" + namedParam +\"\";\n+        return \"lower(\" + property + \") like \" + namedParam + \"\";\n     }\n \n     public static String like(String property, String namedParam) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
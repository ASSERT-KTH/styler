[
    ".gitignore",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/1-Karatsuba Multiplication",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/1-Karatsuba Multiplication/Karatsuba.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/1-Karatsuba Multiplication/karatsuba.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/2-Number of Inversions",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/2-Number of Inversions/InversionCounter.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/2-Number of Inversions/num_inversion.cpp",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/2-Number of Inversions/number_of_inversions.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/3-Closest Pair",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/3-Closest Pair/ClosestPairFinder.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/3-Closest Pair/closest_pair.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/4-Quick Sort",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/4-Quick Sort/QuickSort.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/4-Quick Sort/quick_sort.cpp",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/4-Quick Sort/quick_sort.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/5-Random Selection",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/5-Random Selection/RandomSelection.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/5-Random Selection/random_selection.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/directed_graph",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/directed_graph/DirectedEdge.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/directed_graph/DirectedGraph.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/directed_graph/Vertex.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/graph",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/graph/AbstractVertex.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/graph/GraphInterface.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/undirected_graph",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/undirected_graph/UndirectedEdge.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/undirected_graph/UndirectedGraph.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Java/undirected_graph/Vertex.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Python",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Python/directed_graph.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Python/graph_basics.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/6-Graph Representation/Python/undirected_graph.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/MinimumCut.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/graph",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/graph/AbstractVertex.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/graph/GraphInterface.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/undirected_graph",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/undirected_graph/UndirectedEdge.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/undirected_graph/UndirectedGraph.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Java/undirected_graph/Vertex.java",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Python",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Python/graph_basics.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Python/minimum_cut.py",
    "1-Divide and Conquer, Sorting and Searching, and Randomized Algorithms/7-Minimum Cut Problem/Python/undirected_graph.py",
    "2-Graph Search, Shortest Path, and Data Structures",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table/Design of Hash Function.md",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table/Hash Table Implementation with Separate Chaining",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table/Hash Table Implementation with Separate Chaining/MyHTInterface.java",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table/Hash Table Implementation with Separate Chaining/MyHTWithSC.java",
    "2-Graph Search, Shortest Path, and Data Structures/1-Hash Table/Hash Table Implementation with Separate Chaining/hash_table_with_separate_chaining.py",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/1-Select & Rank",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/1-Select & Rank/AugmentedBST.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/1-Select & Rank/BSTInterface.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/1-Select & Rank/augmented_bst.py",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/2-AVL Tree",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/2-AVL Tree/AVL Tree.JPG",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/2-AVL Tree/AVLTree.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/2-AVL Tree/BSTInterface.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/2-AVL Tree/avl_tree.py",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/3-Red-Black Tree",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/3-Red-Black Tree/BSTInterface.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/3-Red-Black Tree/Red-Black Tree.md",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/3-Red-Black Tree/RedBlackTree.java",
    "2-Graph Search, Shortest Path, and Data Structures/2-BST/3-Red-Black Tree/red_black_tree.py",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/BFS and Its Applications.md",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/DFS and Its Applications.md",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/directed_graph",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/directed_graph/DirectedEdge.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/directed_graph/DirectedGraph.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/directed_graph/Vertex.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/graph",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/graph/AbstractVertex.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/graph/GraphInterface.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/undirected_graph",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/undirected_graph/UndirectedEdge.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/undirected_graph/UndirectedGraph.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Java/undirected_graph/Vertex.java",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Python",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Python/directed_graph.py",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Python/graph_basics.py",
    "2-Graph Search, Shortest Path, and Data Structures/3-Graph Search (BFS & DFS)/Python/undirected_graph.py",
    "2-Graph Search, Shortest Path, and Data Structures/4-Bloom Filter",
    "2-Graph Search, Shortest Path, and Data Structures/4-Bloom Filter/Bloom Filter.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/1-Scheduling Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/1-Scheduling Problem/Scheduler.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/1-Scheduling Problem/scheduling.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/directed_graph",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/directed_graph/DirectedEdge.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/directed_graph/DirectedGraph.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/directed_graph/Vertex.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/graph",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/graph/AbstractEdge.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/graph/AbstractVertex.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/graph/GraphInterface.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/undirected_graph",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/undirected_graph/UndirectedEdge.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/undirected_graph/UndirectedGraph.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Java/undirected_graph/Vertex.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/2-Single-Vertex Shortest Paths/Single-Vertex Shortest Paths.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/graph",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/graph/AbstractVertex.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/graph/GraphInterface.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/undirected_graph",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/undirected_graph/UndirectedEdge.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/undirected_graph/UndirectedGraph.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/undirected_graph/Vertex.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/union_find",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/union_find/UnionFind.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Java/union_find/UnionFindObj.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Minimum Spanning Tree Problem.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Python",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Python/graph_basics.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Python/undirected_graph.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/3-Minimum Spanning Tree/Python/union_find.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java/union_find",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java/union_find/LazyUnion.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java/union_find/LazyUnionObj.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java/union_find/UnionFind.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Java/union_find/UnionFindObj.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Python",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Python/lazy_union.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Python/union_find.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/4-Data Structure-Union Find/Union Find.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/5-Huffman Encoding",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/5-Huffman Encoding/Huffman.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/5-Huffman Encoding/huffman.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/1-Greedy Algorithm/Greedy Algorithm.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/1-Maximum-Weight Independent Set in Path Graph Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/1-Maximum-Weight Independent Set in Path Graph Problem/MaxWeightIndependentSet.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/1-Maximum-Weight Independent Set in Path Graph Problem/max_weight_independent_set.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/2-Weighted Interval Scheduling Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/2-Weighted Interval Scheduling Problem/WeightedIntervalScheduling.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/2-Weighted Interval Scheduling Problem/weighted_interval_scheduling.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/1-Knapsack Problem with Exact Size",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/1-Knapsack Problem with Exact Size/KnapsackWithExactSize.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/1-Knapsack Problem with Exact Size/knapsack_with_exact_size.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/2-Knapsack Problem with Budget",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/2-Knapsack Problem with Budget/KnapsackWithBudget.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/2-Knapsack Problem with Budget/knapsack_with_budget.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/3-Two-Knapsack Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/3-Two-Knapsack Problem/TwoKnapsack.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack Problem Variations/3-Two-Knapsack Problem/two_knapsack.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/Knapsack.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/3-Knapsack Problem/knapsack.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/SequenceAlignment.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/1-Sequence Alignment Problem with Consecutive Gaps Penalty",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/1-Sequence Alignment Problem with Consecutive Gaps Penalty/SequenceAlignmentWithConsecutiveGapsPen.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/1-Sequence Alignment Problem with Consecutive Gaps Penalty/sequence_alignment_with_consecutive_gaps_pen.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/2-Longest Common Subsequence Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/2-Longest Common Subsequence Problem/LongestCommonSubsequenceFinder.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/2-Longest Common Subsequence Problem/longest_common_subsequence.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/3-Longest Common Substring Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/3-Longest Common Substring Problem/LongestCommonSubstringFinder.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/Two Strings Problems Using Dynamic Progamming/3-Longest Common Substring Problem/longest_common_substring.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/4-Sequence Alignment Problem/sequence_alignment.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem/Optimal BST Problem.md",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem/OptimalBSTFinder.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem/OptimalBSTFinderOptimized.java",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem/optimal_bst.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/5-Optimal BST Problem/optimal_bst_optimized.py",
    "3-Greedy Algorithms, Minimum Spanning Tree, and Dynamic Programming/2-Dynamic Programming/Dynamic Programming.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/directed_graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/directed_graph/DirectedEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/directed_graph/DirectedGraph.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/directed_graph/Vertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/graph/AbstractEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/graph/AbstractVertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/graph/GraphInterface.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/undirected_graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/undirected_graph/UndirectedEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/undirected_graph/UndirectedGraph.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Java/undirected_graph/Vertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Python",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Python/directed_graph.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Python/graph_basics.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Python/undirected_graph.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/1-Shortest Paths Revisit/Shortest Paths Revisit.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/All-Pair Shortest Paths.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/directed_graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/directed_graph/DirectedEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/directed_graph/DirectedGraph.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/directed_graph/Vertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/graph/AbstractEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/graph/AbstractVertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/graph/GraphInterface.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/undirected_graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/undirected_graph/UndirectedEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/undirected_graph/UndirectedGraph.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Java/undirected_graph/Vertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Python",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Python/directed_graph.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Python/graph_basics.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/2-All-Pair Shortest Paths Problem/Python/undirected_graph.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 1-Focus on some computationally tractable special cases (=> Exact algorithms)",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 1-Focus on some computationally tractable special cases (=> Exact algorithms)/2-SAT Problem.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)/Traveling Salesman Problem (TSP)",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)/Traveling Salesman Problem (TSP)/TSPSolver.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)/Traveling Salesman Problem (TSP)/Traveling Salesman Problem (TSP).md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)/Traveling Salesman Problem (TSP)/tsp.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 2-Solve in exponential-time, but faster than brute-force way (=> Exact algorithms)/Vertex Cover Problem (Variation).md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 1-Greedy",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 1-Greedy/KnapsackWithGreedyHeuristic.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 1-Greedy/knapsack_with_greedy_heuristic.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 2-Dynamic Programming",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 2-Dynamic Programming/Knapsack Problem with Dynamic Programming-Based Heuristic.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 2-Dynamic Programming/Knapsack.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 2-Dynamic Programming/knapsack.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Local Search.md",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/graph/AbstractVertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/graph/GraphInterface.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/undirected_graph",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/undirected_graph/UndirectedEdge.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/undirected_graph/UndirectedGraph.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Java/undirected_graph/Vertex.java",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Python",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Python/graph_basics.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/Approach 3-Use heuristics (efficient algorithms that are not always correct) (=> Approximate algorithms)/Frequently-used Heuristic Design Paradigms 3-Local Search/Maximum Cut Problem/Python/undirected_graph.py",
    "4-Shortest Paths Revisit, NP-Complete Problems and What To Do About Them/3-NP-Complete Problems/NP-Complete Problems.md",
    "LICENSE",
    "README.md"
]
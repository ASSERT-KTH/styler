[
    ".gitignore",
    "LICENSE",
    "README.md",
    "build.gradle",
    "gradle.properties",
    "shippable.yaml",
    "src",
    "src/jmh",
    "src/jmh/java",
    "src/jmh/java/org",
    "src/jmh/java/org/allenai",
    "src/jmh/java/org/allenai/ml",
    "src/jmh/java/org/allenai/ml/linalg",
    "src/jmh/java/org/allenai/ml/linalg/VectorBenchmark.java",
    "src/main",
    "src/main/java",
    "src/main/java/org",
    "src/main/java/org/allenai",
    "src/main/java/org/allenai/ml",
    "src/main/java/org/allenai/ml/classification",
    "src/main/java/org/allenai/ml/classification/Classifier.java",
    "src/main/java/org/allenai/ml/classification/FeatureExtractor.java",
    "src/main/java/org/allenai/ml/classification/MaxEntModel.java",
    "src/main/java/org/allenai/ml/classification/MaxEntObjective.java",
    "src/main/java/org/allenai/ml/classification/ProbabilisticClassifier.java",
    "src/main/java/org/allenai/ml/eval",
    "src/main/java/org/allenai/ml/eval/Accuracy.java",
    "src/main/java/org/allenai/ml/eval/FMeasure.java",
    "src/main/java/org/allenai/ml/eval/TrainCriterionEval.java",
    "src/main/java/org/allenai/ml/linalg",
    "src/main/java/org/allenai/ml/linalg/DenseVector.java",
    "src/main/java/org/allenai/ml/linalg/SparseVector.java",
    "src/main/java/org/allenai/ml/linalg/Vector.java",
    "src/main/java/org/allenai/ml/math",
    "src/main/java/org/allenai/ml/math/SloppyMath.java",
    "src/main/java/org/allenai/ml/objective",
    "src/main/java/org/allenai/ml/objective/BatchObjectiveFn.java",
    "src/main/java/org/allenai/ml/objective/ExampleObjectiveFn.java",
    "src/main/java/org/allenai/ml/optimize",
    "src/main/java/org/allenai/ml/optimize/ApproximateGradientFn.java",
    "src/main/java/org/allenai/ml/optimize/BacktrackingLineMinimizer.java",
    "src/main/java/org/allenai/ml/optimize/CachingGradientFn.java",
    "src/main/java/org/allenai/ml/optimize/GradientFn.java",
    "src/main/java/org/allenai/ml/optimize/GradientFnMinimizer.java",
    "src/main/java/org/allenai/ml/optimize/LineMinimizer.java",
    "src/main/java/org/allenai/ml/optimize/NewtonMethod.java",
    "src/main/java/org/allenai/ml/optimize/QuasiNewton.java",
    "src/main/java/org/allenai/ml/optimize/Regularizer.java",
    "src/main/java/org/allenai/ml/sequences",
    "src/main/java/org/allenai/ml/sequences/Evaluation.java",
    "src/main/java/org/allenai/ml/sequences/ForwardBackwards.java",
    "src/main/java/org/allenai/ml/sequences/SequenceTagger.java",
    "src/main/java/org/allenai/ml/sequences/StateSpace.java",
    "src/main/java/org/allenai/ml/sequences/Transition.java",
    "src/main/java/org/allenai/ml/sequences/crf",
    "src/main/java/org/allenai/ml/sequences/crf/CRFFeatureEncoder.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFIndexedExample.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFLogLikelihoodObjective.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFModel.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFPredicateExtractor.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFTrainer.java",
    "src/main/java/org/allenai/ml/sequences/crf/CRFWeightsEncoder.java",
    "src/main/java/org/allenai/ml/sequences/crf/conll",
    "src/main/java/org/allenai/ml/sequences/crf/conll/ConllFormat.java",
    "src/main/java/org/allenai/ml/sequences/crf/conll/Evaluator.java",
    "src/main/java/org/allenai/ml/sequences/crf/conll/Trainer.java",
    "src/main/java/org/allenai/ml/util",
    "src/main/java/org/allenai/ml/util/Functional.java",
    "src/main/java/org/allenai/ml/util/IOUtils.java",
    "src/main/java/org/allenai/ml/util/Indexer.java",
    "src/main/java/org/allenai/ml/util/Parallel.java",
    "src/test",
    "src/test/java",
    "src/test/java/org",
    "src/test/java/org/allenai",
    "src/test/java/org/allenai/ml",
    "src/test/java/org/allenai/ml/classification",
    "src/test/java/org/allenai/ml/classification/ClassificationEndToEndTest.java",
    "src/test/java/org/allenai/ml/linalg",
    "src/test/java/org/allenai/ml/linalg/DenseVectorTest.java",
    "src/test/java/org/allenai/ml/linalg/SparseVectorTest.java",
    "src/test/java/org/allenai/ml/linalg/VectorTest.java",
    "src/test/java/org/allenai/ml/math",
    "src/test/java/org/allenai/ml/math/SloppyMathTest.java",
    "src/test/java/org/allenai/ml/objective",
    "src/test/java/org/allenai/ml/objective/BatchObjectiveFnTest.java",
    "src/test/java/org/allenai/ml/optimize",
    "src/test/java/org/allenai/ml/optimize/BacktrackingLineMinimizerTest.java",
    "src/test/java/org/allenai/ml/optimize/CachingGradientFnTest.java",
    "src/test/java/org/allenai/ml/optimize/NewtonMethodTest.java",
    "src/test/java/org/allenai/ml/optimize/TestUtils.java",
    "src/test/java/org/allenai/ml/sequences",
    "src/test/java/org/allenai/ml/sequences/ForwardBackwardsTest.java",
    "src/test/java/org/allenai/ml/sequences/StateSpaceTest.java",
    "src/test/java/org/allenai/ml/sequences/crf",
    "src/test/java/org/allenai/ml/sequences/crf/CRFFeatureEncoderTest.java",
    "src/test/java/org/allenai/ml/sequences/crf/CRFIndexedExampleTest.java",
    "src/test/java/org/allenai/ml/sequences/crf/CRFLogLikelihoodObjectiveTest.java",
    "src/test/java/org/allenai/ml/sequences/crf/CRFTestUtils.java",
    "src/test/java/org/allenai/ml/sequences/crf/CRFWeightEncoderTest.java",
    "src/test/java/org/allenai/ml/sequences/crf/conll",
    "src/test/java/org/allenai/ml/sequences/crf/conll/ConllCRFEndToEndTest.java",
    "src/test/java/org/allenai/ml/sequences/crf/conll/ConllFormatTest.java",
    "src/test/java/org/allenai/ml/util",
    "src/test/java/org/allenai/ml/util/IOUtilsTest.java",
    "src/test/java/org/allenai/ml/util/IndexerTest.java",
    "src/test/resources",
    "src/test/resources/classification",
    "src/test/resources/classification/dvd_sentiment.data",
    "src/test/resources/crf",
    "src/test/resources/crf/template",
    "src/test/resources/crf/test.data",
    "src/test/resources/crf/train.data"
]
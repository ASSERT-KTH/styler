[
    ".gitignore",
    ".travis.yml",
    "LICENSE",
    "README.md",
    "pom.xml",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/kcthota",
    "src/main/java/com/kcthota/JSONQuery",
    "src/main/java/com/kcthota/JSONQuery/AbstractQuery.java",
    "src/main/java/com/kcthota/JSONQuery/Eval.java",
    "src/main/java/com/kcthota/JSONQuery/Query.java",
    "src/main/java/com/kcthota/JSONQuery/exceptions",
    "src/main/java/com/kcthota/JSONQuery/exceptions/MissingNodeException.java",
    "src/main/java/com/kcthota/JSONQuery/exceptions/UnsupportedExprException.java",
    "src/main/java/com/kcthota/JSONQuery/expressions",
    "src/main/java/com/kcthota/JSONQuery/expressions/AndExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/AppendToValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/CeilValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ComparisonExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ContainerComparisonExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/DoubleValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/EndsWithExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/EqExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/Expr.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/Expression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/FloorValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/GeExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/GtExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/IndexofValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/IntegerValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/IsNullExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/LeExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/LengthValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/LongValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/LtExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/NeExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/NotExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/OrExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/PrependToValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ReplaceValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/RoundValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/SimpleComparisonExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/StartsWithExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/StringValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/SubstringOfExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/SubstringValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ToLowerValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ToUpperValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/TrimValueExpression.java",
    "src/main/java/com/kcthota/JSONQuery/expressions/ValueExpression.java",
    "src/test",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/kcthota",
    "src/test/java/com/kcthota/query",
    "src/test/java/com/kcthota/query/EvalTest.java",
    "src/test/java/com/kcthota/query/FilterTest.java",
    "src/test/java/com/kcthota/query/QueryTest.java",
    "src/test/java/com/kcthota/query/ValueTest.java"
]
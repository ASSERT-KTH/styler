[
    ".classpath",
    ".gitignore",
    ".project",
    "samplecodes",
    "samplecodes/.classpath",
    "samplecodes/.gitignore",
    "samplecodes/.project",
    "samplecodes/.settings",
    "samplecodes/.settings/org.eclipse.core.resources.prefs",
    "samplecodes/.settings/org.eclipse.jdt.core.prefs",
    "samplecodes/.settings/org.eclipse.m2e.core.prefs",
    "samplecodes/CompetitiveProgramming",
    "samplecodes/CompetitiveProgramming/Books",
    "samplecodes/CompetitiveProgramming/Books/Algorithhms 4th Edition by Robert Sedgewick, Kevin Wayne.pdf",
    "samplecodes/CompetitiveProgramming/Books/Introduction to Algorithms - 3rd Edition.pdf",
    "samplecodes/CompetitiveProgramming/Books/Introduction to Algorithms by Udi Manber.pdf",
    "samplecodes/CompetitiveProgramming/Books/The Algorithm Design Manual.pdf",
    "samplecodes/log",
    "samplecodes/log/consolenew.log",
    "samplecodes/log/newlogs.log",
    "samplecodes/output.txt",
    "samplecodes/pom.xml",
    "samplecodes/src",
    "samplecodes/src/main",
    "samplecodes/src/main/java",
    "samplecodes/src/main/java/com",
    "samplecodes/src/main/java/com/bhavik",
    "samplecodes/src/main/java/com/bhavik/competitive",
    "samplecodes/src/main/java/com/bhavik/competitive/code_chef",
    "samplecodes/src/main/java/com/bhavik/competitive/code_chef/practice",
    "samplecodes/src/main/java/com/bhavik/competitive/code_chef/practice/CatsandDogs",
    "samplecodes/src/main/java/com/bhavik/competitive/code_chef/practice/CatsandDogs/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/bits",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/bits/CheckIfStringHasDuplicatesChars.java",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/bits/ConvertNumberToWords.java",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/linkedList",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/linkedList/InsertNode.java",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/linkedList/LinkedList.java",
    "samplecodes/src/main/java/com/bhavik/competitive/geeksforgeeks/linkedList/Node.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/StairCase",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/StairCase/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/SumThemAll",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/SumThemAll/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/ANDProduct",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/ANDProduct/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/FlippingBits",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/FlippingBits/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/MaximizingXOR",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/bitmanipulation/MaximizingXOR/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/dynamicprogramming",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/dynamicprogramming/TheMaximumSubarray",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/dynamicprogramming/TheMaximumSubarray/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/dynamicprogramming/candies",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/dynamicprogramming/candies/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/graphTheory",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/graphTheory/FloydCityofBlindingLights",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/graphTheory/FloydCityofBlindingLights/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/graphTheory/KthAncestor",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/graphTheory/KthAncestor/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/BiggerIsGreater",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/BiggerIsGreater/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/BreakingTheRecords",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/BreakingTheRecords/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/CeaserCipher",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/CeaserCipher/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/CutTheStick",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/CutTheStick/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/DivisibleSumPairs",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/DivisibleSumPairs/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/ExtraLongFactorials",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/ExtraLongFactorials/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/GradingStudents",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/GradingStudents/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/MatrixLayerRotation",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/MatrixLayerRotation/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/MatrixLayerRotation/Workings.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/MinMaxSum",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/MinMaxSum/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/NonDivisibleSubset",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/NonDivisibleSubset/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/RepeatedString",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/RepeatedString/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/SockMerchant",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/SockMerchant/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/TheGreedSearch",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/implementations/TheGreedSearch/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/ConnectedCellsinaGrid",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/ConnectedCellsinaGrid/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/CountLuck",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/CountLuck/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/CountLuck/Solution2.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/MaximumSubarraySum",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/MaximumSubarraySum/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/Pairs",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/Pairs/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/SherlockandArray",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/SherlockandArray/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/missingnumbers",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/search/missingnumbers/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/CorrectnessandtheLoopInvariant",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/CorrectnessandtheLoopInvariant/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/insertionsort1",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/insertionsort1/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/insertionsort2",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/insertionsort2/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/runningTimeOfAlgorithm",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/sorting/runningTimeOfAlgorithm/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/BeautifulBinaryString",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/BeautifulBinaryString/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/CaesarCipher",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/CaesarCipher/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/CommonChild",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/CommonChild/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/Gemstones",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/Gemstones/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/IceCreamParlor",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/IceCreamParlor/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/MarsExploration",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/MarsExploration/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/RichieRich",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/RichieRich/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/SuperReducedString",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/SuperReducedString/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/alternatingcharacters",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/alternatingcharacters/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/palindromindex",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/palindromindex/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/substring",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/algorithms/string/substring/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/angryprofessor",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/angryprofessor/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/bigintsum",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/bigintsum/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/contests",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/contests/WorldCodeSprint8",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/contests/WorldCodeSprint8/SnakeCase",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/contests/WorldCodeSprint8/SnakeCase/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/ATaleOfTwoStacks",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/ATaleOfTwoStacks/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/BalancedBrackets",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/BalancedBrackets/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/HashTableRansomNote",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/HashTableRansomNote/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/IsThisABinarySearchTree",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/IsThisABinarySearchTree/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/SortingComparator",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/SortingComparator/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/detectCycleLinkedList",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/crackingCodingInterview/detectCycleLinkedList/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/datastructures",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/datastructures/arrays",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/datastructures/arrays/arrayDS",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/datastructures/arrays/arrayDS/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/fibonaccimodified",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/fibonaccimodified/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/finddivisiblenumber",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/finddivisiblenumber/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/advanced",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/advanced/varargs",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/advanced/varargs/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaBigDecimal",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaBigDecimal/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaBigInteger",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaBigInteger/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaPrimalityTest",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/java/bignumbers/JavaPrimalityTest/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/maxbinaryonesequence",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/maxbinaryonesequence/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/panagramstring",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/panagramstring/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day11HuglasNumber",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day11HuglasNumber/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day2",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day2/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day3",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/thirtydays/day3/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview/TimeComplexityPrimality",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview/TimeComplexityPrimality/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview/arrays",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview/arrays/leftRotation",
    "samplecodes/src/main/java/com/bhavik/competitive/hacker_rank/tutorials/crackingTheCodingInterview/arrays/leftRotation/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/leetcod",
    "samplecodes/src/main/java/com/bhavik/competitive/leetcod/BasicCalculator",
    "samplecodes/src/main/java/com/bhavik/competitive/leetcod/BasicCalculator/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/misc",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/EquationCalculator.java",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/Main.java",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/isPrime",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/isPrime/Main.java",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/reductionCost",
    "samplecodes/src/main/java/com/bhavik/competitive/misc/reductionCost/Main.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/elementindex",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/elementindex/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/getdomainname",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/getdomainname/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/observer",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/observer/Test.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/App.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/LinkList.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/LonelyInteger.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/Node.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/getcomments",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/getcomments/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/sparsearray",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/sparsearray/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/stack",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/stack/matchingparenthesis",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/stack/matchingparenthesis/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/stack/maximumelement",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/samplecodes/stack/maximumelement/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/tree",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/tree/preorder",
    "samplecodes/src/main/java/com/bhavik/competitive/projects/tree/preorder/Solution.java",
    "samplecodes/src/main/java/com/bhavik/competitive/tech_gig",
    "samplecodes/src/main/java/com/bhavik/competitive/tech_gig/combat",
    "samplecodes/src/main/java/com/bhavik/competitive/tech_gig/combat/MaxContiguousSubArray",
    "samplecodes/src/main/java/com/bhavik/competitive/tech_gig/combat/MaxContiguousSubArray/CandidateCode.java",
    "samplecodes/src/main/java/com/bhavik/hashing",
    "samplecodes/src/main/java/com/bhavik/hashing/cookoo",
    "samplecodes/src/main/java/com/bhavik/hashing/cookoo/CuckooHashTable.java",
    "samplecodes/src/main/java/com/bhavik/misc",
    "samplecodes/src/main/java/com/bhavik/misc/hashing",
    "samplecodes/src/main/java/com/bhavik/misc/hashing/cuckoohashmap",
    "samplecodes/src/main/java/com/bhavik/misc/hashing/cuckoohashmap/CuckooHashMap.java",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2/MyApp.java",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2/jdbc",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2/jdbc/HelloWorld.java",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2/jdbc/HibernateUtil.java",
    "samplecodes/src/main/java/com/bhavik/misc/log4j2/jdbc/JDBCAppendersLog4j2.java",
    "samplecodes/src/main/java/com/bhavik/misc/tree",
    "samplecodes/src/main/java/com/bhavik/misc/tree/traversal",
    "samplecodes/src/main/java/com/bhavik/misc/tree/traversal/PostOrderIterative.java",
    "samplecodes/src/main/java/com/bhavik/misc/tree/traversal/TreeNode.java",
    "samplecodes/src/main/java/com/bhavik/samples",
    "samplecodes/src/main/java/com/bhavik/samples/nio1",
    "samplecodes/src/main/java/com/bhavik/samples/nio1/server",
    "samplecodes/src/main/java/com/bhavik/samples/nio1/server/ServerManager.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/client",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/client/AsyncEchoClient.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/client/CounterClientCLI.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/server",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/server/AsyncEchoServer.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/server/CounterServerCLI.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/server/ServerManager.java",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/util",
    "samplecodes/src/main/java/com/bhavik/socketcommunication/nio2/util/NamedThreadFactory.java",
    "samplecodes/src/main/java/temp",
    "samplecodes/src/main/java/temp/TempClass.java",
    "samplecodes/src/main/resources",
    "samplecodes/src/main/resources/hibernate.properties",
    "samplecodes/src/main/resources/jdbclog4j2.xml",
    "samplecodes/src/main/resources/log4j2forMyApp1.xml",
    "samplecodes/src/main/resources/newlog4j2.xml",
    "samplecodes/src/test",
    "samplecodes/src/test/java",
    "samplecodes/src/test/java/com",
    "samplecodes/src/test/java/com/elitecore",
    "samplecodes/src/test/java/com/elitecore/src",
    "samplecodes/src/test/java/com/elitecore/src/projects",
    "samplecodes/src/test/java/com/elitecore/src/projects/samplecodes",
    "samplecodes/src/test/java/com/elitecore/src/projects/samplecodes/AppTest.java",
    "socketcommunication",
    "socketcommunication/.classpath",
    "socketcommunication/.gitignore",
    "socketcommunication/.project",
    "socketcommunication/.settings",
    "socketcommunication/.settings/org.eclipse.core.resources.prefs",
    "socketcommunication/.settings/org.eclipse.jdt.core.prefs",
    "socketcommunication/.settings/org.eclipse.m2e.core.prefs",
    "socketcommunication/pom.xml",
    "socketcommunication/src",
    "socketcommunication/src/main",
    "socketcommunication/src/main/java",
    "socketcommunication/src/main/java/cyberoam",
    "socketcommunication/src/main/java/cyberoam/communication",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/base",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/base/Tblnodeproperties.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/base/Tblservernodes.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/processor",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/processor/ISocketDataProcessor.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/ClientDataQueueManager.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/ClientReceiverSocket.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/ClientReceiverSocketObserver.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/SocketCommRejectionHandler.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/SocketCommunicationShutdownHook.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/SocketDataProcessor.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/server/SocketDataProcessorPool.java",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/util",
    "socketcommunication/src/main/java/cyberoam/communication/socketcommunication/util/SocketProperties.java",
    "socketcommunication/src/test",
    "socketcommunication/src/test/java",
    "socketcommunication/src/test/java/cyberoam",
    "socketcommunication/src/test/java/cyberoam/communication",
    "socketcommunication/src/test/java/cyberoam/communication/socketcommunication",
    "socketcommunication/src/test/java/cyberoam/communication/socketcommunication/AppTest.java",
    "usecases",
    "usecases/.classpath",
    "usecases/.gitignore",
    "usecases/.project",
    "usecases/.settings",
    "usecases/.settings/org.eclipse.core.resources.prefs",
    "usecases/.settings/org.eclipse.jdt.core.prefs",
    "usecases/.settings/org.eclipse.m2e.core.prefs",
    "usecases/pom.xml",
    "usecases/src",
    "usecases/src/main",
    "usecases/src/main/java",
    "usecases/src/main/java/com",
    "usecases/src/main/java/com/sapient",
    "usecases/src/main/java/com/sapient/sampleCoding",
    "usecases/src/main/java/com/sapient/sampleCoding/CloneConstructorCall.java",
    "usecases/src/main/java/com/sapient/sampleCoding/MultiplyMultiThreaded.java",
    "usecases/src/main/java/com/sapient/usecases",
    "usecases/src/main/java/com/sapient/usecases/AbstractClass.java",
    "usecases/src/main/java/com/sapient/usecases/App.java",
    "usecases/src/main/java/com/sapient/usecases/uc10_CustomConcurrentHashMap",
    "usecases/src/main/java/com/sapient/usecases/uc10_CustomConcurrentHashMap/CustomConcurrentHashMap.java",
    "usecases/src/main/java/com/sapient/usecases/uc11_ChessGame",
    "usecases/src/main/java/com/sapient/usecases/uc11_ChessGame/Chess_Game_Design.jpg",
    "usecases/src/main/java/com/sapient/usecases/uc12_StudentManagementSystem",
    "usecases/src/main/java/com/sapient/usecases/uc12_StudentManagementSystem/StudentManagementSystem.pdf",
    "usecases/src/main/java/com/sapient/usecases/uc13_SortMapByValues",
    "usecases/src/main/java/com/sapient/usecases/uc13_SortMapByValues/SortMapByValues.java",
    "usecases/src/main/java/com/sapient/usecases/uc14",
    "usecases/src/main/java/com/sapient/usecases/uc14/Solution.java",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment/CallCenter.java",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment/ExecutiveFresher.java",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment/ExecutiveLead.java",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment/IExecutive.java",
    "usecases/src/main/java/com/sapient/usecases/uc15_CallCentreDevelopment/ProjectManager.java",
    "usecases/src/main/java/com/sapient/usecases/uc1_ExternalSort",
    "usecases/src/main/java/com/sapient/usecases/uc1_ExternalSort/ExternalSortImpl.java",
    "usecases/src/main/java/com/sapient/usecases/uc2_3ProducerConsumer",
    "usecases/src/main/java/com/sapient/usecases/uc2_3ProducerConsumer/MultipleProducerConsumer.java",
    "usecases/src/main/java/com/sapient/usecases/uc4CustomThreadPool",
    "usecases/src/main/java/com/sapient/usecases/uc4CustomThreadPool/CustomThreadPool.java",
    "usecases/src/main/java/com/sapient/usecases/uc4CustomThreadPool/ThreadPool.java",
    "usecases/src/main/java/com/sapient/usecases/uc5CyclicBarrier",
    "usecases/src/main/java/com/sapient/usecases/uc5CyclicBarrier/Solution1.java",
    "usecases/src/main/java/com/sapient/usecases/uc5CyclicBarrier/Solution2.java",
    "usecases/src/main/java/com/sapient/usecases/uc6MergeSort",
    "usecases/src/main/java/com/sapient/usecases/uc6MergeSort/MergeSortImpl.java",
    "usecases/src/main/java/com/sapient/usecases/uc7ConcurrentCounter",
    "usecases/src/main/java/com/sapient/usecases/uc7ConcurrentCounter/ConcurrentCounter.java",
    "usecases/src/main/java/com/sapient/usecases/uc7ConcurrentCounter/Solution.java",
    "usecases/src/main/java/com/sapient/usecases/uc8_GenericObjectPool",
    "usecases/src/main/java/com/sapient/usecases/uc8_GenericObjectPool/GenericObjectPool.java",
    "usecases/src/main/java/com/sapient/usecases/uc8_GenericObjectPool/InvalidPoolSizeException.java",
    "usecases/src/main/java/com/sapient/usecases/uc9_MultiThreadDownloadManager",
    "usecases/src/main/java/com/sapient/usecases/uc9_MultiThreadDownloadManager/DownloadManager.java",
    "usecases/src/test",
    "usecases/src/test/java",
    "usecases/src/test/java/com",
    "usecases/src/test/java/com/sapient",
    "usecases/src/test/java/com/sapient/usecases",
    "usecases/src/test/java/com/sapient/usecases/AppTest.java",
    "usecases/src/test/java/com/sapient/usecases/uc14",
    "usecases/src/test/java/com/sapient/usecases/uc14/SolutionTest.java",
    "usecases/src/test/java/com/sapient/usecases/uc4CustomThreadPool",
    "usecases/src/test/java/com/sapient/usecases/uc4CustomThreadPool/CustomThreadPoolTest.java",
    "usecases/src/test/java/com/sapient/usecases/uc6MergeSortTest",
    "usecases/src/test/java/com/sapient/usecases/uc6MergeSortTest/MergeSortTest.java"
]
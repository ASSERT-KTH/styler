[
    ".gitignore",
    ".travis.yml",
    "README.md",
    "algorithms",
    "algorithms/java",
    "algorithms/java/leetcode.iml",
    "algorithms/java/pom.xml",
    "algorithms/java/src",
    "algorithms/java/src/main",
    "algorithms/java/src/main/java",
    "algorithms/java/src/main/java/com",
    "algorithms/java/src/main/java/com/duo",
    "algorithms/java/src/main/java/com/duo/leetcode",
    "algorithms/java/src/main/java/com/duo/leetcode/Algorithm.java",
    "algorithms/java/src/main/java/com/duo/leetcode/Main.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0000",
    "algorithms/java/src/main/java/com/duo/leetcode/_0000/_82",
    "algorithms/java/src/main/java/com/duo/leetcode/_0000/_82/ListDeleteDuplicate.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0000/_82/ListNode.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0100",
    "algorithms/java/src/main/java/com/duo/leetcode/_0100/_146",
    "algorithms/java/src/main/java/com/duo/leetcode/_0100/_146/LRUCache.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0100/_169",
    "algorithms/java/src/main/java/com/duo/leetcode/_0100/_169/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0200",
    "algorithms/java/src/main/java/com/duo/leetcode/_0200/_240",
    "algorithms/java/src/main/java/com/duo/leetcode/_0200/_240/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0200/_268",
    "algorithms/java/src/main/java/com/duo/leetcode/_0200/_268/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0300",
    "algorithms/java/src/main/java/com/duo/leetcode/_0300/_394",
    "algorithms/java/src/main/java/com/duo/leetcode/_0300/_394/DecodeString.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0400",
    "algorithms/java/src/main/java/com/duo/leetcode/_0400/_448",
    "algorithms/java/src/main/java/com/duo/leetcode/_0400/_448/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0500",
    "algorithms/java/src/main/java/com/duo/leetcode/_0500/_520",
    "algorithms/java/src/main/java/com/duo/leetcode/_0500/_520/DetectCapital.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0700",
    "algorithms/java/src/main/java/com/duo/leetcode/_0700/_766",
    "algorithms/java/src/main/java/com/duo/leetcode/_0700/_766/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800/_821",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800/_821/ShortestToChar.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800/_872",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800/_872/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0800/_872/TreeNode.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0900",
    "algorithms/java/src/main/java/com/duo/leetcode/_0900/_915",
    "algorithms/java/src/main/java/com/duo/leetcode/_0900/_915/PartitionDisjoint.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_0900/_945",
    "algorithms/java/src/main/java/com/duo/leetcode/_0900/_945/Solution.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_1000",
    "algorithms/java/src/main/java/com/duo/leetcode/_1000/_1043",
    "algorithms/java/src/main/java/com/duo/leetcode/_1000/_1043/MaxPartitioning.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300/_1352",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300/_1352/ProductOfNumbers.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300/_1352/ProductOfNumbers1.java",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300/_1397",
    "algorithms/java/src/main/java/com/duo/leetcode/_1300/_1397/FindGoodStrings.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/BackspaceCompare.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/CountElements.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/DiameterOfBinaryTree.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/FindMaxLength.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/GroupAnagrams.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/HappyNumber.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/LastStoneWeight.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MaxProfit.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MaxSubArray.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MiddleNode.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MinPathSum.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MinStack.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/MoveZeroes.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/NumIslands.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/Parenthesis.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/ProductExceptSelf.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/RotatedSorted.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/SingleNumber.java",
    "algorithms/java/src/main/java/com/duo/leetcode/challenge/StringShift.java",
    "algorithms/java/src/main/java/com/duo/leetcode/utils",
    "algorithms/java/src/main/java/com/duo/leetcode/utils/Tools.java",
    "algorithms/java/src/test",
    "algorithms/java/src/test/java",
    "algorithms/java/src/test/java/com",
    "algorithms/java/src/test/java/com/duo",
    "algorithms/java/src/test/java/com/duo/leetcode",
    "algorithms/java/src/test/java/com/duo/leetcode/TestDetectCapital.java",
    "algorithms/java/src/test/java/com/duo/leetcode/TestLRU.java",
    "algorithms/java/src/test/java/com/duo/leetcode/TestMaxPartitioning.java",
    "algorithms/java/src/test/java/com/duo/leetcode/TestPartitionDisjoint.java",
    "algorithms/java/src/test/java/com/duo/leetcode/TestShortestToChar.java",
    "algorithms/php",
    "algorithms/php/addTwoNumbers.php",
    "algorithms/php/containerWithMostWater.php",
    "algorithms/php/fourSum.php",
    "algorithms/php/integerToRoman.php",
    "algorithms/php/lengthOfLongestSubstring.php",
    "algorithms/php/longestCommonPrefix.php",
    "algorithms/php/longestPalindrome.php",
    "algorithms/php/medianOfTwoSortedArrays.php",
    "algorithms/php/palindromeNumber.php",
    "algorithms/php/regularExpressionMatching.php",
    "algorithms/php/removeNthFromEnd.php",
    "algorithms/php/reverseInteger.php",
    "algorithms/php/romanToInteger.php",
    "algorithms/php/stringToInteger.php",
    "algorithms/php/threeSum.php",
    "algorithms/php/threeSumClosest.php",
    "algorithms/php/twoSum.php",
    "algorithms/php/validParentheses.php",
    "algorithms/php/zigZagConversion.php",
    "algorithms/python",
    "algorithms/python/README.md",
    "algorithms/python/addStrings.py",
    "algorithms/python/fizzBuzz.py",
    "algorithms/python/longestPalindrome.py",
    "algorithms/python/myPow.py",
    "algorithms/python/removeNthFromEnd.py",
    "algorithms/rust",
    "algorithms/rust/Cargo.lock",
    "algorithms/rust/Cargo.toml",
    "algorithms/rust/src",
    "algorithms/rust/src/corp_flight_bookings.rs",
    "algorithms/rust/src/defang_i_paddr.rs",
    "algorithms/rust/src/distribute_candies.rs",
    "algorithms/rust/src/find_length_of_lcis.rs",
    "algorithms/rust/src/main.rs",
    "algorithms/rust/src/parse_bool_expr.rs",
    "algorithms/rust/src/range_bitwise_and.rs",
    "algorithms/rust/src/reverse_integer.rs",
    "algorithms/rust/src/rotate_string.rs",
    "algorithms/rust/src/two_sum.rs",
    "database",
    "database/trips_users.sql",
    "shell",
    "shell/file.txt",
    "shell/tenth_line.bash",
    "shell/transpose_file.bash",
    "shell/valid-phone-numbers.bash",
    "shell/word.txt",
    "shell/word_frequency.bash"
]
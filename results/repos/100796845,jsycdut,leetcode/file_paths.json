[
    ".gitattributes",
    ".gitignore",
    "LICENSE",
    "README.md",
    "practice",
    "practice/for-the-offer",
    "practice/for-the-offer/01-find-specific-number-in-two-dimension-array.java",
    "practice/for-the-offer/02-replace-space-with-%20.java",
    "practice/for-the-offer/03-reverse-list.java",
    "practice/for-the-offer/07-fibonacci.java",
    "practice/for-the-offer/08-frog-and-stairs.java",
    "practice/for-the-offer/09-frog-and-stairs-2.java",
    "practice/for-the-offer/22-stack-pop-trace.java",
    "practice/for-the-offer/29.sprialOrder.java",
    "practice/for-the-offer/42-reverse-string.java",
    "practice/for-the-offer/README.md",
    "practice/leetcode",
    "practice/leetcode/1-100",
    "practice/leetcode/1-100/1.two-sum.124853437.ac.java",
    "practice/leetcode/1-100/10.regular-expression-matching.234683779.ac.java",
    "practice/leetcode/1-100/100.same-tree.227256471.ac.java",
    "practice/leetcode/1-100/11.container-with-most-water-brute-force.java",
    "practice/leetcode/1-100/11.container-with-most-water.java",
    "practice/leetcode/1-100/12.integer-to-roman.java",
    "practice/leetcode/1-100/13.roman-to-integer.212511167.ac.java",
    "practice/leetcode/1-100/14.longest-common-prefix.212687600.ac.java",
    "practice/leetcode/1-100/15.3sum.213000752.ac.java",
    "practice/leetcode/1-100/15.3sum.java",
    "practice/leetcode/1-100/16.3sum-closest.213243066.ac.java",
    "practice/leetcode/1-100/17.letter-combinations-of-a-phone-number.213666072.ac.java",
    "practice/leetcode/1-100/18.4sum.214731433.ac.java",
    "practice/leetcode/1-100/19.remove-nth-node-from-end-of-list.228772816.ac.java",
    "practice/leetcode/1-100/2.add-two-numbers.118865367.ac.java",
    "practice/leetcode/1-100/20.valid-parentheses.210964584.ac.java",
    "practice/leetcode/1-100/21.merge-two-sorted-lists-by-loop.java",
    "practice/leetcode/1-100/21.merge-two-sorted-lists-by-recursion.java",
    "practice/leetcode/1-100/22.generate-parentheses.211280024.ac.java",
    "practice/leetcode/1-100/23.merge-k-sorted-lists.215660060.ac.java",
    "practice/leetcode/1-100/24.swap-nodes-in-pairs.210729621.ac.java",
    "practice/leetcode/1-100/26.remove-duplicates-from-sorted-array.216414477.ac.java",
    "practice/leetcode/1-100/26.remove-duplicates-from-sorted-array.216417636.ac.java",
    "practice/leetcode/1-100/26.remove-duplicates-from-sorted-array.216452712.ac.java",
    "practice/leetcode/1-100/26.remove-duplicates-from-sorted-array.stupid-solution.ac.java",
    "practice/leetcode/1-100/27.remove-element.216508209.ac.java",
    "practice/leetcode/1-100/28.implement-strstr-using-java-api.ac.java",
    "practice/leetcode/1-100/29.divide-two-integers.219624223.ac.java",
    "practice/leetcode/1-100/3.longest-substring-without-repeating-characters.125978709.ac.java",
    "practice/leetcode/1-100/3.longest-substring-without-repeating-characters.125983920.ac.java",
    "practice/leetcode/1-100/3.longest-substring-without-repeating-characters.125987667.ac.java",
    "practice/leetcode/1-100/30.substring-with-concatenation-of-all-words.219689449.ac.java",
    "practice/leetcode/1-100/31.next-permutation.225624377.ac.java",
    "practice/leetcode/1-100/33.search-in-rotated-sorted-array.227552693.ac.java",
    "practice/leetcode/1-100/33.search-in-rotated-sorted-array.java",
    "practice/leetcode/1-100/34.find-first-and-last-position-of-element-in-sorted-array.227568936.ac.java",
    "practice/leetcode/1-100/35.search-insert-position.220940985.ac.java",
    "practice/leetcode/1-100/36.valid-sudoku.233362543.ac.java",
    "practice/leetcode/1-100/37.sudoku-solver.231498727.ac.java",
    "practice/leetcode/1-100/38.count-and-say.221147059.ac.java",
    "practice/leetcode/1-100/39.combination-sum.249556926.ac.java",
    "practice/leetcode/1-100/4.median-of-two-sorted-arrays.183162656.ac.java",
    "practice/leetcode/1-100/4.median-of-two-sorted-arrays.java",
    "practice/leetcode/1-100/40.combination-sum-ii.java",
    "practice/leetcode/1-100/41.first-missing-positive.ac-i.java",
    "practice/leetcode/1-100/46.permutations.229025833.ac.java",
    "practice/leetcode/1-100/47.permutations-ii.java",
    "practice/leetcode/1-100/48.rotate-image.219192760.ac.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring-not-ac-brute-force.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring.125105918.ac.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring.125112888.ac.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring.125254793.ac.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring.126009571.ac.java",
    "practice/leetcode/1-100/5.longest-palindromic-substring.126016586.ac.java",
    "practice/leetcode/1-100/50.powx-n.224685929.ac.java",
    "practice/leetcode/1-100/51.n-queens.229960748.ac.java",
    "practice/leetcode/1-100/53.maximum-subarray.127897560.ac.java",
    "practice/leetcode/1-100/54.spiral-matrix.230579610.ac.java",
    "practice/leetcode/1-100/55.jump-game.234881147.ac.java",
    "practice/leetcode/1-100/56.merge-intervals.231692456.ac.java",
    "practice/leetcode/1-100/58.length-of-last-word.226610039.ac.java",
    "practice/leetcode/1-100/59.spiral-matrix-ii.230585638.ac.java",
    "practice/leetcode/1-100/6.zigzag-conversion.126446975.ac.java",
    "practice/leetcode/1-100/6.zigzag-conversion.126678023.ac.java",
    "practice/leetcode/1-100/6.zigzag-conversion.png",
    "practice/leetcode/1-100/61.rotate-list.234082752.ac.java",
    "practice/leetcode/1-100/62.unique-paths.279817591.ac.java",
    "practice/leetcode/1-100/64.minimum-path-sum.251785540.ac.java",
    "practice/leetcode/1-100/66.plus-one.219756569.ac.java",
    "practice/leetcode/1-100/67.add-binary.221154932.ac.java",
    "practice/leetcode/1-100/69.sqrtx.226674775.ac.java",
    "practice/leetcode/1-100/7.reverse-integer.124613741.ac.java",
    "practice/leetcode/1-100/70.climbing-stairs.224138622.ac.java",
    "practice/leetcode/1-100/74.search-a-2d-matrix.java",
    "practice/leetcode/1-100/78.subset.java",
    "practice/leetcode/1-100/8.string-to-integer-atoi.125091517.ac.java",
    "practice/leetcode/1-100/80.remove-duplicates-from-sorted-array-ii.java",
    "practice/leetcode/1-100/81.search-in-rotated-sorted-array-ii.java",
    "practice/leetcode/1-100/83.remove-duplicates-from-sorted-list.226702718.ac.java",
    "practice/leetcode/1-100/88.merge-sorted-array.226816019.ac.java",
    "practice/leetcode/1-100/89.gray-code.281578471.ac.java",
    "practice/leetcode/1-100/9.palindrome-number.231604076.ac.java",
    "practice/leetcode/1-100/90.subsets-ii.java",
    "practice/leetcode/1-100/92.reverse-linked-list-ii.211462379.ac.java",
    "practice/leetcode/1-100/93.restore-ip-addresses.216217062.ac.java",
    "practice/leetcode/1-100/94.binary-tree-inorder-traversal.216193180.ac.java",
    "practice/leetcode/1-100/95.unique-binary-search-trees-ii.java",
    "practice/leetcode/1001-1100",
    "practice/leetcode/1001-1100/1006.clumsy-factorial.java",
    "practice/leetcode/1001-1100/1018.binary-prefix-divisible-by-5.java",
    "practice/leetcode/1001-1100/1047.remove-all-adjacent-duplicates-in-string.java",
    "practice/leetcode/1001-1100/1071.greatest-common-divisor-of-strings.279168972.ac.java",
    "practice/leetcode/101-200",
    "practice/leetcode/101-200/101.symmetric-tree.258258171.stupic.ac.java",
    "practice/leetcode/101-200/102.binary-tree-level-order-traversal.257962353.ac.java",
    "practice/leetcode/101-200/102.binary-tree-level-order-traversal.258014959.ac.java",
    "practice/leetcode/101-200/104.maximum-depth-of-binary-tree.java",
    "practice/leetcode/101-200/105.evaluate-reverse-polish-notation.java",
    "practice/leetcode/101-200/108.convert-sorted-array-to-binary-search-tree.java",
    "practice/leetcode/101-200/109.convert-sorted-list-to-binary-search-tree.java",
    "practice/leetcode/101-200/110.balanced-binary-tree.java",
    "practice/leetcode/101-200/111.minimum-depth-of-binary-tree.java",
    "practice/leetcode/101-200/114.flatten-binary-tree-to-linked-list.stack-dfs.java",
    "practice/leetcode/101-200/114.flatten-binary-tree-to-linked-list.stack-recur-dfs.java",
    "practice/leetcode/101-200/117.populating-next-right-pointers-in-each-node-ii.java",
    "practice/leetcode/101-200/121.best-time-to-buy-and-sell-stock.127484778.ac.java",
    "practice/leetcode/101-200/121.best-time-to-buy-and-sell-stock.128861279.ac.java",
    "practice/leetcode/101-200/122.best-time-to-buy-and-sell-stock-ii.128394349.ac.java",
    "practice/leetcode/101-200/123.best-time-to-buy-and-sell-stock-iii.128991711.ac.java",
    "practice/leetcode/101-200/125.valid-palindrome.231609161.ac.java",
    "practice/leetcode/101-200/136.single-number-arithmetic-solution.java",
    "practice/leetcode/101-200/136.single-number-hashmap-solution.ac.java",
    "practice/leetcode/101-200/136.single-number.219177080.ac.java",
    "practice/leetcode/101-200/137.single-number-ii.230286578.ac.java",
    "practice/leetcode/101-200/141.linked-list-cycle.228758813.ac.java",
    "practice/leetcode/101-200/142.linked-list-cycle-ii.228831389.ac.java",
    "practice/leetcode/101-200/144.binary-tree-preorder-traversal-recursively.ac.java",
    "practice/leetcode/101-200/145.binary-tree-postorder-traversal.216194041.ac.java",
    "practice/leetcode/101-200/146.lru-cache.java",
    "practice/leetcode/101-200/151.reverse-words-in-a-string.228839608.ac.java",
    "practice/leetcode/101-200/152.maximum-product-subarray.233471376.ac.java",
    "practice/leetcode/101-200/153.find-minimum-in-rotated-sorted-array.java",
    "practice/leetcode/101-200/154.find-minimum-in-rotated-sorted-array-ii.java",
    "practice/leetcode/101-200/155.min-stack.224173587.ac.java",
    "practice/leetcode/101-200/160.intersection-of-two-linked-lists.278727904.ac.java",
    "practice/leetcode/101-200/167.two-sum-ii-input-array-is-sorted.java",
    "practice/leetcode/101-200/169.majority-element.java",
    "practice/leetcode/101-200/172.factorial-trailing-zeroes.227393375.ac.java",
    "practice/leetcode/101-200/189.rotate-array.272868405.ac.java",
    "practice/leetcode/101-200/190.reverse-bits.273059220.ac.java",
    "practice/leetcode/101-200/191.number-of-1-bits.227061320.ac.java",
    "practice/leetcode/101-200/192.word-frequency.227578486.ac.sh",
    "practice/leetcode/101-200/197.rising-temperature.234830115.ac.sql",
    "practice/leetcode/101-200/198.house-robber.java",
    "practice/leetcode/1201-1300",
    "practice/leetcode/1201-1300/1201.ugly-number-iii.java",
    "practice/leetcode/1201-1300/1288.remove-covered-intervals.java",
    "practice/leetcode/201-300",
    "practice/leetcode/201-300/204.count-primes.268306329.ac.java",
    "practice/leetcode/201-300/206.reverse-linked-list.232607449.ac.java",
    "practice/leetcode/201-300/208.trie-tree.java",
    "practice/leetcode/201-300/213.house-robber-ii.java",
    "practice/leetcode/201-300/217.contains-duplicate.230061753.ac.java",
    "practice/leetcode/201-300/219.contains-duplicate-ii.224388184.ac.java",
    "practice/leetcode/201-300/222.count-complete-tree-nodes.java",
    "practice/leetcode/201-300/226.invert-binary-tree.java",
    "practice/leetcode/201-300/230.kth-smallest-element-in-a-bst.java",
    "practice/leetcode/201-300/231.power-of-two.227918760.ac.java",
    "practice/leetcode/201-300/234.palindrome-linked-list.231656163.ac.java",
    "practice/leetcode/201-300/235.lowest-common-ancestor-of-a-binary-search-tree.java",
    "practice/leetcode/201-300/236.lowest-common-ancestor-of-a-binary-tree.java",
    "practice/leetcode/201-300/237.delete-node-in-a-linked-list.228747467.ac.java",
    "practice/leetcode/201-300/239.sliding-window-maximum.224158704.ac.java",
    "practice/leetcode/201-300/260.single-number-iii.234613024.ac.java",
    "practice/leetcode/201-300/263.ugly-number.280299424.ac.java",
    "practice/leetcode/201-300/264.ugly-number-ii.280357200.ac.java",
    "practice/leetcode/201-300/268.missing-number.230069683.ac.java",
    "practice/leetcode/201-300/283.move-zeroes.281753385.ac.java",
    "practice/leetcode/201-300/292.nim-game.244544151.ac.java",
    "practice/leetcode/201-300/300.longest-increasing-subsequence.127469332.ac.java",
    "practice/leetcode/301-400",
    "practice/leetcode/301-400/303.range-sum-query-immutable.java",
    "practice/leetcode/301-400/304.range-sum-query-2d-immutable.java",
    "practice/leetcode/301-400/312-burst-balloons.java",
    "practice/leetcode/301-400/326.power-of-three.225596392.ac.java",
    "practice/leetcode/301-400/337.house-robber-iii.java",
    "practice/leetcode/301-400/338.counting-bits.227166452.ac.java",
    "practice/leetcode/301-400/342.power-of-four.227933374.ac.java",
    "practice/leetcode/301-400/344.reverse-string.219974495.ac.java",
    "practice/leetcode/301-400/345.reverse-vowels-of-a-string.231612466.ac.java",
    "practice/leetcode/301-400/347.top-k-frequent-elements.234412000.ac.java",
    "practice/leetcode/301-400/365.water-and-jug-problem.271872706.ac.java",
    "practice/leetcode/301-400/371.sum-of-two-integers.230745800.ac.java",
    "practice/leetcode/401-500",
    "practice/leetcode/401-500/401.binary-watch-brute-force-dfs.ac.java",
    "practice/leetcode/401-500/401.binary-watch-enumerate-best-solution.ac.java",
    "practice/leetcode/401-500/404.sum-of-left-leaves.java",
    "practice/leetcode/401-500/410.split-array-largest-sum.java",
    "practice/leetcode/401-500/415.add-strings.230741937.ac.java",
    "practice/leetcode/401-500/426.convert-binary-search-tree-to-sorted-doubly-linked-list.java",
    "practice/leetcode/401-500/429.n-ary-tree-level-order-traversal.java",
    "practice/leetcode/401-500/445.add-two-numbers-ii.230509072.ac.java",
    "practice/leetcode/401-500/454.4sum-ii.215230455.ac.java",
    "practice/leetcode/401-500/461.hamming-distance.273051597.ac.java",
    "practice/leetcode/501-600",
    "practice/leetcode/501-600/501.find-mode-in-binary-search-tree.java",
    "practice/leetcode/501-600/509.fibonacci-number.232613199.ac.java",
    "practice/leetcode/501-600/538.convert-bst-to-greater-tree.java",
    "practice/leetcode/501-600/540.single-element-in-a-sorted-array.230145879.ac.java",
    "practice/leetcode/501-600/541.reverse-string-ii.228892821.ac.java",
    "practice/leetcode/501-600/557.reverse-words-in-a-string-iii.228846817.ac.java",
    "practice/leetcode/501-600/575.distribute-candies.227501386.ac.java",
    "practice/leetcode/501-600/589.n-ary-tree-preorder-traversal-iteratively.java",
    "practice/leetcode/501-600/590.n-ary-tree-postorder-traversal-recursively.java",
    "practice/leetcode/601-700",
    "practice/leetcode/601-700/611.valid-triangle-number.223412873.ac.java",
    "practice/leetcode/601-700/617.merge-two-binary-trees.234863794.ac.java",
    "practice/leetcode/601-700/627.swap-salary.234828692.ac.sql",
    "practice/leetcode/601-700/654.maximum-binary-tree.258019948.ac.java",
    "practice/leetcode/601-700/657.robot-return-to-origin.java",
    "practice/leetcode/601-700/693.binary-number-with-alternating-bits-another.java",
    "practice/leetcode/701-800",
    "practice/leetcode/701-800/706.design-hashmap.java",
    "practice/leetcode/701-800/739.daily-temperatures.234851551.ac.java",
    "practice/leetcode/801-900",
    "practice/leetcode/801-900/812.largest-triangle-area.271541074.ac.java",
    "practice/leetcode/801-900/861.score-after-flipping-matrix.java",
    "practice/leetcode/901-1000",
    "practice/leetcode/901-1000/914.x-of-a-kind-in-a-deck-of-cards.271913475.ac.java",
    "practice/leetcode/901-1000/917.reverse-only-letters.228849699.ac.java",
    "practice/leetcode/901-1000/933.number-of-recent-calls.java",
    "practice/leetcode/901-1000/946.validate-stack-sequences.257565840.ac.java",
    "practice/leetcode/901-1000/989.add-to-array-form-of-integer.230790320.ac.java",
    "practice/leetcode/weekly-contest",
    "practice/leetcode/weekly-contest/199",
    "practice/leetcode/weekly-contest/199/5472.shuffle-string.java",
    "practice/leetcode/weekly-contest/199/5473.bulb-switcher-iv.java",
    "practice/leetcode/weekly-contest/199/5474.number-of-good-leaf-nodes-pairs.java",
    "practice/lintcode",
    "practice/lintcode/600-699",
    "practice/lintcode/600-699/.690.factorial.java.swp",
    "practice/lintcode/600-699/690.factorial.java",
    "practice/lintcode/600-699/690.\u5927\u6570\u9636\u4e58.png",
    "practice/lintcode/Facebook",
    "practice/lintcode/Facebook/CalculateBiggest.java",
    "practice/lintcode/Facebook/reverse_linked_list.cc",
    "practice/lintcode/LCS",
    "practice/lintcode/LCS/77.lcs.java",
    "practice/lintcode/LCS/LCS.md",
    "practice/lintcode/LCS/LCS.png",
    "practice/lintcode/intresting",
    "practice/lintcode/intresting/XJB.java",
    "theory",
    "theory/BFPRT",
    "theory/BFPRT/BFPRT.java",
    "theory/big-data",
    "theory/big-data/README.md",
    "theory/foo",
    "theory/foo/convert_dec_to_bin.cc",
    "theory/gcd",
    "theory/gcd/README.md",
    "theory/gcd/gcd.cpp",
    "theory/graph",
    "theory/graph/Dijkstra.java",
    "theory/leetcode-\u5237\u9898\u603b\u7ed3.md",
    "theory/palindrome",
    "theory/palindrome/Manacher.java",
    "theory/permutation",
    "theory/permutation/Permutaion.java",
    "theory/permutation/README.md",
    "theory/recursion",
    "theory/recursion/Hanoi.java",
    "theory/recursion/README.md",
    "theory/search",
    "theory/search/BinarySearch.java",
    "theory/search/binary_search.cc",
    "theory/search/binary_search.py",
    "theory/sort",
    "theory/sort/BubbleSort.java",
    "theory/sort/InsertSort.java",
    "theory/sort/MergeSort.java",
    "theory/sort/QuickSort.java",
    "theory/sort/SelectSort.java",
    "theory/sort/\u6392\u5e8f\u7b97\u6cd5\u7684\u6bd4\u8f83.md",
    "theory/stack",
    "theory/stack/ValidBrackets.java",
    "theory/stack/stack.txt",
    "theory/string-match",
    "theory/string-match/KMP.java"
]
[
    "Algorithms",
    "Algorithms/0001-1000",
    "Algorithms/0001-1000/0001. Two Sum",
    "Algorithms/0001-1000/0001. Two Sum/0001. Two Sum.md",
    "Algorithms/0001-1000/0001. Two Sum/Solution.java",
    "Algorithms/0001-1000/0002. Add Two Numbers",
    "Algorithms/0001-1000/0002. Add Two Numbers/0002. Add Two Numbers.md",
    "Algorithms/0001-1000/0002. Add Two Numbers/Solution.java",
    "Algorithms/0001-1000/0003. Longest Substring Without Repeating Characters",
    "Algorithms/0001-1000/0003. Longest Substring Without Repeating Characters/0003. Longest Substring Without Repeating Characters.md",
    "Algorithms/0001-1000/0003. Longest Substring Without Repeating Characters/Solution.java",
    "Algorithms/0001-1000/0004. Median of Two Sorted Arrays",
    "Algorithms/0001-1000/0004. Median of Two Sorted Arrays/0004. Median of Two Sorted Arrays.md",
    "Algorithms/0001-1000/0004. Median of Two Sorted Arrays/Solution.java",
    "Algorithms/0001-1000/0005. Longest Palindromic Substring",
    "Algorithms/0001-1000/0005. Longest Palindromic Substring/0005. Longest Palindromic Substring.md",
    "Algorithms/0001-1000/0005. Longest Palindromic Substring/Solution.java",
    "Algorithms/0001-1000/0006. ZigZag Conversion",
    "Algorithms/0001-1000/0006. ZigZag Conversion/0006. ZigZag Conversion.md",
    "Algorithms/0001-1000/0006. ZigZag Conversion/Solution.java",
    "Algorithms/0001-1000/0007. Reverse Integer",
    "Algorithms/0001-1000/0007. Reverse Integer/0007. Reverse Integer.md",
    "Algorithms/0001-1000/0007. Reverse Integer/Solution.java",
    "Algorithms/0001-1000/0008. String to Integer (atoi)",
    "Algorithms/0001-1000/0008. String to Integer (atoi)/0008. String to Integer (atoi).md",
    "Algorithms/0001-1000/0008. String to Integer (atoi)/Solution.java",
    "Algorithms/0001-1000/0009. Palindrome Number",
    "Algorithms/0001-1000/0009. Palindrome Number/0009. Palindrome Number.md",
    "Algorithms/0001-1000/0009. Palindrome Number/Solution.java",
    "Algorithms/0001-1000/0010. Regular Expression Matching",
    "Algorithms/0001-1000/0010. Regular Expression Matching/0010. Regular Expression Matching.md",
    "Algorithms/0001-1000/0010. Regular Expression Matching/Solution.java",
    "Algorithms/0001-1000/0011. Container With Most Water",
    "Algorithms/0001-1000/0011. Container With Most Water/0011. Container With Most Water.md",
    "Algorithms/0001-1000/0011. Container With Most Water/Solution.java",
    "Algorithms/0001-1000/0012. Integer to Roman",
    "Algorithms/0001-1000/0012. Integer to Roman/0012. Integer to Roman.md",
    "Algorithms/0001-1000/0012. Integer to Roman/Solution.java",
    "Algorithms/0001-1000/0013. Roman to Integer",
    "Algorithms/0001-1000/0013. Roman to Integer/0013. Roman to Integer.md",
    "Algorithms/0001-1000/0013. Roman to Integer/Solution.java",
    "Algorithms/0001-1000/0014. Longest Common Prefix",
    "Algorithms/0001-1000/0014. Longest Common Prefix/0014. Longest Common Prefix.md",
    "Algorithms/0001-1000/0014. Longest Common Prefix/Solution.java",
    "Algorithms/0001-1000/0015. 3Sum",
    "Algorithms/0001-1000/0015. 3Sum/0015. 3Sum.md",
    "Algorithms/0001-1000/0015. 3Sum/Solution.java",
    "Algorithms/0001-1000/0016. 3Sum Closest",
    "Algorithms/0001-1000/0016. 3Sum Closest/0016. 3Sum Closest.md",
    "Algorithms/0001-1000/0016. 3Sum Closest/Solution.java",
    "Algorithms/0001-1000/0017. Letter Combinations of a Phone Number",
    "Algorithms/0001-1000/0017. Letter Combinations of a Phone Number/0017. Letter Combinations of a Phone Number.md",
    "Algorithms/0001-1000/0017. Letter Combinations of a Phone Number/Solution.java",
    "Algorithms/0001-1000/0018. 4Sum",
    "Algorithms/0001-1000/0018. 4Sum/0018. 4Sum.md",
    "Algorithms/0001-1000/0018. 4Sum/Solution.java",
    "Algorithms/0001-1000/0019. Remove Nth Node From End of List",
    "Algorithms/0001-1000/0019. Remove Nth Node From End of List/0019. Remove Nth Node From End of List.md",
    "Algorithms/0001-1000/0019. Remove Nth Node From End of List/Solution.java",
    "Algorithms/0001-1000/0020. Valid Parentheses",
    "Algorithms/0001-1000/0020. Valid Parentheses/0020. Valid Parentheses.md",
    "Algorithms/0001-1000/0020. Valid Parentheses/Solution.java",
    "Algorithms/0001-1000/0021. Merge Two Sorted Lists",
    "Algorithms/0001-1000/0021. Merge Two Sorted Lists/0021. Merge Two Sorted Lists.md",
    "Algorithms/0001-1000/0021. Merge Two Sorted Lists/Solution.java",
    "Algorithms/0001-1000/0022. Generate Parentheses",
    "Algorithms/0001-1000/0022. Generate Parentheses/0022. Generate Parentheses.md",
    "Algorithms/0001-1000/0022. Generate Parentheses/Solution.java",
    "Algorithms/0001-1000/0023. Merge k Sorted Lists",
    "Algorithms/0001-1000/0023. Merge k Sorted Lists/0023. Merge k Sorted Lists.md",
    "Algorithms/0001-1000/0023. Merge k Sorted Lists/Solution.java",
    "Algorithms/0001-1000/0024. Swap Nodes in Pairs",
    "Algorithms/0001-1000/0024. Swap Nodes in Pairs/0024. Swap Nodes in Pairs.md",
    "Algorithms/0001-1000/0024. Swap Nodes in Pairs/Solution.java",
    "Algorithms/0001-1000/0025. Reverse Nodes in k-Group",
    "Algorithms/0001-1000/0025. Reverse Nodes in k-Group/0025. Reverse Nodes in k-Group.md",
    "Algorithms/0001-1000/0025. Reverse Nodes in k-Group/Solution.java",
    "Algorithms/0001-1000/0026. Remove Duplicates from Sorted Array",
    "Algorithms/0001-1000/0026. Remove Duplicates from Sorted Array/0026. Remove Duplicates from Sorted Array.md",
    "Algorithms/0001-1000/0026. Remove Duplicates from Sorted Array/Solution.java",
    "Algorithms/0001-1000/0027. Remove Element",
    "Algorithms/0001-1000/0027. Remove Element/0027. Remove Element.md",
    "Algorithms/0001-1000/0027. Remove Element/Solution.java",
    "Algorithms/0001-1000/0028. Implement strStr()",
    "Algorithms/0001-1000/0028. Implement strStr()/0028. Implement strStr().md",
    "Algorithms/0001-1000/0028. Implement strStr()/Solution.java",
    "Algorithms/0001-1000/0029. Divide Two Integers",
    "Algorithms/0001-1000/0029. Divide Two Integers/0029. Divide Two Integers.md",
    "Algorithms/0001-1000/0029. Divide Two Integers/Solution.java",
    "Algorithms/0001-1000/0030. Substring with Concatenation of All Words",
    "Algorithms/0001-1000/0030. Substring with Concatenation of All Words/0030. Substring with Concatenation of All Words.md",
    "Algorithms/0001-1000/0030. Substring with Concatenation of All Words/Solution.java",
    "Algorithms/0001-1000/0031. Next Permutation",
    "Algorithms/0001-1000/0031. Next Permutation/0031. Next Permutation.md",
    "Algorithms/0001-1000/0031. Next Permutation/Solution.java",
    "Algorithms/0001-1000/0032. Longest Valid Parentheses",
    "Algorithms/0001-1000/0032. Longest Valid Parentheses/0032. Longest Valid Parentheses.md",
    "Algorithms/0001-1000/0032. Longest Valid Parentheses/Solution.java",
    "Algorithms/0001-1000/0033. Search in Rotated Sorted Array",
    "Algorithms/0001-1000/0033. Search in Rotated Sorted Array/0033. Search in Rotated Sorted Array.md",
    "Algorithms/0001-1000/0033. Search in Rotated Sorted Array/Solution.java",
    "Algorithms/0001-1000/0034. Find First and Last Position of Element in Sorted Array",
    "Algorithms/0001-1000/0034. Find First and Last Position of Element in Sorted Array/0034. Find First and Last Position of Element in Sorted Array.md",
    "Algorithms/0001-1000/0034. Find First and Last Position of Element in Sorted Array/Solution.java",
    "Algorithms/0001-1000/0035. Search Insert Position",
    "Algorithms/0001-1000/0035. Search Insert Position/0035. Search Insert Position.md",
    "Algorithms/0001-1000/0035. Search Insert Position/Solution.java",
    "Algorithms/0001-1000/0036. Valid Sudoku",
    "Algorithms/0001-1000/0036. Valid Sudoku/0036. Valid Sudoku.md",
    "Algorithms/0001-1000/0036. Valid Sudoku/Solution.java",
    "Algorithms/0001-1000/0037. Sudoku Solver",
    "Algorithms/0001-1000/0037. Sudoku Solver/0037. Sudoku Solver.md",
    "Algorithms/0001-1000/0037. Sudoku Solver/Solution.java",
    "Algorithms/0001-1000/0038. Count and Say",
    "Algorithms/0001-1000/0038. Count and Say/0038. Count and Say.md",
    "Algorithms/0001-1000/0038. Count and Say/Solution.java",
    "Algorithms/0001-1000/0039. Combination Sum",
    "Algorithms/0001-1000/0039. Combination Sum/0039. Combination Sum.md",
    "Algorithms/0001-1000/0039. Combination Sum/Solution.java",
    "Algorithms/0001-1000/0040. Combination Sum II",
    "Algorithms/0001-1000/0040. Combination Sum II/0040. Combination Sum II.md",
    "Algorithms/0001-1000/0040. Combination Sum II/Solution.java",
    "Algorithms/0001-1000/0041. First Missing Positive",
    "Algorithms/0001-1000/0041. First Missing Positive/0041. First Missing Positive.md",
    "Algorithms/0001-1000/0041. First Missing Positive/Solution.java",
    "Algorithms/0001-1000/0042. Trapping Rain Water",
    "Algorithms/0001-1000/0042. Trapping Rain Water/0042. Trapping Rain Water.md",
    "Algorithms/0001-1000/0042. Trapping Rain Water/Solution.java",
    "Algorithms/0001-1000/0043. Multiply Strings",
    "Algorithms/0001-1000/0043. Multiply Strings/0043. Multiply Strings.md",
    "Algorithms/0001-1000/0043. Multiply Strings/Solution.java",
    "Algorithms/0001-1000/0044. Wildcard Matching",
    "Algorithms/0001-1000/0044. Wildcard Matching/0044. Wildcard Matching.md",
    "Algorithms/0001-1000/0044. Wildcard Matching/Solution.java",
    "Algorithms/0001-1000/0045. Jump Game II",
    "Algorithms/0001-1000/0045. Jump Game II/0045. Jump Game II.md",
    "Algorithms/0001-1000/0045. Jump Game II/Solution.java",
    "Algorithms/0001-1000/0046. Permutations",
    "Algorithms/0001-1000/0046. Permutations/0046. Permutations.md",
    "Algorithms/0001-1000/0046. Permutations/Solution.java",
    "Algorithms/0001-1000/0047. Permutations II",
    "Algorithms/0001-1000/0047. Permutations II/0047. Permutations II.md",
    "Algorithms/0001-1000/0047. Permutations II/Solution.java",
    "Algorithms/0001-1000/0048. Rotate Image",
    "Algorithms/0001-1000/0048. Rotate Image/0048. Rotate Image.md",
    "Algorithms/0001-1000/0048. Rotate Image/Solution.java",
    "Algorithms/0001-1000/0049. Group Anagrams",
    "Algorithms/0001-1000/0049. Group Anagrams/0049. Group Anagrams.md",
    "Algorithms/0001-1000/0049. Group Anagrams/Solution.java",
    "Algorithms/0001-1000/0050. Pow(x, n)",
    "Algorithms/0001-1000/0050. Pow(x, n)/0050. Pow(x, n).md",
    "Algorithms/0001-1000/0050. Pow(x, n)/Solution.java",
    "Algorithms/0001-1000/0051. N-Queens",
    "Algorithms/0001-1000/0051. N-Queens/0051. N-Queens.md",
    "Algorithms/0001-1000/0051. N-Queens/Solution.java",
    "Algorithms/0001-1000/0052. N-Queens II",
    "Algorithms/0001-1000/0052. N-Queens II/0052. N-Queens II.md",
    "Algorithms/0001-1000/0052. N-Queens II/Solution.java",
    "Algorithms/0001-1000/0053. Maximum Subarray",
    "Algorithms/0001-1000/0053. Maximum Subarray/0053. Maximum Subarray.md",
    "Algorithms/0001-1000/0053. Maximum Subarray/Solution.java",
    "Algorithms/0001-1000/0054. Spiral Matrix",
    "Algorithms/0001-1000/0054. Spiral Matrix/0054. Spiral Matrix.md",
    "Algorithms/0001-1000/0054. Spiral Matrix/Solution.java",
    "Algorithms/0001-1000/0055. Jump Game",
    "Algorithms/0001-1000/0055. Jump Game/0055. Jump Game.md",
    "Algorithms/0001-1000/0055. Jump Game/Solution.java",
    "Algorithms/0001-1000/0056. Merge Intervals",
    "Algorithms/0001-1000/0056. Merge Intervals/0056. Merge Intervals.md",
    "Algorithms/0001-1000/0056. Merge Intervals/Solution.java",
    "Algorithms/0001-1000/0057. Insert Interval",
    "Algorithms/0001-1000/0057. Insert Interval/0057. Insert Interval.md",
    "Algorithms/0001-1000/0057. Insert Interval/Solution.java",
    "Algorithms/0001-1000/0058. Length of Last Word",
    "Algorithms/0001-1000/0058. Length of Last Word/0058. Length of Last Word.md",
    "Algorithms/0001-1000/0058. Length of Last Word/Solution.java",
    "Algorithms/0001-1000/0059. Spiral Matrix II",
    "Algorithms/0001-1000/0059. Spiral Matrix II/0059. Spiral Matrix II.md",
    "Algorithms/0001-1000/0059. Spiral Matrix II/Solution.java",
    "Algorithms/0001-1000/0060. Permutation Sequence",
    "Algorithms/0001-1000/0060. Permutation Sequence/0060. Permutation Sequence.md",
    "Algorithms/0001-1000/0060. Permutation Sequence/Solution.java",
    "Algorithms/0001-1000/0061. Rotate List",
    "Algorithms/0001-1000/0061. Rotate List/0061. Rotate List.md",
    "Algorithms/0001-1000/0061. Rotate List/Solution.java",
    "Algorithms/0001-1000/0062. Unique Paths",
    "Algorithms/0001-1000/0062. Unique Paths/0062. Unique Paths.md",
    "Algorithms/0001-1000/0062. Unique Paths/Solution.java",
    "Algorithms/0001-1000/0063. Unique Paths II",
    "Algorithms/0001-1000/0063. Unique Paths II/0063. Unique Paths II.md",
    "Algorithms/0001-1000/0063. Unique Paths II/Solution.java",
    "Algorithms/0001-1000/0064. Minimum Path Sum",
    "Algorithms/0001-1000/0064. Minimum Path Sum/0064. Minimum Path Sum.md",
    "Algorithms/0001-1000/0064. Minimum Path Sum/Solution.java",
    "Algorithms/0001-1000/0065. Valid Number",
    "Algorithms/0001-1000/0065. Valid Number/0065. Valid Number.md",
    "Algorithms/0001-1000/0065. Valid Number/Solution.java",
    "Algorithms/0001-1000/0066. Plus One",
    "Algorithms/0001-1000/0066. Plus One/0066. Plus One.md",
    "Algorithms/0001-1000/0066. Plus One/Solution.java",
    "Algorithms/0001-1000/0067. Add Binary",
    "Algorithms/0001-1000/0067. Add Binary/0067. Add Binary.md",
    "Algorithms/0001-1000/0067. Add Binary/Solution.java",
    "Algorithms/0001-1000/0068. Text Justification",
    "Algorithms/0001-1000/0068. Text Justification/0068. Text Justification.md",
    "Algorithms/0001-1000/0068. Text Justification/Solution.java",
    "Algorithms/0001-1000/0069. Sqrt(x)",
    "Algorithms/0001-1000/0069. Sqrt(x)/0069. Sqrt(x).md",
    "Algorithms/0001-1000/0069. Sqrt(x)/Solution.java",
    "Algorithms/0001-1000/0070. Climbing Stairs",
    "Algorithms/0001-1000/0070. Climbing Stairs/0070. Climbing Stairs.md",
    "Algorithms/0001-1000/0070. Climbing Stairs/Solution.java",
    "Algorithms/0001-1000/0071. Simplify Path",
    "Algorithms/0001-1000/0071. Simplify Path/0071. Simplify Path.md",
    "Algorithms/0001-1000/0071. Simplify Path/Solution.java",
    "Algorithms/0001-1000/0072. Edit Distance",
    "Algorithms/0001-1000/0072. Edit Distance/0072. Edit Distance.md",
    "Algorithms/0001-1000/0072. Edit Distance/Solution.java",
    "Algorithms/0001-1000/0073. Set Matrix Zeroes",
    "Algorithms/0001-1000/0073. Set Matrix Zeroes/0073. Set Matrix Zeroes.md",
    "Algorithms/0001-1000/0073. Set Matrix Zeroes/Solution.java",
    "Algorithms/0001-1000/0074. Search a 2D Matrix",
    "Algorithms/0001-1000/0074. Search a 2D Matrix/0074. Search a 2D Matrix.md",
    "Algorithms/0001-1000/0074. Search a 2D Matrix/Solution.java",
    "Algorithms/0001-1000/0075. Sort Colors",
    "Algorithms/0001-1000/0075. Sort Colors/0075. Sort Colors.md",
    "Algorithms/0001-1000/0075. Sort Colors/Solution.java",
    "Algorithms/0001-1000/0076. Minimum Window Substring",
    "Algorithms/0001-1000/0076. Minimum Window Substring/0076. Minimum Window Substring.md",
    "Algorithms/0001-1000/0076. Minimum Window Substring/Solution.java",
    "Algorithms/0001-1000/0077. Combinations",
    "Algorithms/0001-1000/0077. Combinations/0077. Combinations.md",
    "Algorithms/0001-1000/0077. Combinations/Solution.java",
    "Algorithms/0001-1000/0078. Subsets",
    "Algorithms/0001-1000/0078. Subsets/0078. Subsets.md",
    "Algorithms/0001-1000/0078. Subsets/Solution.java",
    "Algorithms/0001-1000/0079. Word Search",
    "Algorithms/0001-1000/0079. Word Search/0079. Word Search.md",
    "Algorithms/0001-1000/0079. Word Search/Solution.java",
    "Algorithms/0001-1000/0080. Remove Duplicates from Sorted Array II",
    "Algorithms/0001-1000/0080. Remove Duplicates from Sorted Array II/0080. Remove Duplicates from Sorted Array II.md",
    "Algorithms/0001-1000/0080. Remove Duplicates from Sorted Array II/Solution.java",
    "Algorithms/0001-1000/0081. Search in Rotated Sorted Array II",
    "Algorithms/0001-1000/0081. Search in Rotated Sorted Array II/0081. Search in Rotated Sorted Array II.md",
    "Algorithms/0001-1000/0081. Search in Rotated Sorted Array II/Solution.java",
    "Algorithms/0001-1000/0082. Remove Duplicates from Sorted List II",
    "Algorithms/0001-1000/0082. Remove Duplicates from Sorted List II/0082. Remove Duplicates from Sorted List II.md",
    "Algorithms/0001-1000/0082. Remove Duplicates from Sorted List II/Solution.java",
    "Algorithms/0001-1000/0083. Remove Duplicates from Sorted List",
    "Algorithms/0001-1000/0083. Remove Duplicates from Sorted List/0083. Remove Duplicates from Sorted List.md",
    "Algorithms/0001-1000/0083. Remove Duplicates from Sorted List/Solution.java",
    "Algorithms/0001-1000/0084. Largest Rectangle in Histogram",
    "Algorithms/0001-1000/0084. Largest Rectangle in Histogram/0084. Largest Rectangle in Histogram.md",
    "Algorithms/0001-1000/0084. Largest Rectangle in Histogram/Solution.java",
    "Algorithms/0001-1000/0085. Maximal Rectangle",
    "Algorithms/0001-1000/0085. Maximal Rectangle/0085. Maximal Rectangle.md",
    "Algorithms/0001-1000/0086. Partition List",
    "Algorithms/0001-1000/0086. Partition List/0086. Partition List.md",
    "Algorithms/0001-1000/0086. Partition List/Solution.java",
    "Algorithms/0001-1000/0087. Scramble String",
    "Algorithms/0001-1000/0087. Scramble String/0087. Scramble String.md",
    "Algorithms/0001-1000/0087. Scramble String/Solution.java",
    "Algorithms/0001-1000/0088. Merge Sorted Array",
    "Algorithms/0001-1000/0088. Merge Sorted Array/0088. Merge Sorted Array.md",
    "Algorithms/0001-1000/0088. Merge Sorted Array/Solution.java",
    "Algorithms/0001-1000/0089. Gray Code",
    "Algorithms/0001-1000/0089. Gray Code/0089. Gray Code.md",
    "Algorithms/0001-1000/0089. Gray Code/Solution.java",
    "Algorithms/0001-1000/0090. Subsets II",
    "Algorithms/0001-1000/0090. Subsets II/0090. Subsets II.md",
    "Algorithms/0001-1000/0090. Subsets II/Solution.java",
    "Algorithms/0001-1000/0091. Decode Ways",
    "Algorithms/0001-1000/0091. Decode Ways/0091. Decode Ways.md",
    "Algorithms/0001-1000/0091. Decode Ways/Solution.java",
    "Algorithms/0001-1000/0092. Reverse Linked List II",
    "Algorithms/0001-1000/0092. Reverse Linked List II/0092. Reverse Linked List II.md",
    "Algorithms/0001-1000/0092. Reverse Linked List II/Solution.java",
    "Algorithms/0001-1000/0093. Restore IP Addresses",
    "Algorithms/0001-1000/0093. Restore IP Addresses/0093. Restore IP Addresses.md",
    "Algorithms/0001-1000/0093. Restore IP Addresses/Solution.java",
    "Algorithms/0001-1000/0094. Binary Tree Inorder Traversal",
    "Algorithms/0001-1000/0094. Binary Tree Inorder Traversal/0094. Binary Tree Inorder Traversal.md",
    "Algorithms/0001-1000/0094. Binary Tree Inorder Traversal/Solution.java",
    "Algorithms/0001-1000/0095. Unique Binary Search Trees II",
    "Algorithms/0001-1000/0095. Unique Binary Search Trees II/0095. Unique Binary Search Trees II.md",
    "Algorithms/0001-1000/0095. Unique Binary Search Trees II/Solution.java",
    "Algorithms/0001-1000/0096. Unique Binary Search Trees",
    "Algorithms/0001-1000/0096. Unique Binary Search Trees/0096. Unique Binary Search Trees.md",
    "Algorithms/0001-1000/0096. Unique Binary Search Trees/Solution.java",
    "Algorithms/0001-1000/0097. Interleaving String",
    "Algorithms/0001-1000/0097. Interleaving String/0097. Interleaving String.md",
    "Algorithms/0001-1000/0097. Interleaving String/Solution.java",
    "Algorithms/0001-1000/0098. Validate Binary Search Tree",
    "Algorithms/0001-1000/0098. Validate Binary Search Tree/0098. Validate Binary Search Tree.md",
    "Algorithms/0001-1000/0098. Validate Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0099. Recover Binary Search Tree",
    "Algorithms/0001-1000/0099. Recover Binary Search Tree/0099. Recover Binary Search Tree.md",
    "Algorithms/0001-1000/0099. Recover Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0100. Same Tree",
    "Algorithms/0001-1000/0100. Same Tree/0100. Same Tree.md",
    "Algorithms/0001-1000/0100. Same Tree/Solution.java",
    "Algorithms/0001-1000/0101. Symmetric Tree",
    "Algorithms/0001-1000/0101. Symmetric Tree/0101. Symmetric Tree.md",
    "Algorithms/0001-1000/0101. Symmetric Tree/Solution.java",
    "Algorithms/0001-1000/0102. Binary Tree Level Order Traversal",
    "Algorithms/0001-1000/0102. Binary Tree Level Order Traversal/0102. Binary Tree Level Order Traversal.md",
    "Algorithms/0001-1000/0102. Binary Tree Level Order Traversal/Solution.java",
    "Algorithms/0001-1000/0103. Binary Tree Zigzag Level Order Traversal",
    "Algorithms/0001-1000/0103. Binary Tree Zigzag Level Order Traversal/0103. Binary Tree Zigzag Level Order Traversal.md",
    "Algorithms/0001-1000/0103. Binary Tree Zigzag Level Order Traversal/Solution.java",
    "Algorithms/0001-1000/0104. Maximum Depth of Binary Tree",
    "Algorithms/0001-1000/0104. Maximum Depth of Binary Tree/0104. Maximum Depth of Binary Tree.md",
    "Algorithms/0001-1000/0104. Maximum Depth of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0105. Construct Binary Tree from Preorder and Inorder Traversal",
    "Algorithms/0001-1000/0105. Construct Binary Tree from Preorder and Inorder Traversal/0105. Construct Binary Tree from Preorder and Inorder Traversal.md",
    "Algorithms/0001-1000/0105. Construct Binary Tree from Preorder and Inorder Traversal/Solution.java",
    "Algorithms/0001-1000/0106. Construct Binary Tree from Inorder and Postorder Traversal",
    "Algorithms/0001-1000/0106. Construct Binary Tree from Inorder and Postorder Traversal/0106. Construct Binary Tree from Inorder and Postorder Traversal.md",
    "Algorithms/0001-1000/0106. Construct Binary Tree from Inorder and Postorder Traversal/Solution.java",
    "Algorithms/0001-1000/0107. Binary Tree Level Order Traversal II",
    "Algorithms/0001-1000/0107. Binary Tree Level Order Traversal II/0107. Binary Tree Level Order Traversal II.md",
    "Algorithms/0001-1000/0107. Binary Tree Level Order Traversal II/Solution.java",
    "Algorithms/0001-1000/0108. Convert Sorted Array to Binary Search Tree",
    "Algorithms/0001-1000/0108. Convert Sorted Array to Binary Search Tree/0108. Convert Sorted Array to Binary Search Tree.md",
    "Algorithms/0001-1000/0108. Convert Sorted Array to Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0109. Convert Sorted List to Binary Search Tree",
    "Algorithms/0001-1000/0109. Convert Sorted List to Binary Search Tree/0109. Convert Sorted List to Binary Search Tree.md",
    "Algorithms/0001-1000/0109. Convert Sorted List to Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0110. Balanced Binary Tree",
    "Algorithms/0001-1000/0110. Balanced Binary Tree/0110. Balanced Binary Tree.md",
    "Algorithms/0001-1000/0110. Balanced Binary Tree/Solution.java",
    "Algorithms/0001-1000/0111. Minimum Depth of Binary Tree",
    "Algorithms/0001-1000/0111. Minimum Depth of Binary Tree/0111. Minimum Depth of Binary Tree.md",
    "Algorithms/0001-1000/0111. Minimum Depth of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0112. Path Sum",
    "Algorithms/0001-1000/0112. Path Sum/0112. Path Sum.md",
    "Algorithms/0001-1000/0112. Path Sum/Solution.java",
    "Algorithms/0001-1000/0113. Path Sum II",
    "Algorithms/0001-1000/0113. Path Sum II/0113. Path Sum II.md",
    "Algorithms/0001-1000/0113. Path Sum II/Solution.java",
    "Algorithms/0001-1000/0114. Flatten Binary Tree to Linked List",
    "Algorithms/0001-1000/0114. Flatten Binary Tree to Linked List/0114. Flatten Binary Tree to Linked List.md",
    "Algorithms/0001-1000/0114. Flatten Binary Tree to Linked List/Solution.java",
    "Algorithms/0001-1000/0115. Distinct Subsequences",
    "Algorithms/0001-1000/0115. Distinct Subsequences/0115. Distinct Subsequences.md",
    "Algorithms/0001-1000/0115. Distinct Subsequences/Solution.java",
    "Algorithms/0001-1000/0116. Populating Next Right Pointers in Each Node",
    "Algorithms/0001-1000/0116. Populating Next Right Pointers in Each Node/0116. Populating Next Right Pointers in Each Node.md",
    "Algorithms/0001-1000/0116. Populating Next Right Pointers in Each Node/Solution.java",
    "Algorithms/0001-1000/0117. Populating Next Right Pointers in Each Node II",
    "Algorithms/0001-1000/0117. Populating Next Right Pointers in Each Node II/0117. Populating Next Right Pointers in Each Node II.md",
    "Algorithms/0001-1000/0117. Populating Next Right Pointers in Each Node II/Solution.java",
    "Algorithms/0001-1000/0118. Pascal's Triangle",
    "Algorithms/0001-1000/0118. Pascal's Triangle/0118. Pascal's Triangle.md",
    "Algorithms/0001-1000/0118. Pascal's Triangle/Solution.java",
    "Algorithms/0001-1000/0119. Pascal's Triangle II",
    "Algorithms/0001-1000/0119. Pascal's Triangle II/0119. Pascal's Triangle II.md",
    "Algorithms/0001-1000/0119. Pascal's Triangle II/Solution.java",
    "Algorithms/0001-1000/0120. Triangle",
    "Algorithms/0001-1000/0120. Triangle/0120. Triangle.md",
    "Algorithms/0001-1000/0120. Triangle/Solution.java",
    "Algorithms/0001-1000/0121. Best Time to Buy and Sell Stock",
    "Algorithms/0001-1000/0121. Best Time to Buy and Sell Stock/0121. Best Time to Buy and Sell Stock.md",
    "Algorithms/0001-1000/0121. Best Time to Buy and Sell Stock/Solution.java",
    "Algorithms/0001-1000/0122. Best Time to Buy and Sell Stock II",
    "Algorithms/0001-1000/0122. Best Time to Buy and Sell Stock II/0122. Best Time to Buy and Sell Stock II.md",
    "Algorithms/0001-1000/0122. Best Time to Buy and Sell Stock II/Solution.java",
    "Algorithms/0001-1000/0123. Best Time to Buy and Sell Stock III",
    "Algorithms/0001-1000/0123. Best Time to Buy and Sell Stock III/0123. Best Time to Buy and Sell Stock III.md",
    "Algorithms/0001-1000/0123. Best Time to Buy and Sell Stock III/Solution.java",
    "Algorithms/0001-1000/0124. Binary Tree Maximum Path Sum",
    "Algorithms/0001-1000/0124. Binary Tree Maximum Path Sum/0124. Binary Tree Maximum Path Sum.md",
    "Algorithms/0001-1000/0124. Binary Tree Maximum Path Sum/Solution.java",
    "Algorithms/0001-1000/0125. Valid Palindrome",
    "Algorithms/0001-1000/0125. Valid Palindrome/0125. Valid Palindrome.md",
    "Algorithms/0001-1000/0125. Valid Palindrome/Solution.java",
    "Algorithms/0001-1000/0126. Word Ladder II",
    "Algorithms/0001-1000/0126. Word Ladder II/0126. Word Ladder II.md",
    "Algorithms/0001-1000/0126. Word Ladder II/Solution.java",
    "Algorithms/0001-1000/0127. Word Ladder",
    "Algorithms/0001-1000/0127. Word Ladder/0127. Word Ladder.md",
    "Algorithms/0001-1000/0127. Word Ladder/Solution.java",
    "Algorithms/0001-1000/0128. Longest Consecutive Sequence",
    "Algorithms/0001-1000/0128. Longest Consecutive Sequence/0128. Longest Consecutive Sequence.md",
    "Algorithms/0001-1000/0128. Longest Consecutive Sequence/Solution.java",
    "Algorithms/0001-1000/0129. Sum Root to Leaf Numbers",
    "Algorithms/0001-1000/0129. Sum Root to Leaf Numbers/0129. Sum Root to Leaf Numbers.md",
    "Algorithms/0001-1000/0129. Sum Root to Leaf Numbers/Solution.java",
    "Algorithms/0001-1000/0130. Surrounded Regions",
    "Algorithms/0001-1000/0130. Surrounded Regions/0130. Surrounded Regions.md",
    "Algorithms/0001-1000/0130. Surrounded Regions/Solution.java",
    "Algorithms/0001-1000/0131. Palindrome Partitioning",
    "Algorithms/0001-1000/0131. Palindrome Partitioning/0131. Palindrome Partitioning.md",
    "Algorithms/0001-1000/0131. Palindrome Partitioning/Solution.java",
    "Algorithms/0001-1000/0132. Palindrome Partitioning II",
    "Algorithms/0001-1000/0132. Palindrome Partitioning II/0132. Palindrome Partitioning II.md",
    "Algorithms/0001-1000/0132. Palindrome Partitioning II/Solution.java",
    "Algorithms/0001-1000/0133. Clone Graph",
    "Algorithms/0001-1000/0133. Clone Graph/0133. Clone Graph.md",
    "Algorithms/0001-1000/0133. Clone Graph/Solution.java",
    "Algorithms/0001-1000/0134. Gas Station",
    "Algorithms/0001-1000/0134. Gas Station/0134. Gas Station.md",
    "Algorithms/0001-1000/0134. Gas Station/Solution.java",
    "Algorithms/0001-1000/0135. Candy",
    "Algorithms/0001-1000/0135. Candy/0135. Candy.md",
    "Algorithms/0001-1000/0135. Candy/Solution.java",
    "Algorithms/0001-1000/0136. Single Number",
    "Algorithms/0001-1000/0136. Single Number/0136. Single Number.md",
    "Algorithms/0001-1000/0136. Single Number/Solution.java",
    "Algorithms/0001-1000/0137. Single Number II",
    "Algorithms/0001-1000/0137. Single Number II/0137. Single Number II.md",
    "Algorithms/0001-1000/0137. Single Number II/Solution.java",
    "Algorithms/0001-1000/0138. Copy List with Random Pointer",
    "Algorithms/0001-1000/0138. Copy List with Random Pointer/0138. Copy List with Random Pointer.md",
    "Algorithms/0001-1000/0138. Copy List with Random Pointer/Solution.java",
    "Algorithms/0001-1000/0139. Word Break",
    "Algorithms/0001-1000/0139. Word Break/0139. Word Break.md",
    "Algorithms/0001-1000/0139. Word Break/Solution.java",
    "Algorithms/0001-1000/0140. Word Break II",
    "Algorithms/0001-1000/0140. Word Break II/0140. Word Break II.md",
    "Algorithms/0001-1000/0140. Word Break II/Solution.java",
    "Algorithms/0001-1000/0141. Linked List Cycle",
    "Algorithms/0001-1000/0141. Linked List Cycle/0141. Linked List Cycle.md",
    "Algorithms/0001-1000/0141. Linked List Cycle/Solution.java",
    "Algorithms/0001-1000/0142. Linked List Cycle II",
    "Algorithms/0001-1000/0142. Linked List Cycle II/0142. Linked List Cycle II.md",
    "Algorithms/0001-1000/0142. Linked List Cycle II/Solution.java",
    "Algorithms/0001-1000/0143. Reorder List",
    "Algorithms/0001-1000/0143. Reorder List/0143. Reorder List.md",
    "Algorithms/0001-1000/0143. Reorder List/Solution.java",
    "Algorithms/0001-1000/0144. Binary Tree Preorder Traversal",
    "Algorithms/0001-1000/0144. Binary Tree Preorder Traversal/0144. Binary Tree Preorder Traversal.md",
    "Algorithms/0001-1000/0144. Binary Tree Preorder Traversal/Solution.java",
    "Algorithms/0001-1000/0145. Binary Tree Postorder Traversal",
    "Algorithms/0001-1000/0145. Binary Tree Postorder Traversal/0145. Binary Tree Postorder Traversal.md",
    "Algorithms/0001-1000/0145. Binary Tree Postorder Traversal/Solution.java",
    "Algorithms/0001-1000/0146. LRU Cache",
    "Algorithms/0001-1000/0146. LRU Cache/0146. LRU Cache.md",
    "Algorithms/0001-1000/0146. LRU Cache/LRUCache.java",
    "Algorithms/0001-1000/0147. Insertion Sort List",
    "Algorithms/0001-1000/0147. Insertion Sort List/0147. Insertion Sort List.md",
    "Algorithms/0001-1000/0147. Insertion Sort List/Solution.java",
    "Algorithms/0001-1000/0148. Sort List",
    "Algorithms/0001-1000/0148. Sort List/0148. Sort List.md",
    "Algorithms/0001-1000/0148. Sort List/Solution.java",
    "Algorithms/0001-1000/0149. Max Points on a Line",
    "Algorithms/0001-1000/0149. Max Points on a Line/0149. Max Points on a Line.md",
    "Algorithms/0001-1000/0149. Max Points on a Line/Solution.java",
    "Algorithms/0001-1000/0150. Evaluate Reverse Polish Notation",
    "Algorithms/0001-1000/0150. Evaluate Reverse Polish Notation/0150. Evaluate Reverse Polish Notation.md",
    "Algorithms/0001-1000/0150. Evaluate Reverse Polish Notation/Solution.java",
    "Algorithms/0001-1000/0151. Reverse Words in a String",
    "Algorithms/0001-1000/0151. Reverse Words in a String/0151. Reverse Words in a String.md",
    "Algorithms/0001-1000/0151. Reverse Words in a String/Solution.java",
    "Algorithms/0001-1000/0152. Maximum Product Subarray",
    "Algorithms/0001-1000/0152. Maximum Product Subarray/0152. Maximum Product Subarray.md",
    "Algorithms/0001-1000/0152. Maximum Product Subarray/Solution.java",
    "Algorithms/0001-1000/0153. Find Minimum in Rotated Sorted Array",
    "Algorithms/0001-1000/0153. Find Minimum in Rotated Sorted Array/0153. Find Minimum in Rotated Sorted Array.md",
    "Algorithms/0001-1000/0153. Find Minimum in Rotated Sorted Array/Solution.java",
    "Algorithms/0001-1000/0154. Find Minimum in Rotated Sorted Array II",
    "Algorithms/0001-1000/0154. Find Minimum in Rotated Sorted Array II/0154. Find Minimum in Rotated Sorted Array II.md",
    "Algorithms/0001-1000/0154. Find Minimum in Rotated Sorted Array II/Solution.java",
    "Algorithms/0001-1000/0155. Min Stack",
    "Algorithms/0001-1000/0155. Min Stack/0155. Min Stack.md",
    "Algorithms/0001-1000/0155. Min Stack/MinStack.java",
    "Algorithms/0001-1000/0156. Binary Tree Upside Down",
    "Algorithms/0001-1000/0156. Binary Tree Upside Down/0156. Binary Tree Upside Down.md",
    "Algorithms/0001-1000/0156. Binary Tree Upside Down/Solution.java",
    "Algorithms/0001-1000/0157. Read N Characters Given Read4",
    "Algorithms/0001-1000/0157. Read N Characters Given Read4/0157. Read N Characters Given Read4.md",
    "Algorithms/0001-1000/0157. Read N Characters Given Read4/Solution.java",
    "Algorithms/0001-1000/0158. Read N Characters Given Read4 II - Call multiple times",
    "Algorithms/0001-1000/0158. Read N Characters Given Read4 II - Call multiple times/0158. Read N Characters Given Read4 II - Call multiple times.md",
    "Algorithms/0001-1000/0158. Read N Characters Given Read4 II - Call multiple times/Solution.java",
    "Algorithms/0001-1000/0159. Longest Substring with At Most Two Distinct Characters",
    "Algorithms/0001-1000/0159. Longest Substring with At Most Two Distinct Characters/0159. Longest Substring with At Most Two Distinct Characters.md",
    "Algorithms/0001-1000/0159. Longest Substring with At Most Two Distinct Characters/Solution.java",
    "Algorithms/0001-1000/0160. Intersection of Two Linked Lists",
    "Algorithms/0001-1000/0160. Intersection of Two Linked Lists/0160. Intersection of Two Linked Lists.md",
    "Algorithms/0001-1000/0160. Intersection of Two Linked Lists/Solution.java",
    "Algorithms/0001-1000/0161. One Edit Distance",
    "Algorithms/0001-1000/0161. One Edit Distance/0161. One Edit Distance.md",
    "Algorithms/0001-1000/0161. One Edit Distance/Solution.java",
    "Algorithms/0001-1000/0162. Find Peak Element",
    "Algorithms/0001-1000/0162. Find Peak Element/0162. Find Peak Element.md",
    "Algorithms/0001-1000/0162. Find Peak Element/Solution.java",
    "Algorithms/0001-1000/0163. Missing Ranges",
    "Algorithms/0001-1000/0163. Missing Ranges/0163. Missing Ranges.md",
    "Algorithms/0001-1000/0163. Missing Ranges/Solution.java",
    "Algorithms/0001-1000/0164. Maximum Gap",
    "Algorithms/0001-1000/0164. Maximum Gap/0164. Maximum Gap.md",
    "Algorithms/0001-1000/0164. Maximum Gap/Solution.java",
    "Algorithms/0001-1000/0165. Compare Version Numbers",
    "Algorithms/0001-1000/0165. Compare Version Numbers/0165. Compare Version Numbers.md",
    "Algorithms/0001-1000/0165. Compare Version Numbers/Solution.java",
    "Algorithms/0001-1000/0166. Fraction to Recurring Decimal",
    "Algorithms/0001-1000/0166. Fraction to Recurring Decimal/0166. Fraction to Recurring Decimal.md",
    "Algorithms/0001-1000/0166. Fraction to Recurring Decimal/Solution.java",
    "Algorithms/0001-1000/0167. Two Sum II - Input array is sorted",
    "Algorithms/0001-1000/0167. Two Sum II - Input array is sorted/167. Two Sum II - Input array is sorted.md",
    "Algorithms/0001-1000/0167. Two Sum II - Input array is sorted/Solution.java",
    "Algorithms/0001-1000/0168. Excel Sheet Column Title",
    "Algorithms/0001-1000/0168. Excel Sheet Column Title/0168. Excel Sheet Column Title.md",
    "Algorithms/0001-1000/0168. Excel Sheet Column Title/Solution.java",
    "Algorithms/0001-1000/0169. Majority Element",
    "Algorithms/0001-1000/0169. Majority Element/0169. Majority Element.md",
    "Algorithms/0001-1000/0169. Majority Element/Solution.java",
    "Algorithms/0001-1000/0170. Two Sum III - Data structure design",
    "Algorithms/0001-1000/0170. Two Sum III - Data structure design/0170. Two Sum III - Data structure design.md",
    "Algorithms/0001-1000/0170. Two Sum III - Data structure design/TwoSum.java",
    "Algorithms/0001-1000/0171. Excel Sheet Column Number",
    "Algorithms/0001-1000/0171. Excel Sheet Column Number/0171. Excel Sheet Column Number.md",
    "Algorithms/0001-1000/0171. Excel Sheet Column Number/Solution.java",
    "Algorithms/0001-1000/0172. Factorial Trailing Zeroes",
    "Algorithms/0001-1000/0172. Factorial Trailing Zeroes/0172. Factorial Trailing Zeroes.md",
    "Algorithms/0001-1000/0172. Factorial Trailing Zeroes/Solution.java",
    "Algorithms/0001-1000/0173. Binary Search Tree Iterator",
    "Algorithms/0001-1000/0173. Binary Search Tree Iterator/0173. Binary Search Tree Iterator.md",
    "Algorithms/0001-1000/0173. Binary Search Tree Iterator/BSTIterator.java",
    "Algorithms/0001-1000/0174. Dungeon Game",
    "Algorithms/0001-1000/0174. Dungeon Game/0174. Dungeon Game.md",
    "Algorithms/0001-1000/0174. Dungeon Game/Solution.java",
    "Algorithms/0001-1000/0179. Largest Number",
    "Algorithms/0001-1000/0179. Largest Number/0179. Largest Number.md",
    "Algorithms/0001-1000/0179. Largest Number/Solution.java",
    "Algorithms/0001-1000/0186. Reverse Words in a String II",
    "Algorithms/0001-1000/0186. Reverse Words in a String II/0186. Reverse Words in a String II.md",
    "Algorithms/0001-1000/0186. Reverse Words in a String II/Solution.java",
    "Algorithms/0001-1000/0187. Repeated DNA Sequences",
    "Algorithms/0001-1000/0187. Repeated DNA Sequences/0187. Repeated DNA Sequences.md",
    "Algorithms/0001-1000/0187. Repeated DNA Sequences/Solution.java",
    "Algorithms/0001-1000/0188. Best Time to Buy and Sell Stock IV",
    "Algorithms/0001-1000/0188. Best Time to Buy and Sell Stock IV/0188. Best Time to Buy and Sell Stock IV.md",
    "Algorithms/0001-1000/0188. Best Time to Buy and Sell Stock IV/Solution.java",
    "Algorithms/0001-1000/0189. Rotate Array",
    "Algorithms/0001-1000/0189. Rotate Array/0189. Rotate Array.md",
    "Algorithms/0001-1000/0189. Rotate Array/Solution.java",
    "Algorithms/0001-1000/0190. Reverse Bits",
    "Algorithms/0001-1000/0190. Reverse Bits/0190. Reverse Bits.md",
    "Algorithms/0001-1000/0190. Reverse Bits/Solution.java",
    "Algorithms/0001-1000/0191. Number of 1 Bits",
    "Algorithms/0001-1000/0191. Number of 1 Bits/0191. Number of 1 Bits.md",
    "Algorithms/0001-1000/0191. Number of 1 Bits/Solution.java",
    "Algorithms/0001-1000/0198. House Robber",
    "Algorithms/0001-1000/0198. House Robber/0198. House Robber.md",
    "Algorithms/0001-1000/0198. House Robber/Solution.java",
    "Algorithms/0001-1000/0199. Binary Tree Right Side View",
    "Algorithms/0001-1000/0199. Binary Tree Right Side View/0199. Binary Tree Right Side View.md",
    "Algorithms/0001-1000/0199. Binary Tree Right Side View/Solution.java",
    "Algorithms/0001-1000/0200. Number of Islands",
    "Algorithms/0001-1000/0200. Number of Islands/0200. Number of Islands.md",
    "Algorithms/0001-1000/0200. Number of Islands/Solution.java",
    "Algorithms/0001-1000/0201. Bitwise AND of Numbers Range",
    "Algorithms/0001-1000/0201. Bitwise AND of Numbers Range/0201. Bitwise AND of Numbers Range.md",
    "Algorithms/0001-1000/0201. Bitwise AND of Numbers Range/Solution.java",
    "Algorithms/0001-1000/0202. Happy Number",
    "Algorithms/0001-1000/0202. Happy Number/0202. Happy Number.md",
    "Algorithms/0001-1000/0202. Happy Number/Solution.java",
    "Algorithms/0001-1000/0203. Remove Linked List Elements",
    "Algorithms/0001-1000/0203. Remove Linked List Elements/0203. Remove Linked List Elements.md",
    "Algorithms/0001-1000/0203. Remove Linked List Elements/Solution.java",
    "Algorithms/0001-1000/0204. Count Primes",
    "Algorithms/0001-1000/0204. Count Primes/0204. Count Primes.md",
    "Algorithms/0001-1000/0204. Count Primes/Solution.java",
    "Algorithms/0001-1000/0205. Isomorphic Strings",
    "Algorithms/0001-1000/0205. Isomorphic Strings/0205. Isomorphic Strings.md",
    "Algorithms/0001-1000/0205. Isomorphic Strings/Solution.java",
    "Algorithms/0001-1000/0206. Reverse Linked List",
    "Algorithms/0001-1000/0206. Reverse Linked List/0206. Reverse Linked List.md",
    "Algorithms/0001-1000/0206. Reverse Linked List/Solution.java",
    "Algorithms/0001-1000/0207. Course Schedule",
    "Algorithms/0001-1000/0207. Course Schedule/0207. Course Schedule.md",
    "Algorithms/0001-1000/0207. Course Schedule/Solution.java",
    "Algorithms/0001-1000/0208. Implement Trie (Prefix Tree)",
    "Algorithms/0001-1000/0208. Implement Trie (Prefix Tree)/0208. Implement Trie (Prefix Tree).md",
    "Algorithms/0001-1000/0208. Implement Trie (Prefix Tree)/Trie.java",
    "Algorithms/0001-1000/0209. Minimum Size Subarray Sum",
    "Algorithms/0001-1000/0209. Minimum Size Subarray Sum/0209. Minimum Size Subarray Sum.md",
    "Algorithms/0001-1000/0209. Minimum Size Subarray Sum/Solution.java",
    "Algorithms/0001-1000/0210. Course Schedule II",
    "Algorithms/0001-1000/0210. Course Schedule II/0210. Course Schedule II.md",
    "Algorithms/0001-1000/0210. Course Schedule II/Solution.java",
    "Algorithms/0001-1000/0211. Add and Search Word - Data structure design",
    "Algorithms/0001-1000/0211. Add and Search Word - Data structure design/0211. Add and Search Word - Data structure design.md",
    "Algorithms/0001-1000/0211. Add and Search Word - Data structure design/WordDictionary.java",
    "Algorithms/0001-1000/0212. Word Search II",
    "Algorithms/0001-1000/0212. Word Search II/0212. Word Search II.md",
    "Algorithms/0001-1000/0212. Word Search II/Solution.java",
    "Algorithms/0001-1000/0213. House Robber II",
    "Algorithms/0001-1000/0213. House Robber II/0213. House Robber II.md",
    "Algorithms/0001-1000/0213. House Robber II/Solution.java",
    "Algorithms/0001-1000/0214. Shortest Palindrome",
    "Algorithms/0001-1000/0214. Shortest Palindrome/0214. Shortest Palindrome.md",
    "Algorithms/0001-1000/0214. Shortest Palindrome/Solution.java",
    "Algorithms/0001-1000/0215. Kth Largest Element in an Array",
    "Algorithms/0001-1000/0215. Kth Largest Element in an Array/0215. Kth Largest Element in an Array.md",
    "Algorithms/0001-1000/0215. Kth Largest Element in an Array/Solution.java",
    "Algorithms/0001-1000/0216. Combination Sum III",
    "Algorithms/0001-1000/0216. Combination Sum III/0216. Combination Sum III.md",
    "Algorithms/0001-1000/0216. Combination Sum III/Solution.java",
    "Algorithms/0001-1000/0217. Contains Duplicate",
    "Algorithms/0001-1000/0217. Contains Duplicate/0217. Contains Duplicate.md",
    "Algorithms/0001-1000/0217. Contains Duplicate/Solution.java",
    "Algorithms/0001-1000/0218. The Skyline Problem",
    "Algorithms/0001-1000/0218. The Skyline Problem/0218. The Skyline Problem.md",
    "Algorithms/0001-1000/0218. The Skyline Problem/Solution.java",
    "Algorithms/0001-1000/0219. Contains Duplicate II",
    "Algorithms/0001-1000/0219. Contains Duplicate II/0219. Contains Duplicate II.md",
    "Algorithms/0001-1000/0219. Contains Duplicate II/Solution.java",
    "Algorithms/0001-1000/0220. Contains Duplicate III",
    "Algorithms/0001-1000/0220. Contains Duplicate III/0220. Contains Duplicate III.md",
    "Algorithms/0001-1000/0220. Contains Duplicate III/Solution.java",
    "Algorithms/0001-1000/0221. Maximal Square",
    "Algorithms/0001-1000/0221. Maximal Square/0221. Maximal Square.md",
    "Algorithms/0001-1000/0221. Maximal Square/Solution.java",
    "Algorithms/0001-1000/0222. Count Complete Tree Nodes",
    "Algorithms/0001-1000/0222. Count Complete Tree Nodes/0222. Count Complete Tree Nodes.md",
    "Algorithms/0001-1000/0222. Count Complete Tree Nodes/Solution.java",
    "Algorithms/0001-1000/0223. Rectangle Area",
    "Algorithms/0001-1000/0223. Rectangle Area/0223. Rectangle Area.md",
    "Algorithms/0001-1000/0223. Rectangle Area/Solution.java",
    "Algorithms/0001-1000/0224. Basic Calculator",
    "Algorithms/0001-1000/0224. Basic Calculator/0224. Basic Calculator.md",
    "Algorithms/0001-1000/0224. Basic Calculator/Solution.java",
    "Algorithms/0001-1000/0225. Implement Stack using Queues",
    "Algorithms/0001-1000/0225. Implement Stack using Queues/0225. Implement Stack using Queues.md",
    "Algorithms/0001-1000/0225. Implement Stack using Queues/MyStack.java",
    "Algorithms/0001-1000/0226. Invert Binary Tree",
    "Algorithms/0001-1000/0226. Invert Binary Tree/0226. Invert Binary Tree.md",
    "Algorithms/0001-1000/0226. Invert Binary Tree/Solution.java",
    "Algorithms/0001-1000/0227. Basic Calculator II",
    "Algorithms/0001-1000/0227. Basic Calculator II/0227. Basic Calculator II.md",
    "Algorithms/0001-1000/0227. Basic Calculator II/Solution.java",
    "Algorithms/0001-1000/0228. Summary Ranges",
    "Algorithms/0001-1000/0228. Summary Ranges/0228. Summary Ranges.md",
    "Algorithms/0001-1000/0228. Summary Ranges/Solution.java",
    "Algorithms/0001-1000/0229. Majority Element II",
    "Algorithms/0001-1000/0229. Majority Element II/0229. Majority Element II.md",
    "Algorithms/0001-1000/0229. Majority Element II/Solution.java",
    "Algorithms/0001-1000/0230. Kth Smallest Element in a BST",
    "Algorithms/0001-1000/0230. Kth Smallest Element in a BST/0230. Kth Smallest Element in a BST.md",
    "Algorithms/0001-1000/0230. Kth Smallest Element in a BST/Solution.java",
    "Algorithms/0001-1000/0231. Power of Two",
    "Algorithms/0001-1000/0231. Power of Two/0231. Power of Two.md",
    "Algorithms/0001-1000/0231. Power of Two/Solution.java",
    "Algorithms/0001-1000/0232. Implement Queue using Stacks",
    "Algorithms/0001-1000/0232. Implement Queue using Stacks/0232. Implement Queue using Stacks.md",
    "Algorithms/0001-1000/0232. Implement Queue using Stacks/MyQueue.java",
    "Algorithms/0001-1000/0233. Number of Digit One",
    "Algorithms/0001-1000/0233. Number of Digit One/0233. Number of Digit One.md",
    "Algorithms/0001-1000/0233. Number of Digit One/Solution.java",
    "Algorithms/0001-1000/0234. Palindrome Linked List",
    "Algorithms/0001-1000/0234. Palindrome Linked List/0234. Palindrome Linked List.md",
    "Algorithms/0001-1000/0234. Palindrome Linked List/Solution.java",
    "Algorithms/0001-1000/0235. Lowest Common Ancestor of a Binary Search Tree",
    "Algorithms/0001-1000/0235. Lowest Common Ancestor of a Binary Search Tree/0235. Lowest Common Ancestor of a Binary Search Tree.md",
    "Algorithms/0001-1000/0235. Lowest Common Ancestor of a Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0236. Lowest Common Ancestor of a Binary Tree",
    "Algorithms/0001-1000/0236. Lowest Common Ancestor of a Binary Tree/0236. Lowest Common Ancestor of a Binary Tree.md",
    "Algorithms/0001-1000/0236. Lowest Common Ancestor of a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0237. Delete Node in a Linked List",
    "Algorithms/0001-1000/0237. Delete Node in a Linked List/0237. Delete Node in a Linked List.md",
    "Algorithms/0001-1000/0237. Delete Node in a Linked List/Solution.java",
    "Algorithms/0001-1000/0238. Product of Array Except Self",
    "Algorithms/0001-1000/0238. Product of Array Except Self/0238. Product of Array Except Self.md",
    "Algorithms/0001-1000/0238. Product of Array Except Self/Solution.java",
    "Algorithms/0001-1000/0239. Sliding Window Maximum",
    "Algorithms/0001-1000/0239. Sliding Window Maximum/0239. Sliding Window Maximum.md",
    "Algorithms/0001-1000/0239. Sliding Window Maximum/Solution.java",
    "Algorithms/0001-1000/0240. Search a 2D Matrix II",
    "Algorithms/0001-1000/0240. Search a 2D Matrix II/0240. Search a 2D Matrix II.md",
    "Algorithms/0001-1000/0240. Search a 2D Matrix II/Solution.java",
    "Algorithms/0001-1000/0241. Different Ways to Add Parentheses",
    "Algorithms/0001-1000/0241. Different Ways to Add Parentheses/0241. Different Ways to Add Parentheses.md",
    "Algorithms/0001-1000/0241. Different Ways to Add Parentheses/Solution.java",
    "Algorithms/0001-1000/0242. Valid Anagram",
    "Algorithms/0001-1000/0242. Valid Anagram/0242. Valid Anagram.md",
    "Algorithms/0001-1000/0242. Valid Anagram/Solution.java",
    "Algorithms/0001-1000/0243. Shortest Word Distance",
    "Algorithms/0001-1000/0243. Shortest Word Distance/0243. Shortest Word Distance.md",
    "Algorithms/0001-1000/0243. Shortest Word Distance/Solution.java",
    "Algorithms/0001-1000/0244. Shortest Word Distance II",
    "Algorithms/0001-1000/0244. Shortest Word Distance II/0244. Shortest Word Distance II.md",
    "Algorithms/0001-1000/0244. Shortest Word Distance II/WordDistance.java",
    "Algorithms/0001-1000/0245. Shortest Word Distance III",
    "Algorithms/0001-1000/0245. Shortest Word Distance III/0245. Shortest Word Distance III.md",
    "Algorithms/0001-1000/0245. Shortest Word Distance III/Solution.java",
    "Algorithms/0001-1000/0246. Strobogrammatic Number",
    "Algorithms/0001-1000/0246. Strobogrammatic Number/0246. Strobogrammatic Number.md",
    "Algorithms/0001-1000/0246. Strobogrammatic Number/Solution.java",
    "Algorithms/0001-1000/0247. Strobogrammatic Number II",
    "Algorithms/0001-1000/0247. Strobogrammatic Number II/0247. Strobogrammatic Number II.md",
    "Algorithms/0001-1000/0247. Strobogrammatic Number II/Solution.java",
    "Algorithms/0001-1000/0248. Strobogrammatic Number III",
    "Algorithms/0001-1000/0248. Strobogrammatic Number III/0248. Strobogrammatic Number III.md",
    "Algorithms/0001-1000/0248. Strobogrammatic Number III/Solution.java",
    "Algorithms/0001-1000/0249. Group Shifted Strings",
    "Algorithms/0001-1000/0249. Group Shifted Strings/0249. Group Shifted Strings.md",
    "Algorithms/0001-1000/0249. Group Shifted Strings/Solution.java",
    "Algorithms/0001-1000/0250. Count Univalue Subtrees",
    "Algorithms/0001-1000/0250. Count Univalue Subtrees/0250. Count Univalue Subtrees.md",
    "Algorithms/0001-1000/0250. Count Univalue Subtrees/Solution.java",
    "Algorithms/0001-1000/0251. Flatten 2D Vector",
    "Algorithms/0001-1000/0251. Flatten 2D Vector/0251. Flatten 2D Vector.md",
    "Algorithms/0001-1000/0251. Flatten 2D Vector/Vector2D.java",
    "Algorithms/0001-1000/0252. Meeting Rooms",
    "Algorithms/0001-1000/0252. Meeting Rooms/0252. Meeting Rooms.md",
    "Algorithms/0001-1000/0252. Meeting Rooms/Solution.java",
    "Algorithms/0001-1000/0253. Meeting Rooms II",
    "Algorithms/0001-1000/0253. Meeting Rooms II/0253. Meeting Rooms II.md",
    "Algorithms/0001-1000/0253. Meeting Rooms II/Solution.java",
    "Algorithms/0001-1000/0254. Factor Combinations",
    "Algorithms/0001-1000/0254. Factor Combinations/0254. Factor Combinations.md",
    "Algorithms/0001-1000/0254. Factor Combinations/Solution.java",
    "Algorithms/0001-1000/0255. Verify Preorder Sequence in Binary Search Tree",
    "Algorithms/0001-1000/0255. Verify Preorder Sequence in Binary Search Tree/0255. Verify Preorder Sequence in Binary Search Tree.md",
    "Algorithms/0001-1000/0255. Verify Preorder Sequence in Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0256. Paint House",
    "Algorithms/0001-1000/0256. Paint House/0256. Paint House.md",
    "Algorithms/0001-1000/0256. Paint House/Solution.java",
    "Algorithms/0001-1000/0257. Binary Tree Paths",
    "Algorithms/0001-1000/0257. Binary Tree Paths/0257. Binary Tree Paths.md",
    "Algorithms/0001-1000/0257. Binary Tree Paths/Solution.java",
    "Algorithms/0001-1000/0258. Add Digits",
    "Algorithms/0001-1000/0258. Add Digits/0258. Add Digits.md",
    "Algorithms/0001-1000/0258. Add Digits/Solution.java",
    "Algorithms/0001-1000/0259. 3Sum Smaller",
    "Algorithms/0001-1000/0259. 3Sum Smaller/0259. 3Sum Smaller.md",
    "Algorithms/0001-1000/0259. 3Sum Smaller/Solution.java",
    "Algorithms/0001-1000/0260. Single Number III",
    "Algorithms/0001-1000/0260. Single Number III/0260. Single Number III.md",
    "Algorithms/0001-1000/0260. Single Number III/Solution.java",
    "Algorithms/0001-1000/0261. Graph Valid Tree",
    "Algorithms/0001-1000/0261. Graph Valid Tree/0261. Graph Valid Tree.md",
    "Algorithms/0001-1000/0261. Graph Valid Tree/Solution.java",
    "Algorithms/0001-1000/0263. Ugly Number",
    "Algorithms/0001-1000/0263. Ugly Number/0263. Ugly Number.md",
    "Algorithms/0001-1000/0263. Ugly Number/Solution.java",
    "Algorithms/0001-1000/0264. Ugly Number II",
    "Algorithms/0001-1000/0264. Ugly Number II/0264. Ugly Number II.md",
    "Algorithms/0001-1000/0264. Ugly Number II/Solution.java",
    "Algorithms/0001-1000/0265. Paint House II",
    "Algorithms/0001-1000/0265. Paint House II/0265. Paint House II.md",
    "Algorithms/0001-1000/0265. Paint House II/Solution.java",
    "Algorithms/0001-1000/0266. Palindrome Permutation",
    "Algorithms/0001-1000/0266. Palindrome Permutation/0266. Palindrome Permutation.md",
    "Algorithms/0001-1000/0266. Palindrome Permutation/Solution.java",
    "Algorithms/0001-1000/0267. Palindrome Permutation II",
    "Algorithms/0001-1000/0267. Palindrome Permutation II/0267. Palindrome Permutation II.md",
    "Algorithms/0001-1000/0267. Palindrome Permutation II/Solution.java",
    "Algorithms/0001-1000/0268. Missing Number",
    "Algorithms/0001-1000/0268. Missing Number/0268. Missing Number.md",
    "Algorithms/0001-1000/0268. Missing Number/Solution.java",
    "Algorithms/0001-1000/0269. Alien Dictionary",
    "Algorithms/0001-1000/0269. Alien Dictionary/0269. Alien Dictionary.md",
    "Algorithms/0001-1000/0269. Alien Dictionary/Solution.java",
    "Algorithms/0001-1000/0270. Closest Binary Search Tree Value",
    "Algorithms/0001-1000/0270. Closest Binary Search Tree Value/0270. Closest Binary Search Tree Value.md",
    "Algorithms/0001-1000/0270. Closest Binary Search Tree Value/Solution.java",
    "Algorithms/0001-1000/0271. Encode and Decode Strings",
    "Algorithms/0001-1000/0271. Encode and Decode Strings/0271. Encode and Decode Strings.md",
    "Algorithms/0001-1000/0271. Encode and Decode Strings/Codec.java",
    "Algorithms/0001-1000/0272. Closest Binary Search Tree Value II",
    "Algorithms/0001-1000/0272. Closest Binary Search Tree Value II/0272. Closest Binary Search Tree Value II.md",
    "Algorithms/0001-1000/0272. Closest Binary Search Tree Value II/Solution.java",
    "Algorithms/0001-1000/0273. Integer to English Words",
    "Algorithms/0001-1000/0273. Integer to English Words/0273. Integer to English Words.md",
    "Algorithms/0001-1000/0273. Integer to English Words/Solution.java",
    "Algorithms/0001-1000/0274. H-Index",
    "Algorithms/0001-1000/0274. H-Index/0274. H-Index.md",
    "Algorithms/0001-1000/0274. H-Index/Solution.java",
    "Algorithms/0001-1000/0275. H-Index II",
    "Algorithms/0001-1000/0275. H-Index II/0275. H-Index II.md",
    "Algorithms/0001-1000/0275. H-Index II/Solution.java",
    "Algorithms/0001-1000/0276. Paint Fence",
    "Algorithms/0001-1000/0276. Paint Fence/0276. Paint Fence.md",
    "Algorithms/0001-1000/0276. Paint Fence/Solution.java",
    "Algorithms/0001-1000/0277. Find the Celebrity",
    "Algorithms/0001-1000/0277. Find the Celebrity/0277. Find the Celebrity.md",
    "Algorithms/0001-1000/0277. Find the Celebrity/Solution.java",
    "Algorithms/0001-1000/0278. First Bad Version",
    "Algorithms/0001-1000/0278. First Bad Version/0278. First Bad Version.md",
    "Algorithms/0001-1000/0278. First Bad Version/Solution.java",
    "Algorithms/0001-1000/0279. Perfect Squares",
    "Algorithms/0001-1000/0279. Perfect Squares/0279. Perfect Squares.md",
    "Algorithms/0001-1000/0279. Perfect Squares/Solution.java",
    "Algorithms/0001-1000/0280. Wiggle Sort",
    "Algorithms/0001-1000/0280. Wiggle Sort/0280. Wiggle Sort.md",
    "Algorithms/0001-1000/0280. Wiggle Sort/Solution.java",
    "Algorithms/0001-1000/0281. Zigzag Iterator",
    "Algorithms/0001-1000/0281. Zigzag Iterator/0281. Zigzag Iterator.md",
    "Algorithms/0001-1000/0281. Zigzag Iterator/ZigzagIterator.java",
    "Algorithms/0001-1000/0282. Expression Add Operators",
    "Algorithms/0001-1000/0282. Expression Add Operators/0282. Expression Add Operators.md",
    "Algorithms/0001-1000/0282. Expression Add Operators/Solution.java",
    "Algorithms/0001-1000/0283. Move Zeroes",
    "Algorithms/0001-1000/0283. Move Zeroes/0283. Move Zeroes.md",
    "Algorithms/0001-1000/0283. Move Zeroes/Solution.java",
    "Algorithms/0001-1000/0284. Peeking Iterator",
    "Algorithms/0001-1000/0284. Peeking Iterator/0284. Peeking Iterator.md",
    "Algorithms/0001-1000/0284. Peeking Iterator/PeekingIterator.java",
    "Algorithms/0001-1000/0285. Inorder Successor in BST",
    "Algorithms/0001-1000/0285. Inorder Successor in BST/0285. Inorder Successor in BST.md",
    "Algorithms/0001-1000/0285. Inorder Successor in BST/Solution.java",
    "Algorithms/0001-1000/0286. Walls and Gates",
    "Algorithms/0001-1000/0286. Walls and Gates/0286. Walls and Gates.md",
    "Algorithms/0001-1000/0286. Walls and Gates/Solution.java",
    "Algorithms/0001-1000/0287. Find the Duplicate Number",
    "Algorithms/0001-1000/0287. Find the Duplicate Number/0287. Find the Duplicate Number.md",
    "Algorithms/0001-1000/0287. Find the Duplicate Number/Solution.java",
    "Algorithms/0001-1000/0288. Unique Word Abbreviation",
    "Algorithms/0001-1000/0288. Unique Word Abbreviation/0288. Unique Word Abbreviation.md",
    "Algorithms/0001-1000/0288. Unique Word Abbreviation/ValidWordAbbr.java",
    "Algorithms/0001-1000/0289. Game of Life",
    "Algorithms/0001-1000/0289. Game of Life/0289. Game of Life.md",
    "Algorithms/0001-1000/0289. Game of Life/Solution.java",
    "Algorithms/0001-1000/0290. Word Pattern",
    "Algorithms/0001-1000/0290. Word Pattern/0290. Word Pattern.md",
    "Algorithms/0001-1000/0290. Word Pattern/Solution.java",
    "Algorithms/0001-1000/0291. Word Pattern II",
    "Algorithms/0001-1000/0291. Word Pattern II/0291. Word Pattern II.md",
    "Algorithms/0001-1000/0291. Word Pattern II/Solution.java",
    "Algorithms/0001-1000/0292. Nim Game",
    "Algorithms/0001-1000/0292. Nim Game/0292. Nim Game.md",
    "Algorithms/0001-1000/0292. Nim Game/Solution.java",
    "Algorithms/0001-1000/0293. Flip Game",
    "Algorithms/0001-1000/0293. Flip Game/0293. Flip Game.md",
    "Algorithms/0001-1000/0293. Flip Game/Solution.java",
    "Algorithms/0001-1000/0294. Flip Game II",
    "Algorithms/0001-1000/0294. Flip Game II/0294. Flip Game II.md",
    "Algorithms/0001-1000/0294. Flip Game II/Solution.java",
    "Algorithms/0001-1000/0295. Find Median from Data Stream",
    "Algorithms/0001-1000/0295. Find Median from Data Stream/0295. Find Median from Data Stream.md",
    "Algorithms/0001-1000/0295. Find Median from Data Stream/MedianFinder.java",
    "Algorithms/0001-1000/0296. Best Meeting Point",
    "Algorithms/0001-1000/0296. Best Meeting Point/0296. Best Meeting Point.md",
    "Algorithms/0001-1000/0296. Best Meeting Point/Solution.java",
    "Algorithms/0001-1000/0297. Serialize and Deserialize Binary Tree",
    "Algorithms/0001-1000/0297. Serialize and Deserialize Binary Tree/0297. Serialize and Deserialize Binary Tree.md",
    "Algorithms/0001-1000/0297. Serialize and Deserialize Binary Tree/Codec.java",
    "Algorithms/0001-1000/0298. Binary Tree Longest Consecutive Sequence",
    "Algorithms/0001-1000/0298. Binary Tree Longest Consecutive Sequence/0298. Binary Tree Longest Consecutive Sequence.md",
    "Algorithms/0001-1000/0298. Binary Tree Longest Consecutive Sequence/Solution.java",
    "Algorithms/0001-1000/0299. Bulls and Cows",
    "Algorithms/0001-1000/0299. Bulls and Cows/0299. Bulls and Cows.md",
    "Algorithms/0001-1000/0299. Bulls and Cows/Solution.java",
    "Algorithms/0001-1000/0300. Longest Increasing Subsequence",
    "Algorithms/0001-1000/0300. Longest Increasing Subsequence/0300. Longest Increasing Subsequence.md",
    "Algorithms/0001-1000/0300. Longest Increasing Subsequence/Solution.java",
    "Algorithms/0001-1000/0301. Remove Invalid Parentheses",
    "Algorithms/0001-1000/0301. Remove Invalid Parentheses/0301. Remove Invalid Parentheses.md",
    "Algorithms/0001-1000/0301. Remove Invalid Parentheses/Solution.java",
    "Algorithms/0001-1000/0302. Smallest Rectangle Enclosing Black Pixels",
    "Algorithms/0001-1000/0302. Smallest Rectangle Enclosing Black Pixels/0302. Smallest Rectangle Enclosing Black Pixels.md",
    "Algorithms/0001-1000/0302. Smallest Rectangle Enclosing Black Pixels/Solution.java",
    "Algorithms/0001-1000/0303. Range Sum Query - Immutable",
    "Algorithms/0001-1000/0303. Range Sum Query - Immutable/0303. Range Sum Query - Immutable.md",
    "Algorithms/0001-1000/0303. Range Sum Query - Immutable/NumArray.java",
    "Algorithms/0001-1000/0304. Range Sum Query 2D - Immutable",
    "Algorithms/0001-1000/0304. Range Sum Query 2D - Immutable/0304. Range Sum Query 2D - Immutable.md",
    "Algorithms/0001-1000/0304. Range Sum Query 2D - Immutable/NumMatrix.java",
    "Algorithms/0001-1000/0305. Number of Islands II",
    "Algorithms/0001-1000/0305. Number of Islands II/0305. Number of Islands II.md",
    "Algorithms/0001-1000/0305. Number of Islands II/Solution.java",
    "Algorithms/0001-1000/0306. Additive Number",
    "Algorithms/0001-1000/0306. Additive Number/0306. Additive Number.md",
    "Algorithms/0001-1000/0306. Additive Number/Solution.java",
    "Algorithms/0001-1000/0307. Range Sum Query - Mutable",
    "Algorithms/0001-1000/0307. Range Sum Query - Mutable/0307. Range Sum Query - Mutable.md",
    "Algorithms/0001-1000/0307. Range Sum Query - Mutable/NumArray.java",
    "Algorithms/0001-1000/0308. Range Sum Query 2D - Mutable",
    "Algorithms/0001-1000/0308. Range Sum Query 2D - Mutable/0308. Range Sum Query 2D - Mutable.md",
    "Algorithms/0001-1000/0308. Range Sum Query 2D - Mutable/NumMatrix.java",
    "Algorithms/0001-1000/0309. Best Time to Buy and Sell Stock with Cooldown",
    "Algorithms/0001-1000/0309. Best Time to Buy and Sell Stock with Cooldown/0309. Best Time to Buy and Sell Stock with Cooldown.md",
    "Algorithms/0001-1000/0309. Best Time to Buy and Sell Stock with Cooldown/Solution.java",
    "Algorithms/0001-1000/0310. Minimum Height Trees",
    "Algorithms/0001-1000/0310. Minimum Height Trees/0310. Minimum Height Trees.md",
    "Algorithms/0001-1000/0310. Minimum Height Trees/Solution.java",
    "Algorithms/0001-1000/0311. Sparse Matrix Multiplication",
    "Algorithms/0001-1000/0311. Sparse Matrix Multiplication/0311. Sparse Matrix Multiplication.md",
    "Algorithms/0001-1000/0311. Sparse Matrix Multiplication/Solution.java",
    "Algorithms/0001-1000/0312. Burst Balloons",
    "Algorithms/0001-1000/0312. Burst Balloons/0312. Burst Balloons.md",
    "Algorithms/0001-1000/0312. Burst Balloons/Solution.java",
    "Algorithms/0001-1000/0313. Super Ugly Number",
    "Algorithms/0001-1000/0313. Super Ugly Number/0313. Super Ugly Number.md",
    "Algorithms/0001-1000/0313. Super Ugly Number/Solution.java",
    "Algorithms/0001-1000/0314. Binary Tree Vertical Order Traversal",
    "Algorithms/0001-1000/0314. Binary Tree Vertical Order Traversal/0314. Binary Tree Vertical Order Traversal.md",
    "Algorithms/0001-1000/0314. Binary Tree Vertical Order Traversal/Solution.java",
    "Algorithms/0001-1000/0315. Count of Smaller Numbers After Self",
    "Algorithms/0001-1000/0315. Count of Smaller Numbers After Self/0315. Count of Smaller Numbers After Self.md",
    "Algorithms/0001-1000/0315. Count of Smaller Numbers After Self/Solution.java",
    "Algorithms/0001-1000/0316. Remove Duplicate Letters",
    "Algorithms/0001-1000/0316. Remove Duplicate Letters/0316. Remove Duplicate Letters.md",
    "Algorithms/0001-1000/0316. Remove Duplicate Letters/Solution.java",
    "Algorithms/0001-1000/0317. Shortest Distance from All Buildings",
    "Algorithms/0001-1000/0317. Shortest Distance from All Buildings/0317. Shortest Distance from All Buildings.md",
    "Algorithms/0001-1000/0317. Shortest Distance from All Buildings/Solution.java",
    "Algorithms/0001-1000/0318. Maximum Product of Word Lengths",
    "Algorithms/0001-1000/0318. Maximum Product of Word Lengths/0318. Maximum Product of Word Lengths.md",
    "Algorithms/0001-1000/0318. Maximum Product of Word Lengths/Solution.java",
    "Algorithms/0001-1000/0319. Bulb Switcher",
    "Algorithms/0001-1000/0319. Bulb Switcher/0319. Bulb Switcher.md",
    "Algorithms/0001-1000/0319. Bulb Switcher/Solution.java",
    "Algorithms/0001-1000/0320. Generalized Abbreviation",
    "Algorithms/0001-1000/0320. Generalized Abbreviation/0320. Generalized Abbreviation.md",
    "Algorithms/0001-1000/0320. Generalized Abbreviation/Solution.java",
    "Algorithms/0001-1000/0321. Create Maximum Number",
    "Algorithms/0001-1000/0321. Create Maximum Number/0321. Create Maximum Number.md",
    "Algorithms/0001-1000/0321. Create Maximum Number/Solution.java",
    "Algorithms/0001-1000/0322. Coin Change",
    "Algorithms/0001-1000/0322. Coin Change/0322. Coin Change.md",
    "Algorithms/0001-1000/0322. Coin Change/Solution.java",
    "Algorithms/0001-1000/0323. Number of Connected Components in an Undirected Graph",
    "Algorithms/0001-1000/0323. Number of Connected Components in an Undirected Graph/0323. Number of Connected Components in an Undirected Graph.md",
    "Algorithms/0001-1000/0323. Number of Connected Components in an Undirected Graph/Solution.java",
    "Algorithms/0001-1000/0324. Wiggle Sort II",
    "Algorithms/0001-1000/0324. Wiggle Sort II/0324. Wiggle Sort II.md",
    "Algorithms/0001-1000/0324. Wiggle Sort II/Solution.java",
    "Algorithms/0001-1000/0325. Maximum Size Subarray Sum Equals k",
    "Algorithms/0001-1000/0325. Maximum Size Subarray Sum Equals k/0325. Maximum Size Subarray Sum Equals k.md",
    "Algorithms/0001-1000/0325. Maximum Size Subarray Sum Equals k/Solution.java",
    "Algorithms/0001-1000/0326. Power of Three",
    "Algorithms/0001-1000/0326. Power of Three/0326. Power of Three.md",
    "Algorithms/0001-1000/0326. Power of Three/Solution.java",
    "Algorithms/0001-1000/0327. Count of Range Sum",
    "Algorithms/0001-1000/0327. Count of Range Sum/0327. Count of Range Sum.md",
    "Algorithms/0001-1000/0327. Count of Range Sum/Solution.java",
    "Algorithms/0001-1000/0328. Odd Even Linked List",
    "Algorithms/0001-1000/0328. Odd Even Linked List/0328. Odd Even Linked List.md",
    "Algorithms/0001-1000/0328. Odd Even Linked List/Solution.java",
    "Algorithms/0001-1000/0329. Longest Increasing Path in a Matrix",
    "Algorithms/0001-1000/0329. Longest Increasing Path in a Matrix/0329. Longest Increasing Path in a Matrix.md",
    "Algorithms/0001-1000/0329. Longest Increasing Path in a Matrix/Solution.java",
    "Algorithms/0001-1000/0330. Patching Array",
    "Algorithms/0001-1000/0330. Patching Array/0330. Patching Array.md",
    "Algorithms/0001-1000/0330. Patching Array/Solution.java",
    "Algorithms/0001-1000/0331. Verify Preorder Serialization of a Binary Tree",
    "Algorithms/0001-1000/0331. Verify Preorder Serialization of a Binary Tree/0331. Verify Preorder Serialization of a Binary Tree.md",
    "Algorithms/0001-1000/0331. Verify Preorder Serialization of a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0332. Reconstruct Itinerary",
    "Algorithms/0001-1000/0332. Reconstruct Itinerary/0332. Reconstruct Itinerary.md",
    "Algorithms/0001-1000/0332. Reconstruct Itinerary/Solution.java",
    "Algorithms/0001-1000/0333. Largest BST Subtree",
    "Algorithms/0001-1000/0333. Largest BST Subtree/0333. Largest BST Subtree.md",
    "Algorithms/0001-1000/0333. Largest BST Subtree/Solution.java",
    "Algorithms/0001-1000/0334. Increasing Triplet Subsequence",
    "Algorithms/0001-1000/0334. Increasing Triplet Subsequence/0334. Increasing Triplet Subsequence.md",
    "Algorithms/0001-1000/0334. Increasing Triplet Subsequence/Solution.java",
    "Algorithms/0001-1000/0335. Self Crossing",
    "Algorithms/0001-1000/0335. Self Crossing/0335. Self Crossing.md",
    "Algorithms/0001-1000/0335. Self Crossing/Solution.java",
    "Algorithms/0001-1000/0336. Palindrome Pairs",
    "Algorithms/0001-1000/0336. Palindrome Pairs/0336. Palindrome Pairs.md",
    "Algorithms/0001-1000/0336. Palindrome Pairs/Solution.java",
    "Algorithms/0001-1000/0337. House Robber III",
    "Algorithms/0001-1000/0337. House Robber III/0337. House Robber III.md",
    "Algorithms/0001-1000/0337. House Robber III/Solution.java",
    "Algorithms/0001-1000/0338. Counting Bits",
    "Algorithms/0001-1000/0338. Counting Bits/0338. Counting Bits.md",
    "Algorithms/0001-1000/0338. Counting Bits/Solution.java",
    "Algorithms/0001-1000/0339. Nested List Weight Sum",
    "Algorithms/0001-1000/0339. Nested List Weight Sum/0339. Nested List Weight Sum.md",
    "Algorithms/0001-1000/0339. Nested List Weight Sum/Solution.java",
    "Algorithms/0001-1000/0340. Longest Substring with At Most K Distinct Characters",
    "Algorithms/0001-1000/0340. Longest Substring with At Most K Distinct Characters/0340. Longest Substring with At Most K Distinct Characters.md",
    "Algorithms/0001-1000/0340. Longest Substring with At Most K Distinct Characters/Solution.java",
    "Algorithms/0001-1000/0341. Flatten Nested List Iterator",
    "Algorithms/0001-1000/0341. Flatten Nested List Iterator/0341. Flatten Nested List Iterator.md",
    "Algorithms/0001-1000/0341. Flatten Nested List Iterator/NestedIterator.java",
    "Algorithms/0001-1000/0342. Power of Four",
    "Algorithms/0001-1000/0342. Power of Four/0342. Power of Four.md",
    "Algorithms/0001-1000/0342. Power of Four/Solution.java",
    "Algorithms/0001-1000/0343. Integer Break",
    "Algorithms/0001-1000/0343. Integer Break/0343. Integer Break.md",
    "Algorithms/0001-1000/0343. Integer Break/Solution.java",
    "Algorithms/0001-1000/0344. Reverse String",
    "Algorithms/0001-1000/0344. Reverse String/0344. Reverse String.md",
    "Algorithms/0001-1000/0344. Reverse String/Solution.java",
    "Algorithms/0001-1000/0345. Reverse Vowels of a String",
    "Algorithms/0001-1000/0345. Reverse Vowels of a String/0345. Reverse Vowels of a String.md",
    "Algorithms/0001-1000/0345. Reverse Vowels of a String/Solution.java",
    "Algorithms/0001-1000/0346. Moving Average from Data Stream",
    "Algorithms/0001-1000/0346. Moving Average from Data Stream/0346. Moving Average from Data Stream.md",
    "Algorithms/0001-1000/0346. Moving Average from Data Stream/MovingAverage.java",
    "Algorithms/0001-1000/0347. Top K Frequent Elements",
    "Algorithms/0001-1000/0347. Top K Frequent Elements/0347. Top K Frequent Elements.md",
    "Algorithms/0001-1000/0347. Top K Frequent Elements/Solution.java",
    "Algorithms/0001-1000/0348. Design Tic-Tac-Toe",
    "Algorithms/0001-1000/0348. Design Tic-Tac-Toe/0348. Design Tic-Tac-Toe.md",
    "Algorithms/0001-1000/0348. Design Tic-Tac-Toe/TicTacToe.java",
    "Algorithms/0001-1000/0349. Intersection of Two Arrays",
    "Algorithms/0001-1000/0349. Intersection of Two Arrays/0349. Intersection of Two Arrays.md",
    "Algorithms/0001-1000/0349. Intersection of Two Arrays/Solution.java",
    "Algorithms/0001-1000/0350. Intersection of Two Arrays II",
    "Algorithms/0001-1000/0350. Intersection of Two Arrays II/0350. Intersection of Two Arrays II.md",
    "Algorithms/0001-1000/0350. Intersection of Two Arrays II/Solution.java",
    "Algorithms/0001-1000/0351. Android Unlock Patterns",
    "Algorithms/0001-1000/0351. Android Unlock Patterns/0351. Android Unlock Patterns.md",
    "Algorithms/0001-1000/0351. Android Unlock Patterns/Solution.java",
    "Algorithms/0001-1000/0352. Data Stream as Disjoint Intervals",
    "Algorithms/0001-1000/0352. Data Stream as Disjoint Intervals/0352. Data Stream as Disjoint Intervals.md",
    "Algorithms/0001-1000/0352. Data Stream as Disjoint Intervals/SummaryRanges.java",
    "Algorithms/0001-1000/0353. Design Snake Game",
    "Algorithms/0001-1000/0353. Design Snake Game/0353. Design Snake Game.md",
    "Algorithms/0001-1000/0353. Design Snake Game/SnakeGame.java",
    "Algorithms/0001-1000/0354. Russian Doll Envelopes",
    "Algorithms/0001-1000/0354. Russian Doll Envelopes/0354. Russian Doll Envelopes.md",
    "Algorithms/0001-1000/0354. Russian Doll Envelopes/Solution.java",
    "Algorithms/0001-1000/0355. Design Twitter",
    "Algorithms/0001-1000/0355. Design Twitter/0355. Design Twitter.md",
    "Algorithms/0001-1000/0355. Design Twitter/Twitter.java",
    "Algorithms/0001-1000/0356. Line Reflection",
    "Algorithms/0001-1000/0356. Line Reflection/0356. Line Reflection.md",
    "Algorithms/0001-1000/0356. Line Reflection/Solution.java",
    "Algorithms/0001-1000/0357. Count Numbers with Unique Digits",
    "Algorithms/0001-1000/0357. Count Numbers with Unique Digits/0357. Count Numbers with Unique Digits.md",
    "Algorithms/0001-1000/0357. Count Numbers with Unique Digits/Solution.java",
    "Algorithms/0001-1000/0358. Rearrange String k Distance Apart",
    "Algorithms/0001-1000/0358. Rearrange String k Distance Apart/0358. Rearrange String k Distance Apart.md",
    "Algorithms/0001-1000/0358. Rearrange String k Distance Apart/Solution.java",
    "Algorithms/0001-1000/0359. Logger Rate Limiter",
    "Algorithms/0001-1000/0359. Logger Rate Limiter/0359. Logger Rate Limiter.md",
    "Algorithms/0001-1000/0359. Logger Rate Limiter/Logger.java",
    "Algorithms/0001-1000/0360. Sort Transformed Array",
    "Algorithms/0001-1000/0360. Sort Transformed Array/0360. Sort Transformed Array.md",
    "Algorithms/0001-1000/0360. Sort Transformed Array/Solution.java",
    "Algorithms/0001-1000/0361. Bomb Enemy",
    "Algorithms/0001-1000/0361. Bomb Enemy/0361. Bomb Enemy.md",
    "Algorithms/0001-1000/0361. Bomb Enemy/Solution.java",
    "Algorithms/0001-1000/0362. Design Hit Counter",
    "Algorithms/0001-1000/0362. Design Hit Counter/0362. Design Hit Counter.md",
    "Algorithms/0001-1000/0362. Design Hit Counter/HitCounter.java",
    "Algorithms/0001-1000/0363. Max Sum of Rectangle No Larger Than K",
    "Algorithms/0001-1000/0363. Max Sum of Rectangle No Larger Than K/0363. Max Sum of Rectangle No Larger Than K.md",
    "Algorithms/0001-1000/0363. Max Sum of Rectangle No Larger Than K/Solution.java",
    "Algorithms/0001-1000/0364. Nested List Weight Sum II",
    "Algorithms/0001-1000/0364. Nested List Weight Sum II/0364. Nested List Weight Sum II.md",
    "Algorithms/0001-1000/0364. Nested List Weight Sum II/Solution.java",
    "Algorithms/0001-1000/0365. Water and Jug Problem",
    "Algorithms/0001-1000/0365. Water and Jug Problem/0365. Water and Jug Problem.md",
    "Algorithms/0001-1000/0365. Water and Jug Problem/Solution.java",
    "Algorithms/0001-1000/0366. Find Leaves of Binary Tree",
    "Algorithms/0001-1000/0366. Find Leaves of Binary Tree/0366. Find Leaves of Binary Tree.md",
    "Algorithms/0001-1000/0366. Find Leaves of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0367. Valid Perfect Square",
    "Algorithms/0001-1000/0367. Valid Perfect Square/0367. Valid Perfect Square.md",
    "Algorithms/0001-1000/0367. Valid Perfect Square/Solution.java",
    "Algorithms/0001-1000/0368. Largest Divisible Subset",
    "Algorithms/0001-1000/0368. Largest Divisible Subset/0368. Largest Divisible Subset.md",
    "Algorithms/0001-1000/0368. Largest Divisible Subset/Solution.java",
    "Algorithms/0001-1000/0369. Plus One Linked List",
    "Algorithms/0001-1000/0369. Plus One Linked List/0369. Plus One Linked List.md",
    "Algorithms/0001-1000/0369. Plus One Linked List/Solution.java",
    "Algorithms/0001-1000/0370. Range Addition",
    "Algorithms/0001-1000/0370. Range Addition/0370. Range Addition.md",
    "Algorithms/0001-1000/0370. Range Addition/Solution.java",
    "Algorithms/0001-1000/0371. Sum of Two Integers",
    "Algorithms/0001-1000/0371. Sum of Two Integers/0371. Sum of Two Integers.md",
    "Algorithms/0001-1000/0371. Sum of Two Integers/Solution.java",
    "Algorithms/0001-1000/0372. Super Pow",
    "Algorithms/0001-1000/0372. Super Pow/0372. Super Pow.md",
    "Algorithms/0001-1000/0372. Super Pow/Solution.java",
    "Algorithms/0001-1000/0373. Find K Pairs with Smallest Sums",
    "Algorithms/0001-1000/0373. Find K Pairs with Smallest Sums/0373. Find K Pairs with Smallest Sums.md",
    "Algorithms/0001-1000/0373. Find K Pairs with Smallest Sums/Solution.java",
    "Algorithms/0001-1000/0374. Guess Number Higher or Lower",
    "Algorithms/0001-1000/0374. Guess Number Higher or Lower/0374. Guess Number Higher or Lower.md",
    "Algorithms/0001-1000/0374. Guess Number Higher or Lower/Solution.java",
    "Algorithms/0001-1000/0375. Guess Number Higher or Lower II",
    "Algorithms/0001-1000/0375. Guess Number Higher or Lower II/0375. Guess Number Higher or Lower II.md",
    "Algorithms/0001-1000/0375. Guess Number Higher or Lower II/Solution.java",
    "Algorithms/0001-1000/0376. Wiggle Subsequence",
    "Algorithms/0001-1000/0376. Wiggle Subsequence/0376. Wiggle Subsequence.md",
    "Algorithms/0001-1000/0376. Wiggle Subsequence/Solution.java",
    "Algorithms/0001-1000/0377. Combination Sum IV",
    "Algorithms/0001-1000/0377. Combination Sum IV/0377. Combination Sum IV.md",
    "Algorithms/0001-1000/0377. Combination Sum IV/Solution.java",
    "Algorithms/0001-1000/0378. Kth Smallest Element in a Sorted Matrix",
    "Algorithms/0001-1000/0378. Kth Smallest Element in a Sorted Matrix/0378. Kth Smallest Element in a Sorted Matrix.md",
    "Algorithms/0001-1000/0378. Kth Smallest Element in a Sorted Matrix/Solution.java",
    "Algorithms/0001-1000/0379. Design Phone Directory",
    "Algorithms/0001-1000/0379. Design Phone Directory/0379. Design Phone Directory.md",
    "Algorithms/0001-1000/0379. Design Phone Directory/PhoneDirectory.java",
    "Algorithms/0001-1000/0380. Insert Delete GetRandom O(1)",
    "Algorithms/0001-1000/0380. Insert Delete GetRandom O(1)/0380. Insert Delete GetRandom O(1).md",
    "Algorithms/0001-1000/0380. Insert Delete GetRandom O(1)/RandomizedSet.java",
    "Algorithms/0001-1000/0381. Insert Delete GetRandom O(1) - Duplicates allowed",
    "Algorithms/0001-1000/0381. Insert Delete GetRandom O(1) - Duplicates allowed/0381. Insert Delete GetRandom O(1) - Duplicates allowed.md",
    "Algorithms/0001-1000/0381. Insert Delete GetRandom O(1) - Duplicates allowed/RandomizedCollection.java",
    "Algorithms/0001-1000/0382. Linked List Random Node",
    "Algorithms/0001-1000/0382. Linked List Random Node/0382. Linked List Random Node.md",
    "Algorithms/0001-1000/0382. Linked List Random Node/Solution.java",
    "Algorithms/0001-1000/0383. Ransom Note",
    "Algorithms/0001-1000/0383. Ransom Note/0383. Ransom Note.md",
    "Algorithms/0001-1000/0383. Ransom Note/Solution.java",
    "Algorithms/0001-1000/0384. Shuffle an Array",
    "Algorithms/0001-1000/0384. Shuffle an Array/0384. Shuffle an Array.md",
    "Algorithms/0001-1000/0384. Shuffle an Array/Solution.java",
    "Algorithms/0001-1000/0385. Mini Parser",
    "Algorithms/0001-1000/0385. Mini Parser/0385. Mini Parser.md",
    "Algorithms/0001-1000/0385. Mini Parser/Solution.java",
    "Algorithms/0001-1000/0386. Lexicographical Numbers",
    "Algorithms/0001-1000/0386. Lexicographical Numbers/0386. Lexicographical Numbers.md",
    "Algorithms/0001-1000/0386. Lexicographical Numbers/Solution.java",
    "Algorithms/0001-1000/0387. First Unique Character in a String",
    "Algorithms/0001-1000/0387. First Unique Character in a String/0387. First Unique Character in a String.md",
    "Algorithms/0001-1000/0387. First Unique Character in a String/Solution.java",
    "Algorithms/0001-1000/0388. Longest Absolute File Path",
    "Algorithms/0001-1000/0388. Longest Absolute File Path/0388. Longest Absolute File Path.md",
    "Algorithms/0001-1000/0388. Longest Absolute File Path/Solution.java",
    "Algorithms/0001-1000/0389. Find the Difference",
    "Algorithms/0001-1000/0389. Find the Difference/0389. Find the Difference.md",
    "Algorithms/0001-1000/0389. Find the Difference/Solution.java",
    "Algorithms/0001-1000/0390. Elimination Game",
    "Algorithms/0001-1000/0390. Elimination Game/0390. Elimination Game.md",
    "Algorithms/0001-1000/0390. Elimination Game/Solution.java",
    "Algorithms/0001-1000/0391. Perfect Rectangle",
    "Algorithms/0001-1000/0391. Perfect Rectangle/0391. Perfect Rectangle.md",
    "Algorithms/0001-1000/0391. Perfect Rectangle/Solution.java",
    "Algorithms/0001-1000/0392. Is Subsequence",
    "Algorithms/0001-1000/0392. Is Subsequence/0392. Is Subsequence.md",
    "Algorithms/0001-1000/0392. Is Subsequence/Solution.java",
    "Algorithms/0001-1000/0393. UTF-8 Validation",
    "Algorithms/0001-1000/0393. UTF-8 Validation/0393. UTF-8 Validation.md",
    "Algorithms/0001-1000/0393. UTF-8 Validation/Solution.java",
    "Algorithms/0001-1000/0394. Decode String",
    "Algorithms/0001-1000/0394. Decode String/0394. Decode String.md",
    "Algorithms/0001-1000/0394. Decode String/Solution.java",
    "Algorithms/0001-1000/0395. Longest Substring with At Least K Repeating Characters",
    "Algorithms/0001-1000/0395. Longest Substring with At Least K Repeating Characters/0395. Longest Substring with At Least K Repeating Characters.md",
    "Algorithms/0001-1000/0395. Longest Substring with At Least K Repeating Characters/Solution.java",
    "Algorithms/0001-1000/0396. Rotate Function",
    "Algorithms/0001-1000/0396. Rotate Function/0396. Rotate Function.md",
    "Algorithms/0001-1000/0396. Rotate Function/Solution.java",
    "Algorithms/0001-1000/0397. Integer Replacement",
    "Algorithms/0001-1000/0397. Integer Replacement/0397. Integer Replacement.md",
    "Algorithms/0001-1000/0397. Integer Replacement/Solution.java",
    "Algorithms/0001-1000/0398. Random Pick Index",
    "Algorithms/0001-1000/0398. Random Pick Index/0398. Random Pick Index.md",
    "Algorithms/0001-1000/0398. Random Pick Index/Solution.java",
    "Algorithms/0001-1000/0399. Evaluate Division",
    "Algorithms/0001-1000/0399. Evaluate Division/0399. Evaluate Division.md",
    "Algorithms/0001-1000/0399. Evaluate Division/Solution.java",
    "Algorithms/0001-1000/0400. Nth Digit",
    "Algorithms/0001-1000/0400. Nth Digit/0400. Nth Digit.md",
    "Algorithms/0001-1000/0400. Nth Digit/Solution.java",
    "Algorithms/0001-1000/0401. Binary Watch",
    "Algorithms/0001-1000/0401. Binary Watch/0401. Binary Watch.md",
    "Algorithms/0001-1000/0401. Binary Watch/Solution.java",
    "Algorithms/0001-1000/0402. Remove K Digits",
    "Algorithms/0001-1000/0402. Remove K Digits/0402. Remove K Digits.md",
    "Algorithms/0001-1000/0402. Remove K Digits/Solution.java",
    "Algorithms/0001-1000/0403. Frog Jump",
    "Algorithms/0001-1000/0403. Frog Jump/0403. Frog Jump.md",
    "Algorithms/0001-1000/0403. Frog Jump/Solution.java",
    "Algorithms/0001-1000/0404. Sum of Left Leaves",
    "Algorithms/0001-1000/0404. Sum of Left Leaves/0404. Sum of Left Leaves.md",
    "Algorithms/0001-1000/0404. Sum of Left Leaves/Solution.java",
    "Algorithms/0001-1000/0405. Convert a Number to Hexadecimal",
    "Algorithms/0001-1000/0405. Convert a Number to Hexadecimal/0405. Convert a Number to Hexadecimal.md",
    "Algorithms/0001-1000/0405. Convert a Number to Hexadecimal/Solution.java",
    "Algorithms/0001-1000/0406. Queue Reconstruction by Height",
    "Algorithms/0001-1000/0406. Queue Reconstruction by Height/0406. Queue Reconstruction by Height.md",
    "Algorithms/0001-1000/0406. Queue Reconstruction by Height/Solution.java",
    "Algorithms/0001-1000/0407. Trapping Rain Water II",
    "Algorithms/0001-1000/0407. Trapping Rain Water II/0407. Trapping Rain Water II.md",
    "Algorithms/0001-1000/0407. Trapping Rain Water II/Solution.java",
    "Algorithms/0001-1000/0408. Valid Word Abbreviation",
    "Algorithms/0001-1000/0408. Valid Word Abbreviation/0408. Valid Word Abbreviation.md",
    "Algorithms/0001-1000/0408. Valid Word Abbreviation/Solution.java",
    "Algorithms/0001-1000/0409. Longest Palindrome",
    "Algorithms/0001-1000/0409. Longest Palindrome/0409. Longest Palindrome.md",
    "Algorithms/0001-1000/0409. Longest Palindrome/Solution.java",
    "Algorithms/0001-1000/0410. Split Array Largest Sum",
    "Algorithms/0001-1000/0410. Split Array Largest Sum/0410. Split Array Largest Sum.md",
    "Algorithms/0001-1000/0410. Split Array Largest Sum/Solution.java",
    "Algorithms/0001-1000/0411. Minimum Unique Word Abbreviation",
    "Algorithms/0001-1000/0411. Minimum Unique Word Abbreviation/0411. Minimum Unique Word Abbreviation.md",
    "Algorithms/0001-1000/0411. Minimum Unique Word Abbreviation/Solution.java",
    "Algorithms/0001-1000/0412. Fizz Buzz",
    "Algorithms/0001-1000/0412. Fizz Buzz/0412. Fizz Buzz.md",
    "Algorithms/0001-1000/0412. Fizz Buzz/Solution.java",
    "Algorithms/0001-1000/0413. Arithmetic Slices",
    "Algorithms/0001-1000/0413. Arithmetic Slices/0413. Arithmetic Slices.md",
    "Algorithms/0001-1000/0413. Arithmetic Slices/Solution.java",
    "Algorithms/0001-1000/0414. Third Maximum Number",
    "Algorithms/0001-1000/0414. Third Maximum Number/0414. Third Maximum Number.md",
    "Algorithms/0001-1000/0414. Third Maximum Number/Solution.java",
    "Algorithms/0001-1000/0415. Add Strings",
    "Algorithms/0001-1000/0415. Add Strings/0415. Add Strings.md",
    "Algorithms/0001-1000/0415. Add Strings/Solution.java",
    "Algorithms/0001-1000/0416. Partition Equal Subset Sum",
    "Algorithms/0001-1000/0416. Partition Equal Subset Sum/0416. Partition Equal Subset Sum.md",
    "Algorithms/0001-1000/0416. Partition Equal Subset Sum/Solution.java",
    "Algorithms/0001-1000/0417. Pacific Atlantic Water Flow",
    "Algorithms/0001-1000/0417. Pacific Atlantic Water Flow/0417. Pacific Atlantic Water Flow.md",
    "Algorithms/0001-1000/0417. Pacific Atlantic Water Flow/Solution.java",
    "Algorithms/0001-1000/0418. Sentence Screen Fitting",
    "Algorithms/0001-1000/0418. Sentence Screen Fitting/0418. Sentence Screen Fitting.md",
    "Algorithms/0001-1000/0418. Sentence Screen Fitting/Solution.java",
    "Algorithms/0001-1000/0419. Battleships in a Board",
    "Algorithms/0001-1000/0419. Battleships in a Board/0419. Battleships in a Board.md",
    "Algorithms/0001-1000/0419. Battleships in a Board/Solution.java",
    "Algorithms/0001-1000/0420. Strong Password Checker",
    "Algorithms/0001-1000/0420. Strong Password Checker/0420. Strong Password Checker.md",
    "Algorithms/0001-1000/0420. Strong Password Checker/Solution.java",
    "Algorithms/0001-1000/0421. Maximum XOR of Two Numbers in an Array",
    "Algorithms/0001-1000/0421. Maximum XOR of Two Numbers in an Array/0421. Maximum XOR of Two Numbers in an Array.md",
    "Algorithms/0001-1000/0421. Maximum XOR of Two Numbers in an Array/Solution.java",
    "Algorithms/0001-1000/0422. Valid Word Square",
    "Algorithms/0001-1000/0422. Valid Word Square/0422. Valid Word Square.md",
    "Algorithms/0001-1000/0422. Valid Word Square/Solution.java",
    "Algorithms/0001-1000/0423. Reconstruct Original Digits from English",
    "Algorithms/0001-1000/0423. Reconstruct Original Digits from English/0423. Reconstruct Original Digits from English.md",
    "Algorithms/0001-1000/0423. Reconstruct Original Digits from English/Solution.java",
    "Algorithms/0001-1000/0424. Longest Repeating Character Replacement",
    "Algorithms/0001-1000/0424. Longest Repeating Character Replacement/0424. Longest Repeating Character Replacement.md",
    "Algorithms/0001-1000/0424. Longest Repeating Character Replacement/Solution.java",
    "Algorithms/0001-1000/0425. Word Squares",
    "Algorithms/0001-1000/0425. Word Squares/0425. Word Squares.md",
    "Algorithms/0001-1000/0425. Word Squares/Solution.java",
    "Algorithms/0001-1000/0426. Convert Binary Search Tree to Sorted Doubly Linked List",
    "Algorithms/0001-1000/0426. Convert Binary Search Tree to Sorted Doubly Linked List/0426. Convert Binary Search Tree to Sorted Doubly Linked List.md",
    "Algorithms/0001-1000/0426. Convert Binary Search Tree to Sorted Doubly Linked List/Solution.java",
    "Algorithms/0001-1000/0427. Construct Quad Tree",
    "Algorithms/0001-1000/0427. Construct Quad Tree/0427. Construct Quad Tree.md",
    "Algorithms/0001-1000/0427. Construct Quad Tree/Solution.java",
    "Algorithms/0001-1000/0428. Serialize and Deserialize N-ary Tree",
    "Algorithms/0001-1000/0428. Serialize and Deserialize N-ary Tree/0428. Serialize and Deserialize N-ary Tree.md",
    "Algorithms/0001-1000/0428. Serialize and Deserialize N-ary Tree/Codec.java",
    "Algorithms/0001-1000/0429. N-ary Tree Level Order Traversal",
    "Algorithms/0001-1000/0429. N-ary Tree Level Order Traversal/0429. N-ary Tree Level Order Traversal.md",
    "Algorithms/0001-1000/0429. N-ary Tree Level Order Traversal/Solution.java",
    "Algorithms/0001-1000/0430. Flatten a Multilevel Doubly Linked List",
    "Algorithms/0001-1000/0430. Flatten a Multilevel Doubly Linked List/0430. Flatten a Multilevel Doubly Linked List.md",
    "Algorithms/0001-1000/0430. Flatten a Multilevel Doubly Linked List/Solution.java",
    "Algorithms/0001-1000/0431. Encode N-ary Tree to Binary Tree",
    "Algorithms/0001-1000/0431. Encode N-ary Tree to Binary Tree/0431. Encode N-ary Tree to Binary Tree.md",
    "Algorithms/0001-1000/0431. Encode N-ary Tree to Binary Tree/Codec.java",
    "Algorithms/0001-1000/0432. All O`one Data Structure",
    "Algorithms/0001-1000/0432. All O`one Data Structure/0432. All O`one Data Structure.md",
    "Algorithms/0001-1000/0432. All O`one Data Structure/AllOne.java",
    "Algorithms/0001-1000/0433. Minimum Genetic Mutation",
    "Algorithms/0001-1000/0433. Minimum Genetic Mutation/0433. Minimum Genetic Mutation.md",
    "Algorithms/0001-1000/0433. Minimum Genetic Mutation/Solution.java",
    "Algorithms/0001-1000/0434. Number of Segments in a String",
    "Algorithms/0001-1000/0434. Number of Segments in a String/0434. Number of Segments in a String.md",
    "Algorithms/0001-1000/0434. Number of Segments in a String/Solution.java",
    "Algorithms/0001-1000/0435. Non-overlapping Intervals",
    "Algorithms/0001-1000/0435. Non-overlapping Intervals/0435. Non-overlapping Intervals.md",
    "Algorithms/0001-1000/0435. Non-overlapping Intervals/Solution.java",
    "Algorithms/0001-1000/0436. Find Right Interval",
    "Algorithms/0001-1000/0436. Find Right Interval/0436. Find Right Interval.md",
    "Algorithms/0001-1000/0436. Find Right Interval/Solution.java",
    "Algorithms/0001-1000/0437. Path Sum III",
    "Algorithms/0001-1000/0437. Path Sum III/0437. Path Sum III.md",
    "Algorithms/0001-1000/0437. Path Sum III/Solution.java",
    "Algorithms/0001-1000/0438. Find All Anagrams in a String",
    "Algorithms/0001-1000/0438. Find All Anagrams in a String/0438. Find All Anagrams in a String.md",
    "Algorithms/0001-1000/0438. Find All Anagrams in a String/Solution.java",
    "Algorithms/0001-1000/0439. Ternary Expression Parser",
    "Algorithms/0001-1000/0439. Ternary Expression Parser/0439. Ternary Expression Parser.md",
    "Algorithms/0001-1000/0439. Ternary Expression Parser/Solution.java",
    "Algorithms/0001-1000/0440. K-th Smallest in Lexicographical Order",
    "Algorithms/0001-1000/0440. K-th Smallest in Lexicographical Order/0440. K-th Smallest in Lexicographical Order.md",
    "Algorithms/0001-1000/0440. K-th Smallest in Lexicographical Order/Solution.java",
    "Algorithms/0001-1000/0441. Arranging Coins",
    "Algorithms/0001-1000/0441. Arranging Coins/0441. Arranging Coins.md",
    "Algorithms/0001-1000/0441. Arranging Coins/Solution.java",
    "Algorithms/0001-1000/0442. Find All Duplicates in an Array",
    "Algorithms/0001-1000/0442. Find All Duplicates in an Array/0442. Find All Duplicates in an Array.md",
    "Algorithms/0001-1000/0442. Find All Duplicates in an Array/Solution.java",
    "Algorithms/0001-1000/0443. String Compression",
    "Algorithms/0001-1000/0443. String Compression/0443. String Compression.md",
    "Algorithms/0001-1000/0443. String Compression/Solution.java",
    "Algorithms/0001-1000/0444. Sequence Reconstruction",
    "Algorithms/0001-1000/0444. Sequence Reconstruction/0444. Sequence Reconstruction.md",
    "Algorithms/0001-1000/0444. Sequence Reconstruction/Solution.java",
    "Algorithms/0001-1000/0445. Add Two Numbers II",
    "Algorithms/0001-1000/0445. Add Two Numbers II/0445. Add Two Numbers II.md",
    "Algorithms/0001-1000/0445. Add Two Numbers II/Solution.java",
    "Algorithms/0001-1000/0446. Arithmetic Slices II - Subsequence",
    "Algorithms/0001-1000/0446. Arithmetic Slices II - Subsequence/0446. Arithmetic Slices II - Subsequence.md",
    "Algorithms/0001-1000/0446. Arithmetic Slices II - Subsequence/Solution.java",
    "Algorithms/0001-1000/0447. Number of Boomerangs",
    "Algorithms/0001-1000/0447. Number of Boomerangs/0447. Number of Boomerangs.md",
    "Algorithms/0001-1000/0447. Number of Boomerangs/Solution.java",
    "Algorithms/0001-1000/0448. Find All Numbers Disappeared in an Array",
    "Algorithms/0001-1000/0448. Find All Numbers Disappeared in an Array/0448. Find All Numbers Disappeared in an Array.md",
    "Algorithms/0001-1000/0448. Find All Numbers Disappeared in an Array/Solution.java",
    "Algorithms/0001-1000/0449. Serialize and Deserialize BST",
    "Algorithms/0001-1000/0449. Serialize and Deserialize BST/0449. Serialize and Deserialize BST.md",
    "Algorithms/0001-1000/0449. Serialize and Deserialize BST/Codec.java",
    "Algorithms/0001-1000/0450. Delete Node in a BST",
    "Algorithms/0001-1000/0450. Delete Node in a BST/0450. Delete Node in a BST.md",
    "Algorithms/0001-1000/0450. Delete Node in a BST/Solution.java",
    "Algorithms/0001-1000/0451. Sort Characters By Frequency",
    "Algorithms/0001-1000/0451. Sort Characters By Frequency/0451. Sort Characters By Frequency.md",
    "Algorithms/0001-1000/0451. Sort Characters By Frequency/Solution.java",
    "Algorithms/0001-1000/0452. Minimum Number of Arrows to Burst Balloons",
    "Algorithms/0001-1000/0452. Minimum Number of Arrows to Burst Balloons/0452. Minimum Number of Arrows to Burst Balloons.md",
    "Algorithms/0001-1000/0452. Minimum Number of Arrows to Burst Balloons/Solution.java",
    "Algorithms/0001-1000/0453. Minimum Moves to Equal Array Elements",
    "Algorithms/0001-1000/0453. Minimum Moves to Equal Array Elements/0453. Minimum Moves to Equal Array Elements.md",
    "Algorithms/0001-1000/0453. Minimum Moves to Equal Array Elements/Solution.java",
    "Algorithms/0001-1000/0454. 4Sum II",
    "Algorithms/0001-1000/0454. 4Sum II/0454. 4Sum II.md",
    "Algorithms/0001-1000/0454. 4Sum II/Solution.java",
    "Algorithms/0001-1000/0455. Assign Cookies",
    "Algorithms/0001-1000/0455. Assign Cookies/0455. Assign Cookies.md",
    "Algorithms/0001-1000/0455. Assign Cookies/Solution.java",
    "Algorithms/0001-1000/0456. 132 Pattern",
    "Algorithms/0001-1000/0456. 132 Pattern/0456. 132 Pattern.md",
    "Algorithms/0001-1000/0456. 132 Pattern/Solution.java",
    "Algorithms/0001-1000/0457. Circular Array Loop",
    "Algorithms/0001-1000/0457. Circular Array Loop/0457. Circular Array Loop.md",
    "Algorithms/0001-1000/0457. Circular Array Loop/Solution.java",
    "Algorithms/0001-1000/0458. Poor Pigs",
    "Algorithms/0001-1000/0458. Poor Pigs/0458. Poor Pigs.md",
    "Algorithms/0001-1000/0458. Poor Pigs/Solution.java",
    "Algorithms/0001-1000/0459. Repeated Substring Pattern",
    "Algorithms/0001-1000/0459. Repeated Substring Pattern/0459. Repeated Substring Pattern.md",
    "Algorithms/0001-1000/0459. Repeated Substring Pattern/Solution.java",
    "Algorithms/0001-1000/0460. LFU Cache",
    "Algorithms/0001-1000/0460. LFU Cache/0460. LFU Cache.md",
    "Algorithms/0001-1000/0460. LFU Cache/LFUCache.java",
    "Algorithms/0001-1000/0461. Hamming Distance",
    "Algorithms/0001-1000/0461. Hamming Distance/0461. Hamming Distance.md",
    "Algorithms/0001-1000/0461. Hamming Distance/Solution.java",
    "Algorithms/0001-1000/0462. Minimum Moves to Equal Array Elements II",
    "Algorithms/0001-1000/0462. Minimum Moves to Equal Array Elements II/462. Minimum Moves to Equal Array Elements II.md",
    "Algorithms/0001-1000/0462. Minimum Moves to Equal Array Elements II/Solution.java",
    "Algorithms/0001-1000/0463. Island Perimeter",
    "Algorithms/0001-1000/0463. Island Perimeter/0463. Island Perimeter.md",
    "Algorithms/0001-1000/0463. Island Perimeter/Solution.java",
    "Algorithms/0001-1000/0464. Can I Win",
    "Algorithms/0001-1000/0464. Can I Win/0464. Can I Win.md",
    "Algorithms/0001-1000/0464. Can I Win/Solution.java",
    "Algorithms/0001-1000/0465. Optimal Account Balancing",
    "Algorithms/0001-1000/0465. Optimal Account Balancing/0465. Optimal Account Balancing.md",
    "Algorithms/0001-1000/0465. Optimal Account Balancing/Solution.java",
    "Algorithms/0001-1000/0466. Count The Repetitions",
    "Algorithms/0001-1000/0466. Count The Repetitions/0466. Count The Repetitions.md",
    "Algorithms/0001-1000/0466. Count The Repetitions/Solution.java",
    "Algorithms/0001-1000/0467. Unique Substrings in Wraparound String",
    "Algorithms/0001-1000/0467. Unique Substrings in Wraparound String/0467. Unique Substrings in Wraparound String.md",
    "Algorithms/0001-1000/0467. Unique Substrings in Wraparound String/Solution.java",
    "Algorithms/0001-1000/0468. Validate IP Address",
    "Algorithms/0001-1000/0468. Validate IP Address/0468. Validate IP Address.md",
    "Algorithms/0001-1000/0468. Validate IP Address/Solution.java",
    "Algorithms/0001-1000/0469. Convex Polygon",
    "Algorithms/0001-1000/0469. Convex Polygon/0469. Convex Polygon.md",
    "Algorithms/0001-1000/0469. Convex Polygon/Solution.java",
    "Algorithms/0001-1000/0470. Implement Rand10() Using Rand7()",
    "Algorithms/0001-1000/0470. Implement Rand10() Using Rand7()/0470. Implement Rand10() Using Rand7().md",
    "Algorithms/0001-1000/0470. Implement Rand10() Using Rand7()/Solution.java",
    "Algorithms/0001-1000/0471. Encode String with Shortest Length",
    "Algorithms/0001-1000/0471. Encode String with Shortest Length/0471. Encode String with Shortest Length.md",
    "Algorithms/0001-1000/0471. Encode String with Shortest Length/Solution.java",
    "Algorithms/0001-1000/0472. Concatenated Words",
    "Algorithms/0001-1000/0472. Concatenated Words/0472. Concatenated Words.md",
    "Algorithms/0001-1000/0472. Concatenated Words/Solution.java",
    "Algorithms/0001-1000/0473. Matchsticks to Square",
    "Algorithms/0001-1000/0473. Matchsticks to Square/0473. Matchsticks to Square.md",
    "Algorithms/0001-1000/0473. Matchsticks to Square/Solution.java",
    "Algorithms/0001-1000/0474. Ones and Zeroes",
    "Algorithms/0001-1000/0474. Ones and Zeroes/0474. Ones and Zeroes.md",
    "Algorithms/0001-1000/0474. Ones and Zeroes/Solution.java",
    "Algorithms/0001-1000/0475. Heaters",
    "Algorithms/0001-1000/0475. Heaters/0475. Heaters.md",
    "Algorithms/0001-1000/0475. Heaters/Solution.java",
    "Algorithms/0001-1000/0476. Number Complement",
    "Algorithms/0001-1000/0476. Number Complement/0476. Number Complement.md",
    "Algorithms/0001-1000/0476. Number Complement/Solution.java",
    "Algorithms/0001-1000/0477. Total Hamming Distance",
    "Algorithms/0001-1000/0477. Total Hamming Distance/0477. Total Hamming Distance.md",
    "Algorithms/0001-1000/0477. Total Hamming Distance/Solution.java",
    "Algorithms/0001-1000/0478. Generate Random Point in a Circle",
    "Algorithms/0001-1000/0478. Generate Random Point in a Circle/0478. Generate Random Point in a Circle.md",
    "Algorithms/0001-1000/0478. Generate Random Point in a Circle/Solution.java",
    "Algorithms/0001-1000/0479. Largest Palindrome Product",
    "Algorithms/0001-1000/0479. Largest Palindrome Product/0479. Largest Palindrome Product.md",
    "Algorithms/0001-1000/0479. Largest Palindrome Product/Solution.java",
    "Algorithms/0001-1000/0480. Sliding Window Median",
    "Algorithms/0001-1000/0480. Sliding Window Median/0480. Sliding Window Median.md",
    "Algorithms/0001-1000/0480. Sliding Window Median/Solution.java",
    "Algorithms/0001-1000/0481. Magical String",
    "Algorithms/0001-1000/0481. Magical String/0481. Magical String.md",
    "Algorithms/0001-1000/0481. Magical String/Solution.java",
    "Algorithms/0001-1000/0482. License Key Formatting",
    "Algorithms/0001-1000/0482. License Key Formatting/0482. License Key Formatting.md",
    "Algorithms/0001-1000/0482. License Key Formatting/Solution.java",
    "Algorithms/0001-1000/0483. Smallest Good Base",
    "Algorithms/0001-1000/0483. Smallest Good Base/0483. Smallest Good Base.md",
    "Algorithms/0001-1000/0483. Smallest Good Base/Solution.java",
    "Algorithms/0001-1000/0484. Find Permutation",
    "Algorithms/0001-1000/0484. Find Permutation/0484. Find Permutation.md",
    "Algorithms/0001-1000/0484. Find Permutation/Solution.java",
    "Algorithms/0001-1000/0485. Max Consecutive Ones",
    "Algorithms/0001-1000/0485. Max Consecutive Ones/0485. Max Consecutive Ones.md",
    "Algorithms/0001-1000/0485. Max Consecutive Ones/Solution.java",
    "Algorithms/0001-1000/0486. Predict the Winner",
    "Algorithms/0001-1000/0486. Predict the Winner/0486. Predict the Winner.md",
    "Algorithms/0001-1000/0486. Predict the Winner/Solution.java",
    "Algorithms/0001-1000/0487. Max Consecutive Ones II",
    "Algorithms/0001-1000/0487. Max Consecutive Ones II/0487. Max Consecutive Ones II.md",
    "Algorithms/0001-1000/0487. Max Consecutive Ones II/Solution.java",
    "Algorithms/0001-1000/0488. Zuma Game",
    "Algorithms/0001-1000/0488. Zuma Game/0488. Zuma Game.md",
    "Algorithms/0001-1000/0488. Zuma Game/Solution.java",
    "Algorithms/0001-1000/0489. Robot Room Cleaner",
    "Algorithms/0001-1000/0489. Robot Room Cleaner/0489. Robot Room Cleaner.md",
    "Algorithms/0001-1000/0489. Robot Room Cleaner/Solution.java",
    "Algorithms/0001-1000/0490. The Maze",
    "Algorithms/0001-1000/0490. The Maze/0490. The Maze.md",
    "Algorithms/0001-1000/0490. The Maze/Solution.java",
    "Algorithms/0001-1000/0491. Increasing Subsequences",
    "Algorithms/0001-1000/0491. Increasing Subsequences/0491. Increasing Subsequences.md",
    "Algorithms/0001-1000/0491. Increasing Subsequences/Solution.java",
    "Algorithms/0001-1000/0492. Construct the Rectangle",
    "Algorithms/0001-1000/0492. Construct the Rectangle/0492. Construct the Rectangle.md",
    "Algorithms/0001-1000/0492. Construct the Rectangle/Solution.java",
    "Algorithms/0001-1000/0493. Reverse Pairs",
    "Algorithms/0001-1000/0493. Reverse Pairs/0493. Reverse Pairs.md",
    "Algorithms/0001-1000/0493. Reverse Pairs/Solution.java",
    "Algorithms/0001-1000/0494. Target Sum",
    "Algorithms/0001-1000/0494. Target Sum/0494. Target Sum.md",
    "Algorithms/0001-1000/0494. Target Sum/Solution.java",
    "Algorithms/0001-1000/0495. Teemo Attacking",
    "Algorithms/0001-1000/0495. Teemo Attacking/0495. Teemo Attacking.md",
    "Algorithms/0001-1000/0495. Teemo Attacking/Solution.java",
    "Algorithms/0001-1000/0496. Next Greater Element I",
    "Algorithms/0001-1000/0496. Next Greater Element I/0496. Next Greater Element I.md",
    "Algorithms/0001-1000/0496. Next Greater Element I/Solution.java",
    "Algorithms/0001-1000/0497. Random Point in Non-overlapping Rectangles",
    "Algorithms/0001-1000/0497. Random Point in Non-overlapping Rectangles/0497. Random Point in Non-overlapping Rectangles.md",
    "Algorithms/0001-1000/0497. Random Point in Non-overlapping Rectangles/Solution.java",
    "Algorithms/0001-1000/0498. Diagonal Traverse",
    "Algorithms/0001-1000/0498. Diagonal Traverse/0498. Diagonal Traverse.md",
    "Algorithms/0001-1000/0498. Diagonal Traverse/Solution.java",
    "Algorithms/0001-1000/0499. The Maze III",
    "Algorithms/0001-1000/0499. The Maze III/0499. The Maze III.md",
    "Algorithms/0001-1000/0499. The Maze III/Solution.java",
    "Algorithms/0001-1000/0500. Keyboard Row",
    "Algorithms/0001-1000/0500. Keyboard Row/0500. Keyboard Row.md",
    "Algorithms/0001-1000/0500. Keyboard Row/Solution.java",
    "Algorithms/0001-1000/0501. Find Mode in Binary Search Tree",
    "Algorithms/0001-1000/0501. Find Mode in Binary Search Tree/0501. Find Mode in Binary Search Tree.md",
    "Algorithms/0001-1000/0501. Find Mode in Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0502. IPO",
    "Algorithms/0001-1000/0502. IPO/0502. IPO.md",
    "Algorithms/0001-1000/0502. IPO/Solution.java",
    "Algorithms/0001-1000/0503. Next Greater Element II",
    "Algorithms/0001-1000/0503. Next Greater Element II/0503. Next Greater Element II.md",
    "Algorithms/0001-1000/0503. Next Greater Element II/Solution.java",
    "Algorithms/0001-1000/0504. Base 7",
    "Algorithms/0001-1000/0504. Base 7/0504. Base 7.md",
    "Algorithms/0001-1000/0504. Base 7/Solution.java",
    "Algorithms/0001-1000/0505. The Maze II",
    "Algorithms/0001-1000/0505. The Maze II/0505. The Maze II.md",
    "Algorithms/0001-1000/0505. The Maze II/Solution.java",
    "Algorithms/0001-1000/0506. Relative Ranks",
    "Algorithms/0001-1000/0506. Relative Ranks/0506. Relative Ranks.md",
    "Algorithms/0001-1000/0506. Relative Ranks/Solution.java",
    "Algorithms/0001-1000/0507. Perfect Number",
    "Algorithms/0001-1000/0507. Perfect Number/0507. Perfect Number.md",
    "Algorithms/0001-1000/0507. Perfect Number/Solution.java",
    "Algorithms/0001-1000/0508. Most Frequent Subtree Sum",
    "Algorithms/0001-1000/0508. Most Frequent Subtree Sum/0508. Most Frequent Subtree Sum.md",
    "Algorithms/0001-1000/0508. Most Frequent Subtree Sum/Solution.java",
    "Algorithms/0001-1000/0509. Fibonacci Number",
    "Algorithms/0001-1000/0509. Fibonacci Number/0509. Fibonacci Number.md",
    "Algorithms/0001-1000/0509. Fibonacci Number/Solution.java",
    "Algorithms/0001-1000/0510. Inorder Successor in BST II",
    "Algorithms/0001-1000/0510. Inorder Successor in BST II/0510. Inorder Successor in BST II.md",
    "Algorithms/0001-1000/0510. Inorder Successor in BST II/Solution.java",
    "Algorithms/0001-1000/0513. Find Bottom Left Tree Value",
    "Algorithms/0001-1000/0513. Find Bottom Left Tree Value/0513. Find Bottom Left Tree Value.md",
    "Algorithms/0001-1000/0513. Find Bottom Left Tree Value/Solution.java",
    "Algorithms/0001-1000/0514. Freedom Trail",
    "Algorithms/0001-1000/0514. Freedom Trail/0514. Freedom Trail.md",
    "Algorithms/0001-1000/0514. Freedom Trail/Solution.java",
    "Algorithms/0001-1000/0515. Find Largest Value in Each Tree Row",
    "Algorithms/0001-1000/0515. Find Largest Value in Each Tree Row/0515. Find Largest Value in Each Tree Row.md",
    "Algorithms/0001-1000/0515. Find Largest Value in Each Tree Row/Solution.java",
    "Algorithms/0001-1000/0516. Longest Palindromic Subsequence",
    "Algorithms/0001-1000/0516. Longest Palindromic Subsequence/0516. Longest Palindromic Subsequence.md",
    "Algorithms/0001-1000/0516. Longest Palindromic Subsequence/Solution.java",
    "Algorithms/0001-1000/0517. Super Washing Machines",
    "Algorithms/0001-1000/0517. Super Washing Machines/0517. Super Washing Machines.md",
    "Algorithms/0001-1000/0517. Super Washing Machines/Solution.java",
    "Algorithms/0001-1000/0518. Coin Change 2",
    "Algorithms/0001-1000/0518. Coin Change 2/0518. Coin Change 2.md",
    "Algorithms/0001-1000/0518. Coin Change 2/Solution.java",
    "Algorithms/0001-1000/0519. Random Flip Matrix",
    "Algorithms/0001-1000/0519. Random Flip Matrix/0519. Random Flip Matrix.md",
    "Algorithms/0001-1000/0519. Random Flip Matrix/Solution.java",
    "Algorithms/0001-1000/0520. Detect Capital",
    "Algorithms/0001-1000/0520. Detect Capital/0520. Detect Capital.md",
    "Algorithms/0001-1000/0520. Detect Capital/Solution.java",
    "Algorithms/0001-1000/0521. Longest Uncommon Subsequence I",
    "Algorithms/0001-1000/0521. Longest Uncommon Subsequence I/0521. Longest Uncommon Subsequence I.md",
    "Algorithms/0001-1000/0521. Longest Uncommon Subsequence I/Solution.java",
    "Algorithms/0001-1000/0522. Longest Uncommon Subsequence II",
    "Algorithms/0001-1000/0522. Longest Uncommon Subsequence II/0522. Longest Uncommon Subsequence II.md",
    "Algorithms/0001-1000/0522. Longest Uncommon Subsequence II/Solution.java",
    "Algorithms/0001-1000/0523. Continuous Subarray Sum",
    "Algorithms/0001-1000/0523. Continuous Subarray Sum/0523. Continuous Subarray Sum.md",
    "Algorithms/0001-1000/0523. Continuous Subarray Sum/Solution.java",
    "Algorithms/0001-1000/0524. Longest Word in Dictionary through Deleting",
    "Algorithms/0001-1000/0524. Longest Word in Dictionary through Deleting/0524. Longest Word in Dictionary through Deleting.md",
    "Algorithms/0001-1000/0524. Longest Word in Dictionary through Deleting/Solution.java",
    "Algorithms/0001-1000/0525. Contiguous Array",
    "Algorithms/0001-1000/0525. Contiguous Array/0525. Contiguous Array.md",
    "Algorithms/0001-1000/0525. Contiguous Array/Solution.java",
    "Algorithms/0001-1000/0526. Beautiful Arrangement",
    "Algorithms/0001-1000/0526. Beautiful Arrangement/0526. Beautiful Arrangement.md",
    "Algorithms/0001-1000/0526. Beautiful Arrangement/Solution.java",
    "Algorithms/0001-1000/0527. Word Abbreviation",
    "Algorithms/0001-1000/0527. Word Abbreviation/0527. Word Abbreviation.md",
    "Algorithms/0001-1000/0527. Word Abbreviation/Solution.java",
    "Algorithms/0001-1000/0528. Random Pick with Weight",
    "Algorithms/0001-1000/0528. Random Pick with Weight/0528. Random Pick with Weight.md",
    "Algorithms/0001-1000/0528. Random Pick with Weight/Solution.java",
    "Algorithms/0001-1000/0529. Minesweeper",
    "Algorithms/0001-1000/0529. Minesweeper/0529. Minesweeper.md",
    "Algorithms/0001-1000/0529. Minesweeper/Solution.java",
    "Algorithms/0001-1000/0530. Minimum Absolute Difference in BST",
    "Algorithms/0001-1000/0530. Minimum Absolute Difference in BST/0530. Minimum Absolute Difference in BST.md",
    "Algorithms/0001-1000/0530. Minimum Absolute Difference in BST/Solution.java",
    "Algorithms/0001-1000/0531. Lonely Pixel I",
    "Algorithms/0001-1000/0531. Lonely Pixel I/0531. Lonely Pixel I.md",
    "Algorithms/0001-1000/0531. Lonely Pixel I/Solution.java",
    "Algorithms/0001-1000/0532. K-diff Pairs in an Array",
    "Algorithms/0001-1000/0532. K-diff Pairs in an Array/0532. K-diff Pairs in an Array.md",
    "Algorithms/0001-1000/0532. K-diff Pairs in an Array/Solution.java",
    "Algorithms/0001-1000/0533. Lonely Pixel II",
    "Algorithms/0001-1000/0533. Lonely Pixel II/0533. Lonely Pixel II.md",
    "Algorithms/0001-1000/0533. Lonely Pixel II/Solution.java",
    "Algorithms/0001-1000/0535. Encode and Decode TinyURL",
    "Algorithms/0001-1000/0535. Encode and Decode TinyURL/0535. Encode and Decode TinyURL.md",
    "Algorithms/0001-1000/0535. Encode and Decode TinyURL/Codec.java",
    "Algorithms/0001-1000/0536. Construct Binary Tree from String",
    "Algorithms/0001-1000/0536. Construct Binary Tree from String/0536. Construct Binary Tree from String.md",
    "Algorithms/0001-1000/0536. Construct Binary Tree from String/Solution.java",
    "Algorithms/0001-1000/0537. Complex Number Multiplication",
    "Algorithms/0001-1000/0537. Complex Number Multiplication/0537. Complex Number Multiplication.md",
    "Algorithms/0001-1000/0537. Complex Number Multiplication/Solution.java",
    "Algorithms/0001-1000/0538. Convert BST to Greater Tree",
    "Algorithms/0001-1000/0538. Convert BST to Greater Tree/0538. Convert BST to Greater Tree.md",
    "Algorithms/0001-1000/0538. Convert BST to Greater Tree/Solution.java",
    "Algorithms/0001-1000/0539. Minimum Time Difference",
    "Algorithms/0001-1000/0539. Minimum Time Difference/0539. Minimum Time Difference.md",
    "Algorithms/0001-1000/0539. Minimum Time Difference/Solution.java",
    "Algorithms/0001-1000/0540. Single Element in a Sorted Array",
    "Algorithms/0001-1000/0540. Single Element in a Sorted Array/0540. Single Element in a Sorted Array.md",
    "Algorithms/0001-1000/0540. Single Element in a Sorted Array/Solution.java",
    "Algorithms/0001-1000/0541. Reverse String II",
    "Algorithms/0001-1000/0541. Reverse String II/0541. Reverse String II.md",
    "Algorithms/0001-1000/0541. Reverse String II/Solution.java",
    "Algorithms/0001-1000/0542. 01 Matrix",
    "Algorithms/0001-1000/0542. 01 Matrix/0542. 01 Matrix.md",
    "Algorithms/0001-1000/0542. 01 Matrix/Solution.java",
    "Algorithms/0001-1000/0543. Diameter of Binary Tree",
    "Algorithms/0001-1000/0543. Diameter of Binary Tree/0543. Diameter of Binary Tree.md",
    "Algorithms/0001-1000/0543. Diameter of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0544. Output Contest Matches",
    "Algorithms/0001-1000/0544. Output Contest Matches/0544. Output Contest Matches.md",
    "Algorithms/0001-1000/0544. Output Contest Matches/Solution.java",
    "Algorithms/0001-1000/0545. Boundary of Binary Tree",
    "Algorithms/0001-1000/0545. Boundary of Binary Tree/0545. Boundary of Binary Tree.md",
    "Algorithms/0001-1000/0545. Boundary of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0546. Remove Boxes",
    "Algorithms/0001-1000/0546. Remove Boxes/0546. Remove Boxes.md",
    "Algorithms/0001-1000/0546. Remove Boxes/Solution.java",
    "Algorithms/0001-1000/0547. Friend Circles",
    "Algorithms/0001-1000/0547. Friend Circles/0547. Friend Circles.md",
    "Algorithms/0001-1000/0547. Friend Circles/Solution.java",
    "Algorithms/0001-1000/0548. Split Array with Equal Sum",
    "Algorithms/0001-1000/0548. Split Array with Equal Sum/0548. Split Array with Equal Sum.md",
    "Algorithms/0001-1000/0548. Split Array with Equal Sum/Solution.java",
    "Algorithms/0001-1000/0549. Binary Tree Longest Consecutive Sequence II",
    "Algorithms/0001-1000/0549. Binary Tree Longest Consecutive Sequence II/0549. Binary Tree Longest Consecutive Sequence II.md",
    "Algorithms/0001-1000/0549. Binary Tree Longest Consecutive Sequence II/Solution.java",
    "Algorithms/0001-1000/0551. Student Attendance Record I",
    "Algorithms/0001-1000/0551. Student Attendance Record I/0551. Student Attendance Record I.md",
    "Algorithms/0001-1000/0551. Student Attendance Record I/Solution.java",
    "Algorithms/0001-1000/0552. Student Attendance Record II",
    "Algorithms/0001-1000/0552. Student Attendance Record II/0552. Student Attendance Record II.md",
    "Algorithms/0001-1000/0552. Student Attendance Record II/Solution.java",
    "Algorithms/0001-1000/0553. Optimal Division",
    "Algorithms/0001-1000/0553. Optimal Division/0553. Optimal Division.md",
    "Algorithms/0001-1000/0553. Optimal Division/Solution.java",
    "Algorithms/0001-1000/0554. Brick Wall",
    "Algorithms/0001-1000/0554. Brick Wall/0554. Brick Wall.md",
    "Algorithms/0001-1000/0554. Brick Wall/Solution.java",
    "Algorithms/0001-1000/0555. Split Concatenated Strings",
    "Algorithms/0001-1000/0555. Split Concatenated Strings/0555. Split Concatenated Strings.md",
    "Algorithms/0001-1000/0555. Split Concatenated Strings/Solution.java",
    "Algorithms/0001-1000/0556. Next Greater Element III",
    "Algorithms/0001-1000/0556. Next Greater Element III/0556. Next Greater Element III.md",
    "Algorithms/0001-1000/0556. Next Greater Element III/Solution.java",
    "Algorithms/0001-1000/0557. Reverse Words in a String III",
    "Algorithms/0001-1000/0557. Reverse Words in a String III/0557. Reverse Words in a String III.md",
    "Algorithms/0001-1000/0557. Reverse Words in a String III/Solution.java",
    "Algorithms/0001-1000/0558. Quad Tree Intersection",
    "Algorithms/0001-1000/0558. Quad Tree Intersection/0558. Quad Tree Intersection.md",
    "Algorithms/0001-1000/0558. Quad Tree Intersection/Solution.java",
    "Algorithms/0001-1000/0559. Maximum Depth of N-ary Tree",
    "Algorithms/0001-1000/0559. Maximum Depth of N-ary Tree/0559. Maximum Depth of N-ary Tree.md",
    "Algorithms/0001-1000/0559. Maximum Depth of N-ary Tree/Solution.java",
    "Algorithms/0001-1000/0560. Subarray Sum Equals K",
    "Algorithms/0001-1000/0560. Subarray Sum Equals K/0560. Subarray Sum Equals K.md",
    "Algorithms/0001-1000/0560. Subarray Sum Equals K/Solution.java",
    "Algorithms/0001-1000/0561. Array Partition I",
    "Algorithms/0001-1000/0561. Array Partition I/0561. Array Partition I.md",
    "Algorithms/0001-1000/0561. Array Partition I/Solution.java",
    "Algorithms/0001-1000/0562. Longest Line of Consecutive One in Matrix",
    "Algorithms/0001-1000/0562. Longest Line of Consecutive One in Matrix/0562. Longest Line of Consecutive One in Matrix.md",
    "Algorithms/0001-1000/0562. Longest Line of Consecutive One in Matrix/Solution.java",
    "Algorithms/0001-1000/0563. Binary Tree Tilt",
    "Algorithms/0001-1000/0563. Binary Tree Tilt/0563. Binary Tree Tilt.md",
    "Algorithms/0001-1000/0563. Binary Tree Tilt/Solution.java",
    "Algorithms/0001-1000/0564. Find the Closest Palindrome",
    "Algorithms/0001-1000/0564. Find the Closest Palindrome/0564. Find the Closest Palindrome.md",
    "Algorithms/0001-1000/0564. Find the Closest Palindrome/Solution.java",
    "Algorithms/0001-1000/0565. Array Nesting",
    "Algorithms/0001-1000/0565. Array Nesting/0565. Array Nesting.md",
    "Algorithms/0001-1000/0565. Array Nesting/Solution.java",
    "Algorithms/0001-1000/0566. Reshape the Matrix",
    "Algorithms/0001-1000/0566. Reshape the Matrix/0566. Reshape the Matrix.md",
    "Algorithms/0001-1000/0566. Reshape the Matrix/Solution.java",
    "Algorithms/0001-1000/0567. Permutation in String",
    "Algorithms/0001-1000/0567. Permutation in String/0567. Permutation in String.md",
    "Algorithms/0001-1000/0567. Permutation in String/Solution.java",
    "Algorithms/0001-1000/0568. Maximum Vacation Days",
    "Algorithms/0001-1000/0568. Maximum Vacation Days/0568. Maximum Vacation Days.md",
    "Algorithms/0001-1000/0568. Maximum Vacation Days/Solution.java",
    "Algorithms/0001-1000/0572. Subtree of Another Tree",
    "Algorithms/0001-1000/0572. Subtree of Another Tree/0572. Subtree of Another Tree.md",
    "Algorithms/0001-1000/0572. Subtree of Another Tree/Solution.java",
    "Algorithms/0001-1000/0573. Squirrel Simulation",
    "Algorithms/0001-1000/0573. Squirrel Simulation/0573. Squirrel Simulation.md",
    "Algorithms/0001-1000/0573. Squirrel Simulation/Solution.java",
    "Algorithms/0001-1000/0575. Distribute Candies",
    "Algorithms/0001-1000/0575. Distribute Candies/0575. Distribute Candies.md",
    "Algorithms/0001-1000/0575. Distribute Candies/Solution.java",
    "Algorithms/0001-1000/0576. Out of Boundary Paths",
    "Algorithms/0001-1000/0576. Out of Boundary Paths/0576. Out of Boundary Paths.md",
    "Algorithms/0001-1000/0576. Out of Boundary Paths/Solution.java",
    "Algorithms/0001-1000/0581. Shortest Unsorted Continuous Subarray",
    "Algorithms/0001-1000/0581. Shortest Unsorted Continuous Subarray/0581. Shortest Unsorted Continuous Subarray.md",
    "Algorithms/0001-1000/0581. Shortest Unsorted Continuous Subarray/Solution.java",
    "Algorithms/0001-1000/0582. Kill Process",
    "Algorithms/0001-1000/0582. Kill Process/0582. Kill Process.md",
    "Algorithms/0001-1000/0582. Kill Process/Solution.java",
    "Algorithms/0001-1000/0583. Delete Operation for Two Strings",
    "Algorithms/0001-1000/0583. Delete Operation for Two Strings/0583. Delete Operation for Two Strings.md",
    "Algorithms/0001-1000/0583. Delete Operation for Two Strings/Solution.java",
    "Algorithms/0001-1000/0587. Erect the Fence",
    "Algorithms/0001-1000/0587. Erect the Fence/0587. Erect the Fence.md",
    "Algorithms/0001-1000/0587. Erect the Fence/Solution.java",
    "Algorithms/0001-1000/0588. Design In-Memory File System",
    "Algorithms/0001-1000/0588. Design In-Memory File System/0588. Design In-Memory File System.md",
    "Algorithms/0001-1000/0588. Design In-Memory File System/FileSystem.java",
    "Algorithms/0001-1000/0589. N-ary Tree Preorder Traversal",
    "Algorithms/0001-1000/0589. N-ary Tree Preorder Traversal/0589. N-ary Tree Preorder Traversal.md",
    "Algorithms/0001-1000/0589. N-ary Tree Preorder Traversal/Solution.java",
    "Algorithms/0001-1000/0590. N-ary Tree Postorder Traversal",
    "Algorithms/0001-1000/0590. N-ary Tree Postorder Traversal/0590. N-ary Tree Postorder Traversal.md",
    "Algorithms/0001-1000/0590. N-ary Tree Postorder Traversal/Solution.java",
    "Algorithms/0001-1000/0591. Tag Validator",
    "Algorithms/0001-1000/0591. Tag Validator/0591. Tag Validator.md",
    "Algorithms/0001-1000/0591. Tag Validator/Solution.java",
    "Algorithms/0001-1000/0592. Fraction Addition and Subtraction",
    "Algorithms/0001-1000/0592. Fraction Addition and Subtraction/0592. Fraction Addition and Subtraction.md",
    "Algorithms/0001-1000/0592. Fraction Addition and Subtraction/Solution.java",
    "Algorithms/0001-1000/0593. Valid Square",
    "Algorithms/0001-1000/0593. Valid Square/0593. Valid Square.md",
    "Algorithms/0001-1000/0593. Valid Square/Solution.java",
    "Algorithms/0001-1000/0594. Longest Harmonious Subsequence",
    "Algorithms/0001-1000/0594. Longest Harmonious Subsequence/0594. Longest Harmonious Subsequence.md",
    "Algorithms/0001-1000/0594. Longest Harmonious Subsequence/Solution.java",
    "Algorithms/0001-1000/0598. Range Addition II",
    "Algorithms/0001-1000/0598. Range Addition II/0598. Range Addition II.md",
    "Algorithms/0001-1000/0598. Range Addition II/Solution.java",
    "Algorithms/0001-1000/0599. Minimum Index Sum of Two Lists",
    "Algorithms/0001-1000/0599. Minimum Index Sum of Two Lists/0599. Minimum Index Sum of Two Lists.md",
    "Algorithms/0001-1000/0599. Minimum Index Sum of Two Lists/Solution.java",
    "Algorithms/0001-1000/0600. Non-negative Integers without Consecutive Ones",
    "Algorithms/0001-1000/0600. Non-negative Integers without Consecutive Ones/0600. Non-negative Integers without Consecutive Ones.md",
    "Algorithms/0001-1000/0600. Non-negative Integers without Consecutive Ones/Solution.java",
    "Algorithms/0001-1000/0604. Design Compressed String Iterator",
    "Algorithms/0001-1000/0604. Design Compressed String Iterator/0604. Design Compressed String Iterator.md",
    "Algorithms/0001-1000/0604. Design Compressed String Iterator/StringIterator.java",
    "Algorithms/0001-1000/0605. Can Place Flowers",
    "Algorithms/0001-1000/0605. Can Place Flowers/0605. Can Place Flowers.md",
    "Algorithms/0001-1000/0605. Can Place Flowers/Solution.java",
    "Algorithms/0001-1000/0606. Construct String from Binary Tree",
    "Algorithms/0001-1000/0606. Construct String from Binary Tree/0606. Construct String from Binary Tree.md",
    "Algorithms/0001-1000/0606. Construct String from Binary Tree/Solution.java",
    "Algorithms/0001-1000/0609. Find Duplicate File in System",
    "Algorithms/0001-1000/0609. Find Duplicate File in System/0609. Find Duplicate File in System.md",
    "Algorithms/0001-1000/0609. Find Duplicate File in System/Solution.java",
    "Algorithms/0001-1000/0611. Valid Triangle Number",
    "Algorithms/0001-1000/0611. Valid Triangle Number/0611. Valid Triangle Number.md",
    "Algorithms/0001-1000/0611. Valid Triangle Number/Solution.java",
    "Algorithms/0001-1000/0616. Add Bold Tag in String",
    "Algorithms/0001-1000/0616. Add Bold Tag in String/0616. Add Bold Tag in String.md",
    "Algorithms/0001-1000/0616. Add Bold Tag in String/Solution.java",
    "Algorithms/0001-1000/0617. Merge Two Binary Trees",
    "Algorithms/0001-1000/0617. Merge Two Binary Trees/0617. Merge Two Binary Trees.md",
    "Algorithms/0001-1000/0617. Merge Two Binary Trees/Solution.java",
    "Algorithms/0001-1000/0621. Task Scheduler",
    "Algorithms/0001-1000/0621. Task Scheduler/0621. Task Scheduler.md",
    "Algorithms/0001-1000/0621. Task Scheduler/Solution.java",
    "Algorithms/0001-1000/0622. Design Circular Queue",
    "Algorithms/0001-1000/0622. Design Circular Queue/0622. Design Circular Queue.md",
    "Algorithms/0001-1000/0622. Design Circular Queue/MyCircularQueue.java",
    "Algorithms/0001-1000/0623. Add One Row to Tree",
    "Algorithms/0001-1000/0623. Add One Row to Tree/0623. Add One Row to Tree.md",
    "Algorithms/0001-1000/0623. Add One Row to Tree/Solution.java",
    "Algorithms/0001-1000/0624. Maximum Distance in Arrays",
    "Algorithms/0001-1000/0624. Maximum Distance in Arrays/0624. Maximum Distance in Arrays.md",
    "Algorithms/0001-1000/0624. Maximum Distance in Arrays/Solution.java",
    "Algorithms/0001-1000/0625. Minimum Factorization",
    "Algorithms/0001-1000/0625. Minimum Factorization/0625. Minimum Factorization.md",
    "Algorithms/0001-1000/0625. Minimum Factorization/Solution.java",
    "Algorithms/0001-1000/0628. Maximum Product of Three Numbers",
    "Algorithms/0001-1000/0628. Maximum Product of Three Numbers/0628. Maximum Product of Three Numbers.md",
    "Algorithms/0001-1000/0628. Maximum Product of Three Numbers/Solution.java",
    "Algorithms/0001-1000/0629. K Inverse Pairs Array",
    "Algorithms/0001-1000/0629. K Inverse Pairs Array/0629. K Inverse Pairs Array.md",
    "Algorithms/0001-1000/0629. K Inverse Pairs Array/Solution.java",
    "Algorithms/0001-1000/0630. Course Schedule III",
    "Algorithms/0001-1000/0630. Course Schedule III/0630. Course Schedule III.md",
    "Algorithms/0001-1000/0630. Course Schedule III/Solution.java",
    "Algorithms/0001-1000/0631. Design Excel Sum Formula",
    "Algorithms/0001-1000/0631. Design Excel Sum Formula/631. Design Excel Sum Formula.md",
    "Algorithms/0001-1000/0631. Design Excel Sum Formula/Excel.java",
    "Algorithms/0001-1000/0632. Smallest Range Covering Elements from K Lists",
    "Algorithms/0001-1000/0632. Smallest Range Covering Elements from K Lists/0632. Smallest Range Covering Elements from K Lists.md",
    "Algorithms/0001-1000/0632. Smallest Range Covering Elements from K Lists/Solution.java",
    "Algorithms/0001-1000/0633. Sum of Square Numbers",
    "Algorithms/0001-1000/0633. Sum of Square Numbers/0633. Sum of Square Numbers.md",
    "Algorithms/0001-1000/0633. Sum of Square Numbers/Solution.java",
    "Algorithms/0001-1000/0634. Find the Derangement of An Array",
    "Algorithms/0001-1000/0634. Find the Derangement of An Array/0634. Find the Derangement of An Array.md",
    "Algorithms/0001-1000/0634. Find the Derangement of An Array/Solution.java",
    "Algorithms/0001-1000/0635. Design Log Storage System",
    "Algorithms/0001-1000/0635. Design Log Storage System/0635. Design Log Storage System.md",
    "Algorithms/0001-1000/0635. Design Log Storage System/LogSystem.java",
    "Algorithms/0001-1000/0636. Exclusive Time of Functions",
    "Algorithms/0001-1000/0636. Exclusive Time of Functions/0636. Exclusive Time of Functions.md",
    "Algorithms/0001-1000/0636. Exclusive Time of Functions/Solution.java",
    "Algorithms/0001-1000/0637. Average of Levels in Binary Tree",
    "Algorithms/0001-1000/0637. Average of Levels in Binary Tree/0637. Average of Levels in Binary Tree.md",
    "Algorithms/0001-1000/0637. Average of Levels in Binary Tree/Solution.java",
    "Algorithms/0001-1000/0638. Shopping Offers",
    "Algorithms/0001-1000/0638. Shopping Offers/0638. Shopping Offers.md",
    "Algorithms/0001-1000/0638. Shopping Offers/Solution.java",
    "Algorithms/0001-1000/0639. Decode Ways II",
    "Algorithms/0001-1000/0639. Decode Ways II/0639. Decode Ways II.md",
    "Algorithms/0001-1000/0639. Decode Ways II/Solution.java",
    "Algorithms/0001-1000/0640. Solve the Equation",
    "Algorithms/0001-1000/0640. Solve the Equation/0640. Solve the Equation.md",
    "Algorithms/0001-1000/0640. Solve the Equation/Solution.java",
    "Algorithms/0001-1000/0641. Design Circular Deque",
    "Algorithms/0001-1000/0641. Design Circular Deque/0641. Design Circular Deque.md",
    "Algorithms/0001-1000/0641. Design Circular Deque/MyCircularDeque.java",
    "Algorithms/0001-1000/0642. Design Search Autocomplete System",
    "Algorithms/0001-1000/0642. Design Search Autocomplete System/0642. Design Search Autocomplete System.md",
    "Algorithms/0001-1000/0642. Design Search Autocomplete System/AutocompleteSystem.java",
    "Algorithms/0001-1000/0643. Maximum Average Subarray I",
    "Algorithms/0001-1000/0643. Maximum Average Subarray I/0643. Maximum Average Subarray I.md",
    "Algorithms/0001-1000/0643. Maximum Average Subarray I/Solution.java",
    "Algorithms/0001-1000/0644. Maximum Average Subarray II",
    "Algorithms/0001-1000/0644. Maximum Average Subarray II/0644. Maximum Average Subarray II.md",
    "Algorithms/0001-1000/0644. Maximum Average Subarray II/Solution.java",
    "Algorithms/0001-1000/0645. Set Mismatch",
    "Algorithms/0001-1000/0645. Set Mismatch/0645. Set Mismatch.md",
    "Algorithms/0001-1000/0645. Set Mismatch/Solution.java",
    "Algorithms/0001-1000/0646. Maximum Length of Pair Chain",
    "Algorithms/0001-1000/0646. Maximum Length of Pair Chain/0646. Maximum Length of Pair Chain.md",
    "Algorithms/0001-1000/0646. Maximum Length of Pair Chain/Solution.java",
    "Algorithms/0001-1000/0647. Palindromic Substrings",
    "Algorithms/0001-1000/0647. Palindromic Substrings/0647. Palindromic Substrings.md",
    "Algorithms/0001-1000/0647. Palindromic Substrings/Solution.java",
    "Algorithms/0001-1000/0648. Replace Words",
    "Algorithms/0001-1000/0648. Replace Words/0648. Replace Words.md",
    "Algorithms/0001-1000/0648. Replace Words/Solution.java",
    "Algorithms/0001-1000/0649. Dota2 Senate",
    "Algorithms/0001-1000/0649. Dota2 Senate/0649. Dota2 Senate.md",
    "Algorithms/0001-1000/0649. Dota2 Senate/Solution.java",
    "Algorithms/0001-1000/0650. 2 Keys Keyboard",
    "Algorithms/0001-1000/0650. 2 Keys Keyboard/0650. 2 Keys Keyboard.md",
    "Algorithms/0001-1000/0650. 2 Keys Keyboard/Solution.java",
    "Algorithms/0001-1000/0651. 4 Keys Keyboard",
    "Algorithms/0001-1000/0651. 4 Keys Keyboard/0651. 4 Keys Keyboard.md",
    "Algorithms/0001-1000/0651. 4 Keys Keyboard/Solution.java",
    "Algorithms/0001-1000/0652. Find Duplicate Subtrees",
    "Algorithms/0001-1000/0652. Find Duplicate Subtrees/0652. Find Duplicate Subtrees.md",
    "Algorithms/0001-1000/0652. Find Duplicate Subtrees/Solution.java",
    "Algorithms/0001-1000/0653. Two Sum IV - Input is a BST",
    "Algorithms/0001-1000/0653. Two Sum IV - Input is a BST/0653. Two Sum IV - Input is a BST.md",
    "Algorithms/0001-1000/0653. Two Sum IV - Input is a BST/Solution.java",
    "Algorithms/0001-1000/0654. Maximum Binary Tree",
    "Algorithms/0001-1000/0654. Maximum Binary Tree/0654. Maximum Binary Tree.md",
    "Algorithms/0001-1000/0654. Maximum Binary Tree/Solution.java",
    "Algorithms/0001-1000/0655. Print Binary Tree",
    "Algorithms/0001-1000/0655. Print Binary Tree/0655. Print Binary Tree.md",
    "Algorithms/0001-1000/0655. Print Binary Tree/Solution.java",
    "Algorithms/0001-1000/0656. Coin Path",
    "Algorithms/0001-1000/0656. Coin Path/0656. Coin Path.md",
    "Algorithms/0001-1000/0656. Coin Path/Solution.java",
    "Algorithms/0001-1000/0657. Robot Return to Origin",
    "Algorithms/0001-1000/0657. Robot Return to Origin/0657. Robot Return to Origin.md",
    "Algorithms/0001-1000/0657. Robot Return to Origin/Solution.java",
    "Algorithms/0001-1000/0658. Find K Closest Elements",
    "Algorithms/0001-1000/0658. Find K Closest Elements/0658. Find K Closest Elements.md",
    "Algorithms/0001-1000/0658. Find K Closest Elements/Solution.java",
    "Algorithms/0001-1000/0659. Split Array into Consecutive Subsequences",
    "Algorithms/0001-1000/0659. Split Array into Consecutive Subsequences/0659. Split Array into Consecutive Subsequences.md",
    "Algorithms/0001-1000/0659. Split Array into Consecutive Subsequences/Solution.java",
    "Algorithms/0001-1000/0660. Remove 9",
    "Algorithms/0001-1000/0660. Remove 9/0660. Remove 9.md",
    "Algorithms/0001-1000/0660. Remove 9/Solution.java",
    "Algorithms/0001-1000/0661. Image Smoother",
    "Algorithms/0001-1000/0661. Image Smoother/0661. Image Smoother.md",
    "Algorithms/0001-1000/0661. Image Smoother/Solution.java",
    "Algorithms/0001-1000/0662. Maximum Width of Binary Tree",
    "Algorithms/0001-1000/0662. Maximum Width of Binary Tree/0662. Maximum Width of Binary Tree.md",
    "Algorithms/0001-1000/0662. Maximum Width of Binary Tree/Solution.java",
    "Algorithms/0001-1000/0663. Equal Tree Partition",
    "Algorithms/0001-1000/0663. Equal Tree Partition/0663. Equal Tree Partition.md",
    "Algorithms/0001-1000/0663. Equal Tree Partition/Solution.java",
    "Algorithms/0001-1000/0664. Strange Printer",
    "Algorithms/0001-1000/0664. Strange Printer/0664. Strange Printer.md",
    "Algorithms/0001-1000/0664. Strange Printer/Solution.java",
    "Algorithms/0001-1000/0665. Non-decreasing Array",
    "Algorithms/0001-1000/0665. Non-decreasing Array/0665. Non-decreasing Array.md",
    "Algorithms/0001-1000/0665. Non-decreasing Array/Solution.java",
    "Algorithms/0001-1000/0666. Path Sum IV",
    "Algorithms/0001-1000/0666. Path Sum IV/0666. Path Sum IV.md",
    "Algorithms/0001-1000/0666. Path Sum IV/Solution.java",
    "Algorithms/0001-1000/0667. Beautiful Arrangement II",
    "Algorithms/0001-1000/0667. Beautiful Arrangement II/0667. Beautiful Arrangement II.md",
    "Algorithms/0001-1000/0667. Beautiful Arrangement II/Solution.java",
    "Algorithms/0001-1000/0668. Kth Smallest Number in Multiplication Table",
    "Algorithms/0001-1000/0668. Kth Smallest Number in Multiplication Table/0668. Kth Smallest Number in Multiplication Table.md",
    "Algorithms/0001-1000/0668. Kth Smallest Number in Multiplication Table/Solution.java",
    "Algorithms/0001-1000/0669. Trim a Binary Search Tree",
    "Algorithms/0001-1000/0669. Trim a Binary Search Tree/0669. Trim a Binary Search Tree.md",
    "Algorithms/0001-1000/0669. Trim a Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0670. Maximum Swap",
    "Algorithms/0001-1000/0670. Maximum Swap/0670. Maximum Swap.md",
    "Algorithms/0001-1000/0670. Maximum Swap/Solution.java",
    "Algorithms/0001-1000/0671. Second Minimum Node In a Binary Tree",
    "Algorithms/0001-1000/0671. Second Minimum Node In a Binary Tree/0671. Second Minimum Node In a Binary Tree.md",
    "Algorithms/0001-1000/0671. Second Minimum Node In a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0672. Bulb Switcher II",
    "Algorithms/0001-1000/0672. Bulb Switcher II/0672. Bulb Switcher II.md",
    "Algorithms/0001-1000/0672. Bulb Switcher II/Solution.java",
    "Algorithms/0001-1000/0673. Number of Longest Increasing Subsequence",
    "Algorithms/0001-1000/0673. Number of Longest Increasing Subsequence/0673. Number of Longest Increasing Subsequence.md",
    "Algorithms/0001-1000/0673. Number of Longest Increasing Subsequence/Solution.java",
    "Algorithms/0001-1000/0674. Longest Continuous Increasing Subsequence",
    "Algorithms/0001-1000/0674. Longest Continuous Increasing Subsequence/0674. Longest Continuous Increasing Subsequence.md",
    "Algorithms/0001-1000/0674. Longest Continuous Increasing Subsequence/Solution.java",
    "Algorithms/0001-1000/0675. Cut Off Trees for Golf Event",
    "Algorithms/0001-1000/0675. Cut Off Trees for Golf Event/0675. Cut Off Trees for Golf Event.md",
    "Algorithms/0001-1000/0675. Cut Off Trees for Golf Event/Solution.java",
    "Algorithms/0001-1000/0676. Implement Magic Dictionary",
    "Algorithms/0001-1000/0676. Implement Magic Dictionary/0676. Implement Magic Dictionary.md",
    "Algorithms/0001-1000/0676. Implement Magic Dictionary/MagicDictionary.java",
    "Algorithms/0001-1000/0677. Map Sum Pairs",
    "Algorithms/0001-1000/0677. Map Sum Pairs/0677. Map Sum Pairs.md",
    "Algorithms/0001-1000/0677. Map Sum Pairs/MapSum.java",
    "Algorithms/0001-1000/0678. Valid Parenthesis String",
    "Algorithms/0001-1000/0678. Valid Parenthesis String/0678. Valid Parenthesis String.md",
    "Algorithms/0001-1000/0678. Valid Parenthesis String/Solution.java",
    "Algorithms/0001-1000/0679. 24 Game",
    "Algorithms/0001-1000/0679. 24 Game/0679. 24 Game.md",
    "Algorithms/0001-1000/0679. 24 Game/Solution.java",
    "Algorithms/0001-1000/0680. Valid Palindrome II",
    "Algorithms/0001-1000/0680. Valid Palindrome II/0680. Valid Palindrome II.md",
    "Algorithms/0001-1000/0680. Valid Palindrome II/Solution.java",
    "Algorithms/0001-1000/0681. Next Closest Time",
    "Algorithms/0001-1000/0681. Next Closest Time/0681. Next Closest Time.md",
    "Algorithms/0001-1000/0681. Next Closest Time/Solution.java",
    "Algorithms/0001-1000/0682. Baseball Game",
    "Algorithms/0001-1000/0682. Baseball Game/0682. Baseball Game.md",
    "Algorithms/0001-1000/0682. Baseball Game/Solution.java",
    "Algorithms/0001-1000/0683. K Empty Slots",
    "Algorithms/0001-1000/0683. K Empty Slots/0683. K Empty Slots.md",
    "Algorithms/0001-1000/0683. K Empty Slots/Solution.java",
    "Algorithms/0001-1000/0684. Redundant Connection",
    "Algorithms/0001-1000/0684. Redundant Connection/0684. Redundant Connection.md",
    "Algorithms/0001-1000/0684. Redundant Connection/Solution.java",
    "Algorithms/0001-1000/0685. Redundant Connection II",
    "Algorithms/0001-1000/0685. Redundant Connection II/0685. Redundant Connection II.md",
    "Algorithms/0001-1000/0685. Redundant Connection II/Solution.java",
    "Algorithms/0001-1000/0686. Repeated String Match",
    "Algorithms/0001-1000/0686. Repeated String Match/0686. Repeated String Match.md",
    "Algorithms/0001-1000/0686. Repeated String Match/Solution.java",
    "Algorithms/0001-1000/0687. Longest Univalue Path",
    "Algorithms/0001-1000/0687. Longest Univalue Path/0687. Longest Univalue Path.md",
    "Algorithms/0001-1000/0687. Longest Univalue Path/Solution.java",
    "Algorithms/0001-1000/0688. Knight Probability in Chessboard",
    "Algorithms/0001-1000/0688. Knight Probability in Chessboard/0688. Knight Probability in Chessboard.md",
    "Algorithms/0001-1000/0688. Knight Probability in Chessboard/Solution.java",
    "Algorithms/0001-1000/0689. Maximum Sum of 3 Non-Overlapping Subarrays",
    "Algorithms/0001-1000/0689. Maximum Sum of 3 Non-Overlapping Subarrays/0689. Maximum Sum of 3 Non-Overlapping Subarrays.md",
    "Algorithms/0001-1000/0689. Maximum Sum of 3 Non-Overlapping Subarrays/Solution.java",
    "Algorithms/0001-1000/0690. Employee Importance",
    "Algorithms/0001-1000/0690. Employee Importance/0690. Employee Importance.md",
    "Algorithms/0001-1000/0690. Employee Importance/Solution.java",
    "Algorithms/0001-1000/0691. Stickers to Spell Word",
    "Algorithms/0001-1000/0691. Stickers to Spell Word/0691. Stickers to Spell Word.md",
    "Algorithms/0001-1000/0691. Stickers to Spell Word/Solution.java",
    "Algorithms/0001-1000/0692. Top K Frequent Words",
    "Algorithms/0001-1000/0692. Top K Frequent Words/0692. Top K Frequent Words.md",
    "Algorithms/0001-1000/0692. Top K Frequent Words/Solution.java",
    "Algorithms/0001-1000/0693. Binary Number with Alternating Bits",
    "Algorithms/0001-1000/0693. Binary Number with Alternating Bits/0693. Binary Number with Alternating Bits.md",
    "Algorithms/0001-1000/0693. Binary Number with Alternating Bits/Solution.java",
    "Algorithms/0001-1000/0694. Number of Distinct Islands",
    "Algorithms/0001-1000/0694. Number of Distinct Islands/0694. Number of Distinct Islands.md",
    "Algorithms/0001-1000/0694. Number of Distinct Islands/Solution.java",
    "Algorithms/0001-1000/0695. Max Area of Island",
    "Algorithms/0001-1000/0695. Max Area of Island/0695. Max Area of Island.md",
    "Algorithms/0001-1000/0695. Max Area of Island/Solution.java",
    "Algorithms/0001-1000/0696. Count Binary Substrings",
    "Algorithms/0001-1000/0696. Count Binary Substrings/0696. Count Binary Substrings.md",
    "Algorithms/0001-1000/0696. Count Binary Substrings/Solution.java",
    "Algorithms/0001-1000/0697. Degree of an Array",
    "Algorithms/0001-1000/0697. Degree of an Array/0697. Degree of an Array.md",
    "Algorithms/0001-1000/0697. Degree of an Array/Solution.java",
    "Algorithms/0001-1000/0698. Partition to K Equal Sum Subsets",
    "Algorithms/0001-1000/0698. Partition to K Equal Sum Subsets/0698. Partition to K Equal Sum Subsets.md",
    "Algorithms/0001-1000/0698. Partition to K Equal Sum Subsets/Solution.java",
    "Algorithms/0001-1000/0699. Falling Squares",
    "Algorithms/0001-1000/0699. Falling Squares/0699. Falling Squares.md",
    "Algorithms/0001-1000/0699. Falling Squares/Solution.java",
    "Algorithms/0001-1000/0700. Search in a Binary Search Tree",
    "Algorithms/0001-1000/0700. Search in a Binary Search Tree/0700. Search in a Binary Search Tree.md",
    "Algorithms/0001-1000/0700. Search in a Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0701. Insert into a Binary Search Tree",
    "Algorithms/0001-1000/0701. Insert into a Binary Search Tree/0701. Insert into a Binary Search Tree.md",
    "Algorithms/0001-1000/0701. Insert into a Binary Search Tree/Solution.java",
    "Algorithms/0001-1000/0702. Search in a Sorted Array of Unknown Size",
    "Algorithms/0001-1000/0702. Search in a Sorted Array of Unknown Size/0702. Search in a Sorted Array of Unknown Size.md",
    "Algorithms/0001-1000/0702. Search in a Sorted Array of Unknown Size/Solution.java",
    "Algorithms/0001-1000/0703. Kth Largest Element in a Stream",
    "Algorithms/0001-1000/0703. Kth Largest Element in a Stream/0703. Kth Largest Element in a Stream.md",
    "Algorithms/0001-1000/0703. Kth Largest Element in a Stream/KthLargest.java",
    "Algorithms/0001-1000/0704. Binary Search",
    "Algorithms/0001-1000/0704. Binary Search/0704. Binary Search.md",
    "Algorithms/0001-1000/0704. Binary Search/Solution.java",
    "Algorithms/0001-1000/0705. Design HashSet",
    "Algorithms/0001-1000/0705. Design HashSet/0705. Design HashSet.md",
    "Algorithms/0001-1000/0705. Design HashSet/MyHashSet.java",
    "Algorithms/0001-1000/0706. Design HashMap",
    "Algorithms/0001-1000/0706. Design HashMap/0706. Design HashMap.md",
    "Algorithms/0001-1000/0706. Design HashMap/MyHashMap.java",
    "Algorithms/0001-1000/0707. Design Linked List",
    "Algorithms/0001-1000/0707. Design Linked List/0707. Design Linked List.md",
    "Algorithms/0001-1000/0707. Design Linked List/MyLinkedList.java",
    "Algorithms/0001-1000/0708. Insert into a Sorted Circular Linked List",
    "Algorithms/0001-1000/0708. Insert into a Sorted Circular Linked List/0708. Insert into a Sorted Circular Linked List.md",
    "Algorithms/0001-1000/0708. Insert into a Sorted Circular Linked List/Solution.java",
    "Algorithms/0001-1000/0709. To Lower Case",
    "Algorithms/0001-1000/0709. To Lower Case/0709. To Lower Case.md",
    "Algorithms/0001-1000/0710. Random Pick with Blacklist",
    "Algorithms/0001-1000/0710. Random Pick with Blacklist/0710. Random Pick with Blacklist.md",
    "Algorithms/0001-1000/0710. Random Pick with Blacklist/Solution.java",
    "Algorithms/0001-1000/0711. Number of Distinct Islands II",
    "Algorithms/0001-1000/0711. Number of Distinct Islands II/0711. Number of Distinct Islands II.md",
    "Algorithms/0001-1000/0711. Number of Distinct Islands II/Solution.java",
    "Algorithms/0001-1000/0712. Minimum ASCII Delete Sum for Two Strings",
    "Algorithms/0001-1000/0712. Minimum ASCII Delete Sum for Two Strings/0712. Minimum ASCII Delete Sum for Two Strings.md",
    "Algorithms/0001-1000/0712. Minimum ASCII Delete Sum for Two Strings/Solution.java",
    "Algorithms/0001-1000/0713. Subarray Product Less Than K",
    "Algorithms/0001-1000/0713. Subarray Product Less Than K/0713. Subarray Product Less Than K.md",
    "Algorithms/0001-1000/0713. Subarray Product Less Than K/Solution.java",
    "Algorithms/0001-1000/0714. Best Time to Buy and Sell Stock with Transaction Fee",
    "Algorithms/0001-1000/0714. Best Time to Buy and Sell Stock with Transaction Fee/0714. Best Time to Buy and Sell Stock with Transaction Fee.md",
    "Algorithms/0001-1000/0714. Best Time to Buy and Sell Stock with Transaction Fee/Solution.java",
    "Algorithms/0001-1000/0715. Range Module",
    "Algorithms/0001-1000/0715. Range Module/0715. Range Module.md",
    "Algorithms/0001-1000/0715. Range Module/RangeModule.java",
    "Algorithms/0001-1000/0716. Max Stack",
    "Algorithms/0001-1000/0716. Max Stack/0716. Max Stack.md",
    "Algorithms/0001-1000/0716. Max Stack/MaxStack.java",
    "Algorithms/0001-1000/0717. 1-bit and 2-bit Characters",
    "Algorithms/0001-1000/0717. 1-bit and 2-bit Characters/0717. 1-bit and 2-bit Characters.md",
    "Algorithms/0001-1000/0717. 1-bit and 2-bit Characters/Solution.java",
    "Algorithms/0001-1000/0718. Maximum Length of Repeated Subarray",
    "Algorithms/0001-1000/0718. Maximum Length of Repeated Subarray/0718. Maximum Length of Repeated Subarray.md",
    "Algorithms/0001-1000/0718. Maximum Length of Repeated Subarray/Solution.java",
    "Algorithms/0001-1000/0719. Find K-th Smallest Pair Distance",
    "Algorithms/0001-1000/0719. Find K-th Smallest Pair Distance/0719. Find K-th Smallest Pair Distance.md",
    "Algorithms/0001-1000/0719. Find K-th Smallest Pair Distance/Solution.java",
    "Algorithms/0001-1000/0720. Longest Word in Dictionary",
    "Algorithms/0001-1000/0720. Longest Word in Dictionary/0720. Longest Word in Dictionary.md",
    "Algorithms/0001-1000/0720. Longest Word in Dictionary/Solution.java",
    "Algorithms/0001-1000/0721. Accounts Merge",
    "Algorithms/0001-1000/0721. Accounts Merge/0721. Accounts Merge.md",
    "Algorithms/0001-1000/0721. Accounts Merge/Solution.java",
    "Algorithms/0001-1000/0722. Remove Comments",
    "Algorithms/0001-1000/0722. Remove Comments/0722. Remove Comments.md",
    "Algorithms/0001-1000/0722. Remove Comments/Solution.java",
    "Algorithms/0001-1000/0723. Candy Crush",
    "Algorithms/0001-1000/0723. Candy Crush/0723. Candy Crush.md",
    "Algorithms/0001-1000/0723. Candy Crush/Solution.java",
    "Algorithms/0001-1000/0724. Find Pivot Index",
    "Algorithms/0001-1000/0724. Find Pivot Index/0724. Find Pivot Index.md",
    "Algorithms/0001-1000/0724. Find Pivot Index/Solution.java",
    "Algorithms/0001-1000/0725. Split Linked List in Parts",
    "Algorithms/0001-1000/0725. Split Linked List in Parts/0725. Split Linked List in Parts.md",
    "Algorithms/0001-1000/0725. Split Linked List in Parts/Solution.java",
    "Algorithms/0001-1000/0726. Number of Atoms",
    "Algorithms/0001-1000/0726. Number of Atoms/0726. Number of Atoms.md",
    "Algorithms/0001-1000/0726. Number of Atoms/Solution.java",
    "Algorithms/0001-1000/0727. Minimum Window Subsequence",
    "Algorithms/0001-1000/0727. Minimum Window Subsequence/0727. Minimum Window Subsequence.md",
    "Algorithms/0001-1000/0727. Minimum Window Subsequence/Solution.java",
    "Algorithms/0001-1000/0728. Self Dividing Numbers",
    "Algorithms/0001-1000/0728. Self Dividing Numbers/0728. Self Dividing Numbers.md",
    "Algorithms/0001-1000/0728. Self Dividing Numbers/Solution.java",
    "Algorithms/0001-1000/0729. My Calendar I",
    "Algorithms/0001-1000/0729. My Calendar I/0729. My Calendar I.md",
    "Algorithms/0001-1000/0729. My Calendar I/MyCalendar.java",
    "Algorithms/0001-1000/0730. Count Different Palindromic Subsequences",
    "Algorithms/0001-1000/0730. Count Different Palindromic Subsequences/0730. Count Different Palindromic Subsequences.md",
    "Algorithms/0001-1000/0730. Count Different Palindromic Subsequences/Solution.java",
    "Algorithms/0001-1000/0731. My Calendar II",
    "Algorithms/0001-1000/0731. My Calendar II/0731. My Calendar II.md",
    "Algorithms/0001-1000/0731. My Calendar II/MyCalendarTwo.java",
    "Algorithms/0001-1000/0732. My Calendar III",
    "Algorithms/0001-1000/0732. My Calendar III/0732. My Calendar III.md",
    "Algorithms/0001-1000/0732. My Calendar III/MyCalendarThree.java",
    "Algorithms/0001-1000/0733. Flood Fill",
    "Algorithms/0001-1000/0733. Flood Fill/0733. Flood Fill.md",
    "Algorithms/0001-1000/0733. Flood Fill/Solution.java",
    "Algorithms/0001-1000/0734. Sentence Similarity",
    "Algorithms/0001-1000/0734. Sentence Similarity/0734. Sentence Similarity.md",
    "Algorithms/0001-1000/0734. Sentence Similarity/Solution.java",
    "Algorithms/0001-1000/0735. Asteroid Collision",
    "Algorithms/0001-1000/0735. Asteroid Collision/0735. Asteroid Collision.md",
    "Algorithms/0001-1000/0735. Asteroid Collision/Solution.java",
    "Algorithms/0001-1000/0736. Parse Lisp Expression",
    "Algorithms/0001-1000/0736. Parse Lisp Expression/0736. Parse Lisp Expression.md",
    "Algorithms/0001-1000/0736. Parse Lisp Expression/Solution.java",
    "Algorithms/0001-1000/0737. Sentence Similarity II",
    "Algorithms/0001-1000/0737. Sentence Similarity II/0737. Sentence Similarity II.md",
    "Algorithms/0001-1000/0737. Sentence Similarity II/Solution.java",
    "Algorithms/0001-1000/0738. Monotone Increasing Digits",
    "Algorithms/0001-1000/0738. Monotone Increasing Digits/0738. Monotone Increasing Digits.md",
    "Algorithms/0001-1000/0738. Monotone Increasing Digits/Solution.java",
    "Algorithms/0001-1000/0739. Daily Temperatures",
    "Algorithms/0001-1000/0739. Daily Temperatures/0739. Daily Temperatures.md",
    "Algorithms/0001-1000/0739. Daily Temperatures/Solution.java",
    "Algorithms/0001-1000/0740. Delete and Earn",
    "Algorithms/0001-1000/0740. Delete and Earn/0740. Delete and Earn.md",
    "Algorithms/0001-1000/0740. Delete and Earn/Solution.java",
    "Algorithms/0001-1000/0741. Cherry Pickup",
    "Algorithms/0001-1000/0741. Cherry Pickup/0741. Cherry Pickup.md",
    "Algorithms/0001-1000/0741. Cherry Pickup/Solution.java",
    "Algorithms/0001-1000/0742. Closest Leaf in a Binary Tree",
    "Algorithms/0001-1000/0742. Closest Leaf in a Binary Tree/0742. Closest Leaf in a Binary Tree.md",
    "Algorithms/0001-1000/0742. Closest Leaf in a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0743. Network Delay Time",
    "Algorithms/0001-1000/0743. Network Delay Time/0743. Network Delay Time.md",
    "Algorithms/0001-1000/0743. Network Delay Time/Solution.java",
    "Algorithms/0001-1000/0744. Find Smallest Letter Greater Than Target",
    "Algorithms/0001-1000/0744. Find Smallest Letter Greater Than Target/0744. Find Smallest Letter Greater Than Target.md",
    "Algorithms/0001-1000/0744. Find Smallest Letter Greater Than Target/Solution.java",
    "Algorithms/0001-1000/0745. Prefix and Suffix Search",
    "Algorithms/0001-1000/0745. Prefix and Suffix Search/0745. Prefix and Suffix Search.md",
    "Algorithms/0001-1000/0745. Prefix and Suffix Search/WordFilter.java",
    "Algorithms/0001-1000/0746. Min Cost Climbing Stairs",
    "Algorithms/0001-1000/0746. Min Cost Climbing Stairs/0746. Min Cost Climbing Stairs.md",
    "Algorithms/0001-1000/0746. Min Cost Climbing Stairs/Solution.java",
    "Algorithms/0001-1000/0747. Largest Number At Least Twice of Others",
    "Algorithms/0001-1000/0747. Largest Number At Least Twice of Others/0747. Largest Number At Least Twice of Others.md",
    "Algorithms/0001-1000/0747. Largest Number At Least Twice of Others/Solution.java",
    "Algorithms/0001-1000/0748. Shortest Completing Word",
    "Algorithms/0001-1000/0748. Shortest Completing Word/0748. Shortest Completing Word.md",
    "Algorithms/0001-1000/0748. Shortest Completing Word/Solution.java",
    "Algorithms/0001-1000/0749. Contain Virus",
    "Algorithms/0001-1000/0749. Contain Virus/0749. Contain Virus.md",
    "Algorithms/0001-1000/0749. Contain Virus/Solution.java",
    "Algorithms/0001-1000/0750. Number Of Corner Rectangles",
    "Algorithms/0001-1000/0750. Number Of Corner Rectangles/0750. Number Of Corner Rectangles.md",
    "Algorithms/0001-1000/0750. Number Of Corner Rectangles/Solution.java",
    "Algorithms/0001-1000/0751. IP to CIDR",
    "Algorithms/0001-1000/0751. IP to CIDR/0751. IP to CIDR.md",
    "Algorithms/0001-1000/0751. IP to CIDR/Solution.java",
    "Algorithms/0001-1000/0752. Open the Lock",
    "Algorithms/0001-1000/0752. Open the Lock/0752. Open the Lock.md",
    "Algorithms/0001-1000/0752. Open the Lock/Solution.java",
    "Algorithms/0001-1000/0753. Cracking the Safe",
    "Algorithms/0001-1000/0753. Cracking the Safe/0753. Cracking the Safe.md",
    "Algorithms/0001-1000/0753. Cracking the Safe/Solution.java",
    "Algorithms/0001-1000/0754. Reach a Number",
    "Algorithms/0001-1000/0754. Reach a Number/0754. Reach a Number.md",
    "Algorithms/0001-1000/0754. Reach a Number/Solution.java",
    "Algorithms/0001-1000/0755. Pour Water",
    "Algorithms/0001-1000/0755. Pour Water/0755. Pour Water.md",
    "Algorithms/0001-1000/0755. Pour Water/Solution.java",
    "Algorithms/0001-1000/0756. Pyramid Transition Matrix",
    "Algorithms/0001-1000/0756. Pyramid Transition Matrix/0756. Pyramid Transition Matrix.md",
    "Algorithms/0001-1000/0756. Pyramid Transition Matrix/Solution.java",
    "Algorithms/0001-1000/0757. Set Intersection Size At Least Two",
    "Algorithms/0001-1000/0757. Set Intersection Size At Least Two/0757. Set Intersection Size At Least Two.md",
    "Algorithms/0001-1000/0757. Set Intersection Size At Least Two/Solution.java",
    "Algorithms/0001-1000/0758. Bold Words in String",
    "Algorithms/0001-1000/0758. Bold Words in String/0758. Bold Words in String.md",
    "Algorithms/0001-1000/0758. Bold Words in String/Solution.java",
    "Algorithms/0001-1000/0759. Employee Free Time",
    "Algorithms/0001-1000/0759. Employee Free Time/0759. Employee Free Time.md",
    "Algorithms/0001-1000/0759. Employee Free Time/Solution.java",
    "Algorithms/0001-1000/0760. Find Anagram Mappings",
    "Algorithms/0001-1000/0760. Find Anagram Mappings/0760. Find Anagram Mappings.md",
    "Algorithms/0001-1000/0760. Find Anagram Mappings/Solution.java",
    "Algorithms/0001-1000/0761. Special Binary String",
    "Algorithms/0001-1000/0761. Special Binary String/0761. Special Binary String.md",
    "Algorithms/0001-1000/0761. Special Binary String/Solution.java",
    "Algorithms/0001-1000/0762. Prime Number of Set Bits in Binary Representation",
    "Algorithms/0001-1000/0762. Prime Number of Set Bits in Binary Representation/0762. Prime Number of Set Bits in Binary Representation.md",
    "Algorithms/0001-1000/0762. Prime Number of Set Bits in Binary Representation/Solution.java",
    "Algorithms/0001-1000/0763. Partition Labels",
    "Algorithms/0001-1000/0763. Partition Labels/0763. Partition Labels.md",
    "Algorithms/0001-1000/0763. Partition Labels/Solution.java",
    "Algorithms/0001-1000/0764. Largest Plus Sign",
    "Algorithms/0001-1000/0764. Largest Plus Sign/0764. Largest Plus Sign.md",
    "Algorithms/0001-1000/0764. Largest Plus Sign/Solution.java",
    "Algorithms/0001-1000/0765. Couples Holding Hands",
    "Algorithms/0001-1000/0765. Couples Holding Hands/0765. Couples Holding Hands.md",
    "Algorithms/0001-1000/0765. Couples Holding Hands/Solution.java",
    "Algorithms/0001-1000/0766. Toeplitz Matrix",
    "Algorithms/0001-1000/0766. Toeplitz Matrix/0766. Toeplitz Matrix.md",
    "Algorithms/0001-1000/0766. Toeplitz Matrix/Solution.java",
    "Algorithms/0001-1000/0767. Reorganize String",
    "Algorithms/0001-1000/0767. Reorganize String/0767. Reorganize String.md",
    "Algorithms/0001-1000/0767. Reorganize String/Solution.java",
    "Algorithms/0001-1000/0768. Max Chunks To Make Sorted II",
    "Algorithms/0001-1000/0768. Max Chunks To Make Sorted II/0768. Max Chunks To Make Sorted II.md",
    "Algorithms/0001-1000/0768. Max Chunks To Make Sorted II/Solution.java",
    "Algorithms/0001-1000/0769. Max Chunks To Make Sorted",
    "Algorithms/0001-1000/0769. Max Chunks To Make Sorted/0769. Max Chunks To Make Sorted.md",
    "Algorithms/0001-1000/0769. Max Chunks To Make Sorted/Solution.java",
    "Algorithms/0001-1000/0770. Basic Calculator IV",
    "Algorithms/0001-1000/0770. Basic Calculator IV/0770. Basic Calculator IV.md",
    "Algorithms/0001-1000/0770. Basic Calculator IV/Solution.java",
    "Algorithms/0001-1000/0771. Jewels and Stones",
    "Algorithms/0001-1000/0771. Jewels and Stones/0771. Jewels and Stones.md",
    "Algorithms/0001-1000/0771. Jewels and Stones/Solution.java",
    "Algorithms/0001-1000/0772. Basic Calculator III",
    "Algorithms/0001-1000/0772. Basic Calculator III/0772. Basic Calculator III.md",
    "Algorithms/0001-1000/0772. Basic Calculator III/Solution.java",
    "Algorithms/0001-1000/0773. Sliding Puzzle",
    "Algorithms/0001-1000/0773. Sliding Puzzle/0773. Sliding Puzzle.md",
    "Algorithms/0001-1000/0773. Sliding Puzzle/Solution.java",
    "Algorithms/0001-1000/0774. Minimize Max Distance to Gas Station",
    "Algorithms/0001-1000/0774. Minimize Max Distance to Gas Station/0774. Minimize Max Distance to Gas Station.md",
    "Algorithms/0001-1000/0774. Minimize Max Distance to Gas Station/Solution.java",
    "Algorithms/0001-1000/0775. Global and Local Inversions",
    "Algorithms/0001-1000/0775. Global and Local Inversions/0775. Global and Local Inversions.md",
    "Algorithms/0001-1000/0775. Global and Local Inversions/Solution.java",
    "Algorithms/0001-1000/0776. Split BST",
    "Algorithms/0001-1000/0776. Split BST/0776. Split BST.md",
    "Algorithms/0001-1000/0776. Split BST/Solution.java",
    "Algorithms/0001-1000/0777. Swap Adjacent in LR String",
    "Algorithms/0001-1000/0777. Swap Adjacent in LR String/0777. Swap Adjacent in LR String.md",
    "Algorithms/0001-1000/0777. Swap Adjacent in LR String/Solution.java",
    "Algorithms/0001-1000/0778. Swim in Rising Water",
    "Algorithms/0001-1000/0778. Swim in Rising Water/0778. Swim in Rising Water.md",
    "Algorithms/0001-1000/0778. Swim in Rising Water/Solution.java",
    "Algorithms/0001-1000/0779. K-th Symbol in Grammar",
    "Algorithms/0001-1000/0779. K-th Symbol in Grammar/0779. K-th Symbol in Grammar.md",
    "Algorithms/0001-1000/0779. K-th Symbol in Grammar/Solution.java",
    "Algorithms/0001-1000/0780. Reaching Points",
    "Algorithms/0001-1000/0780. Reaching Points/0780. Reaching Points.md",
    "Algorithms/0001-1000/0780. Reaching Points/Solution.java",
    "Algorithms/0001-1000/0781. Rabbits in Forest",
    "Algorithms/0001-1000/0781. Rabbits in Forest/0781. Rabbits in Forest.md",
    "Algorithms/0001-1000/0781. Rabbits in Forest/Solution.java",
    "Algorithms/0001-1000/0782. Transform to Chessboard",
    "Algorithms/0001-1000/0782. Transform to Chessboard/0782. Transform to Chessboard.md",
    "Algorithms/0001-1000/0782. Transform to Chessboard/Solution.java",
    "Algorithms/0001-1000/0783. Minimum Distance Between BST Nodes",
    "Algorithms/0001-1000/0783. Minimum Distance Between BST Nodes/0783. Minimum Distance Between BST Nodes.md",
    "Algorithms/0001-1000/0783. Minimum Distance Between BST Nodes/Solution.java",
    "Algorithms/0001-1000/0784. Letter Case Permutation",
    "Algorithms/0001-1000/0784. Letter Case Permutation/0784. Letter Case Permutation.md",
    "Algorithms/0001-1000/0785. Is Graph Bipartite",
    "Algorithms/0001-1000/0785. Is Graph Bipartite/0785. Is Graph Bipartite.md",
    "Algorithms/0001-1000/0785. Is Graph Bipartite/Solution.java",
    "Algorithms/0001-1000/0786. K-th Smallest Prime Fraction",
    "Algorithms/0001-1000/0786. K-th Smallest Prime Fraction/0786. K-th Smallest Prime Fraction.md",
    "Algorithms/0001-1000/0786. K-th Smallest Prime Fraction/Solution.java",
    "Algorithms/0001-1000/0787. Cheapest Flights Within K Stops",
    "Algorithms/0001-1000/0787. Cheapest Flights Within K Stops/0787. Cheapest Flights Within K Stops.md",
    "Algorithms/0001-1000/0787. Cheapest Flights Within K Stops/Solution.java",
    "Algorithms/0001-1000/0788. Rotated Digits",
    "Algorithms/0001-1000/0788. Rotated Digits/0788. Rotated Digits.md",
    "Algorithms/0001-1000/0788. Rotated Digits/Solution.java",
    "Algorithms/0001-1000/0789. Escape The Ghosts",
    "Algorithms/0001-1000/0789. Escape The Ghosts/0789. Escape The Ghosts.md",
    "Algorithms/0001-1000/0789. Escape The Ghosts/Solution.java",
    "Algorithms/0001-1000/0790. Domino and Tromino Tiling",
    "Algorithms/0001-1000/0790. Domino and Tromino Tiling/0790. Domino and Tromino Tiling.md",
    "Algorithms/0001-1000/0790. Domino and Tromino Tiling/Solution.java",
    "Algorithms/0001-1000/0791. Custom Sort String",
    "Algorithms/0001-1000/0791. Custom Sort String/0791. Custom Sort String.md",
    "Algorithms/0001-1000/0791. Custom Sort String/Solution.java",
    "Algorithms/0001-1000/0792. Number of Matching Subsequences",
    "Algorithms/0001-1000/0792. Number of Matching Subsequences/0792. Number of Matching Subsequences.md",
    "Algorithms/0001-1000/0792. Number of Matching Subsequences/Solution.java",
    "Algorithms/0001-1000/0793. Preimage Size of Factorial Zeroes Function",
    "Algorithms/0001-1000/0793. Preimage Size of Factorial Zeroes Function/0793. Preimage Size of Factorial Zeroes Function.md",
    "Algorithms/0001-1000/0793. Preimage Size of Factorial Zeroes Function/Solution.java",
    "Algorithms/0001-1000/0794. Valid Tic-Tac-Toe State",
    "Algorithms/0001-1000/0794. Valid Tic-Tac-Toe State/0794. Valid Tic-Tac-Toe State.md",
    "Algorithms/0001-1000/0794. Valid Tic-Tac-Toe State/Solution.java",
    "Algorithms/0001-1000/0795. Number of Subarrays with Bounded Maximum",
    "Algorithms/0001-1000/0795. Number of Subarrays with Bounded Maximum/0795. Number of Subarrays with Bounded Maximum.md",
    "Algorithms/0001-1000/0795. Number of Subarrays with Bounded Maximum/Solution.java",
    "Algorithms/0001-1000/0796. Rotate String",
    "Algorithms/0001-1000/0796. Rotate String/0796. Rotate String.md",
    "Algorithms/0001-1000/0796. Rotate String/Solution.java",
    "Algorithms/0001-1000/0797. All Paths From Source to Target",
    "Algorithms/0001-1000/0797. All Paths From Source to Target/0797. All Paths From Source to Target.md",
    "Algorithms/0001-1000/0797. All Paths From Source to Target/Solution.java",
    "Algorithms/0001-1000/0798. Smallest Rotation with Highest Score",
    "Algorithms/0001-1000/0798. Smallest Rotation with Highest Score/0798. Smallest Rotation with Highest Score.md",
    "Algorithms/0001-1000/0798. Smallest Rotation with Highest Score/Solution.java",
    "Algorithms/0001-1000/0799. Champagne Tower",
    "Algorithms/0001-1000/0799. Champagne Tower/0799. Champagne Tower.md",
    "Algorithms/0001-1000/0799. Champagne Tower/Solution.java",
    "Algorithms/0001-1000/0800. Similar RGB Color",
    "Algorithms/0001-1000/0800. Similar RGB Color/0800. Similar RGB Color.md",
    "Algorithms/0001-1000/0800. Similar RGB Color/Solution.java",
    "Algorithms/0001-1000/0801. Minimum Swaps To Make Sequences Increasing",
    "Algorithms/0001-1000/0801. Minimum Swaps To Make Sequences Increasing/0801. Minimum Swaps To Make Sequences Increasing.md",
    "Algorithms/0001-1000/0801. Minimum Swaps To Make Sequences Increasing/Solution.java",
    "Algorithms/0001-1000/0802. Find Eventual Safe States",
    "Algorithms/0001-1000/0802. Find Eventual Safe States/0802. Find Eventual Safe States.md",
    "Algorithms/0001-1000/0802. Find Eventual Safe States/Solution.java",
    "Algorithms/0001-1000/0803. Bricks Falling When Hit",
    "Algorithms/0001-1000/0803. Bricks Falling When Hit/0803. Bricks Falling When Hit.md",
    "Algorithms/0001-1000/0803. Bricks Falling When Hit/Solution.java",
    "Algorithms/0001-1000/0804. Unique Morse Code Words",
    "Algorithms/0001-1000/0804. Unique Morse Code Words/0804. Unique Morse Code Words.md",
    "Algorithms/0001-1000/0804. Unique Morse Code Words/Solution.java",
    "Algorithms/0001-1000/0805. Split Array With Same Average",
    "Algorithms/0001-1000/0805. Split Array With Same Average/0805. Split Array With Same Average.md",
    "Algorithms/0001-1000/0805. Split Array With Same Average/Solution.java",
    "Algorithms/0001-1000/0806. Number of Lines To Write String",
    "Algorithms/0001-1000/0806. Number of Lines To Write String/0806. Number of Lines To Write String.md",
    "Algorithms/0001-1000/0806. Number of Lines To Write String/Solution.java",
    "Algorithms/0001-1000/0807. Max Increase to Keep City Skyline",
    "Algorithms/0001-1000/0807. Max Increase to Keep City Skyline/0807. Max Increase to Keep City Skyline.md",
    "Algorithms/0001-1000/0807. Max Increase to Keep City Skyline/Solution.java",
    "Algorithms/0001-1000/0808. Soup Servings",
    "Algorithms/0001-1000/0808. Soup Servings/0808. Soup Servings.md",
    "Algorithms/0001-1000/0808. Soup Servings/Solution.java",
    "Algorithms/0001-1000/0809. Expressive Words",
    "Algorithms/0001-1000/0809. Expressive Words/0809. Expressive Words.md",
    "Algorithms/0001-1000/0809. Expressive Words/Solution.java",
    "Algorithms/0001-1000/0810. Chalkboard XOR Game",
    "Algorithms/0001-1000/0810. Chalkboard XOR Game/0810. Chalkboard XOR Game.md",
    "Algorithms/0001-1000/0810. Chalkboard XOR Game/Solution.java",
    "Algorithms/0001-1000/0811. Subdomain Visit Count",
    "Algorithms/0001-1000/0811. Subdomain Visit Count/0811. Subdomain Visit Count.md",
    "Algorithms/0001-1000/0811. Subdomain Visit Count/Solution.java",
    "Algorithms/0001-1000/0812. Largest Triangle Area",
    "Algorithms/0001-1000/0812. Largest Triangle Area/0812. Largest Triangle Area.md",
    "Algorithms/0001-1000/0812. Largest Triangle Area/Solution.java",
    "Algorithms/0001-1000/0813. Largest Sum of Averages",
    "Algorithms/0001-1000/0813. Largest Sum of Averages/0813. Largest Sum of Averages.md",
    "Algorithms/0001-1000/0813. Largest Sum of Averages/Solution.java",
    "Algorithms/0001-1000/0814. Binary Tree Pruning",
    "Algorithms/0001-1000/0814. Binary Tree Pruning/0814. Binary Tree Pruning.md",
    "Algorithms/0001-1000/0814. Binary Tree Pruning/Solution.java",
    "Algorithms/0001-1000/0815. Bus Routes",
    "Algorithms/0001-1000/0815. Bus Routes/0815. Bus Routes.md",
    "Algorithms/0001-1000/0815. Bus Routes/Solution.java",
    "Algorithms/0001-1000/0816. Ambiguous Coordinates",
    "Algorithms/0001-1000/0816. Ambiguous Coordinates/0816. Ambiguous Coordinates.md",
    "Algorithms/0001-1000/0816. Ambiguous Coordinates/Solution.java",
    "Algorithms/0001-1000/0817. Linked List Components",
    "Algorithms/0001-1000/0817. Linked List Components/0817. Linked List Components.md",
    "Algorithms/0001-1000/0817. Linked List Components/Solution.java",
    "Algorithms/0001-1000/0818. Race Car",
    "Algorithms/0001-1000/0818. Race Car/0818. Race Car.md",
    "Algorithms/0001-1000/0818. Race Car/Solution.java",
    "Algorithms/0001-1000/0819. Most Common Word",
    "Algorithms/0001-1000/0819. Most Common Word/0819. Most Common Word.md",
    "Algorithms/0001-1000/0819. Most Common Word/Solution.java",
    "Algorithms/0001-1000/0820. Short Encoding of Words",
    "Algorithms/0001-1000/0820. Short Encoding of Words/0820. Short Encoding of Words.md",
    "Algorithms/0001-1000/0820. Short Encoding of Words/Solution.java",
    "Algorithms/0001-1000/0821. Shortest Distance to a Character",
    "Algorithms/0001-1000/0821. Shortest Distance to a Character/0821. Shortest Distance to a Character.md",
    "Algorithms/0001-1000/0821. Shortest Distance to a Character/Solution.java",
    "Algorithms/0001-1000/0822. Card Flipping Game",
    "Algorithms/0001-1000/0822. Card Flipping Game/0822. Card Flipping Game.md",
    "Algorithms/0001-1000/0822. Card Flipping Game/Solution.java",
    "Algorithms/0001-1000/0823. Binary Trees With Factors",
    "Algorithms/0001-1000/0823. Binary Trees With Factors/0823. Binary Trees With Factors.md",
    "Algorithms/0001-1000/0823. Binary Trees With Factors/Solution.java",
    "Algorithms/0001-1000/0824. Goat Latin",
    "Algorithms/0001-1000/0824. Goat Latin/0824. Goat Latin.md",
    "Algorithms/0001-1000/0824. Goat Latin/Solution.java",
    "Algorithms/0001-1000/0825. Friends Of Appropriate Ages",
    "Algorithms/0001-1000/0825. Friends Of Appropriate Ages/0825. Friends Of Appropriate Ages.md",
    "Algorithms/0001-1000/0825. Friends Of Appropriate Ages/Solution.java",
    "Algorithms/0001-1000/0826. Most Profit Assigning Work",
    "Algorithms/0001-1000/0826. Most Profit Assigning Work/0826. Most Profit Assigning Work.md",
    "Algorithms/0001-1000/0826. Most Profit Assigning Work/Solution.java",
    "Algorithms/0001-1000/0827. Making A Large Island",
    "Algorithms/0001-1000/0827. Making A Large Island/0827. Making A Large Island.md",
    "Algorithms/0001-1000/0827. Making A Large Island/Solution.java",
    "Algorithms/0001-1000/0828. Count Unique Characters of All Substrings of a Given String",
    "Algorithms/0001-1000/0828. Count Unique Characters of All Substrings of a Given String/0828. Count Unique Characters of All Substrings of a Given String.md",
    "Algorithms/0001-1000/0828. Count Unique Characters of All Substrings of a Given String/Solution.java",
    "Algorithms/0001-1000/0829. Consecutive Numbers Sum",
    "Algorithms/0001-1000/0829. Consecutive Numbers Sum/0829. Consecutive Numbers Sum.md",
    "Algorithms/0001-1000/0829. Consecutive Numbers Sum/Solution.java",
    "Algorithms/0001-1000/0830. Positions of Large Groups",
    "Algorithms/0001-1000/0830. Positions of Large Groups/0830. Positions of Large Groups.md",
    "Algorithms/0001-1000/0830. Positions of Large Groups/Solution.java",
    "Algorithms/0001-1000/0831. Masking Personal Information",
    "Algorithms/0001-1000/0831. Masking Personal Information/0831. Masking Personal Information.md",
    "Algorithms/0001-1000/0831. Masking Personal Information/Solution.java",
    "Algorithms/0001-1000/0832. Flipping an Image",
    "Algorithms/0001-1000/0832. Flipping an Image/0832. Flipping an Image.md",
    "Algorithms/0001-1000/0832. Flipping an Image/Solution.java",
    "Algorithms/0001-1000/0833. Find And Replace in String",
    "Algorithms/0001-1000/0833. Find And Replace in String/0833. Find And Replace in String.md",
    "Algorithms/0001-1000/0833. Find And Replace in String/Solution.java",
    "Algorithms/0001-1000/0834. Sum of Distances in Tree",
    "Algorithms/0001-1000/0834. Sum of Distances in Tree/0834. Sum of Distances in Tree.md",
    "Algorithms/0001-1000/0834. Sum of Distances in Tree/Solution.java",
    "Algorithms/0001-1000/0835. Image Overlap",
    "Algorithms/0001-1000/0835. Image Overlap/0835. Image Overlap.md",
    "Algorithms/0001-1000/0835. Image Overlap/Solution.java",
    "Algorithms/0001-1000/0836. Rectangle Overlap",
    "Algorithms/0001-1000/0836. Rectangle Overlap/0836. Rectangle Overlap.md",
    "Algorithms/0001-1000/0836. Rectangle Overlap/Solution.java",
    "Algorithms/0001-1000/0837. New 21 Game",
    "Algorithms/0001-1000/0837. New 21 Game/0837. New 21 Game.md",
    "Algorithms/0001-1000/0837. New 21 Game/Solution.java",
    "Algorithms/0001-1000/0838. Push Dominoes",
    "Algorithms/0001-1000/0838. Push Dominoes/0838. Push Dominoes.md",
    "Algorithms/0001-1000/0838. Push Dominoes/Solution.java",
    "Algorithms/0001-1000/0839. Similar String Groups",
    "Algorithms/0001-1000/0839. Similar String Groups/0839. Similar String Groups.md",
    "Algorithms/0001-1000/0839. Similar String Groups/Solution.java",
    "Algorithms/0001-1000/0840. Magic Squares In Grid",
    "Algorithms/0001-1000/0840. Magic Squares In Grid/0840. Magic Squares In Grid.md",
    "Algorithms/0001-1000/0840. Magic Squares In Grid/Solution.java",
    "Algorithms/0001-1000/0841. Keys and Rooms",
    "Algorithms/0001-1000/0841. Keys and Rooms/0841. Keys and Rooms.md",
    "Algorithms/0001-1000/0841. Keys and Rooms/Solution.java",
    "Algorithms/0001-1000/0842. Split Array into Fibonacci Sequence",
    "Algorithms/0001-1000/0842. Split Array into Fibonacci Sequence/0842. Split Array into Fibonacci Sequence.md",
    "Algorithms/0001-1000/0842. Split Array into Fibonacci Sequence/Solution.java",
    "Algorithms/0001-1000/0843. Guess the Word",
    "Algorithms/0001-1000/0843. Guess the Word/0843. Guess the Word.md",
    "Algorithms/0001-1000/0843. Guess the Word/Solution.java",
    "Algorithms/0001-1000/0844. Backspace String Compare",
    "Algorithms/0001-1000/0844. Backspace String Compare/0844. Backspace String Compare.md",
    "Algorithms/0001-1000/0844. Backspace String Compare/Solution.java",
    "Algorithms/0001-1000/0845. Longest Mountain in Array",
    "Algorithms/0001-1000/0845. Longest Mountain in Array/0845. Longest Mountain in Array.md",
    "Algorithms/0001-1000/0845. Longest Mountain in Array/Solution.java",
    "Algorithms/0001-1000/0846. Hand of Straights",
    "Algorithms/0001-1000/0846. Hand of Straights/0846. Hand of Straights.md",
    "Algorithms/0001-1000/0846. Hand of Straights/Solution.java",
    "Algorithms/0001-1000/0847. Shortest Path Visiting All Nodes",
    "Algorithms/0001-1000/0847. Shortest Path Visiting All Nodes/0847. Shortest Path Visiting All Nodes.md",
    "Algorithms/0001-1000/0847. Shortest Path Visiting All Nodes/Solution.java",
    "Algorithms/0001-1000/0848. Shifting Letters",
    "Algorithms/0001-1000/0848. Shifting Letters/0848. Shifting Letters.md",
    "Algorithms/0001-1000/0848. Shifting Letters/Solution.java",
    "Algorithms/0001-1000/0849. Maximize Distance to Closest Person",
    "Algorithms/0001-1000/0849. Maximize Distance to Closest Person/0849. Maximize Distance to Closest Person.md",
    "Algorithms/0001-1000/0849. Maximize Distance to Closest Person/Solution.java",
    "Algorithms/0001-1000/0850. Rectangle Area II",
    "Algorithms/0001-1000/0850. Rectangle Area II/0850. Rectangle Area II.md",
    "Algorithms/0001-1000/0850. Rectangle Area II/Solution.java",
    "Algorithms/0001-1000/0851. Loud and Rich",
    "Algorithms/0001-1000/0851. Loud and Rich/0851. Loud and Rich.md",
    "Algorithms/0001-1000/0851. Loud and Rich/Solution.java",
    "Algorithms/0001-1000/0852. Peak Index in a Mountain Array",
    "Algorithms/0001-1000/0852. Peak Index in a Mountain Array/0852. Peak Index in a Mountain Array.md",
    "Algorithms/0001-1000/0852. Peak Index in a Mountain Array/Solution.java",
    "Algorithms/0001-1000/0853. Car Fleet",
    "Algorithms/0001-1000/0853. Car Fleet/0853. Car Fleet.md",
    "Algorithms/0001-1000/0853. Car Fleet/Solution.java",
    "Algorithms/0001-1000/0854. K-Similar Strings",
    "Algorithms/0001-1000/0854. K-Similar Strings/0854. K-Similar Strings.md",
    "Algorithms/0001-1000/0854. K-Similar Strings/Solution.java",
    "Algorithms/0001-1000/0855. Exam Room",
    "Algorithms/0001-1000/0855. Exam Room/0855. Exam Room.md",
    "Algorithms/0001-1000/0855. Exam Room/ExamRoom.java",
    "Algorithms/0001-1000/0856. Score of Parentheses",
    "Algorithms/0001-1000/0856. Score of Parentheses/0856. Score of Parentheses.md",
    "Algorithms/0001-1000/0856. Score of Parentheses/Solution.java",
    "Algorithms/0001-1000/0857. Minimum Cost to Hire K Workers",
    "Algorithms/0001-1000/0857. Minimum Cost to Hire K Workers/0857. Minimum Cost to Hire K Workers.md",
    "Algorithms/0001-1000/0857. Minimum Cost to Hire K Workers/Solution.java",
    "Algorithms/0001-1000/0858. Mirror Reflection",
    "Algorithms/0001-1000/0858. Mirror Reflection/0858. Mirror Reflection.md",
    "Algorithms/0001-1000/0858. Mirror Reflection/Solution.java",
    "Algorithms/0001-1000/0859. Buddy Strings",
    "Algorithms/0001-1000/0859. Buddy Strings/0859. Buddy Strings.md",
    "Algorithms/0001-1000/0859. Buddy Strings/Solution.java",
    "Algorithms/0001-1000/0860. Lemonade Change",
    "Algorithms/0001-1000/0860. Lemonade Change/0860. Lemonade Change.md",
    "Algorithms/0001-1000/0860. Lemonade Change/Solution.java",
    "Algorithms/0001-1000/0861. Score After Flipping Matrix",
    "Algorithms/0001-1000/0861. Score After Flipping Matrix/0861. Score After Flipping Matrix.md",
    "Algorithms/0001-1000/0861. Score After Flipping Matrix/Solution.java",
    "Algorithms/0001-1000/0862. Shortest Subarray with Sum at Least K",
    "Algorithms/0001-1000/0862. Shortest Subarray with Sum at Least K/0862. Shortest Subarray with Sum at Least K.md",
    "Algorithms/0001-1000/0862. Shortest Subarray with Sum at Least K/Solution.java",
    "Algorithms/0001-1000/0863. All Nodes Distance K in Binary Tree",
    "Algorithms/0001-1000/0863. All Nodes Distance K in Binary Tree/0863. All Nodes Distance K in Binary Tree.md",
    "Algorithms/0001-1000/0863. All Nodes Distance K in Binary Tree/Solution.java",
    "Algorithms/0001-1000/0864. Shortest Path to Get All Keys",
    "Algorithms/0001-1000/0864. Shortest Path to Get All Keys/0864. Shortest Path to Get All Keys.md",
    "Algorithms/0001-1000/0864. Shortest Path to Get All Keys/Solution.java",
    "Algorithms/0001-1000/0865. Smallest Subtree with all the Deepest Nodes",
    "Algorithms/0001-1000/0865. Smallest Subtree with all the Deepest Nodes/0865. Smallest Subtree with all the Deepest Nodes.md",
    "Algorithms/0001-1000/0865. Smallest Subtree with all the Deepest Nodes/Solution.java",
    "Algorithms/0001-1000/0866. Prime Palindrome",
    "Algorithms/0001-1000/0866. Prime Palindrome/0866. Prime Palindrome.md",
    "Algorithms/0001-1000/0866. Prime Palindrome/Solution.java",
    "Algorithms/0001-1000/0867. Transpose Matrix",
    "Algorithms/0001-1000/0867. Transpose Matrix/0867. Transpose Matrix.md",
    "Algorithms/0001-1000/0867. Transpose Matrix/Solution.java",
    "Algorithms/0001-1000/0868. Binary Gap",
    "Algorithms/0001-1000/0868. Binary Gap/0868. Binary Gap.md",
    "Algorithms/0001-1000/0868. Binary Gap/Solution.java",
    "Algorithms/0001-1000/0869. Reordered Power of 2",
    "Algorithms/0001-1000/0869. Reordered Power of 2/0869. Reordered Power of 2.md",
    "Algorithms/0001-1000/0869. Reordered Power of 2/Solution.java",
    "Algorithms/0001-1000/0870. Advantage Shuffle",
    "Algorithms/0001-1000/0870. Advantage Shuffle/0870. Advantage Shuffle.md",
    "Algorithms/0001-1000/0870. Advantage Shuffle/Solution.java",
    "Algorithms/0001-1000/0871. Minimum Number of Refueling Stops",
    "Algorithms/0001-1000/0871. Minimum Number of Refueling Stops/0871. Minimum Number of Refueling Stops.md",
    "Algorithms/0001-1000/0871. Minimum Number of Refueling Stops/Solution.java",
    "Algorithms/0001-1000/0872. Leaf-Similar Trees",
    "Algorithms/0001-1000/0872. Leaf-Similar Trees/0872. Leaf-Similar Trees.md",
    "Algorithms/0001-1000/0872. Leaf-Similar Trees/Solution.java",
    "Algorithms/0001-1000/0873. Length of Longest Fibonacci Subsequence",
    "Algorithms/0001-1000/0873. Length of Longest Fibonacci Subsequence/0873. Length of Longest Fibonacci Subsequence.md",
    "Algorithms/0001-1000/0873. Length of Longest Fibonacci Subsequence/Solution.java",
    "Algorithms/0001-1000/0874. Walking Robot Simulation",
    "Algorithms/0001-1000/0874. Walking Robot Simulation/0874. Walking Robot Simulation.md",
    "Algorithms/0001-1000/0874. Walking Robot Simulation/Solution.java",
    "Algorithms/0001-1000/0875. Koko Eating Bananas",
    "Algorithms/0001-1000/0875. Koko Eating Bananas/0875. Koko Eating Bananas.md",
    "Algorithms/0001-1000/0875. Koko Eating Bananas/Solution.java",
    "Algorithms/0001-1000/0876. Middle of the Linked List",
    "Algorithms/0001-1000/0876. Middle of the Linked List/0876. Middle of the Linked List.md",
    "Algorithms/0001-1000/0876. Middle of the Linked List/Solution.java",
    "Algorithms/0001-1000/0877. Stone Game",
    "Algorithms/0001-1000/0877. Stone Game/0877. Stone Game.md",
    "Algorithms/0001-1000/0877. Stone Game/Solution.java",
    "Algorithms/0001-1000/0878. Nth Magical Number",
    "Algorithms/0001-1000/0878. Nth Magical Number/0878. Nth Magical Number.md",
    "Algorithms/0001-1000/0878. Nth Magical Number/Solution.java",
    "Algorithms/0001-1000/0879. Profitable Schemes",
    "Algorithms/0001-1000/0879. Profitable Schemes/0879. Profitable Schemes.md",
    "Algorithms/0001-1000/0879. Profitable Schemes/Solution.java",
    "Algorithms/0001-1000/0880. Decoded String at Index",
    "Algorithms/0001-1000/0880. Decoded String at Index/0880. Decoded String at Index.md",
    "Algorithms/0001-1000/0880. Decoded String at Index/Solution.java",
    "Algorithms/0001-1000/0881. Boats to Save People",
    "Algorithms/0001-1000/0881. Boats to Save People/0881. Boats to Save People.md",
    "Algorithms/0001-1000/0881. Boats to Save People/Solution.java",
    "Algorithms/0001-1000/0882. Reachable Nodes In Subdivided Graph",
    "Algorithms/0001-1000/0882. Reachable Nodes In Subdivided Graph/0882. Reachable Nodes In Subdivided Graph.md",
    "Algorithms/0001-1000/0882. Reachable Nodes In Subdivided Graph/Solution.java",
    "Algorithms/0001-1000/0883. Projection Area of 3D Shapes",
    "Algorithms/0001-1000/0883. Projection Area of 3D Shapes/0883. Projection Area of 3D Shapes.md",
    "Algorithms/0001-1000/0883. Projection Area of 3D Shapes/Solution.java",
    "Algorithms/0001-1000/0884. Uncommon Words from Two Sentences",
    "Algorithms/0001-1000/0884. Uncommon Words from Two Sentences/0884. Uncommon Words from Two Sentences.md",
    "Algorithms/0001-1000/0884. Uncommon Words from Two Sentences/Solution.java",
    "Algorithms/0001-1000/0885. Spiral Matrix III",
    "Algorithms/0001-1000/0885. Spiral Matrix III/0885. Spiral Matrix III.md",
    "Algorithms/0001-1000/0885. Spiral Matrix III/Solution.java",
    "Algorithms/0001-1000/0886. Possible Bipartition",
    "Algorithms/0001-1000/0886. Possible Bipartition/0886. Possible Bipartition.md",
    "Algorithms/0001-1000/0886. Possible Bipartition/Solution.java",
    "Algorithms/0001-1000/0887. Super Egg Drop",
    "Algorithms/0001-1000/0887. Super Egg Drop/0887. Super Egg Drop.md",
    "Algorithms/0001-1000/0887. Super Egg Drop/Solution.java",
    "Algorithms/0001-1000/0888. Fair Candy Swap",
    "Algorithms/0001-1000/0888. Fair Candy Swap/0888. Fair Candy Swap.md",
    "Algorithms/0001-1000/0888. Fair Candy Swap/Solution.java",
    "Algorithms/0001-1000/0889. Construct Binary Tree from Preorder and Postorder Traversal",
    "Algorithms/0001-1000/0889. Construct Binary Tree from Preorder and Postorder Traversal/0889. Construct Binary Tree from Preorder and Postorder Traversal.md",
    "Algorithms/0001-1000/0889. Construct Binary Tree from Preorder and Postorder Traversal/Solution.java",
    "Algorithms/0001-1000/0890. Find and Replace Pattern",
    "Algorithms/0001-1000/0890. Find and Replace Pattern/0890. Find and Replace Pattern.md",
    "Algorithms/0001-1000/0890. Find and Replace Pattern/Solution.java",
    "Algorithms/0001-1000/0891. Sum of Subsequence Widths",
    "Algorithms/0001-1000/0891. Sum of Subsequence Widths/0891. Sum of Subsequence Widths.md",
    "Algorithms/0001-1000/0891. Sum of Subsequence Widths/Solution.java",
    "Algorithms/0001-1000/0892. Surface Area of 3D Shapes",
    "Algorithms/0001-1000/0892. Surface Area of 3D Shapes/0892. Surface Area of 3D Shapes.md",
    "Algorithms/0001-1000/0892. Surface Area of 3D Shapes/Solution.java",
    "Algorithms/0001-1000/0893. Groups of Special-Equivalent Strings",
    "Algorithms/0001-1000/0893. Groups of Special-Equivalent Strings/0893. Groups of Special-Equivalent Strings.md",
    "Algorithms/0001-1000/0893. Groups of Special-Equivalent Strings/Solution.java",
    "Algorithms/0001-1000/0894. All Possible Full Binary Trees",
    "Algorithms/0001-1000/0894. All Possible Full Binary Trees/0894. All Possible Full Binary Trees.md",
    "Algorithms/0001-1000/0894. All Possible Full Binary Trees/Solution.java",
    "Algorithms/0001-1000/0895. Maximum Frequency Stack",
    "Algorithms/0001-1000/0895. Maximum Frequency Stack/0895. Maximum Frequency Stack.md",
    "Algorithms/0001-1000/0895. Maximum Frequency Stack/FreqStack.java",
    "Algorithms/0001-1000/0896. Monotonic Array",
    "Algorithms/0001-1000/0896. Monotonic Array/0896. Monotonic Array.md",
    "Algorithms/0001-1000/0896. Monotonic Array/Solution.java",
    "Algorithms/0001-1000/0897. Increasing Order Search Tree",
    "Algorithms/0001-1000/0897. Increasing Order Search Tree/0897. Increasing Order Search Tree.md",
    "Algorithms/0001-1000/0897. Increasing Order Search Tree/Solution.java",
    "Algorithms/0001-1000/0898. Bitwise ORs of Subarrays",
    "Algorithms/0001-1000/0898. Bitwise ORs of Subarrays/0898. Bitwise ORs of Subarrays.md",
    "Algorithms/0001-1000/0898. Bitwise ORs of Subarrays/Solution.java",
    "Algorithms/0001-1000/0899. Orderly Queue",
    "Algorithms/0001-1000/0899. Orderly Queue/0899. Orderly Queue.md",
    "Algorithms/0001-1000/0899. Orderly Queue/Solution.java",
    "Algorithms/0001-1000/0900. RLE Iterator",
    "Algorithms/0001-1000/0900. RLE Iterator/0900. RLE Iterator.md",
    "Algorithms/0001-1000/0900. RLE Iterator/RLEIterator.java",
    "Algorithms/0001-1000/0901. Online Stock Span",
    "Algorithms/0001-1000/0901. Online Stock Span/0901. Online Stock Span.md",
    "Algorithms/0001-1000/0901. Online Stock Span/StockSpanner.java",
    "Algorithms/0001-1000/0902. Numbers At Most N Given Digit Set",
    "Algorithms/0001-1000/0902. Numbers At Most N Given Digit Set/0902. Numbers At Most N Given Digit Set.md",
    "Algorithms/0001-1000/0902. Numbers At Most N Given Digit Set/Solution.java",
    "Algorithms/0001-1000/0903. Valid Permutations for DI Sequence",
    "Algorithms/0001-1000/0903. Valid Permutations for DI Sequence/0903. Valid Permutations for DI Sequence.md",
    "Algorithms/0001-1000/0903. Valid Permutations for DI Sequence/Solution.java",
    "Algorithms/0001-1000/0904. Fruit Into Baskets",
    "Algorithms/0001-1000/0904. Fruit Into Baskets/0904. Fruit Into Baskets.md",
    "Algorithms/0001-1000/0904. Fruit Into Baskets/Solution.java",
    "Algorithms/0001-1000/0905. Sort Array By Parity",
    "Algorithms/0001-1000/0905. Sort Array By Parity/0905. Sort Array By Parity.md",
    "Algorithms/0001-1000/0905. Sort Array By Parity/Solution.java",
    "Algorithms/0001-1000/0906. Super Palindromes",
    "Algorithms/0001-1000/0906. Super Palindromes/0906. Super Palindromes.md",
    "Algorithms/0001-1000/0906. Super Palindromes/Solution.java",
    "Algorithms/0001-1000/0907. Sum of Subarray Minimums",
    "Algorithms/0001-1000/0907. Sum of Subarray Minimums/0907. Sum of Subarray Minimums.md",
    "Algorithms/0001-1000/0907. Sum of Subarray Minimums/Solution.java",
    "Algorithms/0001-1000/0908. Smallest Range I",
    "Algorithms/0001-1000/0908. Smallest Range I/0908. Smallest Range I.md",
    "Algorithms/0001-1000/0908. Smallest Range I/Solution.java",
    "Algorithms/0001-1000/0909. Snakes and Ladders",
    "Algorithms/0001-1000/0909. Snakes and Ladders/0909. Snakes and Ladders.md",
    "Algorithms/0001-1000/0909. Snakes and Ladders/Solution.java",
    "Algorithms/0001-1000/0910. Smallest Range II",
    "Algorithms/0001-1000/0910. Smallest Range II/0910. Smallest Range II.md",
    "Algorithms/0001-1000/0910. Smallest Range II/Solution.java",
    "Algorithms/0001-1000/0911. Online Election",
    "Algorithms/0001-1000/0911. Online Election/0911. Online Election.md",
    "Algorithms/0001-1000/0911. Online Election/TopVotedCandidate.java",
    "Algorithms/0001-1000/0912. Sort an Array",
    "Algorithms/0001-1000/0912. Sort an Array/0912. Sort an Array.md",
    "Algorithms/0001-1000/0912. Sort an Array/Solution.java",
    "Algorithms/0001-1000/0913. Cat and Mouse",
    "Algorithms/0001-1000/0913. Cat and Mouse/0913. Cat and Mouse.md",
    "Algorithms/0001-1000/0913. Cat and Mouse/Solution.java",
    "Algorithms/0001-1000/0914. X of a Kind in a Deck of Cards",
    "Algorithms/0001-1000/0914. X of a Kind in a Deck of Cards/0914. X of a Kind in a Deck of Cards.md",
    "Algorithms/0001-1000/0914. X of a Kind in a Deck of Cards/Solution.java",
    "Algorithms/0001-1000/0915. Partition Array into Disjoint Intervals",
    "Algorithms/0001-1000/0915. Partition Array into Disjoint Intervals/0915. Partition Array into Disjoint Intervals.md",
    "Algorithms/0001-1000/0915. Partition Array into Disjoint Intervals/Solution.java",
    "Algorithms/0001-1000/0916. Word Subsets",
    "Algorithms/0001-1000/0916. Word Subsets/0916. Word Subsets.md",
    "Algorithms/0001-1000/0916. Word Subsets/Solution.java",
    "Algorithms/0001-1000/0917. Reverse Only Letters",
    "Algorithms/0001-1000/0917. Reverse Only Letters/0917. Reverse Only Letters.md",
    "Algorithms/0001-1000/0917. Reverse Only Letters/Solution.java",
    "Algorithms/0001-1000/0918. Maximum Sum Circular Subarray",
    "Algorithms/0001-1000/0918. Maximum Sum Circular Subarray/0918. Maximum Sum Circular Subarray.md",
    "Algorithms/0001-1000/0918. Maximum Sum Circular Subarray/Solution.java",
    "Algorithms/0001-1000/0919. Complete Binary Tree Inserter",
    "Algorithms/0001-1000/0919. Complete Binary Tree Inserter/0919. Complete Binary Tree Inserter.md",
    "Algorithms/0001-1000/0919. Complete Binary Tree Inserter/CBTInserter.java",
    "Algorithms/0001-1000/0920. Number of Music Playlists",
    "Algorithms/0001-1000/0920. Number of Music Playlists/0920. Number of Music Playlists.md",
    "Algorithms/0001-1000/0920. Number of Music Playlists/Solution.java",
    "Algorithms/0001-1000/0921. Minimum Add to Make Parentheses Valid",
    "Algorithms/0001-1000/0921. Minimum Add to Make Parentheses Valid/0921. Minimum Add to Make Parentheses Valid.md",
    "Algorithms/0001-1000/0921. Minimum Add to Make Parentheses Valid/Solution.java",
    "Algorithms/0001-1000/0922. Sort Array By Parity II",
    "Algorithms/0001-1000/0922. Sort Array By Parity II/0922. Sort Array By Parity II.md",
    "Algorithms/0001-1000/0922. Sort Array By Parity II/Solution.java",
    "Algorithms/0001-1000/0923. 3Sum With Multiplicity",
    "Algorithms/0001-1000/0923. 3Sum With Multiplicity/0923. 3Sum With Multiplicity.md",
    "Algorithms/0001-1000/0923. 3Sum With Multiplicity/Solution.java",
    "Algorithms/0001-1000/0924. Minimize Malware Spread",
    "Algorithms/0001-1000/0924. Minimize Malware Spread/0924. Minimize Malware Spread.md",
    "Algorithms/0001-1000/0924. Minimize Malware Spread/Solution.java",
    "Algorithms/0001-1000/0925. Long Pressed Name",
    "Algorithms/0001-1000/0925. Long Pressed Name/0925. Long Pressed Name.md",
    "Algorithms/0001-1000/0925. Long Pressed Name/Solution.java",
    "Algorithms/0001-1000/0926. Flip String to Monotone Increasing",
    "Algorithms/0001-1000/0926. Flip String to Monotone Increasing/0926. Flip String to Monotone Increasing.md",
    "Algorithms/0001-1000/0926. Flip String to Monotone Increasing/Solution.java",
    "Algorithms/0001-1000/0927. Three Equal Parts",
    "Algorithms/0001-1000/0927. Three Equal Parts/0927. Three Equal Parts.md",
    "Algorithms/0001-1000/0927. Three Equal Parts/Solution.java",
    "Algorithms/0001-1000/0928. Minimize Malware Spread II",
    "Algorithms/0001-1000/0928. Minimize Malware Spread II/0928. Minimize Malware Spread II.md",
    "Algorithms/0001-1000/0928. Minimize Malware Spread II/Solution.java",
    "Algorithms/0001-1000/0929. Unique Email Addresses",
    "Algorithms/0001-1000/0929. Unique Email Addresses/0929. Unique Email Addresses.md",
    "Algorithms/0001-1000/0929. Unique Email Addresses/Solution.java",
    "Algorithms/0001-1000/0930. Binary Subarrays With Sum",
    "Algorithms/0001-1000/0930. Binary Subarrays With Sum/0930. Binary Subarrays With Sum.md",
    "Algorithms/0001-1000/0930. Binary Subarrays With Sum/Solution.java",
    "Algorithms/0001-1000/0931. Minimum Falling Path Sum",
    "Algorithms/0001-1000/0931. Minimum Falling Path Sum/0931. Minimum Falling Path Sum.md",
    "Algorithms/0001-1000/0931. Minimum Falling Path Sum/Solution.java",
    "Algorithms/0001-1000/0932. Beautiful Array",
    "Algorithms/0001-1000/0932. Beautiful Array/0932. Beautiful Array.md",
    "Algorithms/0001-1000/0932. Beautiful Array/Solution.java",
    "Algorithms/0001-1000/0933. Number of Recent Calls",
    "Algorithms/0001-1000/0933. Number of Recent Calls/0933. Number of Recent Calls.md",
    "Algorithms/0001-1000/0933. Number of Recent Calls/RecentCounter.java",
    "Algorithms/0001-1000/0934. Shortest Bridge",
    "Algorithms/0001-1000/0934. Shortest Bridge/0934. Shortest Bridge.md",
    "Algorithms/0001-1000/0934. Shortest Bridge/Solution.java",
    "Algorithms/0001-1000/0935. Knight Dialer",
    "Algorithms/0001-1000/0935. Knight Dialer/0935. Knight Dialer.md",
    "Algorithms/0001-1000/0935. Knight Dialer/Solution.java",
    "Algorithms/0001-1000/0936. Stamping The Sequence",
    "Algorithms/0001-1000/0936. Stamping The Sequence/0936. Stamping The Sequence.md",
    "Algorithms/0001-1000/0936. Stamping The Sequence/Solution.java",
    "Algorithms/0001-1000/0937. Reorder Data in Log Files",
    "Algorithms/0001-1000/0937. Reorder Data in Log Files/0937. Reorder Data in Log Files.md",
    "Algorithms/0001-1000/0937. Reorder Data in Log Files/Solution.java",
    "Algorithms/0001-1000/0938. Range Sum of BST",
    "Algorithms/0001-1000/0938. Range Sum of BST/0938. Range Sum of BST.md",
    "Algorithms/0001-1000/0938. Range Sum of BST/Solution.java",
    "Algorithms/0001-1000/0939. Minimum Area Rectangle",
    "Algorithms/0001-1000/0939. Minimum Area Rectangle/0939. Minimum Area Rectangle.md",
    "Algorithms/0001-1000/0939. Minimum Area Rectangle/Solution.java",
    "Algorithms/0001-1000/0940. Distinct Subsequences II",
    "Algorithms/0001-1000/0940. Distinct Subsequences II/0940. Distinct Subsequences II.md",
    "Algorithms/0001-1000/0940. Distinct Subsequences II/Solution.java",
    "Algorithms/0001-1000/0941. Valid Mountain Array",
    "Algorithms/0001-1000/0941. Valid Mountain Array/0941. Valid Mountain Array.md",
    "Algorithms/0001-1000/0941. Valid Mountain Array/Solution.java",
    "Algorithms/0001-1000/0942. DI String Match",
    "Algorithms/0001-1000/0942. DI String Match/0942. DI String Match.md",
    "Algorithms/0001-1000/0942. DI String Match/Solution.java",
    "Algorithms/0001-1000/0943. Find the Shortest Superstring",
    "Algorithms/0001-1000/0943. Find the Shortest Superstring/0943. Find the Shortest Superstring.md",
    "Algorithms/0001-1000/0943. Find the Shortest Superstring/Solution.java",
    "Algorithms/0001-1000/0944. Delete Columns to Make Sorted",
    "Algorithms/0001-1000/0944. Delete Columns to Make Sorted/0944. Delete Columns to Make Sorted.md",
    "Algorithms/0001-1000/0944. Delete Columns to Make Sorted/Solution.java",
    "Algorithms/0001-1000/0945. Minimum Increment to Make Array Unique",
    "Algorithms/0001-1000/0945. Minimum Increment to Make Array Unique/0945. Minimum Increment to Make Array Unique.md",
    "Algorithms/0001-1000/0945. Minimum Increment to Make Array Unique/Solution.java",
    "Algorithms/0001-1000/0946. Validate Stack Sequences",
    "Algorithms/0001-1000/0946. Validate Stack Sequences/0946. Validate Stack Sequences.md",
    "Algorithms/0001-1000/0946. Validate Stack Sequences/Solution.java",
    "Algorithms/0001-1000/0947. Most Stones Removed with Same Row or Column",
    "Algorithms/0001-1000/0947. Most Stones Removed with Same Row or Column/0947. Most Stones Removed with Same Row or Column.md",
    "Algorithms/0001-1000/0947. Most Stones Removed with Same Row or Column/Solution.java",
    "Algorithms/0001-1000/0948. Bag of Tokens",
    "Algorithms/0001-1000/0948. Bag of Tokens/0948. Bag of Tokens.md",
    "Algorithms/0001-1000/0948. Bag of Tokens/Solution.java",
    "Algorithms/0001-1000/0949. Largest Time for Given Digits",
    "Algorithms/0001-1000/0949. Largest Time for Given Digits/0949. Largest Time for Given Digits.md",
    "Algorithms/0001-1000/0949. Largest Time for Given Digits/Solution.java",
    "Algorithms/0001-1000/0950. Reveal Cards In Increasing Order",
    "Algorithms/0001-1000/0950. Reveal Cards In Increasing Order/0950. Reveal Cards In Increasing Order.md",
    "Algorithms/0001-1000/0950. Reveal Cards In Increasing Order/Solution.java",
    "Algorithms/0001-1000/0951. Flip Equivalent Binary Trees",
    "Algorithms/0001-1000/0951. Flip Equivalent Binary Trees/0951. Flip Equivalent Binary Trees.md",
    "Algorithms/0001-1000/0951. Flip Equivalent Binary Trees/Solution.java",
    "Algorithms/0001-1000/0952. Largest Component Size by Common Factor",
    "Algorithms/0001-1000/0952. Largest Component Size by Common Factor/0952. Largest Component Size by Common Factor.md",
    "Algorithms/0001-1000/0952. Largest Component Size by Common Factor/Solution.java",
    "Algorithms/0001-1000/0953. Verifying an Alien Dictionary",
    "Algorithms/0001-1000/0953. Verifying an Alien Dictionary/0953. Verifying an Alien Dictionary.md",
    "Algorithms/0001-1000/0953. Verifying an Alien Dictionary/Solution.java",
    "Algorithms/0001-1000/0954. Array of Doubled Pairs",
    "Algorithms/0001-1000/0954. Array of Doubled Pairs/0954. Array of Doubled Pairs.md",
    "Algorithms/0001-1000/0954. Array of Doubled Pairs/Solution.java",
    "Algorithms/0001-1000/0955. Delete Columns to Make Sorted II",
    "Algorithms/0001-1000/0955. Delete Columns to Make Sorted II/0955. Delete Columns to Make Sorted II.md",
    "Algorithms/0001-1000/0955. Delete Columns to Make Sorted II/Solution.java",
    "Algorithms/0001-1000/0956. Tallest Billboard",
    "Algorithms/0001-1000/0956. Tallest Billboard/0956. Tallest Billboard.md",
    "Algorithms/0001-1000/0956. Tallest Billboard/Solution.java",
    "Algorithms/0001-1000/0957. Prison Cells After N Days",
    "Algorithms/0001-1000/0957. Prison Cells After N Days/0957. Prison Cells After N Days.md",
    "Algorithms/0001-1000/0957. Prison Cells After N Days/Solution.java",
    "Algorithms/0001-1000/0958. Check Completeness of a Binary Tree",
    "Algorithms/0001-1000/0958. Check Completeness of a Binary Tree/0958. Check Completeness of a Binary Tree.md",
    "Algorithms/0001-1000/0958. Check Completeness of a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0959. Regions Cut By Slashes",
    "Algorithms/0001-1000/0959. Regions Cut By Slashes/0959. Regions Cut By Slashes.md",
    "Algorithms/0001-1000/0959. Regions Cut By Slashes/Solution.java",
    "Algorithms/0001-1000/0960. Delete Columns to Make Sorted III",
    "Algorithms/0001-1000/0960. Delete Columns to Make Sorted III/0960. Delete Columns to Make Sorted III.md",
    "Algorithms/0001-1000/0960. Delete Columns to Make Sorted III/Solution.java",
    "Algorithms/0001-1000/0961. N-Repeated Element in Size 2N Array",
    "Algorithms/0001-1000/0961. N-Repeated Element in Size 2N Array/0961. N-Repeated Element in Size 2N Array.md",
    "Algorithms/0001-1000/0961. N-Repeated Element in Size 2N Array/Solution.java",
    "Algorithms/0001-1000/0962. Maximum Width Ramp",
    "Algorithms/0001-1000/0962. Maximum Width Ramp/0962. Maximum Width Ramp.md",
    "Algorithms/0001-1000/0962. Maximum Width Ramp/Solution.java",
    "Algorithms/0001-1000/0963. Minimum Area Rectangle II",
    "Algorithms/0001-1000/0963. Minimum Area Rectangle II/0963. Minimum Area Rectangle II.md",
    "Algorithms/0001-1000/0963. Minimum Area Rectangle II/Solution.java",
    "Algorithms/0001-1000/0964. Least Operators to Express Number",
    "Algorithms/0001-1000/0964. Least Operators to Express Number/0964. Least Operators to Express Number.md",
    "Algorithms/0001-1000/0964. Least Operators to Express Number/Solution.java",
    "Algorithms/0001-1000/0965. Univalued Binary Tree",
    "Algorithms/0001-1000/0965. Univalued Binary Tree/0965. Univalued Binary Tree.md",
    "Algorithms/0001-1000/0965. Univalued Binary Tree/Solution.java",
    "Algorithms/0001-1000/0966. Vowel Spellchecker",
    "Algorithms/0001-1000/0966. Vowel Spellchecker/0966. Vowel Spellchecker.md",
    "Algorithms/0001-1000/0966. Vowel Spellchecker/Solution.java",
    "Algorithms/0001-1000/0967. Numbers With Same Consecutive Differences",
    "Algorithms/0001-1000/0967. Numbers With Same Consecutive Differences/0967. Numbers With Same Consecutive Differences.md",
    "Algorithms/0001-1000/0967. Numbers With Same Consecutive Differences/Solution.java",
    "Algorithms/0001-1000/0968. Binary Tree Cameras",
    "Algorithms/0001-1000/0968. Binary Tree Cameras/0968. Binary Tree Cameras.md",
    "Algorithms/0001-1000/0968. Binary Tree Cameras/Solution.java",
    "Algorithms/0001-1000/0969. Pancake Sorting",
    "Algorithms/0001-1000/0969. Pancake Sorting/0969. Pancake Sorting.md",
    "Algorithms/0001-1000/0969. Pancake Sorting/Solution.java",
    "Algorithms/0001-1000/0970. Powerful Integers",
    "Algorithms/0001-1000/0970. Powerful Integers/0970. Powerful Integers.md",
    "Algorithms/0001-1000/0970. Powerful Integers/Solution.java",
    "Algorithms/0001-1000/0971. Flip Binary Tree To Match Preorder Traversal",
    "Algorithms/0001-1000/0971. Flip Binary Tree To Match Preorder Traversal/0971. Flip Binary Tree To Match Preorder Traversal.md",
    "Algorithms/0001-1000/0971. Flip Binary Tree To Match Preorder Traversal/Solution.java",
    "Algorithms/0001-1000/0972. Equal Rational Numbers",
    "Algorithms/0001-1000/0972. Equal Rational Numbers/0972. Equal Rational Numbers.md",
    "Algorithms/0001-1000/0972. Equal Rational Numbers/Solution.java",
    "Algorithms/0001-1000/0973. K Closest Points to Origin",
    "Algorithms/0001-1000/0973. K Closest Points to Origin/0973. K Closest Points to Origin.md",
    "Algorithms/0001-1000/0973. K Closest Points to Origin/Solution.java",
    "Algorithms/0001-1000/0974. Subarray Sums Divisible by K",
    "Algorithms/0001-1000/0974. Subarray Sums Divisible by K/0974. Subarray Sums Divisible by K.md",
    "Algorithms/0001-1000/0974. Subarray Sums Divisible by K/Solution.java",
    "Algorithms/0001-1000/0975. Odd Even Jump",
    "Algorithms/0001-1000/0975. Odd Even Jump/0975. Odd Even Jump.md",
    "Algorithms/0001-1000/0975. Odd Even Jump/Solution.java",
    "Algorithms/0001-1000/0976. Largest Perimeter Triangle",
    "Algorithms/0001-1000/0976. Largest Perimeter Triangle/0976. Largest Perimeter Triangle.md",
    "Algorithms/0001-1000/0976. Largest Perimeter Triangle/Solution.java",
    "Algorithms/0001-1000/0977. Squares of a Sorted Array",
    "Algorithms/0001-1000/0977. Squares of a Sorted Array/0977. Squares of a Sorted Array.md",
    "Algorithms/0001-1000/0977. Squares of a Sorted Array/Solution.java",
    "Algorithms/0001-1000/0978. Longest Turbulent Subarray",
    "Algorithms/0001-1000/0978. Longest Turbulent Subarray/0978. Longest Turbulent Subarray.md",
    "Algorithms/0001-1000/0978. Longest Turbulent Subarray/Solution.java",
    "Algorithms/0001-1000/0979. Distribute Coins in Binary Tree",
    "Algorithms/0001-1000/0979. Distribute Coins in Binary Tree/0979. Distribute Coins in Binary Tree.md",
    "Algorithms/0001-1000/0979. Distribute Coins in Binary Tree/Solution.java",
    "Algorithms/0001-1000/0980. Unique Paths III",
    "Algorithms/0001-1000/0980. Unique Paths III/0980. Unique Paths III.md",
    "Algorithms/0001-1000/0980. Unique Paths III/Solution.java",
    "Algorithms/0001-1000/0981. Time Based Key-Value Store",
    "Algorithms/0001-1000/0981. Time Based Key-Value Store/0981. Time Based Key-Value Store.md",
    "Algorithms/0001-1000/0981. Time Based Key-Value Store/TimeMap.java",
    "Algorithms/0001-1000/0982. Triples with Bitwise AND Equal To Zero",
    "Algorithms/0001-1000/0982. Triples with Bitwise AND Equal To Zero/0982. Triples with Bitwise AND Equal To Zero.md",
    "Algorithms/0001-1000/0982. Triples with Bitwise AND Equal To Zero/Solution.java",
    "Algorithms/0001-1000/0983. Minimum Cost For Tickets",
    "Algorithms/0001-1000/0983. Minimum Cost For Tickets/0983. Minimum Cost For Tickets.md",
    "Algorithms/0001-1000/0983. Minimum Cost For Tickets/Solution.java",
    "Algorithms/0001-1000/0984. String Without AAA or BBB",
    "Algorithms/0001-1000/0984. String Without AAA or BBB/0984. String Without AAA or BBB.md",
    "Algorithms/0001-1000/0984. String Without AAA or BBB/Solution.java",
    "Algorithms/0001-1000/0985. Sum of Even Numbers After Queries",
    "Algorithms/0001-1000/0985. Sum of Even Numbers After Queries/0985. Sum of Even Numbers After Queries.md",
    "Algorithms/0001-1000/0985. Sum of Even Numbers After Queries/Solution.java",
    "Algorithms/0001-1000/0986. Interval List Intersections",
    "Algorithms/0001-1000/0986. Interval List Intersections/0986. Interval List Intersections.md",
    "Algorithms/0001-1000/0986. Interval List Intersections/Solution.java",
    "Algorithms/0001-1000/0987. Vertical Order Traversal of a Binary Tree",
    "Algorithms/0001-1000/0987. Vertical Order Traversal of a Binary Tree/0987. Vertical Order Traversal of a Binary Tree.md",
    "Algorithms/0001-1000/0987. Vertical Order Traversal of a Binary Tree/Solution.java",
    "Algorithms/0001-1000/0988. Smallest String Starting From Leaf",
    "Algorithms/0001-1000/0988. Smallest String Starting From Leaf/0988. Smallest String Starting From Leaf.md",
    "Algorithms/0001-1000/0988. Smallest String Starting From Leaf/Solution.java",
    "Algorithms/0001-1000/0989. Add to Array-Form of Integer",
    "Algorithms/0001-1000/0989. Add to Array-Form of Integer/0989. Add to Array-Form of Integer.md",
    "Algorithms/0001-1000/0989. Add to Array-Form of Integer/Solution.java",
    "Algorithms/0001-1000/0990. Satisfiability of Equality Equations",
    "Algorithms/0001-1000/0990. Satisfiability of Equality Equations/0990. Satisfiability of Equality Equations.md",
    "Algorithms/0001-1000/0990. Satisfiability of Equality Equations/Solution.java",
    "Algorithms/0001-1000/0991. Broken Calculator",
    "Algorithms/0001-1000/0991. Broken Calculator/0991. Broken Calculator.md",
    "Algorithms/0001-1000/0991. Broken Calculator/Solution.java",
    "Algorithms/0001-1000/0992. Subarrays with K Different Integers",
    "Algorithms/0001-1000/0992. Subarrays with K Different Integers/0992. Subarrays with K Different Integers.md",
    "Algorithms/0001-1000/0992. Subarrays with K Different Integers/Solution.java",
    "Algorithms/0001-1000/0993. Cousins in Binary Tree",
    "Algorithms/0001-1000/0993. Cousins in Binary Tree/0993. Cousins in Binary Tree.md",
    "Algorithms/0001-1000/0993. Cousins in Binary Tree/Solution.java",
    "Algorithms/0001-1000/0994. Rotting Oranges",
    "Algorithms/0001-1000/0994. Rotting Oranges/0994. Rotting Oranges.md",
    "Algorithms/0001-1000/0994. Rotting Oranges/Solution.java",
    "Algorithms/0001-1000/0995. Minimum Number of K Consecutive Bit Flips",
    "Algorithms/0001-1000/0995. Minimum Number of K Consecutive Bit Flips/0995. Minimum Number of K Consecutive Bit Flips.md",
    "Algorithms/0001-1000/0995. Minimum Number of K Consecutive Bit Flips/Solution.java",
    "Algorithms/0001-1000/0996. Number of Squareful Arrays",
    "Algorithms/0001-1000/0996. Number of Squareful Arrays/0996. Number of Squareful Arrays.md",
    "Algorithms/0001-1000/0996. Number of Squareful Arrays/Solution.java",
    "Algorithms/0001-1000/0997. Find the Town Judge",
    "Algorithms/0001-1000/0997. Find the Town Judge/0997. Find the Town Judge.md",
    "Algorithms/0001-1000/0997. Find the Town Judge/Solution.java",
    "Algorithms/0001-1000/0998. Maximum Binary Tree II",
    "Algorithms/0001-1000/0998. Maximum Binary Tree II/0998. Maximum Binary Tree II.md",
    "Algorithms/0001-1000/0998. Maximum Binary Tree II/Solution.java",
    "Algorithms/0001-1000/0999. Available Captures for Rook",
    "Algorithms/0001-1000/0999. Available Captures for Rook/0999. Available Captures for Rook.md",
    "Algorithms/0001-1000/0999. Available Captures for Rook/Solution.java",
    "Algorithms/0001-1000/1000. Minimum Cost to Merge Stones",
    "Algorithms/0001-1000/1000. Minimum Cost to Merge Stones/1000. Minimum Cost to Merge Stones.md",
    "Algorithms/0001-1000/1000. Minimum Cost to Merge Stones/Solution.java",
    "Algorithms/1001-2000",
    "Algorithms/1001-2000/1001. Grid Illumination",
    "Algorithms/1001-2000/1001. Grid Illumination/1001. Grid Illumination.md",
    "Algorithms/1001-2000/1001. Grid Illumination/Solution.java",
    "Algorithms/1001-2000/1002. Find Common Characters",
    "Algorithms/1001-2000/1002. Find Common Characters/1002. Find Common Characters.md",
    "Algorithms/1001-2000/1002. Find Common Characters/Solution.java",
    "Algorithms/1001-2000/1003. Check If Word Is Valid After Substitutions",
    "Algorithms/1001-2000/1003. Check If Word Is Valid After Substitutions/1003. Check If Word Is Valid After Substitutions.md",
    "Algorithms/1001-2000/1003. Check If Word Is Valid After Substitutions/Solution.java",
    "Algorithms/1001-2000/1004. Max Consecutive Ones III",
    "Algorithms/1001-2000/1004. Max Consecutive Ones III/1004. Max Consecutive Ones III.md",
    "Algorithms/1001-2000/1004. Max Consecutive Ones III/Solution.java",
    "Algorithms/1001-2000/1005. Maximize Sum Of Array After K Negations",
    "Algorithms/1001-2000/1005. Maximize Sum Of Array After K Negations/1005. Maximize Sum Of Array After K Negations.md",
    "Algorithms/1001-2000/1005. Maximize Sum Of Array After K Negations/Solution.java",
    "Algorithms/1001-2000/1006. Clumsy Factorial",
    "Algorithms/1001-2000/1006. Clumsy Factorial/1006. Clumsy Factorial.md",
    "Algorithms/1001-2000/1006. Clumsy Factorial/Solution.java",
    "Algorithms/1001-2000/1007. Minimum Domino Rotations For Equal Row",
    "Algorithms/1001-2000/1007. Minimum Domino Rotations For Equal Row/1007. Minimum Domino Rotations For Equal Row.md",
    "Algorithms/1001-2000/1007. Minimum Domino Rotations For Equal Row/Solution.java",
    "Algorithms/1001-2000/1008. Construct Binary Search Tree from Preorder Traversal",
    "Algorithms/1001-2000/1008. Construct Binary Search Tree from Preorder Traversal/1008. Construct Binary Search Tree from Preorder Traversal.md",
    "Algorithms/1001-2000/1008. Construct Binary Search Tree from Preorder Traversal/Solution.java",
    "Algorithms/1001-2000/1009. Complement of Base 10 Integer",
    "Algorithms/1001-2000/1009. Complement of Base 10 Integer/1009. Complement of Base 10 Integer.md",
    "Algorithms/1001-2000/1009. Complement of Base 10 Integer/Solution.java",
    "Algorithms/1001-2000/1010. Pairs of Songs With Total Durations Divisible by 60",
    "Algorithms/1001-2000/1010. Pairs of Songs With Total Durations Divisible by 60/1010. Pairs of Songs With Total Durations Divisible by 60.md",
    "Algorithms/1001-2000/1010. Pairs of Songs With Total Durations Divisible by 60/Solution.java",
    "Algorithms/1001-2000/1011. Capacity To Ship Packages Within D Days",
    "Algorithms/1001-2000/1011. Capacity To Ship Packages Within D Days/1011. Capacity To Ship Packages Within D Days.md",
    "Algorithms/1001-2000/1011. Capacity To Ship Packages Within D Days/Solution.java",
    "Algorithms/1001-2000/1012. Numbers With Repeated Digits",
    "Algorithms/1001-2000/1012. Numbers With Repeated Digits/1012. Numbers With Repeated Digits.md",
    "Algorithms/1001-2000/1012. Numbers With Repeated Digits/Solution.java",
    "Algorithms/1001-2000/1013. Partition Array Into Three Parts With Equal Sum",
    "Algorithms/1001-2000/1013. Partition Array Into Three Parts With Equal Sum/1013. Partition Array Into Three Parts With Equal Sum.md",
    "Algorithms/1001-2000/1013. Partition Array Into Three Parts With Equal Sum/Solution.java",
    "Algorithms/1001-2000/1014. Best Sightseeing Pair",
    "Algorithms/1001-2000/1014. Best Sightseeing Pair/1014. Best Sightseeing Pair.md",
    "Algorithms/1001-2000/1014. Best Sightseeing Pair/Solution.java",
    "Algorithms/1001-2000/1015. Smallest Integer Divisible by K",
    "Algorithms/1001-2000/1015. Smallest Integer Divisible by K/1015. Smallest Integer Divisible by K.md",
    "Algorithms/1001-2000/1015. Smallest Integer Divisible by K/Solution.java",
    "Algorithms/1001-2000/1016. Binary String With Substrings Representing 1 To N",
    "Algorithms/1001-2000/1016. Binary String With Substrings Representing 1 To N/1016. Binary String With Substrings Representing 1 To N.md",
    "Algorithms/1001-2000/1016. Binary String With Substrings Representing 1 To N/Solution.java",
    "Algorithms/1001-2000/1017. Convert to Base -2",
    "Algorithms/1001-2000/1017. Convert to Base -2/1017. Convert to Base -2.md",
    "Algorithms/1001-2000/1017. Convert to Base -2/Solution.java",
    "Algorithms/1001-2000/1018. Binary Prefix Divisible By 5",
    "Algorithms/1001-2000/1018. Binary Prefix Divisible By 5/1018. Binary Prefix Divisible By 5.md",
    "Algorithms/1001-2000/1018. Binary Prefix Divisible By 5/Solution.java",
    "Algorithms/1001-2000/1019. Next Greater Node In Linked List",
    "Algorithms/1001-2000/1019. Next Greater Node In Linked List/1019. Next Greater Node In Linked List.md",
    "Algorithms/1001-2000/1019. Next Greater Node In Linked List/Solution.java",
    "Algorithms/1001-2000/1020. Number of Enclaves",
    "Algorithms/1001-2000/1020. Number of Enclaves/1020. Number of Enclaves.md",
    "Algorithms/1001-2000/1020. Number of Enclaves/Solution.java",
    "Algorithms/1001-2000/1021. Remove Outermost Parentheses",
    "Algorithms/1001-2000/1021. Remove Outermost Parentheses/1021. Remove Outermost Parentheses.md",
    "Algorithms/1001-2000/1021. Remove Outermost Parentheses/Solution.java",
    "Algorithms/1001-2000/1022. Sum of Root To Leaf Binary Numbers",
    "Algorithms/1001-2000/1022. Sum of Root To Leaf Binary Numbers/1022. Sum of Root To Leaf Binary Numbers.md",
    "Algorithms/1001-2000/1022. Sum of Root To Leaf Binary Numbers/Solution.java",
    "Algorithms/1001-2000/1023. Camelcase Matching",
    "Algorithms/1001-2000/1023. Camelcase Matching/1023. Camelcase Matching.md",
    "Algorithms/1001-2000/1023. Camelcase Matching/Solution.java",
    "Algorithms/1001-2000/1024. Video Stitching",
    "Algorithms/1001-2000/1024. Video Stitching/1024. Video Stitching.md",
    "Algorithms/1001-2000/1024. Video Stitching/Solution.java",
    "Algorithms/1001-2000/1025. Divisor Game",
    "Algorithms/1001-2000/1025. Divisor Game/1025. Divisor Game.md",
    "Algorithms/1001-2000/1025. Divisor Game/Solution.java",
    "Algorithms/1001-2000/1026. Maximum Difference Between Node and Ancestor",
    "Algorithms/1001-2000/1026. Maximum Difference Between Node and Ancestor/1026. Maximum Difference Between Node and Ancestor.md",
    "Algorithms/1001-2000/1026. Maximum Difference Between Node and Ancestor/Solution.java",
    "Algorithms/1001-2000/1027. Longest Arithmetic Sequence",
    "Algorithms/1001-2000/1027. Longest Arithmetic Sequence/1027. Longest Arithmetic Sequence.md",
    "Algorithms/1001-2000/1027. Longest Arithmetic Sequence/Solution.java",
    "Algorithms/1001-2000/1028. Recover a Tree From Preorder Traversal",
    "Algorithms/1001-2000/1028. Recover a Tree From Preorder Traversal/1028. Recover a Tree From Preorder Traversal.md",
    "Algorithms/1001-2000/1028. Recover a Tree From Preorder Traversal/Solution.java",
    "Algorithms/1001-2000/1029. Two City Scheduling",
    "Algorithms/1001-2000/1029. Two City Scheduling/1029. Two City Scheduling.md",
    "Algorithms/1001-2000/1029. Two City Scheduling/Solution.java",
    "Algorithms/1001-2000/1030. Matrix Cells in Distance Order",
    "Algorithms/1001-2000/1030. Matrix Cells in Distance Order/1030. Matrix Cells in Distance Order.md",
    "Algorithms/1001-2000/1030. Matrix Cells in Distance Order/Solution.java",
    "Algorithms/1001-2000/1031. Maximum Sum of Two Non-Overlapping Subarrays",
    "Algorithms/1001-2000/1031. Maximum Sum of Two Non-Overlapping Subarrays/1031. Maximum Sum of Two Non-Overlapping Subarrays.md",
    "Algorithms/1001-2000/1031. Maximum Sum of Two Non-Overlapping Subarrays/Solution.java",
    "Algorithms/1001-2000/1032. Stream of Characters",
    "Algorithms/1001-2000/1032. Stream of Characters/1032. Stream of Characters.md",
    "Algorithms/1001-2000/1032. Stream of Characters/StreamChecker.java",
    "Algorithms/1001-2000/1033. Moving Stones Until Consecutive",
    "Algorithms/1001-2000/1033. Moving Stones Until Consecutive/1033. Moving Stones Until Consecutive.md",
    "Algorithms/1001-2000/1033. Moving Stones Until Consecutive/Solution.java",
    "Algorithms/1001-2000/1034. Coloring A Border",
    "Algorithms/1001-2000/1034. Coloring A Border/1034. Coloring A Border.md",
    "Algorithms/1001-2000/1034. Coloring A Border/Solution.java",
    "Algorithms/1001-2000/1035. Uncrossed Lines",
    "Algorithms/1001-2000/1035. Uncrossed Lines/1035. Uncrossed Lines.md",
    "Algorithms/1001-2000/1035. Uncrossed Lines/Solution.java",
    "Algorithms/1001-2000/1036. Escape a Large Maze",
    "Algorithms/1001-2000/1036. Escape a Large Maze/1036. Escape a Large Maze.md",
    "Algorithms/1001-2000/1036. Escape a Large Maze/Solution.java",
    "Algorithms/1001-2000/1037. Valid Boomerang",
    "Algorithms/1001-2000/1037. Valid Boomerang/1037. Valid Boomerang.md",
    "Algorithms/1001-2000/1037. Valid Boomerang/Solution.java",
    "Algorithms/1001-2000/1038. Binary Search Tree to Greater Sum Tree",
    "Algorithms/1001-2000/1038. Binary Search Tree to Greater Sum Tree/1038. Binary Search Tree to Greater Sum Tree.md",
    "Algorithms/1001-2000/1038. Binary Search Tree to Greater Sum Tree/Solution.java",
    "Algorithms/1001-2000/1039. Minimum Score Triangulation of Polygon",
    "Algorithms/1001-2000/1039. Minimum Score Triangulation of Polygon/1039. Minimum Score Triangulation of Polygon.md",
    "Algorithms/1001-2000/1039. Minimum Score Triangulation of Polygon/Solution.java",
    "Algorithms/1001-2000/1040. Moving Stones Until Consecutive II",
    "Algorithms/1001-2000/1040. Moving Stones Until Consecutive II/1040. Moving Stones Until Consecutive II.md",
    "Algorithms/1001-2000/1040. Moving Stones Until Consecutive II/Solution.java",
    "Algorithms/1001-2000/1041. Robot Bounded In Circle",
    "Algorithms/1001-2000/1041. Robot Bounded In Circle/1041. Robot Bounded In Circle.md",
    "Algorithms/1001-2000/1041. Robot Bounded In Circle/Solution.java",
    "Algorithms/1001-2000/1042. Flower Planting With No Adjacent",
    "Algorithms/1001-2000/1042. Flower Planting With No Adjacent/1042. Flower Planting With No Adjacent.md",
    "Algorithms/1001-2000/1042. Flower Planting With No Adjacent/Solution.java",
    "Algorithms/1001-2000/1043. Partition Array for Maximum Sum",
    "Algorithms/1001-2000/1043. Partition Array for Maximum Sum/1043. Partition Array for Maximum Sum.md",
    "Algorithms/1001-2000/1043. Partition Array for Maximum Sum/Solution.java",
    "Algorithms/1001-2000/1044. Longest Duplicate Substring",
    "Algorithms/1001-2000/1044. Longest Duplicate Substring/1044. Longest Duplicate Substring.md",
    "Algorithms/1001-2000/1044. Longest Duplicate Substring/Solution.java",
    "Algorithms/1001-2000/1046. Last Stone Weight",
    "Algorithms/1001-2000/1046. Last Stone Weight/1046. Last Stone Weight.md",
    "Algorithms/1001-2000/1046. Last Stone Weight/Solution.java",
    "Algorithms/1001-2000/1047. Remove All Adjacent Duplicates In String",
    "Algorithms/1001-2000/1047. Remove All Adjacent Duplicates In String/1047. Remove All Adjacent Duplicates In String.md",
    "Algorithms/1001-2000/1047. Remove All Adjacent Duplicates In String/Solution.java",
    "Algorithms/1001-2000/1048. Longest String Chain",
    "Algorithms/1001-2000/1048. Longest String Chain/1048. Longest String Chain.md",
    "Algorithms/1001-2000/1048. Longest String Chain/Solution.java",
    "Algorithms/1001-2000/1049. Last Stone Weight II",
    "Algorithms/1001-2000/1049. Last Stone Weight II/1049. Last Stone Weight II.md",
    "Algorithms/1001-2000/1049. Last Stone Weight II/Solution.java",
    "Algorithms/1001-2000/1051. Height Checker",
    "Algorithms/1001-2000/1051. Height Checker/1051. Height Checker.md",
    "Algorithms/1001-2000/1051. Height Checker/Solution.java",
    "Algorithms/1001-2000/1052. Grumpy Bookstore Owner",
    "Algorithms/1001-2000/1052. Grumpy Bookstore Owner/1052. Grumpy Bookstore Owner.md",
    "Algorithms/1001-2000/1052. Grumpy Bookstore Owner/Solution.java",
    "Algorithms/1001-2000/1053. Previous Permutation With One Swap",
    "Algorithms/1001-2000/1053. Previous Permutation With One Swap/1053. Previous Permutation With One Swap.md",
    "Algorithms/1001-2000/1053. Previous Permutation With One Swap/Solution.java",
    "Algorithms/1001-2000/1054. Distant Barcodes",
    "Algorithms/1001-2000/1054. Distant Barcodes/1054. Distant Barcodes.md",
    "Algorithms/1001-2000/1054. Distant Barcodes/Solution.java",
    "Algorithms/1001-2000/1055. Shortest Way to Form String",
    "Algorithms/1001-2000/1055. Shortest Way to Form String/1055. Shortest Way to Form String.md",
    "Algorithms/1001-2000/1055. Shortest Way to Form String/Solution.java",
    "Algorithms/1001-2000/1056. Confusing Number",
    "Algorithms/1001-2000/1056. Confusing Number/1056. Confusing Number.md",
    "Algorithms/1001-2000/1056. Confusing Number/Solution.java",
    "Algorithms/1001-2000/1057. Campus Bikes",
    "Algorithms/1001-2000/1057. Campus Bikes/1057. Campus Bikes.md",
    "Algorithms/1001-2000/1057. Campus Bikes/Solution.java",
    "Algorithms/1001-2000/1058. Minimize Rounding Error to Meet Target",
    "Algorithms/1001-2000/1058. Minimize Rounding Error to Meet Target/1058. Minimize Rounding Error to Meet Target.md",
    "Algorithms/1001-2000/1058. Minimize Rounding Error to Meet Target/Solution.java",
    "Algorithms/1001-2000/1059. All Paths from Source Lead to Destination",
    "Algorithms/1001-2000/1059. All Paths from Source Lead to Destination/1059. All Paths from Source Lead to Destination.md",
    "Algorithms/1001-2000/1059. All Paths from Source Lead to Destination/Solution.java",
    "Algorithms/1001-2000/1060. Missing Element in Sorted Array",
    "Algorithms/1001-2000/1060. Missing Element in Sorted Array/1060. Missing Element in Sorted Array.md",
    "Algorithms/1001-2000/1060. Missing Element in Sorted Array/Solution.java",
    "Algorithms/1001-2000/1061. Lexicographically Smallest Equivalent String",
    "Algorithms/1001-2000/1061. Lexicographically Smallest Equivalent String/1061. Lexicographically Smallest Equivalent String.md",
    "Algorithms/1001-2000/1061. Lexicographically Smallest Equivalent String/Solution.java",
    "Algorithms/1001-2000/1062. Longest Repeating Substring",
    "Algorithms/1001-2000/1062. Longest Repeating Substring/1062. Longest Repeating Substring.md",
    "Algorithms/1001-2000/1062. Longest Repeating Substring/Solution.java",
    "Algorithms/1001-2000/1063. Number of Valid Subarrays",
    "Algorithms/1001-2000/1063. Number of Valid Subarrays/1063. Number of Valid Subarrays.md",
    "Algorithms/1001-2000/1063. Number of Valid Subarrays/Solution.java",
    "Algorithms/1001-2000/1064. Fixed Point",
    "Algorithms/1001-2000/1064. Fixed Point/1064. Fixed Point.md",
    "Algorithms/1001-2000/1064. Fixed Point/Solution.java",
    "Algorithms/1001-2000/1065. Index Pairs of a String",
    "Algorithms/1001-2000/1065. Index Pairs of a String/1065. Index Pairs of a String.md",
    "Algorithms/1001-2000/1065. Index Pairs of a String/Solution.java",
    "Algorithms/1001-2000/1066. Campus Bikes II",
    "Algorithms/1001-2000/1066. Campus Bikes II/1066. Campus Bikes II.md",
    "Algorithms/1001-2000/1066. Campus Bikes II/Solution.java",
    "Algorithms/1001-2000/1067. Digit Count in Range",
    "Algorithms/1001-2000/1067. Digit Count in Range/1067. Digit Count in Range.md",
    "Algorithms/1001-2000/1067. Digit Count in Range/Solution.java",
    "Algorithms/1001-2000/1071. Greatest Common Divisor of Strings",
    "Algorithms/1001-2000/1071. Greatest Common Divisor of Strings/1071. Greatest Common Divisor of Strings.md",
    "Algorithms/1001-2000/1071. Greatest Common Divisor of Strings/Solution.java",
    "Algorithms/1001-2000/1072. Flip Columns For Maximum Number of Equal Rows",
    "Algorithms/1001-2000/1072. Flip Columns For Maximum Number of Equal Rows/1072. Flip Columns For Maximum Number of Equal Rows.md",
    "Algorithms/1001-2000/1072. Flip Columns For Maximum Number of Equal Rows/Solution.java",
    "Algorithms/1001-2000/1073. Adding Two Negabinary Numbers",
    "Algorithms/1001-2000/1073. Adding Two Negabinary Numbers/1073. Adding Two Negabinary Numbers.md",
    "Algorithms/1001-2000/1073. Adding Two Negabinary Numbers/Solution.java",
    "Algorithms/1001-2000/1074. Number of Submatrices That Sum to Target",
    "Algorithms/1001-2000/1074. Number of Submatrices That Sum to Target/1074. Number of Submatrices That Sum to Target.md",
    "Algorithms/1001-2000/1074. Number of Submatrices That Sum to Target/Solution.java",
    "Algorithms/1001-2000/1078. Occurrences After Bigram",
    "Algorithms/1001-2000/1078. Occurrences After Bigram/1078. Occurrences After Bigram.md",
    "Algorithms/1001-2000/1078. Occurrences After Bigram/Solution.java",
    "Algorithms/1001-2000/1079. Letter Tile Possibilities",
    "Algorithms/1001-2000/1079. Letter Tile Possibilities/1079. Letter Tile Possibilities.md",
    "Algorithms/1001-2000/1079. Letter Tile Possibilities/Solution.java",
    "Algorithms/1001-2000/1080. Insufficient Nodes in Root to Leaf Paths",
    "Algorithms/1001-2000/1080. Insufficient Nodes in Root to Leaf Paths/1080. Insufficient Nodes in Root to Leaf Paths.md",
    "Algorithms/1001-2000/1080. Insufficient Nodes in Root to Leaf Paths/Solution.java",
    "Algorithms/1001-2000/1081. Smallest Subsequence of Distinct Characters",
    "Algorithms/1001-2000/1081. Smallest Subsequence of Distinct Characters/1081. Smallest Subsequence of Distinct Characters.md",
    "Algorithms/1001-2000/1081. Smallest Subsequence of Distinct Characters/Solution.java",
    "Algorithms/1001-2000/1085. Sum of Digits in the Minimum Number",
    "Algorithms/1001-2000/1085. Sum of Digits in the Minimum Number/1085. Sum of Digits in the Minimum Number.md",
    "Algorithms/1001-2000/1085. Sum of Digits in the Minimum Number/Solution.java",
    "Algorithms/1001-2000/1086. High Five",
    "Algorithms/1001-2000/1086. High Five/1086. High Five.md",
    "Algorithms/1001-2000/1086. High Five/Solution.java",
    "Algorithms/1001-2000/1087. Brace Expansion",
    "Algorithms/1001-2000/1087. Brace Expansion/1087. Brace Expansion.md",
    "Algorithms/1001-2000/1087. Brace Expansion/Solution.java",
    "Algorithms/1001-2000/1088. Confusing Number II",
    "Algorithms/1001-2000/1088. Confusing Number II/1088. Confusing Number II.md",
    "Algorithms/1001-2000/1088. Confusing Number II/Solution.java",
    "Algorithms/1001-2000/1089. Duplicate Zeros",
    "Algorithms/1001-2000/1089. Duplicate Zeros/1089. Duplicate Zeros.md",
    "Algorithms/1001-2000/1089. Duplicate Zeros/Solution.java",
    "Algorithms/1001-2000/1090. Largest Values From Labels",
    "Algorithms/1001-2000/1090. Largest Values From Labels/1090. Largest Values From Labels.md",
    "Algorithms/1001-2000/1090. Largest Values From Labels/Solution.java",
    "Algorithms/1001-2000/1091. Shortest Path in Binary Matrix",
    "Algorithms/1001-2000/1091. Shortest Path in Binary Matrix/1091. Shortest Path in Binary Matrix.md",
    "Algorithms/1001-2000/1091. Shortest Path in Binary Matrix/Solution.java",
    "Algorithms/1001-2000/1092. Shortest Common Supersequence",
    "Algorithms/1001-2000/1092. Shortest Common Supersequence/1092. Shortest Common Supersequence.md",
    "Algorithms/1001-2000/1092. Shortest Common Supersequence/Solution.java",
    "Algorithms/1001-2000/1093. Statistics from a Large Sample",
    "Algorithms/1001-2000/1093. Statistics from a Large Sample/1093. Statistics from a Large Sample.md",
    "Algorithms/1001-2000/1093. Statistics from a Large Sample/Solution.java",
    "Algorithms/1001-2000/1094. Car Pooling",
    "Algorithms/1001-2000/1094. Car Pooling/1094. Car Pooling.md",
    "Algorithms/1001-2000/1094. Car Pooling/Solution.java",
    "Algorithms/1001-2000/1095. Find in Mountain Array",
    "Algorithms/1001-2000/1095. Find in Mountain Array/1095. Find in Mountain Array.md",
    "Algorithms/1001-2000/1095. Find in Mountain Array/Solution.java",
    "Algorithms/1001-2000/1096. Brace Expansion II",
    "Algorithms/1001-2000/1096. Brace Expansion II/1096. Brace Expansion II.md",
    "Algorithms/1001-2000/1096. Brace Expansion II/Solution.java",
    "Algorithms/1001-2000/1099. Two Sum Less Than K",
    "Algorithms/1001-2000/1099. Two Sum Less Than K/1099. Two Sum Less Than K.md",
    "Algorithms/1001-2000/1099. Two Sum Less Than K/Solution.java",
    "Algorithms/1001-2000/1100. Find K-Length Substrings With No Repeated Characters",
    "Algorithms/1001-2000/1100. Find K-Length Substrings With No Repeated Characters/1100. Find K-Length Substrings With No Repeated Characters.md",
    "Algorithms/1001-2000/1100. Find K-Length Substrings With No Repeated Characters/Solution.java",
    "Algorithms/1001-2000/1101. The Earliest Moment When Everyone Become Friends",
    "Algorithms/1001-2000/1101. The Earliest Moment When Everyone Become Friends/1101. The Earliest Moment When Everyone Become Friends.md",
    "Algorithms/1001-2000/1101. The Earliest Moment When Everyone Become Friends/Solution.java",
    "Algorithms/1001-2000/1102. Path With Maximum Minimum Value",
    "Algorithms/1001-2000/1102. Path With Maximum Minimum Value/1102. Path With Maximum Minimum Value.md",
    "Algorithms/1001-2000/1102. Path With Maximum Minimum Value/Solution.java",
    "Algorithms/1001-2000/1103. Distribute Candies to People",
    "Algorithms/1001-2000/1103. Distribute Candies to People/1103. Distribute Candies to People.md",
    "Algorithms/1001-2000/1103. Distribute Candies to People/Solution.java",
    "Algorithms/1001-2000/1104. Path In Zigzag Labelled Binary Tree",
    "Algorithms/1001-2000/1104. Path In Zigzag Labelled Binary Tree/1104. Path In Zigzag Labelled Binary Tree.md",
    "Algorithms/1001-2000/1104. Path In Zigzag Labelled Binary Tree/Solution.java",
    "Algorithms/1001-2000/1105. Filling Bookcase Shelves",
    "Algorithms/1001-2000/1105. Filling Bookcase Shelves/1105. Filling Bookcase Shelves.md",
    "Algorithms/1001-2000/1105. Filling Bookcase Shelves/Solution.java",
    "Algorithms/1001-2000/1106. Parsing A Boolean Expression",
    "Algorithms/1001-2000/1106. Parsing A Boolean Expression/1106. Parsing A Boolean Expression.md",
    "Algorithms/1001-2000/1106. Parsing A Boolean Expression/Solution.java",
    "Algorithms/1001-2000/1108. Defanging an IP Address",
    "Algorithms/1001-2000/1108. Defanging an IP Address/1108. Defanging an IP Address.md",
    "Algorithms/1001-2000/1108. Defanging an IP Address/Solution.java",
    "Algorithms/1001-2000/1109. Corporate Flight Bookings",
    "Algorithms/1001-2000/1109. Corporate Flight Bookings/1109. Corporate Flight Bookings.md",
    "Algorithms/1001-2000/1109. Corporate Flight Bookings/Solution.java",
    "Algorithms/1001-2000/1110. Delete Nodes And Return Forest",
    "Algorithms/1001-2000/1110. Delete Nodes And Return Forest/1110. Delete Nodes And Return Forest.md",
    "Algorithms/1001-2000/1110. Delete Nodes And Return Forest/Solution.java",
    "Algorithms/1001-2000/1111. Maximum Nesting Depth of Two Valid Parentheses Strings",
    "Algorithms/1001-2000/1111. Maximum Nesting Depth of Two Valid Parentheses Strings/1111. Maximum Nesting Depth of Two Valid Parentheses Strings.md",
    "Algorithms/1001-2000/1111. Maximum Nesting Depth of Two Valid Parentheses Strings/Solution.java",
    "Algorithms/1001-2000/1118. Number of Days in a Month",
    "Algorithms/1001-2000/1118. Number of Days in a Month/1118. Number of Days in a Month.md",
    "Algorithms/1001-2000/1118. Number of Days in a Month/Solution.java",
    "Algorithms/1001-2000/1119. Remove Vowels from a String",
    "Algorithms/1001-2000/1119. Remove Vowels from a String/1119. Remove Vowels from a String.md",
    "Algorithms/1001-2000/1119. Remove Vowels from a String/Solution.java",
    "Algorithms/1001-2000/1120. Maximum Average Subtree",
    "Algorithms/1001-2000/1120. Maximum Average Subtree/1120. Maximum Average Subtree.md",
    "Algorithms/1001-2000/1120. Maximum Average Subtree/Solution.java",
    "Algorithms/1001-2000/1121. Divide Array Into Increasing Sequences",
    "Algorithms/1001-2000/1121. Divide Array Into Increasing Sequences/1121. Divide Array Into Increasing Sequences.md",
    "Algorithms/1001-2000/1121. Divide Array Into Increasing Sequences/Solution.java",
    "Algorithms/1001-2000/1122. Relative Sort Array",
    "Algorithms/1001-2000/1122. Relative Sort Array/1122. Relative Sort Array.md",
    "Algorithms/1001-2000/1122. Relative Sort Array/Solution.java",
    "Algorithms/1001-2000/1123. Lowest Common Ancestor of Deepest Leaves",
    "Algorithms/1001-2000/1123. Lowest Common Ancestor of Deepest Leaves/1123. Lowest Common Ancestor of Deepest Leaves.md",
    "Algorithms/1001-2000/1123. Lowest Common Ancestor of Deepest Leaves/Solution.java",
    "Algorithms/1001-2000/1124. Longest Well-Performing Interval",
    "Algorithms/1001-2000/1124. Longest Well-Performing Interval/1124. Longest Well-Performing Interval.md",
    "Algorithms/1001-2000/1124. Longest Well-Performing Interval/Solution.java",
    "Algorithms/1001-2000/1125. Smallest Sufficient Team",
    "Algorithms/1001-2000/1125. Smallest Sufficient Team/1125. Smallest Sufficient Team.md",
    "Algorithms/1001-2000/1125. Smallest Sufficient Team/Solution.java",
    "Algorithms/1001-2000/1128. Number of Equivalent Domino Pairs",
    "Algorithms/1001-2000/1128. Number of Equivalent Domino Pairs/1128. Number of Equivalent Domino Pairs.md",
    "Algorithms/1001-2000/1128. Number of Equivalent Domino Pairs/Solution.java",
    "Algorithms/1001-2000/1129. Shortest Path with Alternating Colors",
    "Algorithms/1001-2000/1129. Shortest Path with Alternating Colors/1129. Shortest Path with Alternating Colors.md",
    "Algorithms/1001-2000/1129. Shortest Path with Alternating Colors/Solution.java",
    "Algorithms/1001-2000/1130. Minimum Cost Tree From Leaf Values",
    "Algorithms/1001-2000/1130. Minimum Cost Tree From Leaf Values/1130. Minimum Cost Tree From Leaf Values.md",
    "Algorithms/1001-2000/1130. Minimum Cost Tree From Leaf Values/Solution.java",
    "Algorithms/1001-2000/1131. Maximum of Absolute Value Expression",
    "Algorithms/1001-2000/1131. Maximum of Absolute Value Expression/1131. Maximum of Absolute Value Expression.md",
    "Algorithms/1001-2000/1131. Maximum of Absolute Value Expression/Solution.java",
    "Algorithms/1001-2000/1133. Largest Unique Number",
    "Algorithms/1001-2000/1133. Largest Unique Number/1133. Largest Unique Number.md",
    "Algorithms/1001-2000/1133. Largest Unique Number/Solution.java",
    "Algorithms/1001-2000/1134. Armstrong Number",
    "Algorithms/1001-2000/1134. Armstrong Number/1134. Armstrong Number.md",
    "Algorithms/1001-2000/1134. Armstrong Number/Solution.java",
    "Algorithms/1001-2000/1135. Connecting Cities With Minimum Cost",
    "Algorithms/1001-2000/1135. Connecting Cities With Minimum Cost/1135. Connecting Cities With Minimum Cost.md",
    "Algorithms/1001-2000/1135. Connecting Cities With Minimum Cost/Solution.java",
    "Algorithms/1001-2000/1136. Parallel Courses",
    "Algorithms/1001-2000/1136. Parallel Courses/1136. Parallel Courses.md",
    "Algorithms/1001-2000/1136. Parallel Courses/Solution.java",
    "Algorithms/1001-2000/1137. N-th Tribonacci Number.md",
    "Algorithms/1001-2000/1137. N-th Tribonacci Number.md/1137. N-th Tribonacci Number.md",
    "Algorithms/1001-2000/1137. N-th Tribonacci Number.md/Solution.java",
    "Algorithms/1001-2000/1138. Alphabet Board Path",
    "Algorithms/1001-2000/1138. Alphabet Board Path/1138. Alphabet Board Path.md",
    "Algorithms/1001-2000/1138. Alphabet Board Path/Solution.java",
    "Algorithms/1001-2000/1139. Largest 1-Bordered Square",
    "Algorithms/1001-2000/1139. Largest 1-Bordered Square/1139. Largest 1-Bordered Square.md",
    "Algorithms/1001-2000/1139. Largest 1-Bordered Square/Solution.java",
    "Algorithms/1001-2000/1140. Stone Game II",
    "Algorithms/1001-2000/1140. Stone Game II/1140. Stone Game II.md",
    "Algorithms/1001-2000/1140. Stone Game II/Solution.java",
    "Algorithms/1001-2000/1143. Longest Common Subsequence",
    "Algorithms/1001-2000/1143. Longest Common Subsequence/1143. Longest Common Subsequence.md",
    "Algorithms/1001-2000/1143. Longest Common Subsequence/Solution.java",
    "Algorithms/1001-2000/1144. Decrease Elements To Make Array Zigzag",
    "Algorithms/1001-2000/1144. Decrease Elements To Make Array Zigzag/1144. Decrease Elements To Make Array Zigzag.md",
    "Algorithms/1001-2000/1144. Decrease Elements To Make Array Zigzag/Solution.java",
    "Algorithms/1001-2000/1145. Binary Tree Coloring Game",
    "Algorithms/1001-2000/1145. Binary Tree Coloring Game/1145. Binary Tree Coloring Game.md",
    "Algorithms/1001-2000/1145. Binary Tree Coloring Game/Solution.java",
    "Algorithms/1001-2000/1146. Snapshot Array",
    "Algorithms/1001-2000/1146. Snapshot Array/1146. Snapshot Array.md",
    "Algorithms/1001-2000/1146. Snapshot Array/SnapshotArray.java",
    "Algorithms/1001-2000/1147. Longest Chunked Palindrome Decomposition",
    "Algorithms/1001-2000/1147. Longest Chunked Palindrome Decomposition/1147. Longest Chunked Palindrome Decomposition.md",
    "Algorithms/1001-2000/1147. Longest Chunked Palindrome Decomposition/Solution.java",
    "Algorithms/1001-2000/1150. Check If a Number Is Majority Element in a Sorted Array",
    "Algorithms/1001-2000/1150. Check If a Number Is Majority Element in a Sorted Array/1150. Check If a Number Is Majority Element in a Sorted Array.md",
    "Algorithms/1001-2000/1150. Check If a Number Is Majority Element in a Sorted Array/Solution.java",
    "Algorithms/1001-2000/1151. Minimum Swaps to Group All 1's Together",
    "Algorithms/1001-2000/1151. Minimum Swaps to Group All 1's Together/1151. Minimum Swaps to Group All 1's Together.md",
    "Algorithms/1001-2000/1151. Minimum Swaps to Group All 1's Together/Solution.java",
    "Algorithms/1001-2000/1152. Analyze User Website Visit Pattern",
    "Algorithms/1001-2000/1152. Analyze User Website Visit Pattern/1152. Analyze User Website Visit Pattern.md",
    "Algorithms/1001-2000/1152. Analyze User Website Visit Pattern/Solution.java",
    "Algorithms/1001-2000/1153. String Transforms Into Another String",
    "Algorithms/1001-2000/1153. String Transforms Into Another String/1153. String Transforms Into Another String.md",
    "Algorithms/1001-2000/1153. String Transforms Into Another String/Solution.java",
    "Algorithms/1001-2000/1154. Day of the Year",
    "Algorithms/1001-2000/1154. Day of the Year/1154. Day of the Year.md",
    "Algorithms/1001-2000/1154. Day of the Year/Solution.java",
    "Algorithms/1001-2000/1155. Number of Dice Rolls With Target Sum",
    "Algorithms/1001-2000/1155. Number of Dice Rolls With Target Sum/1155. Number of Dice Rolls With Target Sum.md",
    "Algorithms/1001-2000/1155. Number of Dice Rolls With Target Sum/Solution.java",
    "Algorithms/1001-2000/1156. Swap For Longest Repeated Character Substring",
    "Algorithms/1001-2000/1156. Swap For Longest Repeated Character Substring/1156. Swap For Longest Repeated Character Substring.md",
    "Algorithms/1001-2000/1156. Swap For Longest Repeated Character Substring/Solution.java",
    "Algorithms/1001-2000/1157. Online Majority Element In Subarray",
    "Algorithms/1001-2000/1157. Online Majority Element In Subarray/1157. Online Majority Element In Subarray.md",
    "Algorithms/1001-2000/1157. Online Majority Element In Subarray/MajorityChecker.java",
    "Algorithms/1001-2000/1160. Find Words That Can Be Formed by Characters",
    "Algorithms/1001-2000/1160. Find Words That Can Be Formed by Characters/1160. Find Words That Can Be Formed by Characters.md",
    "Algorithms/1001-2000/1160. Find Words That Can Be Formed by Characters/Solution.java",
    "Algorithms/1001-2000/1161. Maximum Level Sum of a Binary Tree",
    "Algorithms/1001-2000/1161. Maximum Level Sum of a Binary Tree/1161. Maximum Level Sum of a Binary Tree.md",
    "Algorithms/1001-2000/1161. Maximum Level Sum of a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1162. As Far from Land as Possible",
    "Algorithms/1001-2000/1162. As Far from Land as Possible/1162. As Far from Land as Possible.md",
    "Algorithms/1001-2000/1162. As Far from Land as Possible/Solution.java",
    "Algorithms/1001-2000/1163. Last Substring in Lexicographical Order",
    "Algorithms/1001-2000/1163. Last Substring in Lexicographical Order/1163. Last Substring in Lexicographical Order.md",
    "Algorithms/1001-2000/1163. Last Substring in Lexicographical Order/Solution.java",
    "Algorithms/1001-2000/1165. Single-Row Keyboard",
    "Algorithms/1001-2000/1165. Single-Row Keyboard/1165. Single-Row Keyboard.md",
    "Algorithms/1001-2000/1165. Single-Row Keyboard/Solution.java",
    "Algorithms/1001-2000/1166. Design File System",
    "Algorithms/1001-2000/1166. Design File System/1166. Design File System.md",
    "Algorithms/1001-2000/1166. Design File System/FileSystem.java",
    "Algorithms/1001-2000/1167. Minimum Cost to Connect Sticks",
    "Algorithms/1001-2000/1167. Minimum Cost to Connect Sticks/1167. Minimum Cost to Connect Sticks.md",
    "Algorithms/1001-2000/1167. Minimum Cost to Connect Sticks/Solution.java",
    "Algorithms/1001-2000/1168. Optimize Water Distribution in a Village",
    "Algorithms/1001-2000/1168. Optimize Water Distribution in a Village/1168. Optimize Water Distribution in a Village.md",
    "Algorithms/1001-2000/1168. Optimize Water Distribution in a Village/Solution.java",
    "Algorithms/1001-2000/1169. Invalid Transactions",
    "Algorithms/1001-2000/1169. Invalid Transactions/1169. Invalid Transactions.md",
    "Algorithms/1001-2000/1169. Invalid Transactions/Solution.java",
    "Algorithms/1001-2000/1170. Compare Strings by Frequency of the Smallest Character",
    "Algorithms/1001-2000/1170. Compare Strings by Frequency of the Smallest Character/1170. Compare Strings by Frequency of the Smallest Character.md",
    "Algorithms/1001-2000/1170. Compare Strings by Frequency of the Smallest Character/Solution.java",
    "Algorithms/1001-2000/1171. Remove Zero Sum Consecutive Nodes from Linked List",
    "Algorithms/1001-2000/1171. Remove Zero Sum Consecutive Nodes from Linked List/1171. Remove Zero Sum Consecutive Nodes from Linked List.md",
    "Algorithms/1001-2000/1171. Remove Zero Sum Consecutive Nodes from Linked List/Solution.java",
    "Algorithms/1001-2000/1172. Dinner Plate Stacks",
    "Algorithms/1001-2000/1172. Dinner Plate Stacks/1172. Dinner Plate Stacks.md",
    "Algorithms/1001-2000/1172. Dinner Plate Stacks/DinnerPlates.java",
    "Algorithms/1001-2000/1175. Prime Arrangements",
    "Algorithms/1001-2000/1175. Prime Arrangements/1175. Prime Arrangements.md",
    "Algorithms/1001-2000/1175. Prime Arrangements/Solution.java",
    "Algorithms/1001-2000/1176. Diet Plan Performance",
    "Algorithms/1001-2000/1176. Diet Plan Performance/1176. Diet Plan Performance.md",
    "Algorithms/1001-2000/1176. Diet Plan Performance/Solution.java",
    "Algorithms/1001-2000/1177. Can Make Palindrome from Substring",
    "Algorithms/1001-2000/1177. Can Make Palindrome from Substring/1177. Can Make Palindrome from Substring.md",
    "Algorithms/1001-2000/1177. Can Make Palindrome from Substring/Solution.java",
    "Algorithms/1001-2000/1178. Number of Valid Words for Each Puzzle",
    "Algorithms/1001-2000/1178. Number of Valid Words for Each Puzzle/1178. Number of Valid Words for Each Puzzle.md",
    "Algorithms/1001-2000/1178. Number of Valid Words for Each Puzzle/Solution.java",
    "Algorithms/1001-2000/1180. Count Substrings with Only One Distinct Letter",
    "Algorithms/1001-2000/1180. Count Substrings with Only One Distinct Letter/1180. Count Substrings with Only One Distinct Letter.md",
    "Algorithms/1001-2000/1180. Count Substrings with Only One Distinct Letter/Solution.java",
    "Algorithms/1001-2000/1181. Before and After Puzzle",
    "Algorithms/1001-2000/1181. Before and After Puzzle/1181. Before and After Puzzle.md",
    "Algorithms/1001-2000/1181. Before and After Puzzle/Solution.java",
    "Algorithms/1001-2000/1182. Shortest Distance to Target Color",
    "Algorithms/1001-2000/1182. Shortest Distance to Target Color/1182. Shortest Distance to Target Color.md",
    "Algorithms/1001-2000/1182. Shortest Distance to Target Color/Solution.java",
    "Algorithms/1001-2000/1183. Maximum Number of Ones",
    "Algorithms/1001-2000/1183. Maximum Number of Ones/1183. Maximum Number of Ones.md",
    "Algorithms/1001-2000/1183. Maximum Number of Ones/Solution.java",
    "Algorithms/1001-2000/1184. Distance Between Bus Stops",
    "Algorithms/1001-2000/1184. Distance Between Bus Stops/1184. Distance Between Bus Stops.md",
    "Algorithms/1001-2000/1184. Distance Between Bus Stops/Solution.java",
    "Algorithms/1001-2000/1185. Day of the Week",
    "Algorithms/1001-2000/1185. Day of the Week/1185. Day of the Week.md",
    "Algorithms/1001-2000/1185. Day of the Week/Solution.java",
    "Algorithms/1001-2000/1186. Maximum Subarray Sum with One Deletion",
    "Algorithms/1001-2000/1186. Maximum Subarray Sum with One Deletion/1186. Maximum Subarray Sum with One Deletion.md",
    "Algorithms/1001-2000/1186. Maximum Subarray Sum with One Deletion/Solution.java",
    "Algorithms/1001-2000/1187. Make Array Strictly Increasing",
    "Algorithms/1001-2000/1187. Make Array Strictly Increasing/1187. Make Array Strictly Increasing.md",
    "Algorithms/1001-2000/1187. Make Array Strictly Increasing/Solution.java",
    "Algorithms/1001-2000/1189. Maximum Number of Balloons",
    "Algorithms/1001-2000/1189. Maximum Number of Balloons/1189. Maximum Number of Balloons.md",
    "Algorithms/1001-2000/1189. Maximum Number of Balloons/Solution.java",
    "Algorithms/1001-2000/1190. Reverse Substrings Between Each Pair of Parentheses",
    "Algorithms/1001-2000/1190. Reverse Substrings Between Each Pair of Parentheses/1190. Reverse Substrings Between Each Pair of Parentheses.md",
    "Algorithms/1001-2000/1190. Reverse Substrings Between Each Pair of Parentheses/Solution.java",
    "Algorithms/1001-2000/1191. K-Concatenation Maximum Sum",
    "Algorithms/1001-2000/1191. K-Concatenation Maximum Sum/1191. K-Concatenation Maximum Sum.md",
    "Algorithms/1001-2000/1191. K-Concatenation Maximum Sum/Solution.java",
    "Algorithms/1001-2000/1192. Critical Connections in a Network",
    "Algorithms/1001-2000/1192. Critical Connections in a Network/1192. Critical Connections in a Network.md",
    "Algorithms/1001-2000/1192. Critical Connections in a Network/Solution.java",
    "Algorithms/1001-2000/1196. How Many Apples Can You Put into the Basket",
    "Algorithms/1001-2000/1196. How Many Apples Can You Put into the Basket/1196. How Many Apples Can You Put into the Basket.md",
    "Algorithms/1001-2000/1196. How Many Apples Can You Put into the Basket/Solution.java",
    "Algorithms/1001-2000/1197. Minimum Knight Moves",
    "Algorithms/1001-2000/1197. Minimum Knight Moves/1197. Minimum Knight Moves.md",
    "Algorithms/1001-2000/1197. Minimum Knight Moves/Solution.java",
    "Algorithms/1001-2000/1198. Find Smallest Common Element in All Rows",
    "Algorithms/1001-2000/1198. Find Smallest Common Element in All Rows/1198. Find Smallest Common Element in All Rows.md",
    "Algorithms/1001-2000/1198. Find Smallest Common Element in All Rows/Solution.java",
    "Algorithms/1001-2000/1199. Minimum Time to Build Blocks",
    "Algorithms/1001-2000/1199. Minimum Time to Build Blocks/1199. Minimum Time to Build Blocks.md",
    "Algorithms/1001-2000/1199. Minimum Time to Build Blocks/Solution.java",
    "Algorithms/1001-2000/1200. Minimum Absolute Difference",
    "Algorithms/1001-2000/1200. Minimum Absolute Difference/1200. Minimum Absolute Difference.md",
    "Algorithms/1001-2000/1200. Minimum Absolute Difference/Solution.java",
    "Algorithms/1001-2000/1201. Ugly Number III",
    "Algorithms/1001-2000/1201. Ugly Number III/1201. Ugly Number III.md",
    "Algorithms/1001-2000/1201. Ugly Number III/Solution.java",
    "Algorithms/1001-2000/1202. Smallest String With Swaps",
    "Algorithms/1001-2000/1202. Smallest String With Swaps/1202. Smallest String With Swaps.md",
    "Algorithms/1001-2000/1202. Smallest String With Swaps/Solution.java",
    "Algorithms/1001-2000/1203. Sort Items by Groups Respecting Dependencies",
    "Algorithms/1001-2000/1203. Sort Items by Groups Respecting Dependencies/1203. Sort Items by Groups Respecting Dependencies.md",
    "Algorithms/1001-2000/1203. Sort Items by Groups Respecting Dependencies/Solution.java",
    "Algorithms/1001-2000/1206. Design Skiplist",
    "Algorithms/1001-2000/1206. Design Skiplist/1206. Design Skiplist.md",
    "Algorithms/1001-2000/1206. Design Skiplist/Skiplist.java",
    "Algorithms/1001-2000/1207. Unique Number of Occurrences",
    "Algorithms/1001-2000/1207. Unique Number of Occurrences/1207. Unique Number of Occurrences.md",
    "Algorithms/1001-2000/1207. Unique Number of Occurrences/Solution.java",
    "Algorithms/1001-2000/1208. Get Equal Substrings Within Budget",
    "Algorithms/1001-2000/1208. Get Equal Substrings Within Budget/1208. Get Equal Substrings Within Budget.md",
    "Algorithms/1001-2000/1208. Get Equal Substrings Within Budget/Solution.java",
    "Algorithms/1001-2000/1209. Remove All Adjacent Duplicates in String II",
    "Algorithms/1001-2000/1209. Remove All Adjacent Duplicates in String II/1209. Remove All Adjacent Duplicates in String II.md",
    "Algorithms/1001-2000/1209. Remove All Adjacent Duplicates in String II/Solution.java",
    "Algorithms/1001-2000/1210. Minimum Moves to Reach Target with Rotations",
    "Algorithms/1001-2000/1210. Minimum Moves to Reach Target with Rotations/1210. Minimum Moves to Reach Target with Rotations.md",
    "Algorithms/1001-2000/1210. Minimum Moves to Reach Target with Rotations/Solution.java",
    "Algorithms/1001-2000/1213. Intersection of Three Sorted Arrays",
    "Algorithms/1001-2000/1213. Intersection of Three Sorted Arrays/1213. Intersection of Three Sorted Arrays.md",
    "Algorithms/1001-2000/1213. Intersection of Three Sorted Arrays/Solution.java",
    "Algorithms/1001-2000/1214. Two Sum BSTs",
    "Algorithms/1001-2000/1214. Two Sum BSTs/1214. Two Sum BSTs.md",
    "Algorithms/1001-2000/1214. Two Sum BSTs/Solution.java",
    "Algorithms/1001-2000/1215. Stepping Numbers",
    "Algorithms/1001-2000/1215. Stepping Numbers/1215. Stepping Numbers.md",
    "Algorithms/1001-2000/1215. Stepping Numbers/Solution.java",
    "Algorithms/1001-2000/1216. Valid Palindrome III",
    "Algorithms/1001-2000/1216. Valid Palindrome III/1216. Valid Palindrome III.md",
    "Algorithms/1001-2000/1216. Valid Palindrome III/Solution.java",
    "Algorithms/1001-2000/1217. Play with Chips",
    "Algorithms/1001-2000/1217. Play with Chips/1217. Play with Chips.md",
    "Algorithms/1001-2000/1217. Play with Chips/Solution.java",
    "Algorithms/1001-2000/1218. Longest Arithmetic Subsequence of Given Difference",
    "Algorithms/1001-2000/1218. Longest Arithmetic Subsequence of Given Difference/1218. Longest Arithmetic Subsequence of Given Difference.md",
    "Algorithms/1001-2000/1218. Longest Arithmetic Subsequence of Given Difference/Solution.java",
    "Algorithms/1001-2000/1219. Path with Maximum Gold",
    "Algorithms/1001-2000/1219. Path with Maximum Gold/1219. Path with Maximum Gold.md",
    "Algorithms/1001-2000/1219. Path with Maximum Gold/Solution.java",
    "Algorithms/1001-2000/1220. Count Vowels Permutation",
    "Algorithms/1001-2000/1220. Count Vowels Permutation/1220. Count Vowels Permutation.md",
    "Algorithms/1001-2000/1220. Count Vowels Permutation/Solution.java",
    "Algorithms/1001-2000/1221. Split a String in Balanced Strings",
    "Algorithms/1001-2000/1221. Split a String in Balanced Strings/1221. Split a String in Balanced Strings.md",
    "Algorithms/1001-2000/1221. Split a String in Balanced Strings/Solution.java",
    "Algorithms/1001-2000/1222. Queens That Can Attack the King",
    "Algorithms/1001-2000/1222. Queens That Can Attack the King/1222. Queens That Can Attack the King.md",
    "Algorithms/1001-2000/1222. Queens That Can Attack the King/Solution.java",
    "Algorithms/1001-2000/1223. Dice Roll Simulation",
    "Algorithms/1001-2000/1223. Dice Roll Simulation/1223. Dice Roll Simulation.md",
    "Algorithms/1001-2000/1223. Dice Roll Simulation/Solution.java",
    "Algorithms/1001-2000/1224. Maximum Equal Frequency",
    "Algorithms/1001-2000/1224. Maximum Equal Frequency/1224. Maximum Equal Frequency.md",
    "Algorithms/1001-2000/1224. Maximum Equal Frequency/Solution.java",
    "Algorithms/1001-2000/1227. Airplane Seat Assignment Probability",
    "Algorithms/1001-2000/1227. Airplane Seat Assignment Probability/1227. Airplane Seat Assignment Probability.md",
    "Algorithms/1001-2000/1227. Airplane Seat Assignment Probability/Solution.java",
    "Algorithms/1001-2000/1228. Missing Number In Arithmetic Progression",
    "Algorithms/1001-2000/1228. Missing Number In Arithmetic Progression/1228. Missing Number In Arithmetic Progression.md",
    "Algorithms/1001-2000/1228. Missing Number In Arithmetic Progression/Solution.java",
    "Algorithms/1001-2000/1229. Meeting Scheduler",
    "Algorithms/1001-2000/1229. Meeting Scheduler/1229. Meeting Scheduler.md",
    "Algorithms/1001-2000/1229. Meeting Scheduler/Solution.java",
    "Algorithms/1001-2000/1230. Toss Strange Coins",
    "Algorithms/1001-2000/1230. Toss Strange Coins/1230. Toss Strange Coins.md",
    "Algorithms/1001-2000/1230. Toss Strange Coins/Solution.java",
    "Algorithms/1001-2000/1231. Divide Chocolate",
    "Algorithms/1001-2000/1231. Divide Chocolate/1231. Divide Chocolate.md",
    "Algorithms/1001-2000/1231. Divide Chocolate/Solution.java",
    "Algorithms/1001-2000/1232. Check If It Is a Straight Line",
    "Algorithms/1001-2000/1232. Check If It Is a Straight Line/1232. Check If It Is a Straight Line.md",
    "Algorithms/1001-2000/1232. Check If It Is a Straight Line/Solution.java",
    "Algorithms/1001-2000/1233. Remove Sub-Folders from the Filesystem",
    "Algorithms/1001-2000/1233. Remove Sub-Folders from the Filesystem/1233. Remove Sub-Folders from the Filesystem.md",
    "Algorithms/1001-2000/1233. Remove Sub-Folders from the Filesystem/Solution.java",
    "Algorithms/1001-2000/1234. Replace the Substring for Balanced String",
    "Algorithms/1001-2000/1234. Replace the Substring for Balanced String/1234. Replace the Substring for Balanced String.md",
    "Algorithms/1001-2000/1234. Replace the Substring for Balanced String/Solution.java",
    "Algorithms/1001-2000/1235. Maximum Profit in Job Scheduling",
    "Algorithms/1001-2000/1235. Maximum Profit in Job Scheduling/1235. Maximum Profit in Job Scheduling.md",
    "Algorithms/1001-2000/1235. Maximum Profit in Job Scheduling/Solution.java",
    "Algorithms/1001-2000/1236. Web Crawler",
    "Algorithms/1001-2000/1236. Web Crawler/1236. Web Crawler.md",
    "Algorithms/1001-2000/1236. Web Crawler/Solution.java",
    "Algorithms/1001-2000/1237. Find Positive Integer Solution for a Given Equation",
    "Algorithms/1001-2000/1237. Find Positive Integer Solution for a Given Equation/1237. Find Positive Integer Solution for a Given Equation.md",
    "Algorithms/1001-2000/1237. Find Positive Integer Solution for a Given Equation/Solution.java",
    "Algorithms/1001-2000/1238. Circular Permutation in Binary Representation",
    "Algorithms/1001-2000/1238. Circular Permutation in Binary Representation/1238. Circular Permutation in Binary Representation.md",
    "Algorithms/1001-2000/1238. Circular Permutation in Binary Representation/Solution.java",
    "Algorithms/1001-2000/1239. Maximum Length of a Concatenated String with Unique Characters",
    "Algorithms/1001-2000/1239. Maximum Length of a Concatenated String with Unique Characters/1239. Maximum Length of a Concatenated String with Unique Characters.md",
    "Algorithms/1001-2000/1239. Maximum Length of a Concatenated String with Unique Characters/Solution.java",
    "Algorithms/1001-2000/1240. Tiling a Rectangle with the Fewest Squares",
    "Algorithms/1001-2000/1240. Tiling a Rectangle with the Fewest Squares/1240. Tiling a Rectangle with the Fewest Squares.md",
    "Algorithms/1001-2000/1240. Tiling a Rectangle with the Fewest Squares/Solution.java",
    "Algorithms/1001-2000/1243. Array Transformation",
    "Algorithms/1001-2000/1243. Array Transformation/1243. Array Transformation.md",
    "Algorithms/1001-2000/1243. Array Transformation/Solution.java",
    "Algorithms/1001-2000/1244. Design A Leaderboard",
    "Algorithms/1001-2000/1244. Design A Leaderboard/1244. Design A Leaderboard.md",
    "Algorithms/1001-2000/1244. Design A Leaderboard/Leaderboard.java",
    "Algorithms/1001-2000/1245. Tree Diameter",
    "Algorithms/1001-2000/1245. Tree Diameter/1245. Tree Diameter.md",
    "Algorithms/1001-2000/1245. Tree Diameter/Solution.java",
    "Algorithms/1001-2000/1246. Palindrome Removal",
    "Algorithms/1001-2000/1246. Palindrome Removal/1246. Palindrome Removal.md",
    "Algorithms/1001-2000/1246. Palindrome Removal/Solution.java",
    "Algorithms/1001-2000/1247. Minimum Swaps to Make Strings Equal",
    "Algorithms/1001-2000/1247. Minimum Swaps to Make Strings Equal/1247. Minimum Swaps to Make Strings Equal.md",
    "Algorithms/1001-2000/1247. Minimum Swaps to Make Strings Equal/Solution.java",
    "Algorithms/1001-2000/1248. Count Number of Nice Subarrays",
    "Algorithms/1001-2000/1248. Count Number of Nice Subarrays/1248. Count Number of Nice Subarrays.md",
    "Algorithms/1001-2000/1248. Count Number of Nice Subarrays/Solution.java",
    "Algorithms/1001-2000/1249. Minimum Remove to Make Valid Parentheses",
    "Algorithms/1001-2000/1249. Minimum Remove to Make Valid Parentheses/1249. Minimum Remove to Make Valid Parentheses.md",
    "Algorithms/1001-2000/1249. Minimum Remove to Make Valid Parentheses/Solution.java",
    "Algorithms/1001-2000/1250. Check If It Is a Good Array",
    "Algorithms/1001-2000/1250. Check If It Is a Good Array/1250. Check If It Is a Good Array.md",
    "Algorithms/1001-2000/1250. Check If It Is a Good Array/Solution.java",
    "Algorithms/1001-2000/1252. Cells with Odd Values in a Matrix",
    "Algorithms/1001-2000/1252. Cells with Odd Values in a Matrix/1252. Cells with Odd Values in a Matrix.md",
    "Algorithms/1001-2000/1252. Cells with Odd Values in a Matrix/Solution.java",
    "Algorithms/1001-2000/1253. Reconstruct a 2-Row Binary Matrix",
    "Algorithms/1001-2000/1253. Reconstruct a 2-Row Binary Matrix/1253. Reconstruct a 2-Row Binary Matrix.md",
    "Algorithms/1001-2000/1253. Reconstruct a 2-Row Binary Matrix/Solution.java",
    "Algorithms/1001-2000/1254. Number of Closed Islands",
    "Algorithms/1001-2000/1254. Number of Closed Islands/1254. Number of Closed Islands.md",
    "Algorithms/1001-2000/1254. Number of Closed Islands/Solution.java",
    "Algorithms/1001-2000/1255. Maximum Score Words Formed by Letters",
    "Algorithms/1001-2000/1255. Maximum Score Words Formed by Letters/1255. Maximum Score Words Formed by Letters.md",
    "Algorithms/1001-2000/1255. Maximum Score Words Formed by Letters/Solution.java",
    "Algorithms/1001-2000/1256. Encode Number",
    "Algorithms/1001-2000/1256. Encode Number/1256. Encode Number.md",
    "Algorithms/1001-2000/1256. Encode Number/Solution.java",
    "Algorithms/1001-2000/1257. Smallest Common Region",
    "Algorithms/1001-2000/1257. Smallest Common Region/1257. Smallest Common Region.md",
    "Algorithms/1001-2000/1257. Smallest Common Region/Solution.java",
    "Algorithms/1001-2000/1258. Synonymous Sentences",
    "Algorithms/1001-2000/1258. Synonymous Sentences/1258. Synonymous Sentences.md",
    "Algorithms/1001-2000/1258. Synonymous Sentences/Solution.java",
    "Algorithms/1001-2000/1259. Handshakes That Don't Cross",
    "Algorithms/1001-2000/1259. Handshakes That Don't Cross/1259. Handshakes That Don't Cross.md",
    "Algorithms/1001-2000/1259. Handshakes That Don't Cross/Solution.java",
    "Algorithms/1001-2000/1260. Shift 2D Grid",
    "Algorithms/1001-2000/1260. Shift 2D Grid/1260. Shift 2D Grid.md",
    "Algorithms/1001-2000/1260. Shift 2D Grid/Solution.java",
    "Algorithms/1001-2000/1261. Find Elements in a Contaminated Binary Tree",
    "Algorithms/1001-2000/1261. Find Elements in a Contaminated Binary Tree/1261. Find Elements in a Contaminated Binary Tree.md",
    "Algorithms/1001-2000/1261. Find Elements in a Contaminated Binary Tree/FindElements.java",
    "Algorithms/1001-2000/1262. Greatest Sum Divisible by Three",
    "Algorithms/1001-2000/1262. Greatest Sum Divisible by Three/1262. Greatest Sum Divisible by Three.md",
    "Algorithms/1001-2000/1262. Greatest Sum Divisible by Three/Solution.java",
    "Algorithms/1001-2000/1263. Minimum Moves to Move a Box to Their Target Location",
    "Algorithms/1001-2000/1263. Minimum Moves to Move a Box to Their Target Location/1263. Minimum Moves to Move a Box to Their Target Location.md",
    "Algorithms/1001-2000/1263. Minimum Moves to Move a Box to Their Target Location/Solution.java",
    "Algorithms/1001-2000/1265. Print Immutable Linked List in Reverse",
    "Algorithms/1001-2000/1265. Print Immutable Linked List in Reverse/1265. Print Immutable Linked List in Reverse.md",
    "Algorithms/1001-2000/1265. Print Immutable Linked List in Reverse/Solution.java",
    "Algorithms/1001-2000/1266. Minimum Time Visiting All Points",
    "Algorithms/1001-2000/1266. Minimum Time Visiting All Points/1266. Minimum Time Visiting All Points.md",
    "Algorithms/1001-2000/1266. Minimum Time Visiting All Points/Solution.java",
    "Algorithms/1001-2000/1267. Count Servers that Communicate",
    "Algorithms/1001-2000/1267. Count Servers that Communicate/1267. Count Servers that Communicate.md",
    "Algorithms/1001-2000/1267. Count Servers that Communicate/Solution.java",
    "Algorithms/1001-2000/1268. Search Suggestions System",
    "Algorithms/1001-2000/1268. Search Suggestions System/1268. Search Suggestions System.md",
    "Algorithms/1001-2000/1268. Search Suggestions System/Solution.java",
    "Algorithms/1001-2000/1269. Number of Ways to Stay in the Same Place After Some Steps",
    "Algorithms/1001-2000/1269. Number of Ways to Stay in the Same Place After Some Steps/1269. Number of Ways to Stay in the Same Place After Some Steps.md",
    "Algorithms/1001-2000/1269. Number of Ways to Stay in the Same Place After Some Steps/Solution.java",
    "Algorithms/1001-2000/1271. Hexspeak",
    "Algorithms/1001-2000/1271. Hexspeak/1271. Hexspeak.md",
    "Algorithms/1001-2000/1271. Hexspeak/Solution.java",
    "Algorithms/1001-2000/1272. Remove Interval",
    "Algorithms/1001-2000/1272. Remove Interval/1272. Remove Interval.md",
    "Algorithms/1001-2000/1272. Remove Interval/Solution.java",
    "Algorithms/1001-2000/1273. Delete Tree Nodes",
    "Algorithms/1001-2000/1273. Delete Tree Nodes/1273. Delete Tree Nodes.md",
    "Algorithms/1001-2000/1273. Delete Tree Nodes/Solution.java",
    "Algorithms/1001-2000/1274. Number of Ships in a Rectangle",
    "Algorithms/1001-2000/1274. Number of Ships in a Rectangle/1274. Number of Ships in a Rectangle.md",
    "Algorithms/1001-2000/1274. Number of Ships in a Rectangle/Solution.java",
    "Algorithms/1001-2000/1275. Find Winner on a Tic Tac Toe Game",
    "Algorithms/1001-2000/1275. Find Winner on a Tic Tac Toe Game/1275. Find Winner on a Tic Tac Toe Game.md",
    "Algorithms/1001-2000/1275. Find Winner on a Tic Tac Toe Game/Solution.java",
    "Algorithms/1001-2000/1276. Number of Burgers with No Waste of Ingredients",
    "Algorithms/1001-2000/1276. Number of Burgers with No Waste of Ingredients/1276. Number of Burgers with No Waste of Ingredients.md",
    "Algorithms/1001-2000/1276. Number of Burgers with No Waste of Ingredients/Solution.java",
    "Algorithms/1001-2000/1277. Count Square Submatrices with All Ones",
    "Algorithms/1001-2000/1277. Count Square Submatrices with All Ones/1277. Count Square Submatrices with All Ones.md",
    "Algorithms/1001-2000/1277. Count Square Submatrices with All Ones/Solution.java",
    "Algorithms/1001-2000/1278. Palindrome Partitioning III",
    "Algorithms/1001-2000/1278. Palindrome Partitioning III/1278. Palindrome Partitioning III.md",
    "Algorithms/1001-2000/1278. Palindrome Partitioning III/Solution.java",
    "Algorithms/1001-2000/1281. Subtract the Product and Sum of Digits of an Integer",
    "Algorithms/1001-2000/1281. Subtract the Product and Sum of Digits of an Integer/1281. Subtract the Product and Sum of Digits of an Integer.md",
    "Algorithms/1001-2000/1281. Subtract the Product and Sum of Digits of an Integer/Solution.java",
    "Algorithms/1001-2000/1282. Group the People Given the Group Size They Belong To",
    "Algorithms/1001-2000/1282. Group the People Given the Group Size They Belong To/1282. Group the People Given the Group Size They Belong To.md",
    "Algorithms/1001-2000/1282. Group the People Given the Group Size They Belong To/Solution.java",
    "Algorithms/1001-2000/1283. Find the Smallest Divisor Given a Threshold",
    "Algorithms/1001-2000/1283. Find the Smallest Divisor Given a Threshold/1283. Find the Smallest Divisor Given a Threshold.md",
    "Algorithms/1001-2000/1283. Find the Smallest Divisor Given a Threshold/Solution.java",
    "Algorithms/1001-2000/1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
    "Algorithms/1001-2000/1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix/1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix.md",
    "Algorithms/1001-2000/1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix/Solution.java",
    "Algorithms/1001-2000/1286. Iterator for Combination",
    "Algorithms/1001-2000/1286. Iterator for Combination/1286. Iterator for Combination.md",
    "Algorithms/1001-2000/1286. Iterator for Combination/CombinationIterator.java",
    "Algorithms/1001-2000/1287. Element Appearing More Than 25% In Sorted Array",
    "Algorithms/1001-2000/1287. Element Appearing More Than 25% In Sorted Array/1287. Element Appearing More Than 25% In Sorted Array.md",
    "Algorithms/1001-2000/1287. Element Appearing More Than 25% In Sorted Array/Solution.java",
    "Algorithms/1001-2000/1288. Remove Covered Intervals",
    "Algorithms/1001-2000/1288. Remove Covered Intervals/1288. Remove Covered Intervals.md",
    "Algorithms/1001-2000/1288. Remove Covered Intervals/Solution.java",
    "Algorithms/1001-2000/1289. Minimum Falling Path Sum II",
    "Algorithms/1001-2000/1289. Minimum Falling Path Sum II/1289. Minimum Falling Path Sum II.md",
    "Algorithms/1001-2000/1289. Minimum Falling Path Sum II/Solution.java",
    "Algorithms/1001-2000/1290. Convert Binary Number in a Linked List to Integer",
    "Algorithms/1001-2000/1290. Convert Binary Number in a Linked List to Integer/1290. Convert Binary Number in a Linked List to Integer.md",
    "Algorithms/1001-2000/1290. Convert Binary Number in a Linked List to Integer/Solution.java",
    "Algorithms/1001-2000/1291. Sequential Digits",
    "Algorithms/1001-2000/1291. Sequential Digits/1291. Sequential Digits.md",
    "Algorithms/1001-2000/1291. Sequential Digits/Solution.java",
    "Algorithms/1001-2000/1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
    "Algorithms/1001-2000/1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold/1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold.md",
    "Algorithms/1001-2000/1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold/Solution.java",
    "Algorithms/1001-2000/1293. Shortest Path in a Grid with Obstacles Elimination",
    "Algorithms/1001-2000/1293. Shortest Path in a Grid with Obstacles Elimination/1293. Shortest Path in a Grid with Obstacles Elimination.md",
    "Algorithms/1001-2000/1293. Shortest Path in a Grid with Obstacles Elimination/Solution.java",
    "Algorithms/1001-2000/1295. Find Numbers with Even Number of Digits",
    "Algorithms/1001-2000/1295. Find Numbers with Even Number of Digits/1295. Find Numbers with Even Number of Digits.md",
    "Algorithms/1001-2000/1295. Find Numbers with Even Number of Digits/Solution.java",
    "Algorithms/1001-2000/1296. Divide Array in Sets of K Consecutive Numbers",
    "Algorithms/1001-2000/1296. Divide Array in Sets of K Consecutive Numbers/1296. Divide Array in Sets of K Consecutive Numbers.md",
    "Algorithms/1001-2000/1296. Divide Array in Sets of K Consecutive Numbers/Solution.java",
    "Algorithms/1001-2000/1297. Maximum Number of Occurrences of a Substring",
    "Algorithms/1001-2000/1297. Maximum Number of Occurrences of a Substring/1297. Maximum Number of Occurrences of a Substring.md",
    "Algorithms/1001-2000/1297. Maximum Number of Occurrences of a Substring/Solution.java",
    "Algorithms/1001-2000/1298. Maximum Candies You Can Get from Boxes",
    "Algorithms/1001-2000/1298. Maximum Candies You Can Get from Boxes/1298. Maximum Candies You Can Get from Boxes.md",
    "Algorithms/1001-2000/1298. Maximum Candies You Can Get from Boxes/Solution.java",
    "Algorithms/1001-2000/1299. Replace Elements with Greatest Element on Right Side",
    "Algorithms/1001-2000/1299. Replace Elements with Greatest Element on Right Side/1299. Replace Elements with Greatest Element on Right Side.md",
    "Algorithms/1001-2000/1299. Replace Elements with Greatest Element on Right Side/Solution.java",
    "Algorithms/1001-2000/1300. Sum of Mutated Array Closest to Target",
    "Algorithms/1001-2000/1300. Sum of Mutated Array Closest to Target/1300. Sum of Mutated Array Closest to Target.md",
    "Algorithms/1001-2000/1300. Sum of Mutated Array Closest to Target/Solution.java",
    "Algorithms/1001-2000/1301. Number of Paths with Max Score",
    "Algorithms/1001-2000/1301. Number of Paths with Max Score/1301. Number of Paths with Max Score.md",
    "Algorithms/1001-2000/1301. Number of Paths with Max Score/Solution.java",
    "Algorithms/1001-2000/1302. Deepest Leaves Sum",
    "Algorithms/1001-2000/1302. Deepest Leaves Sum/1302. Deepest Leaves Sum.md",
    "Algorithms/1001-2000/1302. Deepest Leaves Sum/Solution.java",
    "Algorithms/1001-2000/1304. Find N Unique Integers Sum up to Zero",
    "Algorithms/1001-2000/1304. Find N Unique Integers Sum up to Zero/1304. Find N Unique Integers Sum up to Zero.md",
    "Algorithms/1001-2000/1304. Find N Unique Integers Sum up to Zero/Solution.java",
    "Algorithms/1001-2000/1305. All Elements in Two Binary Search Trees",
    "Algorithms/1001-2000/1305. All Elements in Two Binary Search Trees/1305. All Elements in Two Binary Search Trees.md",
    "Algorithms/1001-2000/1305. All Elements in Two Binary Search Trees/Solution.java",
    "Algorithms/1001-2000/1306. Jump Game III",
    "Algorithms/1001-2000/1306. Jump Game III/1306. Jump Game III.md",
    "Algorithms/1001-2000/1306. Jump Game III/Solution.java",
    "Algorithms/1001-2000/1307. Verbal Arithmetic Puzzle",
    "Algorithms/1001-2000/1307. Verbal Arithmetic Puzzle/1307. Verbal Arithmetic Puzzle.md",
    "Algorithms/1001-2000/1307. Verbal Arithmetic Puzzle/Solution.java",
    "Algorithms/1001-2000/1309. Decrypt String from Alphabet to Integer Mapping",
    "Algorithms/1001-2000/1309. Decrypt String from Alphabet to Integer Mapping/1309. Decrypt String from Alphabet to Integer Mapping.md",
    "Algorithms/1001-2000/1309. Decrypt String from Alphabet to Integer Mapping/Solution.java",
    "Algorithms/1001-2000/1310. XOR Queries of a Subarray",
    "Algorithms/1001-2000/1310. XOR Queries of a Subarray/1310. XOR Queries of a Subarray.md",
    "Algorithms/1001-2000/1310. XOR Queries of a Subarray/Solution.java",
    "Algorithms/1001-2000/1311. Get Watched Videos by Your Friends",
    "Algorithms/1001-2000/1311. Get Watched Videos by Your Friends/1311. Get Watched Videos by Your Friends.md",
    "Algorithms/1001-2000/1311. Get Watched Videos by Your Friends/Solution.java",
    "Algorithms/1001-2000/1312. Minimum Insertion Steps to Make a String Palindrome",
    "Algorithms/1001-2000/1312. Minimum Insertion Steps to Make a String Palindrome/1312. Minimum Insertion Steps to Make a String Palindrome.md",
    "Algorithms/1001-2000/1312. Minimum Insertion Steps to Make a String Palindrome/Solution.java",
    "Algorithms/1001-2000/1313. Decompress Run-Length Encoded List",
    "Algorithms/1001-2000/1313. Decompress Run-Length Encoded List/1313. Decompress Run-Length Encoded List.md",
    "Algorithms/1001-2000/1313. Decompress Run-Length Encoded List/Solution.java",
    "Algorithms/1001-2000/1314. Matrix Block Sum",
    "Algorithms/1001-2000/1314. Matrix Block Sum/1314. Matrix Block Sum.md",
    "Algorithms/1001-2000/1314. Matrix Block Sum/Solution.java",
    "Algorithms/1001-2000/1315. Sum of Nodes with Even-Valued Grandparent",
    "Algorithms/1001-2000/1315. Sum of Nodes with Even-Valued Grandparent/1315. Sum of Nodes with Even-Valued Grandparent.md",
    "Algorithms/1001-2000/1315. Sum of Nodes with Even-Valued Grandparent/Solution.java",
    "Algorithms/1001-2000/1316. Distinct Echo Substrings",
    "Algorithms/1001-2000/1316. Distinct Echo Substrings/1316. Distinct Echo Substrings.md",
    "Algorithms/1001-2000/1316. Distinct Echo Substrings/Solution.java",
    "Algorithms/1001-2000/1317. Convert Integer to the Sum of Two No-Zero Integers",
    "Algorithms/1001-2000/1317. Convert Integer to the Sum of Two No-Zero Integers/1317. Convert Integer to the Sum of Two No-Zero Integers.md",
    "Algorithms/1001-2000/1317. Convert Integer to the Sum of Two No-Zero Integers/Solution.java",
    "Algorithms/1001-2000/1318. Minimum Flips to Make a OR b Equal to c",
    "Algorithms/1001-2000/1318. Minimum Flips to Make a OR b Equal to c/1318. Minimum Flips to Make a OR b Equal to c.md",
    "Algorithms/1001-2000/1318. Minimum Flips to Make a OR b Equal to c/Solution.java",
    "Algorithms/1001-2000/1319. Number of Operations to Make Network Connected",
    "Algorithms/1001-2000/1319. Number of Operations to Make Network Connected/1319. Number of Operations to Make Network Connected.md",
    "Algorithms/1001-2000/1319. Number of Operations to Make Network Connected/Solution.java",
    "Algorithms/1001-2000/1320. Minimum Distance to Type a Word Using Two Fingers",
    "Algorithms/1001-2000/1320. Minimum Distance to Type a Word Using Two Fingers/1320. Minimum Distance to Type a Word Using Two Fingers.md",
    "Algorithms/1001-2000/1320. Minimum Distance to Type a Word Using Two Fingers/Solution.java",
    "Algorithms/1001-2000/1323. Maximum 69 Number",
    "Algorithms/1001-2000/1323. Maximum 69 Number/1323. Maximum 69 Number.md",
    "Algorithms/1001-2000/1323. Maximum 69 Number/Solution.java",
    "Algorithms/1001-2000/1324. Print Words Vertically",
    "Algorithms/1001-2000/1324. Print Words Vertically/1324. Print Words Vertically.md",
    "Algorithms/1001-2000/1324. Print Words Vertically/Solution.java",
    "Algorithms/1001-2000/1325. Delete Leaves With a Given Value",
    "Algorithms/1001-2000/1325. Delete Leaves With a Given Value/1325. Delete Leaves With a Given Value.md",
    "Algorithms/1001-2000/1325. Delete Leaves With a Given Value/Solution.java",
    "Algorithms/1001-2000/1326. Minimum Number of Taps to Open to Water a Garden",
    "Algorithms/1001-2000/1326. Minimum Number of Taps to Open to Water a Garden/1326. Minimum Number of Taps to Open to Water a Garden.md",
    "Algorithms/1001-2000/1326. Minimum Number of Taps to Open to Water a Garden/Solution.java",
    "Algorithms/1001-2000/1328. Break a Palindrome",
    "Algorithms/1001-2000/1328. Break a Palindrome/1328. Break a Palindrome.md",
    "Algorithms/1001-2000/1328. Break a Palindrome/Solution.java",
    "Algorithms/1001-2000/1329. Sort the Matrix Diagonally",
    "Algorithms/1001-2000/1329. Sort the Matrix Diagonally/1329. Sort the Matrix Diagonally.md",
    "Algorithms/1001-2000/1329. Sort the Matrix Diagonally/Solution.java",
    "Algorithms/1001-2000/1330. Reverse Subarray To Maximize Array Value",
    "Algorithms/1001-2000/1330. Reverse Subarray To Maximize Array Value/1330. Reverse Subarray To Maximize Array Value.md",
    "Algorithms/1001-2000/1330. Reverse Subarray To Maximize Array Value/Solution.java",
    "Algorithms/1001-2000/1331. Rank Transform of an Array",
    "Algorithms/1001-2000/1331. Rank Transform of an Array/1331. Rank Transform of an Array.md",
    "Algorithms/1001-2000/1331. Rank Transform of an Array/Solution.java",
    "Algorithms/1001-2000/1332. Remove Palindromic Subsequences",
    "Algorithms/1001-2000/1332. Remove Palindromic Subsequences/1332. Remove Palindromic Subsequences.md",
    "Algorithms/1001-2000/1332. Remove Palindromic Subsequences/Solution.java",
    "Algorithms/1001-2000/1333. Filter Restaurants by Vegan-Friendly, Price and Distance",
    "Algorithms/1001-2000/1333. Filter Restaurants by Vegan-Friendly, Price and Distance/1333. Filter Restaurants by Vegan-Friendly, Price and Distance.md",
    "Algorithms/1001-2000/1333. Filter Restaurants by Vegan-Friendly, Price and Distance/Solution.java",
    "Algorithms/1001-2000/1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance",
    "Algorithms/1001-2000/1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance/1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance.md",
    "Algorithms/1001-2000/1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance/Solution.java",
    "Algorithms/1001-2000/1335. Minimum Difficulty of a Job Schedule",
    "Algorithms/1001-2000/1335. Minimum Difficulty of a Job Schedule/1335. Minimum Difficulty of a Job Schedule.md",
    "Algorithms/1001-2000/1335. Minimum Difficulty of a Job Schedule/Solution.java",
    "Algorithms/1001-2000/1337. The K Weakest Rows in a Matrix",
    "Algorithms/1001-2000/1337. The K Weakest Rows in a Matrix/1337. The K Weakest Rows in a Matrix.md",
    "Algorithms/1001-2000/1337. The K Weakest Rows in a Matrix/Solution.java",
    "Algorithms/1001-2000/1338. Reduce Array Size to The Half",
    "Algorithms/1001-2000/1338. Reduce Array Size to The Half/1338. Reduce Array Size to The Half.md",
    "Algorithms/1001-2000/1338. Reduce Array Size to The Half/Solution.java",
    "Algorithms/1001-2000/1339. Maximum Product of Splitted Binary Tree",
    "Algorithms/1001-2000/1339. Maximum Product of Splitted Binary Tree/1339. Maximum Product of Splitted Binary Tree.md",
    "Algorithms/1001-2000/1339. Maximum Product of Splitted Binary Tree/Solution.java",
    "Algorithms/1001-2000/1340. Jump Game V",
    "Algorithms/1001-2000/1340. Jump Game V/1340. Jump Game V.md",
    "Algorithms/1001-2000/1340. Jump Game V/Solution.java",
    "Algorithms/1001-2000/1342. Number of Steps to Reduce a Number to Zero",
    "Algorithms/1001-2000/1342. Number of Steps to Reduce a Number to Zero/1342. Number of Steps to Reduce a Number to Zero.md",
    "Algorithms/1001-2000/1342. Number of Steps to Reduce a Number to Zero/Solution.java",
    "Algorithms/1001-2000/1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "Algorithms/1001-2000/1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold/1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold.md",
    "Algorithms/1001-2000/1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold/Solution.java",
    "Algorithms/1001-2000/1344. Angle Between Hands of a Clock",
    "Algorithms/1001-2000/1344. Angle Between Hands of a Clock/1344. Angle Between Hands of a Clock.md",
    "Algorithms/1001-2000/1344. Angle Between Hands of a Clock/Solution.java",
    "Algorithms/1001-2000/1345. Jump Game IV",
    "Algorithms/1001-2000/1345. Jump Game IV/1345. Jump Game IV.md",
    "Algorithms/1001-2000/1345. Jump Game IV/Solution.java",
    "Algorithms/1001-2000/1346. Check If N and Its Double Exist",
    "Algorithms/1001-2000/1346. Check If N and Its Double Exist/1346. Check If N and Its Double Exist.md",
    "Algorithms/1001-2000/1346. Check If N and Its Double Exist/Solution.java",
    "Algorithms/1001-2000/1347. Minimum Number of Steps to Make Two Strings Anagram",
    "Algorithms/1001-2000/1347. Minimum Number of Steps to Make Two Strings Anagram/1347. Minimum Number of Steps to Make Two Strings Anagram.md",
    "Algorithms/1001-2000/1347. Minimum Number of Steps to Make Two Strings Anagram/Solution.java",
    "Algorithms/1001-2000/1348. Tweet Counts Per Frequency",
    "Algorithms/1001-2000/1348. Tweet Counts Per Frequency/1348. Tweet Counts Per Frequency.md",
    "Algorithms/1001-2000/1348. Tweet Counts Per Frequency/TweetCounts.java",
    "Algorithms/1001-2000/1349. Maximum Students Taking Exam",
    "Algorithms/1001-2000/1349. Maximum Students Taking Exam/1349. Maximum Students Taking Exam.md",
    "Algorithms/1001-2000/1349. Maximum Students Taking Exam/Solution.java",
    "Algorithms/1001-2000/1351. Count Negative Numbers in a Sorted Matrix",
    "Algorithms/1001-2000/1351. Count Negative Numbers in a Sorted Matrix/1351. Count Negative Numbers in a Sorted Matrix.md",
    "Algorithms/1001-2000/1351. Count Negative Numbers in a Sorted Matrix/Solution.java",
    "Algorithms/1001-2000/1352. Product of the Last K Numbers",
    "Algorithms/1001-2000/1352. Product of the Last K Numbers/1352. Product of the Last K Numbers.md",
    "Algorithms/1001-2000/1352. Product of the Last K Numbers/ProductOfNumbers.java",
    "Algorithms/1001-2000/1353. Maximum Number of Events That Can Be Attended",
    "Algorithms/1001-2000/1353. Maximum Number of Events That Can Be Attended/1353. Maximum Number of Events That Can Be Attended.md",
    "Algorithms/1001-2000/1353. Maximum Number of Events That Can Be Attended/Solution.java",
    "Algorithms/1001-2000/1354. Construct Target Array With Multiple Sums",
    "Algorithms/1001-2000/1354. Construct Target Array With Multiple Sums/1354. Construct Target Array With Multiple Sums.md",
    "Algorithms/1001-2000/1354. Construct Target Array With Multiple Sums/Solution.java",
    "Algorithms/1001-2000/1356. Sort Integers by The Number of 1 Bits",
    "Algorithms/1001-2000/1356. Sort Integers by The Number of 1 Bits/1356. Sort Integers by The Number of 1 Bits.md",
    "Algorithms/1001-2000/1356. Sort Integers by The Number of 1 Bits/Solution.java",
    "Algorithms/1001-2000/1357. Apply Discount Every n Orders",
    "Algorithms/1001-2000/1357. Apply Discount Every n Orders/1357. Apply Discount Every n Orders.md",
    "Algorithms/1001-2000/1357. Apply Discount Every n Orders/Cashier.java",
    "Algorithms/1001-2000/1358. Number of Substrings Containing All Three Characters",
    "Algorithms/1001-2000/1358. Number of Substrings Containing All Three Characters/1358. Number of Substrings Containing All Three Characters.md",
    "Algorithms/1001-2000/1358. Number of Substrings Containing All Three Characters/Solution.java",
    "Algorithms/1001-2000/1359. Count All Valid Pickup and Delivery Options",
    "Algorithms/1001-2000/1359. Count All Valid Pickup and Delivery Options/1359. Count All Valid Pickup and Delivery Options.md",
    "Algorithms/1001-2000/1359. Count All Valid Pickup and Delivery Options/Solution.java",
    "Algorithms/1001-2000/1360. Number of Days Between Two Dates",
    "Algorithms/1001-2000/1360. Number of Days Between Two Dates/1360. Number of Days Between Two Dates.md",
    "Algorithms/1001-2000/1360. Number of Days Between Two Dates/Solution.java",
    "Algorithms/1001-2000/1361. Validate Binary Tree Nodes",
    "Algorithms/1001-2000/1361. Validate Binary Tree Nodes/1361. Validate Binary Tree Nodes.md",
    "Algorithms/1001-2000/1361. Validate Binary Tree Nodes/Solution.java",
    "Algorithms/1001-2000/1362. Closest Divisors",
    "Algorithms/1001-2000/1362. Closest Divisors/1362. Closest Divisors.md",
    "Algorithms/1001-2000/1362. Closest Divisors/Solution.java",
    "Algorithms/1001-2000/1363. Largest Multiple of Three",
    "Algorithms/1001-2000/1363. Largest Multiple of Three/1363. Largest Multiple of Three.md",
    "Algorithms/1001-2000/1363. Largest Multiple of Three/Solution.java",
    "Algorithms/1001-2000/1365. How Many Numbers Are Smaller Than the Current Number",
    "Algorithms/1001-2000/1365. How Many Numbers Are Smaller Than the Current Number/1365. How Many Numbers Are Smaller Than the Current Number.md",
    "Algorithms/1001-2000/1365. How Many Numbers Are Smaller Than the Current Number/Solution.java",
    "Algorithms/1001-2000/1366. Rank Teams by Votes",
    "Algorithms/1001-2000/1366. Rank Teams by Votes/1366. Rank Teams by Votes.md",
    "Algorithms/1001-2000/1366. Rank Teams by Votes/Solution.java",
    "Algorithms/1001-2000/1367. Linked List in Binary Tree",
    "Algorithms/1001-2000/1367. Linked List in Binary Tree/1367. Linked List in Binary Tree.md",
    "Algorithms/1001-2000/1367. Linked List in Binary Tree/Solution.java",
    "Algorithms/1001-2000/1368. Minimum Cost to Make at Least One Valid Path in a Grid",
    "Algorithms/1001-2000/1368. Minimum Cost to Make at Least One Valid Path in a Grid/1368. Minimum Cost to Make at Least One Valid Path in a Grid.md",
    "Algorithms/1001-2000/1368. Minimum Cost to Make at Least One Valid Path in a Grid/Solution.java",
    "Algorithms/1001-2000/1370. Increasing Decreasing String",
    "Algorithms/1001-2000/1370. Increasing Decreasing String/1370. Increasing Decreasing String.md",
    "Algorithms/1001-2000/1370. Increasing Decreasing String/Solution.java",
    "Algorithms/1001-2000/1371. Find the Longest Substring Containing Vowels in Even Counts",
    "Algorithms/1001-2000/1371. Find the Longest Substring Containing Vowels in Even Counts/1371. Find the Longest Substring Containing Vowels in Even Counts.md",
    "Algorithms/1001-2000/1371. Find the Longest Substring Containing Vowels in Even Counts/Solution.java",
    "Algorithms/1001-2000/1372. Longest ZigZag Path in a Binary Tree",
    "Algorithms/1001-2000/1372. Longest ZigZag Path in a Binary Tree/1372. Longest ZigZag Path in a Binary Tree.md",
    "Algorithms/1001-2000/1372. Longest ZigZag Path in a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1373. Maximum Sum BST in Binary Tree",
    "Algorithms/1001-2000/1373. Maximum Sum BST in Binary Tree/1373. Maximum Sum BST in Binary Tree.md",
    "Algorithms/1001-2000/1373. Maximum Sum BST in Binary Tree/Solution.java",
    "Algorithms/1001-2000/1374. Generate a String With Characters That Have Odd Counts",
    "Algorithms/1001-2000/1374. Generate a String With Characters That Have Odd Counts/1374. Generate a String With Characters That Have Odd Counts.md",
    "Algorithms/1001-2000/1374. Generate a String With Characters That Have Odd Counts/Solution.java",
    "Algorithms/1001-2000/1375. Bulb Switcher III",
    "Algorithms/1001-2000/1375. Bulb Switcher III/1375. Bulb Switcher III.md",
    "Algorithms/1001-2000/1375. Bulb Switcher III/Solution.java",
    "Algorithms/1001-2000/1376. Time Needed to Inform All Employees",
    "Algorithms/1001-2000/1376. Time Needed to Inform All Employees/1376. Time Needed to Inform All Employees.md",
    "Algorithms/1001-2000/1376. Time Needed to Inform All Employees/Solution.java",
    "Algorithms/1001-2000/1377. Frog Position After T Seconds",
    "Algorithms/1001-2000/1377. Frog Position After T Seconds/1377. Frog Position After T Seconds.md",
    "Algorithms/1001-2000/1377. Frog Position After T Seconds/Solution.java",
    "Algorithms/1001-2000/1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
    "Algorithms/1001-2000/1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree/1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree.md",
    "Algorithms/1001-2000/1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree/Solution.java",
    "Algorithms/1001-2000/1380. Lucky Numbers in a Matrix",
    "Algorithms/1001-2000/1380. Lucky Numbers in a Matrix/1380. Lucky Numbers in a Matrix.md",
    "Algorithms/1001-2000/1380. Lucky Numbers in a Matrix/Solution.java",
    "Algorithms/1001-2000/1381. Design a Stack With Increment Operation",
    "Algorithms/1001-2000/1381. Design a Stack With Increment Operation/1381. Design a Stack With Increment Operation.md",
    "Algorithms/1001-2000/1381. Design a Stack With Increment Operation/CustomStack.java",
    "Algorithms/1001-2000/1382. Balance a Binary Search Tree",
    "Algorithms/1001-2000/1382. Balance a Binary Search Tree/1382. Balance a Binary Search Tree.md",
    "Algorithms/1001-2000/1382. Balance a Binary Search Tree/Solution.java",
    "Algorithms/1001-2000/1383. Maximum Performance of a Team",
    "Algorithms/1001-2000/1383. Maximum Performance of a Team/1383. Maximum Performance of a Team.md",
    "Algorithms/1001-2000/1383. Maximum Performance of a Team/Solution.java",
    "Algorithms/1001-2000/1385. Find the Distance Value Between Two Arrays",
    "Algorithms/1001-2000/1385. Find the Distance Value Between Two Arrays/1385. Find the Distance Value Between Two Arrays.md",
    "Algorithms/1001-2000/1385. Find the Distance Value Between Two Arrays/Solution.java",
    "Algorithms/1001-2000/1386. Cinema Seat Allocation",
    "Algorithms/1001-2000/1386. Cinema Seat Allocation/1386. Cinema Seat Allocation.md",
    "Algorithms/1001-2000/1386. Cinema Seat Allocation/Solution.java",
    "Algorithms/1001-2000/1387. Sort Integers by The Power Value",
    "Algorithms/1001-2000/1387. Sort Integers by The Power Value/1387. Sort Integers by The Power Value.md",
    "Algorithms/1001-2000/1387. Sort Integers by The Power Value/Solution.java",
    "Algorithms/1001-2000/1388. Pizza With 3n Slices",
    "Algorithms/1001-2000/1388. Pizza With 3n Slices/1388. Pizza With 3n Slices.md",
    "Algorithms/1001-2000/1388. Pizza With 3n Slices/Solution.java",
    "Algorithms/1001-2000/1389. Create Target Array in the Given Order",
    "Algorithms/1001-2000/1389. Create Target Array in the Given Order/1389. Create Target Array in the Given Order.md",
    "Algorithms/1001-2000/1389. Create Target Array in the Given Order/Solution.java",
    "Algorithms/1001-2000/1390. Four Divisors",
    "Algorithms/1001-2000/1390. Four Divisors/1390. Four Divisors.md",
    "Algorithms/1001-2000/1390. Four Divisors/Solution.java",
    "Algorithms/1001-2000/1391. Check if There is a Valid Path in a Grid",
    "Algorithms/1001-2000/1391. Check if There is a Valid Path in a Grid/1391. Check if There is a Valid Path in a Grid.md",
    "Algorithms/1001-2000/1391. Check if There is a Valid Path in a Grid/Solution.java",
    "Algorithms/1001-2000/1392. Longest Happy Prefix",
    "Algorithms/1001-2000/1392. Longest Happy Prefix/1392. Longest Happy Prefix.md",
    "Algorithms/1001-2000/1392. Longest Happy Prefix/Solution.java",
    "Algorithms/1001-2000/1394. Find Lucky Integer in an Array",
    "Algorithms/1001-2000/1394. Find Lucky Integer in an Array/1394. Find Lucky Integer in an Array.md",
    "Algorithms/1001-2000/1394. Find Lucky Integer in an Array/Solution.java",
    "Algorithms/1001-2000/1395. Count Number of Teams",
    "Algorithms/1001-2000/1395. Count Number of Teams/1395. Count Number of Teams.md",
    "Algorithms/1001-2000/1395. Count Number of Teams/Solution.java",
    "Algorithms/1001-2000/1396. Design Underground System",
    "Algorithms/1001-2000/1396. Design Underground System/1396. Design Underground System.md",
    "Algorithms/1001-2000/1396. Design Underground System/UndergroundSystem.java",
    "Algorithms/1001-2000/1397. Find All Good Strings",
    "Algorithms/1001-2000/1397. Find All Good Strings/1397. Find All Good Strings.md",
    "Algorithms/1001-2000/1397. Find All Good Strings/Solution.java",
    "Algorithms/1001-2000/1399. Count Largest Group",
    "Algorithms/1001-2000/1399. Count Largest Group/1399. Count Largest Group.md",
    "Algorithms/1001-2000/1399. Count Largest Group/Solution.java",
    "Algorithms/1001-2000/1400. Construct K Palindrome Strings",
    "Algorithms/1001-2000/1400. Construct K Palindrome Strings/1400. Construct K Palindrome Strings.md",
    "Algorithms/1001-2000/1400. Construct K Palindrome Strings/Solution.java",
    "Algorithms/1001-2000/1401. Circle and Rectangle Overlapping",
    "Algorithms/1001-2000/1401. Circle and Rectangle Overlapping/1401. Circle and Rectangle Overlapping.md",
    "Algorithms/1001-2000/1401. Circle and Rectangle Overlapping/Solution.java",
    "Algorithms/1001-2000/1402. Reducing Dishes",
    "Algorithms/1001-2000/1402. Reducing Dishes/1402. Reducing Dishes.md",
    "Algorithms/1001-2000/1402. Reducing Dishes/Solution.java",
    "Algorithms/1001-2000/1403. Minimum Subsequence in Non-Increasing Order",
    "Algorithms/1001-2000/1403. Minimum Subsequence in Non-Increasing Order/1403. Minimum Subsequence in Non-Increasing Order.md",
    "Algorithms/1001-2000/1403. Minimum Subsequence in Non-Increasing Order/Solution.java",
    "Algorithms/1001-2000/1404. Number of Steps to Reduce a Number in Binary Representation to One",
    "Algorithms/1001-2000/1404. Number of Steps to Reduce a Number in Binary Representation to One/1404. Number of Steps to Reduce a Number in Binary Representation to One.md",
    "Algorithms/1001-2000/1404. Number of Steps to Reduce a Number in Binary Representation to One/Solution.java",
    "Algorithms/1001-2000/1405. Longest Happy String",
    "Algorithms/1001-2000/1405. Longest Happy String/1405. Longest Happy String.md",
    "Algorithms/1001-2000/1405. Longest Happy String/Solution.java",
    "Algorithms/1001-2000/1406. Stone Game III",
    "Algorithms/1001-2000/1406. Stone Game III/1406. Stone Game III.md",
    "Algorithms/1001-2000/1406. Stone Game III/Solution.java",
    "Algorithms/1001-2000/1408. String Matching in an Array",
    "Algorithms/1001-2000/1408. String Matching in an Array/1408. String Matching in an Array.md",
    "Algorithms/1001-2000/1408. String Matching in an Array/Solution.java",
    "Algorithms/1001-2000/1409. Queries on a Permutation With Key",
    "Algorithms/1001-2000/1409. Queries on a Permutation With Key/1409. Queries on a Permutation With Key.md",
    "Algorithms/1001-2000/1409. Queries on a Permutation With Key/Solution.java",
    "Algorithms/1001-2000/1410. HTML Entity Parser",
    "Algorithms/1001-2000/1410. HTML Entity Parser/1410. HTML Entity Parser.md",
    "Algorithms/1001-2000/1410. HTML Entity Parser/Solution.java",
    "Algorithms/1001-2000/1411. Number of Ways to Paint N \u00d7 3 Grid",
    "Algorithms/1001-2000/1411. Number of Ways to Paint N \u00d7 3 Grid/1411. Number of Ways to Paint N \u00d7 3 Grid.md",
    "Algorithms/1001-2000/1411. Number of Ways to Paint N \u00d7 3 Grid/Solution.java",
    "Algorithms/1001-2000/1413. Minimum Value to Get Positive Step by Step Sum",
    "Algorithms/1001-2000/1413. Minimum Value to Get Positive Step by Step Sum/1413. Minimum Value to Get Positive Step by Step Sum.md",
    "Algorithms/1001-2000/1413. Minimum Value to Get Positive Step by Step Sum/Solution.java",
    "Algorithms/1001-2000/1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
    "Algorithms/1001-2000/1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K/1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K.md",
    "Algorithms/1001-2000/1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K/Solution.java",
    "Algorithms/1001-2000/1415. The k-th Lexicographical String of All Happy Strings of Length n",
    "Algorithms/1001-2000/1415. The k-th Lexicographical String of All Happy Strings of Length n/1415. The k-th Lexicographical String of All Happy Strings of Length n.md",
    "Algorithms/1001-2000/1415. The k-th Lexicographical String of All Happy Strings of Length n/Solution.java",
    "Algorithms/1001-2000/1416. Restore The Array",
    "Algorithms/1001-2000/1416. Restore The Array/1416. Restore The Array.md",
    "Algorithms/1001-2000/1416. Restore The Array/Solution.java",
    "Algorithms/1001-2000/1417. Reformat The String",
    "Algorithms/1001-2000/1417. Reformat The String/1417. Reformat The String.md",
    "Algorithms/1001-2000/1417. Reformat The String/Solution.java",
    "Algorithms/1001-2000/1418. Display Table of Food Orders in a Restaurant",
    "Algorithms/1001-2000/1418. Display Table of Food Orders in a Restaurant/1418. Display Table of Food Orders in a Restaurant.md",
    "Algorithms/1001-2000/1418. Display Table of Food Orders in a Restaurant/Solution.java",
    "Algorithms/1001-2000/1419. Minimum Number of Frogs Croaking",
    "Algorithms/1001-2000/1419. Minimum Number of Frogs Croaking/1419. Minimum Number of Frogs Croaking.md",
    "Algorithms/1001-2000/1419. Minimum Number of Frogs Croaking/Solution.java",
    "Algorithms/1001-2000/1420. Build Array Where You Can Find The Maximum Exactly K Comparisons",
    "Algorithms/1001-2000/1420. Build Array Where You Can Find The Maximum Exactly K Comparisons/1420. Build Array Where You Can Find The Maximum Exactly K Comparisons.md",
    "Algorithms/1001-2000/1420. Build Array Where You Can Find The Maximum Exactly K Comparisons/Solution.java",
    "Algorithms/1001-2000/1422. Maximum Score After Splitting a String",
    "Algorithms/1001-2000/1422. Maximum Score After Splitting a String/1422. Maximum Score After Splitting a String.md",
    "Algorithms/1001-2000/1422. Maximum Score After Splitting a String/Solution.java",
    "Algorithms/1001-2000/1423. Maximum Points You Can Obtain from Cards",
    "Algorithms/1001-2000/1423. Maximum Points You Can Obtain from Cards/1423. Maximum Points You Can Obtain from Cards.md",
    "Algorithms/1001-2000/1423. Maximum Points You Can Obtain from Cards/Solution.java",
    "Algorithms/1001-2000/1424. Diagonal Traverse II",
    "Algorithms/1001-2000/1424. Diagonal Traverse II/1424. Diagonal Traverse II.md",
    "Algorithms/1001-2000/1424. Diagonal Traverse II/Solution.java",
    "Algorithms/1001-2000/1425. Constrained Subset Sum",
    "Algorithms/1001-2000/1425. Constrained Subset Sum/1425. Constrained Subset Sum.md",
    "Algorithms/1001-2000/1425. Constrained Subset Sum/Solution.java",
    "Algorithms/1001-2000/1426. Counting Elements",
    "Algorithms/1001-2000/1426. Counting Elements/1426. Counting Elements.md",
    "Algorithms/1001-2000/1426. Counting Elements/Solution.java",
    "Algorithms/1001-2000/1427. Perform String Shifts",
    "Algorithms/1001-2000/1427. Perform String Shifts/1427. Perform String Shifts.md",
    "Algorithms/1001-2000/1427. Perform String Shifts/Solution.java",
    "Algorithms/1001-2000/1428. Leftmost Column with at Least a One",
    "Algorithms/1001-2000/1428. Leftmost Column with at Least a One/1428. Leftmost Column with at Least a One.md",
    "Algorithms/1001-2000/1428. Leftmost Column with at Least a One/Solution.java",
    "Algorithms/1001-2000/1429. First Unique Number",
    "Algorithms/1001-2000/1429. First Unique Number/1429. First Unique Number.md",
    "Algorithms/1001-2000/1429. First Unique Number/FirstUnique.java",
    "Algorithms/1001-2000/1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree",
    "Algorithms/1001-2000/1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree/1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree.md",
    "Algorithms/1001-2000/1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1431. Kids With the Greatest Number of Candies",
    "Algorithms/1001-2000/1431. Kids With the Greatest Number of Candies/1431. Kids With the Greatest Number of Candies.md",
    "Algorithms/1001-2000/1431. Kids With the Greatest Number of Candies/Solution.java",
    "Algorithms/1001-2000/1432. Max Difference You Can Get From Changing an Integer",
    "Algorithms/1001-2000/1432. Max Difference You Can Get From Changing an Integer/1432. Max Difference You Can Get From Changing an Integer.md",
    "Algorithms/1001-2000/1432. Max Difference You Can Get From Changing an Integer/Solution.java",
    "Algorithms/1001-2000/1433. Check If a String Can Break Another String",
    "Algorithms/1001-2000/1433. Check If a String Can Break Another String/1433. Check If a String Can Break Another String.md",
    "Algorithms/1001-2000/1433. Check If a String Can Break Another String/Solution.java",
    "Algorithms/1001-2000/1434. Number of Ways to Wear Different Hats to Each Other",
    "Algorithms/1001-2000/1434. Number of Ways to Wear Different Hats to Each Other/1434. Number of Ways to Wear Different Hats to Each Other.md",
    "Algorithms/1001-2000/1434. Number of Ways to Wear Different Hats to Each Other/Solution.java",
    "Algorithms/1001-2000/1436. Destination City",
    "Algorithms/1001-2000/1436. Destination City/1436. Destination City.md",
    "Algorithms/1001-2000/1436. Destination City/Solution.java",
    "Algorithms/1001-2000/1437. Check If All 1's Are at Least Length K Places Away",
    "Algorithms/1001-2000/1437. Check If All 1's Are at Least Length K Places Away/1437. Check If All 1's Are at Least Length K Places Away.md",
    "Algorithms/1001-2000/1437. Check If All 1's Are at Least Length K Places Away/Solution.java",
    "Algorithms/1001-2000/1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
    "Algorithms/1001-2000/1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit/1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit.md",
    "Algorithms/1001-2000/1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit/Solution.java",
    "Algorithms/1001-2000/1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows",
    "Algorithms/1001-2000/1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows/1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows.md",
    "Algorithms/1001-2000/1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows/Solution.java",
    "Algorithms/1001-2000/1441. Build an Array With Stack Operations",
    "Algorithms/1001-2000/1441. Build an Array With Stack Operations/1441. Build an Array With Stack Operations.md",
    "Algorithms/1001-2000/1441. Build an Array With Stack Operations/Solution.java",
    "Algorithms/1001-2000/1442. Count Triplets That Can Form Two Arrays of Equal XOR",
    "Algorithms/1001-2000/1442. Count Triplets That Can Form Two Arrays of Equal XOR/1442. Count Triplets That Can Form Two Arrays of Equal XOR.md",
    "Algorithms/1001-2000/1442. Count Triplets That Can Form Two Arrays of Equal XOR/Solution.java",
    "Algorithms/1001-2000/1443. Minimum Time to Collect All Apples in a Tree",
    "Algorithms/1001-2000/1443. Minimum Time to Collect All Apples in a Tree/1443. Minimum Time to Collect All Apples in a Tree.md",
    "Algorithms/1001-2000/1443. Minimum Time to Collect All Apples in a Tree/Solution.java",
    "Algorithms/1001-2000/1444. Number of Ways of Cutting a Pizza",
    "Algorithms/1001-2000/1444. Number of Ways of Cutting a Pizza/1444. Number of Ways of Cutting a Pizza.md",
    "Algorithms/1001-2000/1444. Number of Ways of Cutting a Pizza/Solution.java",
    "Algorithms/1001-2000/1446. Consecutive Characters",
    "Algorithms/1001-2000/1446. Consecutive Characters/1446. Consecutive Characters.md",
    "Algorithms/1001-2000/1446. Consecutive Characters/Solution.java",
    "Algorithms/1001-2000/1447. Simplified Fractions",
    "Algorithms/1001-2000/1447. Simplified Fractions/1447. Simplified Fractions.md",
    "Algorithms/1001-2000/1447. Simplified Fractions/Solution.java",
    "Algorithms/1001-2000/1448. Count Good Nodes in Binary Tree",
    "Algorithms/1001-2000/1448. Count Good Nodes in Binary Tree/1448. Count Good Nodes in Binary Tree.md",
    "Algorithms/1001-2000/1448. Count Good Nodes in Binary Tree/Solution.java",
    "Algorithms/1001-2000/1449. Form Largest Integer With Digits That Add up to Target",
    "Algorithms/1001-2000/1449. Form Largest Integer With Digits That Add up to Target/1449. Form Largest Integer With Digits That Add up to Target.md",
    "Algorithms/1001-2000/1449. Form Largest Integer With Digits That Add up to Target/Solution.java",
    "Algorithms/1001-2000/1450. Number of Students Doing Homework at a Given Time",
    "Algorithms/1001-2000/1450. Number of Students Doing Homework at a Given Time/1450. Number of Students Doing Homework at a Given Time.md",
    "Algorithms/1001-2000/1450. Number of Students Doing Homework at a Given Time/Solution.java",
    "Algorithms/1001-2000/1451. Rearrange Words in a Sentence",
    "Algorithms/1001-2000/1451. Rearrange Words in a Sentence/1451. Rearrange Words in a Sentence.md",
    "Algorithms/1001-2000/1451. Rearrange Words in a Sentence/Solution.java",
    "Algorithms/1001-2000/1452. People Whose List of Favorite Companies Is Not a Subset of Another List",
    "Algorithms/1001-2000/1452. People Whose List of Favorite Companies Is Not a Subset of Another List/1452. People Whose List of Favorite Companies Is Not a Subset of Another List.md",
    "Algorithms/1001-2000/1452. People Whose List of Favorite Companies Is Not a Subset of Another List/Solution.java",
    "Algorithms/1001-2000/1453. Maximum Number of Darts Inside of a Circular Dartboard",
    "Algorithms/1001-2000/1453. Maximum Number of Darts Inside of a Circular Dartboard/1453. Maximum Number of Darts Inside of a Circular Dartboard.md",
    "Algorithms/1001-2000/1453. Maximum Number of Darts Inside of a Circular Dartboard/Solution.java",
    "Algorithms/1001-2000/1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence",
    "Algorithms/1001-2000/1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence/1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence.md",
    "Algorithms/1001-2000/1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence/Solution.java",
    "Algorithms/1001-2000/1456. Maximum Number of Vowels in a Substring of Given Length",
    "Algorithms/1001-2000/1456. Maximum Number of Vowels in a Substring of Given Length/1456. Maximum Number of Vowels in a Substring of Given Length.md",
    "Algorithms/1001-2000/1456. Maximum Number of Vowels in a Substring of Given Length/Solution.java",
    "Algorithms/1001-2000/1457. Pseudo-Palindromic Paths in a Binary Tree",
    "Algorithms/1001-2000/1457. Pseudo-Palindromic Paths in a Binary Tree/1457. Pseudo-Palindromic Paths in a Binary Tree.md",
    "Algorithms/1001-2000/1457. Pseudo-Palindromic Paths in a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1458. Max Dot Product of Two Subsequences",
    "Algorithms/1001-2000/1458. Max Dot Product of Two Subsequences/1458. Max Dot Product of Two Subsequences.md",
    "Algorithms/1001-2000/1458. Max Dot Product of Two Subsequences/Solution.java",
    "Algorithms/1001-2000/1460. Make Two Arrays Equal by Reversing Sub-arrays",
    "Algorithms/1001-2000/1460. Make Two Arrays Equal by Reversing Sub-arrays/1460. Make Two Arrays Equal by Reversing Sub-arrays.md",
    "Algorithms/1001-2000/1460. Make Two Arrays Equal by Reversing Sub-arrays/Solution.java",
    "Algorithms/1001-2000/1461. Check If a String Contains All Binary Codes of Size K",
    "Algorithms/1001-2000/1461. Check If a String Contains All Binary Codes of Size K/1461. Check If a String Contains All Binary Codes of Size K.md",
    "Algorithms/1001-2000/1461. Check If a String Contains All Binary Codes of Size K/Solution.java",
    "Algorithms/1001-2000/1462. Course Schedule IV",
    "Algorithms/1001-2000/1462. Course Schedule IV/1462. Course Schedule IV.md",
    "Algorithms/1001-2000/1462. Course Schedule IV/Solution.java",
    "Algorithms/1001-2000/1463. Cherry Pickup II",
    "Algorithms/1001-2000/1463. Cherry Pickup II/1463. Cherry Pickup II.md",
    "Algorithms/1001-2000/1463. Cherry Pickup II/Solution.java",
    "Algorithms/1001-2000/1464. Maximum Product of Two Elements in an Array",
    "Algorithms/1001-2000/1464. Maximum Product of Two Elements in an Array/1464. Maximum Product of Two Elements in an Array.md",
    "Algorithms/1001-2000/1464. Maximum Product of Two Elements in an Array/Solution.java",
    "Algorithms/1001-2000/1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
    "Algorithms/1001-2000/1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts/1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts.md",
    "Algorithms/1001-2000/1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts/Solution.java",
    "Algorithms/1001-2000/1466. Reorder Routes to Make All Paths Lead to the City Zero",
    "Algorithms/1001-2000/1466. Reorder Routes to Make All Paths Lead to the City Zero/1466. Reorder Routes to Make All Paths Lead to the City Zero.md",
    "Algorithms/1001-2000/1466. Reorder Routes to Make All Paths Lead to the City Zero/Solution.java",
    "Algorithms/1001-2000/1467. Probability of a Two Boxes Having The Same Number of Distinct Balls",
    "Algorithms/1001-2000/1467. Probability of a Two Boxes Having The Same Number of Distinct Balls/1467. Probability of a Two Boxes Having The Same Number of Distinct Balls.md",
    "Algorithms/1001-2000/1467. Probability of a Two Boxes Having The Same Number of Distinct Balls/Solution.java",
    "Algorithms/1001-2000/1469. Find All the Lonely Nodes",
    "Algorithms/1001-2000/1469. Find All the Lonely Nodes/1469. Find All the Lonely Nodes.md",
    "Algorithms/1001-2000/1469. Find All the Lonely Nodes/Solution.java",
    "Algorithms/1001-2000/1470. Shuffle the Array",
    "Algorithms/1001-2000/1470. Shuffle the Array/1470. Shuffle the Array.md",
    "Algorithms/1001-2000/1470. Shuffle the Array/Solution.java",
    "Algorithms/1001-2000/1471. The k Strongest Values in an Array",
    "Algorithms/1001-2000/1471. The k Strongest Values in an Array/1471. The k Strongest Values in an Array.md",
    "Algorithms/1001-2000/1471. The k Strongest Values in an Array/Solution.java",
    "Algorithms/1001-2000/1472. Design Browser History",
    "Algorithms/1001-2000/1472. Design Browser History/1472. Design Browser History.md",
    "Algorithms/1001-2000/1472. Design Browser History/BrowserHistory.java",
    "Algorithms/1001-2000/1473. Paint House III",
    "Algorithms/1001-2000/1473. Paint House III/1473. Paint House III.md",
    "Algorithms/1001-2000/1473. Paint House III/Solution.java",
    "Algorithms/1001-2000/1474. Delete N Nodes After M Nodes of a Linked List",
    "Algorithms/1001-2000/1474. Delete N Nodes After M Nodes of a Linked List/1474. Delete N Nodes After M Nodes of a Linked List.md",
    "Algorithms/1001-2000/1474. Delete N Nodes After M Nodes of a Linked List/Solution.java",
    "Algorithms/1001-2000/1475. Final Prices With a Special Discount in a Shop",
    "Algorithms/1001-2000/1475. Final Prices With a Special Discount in a Shop/1475. Final Prices With a Special Discount in a Shop.md",
    "Algorithms/1001-2000/1475. Final Prices With a Special Discount in a Shop/Solution.java",
    "Algorithms/1001-2000/1476. Subrectangle Queries",
    "Algorithms/1001-2000/1476. Subrectangle Queries/1476. Subrectangle Queries.md",
    "Algorithms/1001-2000/1476. Subrectangle Queries/SubrectangleQueries.java",
    "Algorithms/1001-2000/1477. Find Two Non-overlapping Sub-arrays Each With Target Sum",
    "Algorithms/1001-2000/1477. Find Two Non-overlapping Sub-arrays Each With Target Sum/1477. Find Two Non-overlapping Sub-arrays Each With Target Sum.md",
    "Algorithms/1001-2000/1477. Find Two Non-overlapping Sub-arrays Each With Target Sum/Solution.java",
    "Algorithms/1001-2000/1478. Allocate Mailboxes",
    "Algorithms/1001-2000/1478. Allocate Mailboxes/1478. Allocate Mailboxes.md",
    "Algorithms/1001-2000/1478. Allocate Mailboxes/Solution.java",
    "Algorithms/1001-2000/1480. Running Sum of 1d Array",
    "Algorithms/1001-2000/1480. Running Sum of 1d Array/1480. Running Sum of 1d Array.md",
    "Algorithms/1001-2000/1480. Running Sum of 1d Array/Solution.java",
    "Algorithms/1001-2000/1481. Least Number of Unique Integers after K Removals",
    "Algorithms/1001-2000/1481. Least Number of Unique Integers after K Removals/1481. Least Number of Unique Integers after K Removals.md",
    "Algorithms/1001-2000/1481. Least Number of Unique Integers after K Removals/Solution.java",
    "Algorithms/1001-2000/1482. Minimum Number of Days to Make m Bouquets",
    "Algorithms/1001-2000/1482. Minimum Number of Days to Make m Bouquets/1482. Minimum Number of Days to Make m Bouquets.md",
    "Algorithms/1001-2000/1482. Minimum Number of Days to Make m Bouquets/Solution.java",
    "Algorithms/1001-2000/1483. Kth Ancestor of a Tree Node",
    "Algorithms/1001-2000/1483. Kth Ancestor of a Tree Node/1483. Kth Ancestor of a Tree Node.md",
    "Algorithms/1001-2000/1483. Kth Ancestor of a Tree Node/TreeAncestor.java",
    "Algorithms/1001-2000/1484. Clone Binary Tree With Random Pointer",
    "Algorithms/1001-2000/1484. Clone Binary Tree With Random Pointer/1484. Clone Binary Tree With Random Pointer.md",
    "Algorithms/1001-2000/1484. Clone Binary Tree With Random Pointer/Solution.java",
    "Algorithms/1001-2000/1486. XOR Operation in an Array",
    "Algorithms/1001-2000/1486. XOR Operation in an Array/1486. XOR Operation in an Array.md",
    "Algorithms/1001-2000/1486. XOR Operation in an Array/Solution.java",
    "Algorithms/1001-2000/1487. Making File Names Unique",
    "Algorithms/1001-2000/1487. Making File Names Unique/1487. Making File Names Unique.md",
    "Algorithms/1001-2000/1487. Making File Names Unique/Solution.java",
    "Algorithms/1001-2000/1488. Avoid Flood in The City",
    "Algorithms/1001-2000/1488. Avoid Flood in The City/1488. Avoid Flood in The City.md",
    "Algorithms/1001-2000/1488. Avoid Flood in The City/Solution.java",
    "Algorithms/1001-2000/1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
    "Algorithms/1001-2000/1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree/1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree.md",
    "Algorithms/1001-2000/1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree/Solution.java",
    "Algorithms/1001-2000/1490. Clone N-ary Tree",
    "Algorithms/1001-2000/1490. Clone N-ary Tree/1490. Clone N-ary Tree.md",
    "Algorithms/1001-2000/1490. Clone N-ary Tree/Solution.java",
    "Algorithms/1001-2000/1491. Average Salary Excluding the Minimum and Maximum Salary",
    "Algorithms/1001-2000/1491. Average Salary Excluding the Minimum and Maximum Salary/1491. Average Salary Excluding the Minimum and Maximum Salary.md",
    "Algorithms/1001-2000/1491. Average Salary Excluding the Minimum and Maximum Salary/Solution.java",
    "Algorithms/1001-2000/1492. The kth Factor of n",
    "Algorithms/1001-2000/1492. The kth Factor of n/1492. The kth Factor of n.md",
    "Algorithms/1001-2000/1492. The kth Factor of n/Solution.java",
    "Algorithms/1001-2000/1493. Longest Subarray of 1's After Deleting One Element",
    "Algorithms/1001-2000/1493. Longest Subarray of 1's After Deleting One Element/1493. Longest Subarray of 1's After Deleting One Element.md",
    "Algorithms/1001-2000/1493. Longest Subarray of 1's After Deleting One Element/Solution.java",
    "Algorithms/1001-2000/1494. Parallel Courses II",
    "Algorithms/1001-2000/1494. Parallel Courses II/1494. Parallel Courses II.md",
    "Algorithms/1001-2000/1494. Parallel Courses II/Solution.java",
    "Algorithms/1001-2000/1496. Path Crossing",
    "Algorithms/1001-2000/1496. Path Crossing/1496. Path Crossing.md",
    "Algorithms/1001-2000/1496. Path Crossing/Solution.java",
    "Algorithms/1001-2000/1497. Check If Array Pairs Are Divisible by k",
    "Algorithms/1001-2000/1497. Check If Array Pairs Are Divisible by k/1497. Check If Array Pairs Are Divisible by k.md",
    "Algorithms/1001-2000/1497. Check If Array Pairs Are Divisible by k/Solution.java",
    "Algorithms/1001-2000/1498. Number of Subsequences That Satisfy the Given Sum Condition",
    "Algorithms/1001-2000/1498. Number of Subsequences That Satisfy the Given Sum Condition/1498. Number of Subsequences That Satisfy the Given Sum Condition.md",
    "Algorithms/1001-2000/1498. Number of Subsequences That Satisfy the Given Sum Condition/Solution.java",
    "Algorithms/1001-2000/1499. Max Value of Equation",
    "Algorithms/1001-2000/1499. Max Value of Equation/1499. Max Value of Equation.md",
    "Algorithms/1001-2000/1499. Max Value of Equation/Solution.java",
    "Algorithms/1001-2000/1500. Design a File Sharing System",
    "Algorithms/1001-2000/1500. Design a File Sharing System/1500. Design a File Sharing System.md",
    "Algorithms/1001-2000/1500. Design a File Sharing System/FileSharing.java",
    "Algorithms/1001-2000/1502. Can Make Arithmetic Progression From Sequence",
    "Algorithms/1001-2000/1502. Can Make Arithmetic Progression From Sequence/1502. Can Make Arithmetic Progression From Sequence.md",
    "Algorithms/1001-2000/1502. Can Make Arithmetic Progression From Sequence/Solution.java",
    "Algorithms/1001-2000/1503. Last Moment Before All Ants Fall Out of a Plank",
    "Algorithms/1001-2000/1503. Last Moment Before All Ants Fall Out of a Plank/1503. Last Moment Before All Ants Fall Out of a Plank.md",
    "Algorithms/1001-2000/1503. Last Moment Before All Ants Fall Out of a Plank/Solution.java",
    "Algorithms/1001-2000/1504. Count Submatrices With All Ones",
    "Algorithms/1001-2000/1504. Count Submatrices With All Ones/1504. Count Submatrices With All Ones.md",
    "Algorithms/1001-2000/1504. Count Submatrices With All Ones/Solution.java",
    "Algorithms/1001-2000/1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits",
    "Algorithms/1001-2000/1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits/1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits.md",
    "Algorithms/1001-2000/1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits/Solution.java",
    "Algorithms/1001-2000/1506. Find Root of N-Ary Tree",
    "Algorithms/1001-2000/1506. Find Root of N-Ary Tree/1506. Find Root of N-Ary Tree.md",
    "Algorithms/1001-2000/1506. Find Root of N-Ary Tree/Solution.java",
    "Algorithms/1001-2000/1507. Reformat Date",
    "Algorithms/1001-2000/1507. Reformat Date/1507. Reformat Date.md",
    "Algorithms/1001-2000/1507. Reformat Date/Solution.java",
    "Algorithms/1001-2000/1508. Range Sum of Sorted Subarray Sums",
    "Algorithms/1001-2000/1508. Range Sum of Sorted Subarray Sums/1508. Range Sum of Sorted Subarray Sums.md",
    "Algorithms/1001-2000/1508. Range Sum of Sorted Subarray Sums/Solution.java",
    "Algorithms/1001-2000/1509. Minimum Difference Between Largest and Smallest Value in Three Moves",
    "Algorithms/1001-2000/1509. Minimum Difference Between Largest and Smallest Value in Three Moves/1509. Minimum Difference Between Largest and Smallest Value in Three Moves.md",
    "Algorithms/1001-2000/1509. Minimum Difference Between Largest and Smallest Value in Three Moves/Solution.java",
    "Algorithms/1001-2000/1510. Stone Game IV",
    "Algorithms/1001-2000/1510. Stone Game IV/1510. Stone Game IV.md",
    "Algorithms/1001-2000/1510. Stone Game IV/Solution.java",
    "Algorithms/1001-2000/1512. Number of Good Pairs",
    "Algorithms/1001-2000/1512. Number of Good Pairs/1512. Number of Good Pairs.md",
    "Algorithms/1001-2000/1512. Number of Good Pairs/Solution.java",
    "Algorithms/1001-2000/1513. Number of Substrings With Only 1s",
    "Algorithms/1001-2000/1513. Number of Substrings With Only 1s/1513. Number of Substrings With Only 1s.md",
    "Algorithms/1001-2000/1513. Number of Substrings With Only 1s/Solution.java",
    "Algorithms/1001-2000/1514. Path with Maximum Probability",
    "Algorithms/1001-2000/1514. Path with Maximum Probability/1514. Path with Maximum Probability.md",
    "Algorithms/1001-2000/1514. Path with Maximum Probability/Solution.java",
    "Algorithms/1001-2000/1515. Best Position for a Service Centre",
    "Algorithms/1001-2000/1515. Best Position for a Service Centre/1515. Best Position for a Service Centre.md",
    "Algorithms/1001-2000/1515. Best Position for a Service Centre/Solution.java",
    "Algorithms/1001-2000/1516. Move Sub-Tree of N-Ary Tree",
    "Algorithms/1001-2000/1516. Move Sub-Tree of N-Ary Tree/1516. Move Sub-Tree of N-Ary Tree.md",
    "Algorithms/1001-2000/1516. Move Sub-Tree of N-Ary Tree/Solution.java",
    "Algorithms/1001-2000/1518. Water Bottles",
    "Algorithms/1001-2000/1518. Water Bottles/1518. Water Bottles.md",
    "Algorithms/1001-2000/1518. Water Bottles/Solution.java",
    "Algorithms/1001-2000/1519. Number of Nodes in the Sub-Tree With the Same Label",
    "Algorithms/1001-2000/1519. Number of Nodes in the Sub-Tree With the Same Label/1519. Number of Nodes in the Sub-Tree With the Same Label.md",
    "Algorithms/1001-2000/1519. Number of Nodes in the Sub-Tree With the Same Label/Solution.java",
    "Algorithms/1001-2000/1520. Maximum Number of Non-Overlapping Substrings",
    "Algorithms/1001-2000/1520. Maximum Number of Non-Overlapping Substrings/1520. Maximum Number of Non-Overlapping Substrings.md",
    "Algorithms/1001-2000/1520. Maximum Number of Non-Overlapping Substrings/Solution.java",
    "Algorithms/1001-2000/1521. Find a Value of a Mysterious Function Closest to Target",
    "Algorithms/1001-2000/1521. Find a Value of a Mysterious Function Closest to Target/1521. Find a Value of a Mysterious Function Closest to Target.md",
    "Algorithms/1001-2000/1521. Find a Value of a Mysterious Function Closest to Target/Solution.java",
    "Algorithms/1001-2000/1522. Diameter of N-Ary Tree",
    "Algorithms/1001-2000/1522. Diameter of N-Ary Tree/1522. Diameter of N-Ary Tree.md",
    "Algorithms/1001-2000/1522. Diameter of N-Ary Tree/Solution.java",
    "Algorithms/1001-2000/1523. Count Odd Numbers in an Interval Range",
    "Algorithms/1001-2000/1523. Count Odd Numbers in an Interval Range/1523. Count Odd Numbers in an Interval Range.md",
    "Algorithms/1001-2000/1523. Count Odd Numbers in an Interval Range/Solution.java",
    "Algorithms/1001-2000/1524. Number of Sub-arrays With Odd Sum",
    "Algorithms/1001-2000/1524. Number of Sub-arrays With Odd Sum/1524. Number of Sub-arrays With Odd Sum.md",
    "Algorithms/1001-2000/1524. Number of Sub-arrays With Odd Sum/Solution.java",
    "Algorithms/1001-2000/1525. Number of Good Ways to Split a String",
    "Algorithms/1001-2000/1525. Number of Good Ways to Split a String/1525. Number of Good Ways to Split a String.md",
    "Algorithms/1001-2000/1525. Number of Good Ways to Split a String/Solution.java",
    "Algorithms/1001-2000/1526. Minimum Number of Increments on Subarrays to Form a Target Array",
    "Algorithms/1001-2000/1526. Minimum Number of Increments on Subarrays to Form a Target Array/1526. Minimum Number of Increments on Subarrays to Form a Target Array.md",
    "Algorithms/1001-2000/1526. Minimum Number of Increments on Subarrays to Form a Target Array/Solution.java",
    "Algorithms/1001-2000/1528. Shuffle String",
    "Algorithms/1001-2000/1528. Shuffle String/1528. Shuffle String.md",
    "Algorithms/1001-2000/1528. Shuffle String/Solution.java",
    "Algorithms/1001-2000/1529. Bulb Switcher IV",
    "Algorithms/1001-2000/1529. Bulb Switcher IV/1529. Bulb Switcher IV.md",
    "Algorithms/1001-2000/1529. Bulb Switcher IV/Solution.java",
    "Algorithms/1001-2000/1530. Number of Good Leaf Nodes Pairs",
    "Algorithms/1001-2000/1530. Number of Good Leaf Nodes Pairs/1530. Number of Good Leaf Nodes Pairs.md",
    "Algorithms/1001-2000/1530. Number of Good Leaf Nodes Pairs/Solution.java",
    "Algorithms/1001-2000/1531. String Compression II",
    "Algorithms/1001-2000/1531. String Compression II/1531. String Compression II.md",
    "Algorithms/1001-2000/1531. String Compression II/Solution.java",
    "Algorithms/1001-2000/1533. Find the Index of the Large Integer",
    "Algorithms/1001-2000/1533. Find the Index of the Large Integer/1533. Find the Index of the Large Integer.md",
    "Algorithms/1001-2000/1533. Find the Index of the Large Integer/Solution.java",
    "Algorithms/1001-2000/1534. Count Good Triplets",
    "Algorithms/1001-2000/1534. Count Good Triplets/1534. Count Good Triplets.md",
    "Algorithms/1001-2000/1534. Count Good Triplets/Solution.java",
    "Algorithms/1001-2000/1535. Find the Winner of an Array Game",
    "Algorithms/1001-2000/1535. Find the Winner of an Array Game/1535. Find the Winner of an Array Game.md",
    "Algorithms/1001-2000/1535. Find the Winner of an Array Game/Solution.java",
    "Algorithms/1001-2000/1536. Minimum Swaps to Arrange a Binary Grid",
    "Algorithms/1001-2000/1536. Minimum Swaps to Arrange a Binary Grid/1536. Minimum Swaps to Arrange a Binary Grid.md",
    "Algorithms/1001-2000/1536. Minimum Swaps to Arrange a Binary Grid/Solution.java",
    "Algorithms/1001-2000/1537. Get the Maximum Score",
    "Algorithms/1001-2000/1537. Get the Maximum Score/1537. Get the Maximum Score.md",
    "Algorithms/1001-2000/1537. Get the Maximum Score/Solution.java",
    "Algorithms/1001-2000/1538. Guess the Majority in a Hidden Array",
    "Algorithms/1001-2000/1538. Guess the Majority in a Hidden Array/1538. Guess the Majority in a Hidden Array.md",
    "Algorithms/1001-2000/1538. Guess the Majority in a Hidden Array/Solution.java",
    "Algorithms/1001-2000/1539. Kth Missing Positive Number",
    "Algorithms/1001-2000/1539. Kth Missing Positive Number/1539. Kth Missing Positive Number.md",
    "Algorithms/1001-2000/1539. Kth Missing Positive Number/Solution.java",
    "Algorithms/1001-2000/1540. Can Convert String in K Moves",
    "Algorithms/1001-2000/1540. Can Convert String in K Moves/1540. Can Convert String in K Moves.md",
    "Algorithms/1001-2000/1540. Can Convert String in K Moves/Solution.java",
    "Algorithms/1001-2000/1541. Minimum Insertions to Balance a Parentheses String",
    "Algorithms/1001-2000/1541. Minimum Insertions to Balance a Parentheses String/1541. Minimum Insertions to Balance a Parentheses String.md",
    "Algorithms/1001-2000/1541. Minimum Insertions to Balance a Parentheses String/Solution.java",
    "Algorithms/1001-2000/1542. Find Longest Awesome Substring",
    "Algorithms/1001-2000/1542. Find Longest Awesome Substring/1542. Find Longest Awesome Substring.md",
    "Algorithms/1001-2000/1542. Find Longest Awesome Substring/Solution.java",
    "Algorithms/1001-2000/1544. Make The String Great",
    "Algorithms/1001-2000/1544. Make The String Great/1544. Make The String Great.md",
    "Algorithms/1001-2000/1544. Make The String Great/Solution.java",
    "Algorithms/1001-2000/1545. Find Kth Bit in Nth Binary String",
    "Algorithms/1001-2000/1545. Find Kth Bit in Nth Binary String/1545. Find Kth Bit in Nth Binary String.md",
    "Algorithms/1001-2000/1545. Find Kth Bit in Nth Binary String/Solution.java",
    "Algorithms/1001-2000/1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
    "Algorithms/1001-2000/1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target/1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target.md",
    "Algorithms/1001-2000/1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target/Solution.java",
    "Algorithms/1001-2000/1547. Minimum Cost to Cut a Stick",
    "Algorithms/1001-2000/1547. Minimum Cost to Cut a Stick/1547. Minimum Cost to Cut a Stick.md",
    "Algorithms/1001-2000/1547. Minimum Cost to Cut a Stick/Solution.java",
    "Algorithms/1001-2000/1548. The Most Similar Path in a Graph",
    "Algorithms/1001-2000/1548. The Most Similar Path in a Graph/1548. The Most Similar Path in a Graph.md",
    "Algorithms/1001-2000/1548. The Most Similar Path in a Graph/Solution.java",
    "Algorithms/1001-2000/1550. Three Consecutive Odds",
    "Algorithms/1001-2000/1550. Three Consecutive Odds/1550. Three Consecutive Odds.md",
    "Algorithms/1001-2000/1550. Three Consecutive Odds/Solution.java",
    "Algorithms/1001-2000/1551. Minimum Operations to Make Array Equal",
    "Algorithms/1001-2000/1551. Minimum Operations to Make Array Equal/1551. Minimum Operations to Make Array Equal.md",
    "Algorithms/1001-2000/1551. Minimum Operations to Make Array Equal/Solution.java",
    "Algorithms/1001-2000/1552. Magnetic Force Between Two Balls",
    "Algorithms/1001-2000/1552. Magnetic Force Between Two Balls/1552. Magnetic Force Between Two Balls.md",
    "Algorithms/1001-2000/1552. Magnetic Force Between Two Balls/Solution.java",
    "Algorithms/1001-2000/1553. Minimum Number of Days to Eat N Oranges",
    "Algorithms/1001-2000/1553. Minimum Number of Days to Eat N Oranges/1553. Minimum Number of Days to Eat N Oranges.md",
    "Algorithms/1001-2000/1553. Minimum Number of Days to Eat N Oranges/Solution.java",
    "Algorithms/1001-2000/1554. Strings Differ by One Character",
    "Algorithms/1001-2000/1554. Strings Differ by One Character/1554. Strings Differ by One Character.md",
    "Algorithms/1001-2000/1554. Strings Differ by One Character/Solution.java",
    "Algorithms/1001-2000/1556. Thousand Separator",
    "Algorithms/1001-2000/1556. Thousand Separator/1556. Thousand Separator.md",
    "Algorithms/1001-2000/1556. Thousand Separator/Solution.java",
    "Algorithms/1001-2000/1557. Minimum Number of Vertices to Reach All Nodes",
    "Algorithms/1001-2000/1557. Minimum Number of Vertices to Reach All Nodes/1557. Minimum Number of Vertices to Reach All Nodes.md",
    "Algorithms/1001-2000/1557. Minimum Number of Vertices to Reach All Nodes/Solution.java",
    "Algorithms/1001-2000/1558. Minimum Numbers of Function Calls to Make Target Array",
    "Algorithms/1001-2000/1558. Minimum Numbers of Function Calls to Make Target Array/1558. Minimum Numbers of Function Calls to Make Target Array.md",
    "Algorithms/1001-2000/1558. Minimum Numbers of Function Calls to Make Target Array/Solution.java",
    "Algorithms/1001-2000/1559. Detect Cycles in 2D Grid",
    "Algorithms/1001-2000/1559. Detect Cycles in 2D Grid/1559. Detect Cycles in 2D Grid.md",
    "Algorithms/1001-2000/1559. Detect Cycles in 2D Grid/Solution.java",
    "Algorithms/1001-2000/1560. Most Visited Sector in a Circular Track",
    "Algorithms/1001-2000/1560. Most Visited Sector in a Circular Track/1560. Most Visited Sector in a Circular Track.md",
    "Algorithms/1001-2000/1560. Most Visited Sector in a Circular Track/Solution.java",
    "Algorithms/1001-2000/1561. Maximum Number of Coins You Can Get",
    "Algorithms/1001-2000/1561. Maximum Number of Coins You Can Get/1561. Maximum Number of Coins You Can Get.md",
    "Algorithms/1001-2000/1561. Maximum Number of Coins You Can Get/Solution.java",
    "Algorithms/1001-2000/1562. Find Latest Group of Size M",
    "Algorithms/1001-2000/1562. Find Latest Group of Size M/1562. Find Latest Group of Size M.md",
    "Algorithms/1001-2000/1562. Find Latest Group of Size M/Solution.java",
    "Algorithms/1001-2000/1563. Stone Game V",
    "Algorithms/1001-2000/1563. Stone Game V/1563. Stone Game V.md",
    "Algorithms/1001-2000/1563. Stone Game V/Solution.java",
    "Algorithms/1001-2000/1564. Put Boxes Into the Warehouse I",
    "Algorithms/1001-2000/1564. Put Boxes Into the Warehouse I/1564. Put Boxes Into the Warehouse I.md",
    "Algorithms/1001-2000/1564. Put Boxes Into the Warehouse I/Solution.java",
    "Algorithms/1001-2000/1566. Detect Pattern of Length M Repeated K or More Times",
    "Algorithms/1001-2000/1566. Detect Pattern of Length M Repeated K or More Times/1566. Detect Pattern of Length M Repeated K or More Times.md",
    "Algorithms/1001-2000/1566. Detect Pattern of Length M Repeated K or More Times/Solution.java",
    "Algorithms/1001-2000/1567. Maximum Length of Subarray With Positive Product",
    "Algorithms/1001-2000/1567. Maximum Length of Subarray With Positive Product/1567. Maximum Length of Subarray With Positive Product.md",
    "Algorithms/1001-2000/1567. Maximum Length of Subarray With Positive Product/Solution.java",
    "Algorithms/1001-2000/1568. Minimum Number of Days to Disconnect Island",
    "Algorithms/1001-2000/1568. Minimum Number of Days to Disconnect Island/1568. Minimum Number of Days to Disconnect Island.md",
    "Algorithms/1001-2000/1568. Minimum Number of Days to Disconnect Island/Solution.java",
    "Algorithms/1001-2000/1569. Number of Ways to Reorder Array to Get Same BST",
    "Algorithms/1001-2000/1569. Number of Ways to Reorder Array to Get Same BST/1569. Number of Ways to Reorder Array to Get Same BST.md",
    "Algorithms/1001-2000/1569. Number of Ways to Reorder Array to Get Same BST/Solution.java",
    "Algorithms/1001-2000/1570. Dot Product of Two Sparse Vectors",
    "Algorithms/1001-2000/1570. Dot Product of Two Sparse Vectors/1570. Dot Product of Two Sparse Vectors.md",
    "Algorithms/1001-2000/1570. Dot Product of Two Sparse Vectors/SparseVector.java",
    "Algorithms/1001-2000/1572. Matrix Diagonal Sum",
    "Algorithms/1001-2000/1572. Matrix Diagonal Sum/1572. Matrix Diagonal Sum.md",
    "Algorithms/1001-2000/1572. Matrix Diagonal Sum/Solution.java",
    "Algorithms/1001-2000/1573. Number of Ways to Split a String",
    "Algorithms/1001-2000/1573. Number of Ways to Split a String/1573. Number of Ways to Split a String.md",
    "Algorithms/1001-2000/1573. Number of Ways to Split a String/Solution.java",
    "Algorithms/1001-2000/1574. Shortest Subarray to be Removed to Make Array Sorted",
    "Algorithms/1001-2000/1574. Shortest Subarray to be Removed to Make Array Sorted/1574. Shortest Subarray to be Removed to Make Array Sorted.md",
    "Algorithms/1001-2000/1574. Shortest Subarray to be Removed to Make Array Sorted/Solution.java",
    "Algorithms/1001-2000/1575. Count All Possible Routes",
    "Algorithms/1001-2000/1575. Count All Possible Routes/1575. Count All Possible Routes.md",
    "Algorithms/1001-2000/1575. Count All Possible Routes/Solution.java",
    "Algorithms/1001-2000/1576. Replace All Question Marks to Avoid Consecutive Repeating Characters",
    "Algorithms/1001-2000/1576. Replace All Question Marks to Avoid Consecutive Repeating Characters/1576. Replace All Question Marks to Avoid Consecutive Repeating Characters.md",
    "Algorithms/1001-2000/1576. Replace All Question Marks to Avoid Consecutive Repeating Characters/Solution.java",
    "Algorithms/1001-2000/1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
    "Algorithms/1001-2000/1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers/1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers.md",
    "Algorithms/1001-2000/1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers/Solution.java",
    "Algorithms/1001-2000/1578. Minimum Deletion Cost to Avoid Repeating Letters",
    "Algorithms/1001-2000/1578. Minimum Deletion Cost to Avoid Repeating Letters/1578. Minimum Deletion Cost to Avoid Repeating Letters.md",
    "Algorithms/1001-2000/1578. Minimum Deletion Cost to Avoid Repeating Letters/Solution.java",
    "Algorithms/1001-2000/1579. Remove Max Number of Edges to Keep Graph Fully Traversable",
    "Algorithms/1001-2000/1579. Remove Max Number of Edges to Keep Graph Fully Traversable/1579. Remove Max Number of Edges to Keep Graph Fully Traversable.md",
    "Algorithms/1001-2000/1579. Remove Max Number of Edges to Keep Graph Fully Traversable/Solution.java",
    "Algorithms/1001-2000/1580. Put Boxes Into the Warehouse II",
    "Algorithms/1001-2000/1580. Put Boxes Into the Warehouse II/1580. Put Boxes Into the Warehouse II.md",
    "Algorithms/1001-2000/1580. Put Boxes Into the Warehouse II/Solution.java",
    "Algorithms/1001-2000/1582. Special Positions in a Binary Matrix",
    "Algorithms/1001-2000/1582. Special Positions in a Binary Matrix/1582. Special Positions in a Binary Matrix.md",
    "Algorithms/1001-2000/1582. Special Positions in a Binary Matrix/Solution.java",
    "Algorithms/1001-2000/1583. Count Unhappy Friends",
    "Algorithms/1001-2000/1583. Count Unhappy Friends/1583. Count Unhappy Friends.md",
    "Algorithms/1001-2000/1583. Count Unhappy Friends/Solution.java",
    "Algorithms/1001-2000/1584. Min Cost to Connect All Points",
    "Algorithms/1001-2000/1584. Min Cost to Connect All Points/1584. Min Cost to Connect All Points.md",
    "Algorithms/1001-2000/1584. Min Cost to Connect All Points/Solution.java",
    "Algorithms/1001-2000/1585. Check If String Is Transformable With Substring Sort Operations",
    "Algorithms/1001-2000/1585. Check If String Is Transformable With Substring Sort Operations/1585. Check If String Is Transformable With Substring Sort Operations.md",
    "Algorithms/1001-2000/1585. Check If String Is Transformable With Substring Sort Operations/Solution.java",
    "Algorithms/1001-2000/1586. Binary Search Tree Iterator II",
    "Algorithms/1001-2000/1586. Binary Search Tree Iterator II/1586. Binary Search Tree Iterator II.md",
    "Algorithms/1001-2000/1586. Binary Search Tree Iterator II/BSTIterator.java",
    "Algorithms/1001-2000/1588. Sum of All Odd Length Subarrays",
    "Algorithms/1001-2000/1588. Sum of All Odd Length Subarrays/1588. Sum of All Odd Length Subarrays.md",
    "Algorithms/1001-2000/1588. Sum of All Odd Length Subarrays/Solution.java",
    "Algorithms/1001-2000/1589. Maximum Sum Obtained of Any Permutation",
    "Algorithms/1001-2000/1589. Maximum Sum Obtained of Any Permutation/1589. Maximum Sum Obtained of Any Permutation.md",
    "Algorithms/1001-2000/1589. Maximum Sum Obtained of Any Permutation/Solution.java",
    "Algorithms/1001-2000/1590. Make Sum Divisible by P",
    "Algorithms/1001-2000/1590. Make Sum Divisible by P/1590. Make Sum Divisible by P.md",
    "Algorithms/1001-2000/1590. Make Sum Divisible by P/Solution.java",
    "Algorithms/1001-2000/1591. Strange Printer II",
    "Algorithms/1001-2000/1591. Strange Printer II/1591. Strange Printer II.md",
    "Algorithms/1001-2000/1591. Strange Printer II/Solution.java",
    "Algorithms/1001-2000/1592. Rearrange Spaces Between Words",
    "Algorithms/1001-2000/1592. Rearrange Spaces Between Words/1592. Rearrange Spaces Between Words.md",
    "Algorithms/1001-2000/1592. Rearrange Spaces Between Words/Solution.java",
    "Algorithms/1001-2000/1593. Split a String Into the Max Number of Unique Substrings",
    "Algorithms/1001-2000/1593. Split a String Into the Max Number of Unique Substrings/1593. Split a String Into the Max Number of Unique Substrings.md",
    "Algorithms/1001-2000/1593. Split a String Into the Max Number of Unique Substrings/Solution.java",
    "Algorithms/1001-2000/1594. Maximum Non Negative Product in a Matrix",
    "Algorithms/1001-2000/1594. Maximum Non Negative Product in a Matrix/1594. Maximum Non Negative Product in a Matrix.md",
    "Algorithms/1001-2000/1594. Maximum Non Negative Product in a Matrix/Solution.java",
    "Algorithms/1001-2000/1595. Minimum Cost to Connect Two Groups of Points",
    "Algorithms/1001-2000/1595. Minimum Cost to Connect Two Groups of Points/1595. Minimum Cost to Connect Two Groups of Points.md",
    "Algorithms/1001-2000/1595. Minimum Cost to Connect Two Groups of Points/Solution.java",
    "Algorithms/1001-2000/1597. Build Binary Expression Tree From Infix Expression",
    "Algorithms/1001-2000/1597. Build Binary Expression Tree From Infix Expression/1597. Build Binary Expression Tree From Infix Expression.md",
    "Algorithms/1001-2000/1597. Build Binary Expression Tree From Infix Expression/Solution.java",
    "Algorithms/1001-2000/1598. Crawler Log Folder",
    "Algorithms/1001-2000/1598. Crawler Log Folder/1598. Crawler Log Folder.md",
    "Algorithms/1001-2000/1598. Crawler Log Folder/Solution.java",
    "Algorithms/1001-2000/1599. Maximum Profit of Operating a Centennial Wheel",
    "Algorithms/1001-2000/1599. Maximum Profit of Operating a Centennial Wheel/1599. Maximum Profit of Operating a Centennial Wheel.md",
    "Algorithms/1001-2000/1599. Maximum Profit of Operating a Centennial Wheel/Solution.java",
    "Algorithms/1001-2000/1600. Throne Inheritance",
    "Algorithms/1001-2000/1600. Throne Inheritance/1600. Throne Inheritance.md",
    "Algorithms/1001-2000/1600. Throne Inheritance/ThroneInheritance.java",
    "Algorithms/1001-2000/1601. Maximum Number of Achievable Transfer Requests",
    "Algorithms/1001-2000/1601. Maximum Number of Achievable Transfer Requests/1601. Maximum Number of Achievable Transfer Requests.md",
    "Algorithms/1001-2000/1601. Maximum Number of Achievable Transfer Requests/Solution.java",
    "Algorithms/1001-2000/1602. Find Nearest Right Node in Binary Tree",
    "Algorithms/1001-2000/1602. Find Nearest Right Node in Binary Tree/1602. Find Nearest Right Node in Binary Tree.md",
    "Algorithms/1001-2000/1602. Find Nearest Right Node in Binary Tree/Solution.java",
    "Algorithms/1001-2000/1603. Design Parking System",
    "Algorithms/1001-2000/1603. Design Parking System/1603. Design Parking System.md",
    "Algorithms/1001-2000/1603. Design Parking System/ParkingSystem.java",
    "Algorithms/1001-2000/1604. Alert Using Same Key-Card Three or More Times in a One Hour Period",
    "Algorithms/1001-2000/1604. Alert Using Same Key-Card Three or More Times in a One Hour Period/1604. Alert Using Same Key-Card Three or More Times in a One Hour Period.md",
    "Algorithms/1001-2000/1604. Alert Using Same Key-Card Three or More Times in a One Hour Period/Solution.java",
    "Algorithms/1001-2000/1605. Find Valid Matrix Given Row and Column Sums",
    "Algorithms/1001-2000/1605. Find Valid Matrix Given Row and Column Sums/1605. Find Valid Matrix Given Row and Column Sums.md",
    "Algorithms/1001-2000/1605. Find Valid Matrix Given Row and Column Sums/Solution.java",
    "Algorithms/1001-2000/1606. Find Servers That Handled Most Number of Requests",
    "Algorithms/1001-2000/1606. Find Servers That Handled Most Number of Requests/1606. Find Servers That Handled Most Number of Requests.md",
    "Algorithms/1001-2000/1606. Find Servers That Handled Most Number of Requests/Solution.java",
    "Algorithms/1001-2000/1608. Special Array With X Elements Greater Than or Equal X",
    "Algorithms/1001-2000/1608. Special Array With X Elements Greater Than or Equal X/1608. Special Array With X Elements Greater Than or Equal X.md",
    "Algorithms/1001-2000/1608. Special Array With X Elements Greater Than or Equal X/Solution.java",
    "Algorithms/1001-2000/1609. Even Odd Tree",
    "Algorithms/1001-2000/1609. Even Odd Tree/1609. Even Odd Tree.md",
    "Algorithms/1001-2000/1609. Even Odd Tree/Solution.java",
    "Algorithms/1001-2000/1610. Maximum Number of Visible Points",
    "Algorithms/1001-2000/1610. Maximum Number of Visible Points/1610. Maximum Number of Visible Points.md",
    "Algorithms/1001-2000/1610. Maximum Number of Visible Points/Solution.java",
    "Algorithms/1001-2000/1611. Minimum One Bit Operations to Make Integers Zero",
    "Algorithms/1001-2000/1611. Minimum One Bit Operations to Make Integers Zero/1611. Minimum One Bit Operations to Make Integers Zero.md",
    "Algorithms/1001-2000/1611. Minimum One Bit Operations to Make Integers Zero/Solution.java",
    "Algorithms/1001-2000/1612. Check If Two Expression Trees are Equivalent",
    "Algorithms/1001-2000/1612. Check If Two Expression Trees are Equivalent/1612. Check If Two Expression Trees are Equivalent.md",
    "Algorithms/1001-2000/1612. Check If Two Expression Trees are Equivalent/Solution.java",
    "Algorithms/1001-2000/1614. Maximum Nesting Depth of the Parentheses",
    "Algorithms/1001-2000/1614. Maximum Nesting Depth of the Parentheses/1614. Maximum Nesting Depth of the Parentheses.md",
    "Algorithms/1001-2000/1614. Maximum Nesting Depth of the Parentheses/Solution.java",
    "Algorithms/1001-2000/1615. Maximal Network Rank",
    "Algorithms/1001-2000/1615. Maximal Network Rank/1615. Maximal Network Rank.md",
    "Algorithms/1001-2000/1615. Maximal Network Rank/Solution.java",
    "Algorithms/1001-2000/1616. Split Two Strings to Make Palindrome",
    "Algorithms/1001-2000/1616. Split Two Strings to Make Palindrome/1616. Split Two Strings to Make Palindrome.md",
    "Algorithms/1001-2000/1616. Split Two Strings to Make Palindrome/Solution.java",
    "Algorithms/1001-2000/1617. Count Subtrees With Max Distance Between Cities",
    "Algorithms/1001-2000/1617. Count Subtrees With Max Distance Between Cities/1617. Count Subtrees With Max Distance Between Cities.md",
    "Algorithms/1001-2000/1617. Count Subtrees With Max Distance Between Cities/Solution.java",
    "Algorithms/1001-2000/1618. Maximum Font to Fit a Sentence in a Screen",
    "Algorithms/1001-2000/1618. Maximum Font to Fit a Sentence in a Screen/1618. Maximum Font to Fit a Sentence in a Screen.md",
    "Algorithms/1001-2000/1618. Maximum Font to Fit a Sentence in a Screen/Solution.java",
    "Algorithms/1001-2000/1619. Mean of Array After Removing Some Elements",
    "Algorithms/1001-2000/1619. Mean of Array After Removing Some Elements/1619. Mean of Array After Removing Some Elements.md",
    "Algorithms/1001-2000/1619. Mean of Array After Removing Some Elements/Solution.java",
    "Algorithms/1001-2000/1620. Coordinate With Maximum Network Quality",
    "Algorithms/1001-2000/1620. Coordinate With Maximum Network Quality/1620. Coordinate With Maximum Network Quality.md",
    "Algorithms/1001-2000/1620. Coordinate With Maximum Network Quality/Solution.java",
    "Algorithms/1001-2000/1621. Number of Sets of K Non-Overlapping Line Segments",
    "Algorithms/1001-2000/1621. Number of Sets of K Non-Overlapping Line Segments/1621. Number of Sets of K Non-Overlapping Line Segments.md",
    "Algorithms/1001-2000/1621. Number of Sets of K Non-Overlapping Line Segments/Solution.java",
    "Algorithms/1001-2000/1622. Fancy Sequence",
    "Algorithms/1001-2000/1622. Fancy Sequence/1622. Fancy Sequence.md",
    "Algorithms/1001-2000/1622. Fancy Sequence/Fancy.java",
    "Algorithms/1001-2000/1624. Largest Substring Between Two Equal Characters",
    "Algorithms/1001-2000/1624. Largest Substring Between Two Equal Characters/1624. Largest Substring Between Two Equal Characters.md",
    "Algorithms/1001-2000/1624. Largest Substring Between Two Equal Characters/Solution.java",
    "Algorithms/1001-2000/1625. Lexicographically Smallest String After Applying Operations",
    "Algorithms/1001-2000/1625. Lexicographically Smallest String After Applying Operations/1625. Lexicographically Smallest String After Applying Operations.md",
    "Algorithms/1001-2000/1625. Lexicographically Smallest String After Applying Operations/Solution.java",
    "Algorithms/1001-2000/1626. Best Team With No Conflicts",
    "Algorithms/1001-2000/1626. Best Team With No Conflicts/1626. Best Team With No Conflicts.md",
    "Algorithms/1001-2000/1626. Best Team With No Conflicts/Solution.java",
    "Algorithms/1001-2000/1627. Graph Connectivity With Threshold",
    "Algorithms/1001-2000/1627. Graph Connectivity With Threshold/1627. Graph Connectivity With Threshold.md",
    "Algorithms/1001-2000/1627. Graph Connectivity With Threshold/Solution.java",
    "Algorithms/1001-2000/1628. Design an Expression Tree With Evaluate Function",
    "Algorithms/1001-2000/1628. Design an Expression Tree With Evaluate Function/1628. Design an Expression Tree With Evaluate Function.md",
    "Algorithms/1001-2000/1628. Design an Expression Tree With Evaluate Function/TreeBuilder.java",
    "Algorithms/1001-2000/1629. Slowest Key",
    "Algorithms/1001-2000/1629. Slowest Key/1629. Slowest Key.md",
    "Algorithms/1001-2000/1629. Slowest Key/Solution.java",
    "Algorithms/1001-2000/1630. Arithmetic Subarrays",
    "Algorithms/1001-2000/1630. Arithmetic Subarrays/1630. Arithmetic Subarrays.md",
    "Algorithms/1001-2000/1630. Arithmetic Subarrays/Solution.java",
    "Algorithms/1001-2000/1631. Path With Minimum Effort",
    "Algorithms/1001-2000/1631. Path With Minimum Effort/1631. Path With Minimum Effort.md",
    "Algorithms/1001-2000/1631. Path With Minimum Effort/Solution.java",
    "Algorithms/1001-2000/1632. Rank Transform of a Matrix",
    "Algorithms/1001-2000/1632. Rank Transform of a Matrix/1632. Rank Transform of a Matrix.md",
    "Algorithms/1001-2000/1632. Rank Transform of a Matrix/Solution.java",
    "Algorithms/1001-2000/1634. Add Two Polynomials Represented as Linked Lists",
    "Algorithms/1001-2000/1634. Add Two Polynomials Represented as Linked Lists/1634. Add Two Polynomials Represented as Linked Lists.md",
    "Algorithms/1001-2000/1634. Add Two Polynomials Represented as Linked Lists/Solution.java",
    "Algorithms/1001-2000/1636. Sort Array by Increasing Frequency",
    "Algorithms/1001-2000/1636. Sort Array by Increasing Frequency/1636. Sort Array by Increasing Frequency.md",
    "Algorithms/1001-2000/1636. Sort Array by Increasing Frequency/Solution.java",
    "Algorithms/1001-2000/1637. Widest Vertical Area Between Two Points Containing No Points",
    "Algorithms/1001-2000/1637. Widest Vertical Area Between Two Points Containing No Points/1637. Widest Vertical Area Between Two Points Containing No Points.md",
    "Algorithms/1001-2000/1637. Widest Vertical Area Between Two Points Containing No Points/Solution.java",
    "Algorithms/1001-2000/1638. Count Substrings That Differ by One Character",
    "Algorithms/1001-2000/1638. Count Substrings That Differ by One Character/1638. Count Substrings That Differ by One Character.md",
    "Algorithms/1001-2000/1638. Count Substrings That Differ by One Character/Solution.java",
    "Algorithms/1001-2000/1639. Number of Ways to Form a Target String Given a Dictionary",
    "Algorithms/1001-2000/1639. Number of Ways to Form a Target String Given a Dictionary/1639. Number of Ways to Form a Target String Given a Dictionary.md",
    "Algorithms/1001-2000/1639. Number of Ways to Form a Target String Given a Dictionary/Solution.java",
    "Algorithms/1001-2000/1640. Check Array Formation Through Concatenation",
    "Algorithms/1001-2000/1640. Check Array Formation Through Concatenation/1640. Check Array Formation Through Concatenation.md",
    "Algorithms/1001-2000/1640. Check Array Formation Through Concatenation/Solution.java",
    "Algorithms/1001-2000/1641. Count Sorted Vowel Strings",
    "Algorithms/1001-2000/1641. Count Sorted Vowel Strings/1641. Count Sorted Vowel Strings.md",
    "Algorithms/1001-2000/1641. Count Sorted Vowel Strings/Solution.java",
    "Algorithms/1001-2000/1642. Furthest Building You Can Reach",
    "Algorithms/1001-2000/1642. Furthest Building You Can Reach/1642. Furthest Building You Can Reach.md",
    "Algorithms/1001-2000/1642. Furthest Building You Can Reach/Solution.java",
    "Algorithms/1001-2000/1643. Kth Smallest Instructions",
    "Algorithms/1001-2000/1643. Kth Smallest Instructions/1643. Kth Smallest Instructions.md",
    "Algorithms/1001-2000/1643. Kth Smallest Instructions/Solution.java",
    "Algorithms/1001-2000/1644. Lowest Common Ancestor of a Binary Tree II",
    "Algorithms/1001-2000/1644. Lowest Common Ancestor of a Binary Tree II/1644. Lowest Common Ancestor of a Binary Tree II.md",
    "Algorithms/1001-2000/1644. Lowest Common Ancestor of a Binary Tree II/Solution.java",
    "Algorithms/1001-2000/1646. Get Maximum in Generated Array",
    "Algorithms/1001-2000/1646. Get Maximum in Generated Array/1646. Get Maximum in Generated Array.md",
    "Algorithms/1001-2000/1646. Get Maximum in Generated Array/Solution.java",
    "Algorithms/1001-2000/1647. Minimum Deletions to Make Character Frequencies Unique",
    "Algorithms/1001-2000/1647. Minimum Deletions to Make Character Frequencies Unique/1647. Minimum Deletions to Make Character Frequencies Unique.md",
    "Algorithms/1001-2000/1647. Minimum Deletions to Make Character Frequencies Unique/Solution.java",
    "Algorithms/1001-2000/1648. Sell Diminishing-Valued Colored Balls",
    "Algorithms/1001-2000/1648. Sell Diminishing-Valued Colored Balls/1648. Sell Diminishing-Valued Colored Balls.md",
    "Algorithms/1001-2000/1648. Sell Diminishing-Valued Colored Balls/Solution.java",
    "Algorithms/1001-2000/1649. Create Sorted Array through Instructions",
    "Algorithms/1001-2000/1649. Create Sorted Array through Instructions/1649. Create Sorted Array through Instructions.md",
    "Algorithms/1001-2000/1649. Create Sorted Array through Instructions/Solution.java",
    "Algorithms/1001-2000/1650. Lowest Common Ancestor of a Binary Tree III",
    "Algorithms/1001-2000/1650. Lowest Common Ancestor of a Binary Tree III/1650. Lowest Common Ancestor of a Binary Tree III.md",
    "Algorithms/1001-2000/1650. Lowest Common Ancestor of a Binary Tree III/Solution.java",
    "Algorithms/1001-2000/1652. Defuse the Bomb",
    "Algorithms/1001-2000/1652. Defuse the Bomb/1652. Defuse the Bomb.md",
    "Algorithms/1001-2000/1652. Defuse the Bomb/Solution.java",
    "Algorithms/1001-2000/1653. Minimum Deletions to Make String Balanced",
    "Algorithms/1001-2000/1653. Minimum Deletions to Make String Balanced/1653. Minimum Deletions to Make String Balanced.md",
    "Algorithms/1001-2000/1653. Minimum Deletions to Make String Balanced/Solution.java",
    "Algorithms/1001-2000/1654. Minimum Jumps to Reach Home",
    "Algorithms/1001-2000/1654. Minimum Jumps to Reach Home/1654. Minimum Jumps to Reach Home.md",
    "Algorithms/1001-2000/1654. Minimum Jumps to Reach Home/Solution.java",
    "Algorithms/1001-2000/1655. Distribute Repeating Integers",
    "Algorithms/1001-2000/1655. Distribute Repeating Integers/1655. Distribute Repeating Integers.md",
    "Algorithms/1001-2000/1655. Distribute Repeating Integers/Solution.java",
    "Algorithms/1001-2000/1656. Design an Ordered Stream",
    "Algorithms/1001-2000/1656. Design an Ordered Stream/1656. Design an Ordered Stream.md",
    "Algorithms/1001-2000/1656. Design an Ordered Stream/OrderedStream.java",
    "Algorithms/1001-2000/1657. Determine if Two Strings Are Close",
    "Algorithms/1001-2000/1657. Determine if Two Strings Are Close/1657. Determine if Two Strings Are Close.md",
    "Algorithms/1001-2000/1657. Determine if Two Strings Are Close/Solution.java",
    "Algorithms/1001-2000/1658. Minimum Operations to Reduce X to Zero",
    "Algorithms/1001-2000/1658. Minimum Operations to Reduce X to Zero/1658. Minimum Operations to Reduce X to Zero.md",
    "Algorithms/1001-2000/1658. Minimum Operations to Reduce X to Zero/Solution.java",
    "Algorithms/1001-2000/1659. Maximize Grid Happiness",
    "Algorithms/1001-2000/1659. Maximize Grid Happiness/1659. Maximize Grid Happiness.md",
    "Algorithms/1001-2000/1659. Maximize Grid Happiness/Solution.java",
    "Algorithms/1001-2000/1660. Correct a Binary Tree",
    "Algorithms/1001-2000/1660. Correct a Binary Tree/1660. Correct a Binary Tree.md",
    "Algorithms/1001-2000/1660. Correct a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1662. Check If Two String Arrays are Equivalent",
    "Algorithms/1001-2000/1662. Check If Two String Arrays are Equivalent/1662. Check If Two String Arrays are Equivalent.md",
    "Algorithms/1001-2000/1662. Check If Two String Arrays are Equivalent/Solution.java",
    "Algorithms/1001-2000/1663. Smallest String With A Given Numeric Value",
    "Algorithms/1001-2000/1663. Smallest String With A Given Numeric Value/1663. Smallest String With A Given Numeric Value.md",
    "Algorithms/1001-2000/1663. Smallest String With A Given Numeric Value/Solution.java",
    "Algorithms/1001-2000/1664. Ways to Make a Fair Array",
    "Algorithms/1001-2000/1664. Ways to Make a Fair Array/1664. Ways to Make a Fair Array.md",
    "Algorithms/1001-2000/1664. Ways to Make a Fair Array/Solution.java",
    "Algorithms/1001-2000/1665. Minimum Initial Energy to Finish Tasks",
    "Algorithms/1001-2000/1665. Minimum Initial Energy to Finish Tasks/1665. Minimum Initial Energy to Finish Tasks.md",
    "Algorithms/1001-2000/1665. Minimum Initial Energy to Finish Tasks/Solution.java",
    "Algorithms/1001-2000/1666. Change the Root of a Binary Tree",
    "Algorithms/1001-2000/1666. Change the Root of a Binary Tree/1666. Change the Root of a Binary Tree.md",
    "Algorithms/1001-2000/1666. Change the Root of a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1668. Maximum Repeating Substring",
    "Algorithms/1001-2000/1668. Maximum Repeating Substring/1668. Maximum Repeating Substring.md",
    "Algorithms/1001-2000/1668. Maximum Repeating Substring/Solution.java",
    "Algorithms/1001-2000/1669. Merge In Between Linked Lists",
    "Algorithms/1001-2000/1669. Merge In Between Linked Lists/1669. Merge In Between Linked Lists.md",
    "Algorithms/1001-2000/1669. Merge In Between Linked Lists/Solution.java",
    "Algorithms/1001-2000/1670. Design Front Middle Back Queue",
    "Algorithms/1001-2000/1670. Design Front Middle Back Queue/1670. Design Front Middle Back Queue.md",
    "Algorithms/1001-2000/1670. Design Front Middle Back Queue/FrontMiddleBackQueue.java",
    "Algorithms/1001-2000/1671. Minimum Number of Removals to Make Mountain Array",
    "Algorithms/1001-2000/1671. Minimum Number of Removals to Make Mountain Array/1671. Minimum Number of Removals to Make Mountain Array.md",
    "Algorithms/1001-2000/1671. Minimum Number of Removals to Make Mountain Array/Solution.java",
    "Algorithms/1001-2000/1672. Richest Customer Wealth",
    "Algorithms/1001-2000/1672. Richest Customer Wealth/1672. Richest Customer Wealth.md",
    "Algorithms/1001-2000/1672. Richest Customer Wealth/Solution.java",
    "Algorithms/1001-2000/1673. Find the Most Competitive Subsequence",
    "Algorithms/1001-2000/1673. Find the Most Competitive Subsequence/1673. Find the Most Competitive Subsequence.md",
    "Algorithms/1001-2000/1673. Find the Most Competitive Subsequence/Solution.java",
    "Algorithms/1001-2000/1674. Minimum Moves to Make Array Complementary",
    "Algorithms/1001-2000/1674. Minimum Moves to Make Array Complementary/1674. Minimum Moves to Make Array Complementary.md",
    "Algorithms/1001-2000/1674. Minimum Moves to Make Array Complementary/Solution.java",
    "Algorithms/1001-2000/1675. Minimize Deviation in Array",
    "Algorithms/1001-2000/1675. Minimize Deviation in Array/1675. Minimize Deviation in Array.md",
    "Algorithms/1001-2000/1675. Minimize Deviation in Array/Solution.java",
    "Algorithms/1001-2000/1676. Lowest Common Ancestor of a Binary Tree IV",
    "Algorithms/1001-2000/1676. Lowest Common Ancestor of a Binary Tree IV/1676. Lowest Common Ancestor of a Binary Tree IV.md",
    "Algorithms/1001-2000/1676. Lowest Common Ancestor of a Binary Tree IV/Solution.java",
    "Algorithms/1001-2000/1678. Goal Parser Interpretation",
    "Algorithms/1001-2000/1678. Goal Parser Interpretation/1678. Goal Parser Interpretation.md",
    "Algorithms/1001-2000/1678. Goal Parser Interpretation/Solution.java",
    "Algorithms/1001-2000/1679. Max Number of K-Sum Pairs",
    "Algorithms/1001-2000/1679. Max Number of K-Sum Pairs/1679. Max Number of K-Sum Pairs.md",
    "Algorithms/1001-2000/1679. Max Number of K-Sum Pairs/Solution.java",
    "Algorithms/1001-2000/1680. Concatenation of Consecutive Binary Numbers",
    "Algorithms/1001-2000/1680. Concatenation of Consecutive Binary Numbers/1680. Concatenation of Consecutive Binary Numbers.md",
    "Algorithms/1001-2000/1680. Concatenation of Consecutive Binary Numbers/Solution.java",
    "Algorithms/1001-2000/1681. Minimum Incompatibility",
    "Algorithms/1001-2000/1681. Minimum Incompatibility/1681. Minimum Incompatibility.md",
    "Algorithms/1001-2000/1681. Minimum Incompatibility/Solution.java",
    "Algorithms/1001-2000/1682. Longest Palindromic Subsequence II",
    "Algorithms/1001-2000/1682. Longest Palindromic Subsequence II/1682. Longest Palindromic Subsequence II.md",
    "Algorithms/1001-2000/1682. Longest Palindromic Subsequence II/Solution.java",
    "Algorithms/1001-2000/1684. Count the Number of Consistent Strings",
    "Algorithms/1001-2000/1684. Count the Number of Consistent Strings/1684. Count the Number of Consistent Strings.md",
    "Algorithms/1001-2000/1684. Count the Number of Consistent Strings/Solution.java",
    "Algorithms/1001-2000/1685. Sum of Absolute Differences in a Sorted Array",
    "Algorithms/1001-2000/1685. Sum of Absolute Differences in a Sorted Array/1685. Sum of Absolute Differences in a Sorted Array.md",
    "Algorithms/1001-2000/1685. Sum of Absolute Differences in a Sorted Array/Solution.java",
    "Algorithms/1001-2000/1686. Stone Game VI",
    "Algorithms/1001-2000/1686. Stone Game VI/1686. Stone Game VI.md",
    "Algorithms/1001-2000/1686. Stone Game VI/Solution.java",
    "Algorithms/1001-2000/1687. Delivering Boxes from Storage to Ports",
    "Algorithms/1001-2000/1687. Delivering Boxes from Storage to Ports/1687. Delivering Boxes from Storage to Ports.md",
    "Algorithms/1001-2000/1687. Delivering Boxes from Storage to Ports/Solution.java",
    "Algorithms/1001-2000/1688. Count of Matches in Tournament",
    "Algorithms/1001-2000/1688. Count of Matches in Tournament/1688. Count of Matches in Tournament.md",
    "Algorithms/1001-2000/1688. Count of Matches in Tournament/Solution.java",
    "Algorithms/1001-2000/1689. Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "Algorithms/1001-2000/1689. Partitioning Into Minimum Number Of Deci-Binary Numbers/1689. Partitioning Into Minimum Number Of Deci-Binary Numbers.md",
    "Algorithms/1001-2000/1689. Partitioning Into Minimum Number Of Deci-Binary Numbers/Solution.java",
    "Algorithms/1001-2000/1690. Stone Game VII",
    "Algorithms/1001-2000/1690. Stone Game VII/1690. Stone Game VII.md",
    "Algorithms/1001-2000/1690. Stone Game VII/Solution.java",
    "Algorithms/1001-2000/1691. Maximum Height by Stacking Cuboids",
    "Algorithms/1001-2000/1691. Maximum Height by Stacking Cuboids/1691. Maximum Height by Stacking Cuboids.md",
    "Algorithms/1001-2000/1691. Maximum Height by Stacking Cuboids/Solution.java",
    "Algorithms/1001-2000/1692. Count Ways to Distribute Candies",
    "Algorithms/1001-2000/1692. Count Ways to Distribute Candies/1692. Count Ways to Distribute Candies.md",
    "Algorithms/1001-2000/1692. Count Ways to Distribute Candies/Solution.java",
    "Algorithms/1001-2000/1694. Reformat Phone Number",
    "Algorithms/1001-2000/1694. Reformat Phone Number/1694. Reformat Phone Number.md",
    "Algorithms/1001-2000/1694. Reformat Phone Number/Solution.java",
    "Algorithms/1001-2000/1695. Maximum Erasure Value",
    "Algorithms/1001-2000/1695. Maximum Erasure Value/1695. Maximum Erasure Value.md",
    "Algorithms/1001-2000/1695. Maximum Erasure Value/Solution.java",
    "Algorithms/1001-2000/1696. Jump Game VI",
    "Algorithms/1001-2000/1696. Jump Game VI/1696. Jump Game VI.md",
    "Algorithms/1001-2000/1696. Jump Game VI/Solution.java",
    "Algorithms/1001-2000/1697. Checking Existence of Edge Length Limited Paths",
    "Algorithms/1001-2000/1697. Checking Existence of Edge Length Limited Paths/1697. Checking Existence of Edge Length Limited Paths.md",
    "Algorithms/1001-2000/1697. Checking Existence of Edge Length Limited Paths/Solution.java",
    "Algorithms/1001-2000/1698. Number of Distinct Substrings in a String",
    "Algorithms/1001-2000/1698. Number of Distinct Substrings in a String/1698. Number of Distinct Substrings in a String.md",
    "Algorithms/1001-2000/1698. Number of Distinct Substrings in a String/Solution.java",
    "Algorithms/1001-2000/1700. Number of Students Unable to Eat Lunch",
    "Algorithms/1001-2000/1700. Number of Students Unable to Eat Lunch/1700. Number of Students Unable to Eat Lunch.md",
    "Algorithms/1001-2000/1700. Number of Students Unable to Eat Lunch/Solution.java",
    "Algorithms/1001-2000/1701. Average Waiting Time",
    "Algorithms/1001-2000/1701. Average Waiting Time/1701. Average Waiting Time.md",
    "Algorithms/1001-2000/1701. Average Waiting Time/Solution.java",
    "Algorithms/1001-2000/1702. Maximum Binary String After Change",
    "Algorithms/1001-2000/1702. Maximum Binary String After Change/1702. Maximum Binary String After Change.md",
    "Algorithms/1001-2000/1702. Maximum Binary String After Change/Solution.java",
    "Algorithms/1001-2000/1703. Minimum Adjacent Swaps for K Consecutive Ones",
    "Algorithms/1001-2000/1703. Minimum Adjacent Swaps for K Consecutive Ones/1703. Minimum Adjacent Swaps for K Consecutive Ones.md",
    "Algorithms/1001-2000/1703. Minimum Adjacent Swaps for K Consecutive Ones/Solution.java",
    "Algorithms/1001-2000/1704. Determine if String Halves Are Alike",
    "Algorithms/1001-2000/1704. Determine if String Halves Are Alike/1704. Determine if String Halves Are Alike.md",
    "Algorithms/1001-2000/1704. Determine if String Halves Are Alike/Solution.java",
    "Algorithms/1001-2000/1705. Maximum Number of Eaten Apples",
    "Algorithms/1001-2000/1705. Maximum Number of Eaten Apples/1705. Maximum Number of Eaten Apples.md",
    "Algorithms/1001-2000/1705. Maximum Number of Eaten Apples/Solution.java",
    "Algorithms/1001-2000/1706. Where Will the Ball Fall",
    "Algorithms/1001-2000/1706. Where Will the Ball Fall/1706. Where Will the Ball Fall.md",
    "Algorithms/1001-2000/1706. Where Will the Ball Fall/Solution.java",
    "Algorithms/1001-2000/1707. Maximum XOR With an Element From Array",
    "Algorithms/1001-2000/1707. Maximum XOR With an Element From Array/1707. Maximum XOR With an Element From Array.md",
    "Algorithms/1001-2000/1707. Maximum XOR With an Element From Array/Solution.java",
    "Algorithms/1001-2000/1708. Largest Subarray Length K",
    "Algorithms/1001-2000/1708. Largest Subarray Length K/1708. Largest Subarray Length K.md",
    "Algorithms/1001-2000/1708. Largest Subarray Length K/Solution.java",
    "Algorithms/1001-2000/1710. Maximum Units on a Truck",
    "Algorithms/1001-2000/1710. Maximum Units on a Truck/1710. Maximum Units on a Truck.md",
    "Algorithms/1001-2000/1710. Maximum Units on a Truck/Solution.java",
    "Algorithms/1001-2000/1711. Count Good Meals",
    "Algorithms/1001-2000/1711. Count Good Meals/1711. Count Good Meals.md",
    "Algorithms/1001-2000/1711. Count Good Meals/Solution.java",
    "Algorithms/1001-2000/1712. Ways to Split Array Into Three Subarrays",
    "Algorithms/1001-2000/1712. Ways to Split Array Into Three Subarrays/1712. Ways to Split Array Into Three Subarrays.md",
    "Algorithms/1001-2000/1712. Ways to Split Array Into Three Subarrays/Solution.java",
    "Algorithms/1001-2000/1713. Minimum Operations to Make a Subsequence",
    "Algorithms/1001-2000/1713. Minimum Operations to Make a Subsequence/1713. Minimum Operations to Make a Subsequence.md",
    "Algorithms/1001-2000/1713. Minimum Operations to Make a Subsequence/Solution.java",
    "Algorithms/1001-2000/1714. Sum Of Special Evenly-Spaced Elements In Array",
    "Algorithms/1001-2000/1714. Sum Of Special Evenly-Spaced Elements In Array/1714. Sum Of Special Evenly-Spaced Elements In Array.md",
    "Algorithms/1001-2000/1714. Sum Of Special Evenly-Spaced Elements In Array/Solution.java",
    "Algorithms/1001-2000/1716. Calculate Money in Leetcode Bank",
    "Algorithms/1001-2000/1716. Calculate Money in Leetcode Bank/1716. Calculate Money in Leetcode Bank.md",
    "Algorithms/1001-2000/1716. Calculate Money in Leetcode Bank/Solution.java",
    "Algorithms/1001-2000/1717. Maximum Score From Removing Substrings",
    "Algorithms/1001-2000/1717. Maximum Score From Removing Substrings/1717. Maximum Score From Removing Substrings.md",
    "Algorithms/1001-2000/1717. Maximum Score From Removing Substrings/Solution.java",
    "Algorithms/1001-2000/1718. Construct the Lexicographically Largest Valid Sequence",
    "Algorithms/1001-2000/1718. Construct the Lexicographically Largest Valid Sequence/1718. Construct the Lexicographically Largest Valid Sequence.md",
    "Algorithms/1001-2000/1718. Construct the Lexicographically Largest Valid Sequence/Solution.java",
    "Algorithms/1001-2000/1719. Number Of Ways To Reconstruct A Tree",
    "Algorithms/1001-2000/1719. Number Of Ways To Reconstruct A Tree/1719. Number Of Ways To Reconstruct A Tree.md",
    "Algorithms/1001-2000/1719. Number Of Ways To Reconstruct A Tree/Solution.java",
    "Algorithms/1001-2000/1720. Decode XORed Array",
    "Algorithms/1001-2000/1720. Decode XORed Array/1720. Decode XORed Array.md",
    "Algorithms/1001-2000/1720. Decode XORed Array/Solution.java",
    "Algorithms/1001-2000/1721. Swapping Nodes in a Linked List",
    "Algorithms/1001-2000/1721. Swapping Nodes in a Linked List/1721. Swapping Nodes in a Linked List.md",
    "Algorithms/1001-2000/1721. Swapping Nodes in a Linked List/Solution.java",
    "Algorithms/1001-2000/1722. Minimize Hamming Distance After Swap Operations",
    "Algorithms/1001-2000/1722. Minimize Hamming Distance After Swap Operations/1722. Minimize Hamming Distance After Swap Operations.md",
    "Algorithms/1001-2000/1722. Minimize Hamming Distance After Swap Operations/Solution.java",
    "Algorithms/1001-2000/1723. Find Minimum Time to Finish All Jobs",
    "Algorithms/1001-2000/1723. Find Minimum Time to Finish All Jobs/1723. Find Minimum Time to Finish All Jobs.md",
    "Algorithms/1001-2000/1723. Find Minimum Time to Finish All Jobs/Solution.java",
    "Algorithms/1001-2000/1724. Checking Existence of Edge Length Limited Paths II",
    "Algorithms/1001-2000/1724. Checking Existence of Edge Length Limited Paths II/1724. Checking Existence of Edge Length Limited Paths II.md",
    "Algorithms/1001-2000/1724. Checking Existence of Edge Length Limited Paths II/DistanceLimitedPathsExist.java",
    "Algorithms/1001-2000/1725. Number Of Rectangles That Can Form The Largest Square",
    "Algorithms/1001-2000/1725. Number Of Rectangles That Can Form The Largest Square/1725. Number Of Rectangles That Can Form The Largest Square.md",
    "Algorithms/1001-2000/1725. Number Of Rectangles That Can Form The Largest Square/Solution.java",
    "Algorithms/1001-2000/1726. Tuple with Same Product",
    "Algorithms/1001-2000/1726. Tuple with Same Product/1726. Tuple with Same Product.md",
    "Algorithms/1001-2000/1726. Tuple with Same Product/Solution.java",
    "Algorithms/1001-2000/1727. Largest Submatrix With Rearrangements",
    "Algorithms/1001-2000/1727. Largest Submatrix With Rearrangements/1727. Largest Submatrix With Rearrangements.md",
    "Algorithms/1001-2000/1727. Largest Submatrix With Rearrangements/Solution.java",
    "Algorithms/1001-2000/1728. Cat and Mouse II",
    "Algorithms/1001-2000/1728. Cat and Mouse II/1728. Cat and Mouse II.md",
    "Algorithms/1001-2000/1728. Cat and Mouse II/Solution.java",
    "Algorithms/1001-2000/1730. Shortest Path to Get Food",
    "Algorithms/1001-2000/1730. Shortest Path to Get Food/1730. Shortest Path to Get Food.md",
    "Algorithms/1001-2000/1730. Shortest Path to Get Food/Solution.java",
    "Algorithms/1001-2000/1732. Find the Highest Altitude",
    "Algorithms/1001-2000/1732. Find the Highest Altitude/1732. Find the Highest Altitude.md",
    "Algorithms/1001-2000/1732. Find the Highest Altitude/Solution.java",
    "Algorithms/1001-2000/1733. Minimum Number of People to Teach",
    "Algorithms/1001-2000/1733. Minimum Number of People to Teach/1733. Minimum Number of People to Teach.md",
    "Algorithms/1001-2000/1733. Minimum Number of People to Teach/Solution.java",
    "Algorithms/1001-2000/1734. Decode XORed Permutation",
    "Algorithms/1001-2000/1734. Decode XORed Permutation/1734. Decode XORed Permutation.md",
    "Algorithms/1001-2000/1734. Decode XORed Permutation/Solution.java",
    "Algorithms/1001-2000/1735. Count Ways to Make Array With Product",
    "Algorithms/1001-2000/1735. Count Ways to Make Array With Product/1735. Count Ways to Make Array With Product.md",
    "Algorithms/1001-2000/1735. Count Ways to Make Array With Product/Solution.java",
    "Algorithms/1001-2000/1736. Latest Time by Replacing Hidden Digits",
    "Algorithms/1001-2000/1736. Latest Time by Replacing Hidden Digits/1736. Latest Time by Replacing Hidden Digits.md",
    "Algorithms/1001-2000/1736. Latest Time by Replacing Hidden Digits/Solution.java",
    "Algorithms/1001-2000/1737. Change Minimum Characters to Satisfy One of Three Conditions",
    "Algorithms/1001-2000/1737. Change Minimum Characters to Satisfy One of Three Conditions/1737. Change Minimum Characters to Satisfy One of Three Conditions.md",
    "Algorithms/1001-2000/1737. Change Minimum Characters to Satisfy One of Three Conditions/Solution.java",
    "Algorithms/1001-2000/1738. Find Kth Largest XOR Coordinate Value",
    "Algorithms/1001-2000/1738. Find Kth Largest XOR Coordinate Value/1738. Find Kth Largest XOR Coordinate Value.md",
    "Algorithms/1001-2000/1738. Find Kth Largest XOR Coordinate Value/Solution.java",
    "Algorithms/1001-2000/1739. Building Boxes",
    "Algorithms/1001-2000/1739. Building Boxes/1739. Building Boxes.md",
    "Algorithms/1001-2000/1739. Building Boxes/Solution.java",
    "Algorithms/1001-2000/1740. Find Distance in a Binary Tree",
    "Algorithms/1001-2000/1740. Find Distance in a Binary Tree/1740. Find Distance in a Binary Tree.md",
    "Algorithms/1001-2000/1740. Find Distance in a Binary Tree/Solution.java",
    "Algorithms/1001-2000/1742. Maximum Number of Balls in a Box",
    "Algorithms/1001-2000/1742. Maximum Number of Balls in a Box/1742. Maximum Number of Balls in a Box.md",
    "Algorithms/1001-2000/1742. Maximum Number of Balls in a Box/Solution.java",
    "Algorithms/1001-2000/1743. Restore the Array From Adjacent Pairs",
    "Algorithms/1001-2000/1743. Restore the Array From Adjacent Pairs/1743. Restore the Array From Adjacent Pairs.md",
    "Algorithms/1001-2000/1743. Restore the Array From Adjacent Pairs/Solution.java",
    "Algorithms/1001-2000/1744. Can You Eat Your Favorite Candy on Your Favorite Day",
    "Algorithms/1001-2000/1744. Can You Eat Your Favorite Candy on Your Favorite Day/1744. Can You Eat Your Favorite Candy on Your Favorite Day.md",
    "Algorithms/1001-2000/1744. Can You Eat Your Favorite Candy on Your Favorite Day/Solution.java",
    "Algorithms/1001-2000/1745. Palindrome Partitioning IV",
    "Algorithms/1001-2000/1745. Palindrome Partitioning IV/1745. Palindrome Partitioning IV.md",
    "Algorithms/1001-2000/1745. Palindrome Partitioning IV/Solution.java",
    "Algorithms/1001-2000/1746. Maximum Subarray Sum After One Operation",
    "Algorithms/1001-2000/1746. Maximum Subarray Sum After One Operation/1746. Maximum Subarray Sum After One Operation.md",
    "Algorithms/1001-2000/1746. Maximum Subarray Sum After One Operation/Solution.java",
    "Algorithms/1001-2000/1748. Sum of Unique Elements",
    "Algorithms/1001-2000/1748. Sum of Unique Elements/1748. Sum of Unique Elements.md",
    "Algorithms/1001-2000/1748. Sum of Unique Elements/Solution.java",
    "Algorithms/1001-2000/1749. Maximum Absolute Sum of Any Subarray",
    "Algorithms/1001-2000/1749. Maximum Absolute Sum of Any Subarray/1749. Maximum Absolute Sum of Any Subarray.md",
    "Algorithms/1001-2000/1749. Maximum Absolute Sum of Any Subarray/Solution.java",
    "Algorithms/1001-2000/1750. Minimum Length of String After Deleting Similar Ends",
    "Algorithms/1001-2000/1750. Minimum Length of String After Deleting Similar Ends/1750. Minimum Length of String After Deleting Similar Ends.md",
    "Algorithms/1001-2000/1750. Minimum Length of String After Deleting Similar Ends/Solution.java",
    "Algorithms/1001-2000/1751. Maximum Number of Events That Can Be Attended II",
    "Algorithms/1001-2000/1751. Maximum Number of Events That Can Be Attended II/1751. Maximum Number of Events That Can Be Attended II.md",
    "Algorithms/1001-2000/1751. Maximum Number of Events That Can Be Attended II/Solution.java",
    "Algorithms/1001-2000/1752. Check if Array Is Sorted and Rotated",
    "Algorithms/1001-2000/1752. Check if Array Is Sorted and Rotated/1752. Check if Array Is Sorted and Rotated.md",
    "Algorithms/1001-2000/1752. Check if Array Is Sorted and Rotated/Solution.java",
    "Algorithms/1001-2000/1753. Maximum Score From Removing Stones",
    "Algorithms/1001-2000/1753. Maximum Score From Removing Stones/1753. Maximum Score From Removing Stones.md",
    "Algorithms/1001-2000/1753. Maximum Score From Removing Stones/Solution.java",
    "Algorithms/1001-2000/1754. Largest Merge Of Two Strings",
    "Algorithms/1001-2000/1754. Largest Merge Of Two Strings/1754. Largest Merge Of Two Strings.md",
    "Algorithms/1001-2000/1754. Largest Merge Of Two Strings/Solution.java",
    "Algorithms/1001-2000/1755. Closest Subsequence Sum",
    "Algorithms/1001-2000/1755. Closest Subsequence Sum/1755. Closest Subsequence Sum.md",
    "Algorithms/1001-2000/1755. Closest Subsequence Sum/Solution.java",
    "Algorithms/1001-2000/1756. Design Most Recently Used Queue",
    "Algorithms/1001-2000/1756. Design Most Recently Used Queue/1756. Design Most Recently Used Queue.md",
    "Algorithms/1001-2000/1756. Design Most Recently Used Queue/MRUQueue.java",
    "Algorithms/1001-2000/1758. Minimum Changes To Make Alternating Binary String",
    "Algorithms/1001-2000/1758. Minimum Changes To Make Alternating Binary String/1758. Minimum Changes To Make Alternating Binary String.md",
    "Algorithms/1001-2000/1758. Minimum Changes To Make Alternating Binary String/Solution.java",
    "Algorithms/1001-2000/1759. Count Number of Homogenous Substrings",
    "Algorithms/1001-2000/1759. Count Number of Homogenous Substrings/1759. Count Number of Homogenous Substrings.md",
    "Algorithms/1001-2000/1759. Count Number of Homogenous Substrings/Solution.java",
    "Algorithms/1001-2000/1760. Minimum Limit of Balls in a Bag",
    "Algorithms/1001-2000/1760. Minimum Limit of Balls in a Bag/1760. Minimum Limit of Balls in a Bag.md",
    "Algorithms/1001-2000/1760. Minimum Limit of Balls in a Bag/Solution.java",
    "Algorithms/1001-2000/1761. Minimum Degree of a Connected Trio in a Graph",
    "Algorithms/1001-2000/1761. Minimum Degree of a Connected Trio in a Graph/1761. Minimum Degree of a Connected Trio in a Graph.md",
    "Algorithms/1001-2000/1761. Minimum Degree of a Connected Trio in a Graph/Solution.java",
    "Algorithms/1001-2000/1762. Buildings With an Ocean View",
    "Algorithms/1001-2000/1762. Buildings With an Ocean View/1762. Buildings With an Ocean View.md",
    "Algorithms/1001-2000/1762. Buildings With an Ocean View/Solution.java",
    "Algorithms/1001-2000/1763. Longest Nice Substring",
    "Algorithms/1001-2000/1763. Longest Nice Substring/1763. Longest Nice Substring.md",
    "Algorithms/1001-2000/1763. Longest Nice Substring/Solution.java",
    "Algorithms/1001-2000/1764. Form Array by Concatenating Subarrays of Another Array",
    "Algorithms/1001-2000/1764. Form Array by Concatenating Subarrays of Another Array/1764. Form Array by Concatenating Subarrays of Another Array.md",
    "Algorithms/1001-2000/1764. Form Array by Concatenating Subarrays of Another Array/Solution.java",
    "Algorithms/1001-2000/1765. Map of Highest Peak",
    "Algorithms/1001-2000/1765. Map of Highest Peak/1765. Map of Highest Peak.md",
    "Algorithms/1001-2000/1765. Map of Highest Peak/Solution.java",
    "Algorithms/1001-2000/1766. Tree of Coprimes",
    "Algorithms/1001-2000/1766. Tree of Coprimes/1766. Tree of Coprimes.md",
    "Algorithms/1001-2000/1766. Tree of Coprimes/Solution.java",
    "Algorithms/1001-2000/1768. Merge Strings Alternately",
    "Algorithms/1001-2000/1768. Merge Strings Alternately/1768. Merge Strings Alternately.md",
    "Algorithms/1001-2000/1768. Merge Strings Alternately/Solution.java",
    "Algorithms/1001-2000/1769. Minimum Number of Operations to Move All Balls to Each Box",
    "Algorithms/1001-2000/1769. Minimum Number of Operations to Move All Balls to Each Box/1769. Minimum Number of Operations to Move All Balls to Each Box.md",
    "Algorithms/1001-2000/1769. Minimum Number of Operations to Move All Balls to Each Box/Solution.java",
    "Algorithms/1001-2000/1770. Maximum Score from Performing Multiplication Operations",
    "Algorithms/1001-2000/1770. Maximum Score from Performing Multiplication Operations/1770. Maximum Score from Performing Multiplication Operations.md",
    "Algorithms/1001-2000/1770. Maximum Score from Performing Multiplication Operations/Solution.java",
    "Algorithms/1001-2000/1771. Maximize Palindrome Length From Subsequences",
    "Algorithms/1001-2000/1771. Maximize Palindrome Length From Subsequences/1771. Maximize Palindrome Length From Subsequences.md",
    "Algorithms/1001-2000/1771. Maximize Palindrome Length From Subsequences/Solution.java",
    "Algorithms/1001-2000/1772. Sort Features by Popularity",
    "Algorithms/1001-2000/1772. Sort Features by Popularity/1772. Sort Features by Popularity.md",
    "Algorithms/1001-2000/1772. Sort Features by Popularity/Solution.java",
    "Algorithms/1001-2000/1773. Count Items Matching a Rule",
    "Algorithms/1001-2000/1773. Count Items Matching a Rule/1773. Count Items Matching a Rule.md",
    "Algorithms/1001-2000/1773. Count Items Matching a Rule/Solution.java",
    "Algorithms/1001-2000/1774. Closest Dessert Cost",
    "Algorithms/1001-2000/1774. Closest Dessert Cost/1774. Closest Dessert Cost.md",
    "Algorithms/1001-2000/1774. Closest Dessert Cost/Solution.java",
    "Algorithms/1001-2000/1775. Equal Sum Arrays With Minimum Number of Operations",
    "Algorithms/1001-2000/1775. Equal Sum Arrays With Minimum Number of Operations/1775. Equal Sum Arrays With Minimum Number of Operations.md",
    "Algorithms/1001-2000/1775. Equal Sum Arrays With Minimum Number of Operations/Solution.java",
    "Algorithms/1001-2000/1776. Car Fleet II",
    "Algorithms/1001-2000/1776. Car Fleet II/1776. Car Fleet II.md",
    "Algorithms/1001-2000/1776. Car Fleet II/Solution.java",
    "Algorithms/1001-2000/1778. Shortest Path in a Hidden Grid",
    "Algorithms/1001-2000/1778. Shortest Path in a Hidden Grid/1778. Shortest Path in a Hidden Grid.md",
    "Algorithms/1001-2000/1778. Shortest Path in a Hidden Grid/Solution.java",
    "Algorithms/1001-2000/1779. Find Nearest Point That Has the Same X or Y Coordinate",
    "Algorithms/1001-2000/1779. Find Nearest Point That Has the Same X or Y Coordinate/1779. Find Nearest Point That Has the Same X or Y Coordinate.md",
    "Algorithms/1001-2000/1779. Find Nearest Point That Has the Same X or Y Coordinate/Solution.java",
    "Algorithms/1001-2000/1780. Check if Number is a Sum of Powers of Three",
    "Algorithms/1001-2000/1780. Check if Number is a Sum of Powers of Three/1780. Check if Number is a Sum of Powers of Three.md",
    "Algorithms/1001-2000/1780. Check if Number is a Sum of Powers of Three/Solution.java",
    "Algorithms/1001-2000/1781. Sum of Beauty of All Substrings",
    "Algorithms/1001-2000/1781. Sum of Beauty of All Substrings/1781. Sum of Beauty of All Substrings.md",
    "Algorithms/1001-2000/1781. Sum of Beauty of All Substrings/Solution.java",
    "Algorithms/1001-2000/1782. Count Pairs Of Nodes",
    "Algorithms/1001-2000/1782. Count Pairs Of Nodes/1782. Count Pairs Of Nodes.md",
    "Algorithms/1001-2000/1782. Count Pairs Of Nodes/Solution.java",
    "Algorithms/1001-2000/1784. Check if Binary String Has at Most One Segment of Ones",
    "Algorithms/1001-2000/1784. Check if Binary String Has at Most One Segment of Ones/1784. Check if Binary String Has at Most One Segment of Ones.md",
    "Algorithms/1001-2000/1784. Check if Binary String Has at Most One Segment of Ones/Solution.java",
    "Algorithms/1001-2000/1785. Minimum Elements to Add to Form a Given Sum",
    "Algorithms/1001-2000/1785. Minimum Elements to Add to Form a Given Sum/1785. Minimum Elements to Add to Form a Given Sum.md",
    "Algorithms/1001-2000/1785. Minimum Elements to Add to Form a Given Sum/Solution.java",
    "Algorithms/1001-2000/1786. Number of Restricted Paths From First to Last Node",
    "Algorithms/1001-2000/1786. Number of Restricted Paths From First to Last Node/1786. Number of Restricted Paths From First to Last Node.md",
    "Algorithms/1001-2000/1786. Number of Restricted Paths From First to Last Node/Solution.java",
    "Algorithms/1001-2000/1787. Make the XOR of All Segments Equal to Zero",
    "Algorithms/1001-2000/1787. Make the XOR of All Segments Equal to Zero/1787. Make the XOR of All Segments Equal to Zero.md",
    "Algorithms/1001-2000/1787. Make the XOR of All Segments Equal to Zero/Solution.java",
    "Algorithms/1001-2000/1788. Maximize the Beauty of the Garden",
    "Algorithms/1001-2000/1788. Maximize the Beauty of the Garden/1788. Maximize the Beauty of the Garden.md",
    "Algorithms/1001-2000/1788. Maximize the Beauty of the Garden/Solution.java",
    "Algorithms/1001-2000/1790. Check if One String Swap Can Make Strings Equal",
    "Algorithms/1001-2000/1790. Check if One String Swap Can Make Strings Equal/1790. Check if One String Swap Can Make Strings Equal.md",
    "Algorithms/1001-2000/1790. Check if One String Swap Can Make Strings Equal/Solution.java",
    "Algorithms/1001-2000/1791. Find Center of Star Graph",
    "Algorithms/1001-2000/1791. Find Center of Star Graph/1791. Find Center of Star Graph.md",
    "Algorithms/1001-2000/1791. Find Center of Star Graph/Solution.java",
    "Algorithms/1001-2000/1792. Maximum Average Pass Ratio",
    "Algorithms/1001-2000/1792. Maximum Average Pass Ratio/1792. Maximum Average Pass Ratio.md",
    "Algorithms/1001-2000/1792. Maximum Average Pass Ratio/Solution.java",
    "Algorithms/1001-2000/1793. Maximum Score of a Good Subarray",
    "Algorithms/1001-2000/1793. Maximum Score of a Good Subarray/1793. Maximum Score of a Good Subarray.md",
    "Algorithms/1001-2000/1793. Maximum Score of a Good Subarray/Solution.java",
    "Algorithms/1001-2000/1794. Count Pairs of Equal Substrings With Minimum Difference",
    "Algorithms/1001-2000/1794. Count Pairs of Equal Substrings With Minimum Difference/1794. Count Pairs of Equal Substrings With Minimum Difference.md",
    "Algorithms/1001-2000/1794. Count Pairs of Equal Substrings With Minimum Difference/Solution.java",
    "Algorithms/1001-2000/1796. Second Largest Digit in a String",
    "Algorithms/1001-2000/1796. Second Largest Digit in a String/1796. Second Largest Digit in a String.md",
    "Algorithms/1001-2000/1796. Second Largest Digit in a String/Solution.java",
    "Algorithms/1001-2000/1797. Design Authentication Manager",
    "Algorithms/1001-2000/1797. Design Authentication Manager/1797. Design Authentication Manager.md",
    "Algorithms/1001-2000/1797. Design Authentication Manager/AuthenticationManager.java",
    "Algorithms/1001-2000/1798. Maximum Number of Consecutive Values You Can Make",
    "Algorithms/1001-2000/1798. Maximum Number of Consecutive Values You Can Make/1798. Maximum Number of Consecutive Values You Can Make.md",
    "Algorithms/1001-2000/1798. Maximum Number of Consecutive Values You Can Make/Solution.java",
    "Algorithms/1001-2000/1799. Maximize Score After N Operations",
    "Algorithms/1001-2000/1799. Maximize Score After N Operations/1799. Maximize Score After N Operations.md",
    "Algorithms/1001-2000/1799. Maximize Score After N Operations/Solution.java",
    "Algorithms/1001-2000/1800. Maximum Ascending Subarray Sum",
    "Algorithms/1001-2000/1800. Maximum Ascending Subarray Sum/1800. Maximum Ascending Subarray Sum.md",
    "Algorithms/1001-2000/1800. Maximum Ascending Subarray Sum/Solution.java",
    "Algorithms/1001-2000/1801. Number of Orders in the Backlog",
    "Algorithms/1001-2000/1801. Number of Orders in the Backlog/1801. Number of Orders in the Backlog.md",
    "Algorithms/1001-2000/1801. Number of Orders in the Backlog/Solution.java",
    "Algorithms/1001-2000/1802. Maximum Value at a Given Index in a Bounded Array",
    "Algorithms/1001-2000/1802. Maximum Value at a Given Index in a Bounded Array/1802. Maximum Value at a Given Index in a Bounded Array.md",
    "Algorithms/1001-2000/1802. Maximum Value at a Given Index in a Bounded Array/Solution.java",
    "Algorithms/1001-2000/1803. Count Pairs With XOR in a Range",
    "Algorithms/1001-2000/1803. Count Pairs With XOR in a Range/1803. Count Pairs With XOR in a Range.md",
    "Algorithms/1001-2000/1803. Count Pairs With XOR in a Range/Solution.java",
    "Algorithms/1001-2000/1804. Implement Trie II (Prefix Tree)",
    "Algorithms/1001-2000/1804. Implement Trie II (Prefix Tree)/1804. Implement Trie II (Prefix Tree).md",
    "Algorithms/1001-2000/1804. Implement Trie II (Prefix Tree)/Trie.java",
    "Algorithms/1001-2000/1805. Number of Different Integers in a String",
    "Algorithms/1001-2000/1805. Number of Different Integers in a String/1805. Number of Different Integers in a String.md",
    "Algorithms/1001-2000/1805. Number of Different Integers in a String/Solution.java",
    "Algorithms/1001-2000/1806. Minimum Number of Operations to Reinitialize a Permutation",
    "Algorithms/1001-2000/1806. Minimum Number of Operations to Reinitialize a Permutation/1806. Minimum Number of Operations to Reinitialize a Permutation.md",
    "Algorithms/1001-2000/1806. Minimum Number of Operations to Reinitialize a Permutation/Solution.java",
    "Algorithms/1001-2000/1807. Evaluate the Bracket Pairs of a String",
    "Algorithms/1001-2000/1807. Evaluate the Bracket Pairs of a String/1807. Evaluate the Bracket Pairs of a String.md",
    "Algorithms/1001-2000/1807. Evaluate the Bracket Pairs of a String/Solution.java",
    "Algorithms/1001-2000/1808. Maximize Number of Nice Divisors",
    "Algorithms/1001-2000/1808. Maximize Number of Nice Divisors/1808. Maximize Number of Nice Divisors.md",
    "Algorithms/1001-2000/1808. Maximize Number of Nice Divisors/Solution.java",
    "Algorithms/1001-2000/1810. Minimum Path Cost in a Hidden Grid",
    "Algorithms/1001-2000/1810. Minimum Path Cost in a Hidden Grid/1810. Minimum Path Cost in a Hidden Grid.md",
    "Algorithms/1001-2000/1810. Minimum Path Cost in a Hidden Grid/Solution.java",
    "Algorithms/1001-2000/1812. Determine Color of a Chessboard Square",
    "Algorithms/1001-2000/1812. Determine Color of a Chessboard Square/1812. Determine Color of a Chessboard Square.md",
    "Algorithms/1001-2000/1812. Determine Color of a Chessboard Square/Solution.java",
    "Algorithms/1001-2000/1813. Sentence Similarity III",
    "Algorithms/1001-2000/1813. Sentence Similarity III/1813. Sentence Similarity III.md",
    "Algorithms/1001-2000/1813. Sentence Similarity III/Solution.java",
    "Algorithms/1001-2000/1814. Count Nice Pairs in an Array",
    "Algorithms/1001-2000/1814. Count Nice Pairs in an Array/1814. Count Nice Pairs in an Array.md",
    "Algorithms/1001-2000/1814. Count Nice Pairs in an Array/Solution.java",
    "Algorithms/1001-2000/1815. Maximum Number of Groups Getting Fresh Donuts",
    "Algorithms/1001-2000/1815. Maximum Number of Groups Getting Fresh Donuts/1815. Maximum Number of Groups Getting Fresh Donuts.md",
    "Algorithms/1001-2000/1815. Maximum Number of Groups Getting Fresh Donuts/Solution.java",
    "Algorithms/1001-2000/1816. Truncate Sentence",
    "Algorithms/1001-2000/1816. Truncate Sentence/1816. Truncate Sentence.md",
    "Algorithms/1001-2000/1816. Truncate Sentence/Solution.java",
    "Algorithms/1001-2000/1817. Finding the Users Active Minutes",
    "Algorithms/1001-2000/1817. Finding the Users Active Minutes/1817. Finding the Users Active Minutes.md",
    "Algorithms/1001-2000/1817. Finding the Users Active Minutes/Solution.java",
    "Algorithms/1001-2000/1818. Minimum Absolute Sum Difference",
    "Algorithms/1001-2000/1818. Minimum Absolute Sum Difference/1818. Minimum Absolute Sum Difference.md",
    "Algorithms/1001-2000/1818. Minimum Absolute Sum Difference/Solution.java",
    "Algorithms/1001-2000/1819. Number of Different Subsequences GCDs",
    "Algorithms/1001-2000/1819. Number of Different Subsequences GCDs/1819. Number of Different Subsequences GCDs.md",
    "Algorithms/1001-2000/1819. Number of Different Subsequences GCDs/Solution.java",
    "Algorithms/1001-2000/1820. Maximum Number of Accepted Invitations",
    "Algorithms/1001-2000/1820. Maximum Number of Accepted Invitations/1820. Maximum Number of Accepted Invitations.md",
    "Algorithms/1001-2000/1820. Maximum Number of Accepted Invitations/Solution.java",
    "Algorithms/1001-2000/1822. Sign of the Product of an Array",
    "Algorithms/1001-2000/1822. Sign of the Product of an Array/1822. Sign of the Product of an Array.md",
    "Algorithms/1001-2000/1822. Sign of the Product of an Array/Solution.java",
    "Algorithms/1001-2000/1823. Find the Winner of the Circular Game",
    "Algorithms/1001-2000/1823. Find the Winner of the Circular Game/1823. Find the Winner of the Circular Game.md",
    "Algorithms/1001-2000/1823. Find the Winner of the Circular Game/Solution.java",
    "Algorithms/1001-2000/1824. Minimum Sideway Jumps",
    "Algorithms/1001-2000/1824. Minimum Sideway Jumps/1824. Minimum Sideway Jumps.md",
    "Algorithms/1001-2000/1824. Minimum Sideway Jumps/Solution.java",
    "Algorithms/1001-2000/1825. Finding MK Average",
    "Algorithms/1001-2000/1825. Finding MK Average/1825. Finding MK Average.md",
    "Algorithms/1001-2000/1825. Finding MK Average/MKAverage.java",
    "Algorithms/1001-2000/1826. Faulty Sensor",
    "Algorithms/1001-2000/1826. Faulty Sensor/1826. Faulty Sensor.md",
    "Algorithms/1001-2000/1826. Faulty Sensor/Solution.java",
    "Algorithms/1001-2000/1827. Minimum Operations to Make the Array Increasing",
    "Algorithms/1001-2000/1827. Minimum Operations to Make the Array Increasing/1827. Minimum Operations to Make the Array Increasing.md",
    "Algorithms/1001-2000/1827. Minimum Operations to Make the Array Increasing/Solution.java",
    "Algorithms/1001-2000/1828. Queries on Number of Points Inside a Circle",
    "Algorithms/1001-2000/1828. Queries on Number of Points Inside a Circle/1828. Queries on Number of Points Inside a Circle.md",
    "Algorithms/1001-2000/1828. Queries on Number of Points Inside a Circle/Solution.java",
    "Algorithms/1001-2000/1829. Maximum XOR for Each Query",
    "Algorithms/1001-2000/1829. Maximum XOR for Each Query/1829. Maximum XOR for Each Query.md",
    "Algorithms/1001-2000/1829. Maximum XOR for Each Query/Solution.java",
    "Algorithms/1001-2000/1830. Minimum Number of Operations to Make String Sorted",
    "Algorithms/1001-2000/1830. Minimum Number of Operations to Make String Sorted/1830. Minimum Number of Operations to Make String Sorted.md",
    "Algorithms/1001-2000/1830. Minimum Number of Operations to Make String Sorted/Solution.java",
    "Algorithms/1001-2000/1832. Check if the Sentence Is Pangram",
    "Algorithms/1001-2000/1832. Check if the Sentence Is Pangram/1832. Check if the Sentence Is Pangram.md",
    "Algorithms/1001-2000/1832. Check if the Sentence Is Pangram/Solution.java",
    "Algorithms/1001-2000/1833. Maximum Ice Cream Bars",
    "Algorithms/1001-2000/1833. Maximum Ice Cream Bars/1833. Maximum Ice Cream Bars.md",
    "Algorithms/1001-2000/1833. Maximum Ice Cream Bars/Solution.java",
    "Algorithms/1001-2000/1834. Single-Threaded CPU",
    "Algorithms/1001-2000/1834. Single-Threaded CPU/1834. Single-Threaded CPU.md",
    "Algorithms/1001-2000/1834. Single-Threaded CPU/Solution.java",
    "Algorithms/1001-2000/1835. Find XOR Sum of All Pairs Bitwise AND",
    "Algorithms/1001-2000/1835. Find XOR Sum of All Pairs Bitwise AND/1835. Find XOR Sum of All Pairs Bitwise AND.md",
    "Algorithms/1001-2000/1835. Find XOR Sum of All Pairs Bitwise AND/Solution.java",
    "Algorithms/1001-2000/1836. Remove Duplicates From an Unsorted Linked List",
    "Algorithms/1001-2000/1836. Remove Duplicates From an Unsorted Linked List/1836. Remove Duplicates From an Unsorted Linked List.md",
    "Algorithms/1001-2000/1836. Remove Duplicates From an Unsorted Linked List/Solution.java",
    "Algorithms/1001-2000/1837. Sum of Digits in Base K",
    "Algorithms/1001-2000/1837. Sum of Digits in Base K/1837. Sum of Digits in Base K.md",
    "Algorithms/1001-2000/1837. Sum of Digits in Base K/Solution.java",
    "Algorithms/1001-2000/1838. Frequency of the Most Frequent Element",
    "Algorithms/1001-2000/1838. Frequency of the Most Frequent Element/1838. Frequency of the Most Frequent Element.md",
    "Algorithms/1001-2000/1838. Frequency of the Most Frequent Element/Solution.java",
    "Algorithms/1001-2000/1839. Longest Substring Of All Vowels in Order",
    "Algorithms/1001-2000/1839. Longest Substring Of All Vowels in Order/1839. Longest Substring Of All Vowels in Order.md",
    "Algorithms/1001-2000/1839. Longest Substring Of All Vowels in Order/Solution.java",
    "Algorithms/1001-2000/1840. Maximum Building Height",
    "Algorithms/1001-2000/1840. Maximum Building Height/1840. Maximum Building Height.md",
    "Algorithms/1001-2000/1840. Maximum Building Height/Solution.java",
    "Algorithms/1001-2000/1842. Next Palindrome Using Same Digits",
    "Algorithms/1001-2000/1842. Next Palindrome Using Same Digits/1842. Next Palindrome Using Same Digits.md",
    "Algorithms/1001-2000/1842. Next Palindrome Using Same Digits/Solution.java",
    "Algorithms/1001-2000/1844. Replace All Digits with Characters",
    "Algorithms/1001-2000/1844. Replace All Digits with Characters/1844. Replace All Digits with Characters.md",
    "Algorithms/1001-2000/1844. Replace All Digits with Characters/Solution.java",
    "Algorithms/1001-2000/1845. Seat Reservation Manager",
    "Algorithms/1001-2000/1845. Seat Reservation Manager/1845. Seat Reservation Manager.md",
    "Algorithms/1001-2000/1845. Seat Reservation Manager/SeatManager.java",
    "Algorithms/1001-2000/1846. Maximum Element After Decreasing and Rearranging",
    "Algorithms/1001-2000/1846. Maximum Element After Decreasing and Rearranging/1846. Maximum Element After Decreasing and Rearranging.md",
    "Algorithms/1001-2000/1846. Maximum Element After Decreasing and Rearranging/Solution.java",
    "Algorithms/1001-2000/1847. Closest Room",
    "Algorithms/1001-2000/1847. Closest Room/1847. Closest Room.md",
    "Algorithms/1001-2000/1847. Closest Room/Solution.java",
    "Algorithms/1001-2000/1848. Minimum Distance to the Target Element",
    "Algorithms/1001-2000/1848. Minimum Distance to the Target Element/1848. Minimum Distance to the Target Element.md",
    "Algorithms/1001-2000/1848. Minimum Distance to the Target Element/Solution.java",
    "Algorithms/1001-2000/1849. Splitting a String Into Descending Consecutive Values",
    "Algorithms/1001-2000/1849. Splitting a String Into Descending Consecutive Values/1849. Splitting a String Into Descending Consecutive Values.md",
    "Algorithms/1001-2000/1849. Splitting a String Into Descending Consecutive Values/Solution.java",
    "Algorithms/1001-2000/1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number",
    "Algorithms/1001-2000/1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number/1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number.md",
    "Algorithms/1001-2000/1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number/Solution.java",
    "Algorithms/1001-2000/1851. Minimum Interval to Include Each Query",
    "Algorithms/1001-2000/1851. Minimum Interval to Include Each Query/1851. Minimum Interval to Include Each Query.md",
    "Algorithms/1001-2000/1851. Minimum Interval to Include Each Query/Solution.java",
    "Algorithms/1001-2000/1852. Distinct Numbers in Each Subarray",
    "Algorithms/1001-2000/1852. Distinct Numbers in Each Subarray/1852. Distinct Numbers in Each Subarray.md",
    "Algorithms/1001-2000/1852. Distinct Numbers in Each Subarray/Solution.java",
    "Algorithms/1001-2000/1854. Maximum Population Year",
    "Algorithms/1001-2000/1854. Maximum Population Year/1854. Maximum Population Year.md",
    "Algorithms/1001-2000/1854. Maximum Population Year/Solution.java",
    "Algorithms/1001-2000/1855. Maximum Distance Between a Pair of Values",
    "Algorithms/1001-2000/1855. Maximum Distance Between a Pair of Values/1855. Maximum Distance Between a Pair of Values.md",
    "Algorithms/1001-2000/1855. Maximum Distance Between a Pair of Values/Solution.java",
    "Algorithms/1001-2000/1856. Maximum Subarray Min-Product",
    "Algorithms/1001-2000/1856. Maximum Subarray Min-Product/1856. Maximum Subarray Min-Product.md",
    "Algorithms/1001-2000/1856. Maximum Subarray Min-Product/Solution.java",
    "Algorithms/1001-2000/1857. Largest Color Value in a Directed Graph",
    "Algorithms/1001-2000/1857. Largest Color Value in a Directed Graph/1857. Largest Color Value in a Directed Graph.md",
    "Algorithms/1001-2000/1857. Largest Color Value in a Directed Graph/Solution.java",
    "Algorithms/1001-2000/1858. Longest Word With All Prefixes",
    "Algorithms/1001-2000/1858. Longest Word With All Prefixes/1858. Longest Word With All Prefixes.md",
    "Algorithms/1001-2000/1858. Longest Word With All Prefixes/Solution.java",
    "Algorithms/1001-2000/1859. Sorting the Sentence",
    "Algorithms/1001-2000/1859. Sorting the Sentence/1859. Sorting the Sentence.md",
    "Algorithms/1001-2000/1859. Sorting the Sentence/Solution.java",
    "Algorithms/1001-2000/1860. Incremental Memory Leak",
    "Algorithms/1001-2000/1860. Incremental Memory Leak/1860. Incremental Memory Leak.md",
    "Algorithms/1001-2000/1860. Incremental Memory Leak/Solution.java",
    "Algorithms/1001-2000/1861. Rotating the Box",
    "Algorithms/1001-2000/1861. Rotating the Box/1861. Rotating the Box.md",
    "Algorithms/1001-2000/1861. Rotating the Box/Solution.java",
    "Algorithms/1001-2000/1862. Sum of Floored Pairs",
    "Algorithms/1001-2000/1862. Sum of Floored Pairs/1862. Sum of Floored Pairs.md",
    "Algorithms/1001-2000/1862. Sum of Floored Pairs/Solution.java",
    "Algorithms/1001-2000/1863. Sum of All Subset XOR Totals",
    "Algorithms/1001-2000/1863. Sum of All Subset XOR Totals/1863. Sum of All Subset XOR Totals.md",
    "Algorithms/1001-2000/1863. Sum of All Subset XOR Totals/Solution.java",
    "Algorithms/1001-2000/1864. Minimum Number of Swaps to Make the Binary String Alternating",
    "Algorithms/1001-2000/1864. Minimum Number of Swaps to Make the Binary String Alternating/1864. Minimum Number of Swaps to Make the Binary String Alternating.md",
    "Algorithms/1001-2000/1864. Minimum Number of Swaps to Make the Binary String Alternating/Solution.java",
    "Algorithms/1001-2000/1865. Finding Pairs With a Certain Sum",
    "Algorithms/1001-2000/1865. Finding Pairs With a Certain Sum/1865. Finding Pairs With a Certain Sum.md",
    "Algorithms/1001-2000/1865. Finding Pairs With a Certain Sum/FindSumPairs.java",
    "Algorithms/1001-2000/1866. Number of Ways to Rearrange Sticks With K Sticks Visible",
    "Algorithms/1001-2000/1866. Number of Ways to Rearrange Sticks With K Sticks Visible/1866. Number of Ways to Rearrange Sticks With K Sticks Visible.md",
    "Algorithms/1001-2000/1866. Number of Ways to Rearrange Sticks With K Sticks Visible/Solution.java",
    "Algorithms/1001-2000/1868. Product of Two Run-Length Encoded Arrays",
    "Algorithms/1001-2000/1868. Product of Two Run-Length Encoded Arrays/1868. Product of Two Run-Length Encoded Arrays.md",
    "Algorithms/1001-2000/1868. Product of Two Run-Length Encoded Arrays/Solution.java",
    "Algorithms/1001-2000/1869. Longer Contiguous Segments of Ones than Zeros",
    "Algorithms/1001-2000/1869. Longer Contiguous Segments of Ones than Zeros/1869. Longer Contiguous Segments of Ones than Zeros.md",
    "Algorithms/1001-2000/1869. Longer Contiguous Segments of Ones than Zeros/Solution.java",
    "Algorithms/1001-2000/1870. Minimum Speed to Arrive on Time",
    "Algorithms/1001-2000/1870. Minimum Speed to Arrive on Time/1870. Minimum Speed to Arrive on Time.md",
    "Algorithms/1001-2000/1870. Minimum Speed to Arrive on Time/Solution.java",
    "Algorithms/1001-2000/1871. Jump Game VII",
    "Algorithms/1001-2000/1871. Jump Game VII/1871. Jump Game VII.md",
    "Algorithms/1001-2000/1871. Jump Game VII/Solution.java",
    "Algorithms/1001-2000/1872. Stone Game VIII",
    "Algorithms/1001-2000/1872. Stone Game VIII/1872. Stone Game VIII.md",
    "Algorithms/1001-2000/1872. Stone Game VIII/Solution.java",
    "Algorithms/1001-2000/1874. Minimize Product Sum of Two Arrays",
    "Algorithms/1001-2000/1874. Minimize Product Sum of Two Arrays/1874. Minimize Product Sum of Two Arrays.md",
    "Algorithms/1001-2000/1874. Minimize Product Sum of Two Arrays/Solution.java",
    "Algorithms/1001-2000/1876. Substrings of Size Three with Distinct Characters",
    "Algorithms/1001-2000/1876. Substrings of Size Three with Distinct Characters/1876. Substrings of Size Three with Distinct Characters.md",
    "Algorithms/1001-2000/1876. Substrings of Size Three with Distinct Characters/Solution.java",
    "Algorithms/1001-2000/1877. Minimize Maximum Pair Sum in Array",
    "Algorithms/1001-2000/1877. Minimize Maximum Pair Sum in Array/1877. Minimize Maximum Pair Sum in Array.md",
    "Algorithms/1001-2000/1877. Minimize Maximum Pair Sum in Array/Solution.java",
    "Algorithms/1001-2000/1878. Get Biggest Three Rhombus Sums in a Grid",
    "Algorithms/1001-2000/1878. Get Biggest Three Rhombus Sums in a Grid/1878. Get Biggest Three Rhombus Sums in a Grid.md",
    "Algorithms/1001-2000/1878. Get Biggest Three Rhombus Sums in a Grid/Solution.java",
    "Algorithms/1001-2000/1879. Minimum XOR Sum of Two Arrays",
    "Algorithms/1001-2000/1879. Minimum XOR Sum of Two Arrays/1879. Minimum XOR Sum of Two Arrays.md",
    "Algorithms/1001-2000/1879. Minimum XOR Sum of Two Arrays/Solution.java",
    "Algorithms/1001-2000/1880. Check if Word Equals Summation of Two Words",
    "Algorithms/1001-2000/1880. Check if Word Equals Summation of Two Words/1880. Check if Word Equals Summation of Two Words.md",
    "Algorithms/1001-2000/1880. Check if Word Equals Summation of Two Words/Solution.java",
    "Algorithms/1001-2000/1881. Maximum Value after Insertion",
    "Algorithms/1001-2000/1881. Maximum Value after Insertion/1881. Maximum Value after Insertion.md",
    "Algorithms/1001-2000/1881. Maximum Value after Insertion/Solution.java",
    "Algorithms/1001-2000/1882. Process Tasks Using Servers",
    "Algorithms/1001-2000/1882. Process Tasks Using Servers/1882. Process Tasks Using Servers.md",
    "Algorithms/1001-2000/1882. Process Tasks Using Servers/Solution.java",
    "Algorithms/1001-2000/1883. Minimum Skips to Arrive at Meeting On Time",
    "Algorithms/1001-2000/1883. Minimum Skips to Arrive at Meeting On Time/1883. Minimum Skips to Arrive at Meeting On Time.md",
    "Algorithms/1001-2000/1883. Minimum Skips to Arrive at Meeting On Time/Solution.java",
    "Algorithms/1001-2000/1884. Egg Drop With 2 Eggs and N Floors",
    "Algorithms/1001-2000/1884. Egg Drop With 2 Eggs and N Floors/1884. Egg Drop With 2 Eggs and N Floors.md",
    "Algorithms/1001-2000/1884. Egg Drop With 2 Eggs and N Floors/Solution.java",
    "Algorithms/1001-2000/1885. Count Pairs in Two Arrays",
    "Algorithms/1001-2000/1885. Count Pairs in Two Arrays/1885. Count Pairs in Two Arrays.md",
    "Algorithms/1001-2000/1885. Count Pairs in Two Arrays/Solution.java",
    "Algorithms/1001-2000/1886. Determine Whether Matrix Can Be Obtained By Rotation",
    "Algorithms/1001-2000/1886. Determine Whether Matrix Can Be Obtained By Rotation/1886. Determine Whether Matrix Can Be Obtained By Rotation.md",
    "Algorithms/1001-2000/1886. Determine Whether Matrix Can Be Obtained By Rotation/Solution.java",
    "Algorithms/1001-2000/1887. Reduction Operations to Make the Array Elements Equal",
    "Algorithms/1001-2000/1887. Reduction Operations to Make the Array Elements Equal/1887. Reduction Operations to Make the Array Elements Equal.md",
    "Algorithms/1001-2000/1887. Reduction Operations to Make the Array Elements Equal/Solution.java",
    "Algorithms/1001-2000/1888. Minimum Number of Flips to Make the Binary String Alternating",
    "Algorithms/1001-2000/1888. Minimum Number of Flips to Make the Binary String Alternating/1888. Minimum Number of Flips to Make the Binary String Alternating.md",
    "Algorithms/1001-2000/1888. Minimum Number of Flips to Make the Binary String Alternating/Solution.java",
    "Algorithms/1001-2000/1889. Minimum Space Wasted From Packaging",
    "Algorithms/1001-2000/1889. Minimum Space Wasted From Packaging/1889. Minimum Space Wasted From Packaging.md",
    "Algorithms/1001-2000/1889. Minimum Space Wasted From Packaging/Solution.java",
    "Algorithms/1001-2000/1891. Cutting Ribbons",
    "Algorithms/1001-2000/1891. Cutting Ribbons/1891. Cutting Ribbons.md",
    "Algorithms/1001-2000/1891. Cutting Ribbons/Solution.java",
    "Algorithms/1001-2000/1893. Check if All the Integers in a Range Are Covered",
    "Algorithms/1001-2000/1893. Check if All the Integers in a Range Are Covered/1893. Check if All the Integers in a Range Are Covered.md",
    "Algorithms/1001-2000/1893. Check if All the Integers in a Range Are Covered/Solution.java",
    "Algorithms/1001-2000/1894. Find the Student that Will Replace the Chalk",
    "Algorithms/1001-2000/1894. Find the Student that Will Replace the Chalk/1894. Find the Student that Will Replace the Chalk.md",
    "Algorithms/1001-2000/1894. Find the Student that Will Replace the Chalk/Solution.java",
    "Algorithms/1001-2000/1895. Largest Magic Square",
    "Algorithms/1001-2000/1895. Largest Magic Square/1895. Largest Magic Square.md",
    "Algorithms/1001-2000/1895. Largest Magic Square/Solution.java",
    "Algorithms/1001-2000/1896. Minimum Cost to Change the Final Value of Expression",
    "Algorithms/1001-2000/1896. Minimum Cost to Change the Final Value of Expression/1896. Minimum Cost to Change the Final Value of Expression.md",
    "Algorithms/1001-2000/1896. Minimum Cost to Change the Final Value of Expression/Solution.java",
    "Algorithms/1001-2000/1897. Redistribute Characters to Make All Strings Equal",
    "Algorithms/1001-2000/1897. Redistribute Characters to Make All Strings Equal/1897. Redistribute Characters to Make All Strings Equal.md",
    "Algorithms/1001-2000/1897. Redistribute Characters to Make All Strings Equal/Solution.java",
    "Algorithms/1001-2000/1898. Maximum Number of Removable Characters",
    "Algorithms/1001-2000/1898. Maximum Number of Removable Characters/1898. Maximum Number of Removable Characters.md",
    "Algorithms/1001-2000/1898. Maximum Number of Removable Characters/Solution.java",
    "Algorithms/1001-2000/1899. Merge Triplets to Form Target Triplet",
    "Algorithms/1001-2000/1899. Merge Triplets to Form Target Triplet/1899. Merge Triplets to Form Target Triplet.md",
    "Algorithms/1001-2000/1899. Merge Triplets to Form Target Triplet/Solution.java",
    "Algorithms/1001-2000/1900. The Earliest and Latest Rounds Where Players Compete",
    "Algorithms/1001-2000/1900. The Earliest and Latest Rounds Where Players Compete/1900. The Earliest and Latest Rounds Where Players Compete.md",
    "Algorithms/1001-2000/1900. The Earliest and Latest Rounds Where Players Compete/Solution.java",
    "Algorithms/1001-2000/1901. Find a Peak Element II",
    "Algorithms/1001-2000/1901. Find a Peak Element II/1901. Find a Peak Element II.md",
    "Algorithms/1001-2000/1901. Find a Peak Element II/Solution.java",
    "Algorithms/1001-2000/1902. Depth of BST Given Insertion Order",
    "Algorithms/1001-2000/1902. Depth of BST Given Insertion Order/1902. Depth of BST Given Insertion Order.md",
    "Algorithms/1001-2000/1902. Depth of BST Given Insertion Order/Solution.java",
    "Algorithms/1001-2000/1903. Largest Odd Number in String",
    "Algorithms/1001-2000/1903. Largest Odd Number in String/1903. Largest Odd Number in String.md",
    "Algorithms/1001-2000/1903. Largest Odd Number in String/Solution.java",
    "Algorithms/1001-2000/1904. The Number of Full Rounds You Have Played",
    "Algorithms/1001-2000/1904. The Number of Full Rounds You Have Played/1904. The Number of Full Rounds You Have Played.md",
    "Algorithms/1001-2000/1904. The Number of Full Rounds You Have Played/Solution.java",
    "Algorithms/1001-2000/1905. Count Sub Islands",
    "Algorithms/1001-2000/1905. Count Sub Islands/1905. Count Sub Islands.md",
    "Algorithms/1001-2000/1905. Count Sub Islands/Solution.java",
    "Algorithms/1001-2000/1906. Minimum Absolute Difference Queries",
    "Algorithms/1001-2000/1906. Minimum Absolute Difference Queries/1906. Minimum Absolute Difference Queries.md",
    "Algorithms/1001-2000/1906. Minimum Absolute Difference Queries/Solution.java",
    "Concurrency",
    "Concurrency/1114. Print in Order",
    "Concurrency/1114. Print in Order/1114. Print in Order.md",
    "Concurrency/1114. Print in Order/Foo.java",
    "Concurrency/1115. Print FooBar Alternately",
    "Concurrency/1115. Print FooBar Alternately/1115. Print FooBar Alternately.md",
    "Concurrency/1115. Print FooBar Alternately/FooBar.java",
    "Concurrency/1116. Print Zero Even Odd",
    "Concurrency/1116. Print Zero Even Odd/1116. Print Zero Even Odd.md",
    "Concurrency/1116. Print Zero Even Odd/ZeroEvenOdd.java",
    "Concurrency/1117. Building H2O",
    "Concurrency/1117. Building H2O/1117. Building H2O.md",
    "Concurrency/1117. Building H2O/H2O.java",
    "Concurrency/1188. Design Bounded Blocking Queue",
    "Concurrency/1188. Design Bounded Blocking Queue/1188. Design Bounded Blocking Queue.md",
    "Concurrency/1188. Design Bounded Blocking Queue/BoundedBlockingQueue.java",
    "Concurrency/1195. Fizz Buzz Multithreaded",
    "Concurrency/1195. Fizz Buzz Multithreaded/1195. Fizz Buzz Multithreaded.md",
    "Concurrency/1195. Fizz Buzz Multithreaded/FizzBuzz.java",
    "Concurrency/1226. The Dining Philosophers",
    "Concurrency/1226. The Dining Philosophers/1226. The Dining Philosophers.md",
    "Concurrency/1226. The Dining Philosophers/DiningPhilosophers.java",
    "Concurrency/1242. Web Crawler Multithreaded",
    "Concurrency/1242. Web Crawler Multithreaded/1242. Web Crawler Multithreaded.md",
    "Concurrency/1242. Web Crawler Multithreaded/Solution.java",
    "Concurrency/1279. Traffic Light Controlled Intersection",
    "Concurrency/1279. Traffic Light Controlled Intersection/1279. Traffic Light Controlled Intersection.md",
    "Concurrency/1279. Traffic Light Controlled Intersection/TrafficLight.java",
    "Database",
    "Database/0175. Combine Two Tables",
    "Database/0175. Combine Two Tables/0175. Combine Two Tables.md",
    "Database/0176. Second Highest Salary",
    "Database/0176. Second Highest Salary/0176. Second Highest Salary.md",
    "Database/0177. Nth Highest Salary",
    "Database/0177. Nth Highest Salary/0177. Nth Highest Salary.md",
    "Database/0178. Rank Scores",
    "Database/0178. Rank Scores/0178. Rank Scores.md",
    "Database/0180. Consecutive Numbers",
    "Database/0180. Consecutive Numbers/0180. Consecutive Numbers.md",
    "Database/0181. Employees Earning More Than Their Managers",
    "Database/0181. Employees Earning More Than Their Managers/0181. Employees Earning More Than Their Managers.md",
    "Database/0182. Duplicate Emails",
    "Database/0182. Duplicate Emails/0182. Duplicate Emails.md",
    "Database/0183. Customers Who Never Order",
    "Database/0183. Customers Who Never Order/0183. Customers Who Never Order.md",
    "Database/0184. Department Highest Salary",
    "Database/0184. Department Highest Salary/0184. Department Highest Salary.md",
    "Database/0185. Department Top Three Salaries",
    "Database/0185. Department Top Three Salaries/0185. Department Top Three Salaries.md",
    "Database/0196. Delete Duplicate Emails",
    "Database/0196. Delete Duplicate Emails/0196. Delete Duplicate Emails.md",
    "Database/0197. Rising Temperature",
    "Database/0197. Rising Temperature/0197. Rising Temperature.md",
    "Database/0262. Trips and Users",
    "Database/0262. Trips and Users/0262. Trips and Users.md",
    "Database/0511. Game Play Analysis I",
    "Database/0511. Game Play Analysis I/0511. Game Play Analysis I.md",
    "Database/0512. Game Play Analysis II",
    "Database/0512. Game Play Analysis II/0512. Game Play Analysis II.md",
    "Database/0534. Game Play Analysis III",
    "Database/0534. Game Play Analysis III/0534. Game Play Analysis III.md",
    "Database/0550. Game Play Analysis IV",
    "Database/0550. Game Play Analysis IV/0550. Game Play Analysis IV.md",
    "Database/0569. Median Employee Salary",
    "Database/0569. Median Employee Salary/0569. Median Employee Salary.md",
    "Database/0570. Managers with at Least 5 Direct Reports",
    "Database/0570. Managers with at Least 5 Direct Reports/0570. Managers with at Least 5 Direct Reports.md",
    "Database/0571. Find Median Given Frequency of Numbers",
    "Database/0571. Find Median Given Frequency of Numbers/0571. Find Median Given Frequency of Numbers.md",
    "Database/0574. Winning Candidate",
    "Database/0574. Winning Candidate/0574. Winning Candidate.md",
    "Database/0577. Employee Bonus",
    "Database/0577. Employee Bonus/0577. Employee Bonus.md",
    "Database/0578. Get Highest Answer Rate Question",
    "Database/0578. Get Highest Answer Rate Question/0578. Get Highest Answer Rate Question.md",
    "Database/0579. Find Cumulative Salary of an Employee",
    "Database/0579. Find Cumulative Salary of an Employee/0579. Find Cumulative Salary of an Employee.md",
    "Database/0580. Count Student Number in Departments",
    "Database/0580. Count Student Number in Departments/0580. Count Student Number in Departments.md",
    "Database/0584. Find Customer Referee",
    "Database/0584. Find Customer Referee/0584. Find Customer Referee.md",
    "Database/0585. Investments in 2016",
    "Database/0585. Investments in 2016/0585. Investments in 2016.md",
    "Database/0586. Customer Placing the Largest Number of Orders",
    "Database/0586. Customer Placing the Largest Number of Orders/0586. Customer Placing the Largest Number of Orders.md",
    "Database/0595. Big Countries",
    "Database/0595. Big Countries/0595. Big Countries.md",
    "Database/0596. Classes More Than 5 Students",
    "Database/0596. Classes More Than 5 Students/0596. Classes More Than 5 Students.md",
    "Database/0597. Friend Requests I Overall Acceptance Rate",
    "Database/0597. Friend Requests I Overall Acceptance Rate/0597. Friend Requests I Overall Acceptance Rate.md",
    "Database/0601. Human Traffic of Stadium",
    "Database/0601. Human Traffic of Stadium/0601. Human Traffic of Stadium.md",
    "Database/0602. Friend Requests II Who Has the Most Friends",
    "Database/0602. Friend Requests II Who Has the Most Friends/0602. Friend Requests II Who Has the Most Friends.md",
    "Database/0603. Consecutive Available Seats",
    "Database/0603. Consecutive Available Seats/0603. Consecutive Available Seats.md",
    "Database/0607. Sales Person",
    "Database/0607. Sales Person/0607. Sales Person.md",
    "Database/0608. Tree Node",
    "Database/0608. Tree Node/0608. Tree Node.md",
    "Database/0610. Triangle Judgement",
    "Database/0610. Triangle Judgement/0610. Triangle Judgement.md",
    "Database/0612. Shortest Distance in a Plane",
    "Database/0612. Shortest Distance in a Plane/0612. Shortest Distance in a Plane.md",
    "Database/0613. Shortest Distance in a Line",
    "Database/0613. Shortest Distance in a Line/0613. Shortest Distance in a Line.md",
    "Database/0614. Second Degree Follower",
    "Database/0614. Second Degree Follower/0614. Second Degree Follower.md",
    "Database/0615. Average Salary Departments VS Company",
    "Database/0615. Average Salary Departments VS Company/0615. Average Salary Departments VS Company.md",
    "Database/0618. Students Report By Geography",
    "Database/0618. Students Report By Geography/0618. Students Report By Geography.md",
    "Database/0619. Biggest Single Number",
    "Database/0619. Biggest Single Number/0619. Biggest Single Number.md",
    "Database/0620. Not Boring Movies",
    "Database/0620. Not Boring Movies/0620. Not Boring Movies.md",
    "Database/0626. Exchange Seats",
    "Database/0626. Exchange Seats/0626. Exchange Seats.md",
    "Database/0627. Swap Salary",
    "Database/0627. Swap Salary/0627. Swap Salary.md",
    "Database/1045. Customers Who Bought All Products",
    "Database/1045. Customers Who Bought All Products/1045. Customers Who Bought All Products.md",
    "Database/1050. Actors and Directors Who Cooperated At Least Three Times",
    "Database/1050. Actors and Directors Who Cooperated At Least Three Times/1050. Actors and Directors Who Cooperated At Least Three Times.md",
    "Database/1068. Product Sales Analysis I",
    "Database/1068. Product Sales Analysis I/1068. Product Sales Analysis I.md",
    "Database/1069. Product Sales Analysis II",
    "Database/1069. Product Sales Analysis II/1069. Product Sales Analysis II.md",
    "Database/1070. Product Sales Analysis III",
    "Database/1070. Product Sales Analysis III/1070. Product Sales Analysis III.md",
    "Database/1075. Project Employees I",
    "Database/1075. Project Employees I/1075. Project Employees I.md",
    "Database/1076. Project Employees II",
    "Database/1076. Project Employees II/1076. Project Employees II.md",
    "Database/1077. Project Employees III",
    "Database/1077. Project Employees III/1077. Project Employees III.md",
    "Database/1082. Sales Analysis I",
    "Database/1082. Sales Analysis I/1082. Sales Analysis I.md",
    "Database/1083. Sales Analysis II",
    "Database/1083. Sales Analysis II/1083. Sales Analysis II.md",
    "Database/1084. Sales Analysis III",
    "Database/1084. Sales Analysis III/1084. Sales Analysis III.md",
    "Database/1097. Game Play Analysis V",
    "Database/1097. Game Play Analysis V/1097. Game Play Analysis V.md",
    "Database/1098. Unpopular Books",
    "Database/1098. Unpopular Books/1098. Unpopular Books.md",
    "Database/1107. New Users Daily Count",
    "Database/1107. New Users Daily Count/1107. New Users Daily Count.md",
    "Database/1112. Highest Grade For Each Student",
    "Database/1112. Highest Grade For Each Student/1112. Highest Grade For Each Student.md",
    "Database/1113. Reported Posts",
    "Database/1113. Reported Posts/1113. Reported Posts.md",
    "Database/1126. Active Businesses",
    "Database/1126. Active Businesses/1126. Active Businesses.md",
    "Database/1127. User Purchase Platform",
    "Database/1127. User Purchase Platform/1127. User Purchase Platform.md",
    "Database/1132. Reported Posts II",
    "Database/1132. Reported Posts II/1132. Reported Posts II.md",
    "Database/1141. User Activity for the Past 30 Days I",
    "Database/1141. User Activity for the Past 30 Days I/1141. User Activity for the Past 30 Days I.md",
    "Database/1142. User Activity for the Past 30 Days II",
    "Database/1142. User Activity for the Past 30 Days II/1142. User Activity for the Past 30 Days II.md",
    "Database/1148. Article Views I",
    "Database/1148. Article Views I/1148. Article Views I.md",
    "Database/1149. Article Views II",
    "Database/1149. Article Views II/1149. Article Views II.md",
    "Database/1158. Market Analysis I",
    "Database/1158. Market Analysis I/1158. Market Analysis I.md",
    "Database/1159. Market Analysis II",
    "Database/1159. Market Analysis II/1159. Market Analysis II.md",
    "Database/1164. Product Price at a Given Date",
    "Database/1164. Product Price at a Given Date/1164. Product Price at a Given Date.md",
    "Database/1173. Immediate Food Delivery I",
    "Database/1173. Immediate Food Delivery I/1173. Immediate Food Delivery I.md",
    "Database/1174. Immediate Food Delivery II",
    "Database/1174. Immediate Food Delivery II/1174. Immediate Food Delivery II.md",
    "Database/1179. Reformat Department Table",
    "Database/1179. Reformat Department Table/1179. Reformat Department Table.md",
    "Database/1193. Monthly Transactions I",
    "Database/1193. Monthly Transactions I/1193. Monthly Transactions I.md",
    "Database/1194. Tournament Winners",
    "Database/1194. Tournament Winners/1194. Tournament Winners.md",
    "Database/1204. Last Person to Fit in the Elevator",
    "Database/1204. Last Person to Fit in the Elevator/1204. Last Person to Fit in the Elevator.md",
    "Database/1205. Monthly Transactions II",
    "Database/1205. Monthly Transactions II/1205. Monthly Transactions II.md",
    "Database/1211. Queries Quality and Percentage",
    "Database/1211. Queries Quality and Percentage/1211. Queries Quality and Percentage.md",
    "Database/1212. Team Scores in Football Tournament",
    "Database/1212. Team Scores in Football Tournament/1212. Team Scores in Football Tournament.md",
    "Database/1225. Report Contiguous Dates",
    "Database/1225. Report Contiguous Dates/1225. Report Contiguous Dates.md",
    "Database/1241. Number of Comments per Post",
    "Database/1241. Number of Comments per Post/1241. Number of Comments per Post.md",
    "Database/1251. Average Selling Price",
    "Database/1251. Average Selling Price/1251. Average Selling Price.md",
    "Database/1264. Page Recommendations",
    "Database/1264. Page Recommendations/1264. Page Recommendations.md",
    "Database/1270. All People Report to the Given Manager",
    "Database/1270. All People Report to the Given Manager/1270. All People Report to the Given Manager.md",
    "Database/1280. Students and Examinations",
    "Database/1280. Students and Examinations/1280. Students and Examinations.md",
    "Database/1285. Find the Start and End Number of Continuous Ranges",
    "Database/1285. Find the Start and End Number of Continuous Ranges/1285. Find the Start and End Number of Continuous Ranges.md",
    "Database/1294. Weather Type in Each Country",
    "Database/1294. Weather Type in Each Country/1294. Weather Type in Each Country.md",
    "Database/1303. Find the Team Size",
    "Database/1303. Find the Team Size/1303. Find the Team Size.md",
    "Database/1308. Running Total for Different Genders",
    "Database/1308. Running Total for Different Genders/1308. Running Total for Different Genders.md",
    "Database/1321. Restaurant Growth",
    "Database/1321. Restaurant Growth/1321. Restaurant Growth.md",
    "Database/1322. Ads Performance",
    "Database/1322. Ads Performance/1322. Ads Performance.md",
    "Database/1327. List the Products Ordered in a Period",
    "Database/1327. List the Products Ordered in a Period/1327. List the Products Ordered in a Period.md",
    "Database/1336. Number of Transactions per Visit",
    "Database/1336. Number of Transactions per Visit/1336. Number of Transactions per Visit.md",
    "Database/1341. Movie Rating",
    "Database/1341. Movie Rating/1341. Movie Rating.md",
    "Database/1350. Students With Invalid Departments",
    "Database/1350. Students With Invalid Departments/1350. Students With Invalid Departments.md",
    "Database/1355. Activity Participants",
    "Database/1355. Activity Participants/1355. Activity Participants.md",
    "Database/1364. Number of Trusted Contacts of a Customer",
    "Database/1364. Number of Trusted Contacts of a Customer/1364. Number of Trusted Contacts of a Customer.md",
    "Database/1369. Get the Second Most Recent Activity",
    "Database/1369. Get the Second Most Recent Activity/1369. Get the Second Most Recent Activity.md",
    "Database/1378. Replace Employee ID With The Unique Identifier",
    "Database/1378. Replace Employee ID With The Unique Identifier/1378. Replace Employee ID With The Unique Identifier.md",
    "Database/1384. Total Sales Amount by Year",
    "Database/1384. Total Sales Amount by Year/1384. Total Sales Amount by Year.md",
    "Database/1393. Capital Gain Loss",
    "Database/1393. Capital Gain Loss/1393. Capital Gain Loss.md",
    "Database/1398. Customers Who Bought Products A and B but Not C",
    "Database/1398. Customers Who Bought Products A and B but Not C/1398. Customers Who Bought Products A and B but Not C.md",
    "Database/1407. Top Travellers",
    "Database/1407. Top Travellers/1407. Top Travellers.md",
    "Database/1412. Find the Quiet Students in All Exams",
    "Database/1412. Find the Quiet Students in All Exams/1412. Find the Quiet Students in All Exams.md",
    "Database/1421. NPV Queries",
    "Database/1421. NPV Queries/1421. NPV Queries.md",
    "Database/1435. Create a Session Bar Chart",
    "Database/1435. Create a Session Bar Chart/1435. Create a Session Bar Chart.md",
    "Database/1440. Evaluate Boolean Expression",
    "Database/1440. Evaluate Boolean Expression/1440. Evaluate Boolean Expression.md",
    "Database/1445. Apples & Oranges",
    "Database/1445. Apples & Oranges/1445. Apples & Oranges.md",
    "Database/1454. Active Users",
    "Database/1454. Active Users/1454. Active Users.md",
    "Database/1459. Rectangles Area",
    "Database/1459. Rectangles Area/1459. Rectangles Area.md",
    "Database/1468. Calculate Salaries",
    "Database/1468. Calculate Salaries/1468. Calculate Salaries.md",
    "Database/1479. Sales by Day of the Week",
    "Database/1479. Sales by Day of the Week/1479. Sales by Day of the Week.md",
    "Database/1485. Group Sold Products By The Date",
    "Database/1485. Group Sold Products By The Date/1485. Group Sold Products By The Date.md",
    "Database/1495. Friendly Movies Streamed Last Month",
    "Database/1495. Friendly Movies Streamed Last Month/1495. Friendly Movies Streamed Last Month.md",
    "Database/1501. Countries You Can Safely Invest In",
    "Database/1501. Countries You Can Safely Invest In/1501. Countries You Can Safely Invest In.md",
    "Database/1511. Customer Order Frequency",
    "Database/1511. Customer Order Frequency/1511. Customer Order Frequency.md",
    "Database/1517. Find Users With Valid E-Mails",
    "Database/1517. Find Users With Valid E-Mails/1517. Find Users With Valid E-Mails.md",
    "Database/1527. Patients With a Condition",
    "Database/1527. Patients With a Condition/1527. Patients With a Condition.md",
    "Database/1532. The Most Recent Three Orders",
    "Database/1532. The Most Recent Three Orders/1532. The Most Recent Three Orders.md",
    "Database/1543. Fix Product Name Format",
    "Database/1543. Fix Product Name Format/1543. Fix Product Name Format.md",
    "Database/1549. The Most Recent Orders for Each Product",
    "Database/1549. The Most Recent Orders for Each Product/1549. The Most Recent Orders for Each Product.md",
    "Database/1555. Bank Account Summary",
    "Database/1555. Bank Account Summary/1555. Bank Account Summary.md",
    "Database/1565. Unique Orders and Customers Per Month",
    "Database/1565. Unique Orders and Customers Per Month/1565. Unique Orders and Customers Per Month.md",
    "Database/1571. Warehouse Manager",
    "Database/1571. Warehouse Manager/1571. Warehouse Manager.md",
    "Database/1581. Customer Who Visited but Did Not Make Any Transactions",
    "Database/1581. Customer Who Visited but Did Not Make Any Transactions/1581. Customer Who Visited but Did Not Make Any Transactions.md",
    "Database/1587. Bank Account Summary II",
    "Database/1587. Bank Account Summary II/1587. Bank Account Summary II.md",
    "Database/1596. The Most Frequently Ordered Products for Each Customer",
    "Database/1596. The Most Frequently Ordered Products for Each Customer/1596. The Most Frequently Ordered Products for Each Customer.md",
    "Database/1607. Sellers With No Sales",
    "Database/1607. Sellers With No Sales/1607. Sellers With No Sales.md",
    "Database/1613. Find the Missing IDs",
    "Database/1613. Find the Missing IDs/1613. Find the Missing IDs.md",
    "Database/1623. All Valid Triplets That Can Represent a Country",
    "Database/1623. All Valid Triplets That Can Represent a Country/1623. All Valid Triplets That Can Represent a Country.md",
    "Database/1633. Percentage of Users Attended a Contest",
    "Database/1633. Percentage of Users Attended a Contest/1633. Percentage of Users Attended a Contest.md",
    "Database/1635. Hopper Company Queries I",
    "Database/1635. Hopper Company Queries I/1635. Hopper Company Queries I.md",
    "Database/1645. Hopper Company Queries II",
    "Database/1645. Hopper Company Queries II/1645. Hopper Company Queries II.md",
    "Database/1651. Hopper Company Queries III",
    "Database/1651. Hopper Company Queries III/1651. Hopper Company Queries III.md",
    "Database/1661. Average Time of Process per Machine",
    "Database/1661. Average Time of Process per Machine/1661. Average Time of Process per Machine.md",
    "Database/1667. Fix Names in a Table",
    "Database/1667. Fix Names in a Table/1667. Fix Names in a Table.md",
    "Database/1677. Product's Worth Over Invoices",
    "Database/1677. Product's Worth Over Invoices/1677. Product's Worth Over Invoices.md",
    "Database/1683. Invalid Tweets",
    "Database/1683. Invalid Tweets/1683. Invalid Tweets.md",
    "Database/1693. Daily Leads and Partners",
    "Database/1693. Daily Leads and Partners/1693. Daily Leads and Partners.md",
    "Database/1699. Number of Calls Between Two Persons",
    "Database/1699. Number of Calls Between Two Persons/1699. Number of Calls Between Two Persons.md",
    "Database/1709. Biggest Window Between Visits",
    "Database/1709. Biggest Window Between Visits/1709. Biggest Window Between Visits.md",
    "Database/1715. Count Apples and Oranges",
    "Database/1715. Count Apples and Oranges/1715. Count Apples and Oranges.md",
    "Database/1729. Find Followers Count",
    "Database/1729. Find Followers Count/1729. Find Followers Count.md",
    "Database/1731. The Number of Employees Which Report to Each Employee",
    "Database/1731. The Number of Employees Which Report to Each Employee/1731. The Number of Employees Which Report to Each Employee.md",
    "Database/1741. Find Total Time Spent by Each Employee",
    "Database/1741. Find Total Time Spent by Each Employee/1741. Find Total Time Spent by Each Employee.md",
    "Database/1747. Leetflex Banned Accounts",
    "Database/1747. Leetflex Banned Accounts/1747. Leetflex Banned Accounts.md",
    "Database/1757. Recyclable and Low Fat Products",
    "Database/1757. Recyclable and Low Fat Products/1757. Recyclable and Low Fat Products.md",
    "Database/1767. Find the Subtasks That Did Not Execute",
    "Database/1767. Find the Subtasks That Did Not Execute/1767. Find the Subtasks That Did Not Execute.md",
    "Database/1777. Product's Price for Each Store",
    "Database/1777. Product's Price for Each Store/1777. Product's Price for Each Store.md",
    "Database/1783. Grand Slam Titles",
    "Database/1783. Grand Slam Titles/1783. Grand Slam Titles.md",
    "Database/1789. Primary Department for Each Employee",
    "Database/1789. Primary Department for Each Employee/1789. Primary Department for Each Employee.md",
    "Database/1795. Rearrange Products Table",
    "Database/1795. Rearrange Products Table/1795. Rearrange Products Table.md",
    "Database/1809. Ad-Free Sessions",
    "Database/1809. Ad-Free Sessions/1809. Ad-Free Sessions.md",
    "Database/1811. Find Interview Candidates",
    "Database/1811. Find Interview Candidates/1811. Find Interview Candidates.md",
    "Database/1821. Find Customers With Positive Revenue this Year",
    "Database/1821. Find Customers With Positive Revenue this Year/1821. Find Customers With Positive Revenue this Year.md",
    "Database/1831. Maximum Transaction Each Day",
    "Database/1831. Maximum Transaction Each Day/1831. Maximum Transaction Each Day.md",
    "Database/1841. League Statistics",
    "Database/1841. League Statistics/1841. League Statistics.md",
    "Database/1843. Suspicious Bank Accounts",
    "Database/1843. Suspicious Bank Accounts/1843. Suspicious Bank Accounts.md",
    "Database/1853. Convert Date Format",
    "Database/1853. Convert Date Format/1853. Convert Date Format.md",
    "Database/1867. Orders With Maximum Quantity Above Average",
    "Database/1867. Orders With Maximum Quantity Above Average/1867. Orders With Maximum Quantity Above Average.md",
    "Database/1873. Calculate Special Bonus",
    "Database/1873. Calculate Special Bonus/1873. Calculate Special Bonus.md",
    "Database/1875. Group Employees of the Same Salary",
    "Database/1875. Group Employees of the Same Salary/1875. Group Employees of the Same Salary.md",
    "Database/1890. The Latest Login in 2020",
    "Database/1890. The Latest Login in 2020/1890. The Latest Login in 2020.md",
    "Database/1892. Page Recommendations II",
    "Database/1892. Page Recommendations II/1892. Page Recommendations II.md",
    "README.md",
    "Shell",
    "Shell/0192. Word Frequency",
    "Shell/0192. Word Frequency/0192. Word Frequency.md",
    "Shell/0193. Valid Phone Numbers",
    "Shell/0193. Valid Phone Numbers/0193. Valid Phone Numbers.md",
    "Shell/0194. Transpose File",
    "Shell/0194. Transpose File/0194. Transpose File.md",
    "Shell/0195. Tenth Line",
    "Shell/0195. Tenth Line/0195. Tenth Line.md"
]
[
    ".idea",
    ".idea/.name",
    ".idea/compiler.xml",
    ".idea/copyright",
    ".idea/copyright/profiles_settings.xml",
    ".idea/encodings.xml",
    ".idea/gradle.xml",
    ".idea/libraries",
    ".idea/libraries/Gradle__antlr_antlr_2_7_7.xml",
    ".idea/libraries/Gradle__ch_qos_logback_logback_classic_1_1_2.xml",
    ".idea/libraries/Gradle__ch_qos_logback_logback_core_1_1_2.xml",
    ".idea/libraries/Gradle__com_101tec_zkclient_0_3.xml",
    ".idea/libraries/Gradle__com_addthis_metrics_reporter_config_2_1_0.xml",
    ".idea/libraries/Gradle__com_boundary_high_scale_lib_1_0_6.xml",
    ".idea/libraries/Gradle__com_clearspring_analytics_stream_2_5_2.xml",
    ".idea/libraries/Gradle__com_codahale_metrics_metrics_core_3_0_2.xml",
    ".idea/libraries/Gradle__com_datastax_cassandra_cassandra_driver_core_2_0_3.xml",
    ".idea/libraries/Gradle__com_ecyrd_speed4j_speed4j_0_9.xml",
    ".idea/libraries/Gradle__com_github_jbellis_jamm_0_3_0.xml",
    ".idea/libraries/Gradle__com_github_stephenc_eaio_uuid_uuid_3_2_0.xml",
    ".idea/libraries/Gradle__com_github_stephenc_high_scale_lib_high_scale_lib_1_1_2.xml",
    ".idea/libraries/Gradle__com_github_stephenc_jamm_0_2_5.xml",
    ".idea/libraries/Gradle__com_google_guava_guava_15_0.xml",
    ".idea/libraries/Gradle__com_googlecode_concurrentlinkedhashmap_concurrentlinkedhashmap_lru_1_3.xml",
    ".idea/libraries/Gradle__com_googlecode_json_simple_json_simple_1_1.xml",
    ".idea/libraries/Gradle__com_lmax_disruptor_3_0_1.xml",
    ".idea/libraries/Gradle__com_ning_compress_lzf_0_8_4.xml",
    ".idea/libraries/Gradle__com_sun_xml_bind_jaxb_impl_2_2_4_1.xml",
    ".idea/libraries/Gradle__com_thinkaurelius_thrift_thrift_server_0_3_7.xml",
    ".idea/libraries/Gradle__com_yammer_metrics_metrics_core_2_2_0.xml",
    ".idea/libraries/Gradle__commons_cli_commons_cli_1_1.xml",
    ".idea/libraries/Gradle__commons_cli_commons_cli_1_2.xml",
    ".idea/libraries/Gradle__commons_codec_commons_codec_1_6.xml",
    ".idea/libraries/Gradle__commons_lang_commons_lang_2_6.xml",
    ".idea/libraries/Gradle__commons_logging_commons_logging_1_1_1.xml",
    ".idea/libraries/Gradle__commons_pool_commons_pool_1_5_3.xml",
    ".idea/libraries/Gradle__edu_stanford_ppl_snaptree_0_1.xml",
    ".idea/libraries/Gradle__io_netty_netty_3_7_0_Final.xml",
    ".idea/libraries/Gradle__io_netty_netty_3_9_0_Final.xml",
    ".idea/libraries/Gradle__io_netty_netty_all_4_0_23_Final.xml",
    ".idea/libraries/Gradle__it_unimi_dsi_fastutil_6_5_7.xml",
    ".idea/libraries/Gradle__javax_activation_activation_1_1.xml",
    ".idea/libraries/Gradle__javax_validation_validation_api_1_0_0_GA.xml",
    ".idea/libraries/Gradle__javax_xml_bind_jaxb_api_2_2_3.xml",
    ".idea/libraries/Gradle__javax_xml_stream_stax_api_1_0_2.xml",
    ".idea/libraries/Gradle__jline_jline_1_0.xml",
    ".idea/libraries/Gradle__junit_junit_4_11.xml",
    ".idea/libraries/Gradle__junit_junit_4_8_1.xml",
    ".idea/libraries/Gradle__log4j_log4j_1_2_16.xml",
    ".idea/libraries/Gradle__log4j_log4j_1_2_17.xml",
    ".idea/libraries/Gradle__net_java_dev_jna_jna_4_0_0.xml",
    ".idea/libraries/Gradle__net_jpountz_lz4_lz4_1_2_0.xml",
    ".idea/libraries/Gradle__net_sf_jopt_simple_jopt_simple_3_2.xml",
    ".idea/libraries/Gradle__net_sf_supercsv_super_csv_2_1_0.xml",
    ".idea/libraries/Gradle__net_sourceforge_argo_argo_3_7.xml",
    ".idea/libraries/Gradle__org_antlr_ST4_4_0_8.xml",
    ".idea/libraries/Gradle__org_antlr_antlr_3_2.xml",
    ".idea/libraries/Gradle__org_antlr_antlr_3_5_2.xml",
    ".idea/libraries/Gradle__org_antlr_antlr_runtime_3_2.xml",
    ".idea/libraries/Gradle__org_antlr_antlr_runtime_3_5_2.xml",
    ".idea/libraries/Gradle__org_antlr_stringtemplate_3_2.xml",
    ".idea/libraries/Gradle__org_antlr_stringtemplate_4_0_2.xml",
    ".idea/libraries/Gradle__org_apache_cassandra_cassandra_all_2_0_11.xml",
    ".idea/libraries/Gradle__org_apache_cassandra_cassandra_all_2_1_3.xml",
    ".idea/libraries/Gradle__org_apache_cassandra_cassandra_thrift_2_0_11.xml",
    ".idea/libraries/Gradle__org_apache_cassandra_cassandra_thrift_2_1_3.xml",
    ".idea/libraries/Gradle__org_apache_commons_commons_lang3_3_1.xml",
    ".idea/libraries/Gradle__org_apache_commons_commons_math3_3_2.xml",
    ".idea/libraries/Gradle__org_apache_commons_commons_pool2_2_0.xml",
    ".idea/libraries/Gradle__org_apache_httpcomponents_httpclient_4_2_5.xml",
    ".idea/libraries/Gradle__org_apache_httpcomponents_httpcore_4_2_4.xml",
    ".idea/libraries/Gradle__org_apache_kafka_kafka_2_10_0_8_2_0.xml",
    ".idea/libraries/Gradle__org_apache_kafka_kafka_clients_0_8_2_0.xml",
    ".idea/libraries/Gradle__org_apache_thrift_libthrift_0_9_1.xml",
    ".idea/libraries/Gradle__org_apache_thrift_libthrift_0_9_2.xml",
    ".idea/libraries/Gradle__org_apache_zookeeper_zookeeper_3_4_6.xml",
    ".idea/libraries/Gradle__org_cassandraunit_cassandra_unit_2_0_2_0.xml",
    ".idea/libraries/Gradle__org_codehaus_jackson_jackson_core_asl_1_9_2.xml",
    ".idea/libraries/Gradle__org_codehaus_jackson_jackson_mapper_asl_1_9_2.xml",
    ".idea/libraries/Gradle__org_hamcrest_hamcrest_all_1_1.xml",
    ".idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml",
    ".idea/libraries/Gradle__org_hectorclient_hector_core_1_1_4.xml",
    ".idea/libraries/Gradle__org_hibernate_hibernate_validator_4_3_0_Final.xml",
    ".idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_1_0_CR2.xml",
    ".idea/libraries/Gradle__org_mapdb_mapdb_1_0_6.xml",
    ".idea/libraries/Gradle__org_mindrot_jbcrypt_0_3m.xml",
    ".idea/libraries/Gradle__org_scala_lang_scala_library_2_10_4.xml",
    ".idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_6.xml",
    ".idea/libraries/Gradle__org_slf4j_slf4j_log4j12_1_6_1.xml",
    ".idea/libraries/Gradle__org_slf4j_slf4j_log4j12_1_7_2.xml",
    ".idea/libraries/Gradle__org_xerial_snappy_snappy_java_1_1_1_6.xml",
    ".idea/libraries/Gradle__org_yaml_snakeyaml_1_12.xml",
    ".idea/libraries/Gradle__redis_clients_jedis_2_6_2.xml",
    ".idea/misc.xml",
    ".idea/modules.xml",
    ".idea/scopes",
    ".idea/scopes/scope_settings.xml",
    ".idea/uiDesigner.xml",
    ".idea/vcs.xml",
    ".idea/workspace.xml",
    "CassandraKafkaIndex.iml",
    "Cassandra_2_1_3_Compatibility_Changes.patch",
    "README.md",
    "build.gradle",
    "gradle.properties",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "settings.gradle",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/bettercloud",
    "src/main/java/com/bettercloud/cassandra",
    "src/main/java/com/bettercloud/cassandra/BetterCloud.java",
    "src/main/java/com/bettercloud/cassandra/BetterCloudIndexException.java",
    "src/main/java/com/bettercloud/cassandra/BetterCloudMBean.java",
    "src/main/java/com/bettercloud/cassandra/BetterCloudUtil.java",
    "src/main/java/com/bettercloud/cassandra/CassandraIndex.java",
    "src/main/java/com/bettercloud/cassandra/CassandraRowAssembler.java",
    "src/main/java/com/bettercloud/cassandra/ClusteringKeyMapper.java",
    "src/main/java/com/bettercloud/cassandra/IndexEntryEvent.java",
    "src/main/java/com/bettercloud/cassandra/IndexEventSubscriber.java",
    "src/main/java/com/bettercloud/cassandra/IndexingService.java",
    "src/main/java/com/bettercloud/cassandra/KafkaProducer.java",
    "src/main/java/com/bettercloud/cassandra/MessageDTO.java",
    "src/main/java/com/bettercloud/cassandra/RedisConnection.java",
    "src/main/java/com/bettercloud/cassandra/RowIndexSupport.java",
    "src/main/java/com/bettercloud/cassandra/Utils.java",
    "src/test",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/bettercloud",
    "src/test/java/com/bettercloud/CassandraIndexTest.java",
    "src/test/java/com/bettercloud/CassandraIndexTestBase.java",
    "src/test/java/com/bettercloud/util",
    "src/test/java/com/bettercloud/util/CQLDataLoaderD.java",
    "src/test/java/com/bettercloud/util/CQLUnitD.java",
    "src/test/resources",
    "src/test/resources/cas.yaml",
    "src/test/resources/log4j.xml",
    "src/test/resources/nodes.properties",
    "src/test/resources/samples",
    "src/test/resources/samples/sample-data.cql",
    "src/test/resources/samples/sample-json.cql",
    "src/test/resources/samples/sample-queries.cql",
    "src/test/resources/samples/sample-tables.cql",
    "src/test/resources/samples/sample.json",
    "target",
    "target/embeddedCassandra",
    "target/embeddedCassandra/cas.yaml",
    "target/embeddedCassandra/log4j-embedded-cassandra.properties"
]
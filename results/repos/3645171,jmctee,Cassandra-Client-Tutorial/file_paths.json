[
    ".gitignore",
    "README",
    "pom.xml",
    "proto_definitions",
    "proto_definitions/README.txt",
    "proto_definitions/reading_buffer.proto",
    "slides",
    "slides/Cassandra-Client-Tutorial.pdf",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/jeklsoft",
    "src/main/java/com/jeklsoft/cassandraclient",
    "src/main/java/com/jeklsoft/cassandraclient/EmbeddedCassandra.java",
    "src/main/java/com/jeklsoft/cassandraclient/Reading.java",
    "src/main/java/com/jeklsoft/cassandraclient/ReadingBuffer.java",
    "src/main/java/com/jeklsoft/cassandraclient/ReadingsPersistor.java",
    "src/main/java/com/jeklsoft/cassandraclient/astyanax",
    "src/main/java/com/jeklsoft/cassandraclient/astyanax/AstyanaxProtocolBufferWithStandardColumnExample.java",
    "src/main/java/com/jeklsoft/cassandraclient/astyanax/BigDecimalSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/astyanax/DateTimeSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/astyanax/ReadingSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector",
    "src/main/java/com/jeklsoft/cassandraclient/hector/BigDecimalSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/DateTimeSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/ExtendedTypeInferringSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/ExtensibleTypeInferringSerializer.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/HectorHeterogeneousSuperColumnExample.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/HectorProtocolBufferWithStandardColumnExample.java",
    "src/main/java/com/jeklsoft/cassandraclient/hector/ReadingSerializer.java",
    "src/test",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/jeklsoft",
    "src/test/java/com/jeklsoft/cassandraclient",
    "src/test/java/com/jeklsoft/cassandraclient/BaseReadingsTest.java",
    "src/test/java/com/jeklsoft/cassandraclient/TestEmbeddedCassandra.java",
    "src/test/java/com/jeklsoft/cassandraclient/TestReadingBuffer.java",
    "src/test/java/com/jeklsoft/cassandraclient/astyanax",
    "src/test/java/com/jeklsoft/cassandraclient/astyanax/TestAstyanaxProtocolBufferWithStandardColumnExample.java",
    "src/test/java/com/jeklsoft/cassandraclient/astyanax/TestBigDecimalSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/astyanax/TestDateTimeSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/astyanax/TestReadingSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector",
    "src/test/java/com/jeklsoft/cassandraclient/hector/HectorTest.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestBigDecimalSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestDateTimeSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestExtendedTypeInferringSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestExtensibleTypeInferrringSerializer.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestHectorHeterogeneousSuperColumnExample.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestHectorProtocolBufferWithStandardColumnExample.java",
    "src/test/java/com/jeklsoft/cassandraclient/hector/TestReadingSerializer.java",
    "src/test/resources",
    "src/test/resources/cassandra.yaml",
    "src/test/resources/log4j.properties"
]
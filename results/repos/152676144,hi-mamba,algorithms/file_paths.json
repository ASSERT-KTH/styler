[
    ".github",
    ".github/workflows",
    ".github/workflows/go.yml",
    ".github/workflows/maven.yml",
    ".gitignore",
    "000\u3001\u4ec0\u4e48\u662f\u6570\u636e\u7ed3\u6784\uff0c\u90fd\u6709\u54ea\u4e9b\u6570\u636e\u7ed3\u6784.md",
    "002\u3001\u4e8c\u8fdb\u5236\u7684\u8fd0\u7b97.md",
    "003\u3001\u8fd0\u7b97\u7b26(java\u4f8b\u5b50).md",
    "009\u3001\u7406\u89e3\u65f6\u95f4\u590d\u6742\u5ea6 O(log n).md",
    "00\u3001Hash\u7b97\u6cd5\u603b\u7ed3.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/01\u3001\u57fa\u7840",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/01\u3001\u57fa\u7840/01\u3001\u9012\u5f52 Recursion.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/01\u3001\u57fa\u7840/02\u3001\u9012\u5f52\u7684\u6267\u884c\u8fc7\u7a0b.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/01\u3001\u57fa\u7840/03\u3001LFU\u3001LRU\u3001TinyLFU \u3001W-TinyLFU.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/02\u3001\u5192\u6ce1\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/03\u3001\u9e21\u5c3e\u9152\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/04\u3001\u76f4\u63a5\u9009\u62e9\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/05\u3001\u5e0c\u5c14\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/06\u3001\u76f4\u63a5\u63d2\u5165\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/08\u3001\u5f52\u5e76\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/10\u3001\u5806\u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/02\u3001\u6392\u5e8f\u7b97\u6cd5/50\u3001\u5bf9\u4e24\u4e2a\u6570\u7ec4\u8fdb\u884cmerge \u6392\u5e8f.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/05\u3001\u52a8\u6001\u89c4\u5212",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/05\u3001\u52a8\u6001\u89c4\u5212/03\u3001Kadane\u7b97\u6cd5.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/05\u3001\u52a8\u6001\u89c4\u5212/07\u3001\u52a8\u6001\u89c4\u5212.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/05\u3001\u52a8\u6001\u89c4\u5212/08\u3001\u52a8\u6001\u89c4\u5212\u603b\u7ed3.md",
    "00\u3001\u57fa\u7840\u77e5\u8bc6/05\u3001\u52a8\u6001\u89c4\u5212/09\u3001DP\uff08\u52a8\u6001\u89c4\u5212\uff09 VS \u56de\u6eaf VS \u8d2a\u5fc3.md",
    "010.\u7b97\u6cd5\u68b3\u7406\uff1a\u521d\u7ea7\u7bc7.md",
    "011.\u7b97\u6cd5\u68b3\u7406\uff1a\u4e2d\u7ea7\u7bc7.md",
    "012.\u7b97\u6cd5\u68b3\u7406\uff1a\u9ad8\u7ea7\u7bc7.md",
    "01\u3001\u6570\u636e\u7ed3\u6784",
    "01\u3001\u6570\u636e\u7ed3\u6784/01\u3001\u6570\u636e\u7ed3\u6784\u6982\u8ff0.md",
    "01\u3001\u6570\u636e\u7ed3\u6784/02\u3001\u6570\u636e\u7ed3\u6784.md",
    "01\u3001\u6570\u636e\u7ed3\u6784/10\u3001\u4e8c\u53c9\u6811\u904d\u5386(\u5148\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f).md",
    "01\u3001\u6570\u636e\u7ed3\u6784/13\u3001\u5e7f\u5ea6\u4f18\u5148\u548c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22.md",
    "020\u3001\u9012\u5f52\u6267\u884c\u8fc7\u7a0b\u8be6\u89e3.md",
    "02\u3001\u7b97\u6cd5\u590d\u6742\u5ea6",
    "02\u3001\u7b97\u6cd5\u590d\u6742\u5ea6/02\u3001Master Theorem-\u4e3b\u5b9a\u7406\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6.md",
    "03\u3001\u6563\u5217\u8868\u7684\u5de5\u4f5c\u539f\u7406.md",
    "03\u3001\u6811",
    "03\u3001\u6811/01\u3001\u4e8c\u53c9\u67e5\u627e\u6811.md",
    "03\u3001\u6811/01\u3001\u4e8c\u53c9\u6811.md",
    "03\u3001\u6811/02\u3001\u4e8c\u5206\u641c\u7d22.md",
    "03\u3001\u6811/03\u300101. \u5e73\u8861\u6811.md",
    "03\u3001\u6811/03\u300102.\u4e3a\u4ec0\u4e48\u8d39\u5c3d\u82e6\u5fc3\u4fdd\u8bc1\u6811\u7684\u5e73\u8861\u6027.md",
    "03\u3001\u6811/04\u3001AVL\u6811.md",
    "03\u3001\u6811/04\u3001\u4e3a\u4ec0\u4e48STL\u548clinux\u90fd\u4f7f\u7528\u7ea2\u9ed1\u6811\u4f5c\u4e3a\u5e73\u8861\u6811\u7684\u5b9e\u73b0\uff1f.md",
    "03\u3001\u6811/04\u3001\u4eceTrie\u6811\uff08\u5b57\u5178\u6811\uff09\u8c08\u5230\u540e\u7f00\u6811.md",
    "03\u3001\u6811/05\u3001\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\u7ea2\u9ed1\u6811.md",
    "03\u3001\u6811/05\u3001\u7ea2\u9ed1\u6811.md",
    "03\u3001\u6811/06\u3001 \u7ea2\u9ed1\u6811-\u7ef4\u57fa\u767e\u79d1.md",
    "03\u3001\u6811/07\u3001\u7ea2\u9ed1\u6811\u6df1\u5165\u5256\u6790\u53caJava\u5b9e\u73b0.md",
    "03\u3001\u6811/08\u3001\u6f2b\u753b\uff1a\u4ec0\u4e48\u662f\u7ea2\u9ed1\u6811\uff1f.md",
    "03\u3001\u6811/11\u3001AVL\u6811\u4e0e\u7ea2\u9ed1\u6811\u533a\u522b.md",
    "03\u3001\u6811/31\u3001B+\u6811\u4ecb\u7ecd.md",
    "03\u3001\u6811/32\u3001B\u6811\u548cB+\u6811\u7684\u63d2\u5165\u3001\u5220\u9664\u56fe\u6587\u8be6\u89e3.md",
    "03\u3001\u6811/33\u3001\u4ec0\u4e48\u662fB\u6811\uff1f.md",
    "05\u3001\u94fe\u8868",
    "05\u3001\u94fe\u8868/03\u3001\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868&\u5224\u65ad\u94fe\u8868\u662f\u5426\u6709\u73af.md",
    "05\u3001\u94fe\u8868/05\u3001\u4e00\u4e2a\u94fe\u8868\uff0c\u6c42\u4e2d\u95f4\u7ed3\u70b9.md",
    "11\u3001leetcode",
    "11\u3001leetcode/104\u3001104. Maximum Depth of Binary Tree.md",
    "11\u3001leetcode/111\u3001111. Minimum Depth of Binary Tree.md",
    "11\u3001leetcode/121. Best Time to Buy and Sell Stock.md",
    "11\u3001leetcode/122. Best Time to Buy and Sell Stock II.md",
    "11\u3001leetcode/167\u3001167. Two Sum II - Input array is sorted.md",
    "11\u3001leetcode/169\u3001169. Majority Element.md",
    "11\u3001leetcode/184\u3001184.LeetCode\uff1aDepartment Highest Salary - \u90e8\u95e8\u5185\u6700\u9ad8\u5de5\u8d44.md",
    "11\u3001leetcode/202\u3001202. Happy Number.md",
    "11\u3001leetcode/21\u300121. Merge Two Sorted Lists.md",
    "11\u3001leetcode/233. Number of Digit One.md",
    "11\u3001leetcode/235\u3001235. Lowest Common Ancestor of a Binary Search Tree.md",
    "11\u3001leetcode/239\u3001239. Sliding Window Maximum.md",
    "11\u3001leetcode/241\u3001242. Valid Anagram.md",
    "11\u3001leetcode/35\u300135. Search Insert Position.md",
    "11\u3001leetcode/387\u3001387. First Unique Character in a String(\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26).md",
    "11\u3001leetcode/38\u300138.Count and Say (\u8ba1\u6570\u548c\u53d1\u8a00) \u89e3\u9898\u601d\u8def\u548c\u65b9\u6cd5.md",
    "11\u3001leetcode/50\u300150. Pow(x, n).md",
    "11\u3001leetcode/53\u300153. Maximum Subarray.md",
    "11\u3001leetcode/670\u3001670. Maximum Swap.md",
    "11\u3001leetcode/69. Sqrt(x).md",
    "11\u3001leetcode/703. Kth Largest Element in a Stream.md",
    "11\u3001leetcode/83\u300183. Remove Duplicates from Sorted List.md",
    "11\u3001leetcode/88\u300188. Merge Sorted Array.md",
    "11\u3001leetcode/98\u300198. Validate Binary Search Tree.md",
    "11\u3001leetcode/README.md",
    "15\u3001\u641e\u5b9aBAT\u9762\u8bd5\u2014\u2014\u51e0\u9053\u5e38\u89c1\u7684\u5b50\u7b26\u4e32\u7b97\u6cd5\u9898.md",
    "20\u3001\u51e0\u4e2a\u9762\u8bd5\u7ecf\u5178\u7b97\u6cd5\u9898Java\u89e3\u7b54",
    "20\u3001\u51e0\u4e2a\u9762\u8bd5\u7ecf\u5178\u7b97\u6cd5\u9898Java\u89e3\u7b54/01\u3001\u51e0\u4e2a\u9762\u8bd5\u7ecf\u5178\u7b97\u6cd5\u9898Java\u89e3\u7b54.md",
    "20\u3001\u51e0\u4e2a\u9762\u8bd5\u7ecf\u5178\u7b97\u6cd5\u9898Java\u89e3\u7b54/02\u3001\u7528\u961f\u5217\u5b9e\u73b0\u6808&\u7528\u6808\u5b9e\u73b0\u961f\u5217.md",
    "21\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406",
    "21\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406/04\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406 - 10\u4ebf\u4e2a\u6570\u4e2d\u627e\u51fa\u6700\u5927\u768410000\u4e2a\u6570\uff08top K\u95ee\u9898\uff09.md",
    "21\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406/05\u3001\u4e00\u4e2a1TB\u7684\u6587\u4ef6\uff0c\u4f60\u6709\u4ec0\u4e48\u6700\u5feb\u7684\u529e\u6cd5\u80fd\u591f\u6c42\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684TOP5\u884c\u6570\u636e\uff1f.md",
    "30\u3001\u5176\u4ed6\u7b97\u6cd5",
    "30\u3001\u5176\u4ed6\u7b97\u6cd5/03\u3001Base64\u7f16\u7801\u539f\u7406\u4e0e\u5e94\u7528.md",
    "README.md",
    "algorithm.md",
    "algorithms-go-example",
    "algorithms-go-example/BubbleSortDemo.go",
    "algorithms-go-example/go.mod",
    "algorithms-go-example/leetcode",
    "algorithms-go-example/leetcode/1_TwoSum.go",
    "algorithms-go-example/leetcode/225_Implement_Stack_using_Queues.go",
    "algorithms-go-example/leetcode/go.mod",
    "algorithms-go-example/test",
    "algorithms-go-example/test/1_TwoSum_test.go",
    "algorithms-go-example/test/225_Implement_Stack_using_Queues_test.go",
    "algorithms-go-example/test/go.mod",
    "algorithms-java-example",
    "algorithms-java-example/pom.xml",
    "algorithms-java-example/src",
    "algorithms-java-example/src/main",
    "algorithms-java-example/src/main/java",
    "algorithms-java-example/src/main/java/space.mamba",
    "algorithms-java-example/src/main/java/space.mamba/basis",
    "algorithms-java-example/src/main/java/space.mamba/basis/Demo001.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/LinearTableDemo.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/LinkedListDemo.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/MergeListSortExample.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/Node.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/dynamic_programing",
    "algorithms-java-example/src/main/java/space.mamba/basis/dynamic_programing/FibExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/basis/hash",
    "algorithms-java-example/src/main/java/space.mamba/basis/hash/HashDemo.java",
    "algorithms-java-example/src/main/java/space.mamba/binarytree",
    "algorithms-java-example/src/main/java/space.mamba/binarytree/Demo.java",
    "algorithms-java-example/src/main/java/space.mamba/coding",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/AssignmentOperatorFunctionDemo01.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/BinaryTreeNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/BitCountExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/DeleteWhitespace.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/FibonacciSolutionExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/ListNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/MaxNumExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/MinNumberInRotateArray.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No11_DoublePower.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No12_Print1ToMaxOfNDigitsSimple.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No12_PrintToMaxOfDigitsSimpke2.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No13_DeleteNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No14_GetLeastNumbersSolutionExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No14_GetLeastNumbersSolutionExample02_quickSort.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No14_ReorderOddEven.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No15_FindList_Last_K_Node.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No16_ReverseList.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No17_MergeSortListNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No18_HasSubTree.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No19_ClockwisePrintingMatrix.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No21_StackMin.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No22_IsPopOrder.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No23_PrintTreeFromTopToBottom.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No23_printTreeInLine.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No25_FindBinaryTreePath.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No30_KLeastNumbers.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No31_FindGreatestSumOfSubArray.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No32_CountNumber.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No33_ArrayConvertSmallestNumber.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No34_UglyNumber.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No35_FirstFindOnceChar.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No36_InversePairsCore.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No37_IntersectionNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No38_GetSortArrayNumCount.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No39_DepthInBTree.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No40_FindNumsAppearOnce.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No41_FindContinuousSequences.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No42_ReverseSentence.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No45_LastRemaining.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No46_SumSolution.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No47_Add.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No48_FinallClass.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No49_StringToInteger.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No51_DuplicateNum.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No52_Multiply.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No53_Pattern.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No54_isNumber.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No56_DetectCycle.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No58GetNextBinaryTree.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No60PrintBinaryTree.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No61PrintBinaryTree_1.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No61PrintBinaryTree_2.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No62_SerializeBinaryTree.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No63BinarySearchTreeKNode.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No7QueueWithTwoStacks.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/No8_RevertArray.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/P44_FindInPartiallySortedMatrix.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/P58_PrintListInReversedOrder.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/RotateSmallestNumberOfArrays.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/SingletonDemo02.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/TopNDemo.java",
    "algorithms-java-example/src/main/java/space.mamba/coding/interviews/TreeNode.java",
    "algorithms-java-example/src/main/java/space.mamba/interview",
    "algorithms-java-example/src/main/java/space.mamba/interview/ArrayFindSum.java",
    "algorithms-java-example/src/main/java/space.mamba/interview/ClockwiseOutput.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/TwoSum.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No07_ReverseInteger.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No100_Same_Tree.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No104_Maximum_Depth_of_Binary_Tree.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No1108_DefangingIPAddress.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No111_Minimum_Depth_of_Binary_Tree.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No118_Pascal_s_Triangle.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No119_Pascal_s_Triangle_I_I.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No121_Best_Time_to_Buy_and_Sell_Stock.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No122_Best_Time_to_Buy_and_Sell_Stock_2.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No136_SingleNumber.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No141_Linked_List_Cycle.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No155_MinStack.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No167_Two_Sum_II_Input_array_is_sorted.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No169_Majority_Element.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No202_Happy_Number.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No20Valid_Parentheses_Array.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No20Valid_Parentheses_Stack.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No21_Merge_Two_Sorted_Lists.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No225_Implement_Stack_using_Queues.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No22_Generate_Parentheses.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No235_Lowest_Common_Ancestor_of_a_Binary_Search_Tree.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No239_Sliding_Window_Maximum.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No35_SearchInsert.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No387_First_Unique_Character_In_a_String.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No38_CountAndSay.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No50_Pow.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No53_maxSubArray.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No670_Maximum_Swap.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No69_Sqrt.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No703_KthLargest.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No71_Simplify_Path.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No82_Remove_Duplicates_from_Sorted_List_II.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No88_Merge_Sorted_Array.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No98_Validate_Binary_Search_Tree.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No_169MajorityElement.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No_232_Implement_Queue_using_Stacks.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No_242ValidAnagram.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/No_83_Remove_Duplicates_from_Sorted_List.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/algorithms/TreeNode.java",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/database",
    "algorithms-java-example/src/main/java/space.mamba/leetcode/database/Duplicate_Emails.sql",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/BitwiseAndExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/BitwiseOrExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/InverseOperatorExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/LeftShiftOperator.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/LogicAndExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/LogicalOrExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/RightShiftOperator.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/UnsignedRightShiftOperatorExample01.java",
    "algorithms-java-example/src/main/java/space.mamba/logic_operation/XOR_Example01.java",
    "algorithms-java-example/src/main/java/space.mamba/string",
    "algorithms-java-example/src/main/java/space.mamba/string/LongestCommonPrefixDemo.java",
    "algorithms-java-example/src/main/java/space.mamba/string/ReplaceSpace.java",
    "algorithms-java-example/src/main/java/space.mamba/string/RevoreDemo.java",
    "algorithms-java-example/src/test",
    "algorithms-java-example/src/test/java",
    "algorithms-java-example/src/test/java/space",
    "algorithms-java-example/src/test/java/space/mamba",
    "algorithms-java-example/src/test/java/space/mamba/coding",
    "algorithms-java-example/src/test/java/space/mamba/coding/interviews",
    "algorithms-java-example/src/test/java/space/mamba/coding/interviews/No49_StringToIntegerTest.java",
    "algorithms-java-example/src/test/java/space/mamba/leetcode",
    "algorithms-java-example/src/test/java/space/mamba/leetcode/No387_First_Unique_Character_In_a_StringTest.java",
    "algorithms-java-example/src/test/java/space/mamba/leetcode/TwoSumTest.java",
    "algorithms-python-example",
    "algorithms-python-example/__init__.py",
    "algorithms-python-example/basic",
    "algorithms-python-example/basic/BubbleSortDemo.py",
    "algorithms-python-example/basic/__init__.py",
    "images",
    "images/O",
    "images/O/a-sorted-array-of-16-elements.png",
    "images/O/basic_O.png",
    "images/O/common-formula.png",
    "images/O/general-formula.png",
    "images/O/keep-half.png",
    "images/O/log-formula.png",
    "images/O/repeat-steps.png",
    "images/O/select-mid-as-pivot.png",
    "images/O/separating-the-power.png",
    "images/O/simplify-formula.png",
    "images/O/till-find-result.png",
    "images/basic",
    "images/basic/600px-Greedy_algorithm_36_cents.png",
    "images/basic/BFS_DFS.png",
    "images/basic/Bubble_sort_animation.gif",
    "images/basic/CountMinSketch_1.jpg",
    "images/basic/CountMinSketch_2.jpg",
    "images/basic/LFU.jpg",
    "images/basic/SLRU.jpg",
    "images/basic/Sorting_shaker_sort_anim.gif",
    "images/basic/TinyLFU.png",
    "images/basic/W-TinyLFU.jpg",
    "images/basic/greedy_algorithm_package_1.png",
    "images/basic/greedy_algorithm_package_2.png",
    "images/basic/lru.jpg",
    "images/basic/merge_sort.png",
    "images/basic/merge_sort_conquer.png",
    "images/coding_offer",
    "images/coding_offer/Multiply.jpg",
    "images/coding_offer/RotateSmallestNumberOfArrays.jpg",
    "images/coding_offer/no_11_print_number.png",
    "images/coding_offer/stack_1.png",
    "images/coding_offer/stack_2.png",
    "images/interview",
    "images/interview/1.png",
    "images/interview/10.png",
    "images/interview/1_1.png",
    "images/interview/3.png",
    "images/interview/4.png",
    "images/interview/5.png",
    "images/interview/6.png",
    "images/interview/7.png",
    "images/interview/8.png",
    "images/interview/9.png",
    "images/recursive",
    "images/recursive/Recursive_1.png",
    "images/recursive/Recursive_2.png",
    "images/recursive/Recursive_4.png",
    "images/recursive/Recursive_5.png",
    "images/recursive/Recursive_stack.png",
    "images/tree",
    "images/tree/1.png",
    "images/tree/10.jpg",
    "images/tree/11.jpg",
    "images/tree/12.jpg",
    "images/tree/13.jpg",
    "images/tree/14.jpg",
    "images/tree/15.jpg",
    "images/tree/16.jpg",
    "images/tree/17.jpg",
    "images/tree/2.jpg",
    "images/tree/3.jpg",
    "images/tree/4.png",
    "images/tree/5.png",
    "images/tree/6.png",
    "images/tree/7.png",
    "images/tree/8.png",
    "images/tree/9.png",
    "images/tree/BST.jpeg",
    "images/tree/B_tree.png",
    "images/tree/Binary_Search_Tree.jpeg",
    "images/tree/Binary_search_tree_1.png",
    "images/tree/Binary_tree.png",
    "images/tree/b+_11.png",
    "images/tree/balanced_search_tree.jpeg",
    "images/tree/red_block",
    "images/tree/red_block/red_block_tree_11.jpg",
    "images/tree/red_block/red_block_tree_12.jpg",
    "images/tree/red_block/red_block_tree_13.jpg",
    "images/tree/red_block/red_block_tree_14.jpg",
    "images/tree/red_block/red_block_tree_15.jpg",
    "images/tree/red_block/red_block_tree_16.jpg",
    "images/tree/red_block/red_block_tree_17.jpg",
    "images/tree/red_block/red_block_tree_18.jpg",
    "images/tree/red_block/red_block_tree_19.jpg",
    "images/tree/red_block/red_block_tree_2.jpg",
    "images/tree/red_block/red_block_tree_20.jpg",
    "images/tree/red_block/red_block_tree_21.jpg",
    "images/tree/red_block/red_block_tree_22.jpg",
    "images/tree/red_block/red_block_tree_23.jpg",
    "images/tree/red_block/red_block_tree_24.jpg",
    "images/tree/red_block/red_block_tree_25.jpg",
    "images/tree/red_block/red_block_tree_26.jpg",
    "images/tree/red_block/red_block_tree_27.jpg",
    "images/tree/red_block/red_block_tree_28.jpg",
    "images/tree/red_block/red_block_tree_29.jpg",
    "images/tree/red_block/red_block_tree_30.jpg",
    "images/tree/red_block/red_block_tree_31.jpg",
    "images/tree/red_block/red_block_tree_32.jpg",
    "images/tree/red_block/red_block_tree_33.jpg",
    "images/tree/red_block/red_block_tree_34.jpg",
    "images/tree/red_block/red_block_tree_35.jpg",
    "images/tree/red_block/red_block_tree_36.jpg",
    "images/tree/red_block/red_block_tree_37.jpg",
    "images/tree/red_block/red_block_tree_38.jpg",
    "images/tree/red_block/red_block_tree_39.jpg",
    "images/tree/red_block/red_block_tree_40.jpg",
    "images/tree/red_block/red_block_tree_41.jpg",
    "images/tree/red_block/red_block_tree_42.jpg",
    "images/tree/red_block/red_block_tree_43.jpg",
    "images/tree/red_block/red_block_tree_44.jpg",
    "images/tree/red_block/red_block_tree_45.jpg",
    "images/tree/red_block/red_block_tree_46.jpg",
    "images/tree/red_block/red_block_tree_47.jpg",
    "images/tree/red_block/red_block_tree_48.jpg",
    "images/tree/red_block/red_block_tree_49.jpg",
    "images/tree/red_block/red_block_tree_50.jpg",
    "images/tree/red_block/red_block_tree_51.jpg",
    "images/tree/red_block/red_block_tree_52.jpg",
    "images/tree/red_block/red_block_tree_53.jpg",
    "images/tree/red_block/red_block_tree_54.jpg",
    "images/tree/red_block/red_block_tree_55.jpg",
    "images/tree/red_block/red_block_tree_56.jpg",
    "images/tree/red_block/red_block_tree_57.jpg",
    "images/tree/red_block/red_block_tree_58.jpg",
    "images/tree/red_block/red_block_tree_59.jpg",
    "images/tree/red_block/red_block_tree_60.jpg",
    "images/tree/red_block/red_block_tree_61.jpg",
    "images/tree/red_block/red_block_tree_62.jpg",
    "images/tree/red_block/red_block_tree_63.jpg",
    "images/tree/red_block/red_block_tree_64.jpg",
    "images/tree/red_block_left.jpg",
    "images/tree/red_block_left_gif.gif",
    "images/tree/red_block_right.jpg",
    "images/tree/red_block_right_gif.gif",
    "images/tree/red_block_tree.png",
    "pom.xml",
    "\u51e0\u79cd\u6dd8\u6c70\u7b97\u6cd5.md",
    "\u5251\u6307offer",
    "\u5251\u6307offer/01\u3001\u5251\u6307offer.md",
    "\u5251\u6307offer/05\u3001\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868.md",
    "\u5251\u6307offer/07\u3001\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217.md",
    "\u5251\u6307offer/08\u3001\u6c42\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57.md",
    "\u5251\u6307offer/09\u3001\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2cn\u9879\uff08\u9752\u86d9\u8df3\u53f0\u9636\uff09.md",
    "\u5251\u6307offer/10\u3001\u6c42\u4e8c\u8fdb\u5236\u6570\u4e2d1\u7684\u4e2a\u6570.md",
    "\u5251\u6307offer/11\u3001\u6570\u503c\u7684\u6574\u6570\u6b21\u65b9.md",
    "\u5251\u6307offer/12\u3001\u6253\u53701\u5230\u6700\u5927\u7684n\u4f4d\u6570.md",
    "\u5251\u6307offer/13\u3001O(1)\u65f6\u95f4\u5220\u9664\u94fe\u8868\u8282\u70b9.md",
    "\u5251\u6307offer/14\u3001\u4f7f\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762.md",
    "\u5251\u6307offer/15\u3001\u627e\u94fe\u8868\u4e2d\u5012\u6570\u7b2cK\u4e2a\u8282\u70b9.md",
    "\u5251\u6307offer/16\u3001\u8f93\u51fa\u53cd\u8f6c\u540e\u7684\u94fe\u8868.md",
    "\u5251\u6307offer/17\u3001\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868.md",
    "\u5251\u6307offer/18\u3001\u5224\u65ad\u4e8c\u53c9\u6811A\u4e2d\u662f\u5426\u5305\u542b\u5b50\u6811B.md",
    "\u5251\u6307offer/20\u3001\u987a\u65f6\u9488\u6253\u5370\u77e9\u9635.md",
    "\u5251\u6307offer/21\u3001\u5305\u542bmin\u51fd\u6570\u7684\u6808.md",
    "\u5251\u6307offer/22\u3001\u5224\u65ad\u4e00\u4e2a\u6808\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u6808\u7684\u5f39\u51fa\u5e8f\u5217.md",
    "\u5251\u6307offer/23\u30011.\u5c42\u5e8f\u904d\u5386\u4e8c\u53c9\u6811.md",
    "\u5251\u6307offer/23\u30012.\u5206\u884c\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811.md",
    "\u5251\u6307offer/24\u3001\u540e\u5e8f\u904d\u5386\u4e8c\u53c9\u641c\u7d22\u6811.md",
    "\u5251\u6307offer/25\u3001\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u503c\u7684\u8def\u5f84.md",
    "\u5251\u6307offer/26\u3001\u590d\u6742\u94fe\u8868\u7684\u590d\u5236.md",
    "\u5251\u6307offer/30\u3001\u627e\u51fa\u6700\u5c0f\u7684K\u4e2a\u6570.md",
    "\u5251\u6307offer/31\u3001\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c.md",
    "\u5251\u6307offer/32\u3001\u4ece1\u5230\u6574\u6570n\u4e2d1\u51fa\u73b0\u7684\u6b21\u6570.md",
    "\u5251\u6307offer/33\u3001\u628a\u6570\u7ec4\u4e2d\u7684\u6570\u6392\u6210\u4e00\u4e2a\u6700\u5c0f\u7684\u6570.md",
    "\u5251\u6307offer/34\u3001\u6c42\u7b2cN\u4e2a\u4e11\u6570.md.md",
    "\u5251\u6307offer/35\u3001\u7b2c\u4e00\u4e2a\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26.md",
    "\u5251\u6307offer/36\u3001\u6570\u7ec4\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570.md",
    "\u5251\u6307offer/37\u3001\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9.md",
    "\u5251\u6307offer/38\u3001\u6570\u5b57\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570.md",
    "\u5251\u6307offer/39\u3001\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6.md",
    "\u5251\u6307offer/40\u3001\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u4e24\u4e2a\u6570\uff0c\u800c\u5176\u4ed6\u6570\u90fd\u51fa\u73b0\u4e24\u6b21.md",
    "\u5251\u6307offer/41\u3001\u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217.md",
    "\u5251\u6307offer/42\u3001\u7ffb\u8f6c\u5b57\u7b26\u4e32.md",
    "\u5251\u6307offer/43\u3001n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570\u53ca\u51fa\u73b0\u7684\u6982\u7387.md",
    "\u5251\u6307offer/45\u3001\u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570.md",
    "\u5251\u6307offer/46\u30011+2+3+\u2026+n\u7684\u548c.md",
    "\u5251\u6307offer/47\u3001\u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5.md",
    "\u5251\u6307offer/48\u3001\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u7c7b.md",
    "\u5251\u6307offer/49\u3001\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570.md",
    "\u5251\u6307offer/50\u3001\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u7684\u6700\u4f4e\u516c\u5171\u7956\u5148.md",
    "\u5251\u6307offer/51\u3001\u627e\u51fa\u91cd\u590d\u7684\u6570.md",
    "\u5251\u6307offer/52\u3001\u6784\u5efa-\u4e58\u79ef\u6570\u7ec4.md",
    "\u5251\u6307offer/53\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d.md",
    "\u5251\u6307offer/54\u3001\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32.md",
    "\u5251\u6307offer/55\u3001\u5b57\u7b26\u6d41\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26.md",
    "\u5251\u6307offer/56\u3001\u94fe\u8868\u4e2d\u73af\u7684\u5165\u53e3\u8282\u70b9.md",
    "\u5251\u6307offer/58\u3001\u4e8c\u53c9\u6811\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9.md",
    "\u5251\u6307offer/60\u3001\u6309\u4e4b\u5b57\u5f62\u987a\u5e8f\u6253\u5370\u4e8c\u53c9\u6811.md",
    "\u5251\u6307offer/61\u3001I-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811.md",
    "\u5251\u6307offer/61\u3001II-\u628a\u4e8c\u53c9\u6811\u6253\u5370\u6210\u591a\u884c.md",
    "\u5251\u6307offer/62\u3001\u5e8f\u5217\u5316\u4e8c\u53c9\u6811.md",
    "\u5251\u6307offer/63\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9.md",
    "\u5251\u6307offer/64\u3001\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0002\u3001\u6700\u5c0f\u5806.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0003\u3001Top-N\u7b97\u6cd5\u7684\u5b9e\u73b0.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0005\u3001\u5206\u7ec4Top N\u95ee\u9898(\u4e00) - java\u5b9e\u73b0Top n\u7b97\u6cd5\u57fa\u7840.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0010\u3001N\u7687\u540e\u95ee\u9898.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0030\u3001\u8d2a\u5fc3\u7b97\u6cd5.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0032\u3001\u7ecf\u5178\u7b97\u6cd5-\u80cc\u5305\u95ee\u9898.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0060\u3001 \u6709\u4e24\u4e2aint\u578b\u7684\u6574\u6570\uff1ax\uff0cy\uff1b\u4e0d\u4f7f\u7528\"if\",\"? :\",\"switch\"\u7b49\u5224\u65ad\u8bed\u53e5\uff01\u627e\u51faa\u3001b\u4e2d\u6700\u5927\u7684\u6570\uff01.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0110\u3001\u7ed9\u4f601\u5230100\u4e07\u7684\u8fde\u7eed\u6574\u6570\uff0c\u6211\u4ece\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6570\u7136\u540e\u6253\u4e71\u6570\u7ec4\uff0c\u4f60\u7ed9\u6211\u6c42\u51fa\u88ab\u53d6\u51fa\u7684\u662f\u4ec0\u4e48\u6570.md",
    "\u5e38\u89c1\u7b97\u6cd5\u9898\u76ee/0111\u3001\u6709\u4e24\u4e2aint\u7c7b\u578b\u7684\u6570a\u548cb\uff0c\u4f60\u80fd\u5199\u51fa\u51e0\u79cd\u4ea4\u6362\u5b83\u4eec\u503c\u7684\u529e\u6cd5\uff1f\u8d8a\u591a\u8d8a\u597d.md",
    "\u6846\u67b6\u7b97\u6cd5",
    "\u6846\u67b6\u7b97\u6cd5/06\u3001\u9009\u4e3e\u7b97\u6cd5.md"
]
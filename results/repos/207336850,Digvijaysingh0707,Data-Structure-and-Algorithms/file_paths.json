[
    "1d array",
    "1d array/1 Linear search.java",
    "1d array/10.Maximum subarray Sum 1",
    "1d array/11.Maximum Subarray Sum3(Kadane approach)",
    "1d array/12 Two pointer approach",
    "1d array/2.Smallest and largest number",
    "1d array/3.Binary Search",
    "1d array/4.selection sort",
    "1d array/5.Bubble Sort",
    "1d array/6.Insertion Sort",
    "1d array/7.Inbuilt Sort in java",
    "1d array/8.Comparators in java.java",
    "1d array/9.Generating subarray",
    "1d array/Arrays introduction",
    "1d array/Challenges",
    "1d array/Challenges/Array spiral anti clockwise",
    "1d array/Challenges/Factorial of large number",
    "1d array/Challenges/Form biggest number",
    "1d array/Challenges/Maximum circular sum",
    "1d array/Challenges/Maximum length bitonic subarray",
    "1d array/Challenges/Sum of two arrays",
    "1d array/Challenges/Wave print coloumn wise",
    "1d array/Challenges/rotate 2d array 90 anti clockwise",
    "1d array/Generating subarrays 1",
    "1d array/Greedy Algorithm",
    "1d array/Greedy Algorithm/Introduction",
    "1d array/Maximu subarray sum 2",
    "2d Arrays",
    "2d Arrays/2d char ARrays",
    "2d Arrays/Palindrone string",
    "2d Arrays/Piyush and Magical Park",
    "2d Arrays/Remove duplicate from a string",
    "2d Arrays/Rotate Image",
    "2d Arrays/Rotate the image",
    "2d Arrays/Stair case search",
    "2d Arrays/Wave Print",
    "2d Arrays/spiral print",
    "Binary Tree",
    "Binary Tree/1.Traversal.java",
    "Binary Tree/22.Level Order Print Recursion.java",
    "Binary Tree/33.BFS traversal-l .java",
    "Binary Tree/44.count and sum.java",
    "Binary Tree/55.Binary Tree - Diameter of Tree.java",
    "Binary Tree/66.Diameter in O(n)",
    "Binary Tree/77.SumReplacement.java",
    "Binary Tree/88.height Balanced tree.java",
    "Binary Tree/9.1 Build balanced tree from array.java",
    "Binary Tree/9.2 Build tree frompreorder and postordr.java",
    "Binary Tree/9.3 All nodes at a distance of k",
    "Binary Tree/9.3 Right view of tree",
    "Binary Tree/BST Searching",
    "Binary Tree/Binary tree to doubly linked list",
    "Binary Tree/Bst Insertion.java",
    "Binary Tree/BuildTreeUsing Pre",
    "Binary Tree/Challenges",
    "Binary Tree/Challenges/1. identical trees.java",
    "Binary Tree/Challenges/2. Build BST",
    "Binary Tree/Challenges/3. SumAtLevel",
    "Binary Tree/Challenges/Find sum at k level",
    "Binary Tree/Challenges/isBalanced",
    "Binary Tree/Check isBST",
    "Binary Tree/Distance between two nodes in a binary tree",
    "Binary Tree/Maximum sum from one node to other",
    "Binary Tree/Maximum sum from root to leaf",
    "Binary Tree/Print all nodes at a distance k from target Node",
    "Binary Tree/Reverse level Order order traversal",
    "Binary Tree/gfg Practice",
    "Binary Tree/gfg Practice/Convert ternary expression to binary tree.java",
    "Binary Tree/gfg Practice/Maximum nodes in a level",
    "Binary Tree/gfg Practice/Min value in bst",
    "Binary Tree/gfg Practice/Remove Half Nodes",
    "Binary Tree/gfg Practice/Size of Binary tree.java",
    "Binary Tree/gfg Practice/count Leaf nodes.java",
    "Binary Tree/gfg Practice/count non lead nodes.java",
    "Binary Tree/gfg Practice/mirror tree",
    "Binary Tree/lca in tree",
    "Binary search Tree",
    "Binary search Tree/**Cb code.cpp",
    "Binary search Tree/11.Introduction",
    "Binary search Tree/22.Bst insertion",
    "Binary search Tree/BST deletion",
    "Binary search Tree/Balance a Binary Search Tree",
    "Binary search Tree/Binary tree to bst",
    "Binary search Tree/Build Bst from Preorder",
    "Binary search Tree/Catalan Number",
    "Binary search Tree/Count bst Nodes that lie in given range",
    "Binary search Tree/Flatten a bst",
    "Binary search Tree/Kth largest element",
    "Binary search Tree/Merge two binary tree",
    "Binary search Tree/Pairs from 2 bst whose sum equals X",
    "Binary search Tree/Precompute inorder successor in bst or binary tree",
    "Binary search Tree/Searching",
    "Binary search Tree/check isBst",
    "Binary search Tree/dead nodes or not",
    "Binary search Tree/find next greater element",
    "Binary search Tree/lca in BST",
    "Bit Manupulation",
    "Bit Manupulation/??DecimalToBinary.java",
    "Bit Manupulation/All subset of array",
    "Bit Manupulation/Bit operator",
    "Bit Manupulation/Challenges",
    "Bit Manupulation/Challenges/Playing with bits",
    "Bit Manupulation/Clear and update bits",
    "Bit Manupulation/Fast Exponentiation using bitmasking",
    "Bit Manupulation/Generate subsets",
    "Bit Manupulation/Unique Number.java",
    "Bit Manupulation/Unique number ll",
    "Bit Manupulation/counting sets and optimisation",
    "Bit Manupulation/get and set.java",
    "Bit Manupulation/replace Bits in N by M",
    "Character Array",
    "Character Array/Palindromic String",
    "Character Array/remove Duplicates",
    "Dynamic Programming",
    "Dynamic Programming/(unbounded knapsack) Knapsack with duplicate item",
    "Dynamic Programming/0-1 Knapsack",
    "Dynamic Programming/2. Need of Dp and memoization",
    "Dynamic Programming/3. Dp bottom up approach",
    "Dynamic Programming/4. Reduce a number to 1 in minimum number of steps",
    "Dynamic Programming/5.Grid Problem",
    "Dynamic Programming/Atcoder Dp contest",
    "Dynamic Programming/Atcoder Dp contest/C.Vacation",
    "Dynamic Programming/Atcoder Dp contest/D. Knapsack 1",
    "Dynamic Programming/Atcoder Dp contest/Frog 1",
    "Dynamic Programming/Bottom Up fibbo",
    "Dynamic Programming/Catalan Number",
    "Dynamic Programming/Catalan Number/1 Recursive",
    "Dynamic Programming/Catalan Number/Dp approach",
    "Dynamic Programming/Cell mitosis(Hackerblocks)",
    "Dynamic Programming/Equal partition subset sum problem",
    "Dynamic Programming/Fibbonacci series",
    "Dynamic Programming/Fibbonacci series/Bottom up",
    "Dynamic Programming/Fibbonacci series/Top down fibbo",
    "Dynamic Programming/Friend Pairing Problem",
    "Dynamic Programming/Gold Mine",
    "Dynamic Programming/Hackerrank",
    "Dynamic Programming/Hackerrank/Coin chnge",
    "Dynamic Programming/Hackerrank/Fibonacci modified",
    "Dynamic Programming/LIS",
    "Dynamic Programming/LIS/2.Another O(n^2)",
    "Dynamic Programming/LIS/Using binary search",
    "Dynamic Programming/LIS/n^2",
    "Dynamic Programming/Ladder problem",
    "Dynamic Programming/Ladder problem/Bottom up",
    "Dynamic Programming/Ladder problem/Optimised approach of O(n)",
    "Dynamic Programming/Ladder problem/Top down",
    "Dynamic Programming/Leetcode",
    "Dynamic Programming/Leetcode/Best time to buy and sell stock",
    "Dynamic Programming/Leetcode/House robber",
    "Dynamic Programming/Leetcode/is Subsequence",
    "Dynamic Programming/Longest Common Subsequence of 3 strings",
    "Dynamic Programming/Longest Common substring",
    "Dynamic Programming/Longest Increasing Subsequences",
    "Dynamic Programming/Longest common subsequence",
    "Dynamic Programming/Longest subsequence1",
    "Dynamic Programming/Max sum subarray",
    "Dynamic Programming/Max sum subarray/Approach 1 O(n) time",
    "Dynamic Programming/Max sum subarray/Space opmisation",
    "Dynamic Programming/Maximum Increasing Subsequence",
    "Dynamic Programming/Maximum Length Chain of pairs",
    "Dynamic Programming/Maximum sized square of 1",
    "Dynamic Programming/Min coin change",
    "Dynamic Programming/Min coin change/Top down",
    "Dynamic Programming/Minimum cost path",
    "Dynamic Programming/Minimum steps to one",
    "Dynamic Programming/Minimum steps to one/1.Recursive",
    "Dynamic Programming/Minimum steps to one/3 Bottom up",
    "Dynamic Programming/Minimum steps to one/Top Down",
    "Dynamic Programming/Minimum sum subset problem",
    "Dynamic Programming/Number of ways to make change for amount n",
    "Dynamic Programming/Optimal game strategy",
    "Dynamic Programming/Painting fence",
    "Dynamic Programming/Permutation Coeffient",
    "Dynamic Programming/Problems",
    "Dynamic Programming/Problems/1. Print LCS",
    "Dynamic Programming/Problems/CSES Array Description",
    "Dynamic Programming/Problems/CSES Coin combination 1",
    "Dynamic Programming/Problems/CSES Coin combination 2",
    "Dynamic Programming/Problems/CSES Dice combination",
    "Dynamic Programming/Problems/CSES Edit distance",
    "Dynamic Programming/Problems/Leetcode Combination sum iv",
    "Dynamic Programming/Problems/Leetcode Knight Probability in Chessboard",
    "Dynamic Programming/Problems/Leetcode Minimum cost for tickets",
    "Dynamic Programming/Problems/Leetcode Minimum falling path sum",
    "Dynamic Programming/Problems/Leetcode Target Sum",
    "Dynamic Programming/Problems/Leetcode Unique Paths",
    "Dynamic Programming/Problems/Leetcode:- 120 Triangle",
    "Dynamic Programming/Problems/Minimum cost climbing stairs(leetcode)",
    "Dynamic Programming/Robot and path",
    "Dynamic Programming/Rod cutting to maximise profit",
    "Dynamic Programming/Rod cutting to maximise profit/By Top down",
    "Dynamic Programming/Rod cutting to maximise profit/By bottom up",
    "Dynamic Programming/Rod cutting to maximise profit/By recursion",
    "Dynamic Programming/Wine problem",
    "Dynamic Programming/Wine problem/Dp approach",
    "Dynamic Programming/Wine problem/Recursive approach",
    "Dynamic Programming/count subsets with given sum",
    "Dynamic Programming/longest Repeating sequence",
    "Dynamic Programming/ncr",
    "Dynamic Programming/ncr/1st",
    "Dynamic Programming/ncr/Iterative",
    "Dynamic Programming/ncr/O(k) space",
    "Dynamic Programming/ways to reach a cell in 2d matrix",
    "Dynamic Programming/ways to reach a cell in 2d matrix/1.recursion",
    "Dynamic Programming/ways to reach a cell in 2d matrix/2 Dp",
    "Generic Programming",
    "Generic Programming/Collections",
    "Generic Programming/Comparator",
    "Generic Programming/Generics",
    "Generic Programming/Iterators",
    "Graph",
    "Graph/1 (i) .Adjancency list Implementation",
    "Graph/1 (iii) BFS",
    "Graph/CPP",
    "Graph/CPP/DFS.cpp",
    "Graph/Connected component using DFS",
    "Graph/Cycle detection in directed graph",
    "Graph/Cycle detection in undirected graph using dfs",
    "Graph/Cyclic graph is tree or not",
    "Graph/Dijkstra algo",
    "Graph/Flood Fill algo",
    "Graph/Flood fill algo",
    "Graph/Graph Adjacency List Implementation for Generic Data",
    "Graph/Single source shortest path",
    "Graph/Single source shortrst path using BFS",
    "Graph/Snake and ladder",
    "Graph/Steps by knight",
    "Graph/Topological Sort Using Bfs",
    "Graph/Topological sort using DFS",
    "Graph/dfs",
    "Graph/word ladder",
    "Greedy Algorithm",
    "Greedy Algorithm/1.1 Indian coin change",
    "Greedy Algorithm/1.2 Busy men or Activity selection code",
    "Greedy Algorithm/1.3 Connecting wires",
    "Greedy Algorithm/1.4 Biased standing spoj",
    "Greedy Algorithm/1.5 Kingdom_Defence_code.(SPOJ)",
    "Greedy Algorithm/1.6 Chopstick codechef",
    "Greedy Algorithm/1.7 Load balancer",
    "Greedy Algorithm/Challenges",
    "Greedy Algorithm/Challenges/Activity selection",
    "Greedy Algorithm/Challenges/Balife",
    "Greedy Algorithm/Challenges/Maximum selection",
    "Greedy Algorithm/Codeforces 564A |Greedy",
    "Greedy Algorithm/Expedition spoj(Not done)",
    "Greedy Algorithm/Introduction",
    "Hashing",
    "Hashing/Array is subset of another array",
    "Hashing/Print Vertical order of tree",
    "Heaps",
    "Heaps/11.Implementation of priority queue",
    "Heaps/22.Insertion and deletipn in heaps",
    "Heaps/33.Build heap using unsorted array",
    "Heaps/44.Why heap is a binary tree",
    "Heaps/55.Delete any node from root inside",
    "Heaps/66.HeapSOrt",
    "Heaps/77.Numebr of elements to be sortedvin LogN timein Heapsort",
    "Heaps/88.Join the ropes",
    "Heaps/Build heap from array O(NlogN)",
    "Heaps/Build heap from array in O(n)",
    "Heaps/Gfg practice",
    "Heaps/Gfg practice/Heap sort",
    "Heaps/Gfg practice/Height of heaps",
    "Heaps/Gfg practice/K largest elements",
    "Heaps/Gfg practice/k largest elements",
    "Heaps/Implementaion to Priority queues",
    "Heaps/Median in a running stream of integers.java",
    "Heaps/Merge k sorted array",
    "Heaps/Priority queue",
    "Heaps/Remove Max element",
    "Heaps/Running median of stream of integers",
    "Linked List",
    "Linked List/CPP - Linked List Introduction",
    "Linked List/CRX-Add First",
    "Linked List/CRX-Add First/LinkedList.java",
    "Linked List/CRX-Add First/Main.java",
    "Linked List/CRX-Add Last",
    "Linked List/CRX-Add Last/LinkedList.java",
    "Linked List/CRX-Add Last/Main.java",
    "Linked List/CRX-Implementation of LinkedList",
    "Linked List/CRX-Need of LinkedList",
    "Linked List/CRX-Traverse in LinkedList",
    "Linked List/Dinesh Youtube",
    "Linked List/Dinesh Youtube/14.middleNode.java",
    "Linked List/Dinesh Youtube/15 nodeFromEnd.java",
    "Linked List/Dinesh Youtube/16 removeDuplicate.java",
    "Linked List/Dinesh Youtube/17 newNodeInSortedLinkedList.java",
    "Linked List/Dinesh Youtube/18.DeleteNode",
    "Linked List/Dinesh Youtube/19. ContainsLoops",
    "Linked List/Dinesh Youtube/22 DoublyLL",
    "Linked List/Dinesh Youtube/InsertAt.java",
    "Linked List/Dinesh Youtube/Search.java",
    "Linked List/Dinesh Youtube/deleteFirstNode.java",
    "Linked List/Dinesh Youtube/deleteLast.java",
    "Linked List/Dinesh Youtube/insertAfter.java",
    "Linked List/Dinesh Youtube/insertAtBegining.java",
    "Linked List/Dinesh Youtube/length.java",
    "Linked List/Dinesh Youtube/ll creation",
    "Linked List/Dinesh Youtube/print ll.java",
    "Linked List/Dinesh Youtube/reverse.java",
    "Linked List/Find length",
    "Linked List/Find length/LinkedList.java",
    "Linked List/Find length/Main.java",
    "Linked List/Linked List Insertion",
    "Linked List/Linked List Insertion/LinkedList.java",
    "Linked List/Linked List Insertion/Main.java",
    "Linked List/searching",
    "Linked List/searching/LinkedList.java",
    "Linked List/searching/Main.java",
    "LinkedList1",
    "LinkedList1/Adding Node",
    "LinkedList1/Adding Node/LinkedList.java",
    "LinkedList1/Adding Node/Main.java",
    "LinkedList1/Circular ll insertion",
    "LinkedList1/Cycle detection and removal Floyd's cycle",
    "LinkedList1/Delete first",
    "LinkedList1/Delete last node",
    "LinkedList1/Delete middle node",
    "LinkedList1/Delete.java",
    "LinkedList1/Floyd's cycle(cycle detection)",
    "LinkedList1/Implementation",
    "LinkedList1/Linked list reverse",
    "LinkedList1/Merge two sorted ll",
    "LinkedList1/Midpoint Runner technique",
    "LinkedList1/Problems",
    "LinkedList1/Problems/Reverse k nodes",
    "LinkedList1/Problems/find middle",
    "LinkedList1/Problems/merge  2 sorted ll",
    "LinkedList1/Problems/merge two sortedc leetcode",
    "LinkedList1/Searching",
    "LinkedList1/insert in middle",
    "LinkedList1/k node from end",
    "LinkedList1/mergesort",
    "LinkedList1/reverse ll recursively",
    "More sorting Techniques and Problems",
    "More sorting Techniques and Problems/Counting sort",
    "More sorting Techniques and Problems/Inversion Sort",
    "More sorting Techniques and Problems/Merge Sort",
    "More sorting Techniques and Problems/Quicksort",
    "More sorting Techniques and Problems/Wave sort",
    "More sorting Techniques and Problems/dnf_sort",
    "Number Theory Basics",
    "Number Theory Basics/Counting divisors using sieve",
    "Number Theory Basics/Divisible sumArrays.java",
    "Number Theory Basics/GCD Euclid Algo",
    "Number Theory Basics/Modulo Properties",
    "Number Theory Basics/Not so Easy HackerBlock",
    "Number Theory Basics/Prime Number",
    "Number Theory Basics/Prime factorisation",
    "Number Theory Basics/Prime factorisation/Using sieve",
    "Number Theory Basics/Prime factorisation/sqrt(n) approach",
    "Number Theory Basics/Prime visits from hackerblocks",
    "Number Theory Basics/sieveOfEratosthenes.java",
    "Recursion and Backtracking",
    "Recursion and Backtracking/1.2 Recursion Array is Sorted",
    "Recursion and Backtracking/1.3 Fast Power",
    "Recursion and Backtracking/1.4 Recursion Increasing Decreasing Numbers.java",
    "Recursion and Backtracking/1.5  Recursion - Time to Try(Multiply two numbers )",
    "Recursion and Backtracking/1.6 2048 Problem",
    "Recursion and Backtracking/Binary String",
    "Recursion and Backtracking/CPP - Merge Sort",
    "Recursion and Backtracking/CPP - Permutations",
    "Recursion and Backtracking/CPP - Recursion - Linear Search",
    "Recursion and Backtracking/CPP - Recursion - Phone Keypad",
    "Recursion and Backtracking/CPP - Recursion - Sudoku Solver",
    "Recursion and Backtracking/CPP - Recursion Bubble Sort",
    "Recursion and Backtracking/CPP Understanding Recursion",
    "Recursion and Backtracking/Distinct permutation",
    "Recursion and Backtracking/First occurence",
    "Recursion and Backtracking/Friend pairing",
    "Recursion and Backtracking/Generate  brackets",
    "Recursion and Backtracking/Inversion count",
    "Recursion and Backtracking/N queen problem.java",
    "Recursion and Backtracking/Permutation",
    "Recursion and Backtracking/QuickSort",
    "Recursion and Backtracking/Randomised Quicksort",
    "Recursion and Backtracking/Rat in a maze",
    "Recursion and Backtracking/Rat in a maze gfg",
    "Recursion and Backtracking/String Generation Acode recursion",
    "Recursion and Backtracking/Subsequences",
    "Recursion and Backtracking/Tilling problem",
    "Recursion and Backtracking/Tower of hanoi",
    "Recursion and Backtracking/all occurence",
    "Recursion and Backtracking/knapsack problem",
    "Recursion and Backtracking/ladder problem",
    "Recursion and Backtracking/last occurence",
    "Recursion and Backtracking/replace pi",
    "Recursion and Backtracking/string to integer",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/Duplicate String formatting",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/Optimal Game",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/R9 -- Found At Last",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/REmove Duplicate",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/Recursion-Convert String to Integer",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/all subsequence",
    "Recursion and Backtracking/\ud83d\ude80 Challenges - Recursion/replace pi",
    "Sortig & searching(Divide & conquer)",
    "Sortig & searching(Divide & conquer)/7.1 CPP - Bubble Sort",
    "Sortig & searching(Divide & conquer)/Aggresive cows",
    "Sortig & searching(Divide & conquer)/Binary Search",
    "Sortig & searching(Divide & conquer)/Binary Search:Pivot element",
    "Sortig & searching(Divide & conquer)/Binary Search:Searching in sorted Rotated array",
    "Sortig & searching(Divide & conquer)/Binary search: square root",
    "Sortig & searching(Divide & conquer)/Binary search: upper and lower bound",
    "Sortig & searching(Divide & conquer)/Book allocation",
    "Sortig & searching(Divide & conquer)/Challenges",
    "Sortig & searching(Divide & conquer)/Challenges/Aggresive cows.java",
    "Sortig & searching(Divide & conquer)/Challenges/Books allocation problem",
    "Sortig & searching(Divide & conquer)/Challenges/Help Rahul to search",
    "Sortig & searching(Divide & conquer)/Challenges/Kth root",
    "Sortig & searching(Divide & conquer)/Challenges/Sort Game.java",
    "Sortig & searching(Divide & conquer)/Challenges/String Sort",
    "Sortig & searching(Divide & conquer)/Challenges/Upper and lower bound",
    "Sortig & searching(Divide & conquer)/Help rahul-Pivot elemnt",
    "Sortig & searching(Divide & conquer)/Inbuild binary serach",
    "Sortig & searching(Divide & conquer)/counting sort",
    "Sortig & searching(Divide & conquer)/wave sort",
    "Space Tie Complexity Analysis",
    "Space Tie Complexity Analysis/space complexity intro",
    "Stack",
    "Stack/Challenges",
    "Stack/Challenges/Balanced Parenthesis",
    "Stack/Challenges/Pratik sir and coding",
    "Stack/Challenges/Stock span",
    "Stack/Impleenation2",
    "Stack/Implemention",
    "Stack/Implemention/Stack.java",
    "Stack/Implemention/main.java",
    "Stack/Maximum histogram area",
    "Stack/Revese stack usng 1 extra stack",
    "Stack/Stacks Question : Balanced Parenthesis",
    "Stack/Stock Span Problem",
    "Stack/revese stack using recursion.java",
    "String Matching algo",
    "String Matching algo/Naive algo(Brute force)",
    "Trie",
    "Trie/Introduction",
    "Trie/Unique prefix array",
    "queue",
    "queue/Deque",
    "queue/Deque/Maximum  length unique character substring",
    "queue/Deque/Maximum element in the window",
    "queue/First Non repeating chacter",
    "queue/Linkedlist based implementation",
    "queue/Maximum element in every window of size k",
    "queue/implementation using circular array"
]
<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
	<property name="severity" value="warning" />
	<!-- Checks that a package.html file exists for each package. -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
	<module name="PackageHtml">
		<property name="severity" value="ignore" />
	</module>
	<!-- Checks whether files end with a new line. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile">
		<property name="fileExtensions" value="MF" />
	</module>
	<!-- Checks that property files contain the same keys. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation" />

	<module name="TreeWalker">
		<property name="tabWidth" value="4" />

		<!-- Checks for whitespace -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad" />
		<module name="MethodParamPad" />
		<module name="NoWhitespaceAfter">
			<property name="tokens" value="BNOT,DEC,DOT,INC,LNOT" />
		</module>
		<module name="NoWhitespaceBefore" />
		<module name="OperatorWrap" />
		<module name="ParenPad" />
		<module name="TypecastParenPad" />
		<module name="WhitespaceAfter" />
		<module name="WhitespaceAround">
			<property name="tokens"
				value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,LAND,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS_ASSIGN,QUESTION,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND,WILDCARD_TYPE" />
		</module>


		<!-- Checks for Size Violations. -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="FileLength" />
		<!-- LineLength is controlled in eclipse, auto fomatting when saving files -->
		<!-- <module name="LineLength"> <property name="max" value="120"/> </module> -->
		<module name="MethodLength" />
		<module name="ParameterNumber" />

		<!-- Checks for Naming Conventions. -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName" />
		<module name="LocalFinalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="LocalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="MethodName" />
		<module name="PackageName" />
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="StaticVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="TypeName" />


		<!-- Modifier Checks -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder" />
		<module name="RedundantModifier" />

		<!-- Miscellaneous other checks. -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle" />
		<!-- <module name="FinalParameters"/> -->
		<!-- <module name="GenericIllegalRegexp"> <property name="severity" value="ignore"/> 
			<property name="format" value="\s+$"/> <property name="message" value="Line 
			has trailing spaces."/> </module> -->
		<module name="UpperEll" />

		<!-- Checks for blocks. You know, those {}'s -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="EmptyBlock">
			<property name="option" value="text" />
		</module>
		<module name="LeftCurly" />
		<module name="NeedBraces" />
		<module name="RightCurly" />
		<module name="AvoidNestedBlocks" />

		<!-- Checks for class design -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<module name="FinalClass" />
		<module name="InterfaceIsType" />
		<!-- <module name="DesignForExtension"/> -->
		<module name="HideUtilityClassConstructor" />
		<!-- <module name="VisibilityModifier"/> -->

		<!-- Checks for common coding problems -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<module name="AvoidInlineConditionals" />
		<module name="DoubleCheckedLocking" />    <!-- MY FAVOURITE -->
		<module name="EmptyStatement" />
		<!-- <module name="EqualsHashCode"/> -->
		<!-- <module name="HiddenField"/> -->
		<module name="IllegalInstantiation" />
		<module name="InnerAssignment" />
		<!-- <module name="MagicNumber"/> -->
		<module name="MissingSwitchDefault" />
		<!-- 
			<module name="RedundantThrows"> 
				<property name="logLoadErrors" value="true"/> 
				<property name="suppressLoadErrors" value="true"/> 
			</module> 
		-->
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />


		<!-- Checks for imports -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport" />
		<module name="IllegalImport" /> <!-- defaults to sun.* packages -->
		<module name="RedundantImport" />
		<module name="UnusedImports" />

		<!-- Checks for Javadoc comments. -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocType">
			<property name="excludeScope" value="private" />
			<property name="scope" value="nothing" />
		</module>
		<module name="JavadocMethod">
			<property name="allowMissingJavadoc" value="true" />
			<property name="logLoadErrors" value="true" />
			<property name="suppressLoadErrors" value="true" />
		</module>
		<module name="JavadocVariable">
			<property name="excludeScope" value="private" />
			<property name="scope" value="nothing" />
		</module>
		<module name="JavadocStyle">
			<property name="checkFirstSentence" value="false" />
			<property name="checkHtml" value="false" />
		</module>

		<!-- Checks for Headers -->
		<!-- See http://checkstyle.sf.net/config_header.html -->
		<!-- <module name="Header"> -->
		<!-- The follow property value demonstrates the ability -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run -->
		<!-- from any directory within a project. See property -->
		<!-- expansion, -->
		<!-- http://checkstyle.sf.net/config.html#properties -->
		<!-- <property -->
		<!-- name="headerFile" -->
		<!-- value="${basedir}/java.header"/> -->
		<!-- </module> -->
		<!-- Following interprets the header file as regular expressions. -->
		<!-- <module name="RegexpHeader"/> -->

	</module>
</module>
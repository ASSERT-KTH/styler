<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8" />

    <module name="NewlineAtEndOfFile">
        <property name="severity" value="ignore" />
    </module>
    <module name="FileLength" />
    <module name="FileTabCharacter" />

    <!-- Trailing spaces -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <!-- Space after 'for' and 'if' -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*(for|if)\b[^ ]" />
        <property name="message" value="Space needed before opening parenthesis." />
    </module>

    <!-- For each spacing -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])" />
        <property name="message" value="Space needed around ':' character." />
    </module>

    <module name="TreeWalker">
        <!-- <property name="cacheFile" value="${checkstyle.cache.file}" /> -->

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--module name="JavadocMethod"/-->
        <!--module name="JavadocType"/-->
        <!--module name="JavadocVariable"/-->
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName">
            <property name="format" value="^(?!m[A-Z][a-zA-Z0-9]*)([a-z][a-zA-Z0-9]*)$" />
            <!-- thanks @serj-lotutovici (https://github.com/serj-lotutovici) -->
            <message key="name.invalidPattern"
                     value="No Member prefixes allowed! Member ''{0}'' should be named with camelCase and without prefixes." />
        </module>
        <module name="MethodName" />
        <module name="PackageName">
            <property name="format" value="^[a-z0-9]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$" />

        </module>
        <module name="ParameterName" />
        <module name="StaticVariableName">
            <property name="format" value="^(?!s[A-Z][a-zA-Z0-9]*)([a-z][a-zA-Z0-9]*)$" />
            <message key="name.invalidPattern"
                     value="No Member prefixes allowed! Member ''{0}'' should be named with camelCase and without prefixes." />
        </module>
        <module name="TypeName" />


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport" >
            <property name="illegalPkgs" value="android.util.Log"/>
        </module>
        <!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports" />


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="124" />
        </module>
        <module name="MethodLength" />


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace" />
        <!--<module name="EmptyForIteratorPad"/>-->
        <module name="MethodParamPad" />
        <!--<module name="NoWhitespaceAfter"/>-->
        <!--<module name="NoWhitespaceBefore"/>-->
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <!--module name="AvoidNestedBlocks"/-->
        <!--module name="EmptyBlock"/-->
        <module name="LeftCurly" />
        <!--<module name="NeedBraces"/>-->
        <module name="RightCurly" />


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--module name="AvoidInlineConditionals"/-->
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <!--<module name="EqualsAvoidNull"/>-->
        <module name="EqualsHashCode" />
        <!--module name="HiddenField"/-->
        <module name="IllegalInstantiation" />
        <!--module name="InnerAssignment"/-->
        <!--module name="MagicNumber"/-->
        <!--module name="MissingSwitchDefault"/-->
        <!--<module name="RedundantThrows">-->
        <!--<property name="allowUnchecked" value="true"/>-->
        <!--<property name="allowSubclasses" value="true"/>-->
        <!--</module>-->
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--module name="DesignForExtension"/-->
        <!--<module name="FinalClass"/>-->
        <module name="HideUtilityClassConstructor" />
        <module name="InterfaceIsType" />
        <!--module name="VisibilityModifier"/-->


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <!--module name="FinalParameters"/-->
        <!--module name="TodoComment"/-->
        <module name="UpperEll" />
    </module>
</module>
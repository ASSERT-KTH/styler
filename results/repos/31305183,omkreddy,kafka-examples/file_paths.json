[
    ".gitignore",
    "LICENSE",
    "README.md",
    "consumer",
    "consumer/README.md",
    "consumer/bin",
    "consumer/bin/runAdvancedConsumer.sh",
    "consumer/bin/runBasicConsumeLoop.sh",
    "consumer/bin/runSimpleConsumer.sh",
    "consumer/pom.xml",
    "consumer/src",
    "consumer/src/main",
    "consumer/src/main/java",
    "consumer/src/main/java/kafka",
    "consumer/src/main/java/kafka/examples",
    "consumer/src/main/java/kafka/examples/common",
    "consumer/src/main/java/kafka/examples/common/serialization",
    "consumer/src/main/java/kafka/examples/common/serialization/CustomDeserializer.java",
    "consumer/src/main/java/kafka/examples/common/serialization/CustomSerializer.java",
    "consumer/src/main/java/kafka/examples/consumer",
    "consumer/src/main/java/kafka/examples/consumer/BasicConsumeLoop.java",
    "consumer/src/main/java/kafka/examples/consumer/ConsumerRebalancer.java",
    "consumer/src/main/java/kafka/examples/consumer/SimpleConsumer.java",
    "consumer/src/main/java/kafka/examples/consumer/advanced",
    "consumer/src/main/java/kafka/examples/consumer/advanced/AdvancedConsumer.java",
    "consumer/src/main/java/kafka/examples/consumer/processor",
    "consumer/src/main/java/kafka/examples/consumer/processor/AsyncRecordProcessor.java",
    "consumer/src/main/java/kafka/examples/consumer/processor/RecordProcessor.java",
    "consumer/src/main/java/kafka/examples/consumer/processor/SyncRecordProcessor.java",
    "consumer/src/main/resources",
    "consumer/src/main/resources/log4j.properties",
    "producer",
    "producer/README.md",
    "producer/bin",
    "producer/bin/runBasicPartitioner.sh",
    "producer/bin/runConsumer.sh",
    "producer/bin/runCustomPartitioner.sh",
    "producer/bin/runKryoConsumer.sh",
    "producer/bin/runKryoProducer.sh",
    "producer/bin/runProducer.sh",
    "producer/bin/runTransactionalProducer.sh",
    "producer/pom.xml",
    "producer/src",
    "producer/src/main",
    "producer/src/main/java",
    "producer/src/main/java/kafka",
    "producer/src/main/java/kafka/examples",
    "producer/src/main/java/kafka/examples/consumer",
    "producer/src/main/java/kafka/examples/consumer/BasicConsumerExample.java",
    "producer/src/main/java/kafka/examples/consumer/KryoConsumerExample.java",
    "producer/src/main/java/kafka/examples/kryo",
    "producer/src/main/java/kafka/examples/kryo/serde",
    "producer/src/main/java/kafka/examples/kryo/serde/KryoDeserializer.java",
    "producer/src/main/java/kafka/examples/kryo/serde/KryoSerializer.java",
    "producer/src/main/java/kafka/examples/kryo/serde/KryoUtils.java",
    "producer/src/main/java/kafka/examples/producer",
    "producer/src/main/java/kafka/examples/producer/BasicPartitionExample.java",
    "producer/src/main/java/kafka/examples/producer/BasicProducerExample.java",
    "producer/src/main/java/kafka/examples/producer/CustomPartitioner.java",
    "producer/src/main/java/kafka/examples/producer/CustomPartitionerExample.java",
    "producer/src/main/java/kafka/examples/producer/KryoProducerExample.java",
    "producer/src/main/java/kafka/examples/producer/MyEvent.java",
    "producer/src/main/java/kafka/examples/producer/SimpleProducer.java",
    "producer/src/main/java/kafka/examples/producer/TransactionalProducerExample.java",
    "producer/src/main/resources",
    "producer/src/main/resources/log4j.properties"
]
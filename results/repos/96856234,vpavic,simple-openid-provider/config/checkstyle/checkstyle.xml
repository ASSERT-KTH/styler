<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
		"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
	<!-- Suppressions -->
	<module name="SuppressionFilter">
		<property name="file" value="${configDir}/suppressions.xml"/>
	</module>

	<!-- Root Checks -->
	<module name="NewlineAtEndOfFileCheck">
		<property name="lineSeparator" value="lf"/>
	</module>

	<!-- TreeWalker Checks -->
	<module name="TreeWalker">
		<!-- Annotations -->
		<module name="AnnotationUseStyleCheck">
			<property name="elementStyle" value="compact"/>
		</module>
		<module name="MissingOverrideCheck"/>
		<module name="PackageAnnotationCheck"/>
		<module name="AnnotationLocationCheck">
			<property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
		</module>

		<!-- Block Checks -->
		<module name="EmptyBlockCheck">
			<property name="option" value="text"/>
		</module>
		<module name="LeftCurlyCheck"/>
		<module name="RightCurlyCheck">
			<property name="option" value="alone"/>
		</module>
		<module name="NeedBracesCheck"/>
		<module name="AvoidNestedBlocksCheck"/>

		<!-- Class Design -->
		<module name="FinalClassCheck"/>
		<module name="InterfaceIsTypeCheck"/>
		<module name="HideUtilityClassConstructorCheck"/>
		<module name="MutableExceptionCheck"/>
		<module name="InnerTypeLastCheck"/>
		<module name="OneTopLevelClassCheck"/>

		<!-- Coding -->
		<module name="CovariantEqualsCheck"/>
		<module name="EmptyStatementCheck"/>
		<module name="EqualsHashCodeCheck"/>
		<module name="InnerAssignmentCheck"/>
		<module name="SimplifyBooleanExpressionCheck"/>
		<module name="SimplifyBooleanReturnCheck"/>
		<module name="StringLiteralEqualityCheck"/>
		<module name="NestedForDepthCheck">
			<property name="max" value="3"/>
		</module>
		<module name="NestedIfDepthCheck">
			<property name="max" value="3"/>
		</module>
		<module name="NestedTryDepthCheck">
			<property name="max" value="3"/>
		</module>
		<module name="MultipleVariableDeclarationsCheck"/>
		<module name="RequireThisCheck">
			<property name="checkMethods" value="false"/>
			<property name="validateOnlyOverlapping" value="false"/>
		</module>
		<module name="OneStatementPerLineCheck"/>

		<!-- Imports -->
		<module name="AvoidStarImportCheck"/>
		<module name="AvoidStaticImportCheck">
			<property name="excludes" value="org.assertj.core.api.Assertions.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.Matchers.*, org.mockito.ArgumentMatchers.*, org.mockito.AdditionalMatchers.*, org.mockito.AdditionalAnswers.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*"/>
		</module>
		<module name="IllegalImportCheck"/>
		<module name="RedundantImportCheck"/>
		<module name="UnusedImportsCheck">
			<property name="processJavadoc" value="true"/>
		</module>
		<module name="ImportOrderCheck">
			<property name="groups" value="java,/^javax?\./,*,io.github.vpavic"/>
			<property name="ordered" value="true"/>
			<property name="separated" value="true"/>
			<property name="option" value="bottom"/>
			<property name="sortStaticImportsAlphabetically" value="true"/>
		</module>

		<!-- Javadoc Comments -->
		<!--<module name="JavadocTypeCheck">-->
			<!--<property name="scope" value="package"/>-->
			<!--<property name="authorFormat" value=".+\s.+"/>-->
		<!--</module>-->
		<!--<module name="JavadocMethodCheck">-->
			<!--<property name="allowMissingJavadoc" value="true"/>-->
		<!--</module>-->
		<!--<module name="JavadocVariableCheck">-->
			<!--<property name="scope" value="public"/>-->
		<!--</module>-->
		<!--<module name="JavadocStyleCheck">-->
			<!--<property name="checkEmptyJavadoc" value="true"/>-->
		<!--</module>-->
		<!--<module name="NonEmptyAtclauseDescriptionCheck"/>-->
		<!--<module name="JavadocTagContinuationIndentationCheck">-->
			<!--<property name="offset" value="0"/>-->
		<!--</module>-->
		<!--<module name="AtclauseOrderCheck">-->
			<!--<property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF"/>-->
			<!--<property name="tagOrder" value="@param, @author, @since, @see, @version, @serial, @deprecated"/>-->
		<!--</module>-->
		<!--<module name="AtclauseOrderCheck">-->
			<!--<property name="target" value="METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>-->
			<!--<property name="tagOrder" value="@param, @return, @throws, @since, @deprecated, @see"/>-->
		<!--</module>-->

		<!-- Miscellaneous -->
		<module name="CommentsIndentationCheck">
			<property name="tokens" value="BLOCK_COMMENT_BEGIN"/>
		</module>
		<module name="UpperEllCheck"/>
		<module name="ArrayTypeStyleCheck"/>
		<module name="OuterTypeFilenameCheck"/>

		<!-- Modifiers -->
		<module name="RedundantModifierCheck"/>

		<!-- Regexp -->
		<module name="RegexpSinglelineJavaCheck">
			<property name="format" value="^\t* +\t*\S"/>
			<property name="message" value="Line has leading space characters; indentation should be performed with tabs only."/>
			<property name="ignoreComments" value="true"/>
		</module>
		<module name="RegexpSinglelineJavaCheck">
			<property name="maximum" value="0"/>
			<property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)"/>
			<property name="message" value="Please use BDDMockto imports."/>
			<property name="ignoreComments" value="true"/>
		</module>
		<module name="RegexpSinglelineJavaCheck">
			<property name="maximum" value="0"/>
			<property name="format" value="org\.junit\.Assert\.assert"/>
			<property name="message" value="Please use AssertJ imports."/>
			<property name="ignoreComments" value="true"/>
		</module>
		<module name="RegexpCheck">
			<property name="format" value="[ \t]+$"/>
			<property name="illegalPattern" value="true"/>
			<property name="message" value="Trailing whitespace"/>
		</module>

		<!-- Whitespace -->
		<module name="GenericWhitespaceCheck"/>
		<module name="MethodParamPadCheck"/>
		<module name="NoWhitespaceAfterCheck" >
			<property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR"/>
		</module>
		<module name="NoWhitespaceBeforeCheck"/>
		<module name="ParenPadCheck"/>
		<module name="TypecastParenPadCheck"/>
		<module name="WhitespaceAfterCheck"/>
		<module name="WhitespaceAroundCheck"/>
 	</module>
</module>

<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module title = "Checker">

    <property title="charset" value="UTF-8"/>

    <property title="severity" value="error"/>

    <module title="FileTabCharacter">
        <property title="eachLine" value="true"/>
    </module>

    <module title="TreeWalker">

        <!-- Imports -->

        <module title="RedundantImport">
            <property title="severity" value="error"/>
        </module>

        <module title="AvoidStarImport">
            <property title="severity" value="error"/>
        </module>

        <!-- General Code Style -->

        <module title="LineLength">
            <property title="max" value="100"/>
            <property title="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>

        <module title="EmptyBlock">
            <property title="option" value="TEXT"/>
            <property title="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>

        <module title="EmptyCatchBlock">
            <property title="exceptionVariableName" value="expected"/>
        </module>

        <module title="LeftCurly">
            <property title="maxLineLength" value="100"/>
        </module>

        <module title="RightCurly">
            <property title="option" value="alone"/>
            <property title="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>

        <module title="RightCurly">
            <property title="option" value="same"/>
        </module>

        <module title="NoFinalizer"/>

        <module title="ArrayTypeStyle"/>

        <module title="ModifierOrder"/>

        <module title="Indentation">
            <property title="basicOffset" value="4"/>
            <property title="braceAdjustment" value="0"/>
            <property title="caseIndent" value="4"/>
            <property title="throwsIndent" value="4"/>
            <property title="lineWrappingIndentation" value="8"/>
            <property title="arrayInitIndent" value="2"/>
        </module>

        <!-- White Space -->

        <module title="GenericWhitespace">
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded"
                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>

        <module title="WhitespaceAround">
            <property title="allowEmptyConstructors" value="true"/>
            <property title="allowEmptyMethods" value="false"/>
            <property title="allowEmptyTypes" value="false"/>
            <property title="allowEmptyLoops" value="false"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
            <property title="severity" value="error"/>
        </module>

        <module title="WhitespaceAfter">
            <property title="tokens" value="COMMA, SEMI, TYPECAST"/>
        </module>

        <module title="NoWhitespaceBefore">
            <property title="tokens" value="SEMI, DOT, POST_DEC, POST_INC"/>
            <property title="allowLineBreaks" value="true"/>
        </module>

        <module title="NoWhitespaceAfter">
            <property title="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
            <property title="allowLineBreaks" value="true"/>
        </module>

        <!-- Naming -->

        <module title="PackageName">
            <property title="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="title.invalidPattern"
                     value="Package title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="MethodName">
            <property title="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="title.invalidPattern"
                     value="Method title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="TypeName">
            <message key="title.invalidPattern"
                     value="Type title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="MemberName">
            <property title="applyToPublic" value="false" />
            <property title="applyToPackage" value="false" />
            <property title="applyToProtected" value="false" />
            <property title="format" value="^m[A-Z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="title.invalidPattern"
                     value="Member title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="ParameterName">
            <property title="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="title.invalidPattern"
                     value="Parameter title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="LocalVariableName">
            <property title="tokens" value="VARIABLE_DEF"/>
            <property title="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property title="allowOneCharVarInForLoop" value="true"/>
            <message key="title.invalidPattern"
                     value="Local variable title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="ClassTypeParameterName">
            <property title="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="title.invalidPattern"
                     value="Class type title ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module title="MethodTypeParameterName">
            <property title="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="title.invalidPattern"
                     value="Method type title ''{0}'' must match pattern ''{1}''."/>
        </module>

    </module>

</module>
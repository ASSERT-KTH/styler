[
    ".classpath",
    ".project",
    ".settings",
    ".settings/org.eclipse.core.resources.prefs",
    ".settings/org.eclipse.jdt.core.prefs",
    ".settings/org.eclipse.m2e.core.prefs",
    "README.md",
    "bin",
    "bin/.gitignore",
    "bin/sp_embedding.jar",
    "data",
    "data/geoquery-2012-08-27",
    "data/geoquery-2012-08-27/cv-fold",
    "data/geoquery-2012-08-27/cv-fold/fold-0",
    "data/geoquery-2012-08-27/cv-fold/fold-0/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-0/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-1",
    "data/geoquery-2012-08-27/cv-fold/fold-1/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-1/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-2",
    "data/geoquery-2012-08-27/cv-fold/fold-2/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-2/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-3",
    "data/geoquery-2012-08-27/cv-fold/fold-3/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-3/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-4",
    "data/geoquery-2012-08-27/cv-fold/fold-4/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-4/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-5",
    "data/geoquery-2012-08-27/cv-fold/fold-5/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-5/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-6",
    "data/geoquery-2012-08-27/cv-fold/fold-6/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-6/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-7",
    "data/geoquery-2012-08-27/cv-fold/fold-7/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-7/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-8",
    "data/geoquery-2012-08-27/cv-fold/fold-8/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-8/train-N540",
    "data/geoquery-2012-08-27/cv-fold/fold-9",
    "data/geoquery-2012-08-27/cv-fold/fold-9/test-N60",
    "data/geoquery-2012-08-27/cv-fold/fold-9/train-N540",
    "data/geoquery-2012-08-27/cv-fold/train-0",
    "data/geoquery-2012-08-27/cv-fold/train-1",
    "data/geoquery-2012-08-27/cv-fold/train-2",
    "data/geoquery-2012-08-27/cv-fold/train-3",
    "data/geoquery-2012-08-27/cv-fold/train-4",
    "data/geoquery-2012-08-27/cv-fold/train-5",
    "data/geoquery-2012-08-27/cv-fold/train-6",
    "data/geoquery-2012-08-27/cv-fold/train-7",
    "data/geoquery-2012-08-27/cv-fold/train-8",
    "data/geoquery-2012-08-27/cv-fold/train-9",
    "data/geoquery-2012-08-27/splits",
    "data/geoquery-2012-08-27/splits/split-880",
    "data/geoquery-2012-08-27/splits/split-880/run-0",
    "data/geoquery-2012-08-27/splits/split-880/run-0/fold-0",
    "data/geoquery-2012-08-27/splits/split-880/run-0/fold-0/dev-N200",
    "data/geoquery-2012-08-27/splits/split-880/run-0/fold-0/dev-N400",
    "data/geoquery-2012-08-27/splits/split-880/run-0/fold-0/test",
    "data/geoquery-2012-08-27/splits/split-880/run-0/fold-0/train-N600",
    "data/geoquery",
    "data/geoquery/geoFunql-de.corpus",
    "data/geoquery/geoFunql-de.init.corpus",
    "data/geoquery/geoFunql-el.corpus",
    "data/geoquery/geoFunql-el.init.corpus",
    "data/geoquery/geoFunql-en.corpus",
    "data/geoquery/geoFunql-en.init.corpus",
    "data/geoquery/geoFunql-fa.corpus",
    "data/geoquery/geoFunql-fa.init.corpus",
    "data/geoquery/geoFunql-id.corpus",
    "data/geoquery/geoFunql-id.init.corpus",
    "data/geoquery/geoFunql-sv.corpus",
    "data/geoquery/geoFunql-sv.init.corpus",
    "data/geoquery/geoFunql-th.corpus",
    "data/geoquery/geoFunql-th.init.corpus",
    "data/geoquery/geoFunql-zh.corpus",
    "data/geoquery/geoFunql-zh.init.corpus",
    "data/hybridgrammar.txt",
    "embedding_neural_run.sh",
    "embedding_pretrain_run.sh",
    "eval",
    "eval/eval.pl",
    "eval/geobase.pl",
    "eval/geoquery.pl",
    "lib",
    "lib/commons-math3-3.6.1.jar",
    "lib/json-20140107.jar",
    "lib/zmq.jar",
    "neural_server",
    "neural_server/OneHot.lua",
    "neural_server/neural.sp.config",
    "neural_server/polyglot",
    "neural_server/polyglot/bintot7.lua",
    "neural_server/polyglot/pkl2txt.py",
    "neural_server/polyglot/polyglot.lua",
    "neural_server/polyglot/prepare_torch.sh",
    "neural_server/server.lua",
    "path_to_eval",
    "path_to_sicstus",
    "pom.xml",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/statnlp",
    "src/main/java/com/statnlp/commons",
    "src/main/java/com/statnlp/commons/AttributedWord.java",
    "src/main/java/com/statnlp/commons/Corpus.java",
    "src/main/java/com/statnlp/commons/FeatureArrayCache.java",
    "src/main/java/com/statnlp/commons/Identifiable.java",
    "src/main/java/com/statnlp/commons/IndexedHashMap.java",
    "src/main/java/com/statnlp/commons/StringUtil.java",
    "src/main/java/com/statnlp/commons/Utils.java",
    "src/main/java/com/statnlp/commons/Word.java",
    "src/main/java/com/statnlp/commons/WordUtil.java",
    "src/main/java/com/statnlp/commons/io",
    "src/main/java/com/statnlp/commons/io/RAWF.java",
    "src/main/java/com/statnlp/commons/ml",
    "src/main/java/com/statnlp/commons/ml/clustering",
    "src/main/java/com/statnlp/commons/ml/clustering/KMeans.java",
    "src/main/java/com/statnlp/commons/ml/opt",
    "src/main/java/com/statnlp/commons/ml/opt/GradientDescentOptimizer.java",
    "src/main/java/com/statnlp/commons/ml/opt/GradientDescentOptimizerFactory.java",
    "src/main/java/com/statnlp/commons/ml/opt/LBFGS.java",
    "src/main/java/com/statnlp/commons/ml/opt/LBFGSOptimizer.java",
    "src/main/java/com/statnlp/commons/ml/opt/LBFGSOptimizerFactory.java",
    "src/main/java/com/statnlp/commons/ml/opt/MathsVector.java",
    "src/main/java/com/statnlp/commons/ml/opt/Mcsrch.java",
    "src/main/java/com/statnlp/commons/ml/opt/Optimizer.java",
    "src/main/java/com/statnlp/commons/ml/opt/OptimizerFactory.java",
    "src/main/java/com/statnlp/commons/types",
    "src/main/java/com/statnlp/commons/types/AttWordToken.java",
    "src/main/java/com/statnlp/commons/types/DAG.java",
    "src/main/java/com/statnlp/commons/types/DAGNetwork.java",
    "src/main/java/com/statnlp/commons/types/DataPoint.java",
    "src/main/java/com/statnlp/commons/types/HiddenToken.java",
    "src/main/java/com/statnlp/commons/types/InputToken.java",
    "src/main/java/com/statnlp/commons/types/InputTokenArray.java",
    "src/main/java/com/statnlp/commons/types/Instance.java",
    "src/main/java/com/statnlp/commons/types/LinearChain.java",
    "src/main/java/com/statnlp/commons/types/LinkedArrayList.java",
    "src/main/java/com/statnlp/commons/types/OutputToken.java",
    "src/main/java/com/statnlp/commons/types/Segment.java",
    "src/main/java/com/statnlp/commons/types/Sentence.java",
    "src/main/java/com/statnlp/commons/types/SequencePair.java",
    "src/main/java/com/statnlp/commons/types/TextSpan.java",
    "src/main/java/com/statnlp/commons/types/Token.java",
    "src/main/java/com/statnlp/commons/types/TokenArray.java",
    "src/main/java/com/statnlp/commons/types/VectorWord.java",
    "src/main/java/com/statnlp/commons/types/WordToken.java",
    "src/main/java/com/statnlp/example",
    "src/main/java/com/statnlp/example/sp",
    "src/main/java/com/statnlp/example/sp/GeoqueryEvaluator.java",
    "src/main/java/com/statnlp/example/sp/HybridGrammar.java",
    "src/main/java/com/statnlp/example/sp/HybridGrammarReader.java",
    "src/main/java/com/statnlp/example/sp/HybridPattern.java",
    "src/main/java/com/statnlp/example/sp/InputStreamWriter.java",
    "src/main/java/com/statnlp/example/sp/SemTextDataManager.java",
    "src/main/java/com/statnlp/example/sp/SemTextFeatureManager_Discriminative.java",
    "src/main/java/com/statnlp/example/sp/SemTextInstance.java",
    "src/main/java/com/statnlp/example/sp/SemTextInstanceReader.java",
    "src/main/java/com/statnlp/example/sp/SemTextNetwork.java",
    "src/main/java/com/statnlp/example/sp/SemTextNetworkCompiler.java",
    "src/main/java/com/statnlp/example/sp/SemTextPriorInstance.java",
    "src/main/java/com/statnlp/example/sp/SemanticEmbedding.java",
    "src/main/java/com/statnlp/example/sp/SemanticForest.java",
    "src/main/java/com/statnlp/example/sp/SemanticForestNode.java",
    "src/main/java/com/statnlp/example/sp/SemanticType.java",
    "src/main/java/com/statnlp/example/sp/SemanticUnit.java",
    "src/main/java/com/statnlp/example/sp/TokenReader.java",
    "src/main/java/com/statnlp/example/sp/main",
    "src/main/java/com/statnlp/example/sp/main/SemTextExperimenter_Discriminative_Embedding.java",
    "src/main/java/com/statnlp/example/sp/main/SplitCVFolds.java",
    "src/main/java/com/statnlp/hybridnetworks",
    "src/main/java/com/statnlp/hybridnetworks/BinaryHeap.java",
    "src/main/java/com/statnlp/hybridnetworks/DiscriminativeNetworkModel.java",
    "src/main/java/com/statnlp/hybridnetworks/FeatureArray.java",
    "src/main/java/com/statnlp/hybridnetworks/FeatureManager.java",
    "src/main/java/com/statnlp/hybridnetworks/GenerativeNetworkModel.java",
    "src/main/java/com/statnlp/hybridnetworks/GlobalNetworkParam.java",
    "src/main/java/com/statnlp/hybridnetworks/HyperGraph.java",
    "src/main/java/com/statnlp/hybridnetworks/IndexPair.java",
    "src/main/java/com/statnlp/hybridnetworks/LocalNetworkDecoderThread.java",
    "src/main/java/com/statnlp/hybridnetworks/LocalNetworkLearnerThread.java",
    "src/main/java/com/statnlp/hybridnetworks/LocalNetworkParam.java",
    "src/main/java/com/statnlp/hybridnetworks/Network.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkCompiler.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkConfig.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkException.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkIDMapper.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkModel.java",
    "src/main/java/com/statnlp/hybridnetworks/NetworkOutputHandler.java",
    "src/main/java/com/statnlp/hybridnetworks/TableLookupNetwork.java",
    "src/main/java/com/statnlp/hybridnetworks/ValueIndexPair.java",
    "src/main/java/com/statnlp/neural",
    "src/main/java/com/statnlp/neural/NNCRFGlobalNetworkParam.java",
    "src/main/java/com/statnlp/neural/NNCRFInterface.java",
    "src/main/java/com/statnlp/neural/NeuralConfig.java",
    "src/main/java/com/statnlp/neural/NeuralConfigReader.java",
    "src/main/java/com/statnlp/neural/RemoteNN.java",
    "src/test",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/statnlp",
    "src/test/java/com/statnlp/InitWeightOptimizer.java",
    "src/test/java/com/statnlp/InitWeightOptimizerFactory.java",
    "src/test/java/com/statnlp/commons",
    "src/test/java/com/statnlp/commons/StringUtilTest.java",
    "src/test/java/com/statnlp/commons/ml",
    "src/test/java/com/statnlp/commons/ml/opt",
    "src/test/java/com/statnlp/commons/ml/opt/LBFGSOptimizerTest.java",
    "target",
    "target/classes",
    "target/classes/com",
    "target/classes/com/statnlp",
    "target/classes/com/statnlp/commons",
    "target/classes/com/statnlp/commons/AttributedWord.class",
    "target/classes/com/statnlp/commons/AttributedWord.java",
    "target/classes/com/statnlp/commons/Corpus.class",
    "target/classes/com/statnlp/commons/Corpus.java",
    "target/classes/com/statnlp/commons/FeatureArrayCache.class",
    "target/classes/com/statnlp/commons/FeatureArrayCache.java",
    "target/classes/com/statnlp/commons/Identifiable.class",
    "target/classes/com/statnlp/commons/Identifiable.java",
    "target/classes/com/statnlp/commons/IndexedHashMap.class",
    "target/classes/com/statnlp/commons/IndexedHashMap.java",
    "target/classes/com/statnlp/commons/StringUtil.class",
    "target/classes/com/statnlp/commons/StringUtil.java",
    "target/classes/com/statnlp/commons/Utils.class",
    "target/classes/com/statnlp/commons/Utils.java",
    "target/classes/com/statnlp/commons/Word.class",
    "target/classes/com/statnlp/commons/Word.java",
    "target/classes/com/statnlp/commons/WordUtil.class",
    "target/classes/com/statnlp/commons/WordUtil.java",
    "target/classes/com/statnlp/commons/io",
    "target/classes/com/statnlp/commons/io/RAWF.class",
    "target/classes/com/statnlp/commons/io/RAWF.java",
    "target/classes/com/statnlp/commons/ml",
    "target/classes/com/statnlp/commons/ml/clustering",
    "target/classes/com/statnlp/commons/ml/clustering/KMeans.class",
    "target/classes/com/statnlp/commons/ml/clustering/KMeans.java",
    "target/classes/com/statnlp/commons/ml/opt",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizer$AdaptiveMethod.class",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizer$AdaptiveStrategy.class",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizer.class",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizer.java",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizerFactory.class",
    "target/classes/com/statnlp/commons/ml/opt/GradientDescentOptimizerFactory.java",
    "target/classes/com/statnlp/commons/ml/opt/LBFGS$ExceptionWithIflag.class",
    "target/classes/com/statnlp/commons/ml/opt/LBFGS.class",
    "target/classes/com/statnlp/commons/ml/opt/LBFGS.java",
    "target/classes/com/statnlp/commons/ml/opt/LBFGSOptimizer.class",
    "target/classes/com/statnlp/commons/ml/opt/LBFGSOptimizer.java",
    "target/classes/com/statnlp/commons/ml/opt/LBFGSOptimizerFactory.class",
    "target/classes/com/statnlp/commons/ml/opt/LBFGSOptimizerFactory.java",
    "target/classes/com/statnlp/commons/ml/opt/MathsVector.class",
    "target/classes/com/statnlp/commons/ml/opt/MathsVector.java",
    "target/classes/com/statnlp/commons/ml/opt/Mcsrch.class",
    "target/classes/com/statnlp/commons/ml/opt/Mcsrch.java",
    "target/classes/com/statnlp/commons/ml/opt/Optimizer.class",
    "target/classes/com/statnlp/commons/ml/opt/Optimizer.java",
    "target/classes/com/statnlp/commons/ml/opt/OptimizerFactory.class",
    "target/classes/com/statnlp/commons/ml/opt/OptimizerFactory.java",
    "target/classes/com/statnlp/commons/types",
    "target/classes/com/statnlp/commons/types/AttWordToken.class",
    "target/classes/com/statnlp/commons/types/AttWordToken.java",
    "target/classes/com/statnlp/commons/types/DAG.class",
    "target/classes/com/statnlp/commons/types/DAG.java",
    "target/classes/com/statnlp/commons/types/DAGNetwork.class",
    "target/classes/com/statnlp/commons/types/DAGNetwork.java",
    "target/classes/com/statnlp/commons/types/DataPoint.class",
    "target/classes/com/statnlp/commons/types/DataPoint.java",
    "target/classes/com/statnlp/commons/types/HiddenToken.class",
    "target/classes/com/statnlp/commons/types/HiddenToken.java",
    "target/classes/com/statnlp/commons/types/InputToken.class",
    "target/classes/com/statnlp/commons/types/InputToken.java",
    "target/classes/com/statnlp/commons/types/InputTokenArray.class",
    "target/classes/com/statnlp/commons/types/InputTokenArray.java",
    "target/classes/com/statnlp/commons/types/Instance.class",
    "target/classes/com/statnlp/commons/types/Instance.java",
    "target/classes/com/statnlp/commons/types/LinearChain.class",
    "target/classes/com/statnlp/commons/types/LinearChain.java",
    "target/classes/com/statnlp/commons/types/LinkedArrayList.class",
    "target/classes/com/statnlp/commons/types/LinkedArrayList.java",
    "target/classes/com/statnlp/commons/types/OutputToken.class",
    "target/classes/com/statnlp/commons/types/OutputToken.java",
    "target/classes/com/statnlp/commons/types/Segment.class",
    "target/classes/com/statnlp/commons/types/Segment.java",
    "target/classes/com/statnlp/commons/types/Sentence.class",
    "target/classes/com/statnlp/commons/types/Sentence.java",
    "target/classes/com/statnlp/commons/types/SequencePair.class",
    "target/classes/com/statnlp/commons/types/SequencePair.java",
    "target/classes/com/statnlp/commons/types/TextSpan.class",
    "target/classes/com/statnlp/commons/types/TextSpan.java",
    "target/classes/com/statnlp/commons/types/Token.class",
    "target/classes/com/statnlp/commons/types/Token.java",
    "target/classes/com/statnlp/commons/types/TokenArray.class",
    "target/classes/com/statnlp/commons/types/TokenArray.java",
    "target/classes/com/statnlp/commons/types/VectorWord.class",
    "target/classes/com/statnlp/commons/types/VectorWord.java",
    "target/classes/com/statnlp/commons/types/WordToken.class",
    "target/classes/com/statnlp/commons/types/WordToken.java",
    "target/classes/com/statnlp/example",
    "target/classes/com/statnlp/example/sp",
    "target/classes/com/statnlp/example/sp/GeoqueryEvaluator.class",
    "target/classes/com/statnlp/example/sp/GeoqueryEvaluator.java",
    "target/classes/com/statnlp/example/sp/HybridGrammar.class",
    "target/classes/com/statnlp/example/sp/HybridGrammar.java",
    "target/classes/com/statnlp/example/sp/HybridGrammarReader.class",
    "target/classes/com/statnlp/example/sp/HybridGrammarReader.java",
    "target/classes/com/statnlp/example/sp/HybridPattern.class",
    "target/classes/com/statnlp/example/sp/HybridPattern.java",
    "target/classes/com/statnlp/example/sp/InputStreamWriter.class",
    "target/classes/com/statnlp/example/sp/InputStreamWriter.java",
    "target/classes/com/statnlp/example/sp/SemTextDataManager.class",
    "target/classes/com/statnlp/example/sp/SemTextDataManager.java",
    "target/classes/com/statnlp/example/sp/SemTextFeatureManager_Discriminative$FEATURE_TYPE.class",
    "target/classes/com/statnlp/example/sp/SemTextFeatureManager_Discriminative.class",
    "target/classes/com/statnlp/example/sp/SemTextFeatureManager_Discriminative.java",
    "target/classes/com/statnlp/example/sp/SemTextInstance.class",
    "target/classes/com/statnlp/example/sp/SemTextInstance.java",
    "target/classes/com/statnlp/example/sp/SemTextInstanceReader.class",
    "target/classes/com/statnlp/example/sp/SemTextInstanceReader.java",
    "target/classes/com/statnlp/example/sp/SemTextNetwork.class",
    "target/classes/com/statnlp/example/sp/SemTextNetwork.java",
    "target/classes/com/statnlp/example/sp/SemTextNetworkCompiler.class",
    "target/classes/com/statnlp/example/sp/SemTextNetworkCompiler.java",
    "target/classes/com/statnlp/example/sp/SemTextPriorInstance.class",
    "target/classes/com/statnlp/example/sp/SemTextPriorInstance.java",
    "target/classes/com/statnlp/example/sp/SemanticEmbedding.class",
    "target/classes/com/statnlp/example/sp/SemanticEmbedding.java",
    "target/classes/com/statnlp/example/sp/SemanticForest.class",
    "target/classes/com/statnlp/example/sp/SemanticForest.java",
    "target/classes/com/statnlp/example/sp/SemanticForestNode.class",
    "target/classes/com/statnlp/example/sp/SemanticForestNode.java",
    "target/classes/com/statnlp/example/sp/SemanticType.class",
    "target/classes/com/statnlp/example/sp/SemanticType.java",
    "target/classes/com/statnlp/example/sp/SemanticUnit.class",
    "target/classes/com/statnlp/example/sp/SemanticUnit.java",
    "target/classes/com/statnlp/example/sp/TokenReader.class",
    "target/classes/com/statnlp/example/sp/TokenReader.java",
    "target/classes/com/statnlp/example/sp/main",
    "target/classes/com/statnlp/example/sp/main/SemTextExperimenter_Discriminative_Embedding.class",
    "target/classes/com/statnlp/example/sp/main/SemTextExperimenter_Discriminative_Embedding.java",
    "target/classes/com/statnlp/example/sp/main/SplitCVFolds.class",
    "target/classes/com/statnlp/example/sp/main/SplitCVFolds.java",
    "target/classes/com/statnlp/hybridnetworks",
    "target/classes/com/statnlp/hybridnetworks/BinaryHeap.class",
    "target/classes/com/statnlp/hybridnetworks/BinaryHeap.java",
    "target/classes/com/statnlp/hybridnetworks/DiscriminativeNetworkModel.class",
    "target/classes/com/statnlp/hybridnetworks/DiscriminativeNetworkModel.java",
    "target/classes/com/statnlp/hybridnetworks/FeatureArray.class",
    "target/classes/com/statnlp/hybridnetworks/FeatureArray.java",
    "target/classes/com/statnlp/hybridnetworks/FeatureManager.class",
    "target/classes/com/statnlp/hybridnetworks/FeatureManager.java",
    "target/classes/com/statnlp/hybridnetworks/GenerativeNetworkModel.class",
    "target/classes/com/statnlp/hybridnetworks/GenerativeNetworkModel.java",
    "target/classes/com/statnlp/hybridnetworks/GlobalNetworkParam.class",
    "target/classes/com/statnlp/hybridnetworks/GlobalNetworkParam.java",
    "target/classes/com/statnlp/hybridnetworks/HyperGraph.class",
    "target/classes/com/statnlp/hybridnetworks/HyperGraph.java",
    "target/classes/com/statnlp/hybridnetworks/IndexPair.class",
    "target/classes/com/statnlp/hybridnetworks/IndexPair.java",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkDecoderThread.class",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkDecoderThread.java",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkLearnerThread.class",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkLearnerThread.java",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkParam.class",
    "target/classes/com/statnlp/hybridnetworks/LocalNetworkParam.java",
    "target/classes/com/statnlp/hybridnetworks/Network$NODE_TYPE.class",
    "target/classes/com/statnlp/hybridnetworks/Network.class",
    "target/classes/com/statnlp/hybridnetworks/Network.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkCompiler$InstanceInfo.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkCompiler.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkCompiler.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkConfig$ModelType.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkConfig.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkConfig.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkException.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkException.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkIDMapper.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkIDMapper.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkModel.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkModel.java",
    "target/classes/com/statnlp/hybridnetworks/NetworkOutputHandler.class",
    "target/classes/com/statnlp/hybridnetworks/NetworkOutputHandler.java",
    "target/classes/com/statnlp/hybridnetworks/TableLookupNetwork.class",
    "target/classes/com/statnlp/hybridnetworks/TableLookupNetwork.java",
    "target/classes/com/statnlp/hybridnetworks/ValueIndexPair.class",
    "target/classes/com/statnlp/hybridnetworks/ValueIndexPair.java",
    "target/classes/com/statnlp/neural",
    "target/classes/com/statnlp/neural/NNCRFGlobalNetworkParam.class",
    "target/classes/com/statnlp/neural/NNCRFGlobalNetworkParam.java",
    "target/classes/com/statnlp/neural/NNCRFInterface.class",
    "target/classes/com/statnlp/neural/NNCRFInterface.java",
    "target/classes/com/statnlp/neural/NeuralConfig.class",
    "target/classes/com/statnlp/neural/NeuralConfig.java",
    "target/classes/com/statnlp/neural/NeuralConfigReader.class",
    "target/classes/com/statnlp/neural/NeuralConfigReader.java",
    "target/classes/com/statnlp/neural/RemoteNN.class",
    "target/classes/com/statnlp/neural/RemoteNN.java",
    "target/test-classes",
    "target/test-classes/com",
    "target/test-classes/com/statnlp",
    "target/test-classes/com/statnlp/InitWeightOptimizer.class",
    "target/test-classes/com/statnlp/InitWeightOptimizerFactory.class",
    "target/test-classes/com/statnlp/commons",
    "target/test-classes/com/statnlp/commons/StringUtilTest.class",
    "target/test-classes/com/statnlp/commons/ml",
    "target/test-classes/com/statnlp/commons/ml/opt",
    "target/test-classes/com/statnlp/commons/ml/opt/LBFGSOptimizerTest.class"
]
[
    ".classpath",
    ".gitignore",
    ".idea",
    ".idea/.name",
    ".idea/codeStyleSettings.xml",
    ".idea/compiler.xml",
    ".idea/vcs.xml",
    ".project",
    "LICENSE",
    "README.md",
    "build.gradle",
    "cracking-the-coding-interview",
    "cracking-the-coding-interview/.classpath",
    "cracking-the-coding-interview/.project",
    "cracking-the-coding-interview/build.gradle",
    "cracking-the-coding-interview/gradle",
    "cracking-the-coding-interview/gradle/wrapper",
    "cracking-the-coding-interview/gradle/wrapper/gradle-wrapper.jar",
    "cracking-the-coding-interview/gradle/wrapper/gradle-wrapper.properties",
    "cracking-the-coding-interview/gradlew",
    "cracking-the-coding-interview/gradlew.bat",
    "cracking-the-coding-interview/input_files",
    "cracking-the-coding-interview/input_files/chapter_1",
    "cracking-the-coding-interview/input_files/chapter_1/check_permutation",
    "cracking-the-coding-interview/input_files/chapter_1/check_permutation/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/one_away",
    "cracking-the-coding-interview/input_files/chapter_1/one_away/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/palindrome_permutation",
    "cracking-the-coding-interview/input_files/chapter_1/palindrome_permutation/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/rotate_matrix",
    "cracking-the-coding-interview/input_files/chapter_1/rotate_matrix/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/string_compression",
    "cracking-the-coding-interview/input_files/chapter_1/string_compression/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/string_rotation",
    "cracking-the-coding-interview/input_files/chapter_1/string_rotation/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/string_unique",
    "cracking-the-coding-interview/input_files/chapter_1/string_unique/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/urlify",
    "cracking-the-coding-interview/input_files/chapter_1/urlify/test_case",
    "cracking-the-coding-interview/input_files/chapter_1/zero_matrix",
    "cracking-the-coding-interview/input_files/chapter_1/zero_matrix/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_1/zero_matrix/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_1/zero_matrix/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_10",
    "cracking-the-coding-interview/input_files/chapter_10/peaks_and_valleys",
    "cracking-the-coding-interview/input_files/chapter_10/peaks_and_valleys/test_case",
    "cracking-the-coding-interview/input_files/chapter_10/sort_stream",
    "cracking-the-coding-interview/input_files/chapter_10/sort_stream/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_10/sort_stream/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_10/sorted_merge",
    "cracking-the-coding-interview/input_files/chapter_10/sorted_merge/test_case",
    "cracking-the-coding-interview/input_files/chapter_10/sorted_search_no_size",
    "cracking-the-coding-interview/input_files/chapter_10/sorted_search_no_size/test_case",
    "cracking-the-coding-interview/input_files/chapter_10/sparse_search",
    "cracking-the-coding-interview/input_files/chapter_10/sparse_search/test_case",
    "cracking-the-coding-interview/input_files/chapter_2",
    "cracking-the-coding-interview/input_files/chapter_2/alternate_linking",
    "cracking-the-coding-interview/input_files/chapter_2/delete_middle",
    "cracking-the-coding-interview/input_files/chapter_2/detect_loops",
    "cracking-the-coding-interview/input_files/chapter_2/intersection",
    "cracking-the-coding-interview/input_files/chapter_2/kth_to_last",
    "cracking-the-coding-interview/input_files/chapter_2/kth_to_last/test_case",
    "cracking-the-coding-interview/input_files/chapter_2/palindrome",
    "cracking-the-coding-interview/input_files/chapter_2/partition",
    "cracking-the-coding-interview/input_files/chapter_2/remove_duplicates",
    "cracking-the-coding-interview/input_files/chapter_2/remove_duplicates/test_case",
    "cracking-the-coding-interview/input_files/chapter_2/reverse_linked_list",
    "cracking-the-coding-interview/input_files/chapter_2/sum_lists",
    "cracking-the-coding-interview/input_files/chapter_3",
    "cracking-the-coding-interview/input_files/chapter_3/animal_shelter",
    "cracking-the-coding-interview/input_files/chapter_3/queue_via_stacks",
    "cracking-the-coding-interview/input_files/chapter_3/set_of_plates",
    "cracking-the-coding-interview/input_files/chapter_3/set_of_plates_rollover",
    "cracking-the-coding-interview/input_files/chapter_3/sort_stack",
    "cracking-the-coding-interview/input_files/chapter_3/stack_min",
    "cracking-the-coding-interview/input_files/chapter_3/stack_via_queues",
    "cracking-the-coding-interview/input_files/chapter_3/three_in_one",
    "cracking-the-coding-interview/input_files/chapter_4",
    "cracking-the-coding-interview/input_files/chapter_4/bst_sequences",
    "cracking-the-coding-interview/input_files/chapter_4/build_order",
    "cracking-the-coding-interview/input_files/chapter_4/check_balanced",
    "cracking-the-coding-interview/input_files/chapter_4/check_subtree",
    "cracking-the-coding-interview/input_files/chapter_4/common_ancestor",
    "cracking-the-coding-interview/input_files/chapter_4/list_of_depths",
    "cracking-the-coding-interview/input_files/chapter_4/minimal_tree",
    "cracking-the-coding-interview/input_files/chapter_4/paths_with_sum",
    "cracking-the-coding-interview/input_files/chapter_4/random_node_binary_tree",
    "cracking-the-coding-interview/input_files/chapter_4/random_node_bst",
    "cracking-the-coding-interview/input_files/chapter_4/route_between_nodes",
    "cracking-the-coding-interview/input_files/chapter_4/successor",
    "cracking-the-coding-interview/input_files/chapter_4/validate_bst",
    "cracking-the-coding-interview/input_files/chapter_5",
    "cracking-the-coding-interview/input_files/chapter_5/binary_string",
    "cracking-the-coding-interview/input_files/chapter_5/binary_string/test_case",
    "cracking-the-coding-interview/input_files/chapter_5/conversion",
    "cracking-the-coding-interview/input_files/chapter_5/conversion/test_case",
    "cracking-the-coding-interview/input_files/chapter_5/debugger",
    "cracking-the-coding-interview/input_files/chapter_5/debugger/test_case",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line/test_case_4",
    "cracking-the-coding-interview/input_files/chapter_5/draw_line/test_case_5",
    "cracking-the-coding-interview/input_files/chapter_5/flip_bit_to_win",
    "cracking-the-coding-interview/input_files/chapter_5/flip_bit_to_win/test_case",
    "cracking-the-coding-interview/input_files/chapter_5/insertion",
    "cracking-the-coding-interview/input_files/chapter_5/insertion/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_5/insertion/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_5/insertion/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_5/next_number",
    "cracking-the-coding-interview/input_files/chapter_5/next_number/test_case",
    "cracking-the-coding-interview/input_files/chapter_5/pairwise_swap",
    "cracking-the-coding-interview/input_files/chapter_5/pairwise_swap/test_case",
    "cracking-the-coding-interview/input_files/chapter_8",
    "cracking-the-coding-interview/input_files/chapter_8/boolean_evaluation",
    "cracking-the-coding-interview/input_files/chapter_8/boolean_evaluation/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/coins",
    "cracking-the-coding-interview/input_files/chapter_8/coins/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/magic_index",
    "cracking-the-coding-interview/input_files/chapter_8/magic_index/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/color_mappings",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/input_matrix",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_8/paint_fill/test_case_4",
    "cracking-the-coding-interview/input_files/chapter_8/parens",
    "cracking-the-coding-interview/input_files/chapter_8/parens/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_with_dups",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_with_dups/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_with_dups/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_with_dups/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_without_dups",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_without_dups/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_8/permutations_without_dups/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_8/power_set",
    "cracking-the-coding-interview/input_files/chapter_8/power_set/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/recursive_multiply",
    "cracking-the-coding-interview/input_files/chapter_8/recursive_multiply/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/robot_in_a_grid",
    "cracking-the-coding-interview/input_files/chapter_8/robot_in_a_grid/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_8/robot_in_a_grid/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_8/robot_in_a_grid/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_8/stack_of_boxes",
    "cracking-the-coding-interview/input_files/chapter_8/stack_of_boxes/test_case_1",
    "cracking-the-coding-interview/input_files/chapter_8/stack_of_boxes/test_case_2",
    "cracking-the-coding-interview/input_files/chapter_8/stack_of_boxes/test_case_3",
    "cracking-the-coding-interview/input_files/chapter_8/towers_of_hanoi",
    "cracking-the-coding-interview/input_files/chapter_8/towers_of_hanoi/test_case",
    "cracking-the-coding-interview/input_files/chapter_8/triple_step",
    "cracking-the-coding-interview/input_files/chapter_8/triple_step/test_case",
    "cracking-the-coding-interview/src",
    "cracking-the-coding-interview/src/chapter_1",
    "cracking-the-coding-interview/src/chapter_1/CheckPermutation.java",
    "cracking-the-coding-interview/src/chapter_1/OneAway.java",
    "cracking-the-coding-interview/src/chapter_1/PalindromePermutation.java",
    "cracking-the-coding-interview/src/chapter_1/RotateMatrix.java",
    "cracking-the-coding-interview/src/chapter_1/StringCompression.java",
    "cracking-the-coding-interview/src/chapter_1/StringRotation.java",
    "cracking-the-coding-interview/src/chapter_1/StringUnique.java",
    "cracking-the-coding-interview/src/chapter_1/URLify.java",
    "cracking-the-coding-interview/src/chapter_1/ZeroMatrix.java",
    "cracking-the-coding-interview/src/chapter_10",
    "cracking-the-coding-interview/src/chapter_10/GroupAnagrams.java",
    "cracking-the-coding-interview/src/chapter_10/Listy.java",
    "cracking-the-coding-interview/src/chapter_10/PeaksAndValleys.java",
    "cracking-the-coding-interview/src/chapter_10/SearchInRotatedArray.java",
    "cracking-the-coding-interview/src/chapter_10/SortStream.java",
    "cracking-the-coding-interview/src/chapter_10/SortedMerge.java",
    "cracking-the-coding-interview/src/chapter_10/SortedSearchNoSize.java",
    "cracking-the-coding-interview/src/chapter_10/SparseSearch.java",
    "cracking-the-coding-interview/src/chapter_10/TreeNodeWithRank.java",
    "cracking-the-coding-interview/src/chapter_2",
    "cracking-the-coding-interview/src/chapter_2/DeleteMiddleNode.java",
    "cracking-the-coding-interview/src/chapter_2/Intersection.java",
    "cracking-the-coding-interview/src/chapter_2/KthToLast.java",
    "cracking-the-coding-interview/src/chapter_2/LoopDetection.java",
    "cracking-the-coding-interview/src/chapter_2/Palindrome.java",
    "cracking-the-coding-interview/src/chapter_2/Partition.java",
    "cracking-the-coding-interview/src/chapter_2/RemoveDuplicates.java",
    "cracking-the-coding-interview/src/chapter_2/SumLists.java",
    "cracking-the-coding-interview/src/chapter_2/SumListsForward.java",
    "cracking-the-coding-interview/src/chapter_2/additional",
    "cracking-the-coding-interview/src/chapter_2/additional/AlternateLinking.java",
    "cracking-the-coding-interview/src/chapter_2/additional/ReverseLinkedList.java",
    "cracking-the-coding-interview/src/chapter_3",
    "cracking-the-coding-interview/src/chapter_3/AnimalShelter.java",
    "cracking-the-coding-interview/src/chapter_3/QueueViaStacks.java",
    "cracking-the-coding-interview/src/chapter_3/SetOfPlates.java",
    "cracking-the-coding-interview/src/chapter_3/SetOfPlatesRollover.java",
    "cracking-the-coding-interview/src/chapter_3/SortStack.java",
    "cracking-the-coding-interview/src/chapter_3/StackMin.java",
    "cracking-the-coding-interview/src/chapter_3/ThreeinOne.java",
    "cracking-the-coding-interview/src/chapter_3/additional",
    "cracking-the-coding-interview/src/chapter_3/additional/MyStack.java",
    "cracking-the-coding-interview/src/chapter_3/additional/MyStack2.java",
    "cracking-the-coding-interview/src/chapter_3/additional/StackviaQueues.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/Animal.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/Cat.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/CustomStackMin.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/Dog.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/FixedSizeStack.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/MultiStack.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/MyQueue.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/SetOfStacks.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/SetOfStacksRollover.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/Shelter.java",
    "cracking-the-coding-interview/src/chapter_3/stack_queue/TwoWayStack.java",
    "cracking-the-coding-interview/src/chapter_4",
    "cracking-the-coding-interview/src/chapter_4/BSTSequences.java",
    "cracking-the-coding-interview/src/chapter_4/BuildOrder.java",
    "cracking-the-coding-interview/src/chapter_4/CheckBalanced.java",
    "cracking-the-coding-interview/src/chapter_4/CheckSubTree.java",
    "cracking-the-coding-interview/src/chapter_4/CommonAncestor.java",
    "cracking-the-coding-interview/src/chapter_4/ListOfDepths.java",
    "cracking-the-coding-interview/src/chapter_4/MinimalTree.java",
    "cracking-the-coding-interview/src/chapter_4/PathsWithSum.java",
    "cracking-the-coding-interview/src/chapter_4/RandomNodeBST.java",
    "cracking-the-coding-interview/src/chapter_4/RandomNodeBinaryTree.java",
    "cracking-the-coding-interview/src/chapter_4/RouteBetweenNodes.java",
    "cracking-the-coding-interview/src/chapter_4/Successor.java",
    "cracking-the-coding-interview/src/chapter_4/ValidateBST.java",
    "cracking-the-coding-interview/src/chapter_4/tree_graph",
    "cracking-the-coding-interview/src/chapter_4/tree_graph/BSTRandom.java",
    "cracking-the-coding-interview/src/chapter_4/tree_graph/BinaryTreeRandom.java",
    "cracking-the-coding-interview/src/chapter_5",
    "cracking-the-coding-interview/src/chapter_5/BinaryString.java",
    "cracking-the-coding-interview/src/chapter_5/Conversion.java",
    "cracking-the-coding-interview/src/chapter_5/Debugger.java",
    "cracking-the-coding-interview/src/chapter_5/DrawLine.java",
    "cracking-the-coding-interview/src/chapter_5/FlipBitToWin.java",
    "cracking-the-coding-interview/src/chapter_5/Insertion.java",
    "cracking-the-coding-interview/src/chapter_5/NextNumber.java",
    "cracking-the-coding-interview/src/chapter_5/PairwiseSwap.java",
    "cracking-the-coding-interview/src/chapter_8",
    "cracking-the-coding-interview/src/chapter_8/BalancedBrackets.java",
    "cracking-the-coding-interview/src/chapter_8/BooleanEvaluation.java",
    "cracking-the-coding-interview/src/chapter_8/Box.java",
    "cracking-the-coding-interview/src/chapter_8/Coins.java",
    "cracking-the-coding-interview/src/chapter_8/Color.java",
    "cracking-the-coding-interview/src/chapter_8/EightQueens.java",
    "cracking-the-coding-interview/src/chapter_8/MagicIndex.java",
    "cracking-the-coding-interview/src/chapter_8/PaintFill.java",
    "cracking-the-coding-interview/src/chapter_8/Parens.java",
    "cracking-the-coding-interview/src/chapter_8/PermutationsWithDups.java",
    "cracking-the-coding-interview/src/chapter_8/PermutationsWithoutDups.java",
    "cracking-the-coding-interview/src/chapter_8/Point.java",
    "cracking-the-coding-interview/src/chapter_8/PowerSet.java",
    "cracking-the-coding-interview/src/chapter_8/RecursiveMultiply.java",
    "cracking-the-coding-interview/src/chapter_8/RobotInAGrid.java",
    "cracking-the-coding-interview/src/chapter_8/RobotInAGrid2.java",
    "cracking-the-coding-interview/src/chapter_8/StackOfBoxes.java",
    "cracking-the-coding-interview/src/chapter_8/TowersOfHanoi.java",
    "cracking-the-coding-interview/src/chapter_8/TripleStep.java",
    "cracking-the-coding-interview/src/chapter_8/additional",
    "cracking-the-coding-interview/src/chapter_8/additional/CombinationsWithDups.java",
    "cracking-the-coding-interview/src/chapter_8/additional/NQueens.java",
    "cracking-the-coding-interview/src/util",
    "cracking-the-coding-interview/src/util/InputUtil.java",
    "cracking-the-coding-interview/src/util/TimerUtil.java",
    "cracking-the-coding-interview/test",
    "cracking-the-coding-interview/test/chapter_1",
    "cracking-the-coding-interview/test/chapter_1/TestCheckPermutation.java",
    "cracking-the-coding-interview/test/chapter_1/TestOneAway.java",
    "cracking-the-coding-interview/test/chapter_1/TestPalindromePermutation.java",
    "cracking-the-coding-interview/test/chapter_1/TestRotateMatrix.java",
    "cracking-the-coding-interview/test/chapter_1/TestStringCompression.java",
    "cracking-the-coding-interview/test/chapter_1/TestStringRotation.java",
    "cracking-the-coding-interview/test/chapter_1/TestStringUnique.java",
    "cracking-the-coding-interview/test/chapter_1/TestURLify.java",
    "cracking-the-coding-interview/test/chapter_1/TestZeroMatrix.java",
    "cracking-the-coding-interview/test/chapter_10",
    "cracking-the-coding-interview/test/chapter_10/TestPeaksAndValleys.java",
    "cracking-the-coding-interview/test/chapter_10/TestSortStream.java",
    "cracking-the-coding-interview/test/chapter_10/TestSortedMerge.java",
    "cracking-the-coding-interview/test/chapter_10/TestSortedSearchNoSize.java",
    "cracking-the-coding-interview/test/chapter_10/TestSparseSearch.java",
    "cracking-the-coding-interview/test/chapter_2",
    "cracking-the-coding-interview/test/chapter_2/TestKthToLast.java",
    "cracking-the-coding-interview/test/chapter_2/TestRemoveDuplicates.java",
    "cracking-the-coding-interview/test/chapter_5",
    "cracking-the-coding-interview/test/chapter_5/TestBinaryString.java",
    "cracking-the-coding-interview/test/chapter_5/TestConversion.java",
    "cracking-the-coding-interview/test/chapter_5/TestDebugger.java",
    "cracking-the-coding-interview/test/chapter_5/TestDrawLine.java",
    "cracking-the-coding-interview/test/chapter_5/TestFlipBitToWin.java",
    "cracking-the-coding-interview/test/chapter_5/TestInsertion.java",
    "cracking-the-coding-interview/test/chapter_5/TestNextNumber.java",
    "cracking-the-coding-interview/test/chapter_5/TestPairwiseSwap.java",
    "cracking-the-coding-interview/test/chapter_8",
    "cracking-the-coding-interview/test/chapter_8/TestBooleanEvaluation.java",
    "cracking-the-coding-interview/test/chapter_8/TestCoins.java",
    "cracking-the-coding-interview/test/chapter_8/TestEightQueens.java",
    "cracking-the-coding-interview/test/chapter_8/TestMagicIndex.java",
    "cracking-the-coding-interview/test/chapter_8/TestPaintFill.java",
    "cracking-the-coding-interview/test/chapter_8/TestParens.java",
    "cracking-the-coding-interview/test/chapter_8/TestPermutationsWithDups.java",
    "cracking-the-coding-interview/test/chapter_8/TestPermutationsWithoutDups.java",
    "cracking-the-coding-interview/test/chapter_8/TestPowerSet.java",
    "cracking-the-coding-interview/test/chapter_8/TestRecursiveMultiply.java",
    "cracking-the-coding-interview/test/chapter_8/TestRobotInAGrid.java",
    "cracking-the-coding-interview/test/chapter_8/TestRobotInAGrid2.java",
    "cracking-the-coding-interview/test/chapter_8/TestStackOfBoxes.java",
    "cracking-the-coding-interview/test/chapter_8/TestTowersOfHanoi.java",
    "cracking-the-coding-interview/test/chapter_8/TestTripleStep.java",
    "cracking-the-coding-interview/test/chapter_8/additional",
    "cracking-the-coding-interview/test/chapter_8/additional/TestCombinationsWithDups.java",
    "cracking-the-coding-interview/test/chapter_8/additional/TestNQueens.java",
    "datastructures",
    "datastructures/.classpath",
    "datastructures/.project",
    "datastructures/build.gradle",
    "datastructures/gradle",
    "datastructures/gradle/wrapper",
    "datastructures/gradle/wrapper/gradle-wrapper.jar",
    "datastructures/gradle/wrapper/gradle-wrapper.properties",
    "datastructures/gradlew",
    "datastructures/gradlew.bat",
    "datastructures/input_files",
    "datastructures/input_files/binary_heap",
    "datastructures/input_files/binary_heap/test_case_1",
    "datastructures/input_files/binary_heap/test_case_2",
    "datastructures/input_files/disjoint_sets",
    "datastructures/input_files/disjoint_sets/test_case_1",
    "datastructures/input_files/disjoint_sets/test_case_2",
    "datastructures/input_files/disjoint_sets/test_case_3",
    "datastructures/input_files/max_priority_queue",
    "datastructures/input_files/max_priority_queue/test_case_1",
    "datastructures/input_files/max_priority_queue/test_case_2",
    "datastructures/input_files/min_priority_queue",
    "datastructures/input_files/min_priority_queue/test_case_1",
    "datastructures/input_files/min_priority_queue/test_case_2",
    "datastructures/input_files/test_binary_heap",
    "datastructures/input_files/test_binary_search_tree",
    "datastructures/input_files/test_graph",
    "datastructures/input_files/test_graph_set_2",
    "datastructures/input_files/test_hash_table",
    "datastructures/input_files/test_max_priority_queue",
    "datastructures/input_files/test_min_priority_queue",
    "datastructures/input_files/trie",
    "datastructures/input_files/trie/test_case_1",
    "datastructures/input_files/trie/test_case_2",
    "datastructures/src",
    "datastructures/src/datastructures",
    "datastructures/src/datastructures/disjointsets",
    "datastructures/src/datastructures/disjointsets/DisjointSetList.java",
    "datastructures/src/datastructures/disjointsets/DisjointSetListNode.java",
    "datastructures/src/datastructures/disjointsets/DisjointSetNaive.java",
    "datastructures/src/datastructures/disjointsets/DisjointSetNode.java",
    "datastructures/src/datastructures/disjointsets/DisjointSetWithPathCompression.java",
    "datastructures/src/datastructures/graph",
    "datastructures/src/datastructures/graph/AbstractGraph.java",
    "datastructures/src/datastructures/graph/DirectedGraph.java",
    "datastructures/src/datastructures/graph/Edge.java",
    "datastructures/src/datastructures/graph/GenericGraph.java",
    "datastructures/src/datastructures/graph/GraphType.java",
    "datastructures/src/datastructures/graph/UndirectedGraph.java",
    "datastructures/src/datastructures/graph/Vertex.java",
    "datastructures/src/datastructures/hashtable",
    "datastructures/src/datastructures/hashtable/HashTable.java",
    "datastructures/src/datastructures/hashtable/HashTableNode.java",
    "datastructures/src/datastructures/heap",
    "datastructures/src/datastructures/heap/BinaryHeap.java",
    "datastructures/src/datastructures/heap/BinaryMaxHeap.java",
    "datastructures/src/datastructures/heap/BinaryMinHeap.java",
    "datastructures/src/datastructures/heap/HeapType.java",
    "datastructures/src/datastructures/heap/PriorityQueue.java",
    "datastructures/src/datastructures/heap/PriorityQueueElement.java",
    "datastructures/src/datastructures/lists",
    "datastructures/src/datastructures/lists/AbstractList.java",
    "datastructures/src/datastructures/lists/CircularLinkedList.java",
    "datastructures/src/datastructures/lists/CustomLinkedList.java",
    "datastructures/src/datastructures/lists/DoubleLinkedList.java",
    "datastructures/src/datastructures/lists/GenericList.java",
    "datastructures/src/datastructures/lists/LinkedListNode.java",
    "datastructures/src/datastructures/queue",
    "datastructures/src/datastructures/queue/CustomQueue.java",
    "datastructures/src/datastructures/stack",
    "datastructures/src/datastructures/stack/CustomStack.java",
    "datastructures/src/datastructures/stack/GenericStack.java",
    "datastructures/src/datastructures/test",
    "datastructures/src/datastructures/test/TestBinarySearchTree.java",
    "datastructures/src/datastructures/test/TestCircularLinkedList.java",
    "datastructures/src/datastructures/test/TestDoubleLinkedList.java",
    "datastructures/src/datastructures/test/TestGraph.java",
    "datastructures/src/datastructures/test/TestHashTable.java",
    "datastructures/src/datastructures/test/TestTrie.java",
    "datastructures/src/datastructures/tree",
    "datastructures/src/datastructures/tree/AbstractBinaryTree.java",
    "datastructures/src/datastructures/tree/BinarySearchTree.java",
    "datastructures/src/datastructures/tree/BinaryTree.java",
    "datastructures/src/datastructures/tree/GenericBinaryTree.java",
    "datastructures/src/datastructures/tree/SegmentTree.java",
    "datastructures/src/datastructures/tree/TreeNode.java",
    "datastructures/src/datastructures/tree/Trie.java",
    "datastructures/src/datastructures/tree/TrieNode.java",
    "datastructures/src/datastructures/util",
    "datastructures/src/datastructures/util/BinaryTreeUtil.java",
    "datastructures/src/datastructures/util/GraphUtil.java",
    "datastructures/src/datastructures/util/InputUtil.java",
    "datastructures/src/datastructures/util/ListUtil.java",
    "datastructures/src/datastructures/util/TreeUtil.java",
    "datastructures/test",
    "datastructures/test/datastructures",
    "datastructures/test/datastructures/disjointsets",
    "datastructures/test/datastructures/disjointsets/TestDisjointSetNaive.java",
    "datastructures/test/datastructures/disjointsets/TestDisjointSetWithPathCompression.java",
    "datastructures/test/datastructures/heap",
    "datastructures/test/datastructures/heap/TestBinaryMaxHeap.java",
    "datastructures/test/datastructures/heap/TestBinaryMinHeap.java",
    "datastructures/test/datastructures/heap/TestMaxPriorityQueue.java",
    "datastructures/test/datastructures/heap/TestMinPriorityQueue.java",
    "datastructures/test/datastructures/trie",
    "datastructures/test/datastructures/trie/TestTrie.java",
    "geeks-for-geeks",
    "geeks-for-geeks/.classpath",
    "geeks-for-geeks/.project",
    "geeks-for-geeks/build.gradle",
    "geeks-for-geeks/gradle",
    "geeks-for-geeks/gradle/wrapper",
    "geeks-for-geeks/gradle/wrapper/gradle-wrapper.jar",
    "geeks-for-geeks/gradle/wrapper/gradle-wrapper.properties",
    "geeks-for-geeks/gradlew",
    "geeks-for-geeks/gradlew.bat",
    "geeks-for-geeks/input_files",
    "geeks-for-geeks/input_files/array",
    "geeks-for-geeks/input_files/array/count_pairs_sorted_less_than_sum",
    "geeks-for-geeks/input_files/array/count_pairs_sorted_less_than_sum/test_case",
    "geeks-for-geeks/input_files/array/element_occurs_once",
    "geeks-for-geeks/input_files/array/element_occurs_once/test_case",
    "geeks-for-geeks/input_files/array/equal_sum_subarray",
    "geeks-for-geeks/input_files/array/equal_sum_subarray/test_case",
    "geeks-for-geeks/input_files/array/find_all_pairs_abcd",
    "geeks-for-geeks/input_files/array/find_all_pairs_abcd/test_case_1",
    "geeks-for-geeks/input_files/array/find_all_pairs_abcd/test_case_2",
    "geeks-for-geeks/input_files/array/find_all_pairs_abcd/test_case_3",
    "geeks-for-geeks/input_files/array/find_common_three_sorted_arrays",
    "geeks-for-geeks/input_files/array/find_common_three_sorted_arrays/test_case",
    "geeks-for-geeks/input_files/array/find_missing_number",
    "geeks-for-geeks/input_files/array/find_missing_number/test_case",
    "geeks-for-geeks/input_files/array/mimum_sum_abs_diff",
    "geeks-for-geeks/input_files/array/mimum_sum_abs_diff/test_case",
    "geeks-for-geeks/input_files/array/noble_integers_in_array",
    "geeks-for-geeks/input_files/array/noble_integers_in_array/test_case",
    "geeks-for-geeks/input_files/array/sum_of_distinct_in_array",
    "geeks-for-geeks/input_files/array/sum_of_distinct_in_array/test_case",
    "geeks-for-geeks/input_files/array/union_and_intersection",
    "geeks-for-geeks/input_files/array/union_and_intersection/test_case",
    "geeks-for-geeks/input_files/dp",
    "geeks-for-geeks/input_files/dp/coin_change",
    "geeks-for-geeks/input_files/dp/coin_change/test_case",
    "geeks-for-geeks/input_files/dp/coin_change_min_coins",
    "geeks-for-geeks/input_files/dp/coin_change_min_coins/test_case",
    "geeks-for-geeks/input_files/dp/count_binary_without_consecutive_ones",
    "geeks-for-geeks/input_files/dp/count_binary_without_consecutive_ones/test_case",
    "geeks-for-geeks/input_files/dp/count_ways_n_stairs",
    "geeks-for-geeks/input_files/dp/count_ways_n_stairs/test_case",
    "geeks-for-geeks/input_files/dp/egg_dropping_problem",
    "geeks-for-geeks/input_files/dp/egg_dropping_problem/test_case",
    "geeks-for-geeks/input_files/dp/fibonacci_number",
    "geeks-for-geeks/input_files/dp/fibonacci_number/test_case",
    "geeks-for-geeks/input_files/dp/largest_subsquare_xo",
    "geeks-for-geeks/input_files/dp/largest_subsquare_xo/test_case",
    "geeks-for-geeks/input_files/dp/levenshtein",
    "geeks-for-geeks/input_files/dp/levenshtein/test_case",
    "geeks-for-geeks/input_files/dp/longest_bitonic_subsequence",
    "geeks-for-geeks/input_files/dp/longest_bitonic_subsequence/test_case",
    "geeks-for-geeks/input_files/dp/longest_common_subsequence",
    "geeks-for-geeks/input_files/dp/longest_common_subsequence/test_case",
    "geeks-for-geeks/input_files/dp/longest_common_substring",
    "geeks-for-geeks/input_files/dp/longest_common_substring/test_case",
    "geeks-for-geeks/input_files/dp/longest_increasing_subsequence",
    "geeks-for-geeks/input_files/dp/longest_increasing_subsequence/test_case",
    "geeks-for-geeks/input_files/dp/longest_palindromic_subsequence",
    "geeks-for-geeks/input_files/dp/longest_palindromic_subsequence/test_case",
    "geeks-for-geeks/input_files/dp/longest_palindromic_substring",
    "geeks-for-geeks/input_files/dp/longest_palindromic_substring/test_case",
    "geeks-for-geeks/input_files/dp/matrix_multiplication",
    "geeks-for-geeks/input_files/dp/matrix_multiplication/test_case",
    "geeks-for-geeks/input_files/dp/maximum_sum_increasing_subsequence",
    "geeks-for-geeks/input_files/dp/maximum_sum_increasing_subsequence/test_case",
    "geeks-for-geeks/input_files/dp/maximum_sum_non_adjacent",
    "geeks-for-geeks/input_files/dp/maximum_sum_non_adjacent/test_case",
    "geeks-for-geeks/input_files/dp/maximum_sum_rectangular_sub_matrix",
    "geeks-for-geeks/input_files/dp/maximum_sum_rectangular_sub_matrix/test_case",
    "geeks-for-geeks/input_files/dp/min_cost_path",
    "geeks-for-geeks/input_files/dp/min_cost_path/test_case",
    "geeks-for-geeks/input_files/dp/min_jumps_to_end",
    "geeks-for-geeks/input_files/dp/min_jumps_to_end/test_case",
    "geeks-for-geeks/input_files/dp/optimal_bst",
    "geeks-for-geeks/input_files/dp/optimal_bst/test_case",
    "geeks-for-geeks/input_files/dp/optimal_strategy_game_picks",
    "geeks-for-geeks/input_files/dp/optimal_strategy_game_picks/test_case",
    "geeks-for-geeks/input_files/dp/palindrome_partitioning",
    "geeks-for-geeks/input_files/dp/palindrome_partitioning/test_case",
    "geeks-for-geeks/input_files/dp/rod_cutting",
    "geeks-for-geeks/input_files/dp/rod_cutting/test_case",
    "geeks-for-geeks/input_files/dp/subset_sum",
    "geeks-for-geeks/input_files/dp/subset_sum/test_case",
    "geeks-for-geeks/input_files/dp/text_justification",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_1",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_2",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_3",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_4",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_5",
    "geeks-for-geeks/input_files/dp/text_justification/test_case_6",
    "geeks-for-geeks/input_files/dp/total_number_of_bst_nkeys",
    "geeks-for-geeks/input_files/dp/total_number_of_bst_nkeys/test_case",
    "geeks-for-geeks/input_files/dp/total_ways_matrix",
    "geeks-for-geeks/input_files/dp/total_ways_matrix/test_case",
    "geeks-for-geeks/input_files/dp/weighted_job_scheduling",
    "geeks-for-geeks/input_files/dp/weighted_job_scheduling/test_case",
    "geeks-for-geeks/input_files/dp/zero_one_knapsack",
    "geeks-for-geeks/input_files/dp/zero_one_knapsack/test_case_1",
    "geeks-for-geeks/input_files/dp/zero_one_knapsack/test_case_2",
    "geeks-for-geeks/input_files/dp/zero_one_knapsack/test_case_3",
    "geeks-for-geeks/input_files/dp/zero_one_knapsack/test_case_4",
    "geeks-for-geeks/input_files/graph",
    "geeks-for-geeks/input_files/graph/all_pairs_shortest_path",
    "geeks-for-geeks/input_files/graph/all_pairs_shortest_path/test_case_1",
    "geeks-for-geeks/input_files/graph/all_pairs_shortest_path/test_case_2",
    "geeks-for-geeks/input_files/graph/all_pairs_shortest_path/test_case_3",
    "geeks-for-geeks/input_files/graph/connected_components",
    "geeks-for-geeks/input_files/graph/connected_components/test_case_1",
    "geeks-for-geeks/input_files/graph/connected_components/test_case_2",
    "geeks-for-geeks/input_files/graph/connected_components/test_case_3",
    "geeks-for-geeks/input_files/graph/detect_cycle",
    "geeks-for-geeks/input_files/graph/detect_cycle/test_case_1",
    "geeks-for-geeks/input_files/graph/detect_cycle/test_case_2",
    "geeks-for-geeks/input_files/graph/detect_cycle/test_case_3",
    "geeks-for-geeks/input_files/graph/detect_cycle/test_case_4",
    "geeks-for-geeks/input_files/graph/detect_cycle/test_case_5",
    "geeks-for-geeks/input_files/graph/min_steps_knights_tour",
    "geeks-for-geeks/input_files/graph/min_steps_knights_tour/test_case",
    "geeks-for-geeks/input_files/graph/minimum_spanning_tree",
    "geeks-for-geeks/input_files/graph/minimum_spanning_tree/test_case_1",
    "geeks-for-geeks/input_files/graph/minimum_spanning_tree/test_case_2",
    "geeks-for-geeks/input_files/graph/minimum_spanning_tree/test_case_3",
    "geeks-for-geeks/input_files/graph/minimum_spanning_tree/test_case_4",
    "geeks-for-geeks/input_files/graph/screen_keyboard",
    "geeks-for-geeks/input_files/graph/screen_keyboard/test_case",
    "geeks-for-geeks/input_files/graph/shortest_path",
    "geeks-for-geeks/input_files/graph/shortest_path/test_case_1",
    "geeks-for-geeks/input_files/graph/shortest_path/test_case_2",
    "geeks-for-geeks/input_files/graph/shortest_path/test_case_3",
    "geeks-for-geeks/input_files/graph/shortest_path/test_case_4",
    "geeks-for-geeks/input_files/graph/shortest_path_dag",
    "geeks-for-geeks/input_files/graph/shortest_path_dag/test_case_1",
    "geeks-for-geeks/input_files/graph/shortest_path_dag/test_case_2",
    "geeks-for-geeks/input_files/graph/strongly_connected_components",
    "geeks-for-geeks/input_files/graph/strongly_connected_components/test_case_1",
    "geeks-for-geeks/input_files/graph/strongly_connected_components/test_case_2",
    "geeks-for-geeks/input_files/graph/strongly_connected_components/test_case_3",
    "geeks-for-geeks/input_files/graph/topological_sort",
    "geeks-for-geeks/input_files/graph/topological_sort/test_case_1",
    "geeks-for-geeks/input_files/greedy",
    "geeks-for-geeks/input_files/greedy/activity_selection",
    "geeks-for-geeks/input_files/greedy/activity_selection/test_case",
    "geeks-for-geeks/input_files/greedy/fractional_knapsack",
    "geeks-for-geeks/input_files/greedy/fractional_knapsack/test_case",
    "geeks-for-geeks/input_files/greedy/huffman_coding",
    "geeks-for-geeks/input_files/greedy/huffman_coding/test_case",
    "geeks-for-geeks/input_files/greedy/job_sequencing",
    "geeks-for-geeks/input_files/greedy/job_sequencing/test_case",
    "geeks-for-geeks/input_files/linked_list",
    "geeks-for-geeks/input_files/linked_list/add_polynomials_linked_list",
    "geeks-for-geeks/input_files/linked_list/add_polynomials_linked_list/test_case_1",
    "geeks-for-geeks/input_files/linked_list/add_polynomials_linked_list/test_case_2",
    "geeks-for-geeks/input_files/linked_list/add_polynomials_linked_list/test_case_3",
    "geeks-for-geeks/input_files/linked_list/clone_linked_list_pseudo",
    "geeks-for-geeks/input_files/linked_list/clone_linked_list_pseudo/test_case_1",
    "geeks-for-geeks/input_files/linked_list/clone_linked_list_pseudo/test_case_2",
    "geeks-for-geeks/input_files/linked_list/clone_linked_list_pseudo/test_case_3",
    "geeks-for-geeks/input_files/linked_list/clone_linked_list_pseudo/test_case_4",
    "geeks-for-geeks/input_files/linked_list/merge_sorted_linked_list_reverse",
    "geeks-for-geeks/input_files/linked_list/merge_sorted_linked_list_reverse/test_case_1",
    "geeks-for-geeks/input_files/linked_list/merge_sorted_linked_list_reverse/test_case_2",
    "geeks-for-geeks/input_files/linked_list/merge_sorted_linked_list_reverse/test_case_3",
    "geeks-for-geeks/input_files/linked_list/merge_sorted_linked_list_reverse/test_case_4",
    "geeks-for-geeks/input_files/linked_list/move_all_occurances_to_end",
    "geeks-for-geeks/input_files/linked_list/move_all_occurances_to_end/test_case",
    "geeks-for-geeks/input_files/linked_list/pairwise_swap",
    "geeks-for-geeks/input_files/linked_list/pairwise_swap/test_case",
    "geeks-for-geeks/input_files/matrix",
    "geeks-for-geeks/input_files/matrix/circular_matrix",
    "geeks-for-geeks/input_files/matrix/circular_matrix/test_case",
    "geeks-for-geeks/input_files/matrix/sparse_matrix",
    "geeks-for-geeks/input_files/matrix/sparse_matrix/test_case_1",
    "geeks-for-geeks/input_files/matrix/sparse_matrix/test_case_2",
    "geeks-for-geeks/input_files/matrix/sparse_matrix/test_case_3",
    "geeks-for-geeks/input_files/random",
    "geeks-for-geeks/input_files/random/cartesian_product",
    "geeks-for-geeks/input_files/random/cartesian_product/test_case_1",
    "geeks-for-geeks/input_files/random/cartesian_product/test_case_2",
    "geeks-for-geeks/input_files/random/cartesian_product/test_case_3",
    "geeks-for-geeks/input_files/random/cartesian_product/test_case_4",
    "geeks-for-geeks/input_files/random/count_inversions",
    "geeks-for-geeks/input_files/random/count_inversions/test_case_1",
    "geeks-for-geeks/input_files/random/count_inversions/test_case_2",
    "geeks-for-geeks/input_files/random/count_inversions/test_case_3",
    "geeks-for-geeks/input_files/random/count_inversions/test_case_4",
    "geeks-for-geeks/input_files/random/is_digit_frequency_less_than_digit",
    "geeks-for-geeks/input_files/random/is_digit_frequency_less_than_digit/test_case",
    "geeks-for-geeks/input_files/random/longest_palindromic_substring",
    "geeks-for-geeks/input_files/random/longest_palindromic_substring/test_case",
    "geeks-for-geeks/input_files/random/second_smallest",
    "geeks-for-geeks/input_files/random/second_smallest/test_case_1",
    "geeks-for-geeks/input_files/random/second_smallest/test_case_2",
    "geeks-for-geeks/input_files/random/second_smallest/test_case_3",
    "geeks-for-geeks/input_files/random/second_smallest/test_case_4",
    "geeks-for-geeks/input_files/sort",
    "geeks-for-geeks/input_files/sort/test_case_1",
    "geeks-for-geeks/input_files/sort/test_case_2",
    "geeks-for-geeks/input_files/sort/test_case_3",
    "geeks-for-geeks/input_files/string",
    "geeks-for-geeks/input_files/string/count_substrings_first_last",
    "geeks-for-geeks/input_files/string/count_substrings_first_last/test_case",
    "geeks-for-geeks/input_files/tree",
    "geeks-for-geeks/input_files/tree/check_bst_has_dead_end",
    "geeks-for-geeks/input_files/tree/check_bst_has_dead_end/test_case_1",
    "geeks-for-geeks/input_files/tree/check_bst_has_dead_end/test_case_2",
    "geeks-for-geeks/input_files/tree/check_bst_has_dead_end/test_case_3",
    "geeks-for-geeks/input_files/tree/check_bst_has_dead_end/test_case_4",
    "geeks-for-geeks/input_files/tree/check_cousins_binary_tree",
    "geeks-for-geeks/input_files/tree/check_cousins_binary_tree/test_case_1",
    "geeks-for-geeks/input_files/tree/check_cousins_binary_tree/test_case_2",
    "geeks-for-geeks/input_files/tree/check_sorted_subsequence_bst",
    "geeks-for-geeks/input_files/tree/check_sorted_subsequence_bst/test_case_1",
    "geeks-for-geeks/input_files/tree/check_sorted_subsequence_bst/test_case_2",
    "geeks-for-geeks/input_files/tree/check_sorted_subsequence_bst/test_case_3",
    "geeks-for-geeks/input_files/tree/convert_binary_tree_doubly_linked_list",
    "geeks-for-geeks/input_files/tree/convert_binary_tree_doubly_linked_list/test_case_1",
    "geeks-for-geeks/input_files/tree/convert_binary_tree_doubly_linked_list/test_case_2",
    "geeks-for-geeks/input_files/tree/convert_binary_tree_doubly_linked_list/test_case_3",
    "geeks-for-geeks/input_files/tree/count_half_nodes",
    "geeks-for-geeks/input_files/tree/count_half_nodes/test_case_1",
    "geeks-for-geeks/input_files/tree/count_half_nodes/test_case_2",
    "geeks-for-geeks/input_files/tree/count_half_nodes/test_case_3",
    "geeks-for-geeks/input_files/tree/count_half_nodes/test_case_4",
    "geeks-for-geeks/input_files/tree/deepest_node_binary_tree",
    "geeks-for-geeks/input_files/tree/deepest_node_binary_tree/test_case_1",
    "geeks-for-geeks/input_files/tree/deepest_node_binary_tree/test_case_2",
    "geeks-for-geeks/input_files/tree/deepest_node_binary_tree/test_case_3",
    "geeks-for-geeks/input_files/tree/deepest_node_binary_tree/test_case_4",
    "geeks-for-geeks/input_files/tree/full_nodes",
    "geeks-for-geeks/input_files/tree/full_nodes/test_case_1",
    "geeks-for-geeks/input_files/tree/full_nodes/test_case_2",
    "geeks-for-geeks/input_files/tree/full_nodes/test_case_3",
    "geeks-for-geeks/input_files/tree/full_nodes/test_case_4",
    "geeks-for-geeks/input_files/tree/largest_bst",
    "geeks-for-geeks/input_files/tree/largest_bst/test_case_1",
    "geeks-for-geeks/input_files/tree/largest_bst/test_case_2",
    "geeks-for-geeks/input_files/tree/lca",
    "geeks-for-geeks/input_files/tree/lca/test_case_1",
    "geeks-for-geeks/input_files/tree/lca/test_case_2",
    "geeks-for-geeks/input_files/tree/lca/test_case_3",
    "geeks-for-geeks/input_files/tree/lca/test_case_4",
    "geeks-for-geeks/input_files/tree/max_diff_node_ancestor",
    "geeks-for-geeks/input_files/tree/max_diff_node_ancestor/test_case_1",
    "geeks-for-geeks/input_files/tree/max_diff_node_ancestor/test_case_2",
    "geeks-for-geeks/input_files/tree/max_diff_node_ancestor/test_case_3",
    "geeks-for-geeks/input_files/tree/max_diff_node_ancestor/test_case_4",
    "geeks-for-geeks/input_files/tree/non_matching_leaves",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_1.1",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_1.2",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_2.1",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_2.2",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_3.1",
    "geeks-for-geeks/input_files/tree/non_matching_leaves/test_case_3.2",
    "geeks-for-geeks/input_files/tree/smallest_sub_tree_deepest_nodes",
    "geeks-for-geeks/input_files/tree/smallest_sub_tree_deepest_nodes/test_case",
    "geeks-for-geeks/src",
    "geeks-for-geeks/src/array",
    "geeks-for-geeks/src/array/CountPairsSortedLessThanSum.java",
    "geeks-for-geeks/src/array/ElementOccursOnce.java",
    "geeks-for-geeks/src/array/EqualSumSubArrays.java",
    "geeks-for-geeks/src/array/FindAllPairsABCD.java",
    "geeks-for-geeks/src/array/FindCommonThreeSortedArrays.java",
    "geeks-for-geeks/src/array/FindMissingNumber.java",
    "geeks-for-geeks/src/array/MinimumSumAbsDiffTwoArrays.java",
    "geeks-for-geeks/src/array/NobleIntegersInArray.java",
    "geeks-for-geeks/src/array/SumOfDistinctInArray.java",
    "geeks-for-geeks/src/array/UnionAndIntersection.java",
    "geeks-for-geeks/src/backtracking",
    "geeks-for-geeks/src/backtracking/KnightsPath.java",
    "geeks-for-geeks/src/dp",
    "geeks-for-geeks/src/dp/CoinChange.java",
    "geeks-for-geeks/src/dp/CoinChangeMinCoins.java",
    "geeks-for-geeks/src/dp/CountBinaryWithoutConsecutiveOnes.java",
    "geeks-for-geeks/src/dp/CountWaysToReachNStairs.java",
    "geeks-for-geeks/src/dp/EggDroppingProblem.java",
    "geeks-for-geeks/src/dp/FibonacciNumber.java",
    "geeks-for-geeks/src/dp/Job.java",
    "geeks-for-geeks/src/dp/LargestSubsquareXO.java",
    "geeks-for-geeks/src/dp/Levenshtein.java",
    "geeks-for-geeks/src/dp/LongestBitonicSubsequence.java",
    "geeks-for-geeks/src/dp/LongestCommonSubsequence.java",
    "geeks-for-geeks/src/dp/LongestCommonSubstring.java",
    "geeks-for-geeks/src/dp/LongestIncreasingSubsequence.java",
    "geeks-for-geeks/src/dp/LongestPalindromicSubsequence.java",
    "geeks-for-geeks/src/dp/LongestPalindromicSubstring.java",
    "geeks-for-geeks/src/dp/MatrixMultiplication.java",
    "geeks-for-geeks/src/dp/MaximumSumIncreasingSubsequence.java",
    "geeks-for-geeks/src/dp/MaximumSumNonAdjacent.java",
    "geeks-for-geeks/src/dp/MaximumSumRectangularSubMatrix.java",
    "geeks-for-geeks/src/dp/MinCostPath.java",
    "geeks-for-geeks/src/dp/MinJumpsToEnd.java",
    "geeks-for-geeks/src/dp/OptimalBST.java",
    "geeks-for-geeks/src/dp/OptimalStrategyGamePicks.java",
    "geeks-for-geeks/src/dp/PalindromePartitioning.java",
    "geeks-for-geeks/src/dp/RodCutting.java",
    "geeks-for-geeks/src/dp/SubsetSum.java",
    "geeks-for-geeks/src/dp/TextJustification.java",
    "geeks-for-geeks/src/dp/TotalNumberOfBSTNKeys.java",
    "geeks-for-geeks/src/dp/TotalWaysMatrix.java",
    "geeks-for-geeks/src/dp/WeightedJobScheduling.java",
    "geeks-for-geeks/src/dp/ZeroOneKnapsack.java",
    "geeks-for-geeks/src/graph",
    "geeks-for-geeks/src/graph/BellmanFordShortestPath.java",
    "geeks-for-geeks/src/graph/ConnectedComponents.java",
    "geeks-for-geeks/src/graph/DetectCycleDirectedGraph.java",
    "geeks-for-geeks/src/graph/DetectCycleUndirectedGraph.java",
    "geeks-for-geeks/src/graph/DetectCycleUndirectedGraph2.java",
    "geeks-for-geeks/src/graph/DijkstraShortestPath.java",
    "geeks-for-geeks/src/graph/FloydWarshallShortestPath.java",
    "geeks-for-geeks/src/graph/KruskalMST.java",
    "geeks-for-geeks/src/graph/MinStepsKnightsTour.java",
    "geeks-for-geeks/src/graph/PrimMST.java",
    "geeks-for-geeks/src/graph/ShortestPathDAG.java",
    "geeks-for-geeks/src/graph/StronglyConnectedComponents.java",
    "geeks-for-geeks/src/graph/TopologicalSort.java",
    "geeks-for-geeks/src/greedy",
    "geeks-for-geeks/src/greedy/ActivitySelection.java",
    "geeks-for-geeks/src/greedy/FractionalKnapsack.java",
    "geeks-for-geeks/src/greedy/HuffmanCoding.java",
    "geeks-for-geeks/src/greedy/JobSequencing.java",
    "geeks-for-geeks/src/linked_list",
    "geeks-for-geeks/src/linked_list/AddPolynomialsLinkedList.java",
    "geeks-for-geeks/src/linked_list/CloneLinkedListPsuedo.java",
    "geeks-for-geeks/src/linked_list/MergeSortedLinkedListsReverse.java",
    "geeks-for-geeks/src/linked_list/MoveAllOccurancesToEnd.java",
    "geeks-for-geeks/src/linked_list/PairwiseSwapLinkedList.java",
    "geeks-for-geeks/src/matrix",
    "geeks-for-geeks/src/matrix/CircularMatrix.java",
    "geeks-for-geeks/src/matrix/SparseMatrix.java",
    "geeks-for-geeks/src/random",
    "geeks-for-geeks/src/random/CartesianProduct.java",
    "geeks-for-geeks/src/random/CountInversions.java",
    "geeks-for-geeks/src/random/IsDigitFrequencyLessThanDigit.java",
    "geeks-for-geeks/src/random/LongestPalindromicSubstring.java",
    "geeks-for-geeks/src/random/SecondSmallest.java",
    "geeks-for-geeks/src/sort",
    "geeks-for-geeks/src/sort/BubbleSort.java",
    "geeks-for-geeks/src/sort/HeapSort.java",
    "geeks-for-geeks/src/sort/InsertionSort.java",
    "geeks-for-geeks/src/sort/MergeSort.java",
    "geeks-for-geeks/src/sort/SelectionSort.java",
    "geeks-for-geeks/src/sort/Sort.java",
    "geeks-for-geeks/src/string",
    "geeks-for-geeks/src/string/CountSubstringsFirstLastCharacters.java",
    "geeks-for-geeks/src/tree",
    "geeks-for-geeks/src/tree/CheckBSTHasDeadEnd.java",
    "geeks-for-geeks/src/tree/CheckCousinsBinaryTree.java",
    "geeks-for-geeks/src/tree/CheckSortedSubSequenceBST.java",
    "geeks-for-geeks/src/tree/ConvertBinaryTreeDoublyLinkedList.java",
    "geeks-for-geeks/src/tree/ConvertBinaryTreeDoublyLinkedList2.java",
    "geeks-for-geeks/src/tree/CountHalfNodesBinaryTree.java",
    "geeks-for-geeks/src/tree/DeepestNodeBinaryTree.java",
    "geeks-for-geeks/src/tree/FullNodesInBinaryTree.java",
    "geeks-for-geeks/src/tree/LCABinaryTree.java",
    "geeks-for-geeks/src/tree/LargestBST.java",
    "geeks-for-geeks/src/tree/MaxDifferenceNodeAncestor.java",
    "geeks-for-geeks/src/tree/MultiTree.java",
    "geeks-for-geeks/src/tree/MultiTreeNode.java",
    "geeks-for-geeks/src/tree/NonMatchingLeavesBinaryTree.java",
    "geeks-for-geeks/src/tree/SmallestSubTreeDeepestNodes.java",
    "geeks-for-geeks/test",
    "geeks-for-geeks/test/array",
    "geeks-for-geeks/test/array/TestCountPairsSortedLessThanSum.java",
    "geeks-for-geeks/test/array/TestElementOccursOnce.java",
    "geeks-for-geeks/test/array/TestEqualSumSubArray.java",
    "geeks-for-geeks/test/array/TestFindAllPairsABCD.java",
    "geeks-for-geeks/test/array/TestFindCommonThreeSortedArrays.java",
    "geeks-for-geeks/test/array/TestFindMissingNumber.java",
    "geeks-for-geeks/test/array/TestMimumSumAbsDiffTwoArrays.java",
    "geeks-for-geeks/test/array/TestNobleIntegersInArray.java",
    "geeks-for-geeks/test/array/TestSumOfDistinctInArray.java",
    "geeks-for-geeks/test/array/TestUnionAndIntersection.java",
    "geeks-for-geeks/test/dp",
    "geeks-for-geeks/test/dp/TestCoinChange.java",
    "geeks-for-geeks/test/dp/TestCoinChangeMinCoins.java",
    "geeks-for-geeks/test/dp/TestCountBinaryWithoutConsecutiveOnes.java",
    "geeks-for-geeks/test/dp/TestCountWaysToReachNStairs.java",
    "geeks-for-geeks/test/dp/TestEggDroppingProblem.java",
    "geeks-for-geeks/test/dp/TestFibonacciNumber.java",
    "geeks-for-geeks/test/dp/TestLargestSubsquareXO.java",
    "geeks-for-geeks/test/dp/TestLevenshtein.java",
    "geeks-for-geeks/test/dp/TestLongestBitonicSubsequence.java",
    "geeks-for-geeks/test/dp/TestLongestCommonSubsequence.java",
    "geeks-for-geeks/test/dp/TestLongestCommonSubstring.java",
    "geeks-for-geeks/test/dp/TestLongestIncreasingSubsequence.java",
    "geeks-for-geeks/test/dp/TestLongestPalindromicSubsequence.java",
    "geeks-for-geeks/test/dp/TestLongestPalindromicSubstring.java",
    "geeks-for-geeks/test/dp/TestMatrixMultiplication.java",
    "geeks-for-geeks/test/dp/TestMaximumSumIncreasingSubsequence.java",
    "geeks-for-geeks/test/dp/TestMaximumSumNonAdjacent.java",
    "geeks-for-geeks/test/dp/TestMaximumSumRectangularSubMatrix.java",
    "geeks-for-geeks/test/dp/TestMinCostPath.java",
    "geeks-for-geeks/test/dp/TestMinJumpsToEnd.java",
    "geeks-for-geeks/test/dp/TestOptimalBST.java",
    "geeks-for-geeks/test/dp/TestOptimalStrategyGamePicks.java",
    "geeks-for-geeks/test/dp/TestPalindromePartitioning.java",
    "geeks-for-geeks/test/dp/TestRodCutting.java",
    "geeks-for-geeks/test/dp/TestSubsetSum.java",
    "geeks-for-geeks/test/dp/TestTextJustification.java",
    "geeks-for-geeks/test/dp/TestTotalNumberOfBSTNkeys.java",
    "geeks-for-geeks/test/dp/TestTotalWaysMatrix.java",
    "geeks-for-geeks/test/dp/TestWeightedJobScheduling.java",
    "geeks-for-geeks/test/dp/TestZeroOneKnapsack.java",
    "geeks-for-geeks/test/graph",
    "geeks-for-geeks/test/graph/TestBellmanFordShortestPath.java",
    "geeks-for-geeks/test/graph/TestConnectedComponents.java",
    "geeks-for-geeks/test/graph/TestDetectCycleDirectedGraph.java",
    "geeks-for-geeks/test/graph/TestDetectCycleUndirectedGraph.java",
    "geeks-for-geeks/test/graph/TestDetectCycleUndirectedGraph2.java",
    "geeks-for-geeks/test/graph/TestDijkstraShortestPath.java",
    "geeks-for-geeks/test/graph/TestFloydWarshallShortestPath.java",
    "geeks-for-geeks/test/graph/TestKruskalMST.java",
    "geeks-for-geeks/test/graph/TestMinStepsKnightsTour.java",
    "geeks-for-geeks/test/graph/TestPrimMST.java",
    "geeks-for-geeks/test/graph/TestShortestPathDAG.java",
    "geeks-for-geeks/test/graph/TestStronglyConnectedComponents.java",
    "geeks-for-geeks/test/graph/TestTopologicalSort.java",
    "geeks-for-geeks/test/greedy",
    "geeks-for-geeks/test/greedy/TestActivitySelection.java",
    "geeks-for-geeks/test/greedy/TestFractionalKnapsack.java",
    "geeks-for-geeks/test/greedy/TestHuffmanCoding.java",
    "geeks-for-geeks/test/greedy/TestJobSequencing.java",
    "geeks-for-geeks/test/linked_list",
    "geeks-for-geeks/test/linked_list/TestAddPolynomialsLinkedList.java",
    "geeks-for-geeks/test/linked_list/TestCloneLinkedListPsuedo.java",
    "geeks-for-geeks/test/linked_list/TestMergeSortedLinkedListReverse.java",
    "geeks-for-geeks/test/linked_list/TestMoveAllOccurancesToEnd.java",
    "geeks-for-geeks/test/linked_list/TestParwiseSwapLinkedList.java",
    "geeks-for-geeks/test/matrix",
    "geeks-for-geeks/test/matrix/TestCircularMatrix.java",
    "geeks-for-geeks/test/matrix/TestSparseMatrix.java",
    "geeks-for-geeks/test/random",
    "geeks-for-geeks/test/random/TestCartesianProduct.java",
    "geeks-for-geeks/test/random/TestCountInversions.java",
    "geeks-for-geeks/test/random/TestIsDigitFrequencyLesserThanDigit.java",
    "geeks-for-geeks/test/random/TestLongestPalindromicSubstring.java",
    "geeks-for-geeks/test/random/TestSecondSmallest.java",
    "geeks-for-geeks/test/sort",
    "geeks-for-geeks/test/sort/TestBubbleSort.java",
    "geeks-for-geeks/test/sort/TestHeapSort.java",
    "geeks-for-geeks/test/sort/TestInsertionSort.java",
    "geeks-for-geeks/test/sort/TestMergeSort.java",
    "geeks-for-geeks/test/sort/TestSelectionSort.java",
    "geeks-for-geeks/test/string",
    "geeks-for-geeks/test/string/TestCountSubstringsFirstLastCharacters.java",
    "geeks-for-geeks/test/tree",
    "geeks-for-geeks/test/tree/TestCheckBSTHasDeadEnd.java",
    "geeks-for-geeks/test/tree/TestCheckCousinsBinaryTree.java",
    "geeks-for-geeks/test/tree/TestCheckSortedSubSequenceBST.java",
    "geeks-for-geeks/test/tree/TestConvertBinaryTreeDoublyLinkedList.java",
    "geeks-for-geeks/test/tree/TestConvertBinaryTreeDoublyLinkedList2.java",
    "geeks-for-geeks/test/tree/TestCountHalfNodes.java",
    "geeks-for-geeks/test/tree/TestDeepestNodeBinaryTree.java",
    "geeks-for-geeks/test/tree/TestFullNodesBinaryTree.java",
    "geeks-for-geeks/test/tree/TestLCABinaryTree.java",
    "geeks-for-geeks/test/tree/TestLargestBST.java",
    "geeks-for-geeks/test/tree/TestMaxDifferenceNodeAncestor.java",
    "geeks-for-geeks/test/tree/TestNonMatchingLeavesBinaryTree.java",
    "geeks-for-geeks/test/tree/TestSmallestSubTreeDeepestNodes.java",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "settings.gradle"
]
[
    ".DS_Store",
    ".idea",
    ".idea/Algorithms.iml",
    ".idea/misc.xml",
    ".idea/modules.xml",
    ".idea/vcs.xml",
    ".idea/workspace.xml",
    ".vscode",
    ".vscode/settings.json",
    "Activity Selection",
    "Activity Selection/ActivitySelection.class",
    "Activity Selection/Solution.java",
    "Add one to Number",
    "Add one to Number/Solution.class",
    "Add one to Number/Solution.java",
    "Algorithms.iml",
    "BFS",
    "BFS/Graph.class",
    "BFS/Solution.java",
    "BST Iterator",
    "BST Iterator/Solution.java",
    "BST Traversals",
    "BST Traversals/Node.class",
    "BST Traversals/Solution.class",
    "BST Traversals/Solution.java",
    "BST to mirror",
    "BST to mirror/Solution.java",
    "Balanced BST",
    "Balanced BST/Node.class",
    "Balanced BST/Solution.class",
    "Balanced BST/Solution.java",
    "Balancing Expression ",
    "Balancing Expression /Solution.java",
    "Bellman Ford",
    "Bellman Ford/Edge.class",
    "Bellman Ford/Graph.class",
    "Bellman Ford/Solution.class",
    "Bellman Ford/Solution.java",
    "BinaryTree to DLL",
    "BinaryTree to DLL/Solution.java",
    "BitonicSubsequences",
    "BitonicSubsequences/Solution.class",
    "BitonicSubsequences/Solution.java",
    "Bottom View of BST",
    "Bottom View of BST/Node.class",
    "Bottom View of BST/Solution.class",
    "Bottom View of BST/Solution.java",
    "Bridges in graph",
    "Bridges in graph/Graph.class",
    "Bridges in graph/Solution.class",
    "Bridges in graph/Solution.java",
    "BuySellStock",
    "BuySellStock/Solution.class",
    "BuySellStock/Solution.java",
    "Cataln Number",
    "Cataln Number/Soution.java",
    "Check BT is BST",
    "Check BT is BST/Node.class",
    "Check BT is BST/Solution.class",
    "Check BT is BST/Solution.java",
    "Ciel of Element",
    "Ciel of Element/Solution.class",
    "Ciel of Element/Solution.java",
    "Clone Linked List with Random Pointer",
    "Clone Linked List with Random Pointer/LinkedList$Node.class",
    "Clone Linked List with Random Pointer/LinkedList.class",
    "Clone Linked List with Random Pointer/Soluiton.class",
    "Clone Linked List with Random Pointer/Solution.java",
    "Clone a graph",
    "Clone a graph/Solution.java",
    "Coin Change Algorithm",
    "Coin Change Algorithm/Solution.class",
    "Coin Change Algorithm/Solution.java",
    "Collections in Java",
    "Collections in Java/Solution.class",
    "Collections in Java/Solution.java",
    "Combination Sum ",
    "Combination Sum /Solution.class",
    "Combination Sum /Solution.java",
    "Combination Sum One",
    "Combination Sum One/Sol.java",
    "Combination Sum One/Solution.class",
    "Convert BinaryTree to DLL",
    "Convert BinaryTree to DLL/Node.class",
    "Convert BinaryTree to DLL/Solution.class",
    "Convert BinaryTree to DLL/Solution.java",
    "Count Inversion",
    "Count Inversion/Solution.class",
    "Count Inversion/Solution.java",
    "Count Trailing Zero",
    "Count Trailing Zero/Solution.java",
    "DFS",
    "DFS/Graph.class",
    "DFS/Solution.java",
    "DFS/sdkjbsj",
    "Delete Middle Element of Stack ",
    "Delete Middle Element of Stack /Solution.class",
    "Delete Middle Element of Stack /Solution.java",
    "DeletingNode",
    "DeletingNode/Solution.java",
    "Detect Cycle in Directed Graph",
    "Detect Cycle in Directed Graph/Graph.class",
    "Detect Cycle in Directed Graph/Solution.class",
    "Detect Cycle in Directed Graph/Solution.java",
    "Diagonal sum of a binary tree",
    "Diagonal sum of a binary tree/DiagonalSum.cpp",
    "Diameter of Binary Tree",
    "Diameter of Binary Tree/BinaryTree.class",
    "Diameter of Binary Tree/Node.class",
    "Diameter of Binary Tree/Solution.java",
    "Dijsktra's Algorithm",
    "Dijsktra's Algorithm/Solution.class",
    "Dijsktra's Algorithm/Solution.java",
    "Disjoint Set",
    "Disjoint Set/Solution.java",
    "Dunzo Interview Question",
    "Dunzo Interview Question/Solution.java",
    "Edit Distance ",
    "Edit Distance /Solution.class",
    "Edit Distance /Solution.java",
    "Egg Dropping",
    "Egg Dropping/Solution.java",
    "EquillabiriumPoint",
    "EquillabiriumPoint/README.ms",
    "EquillabiriumPoint/Solution.class",
    "EquillabiriumPoint/Solution.java",
    "Extended Euclidean Algorithm",
    "Extended Euclidean Algorithm/gcd.cpp",
    "FiendsCircle(Using_DisjointSet)",
    "FiendsCircle(Using_DisjointSet)/019_FiendsCircle(Using_DisjointSet).cpp",
    "Find Duplicate Number",
    "Find Duplicate Number/Solution.class",
    "Find Duplicate Number/Solution.java",
    "Find Element in Infinite Array",
    "Find Element in Infinite Array/Solution.java",
    "Find Element in Nearly Sorted Array",
    "Find Element in Nearly Sorted Array/Solution.class",
    "Find Element in Nearly Sorted Array/Solution.java",
    "Find Element in Sorted Array but Rotated",
    "Find Element in Sorted Array but Rotated/Solution.class",
    "Find Element in Sorted Array but Rotated/Solution.java",
    "Find Element in Sorted Matrix",
    "Find Element in Sorted Matrix/Solution.class",
    "Find Element in Sorted Matrix/Solution.java",
    "Find Floor of element",
    "Find Floor of element/Solution.class",
    "Find Floor of element/Solution.java",
    "Find Majority Elements",
    "Find Majority Elements/Solution.class",
    "Find Majority Elements/Solution.java",
    "Find Minium Number of Coins",
    "Find Minium Number of Coins/Solution.class",
    "Find Minium Number of Coins/Solution.java",
    "First Occurance of One in Binary Sorted Array",
    "First Occurance of One in Binary Sorted Array/Solution.java",
    "First and Last Occurence of Number ",
    "First and Last Occurence of Number /Solution.class",
    "First and Last Occurence of Number /Solution.java",
    "Flattening Linked List",
    "Flattening Linked List/LinkedList$Node.class",
    "Flattening Linked List/LinkedList.class",
    "Flattening Linked List/Solution.java",
    "Flights Question",
    "Flights Question/Solution$1.class",
    "Flights Question/Solution.class",
    "Flights Question/Solution.java",
    "Floyd Warshall",
    "Floyd Warshall/Solution.java",
    "GCD",
    "GCD/Solution.class",
    "GCD/Solution.java",
    "GraphColoring",
    "GraphColoring/Solution.class",
    "GraphColoring/Solution.java",
    "Hashing",
    "Hashing/Core Concepts",
    "Hashing/Core Concepts/001_HashingIdea.cpp",
    "Hashing/Core Concepts/002_Chaining.cpp",
    "Hashing/Core Concepts/003_LinearProbing.cpp",
    "Hashing/Core Concepts/004_OpenAddressing.cpp",
    "Hashing/Practise Questiions",
    "Hashing/Practise Questiions/003_MostKOccurance.cpp",
    "Height of Binary Tree",
    "Height of Binary Tree/Node.class",
    "Height of Binary Tree/Solution.class",
    "Height of Binary Tree/Solution.java",
    "IP Validation",
    "IP Validation/Sol.class",
    "IP Validation/Sol.java",
    "IP Validation/Solution.class",
    "Identical Trees",
    "Identical Trees/Solution.java",
    "Inorder Recursive",
    "Inorder Recursive/Node.class",
    "Inorder Recursive/Solution.class",
    "Inorder Recursive/Solution.java",
    "Inorder Succesor",
    "Inorder Succesor/Solution.java",
    "Inorder Succesor/Solution.py",
    "InvertBinaryTree",
    "InvertBinaryTree/Solution.java",
    "Job Sequencing",
    "Job Sequencing/Job.class",
    "Job Sequencing/Solution$1.class",
    "Job Sequencing/Solution.class",
    "Job Sequencing/Solution.java",
    "K Element Sorted Array",
    "K Element Sorted Array/Solution.class",
    "K Element Sorted Array/Solution.java",
    "K Smallest Element in BST",
    "K Smallest Element in BST/Solution.java",
    "KMP",
    "KMP/Solution.java",
    "Kadane Algorithm",
    "Kadane Algorithm/README.md",
    "Kadane Algorithm/Solution.class",
    "Kadane Algorithm/Solution.java",
    "KnapSackGreedyMethod",
    "KnapSackGreedyMethod/Solution.java",
    "KnapSackSolution",
    "KnapSackSolution/Solution.class",
    "KnapSackSolution/Solution.java",
    "LRU Cache",
    "LRU Cache/Cache.class",
    "LRU Cache/Solution.class",
    "LRU Cache/Solution.java",
    "Largest Number",
    "Largest Number/Solution.class",
    "Largest Number/Solution.java",
    "Largest Rectangle in Histogram",
    "Largest Rectangle in Histogram/Solution.",
    "Largest Rectangle in Histogram/Solution.class",
    "Largest Rectangle in Histogram/Solution.java",
    "LargestNumber",
    "LargestNumber/Solution$1.class",
    "LargestNumber/Solution.class",
    "LargestNumber/Solution.java",
    "Left View Of BST",
    "Left View Of BST/Node.class",
    "Left View Of BST/Solution.class",
    "Left View Of BST/Solution.java",
    "Level order traversal ",
    "Level order traversal /Node.class",
    "Level order traversal /Solution.class",
    "Level order traversal /Solution.java",
    "Linked List Sum",
    "Linked List Sum/LinkedList$Node.class",
    "Linked List Sum/LinkedList.class",
    "Linked List Sum/Solution.java",
    "Longest Arthimetic with Difference ",
    "Longest Arthimetic with Difference /Solution.java",
    "Longest Common SubString",
    "Longest Common SubString/Solution.class",
    "Longest Common SubString/Solution.java",
    "Longest Common Subsequence",
    "Longest Common Subsequence/Solution.class",
    "Longest Common Subsequence/Solution.java",
    "Longest Consecutive SubString",
    "Longest Consecutive SubString/Solution.class",
    "Longest Consecutive SubString/Solution.java",
    "Longest Consecutive Subset",
    "Longest Consecutive Subset/Solution.class",
    "Longest Consecutive Subset/Solution.java",
    "Longest Decresing Subsequence",
    "Longest Decresing Subsequence/Solution.java",
    "Longest Increasing Subsequence",
    "Longest Increasing Subsequence/LIS.class",
    "Longest Increasing Subsequence/Solution.class",
    "Longest Increasing Subsequence/Solution.java",
    "Longest Increasing Subsequence/SolutionSelf",
    "Longest Increasing Subsequence/SolutionSelf.java",
    "Longest Palindromic SubSequnce",
    "Longest Palindromic SubSequnce/Solution.class",
    "Longest Palindromic SubSequnce/Solution.java",
    "Longest Palindromic SubString",
    "Longest Palindromic SubString/Solution.class",
    "Longest Palindromic SubString/Solution.java",
    "Lowest Common Ancestor BST",
    "Lowest Common Ancestor BST/Node.class",
    "Lowest Common Ancestor BST/Solutions.class",
    "Lowest Common Ancestor BST/Solutions.java",
    "M coloring Problem ",
    "M coloring Problem /Solution.class",
    "M coloring Problem /Solution.jav",
    "M coloring Problem /Solution.java",
    "Matrix Chain Multiplication",
    "Matrix Chain Multiplication/Solution.class",
    "Matrix Chain Multiplication/Solution.java",
    "Matrix Chain Recursion",
    "Matrix Chain Recursion/Solution.class",
    "Matrix Chain Recursion/Solution.java",
    "Maxium Area in Histog",
    "Maxium Area in Histog/Solution.class",
    "Maxium Area in Histog/Solution.java",
    "Maxium Path Sum BST",
    "Maxium Path Sum BST/Node.class",
    "Maxium Path Sum BST/Solution.class",
    "Maxium Path Sum BST/Solution.java",
    "MaxiumSubarray",
    "MaxiumSubarray/ProductSubarray.class",
    "MaxiumSubarray/Solution.java",
    "MaxiumSubarray/SolutionSelf.class",
    "MaxiumSubarray/SolutionSelf.java",
    "Median of 2 array of same size",
    "Median of 2 array of same size/Solution.java",
    "Median of Data Stream",
    "Median of Data Stream/Solution.java",
    "Median of Matrix",
    "Median of Matrix/Solution.class",
    "Median of Matrix/Solution.java",
    "Meeting Room",
    "Meeting Room/Solution.class",
    "Meeting Room/Solution.java",
    "Merge Intervals ",
    "Merge Intervals /Solution$1.class",
    "Merge Intervals /Solution.class",
    "Merge Intervals /Solution.java",
    "Merge Sort",
    "Merge Sort/Solution.class",
    "Merge Sort/Solution.java",
    "MiddleElementLinkedList",
    "MiddleElementLinkedList/Node.class",
    "MiddleElementLinkedList/Solution.class",
    "MiddleElementLinkedList/Solution.java",
    "Minium Number of Deletion Palindrome",
    "Minium Number of Deletion Palindrome/Solution.class",
    "Minium Number of Deletion Palindrome/Solution.java",
    "Minium Number of Platforms",
    "Minium Number of Platforms/Solution.java",
    "Minium Number of coins dp",
    "Minium Number of coins dp/Solution.class",
    "Minium Number of coins dp/Solution.java",
    "Minium Stack",
    "Minium Stack/Solution.java",
    "Minium Subset Sum",
    "Minium Subset Sum/Solution.java",
    "N Queen",
    "N Queen/Roman Numeral to Decimal",
    "N Queen/Roman Numeral to Decimal/Solution.java",
    "N Queen/SelfSolution.class",
    "N Queen/SelfSolution.java",
    "Next Alphabetical Character",
    "Next Alphabetical Character/Solution.class",
    "Next Alphabetical Character/Solution.java",
    "Next Greater Element Stack",
    "Next Greater Element Stack/SOlution.java",
    "NextLargerElement",
    "NextLargerElement/Practice.java",
    "NextLargerElement/Solution.class",
    "NextLargerElement/Solution.java",
    "No of Subarray",
    "No of Subarray/Solution.class",
    "No of Subarray/Solution.java",
    "Node",
    "Node/Node.java",
    "Number of Islands ",
    "Number of Islands /Solution.java",
    "Number of Times array is Rotated ",
    "Number of Times array is Rotated /Solution.class",
    "Number of Times array is Rotated /Solution.java",
    "NumberToRoman",
    "NumberToRoman/Solution.java",
    "Occurances in Sorted Array",
    "Occurances in Sorted Array/Solution.class",
    "Occurances in Sorted Array/Solution.java",
    "Palindrome Partioning Dynamic Programming",
    "Palindrome Partioning Dynamic Programming/Solution.class",
    "Palindrome Partioning Dynamic Programming/Solution.java",
    "Palindrome Partioning",
    "Palindrome Partioning/PrintAllPalindrome.class",
    "Palindrome Partioning/README.md",
    "Palindrome Partioning/Solution.class",
    "Palindrome Partioning/Solution.java",
    "Palindromic Recursion",
    "Palindromic Recursion/Solution.java",
    "Pascal Triangle",
    "Pascal Triangle/Solution.java",
    "Point to Next BST",
    "Point to Next BST/Solution.java",
    "PostOrder Iterative",
    "PostOrder Iterative/Solution.java",
    "Practice One",
    "Practice One/A.class",
    "Practice One/Arith.class",
    "Practice One/Cricket.class",
    "Practice One/Cricket_Player.class",
    "Practice One/Edge.class",
    "Practice One/Excep1.class",
    "Practice One/Excep2.class",
    "Practice One/Football.class",
    "Practice One/Graph.class",
    "Practice One/Hockey.class",
    "Practice One/Main.class",
    "Practice One/MethodOverloading.class",
    "Practice One/Myclass.class",
    "Practice One/Overload.class",
    "Practice One/Permutation.class",
    "Practice One/Player.class",
    "Practice One/Result.class",
    "Practice One/Sol.class",
    "Practice One/Solution.class",
    "Practice One/Solution.java",
    "Practice One/Test.class",
    "Practice One/Thrd.class",
    "Practice One/ThreadOne.class",
    "Practice One/Totestint.class",
    "PreOrder Iterative",
    "PreOrder Iterative/Solution.java",
    "Prim Algorith",
    "Prim Algorith/Solution.java",
    "Print Permutation",
    "Print Permutation/Color.class",
    "Print Permutation/Permutation.class",
    "Print Permutation/Self.java",
    "Print Permutation/Solution.class",
    "Print Permutation/Solution.java",
    "Print SubStrings",
    "Print SubStrings/Solution.class",
    "Print SubStrings/Solution.java",
    "ProductArrayExceptItself",
    "ProductArrayExceptItself/Solution.class",
    "ProductArrayExceptItself/Solution.java",
    "Prvious Smallest Number",
    "Prvious Smallest Number/Solution.class",
    "Prvious Smallest Number/Solution.java",
    "QuickSort",
    "QuickSort/QuickSort.class",
    "QuickSort/Solution.java",
    "Rat Maze",
    "Rat Maze/Solution.class",
    "Rat Maze/Solution.java",
    "Recursive to Check Palindrome",
    "Recursive to Check Palindrome/Solution.class",
    "Recursive to Check Palindrome/Solution.java",
    "Remove N node from the end",
    "Remove N node from the end/Solution.java",
    "Reverse Linked List in Groups",
    "Reverse Linked List in Groups/Solution.java",
    "Reverse Stack Expression",
    "Reverse Stack Expression/Solution.java",
    "Reverse String",
    "Reverse String/Solution.class",
    "Reverse String/Solution.java",
    "Reverse Words In String",
    "Reverse Words In String/Solution.java",
    "Reversing Linked List",
    "Reversing Linked List/LinkedList$Node.class",
    "Reversing Linked List/LinkedList.class",
    "Reversing Linked List/Solution.java",
    "RoadToZero",
    "RoadToZero/Solution.class",
    "RoadToZero/Solution.java",
    "Rod Cutting",
    "Rod Cutting/Solution.java",
    "Rotation Matrix",
    "Rotation Matrix/Solution.java",
    "Rotation of Arrat",
    "Rotation of Arrat/Solution.class",
    "Rotation of Arrat/Solution.java",
    "Rotation of LinkedList",
    "Rotation of LinkedList/Solution$Node.class",
    "Rotation of LinkedList/Solution.class",
    "Rotation of LinkedList/Solution.java",
    "Rotten Oranges",
    "Rotten Oranges/Solution$Coordinates.class",
    "Rotten Oranges/Solution.class",
    "Rotten Oranges/Solution.java",
    "SCC Using Kosarju's",
    "SCC Using Kosarju's/Graph.class",
    "SCC Using Kosarju's/Solution.java",
    "Search Element in Sorted",
    "Search Element in Sorted/Solution.class",
    "Search Element in Sorted/Solution.java",
    "Search Key in BST",
    "Search Key in BST/Solution.java",
    "Selection Sort",
    "Selection Sort/Solution.py",
    "Shortest Common SuperSequence",
    "Shortest Common SuperSequence/Solution.class",
    "Shortest Common SuperSequence/Solution.java",
    "Sliding Window Maxium",
    "Sliding Window Maxium/Solution.class",
    "Sliding Window Maxium/Solution.java",
    "Snake Ladder",
    "Snake Ladder/SnakesLadder$qentry.class",
    "Snake Ladder/SnakesLadder.class",
    "Snake Ladder/Solution.class",
    "Snake Ladder/Solution.java",
    "Snake Ladder/SolutionNet.java",
    "Snake Ladder/cell.class",
    "Solution.java",
    "Sort Colors ",
    "Sort Colors /Solution.java",
    "Sticker Chief",
    "Sticker Chief/Solution.java",
    "SubArray Sum using Prefix Sum",
    "SubArray Sum using Prefix Sum/Solution.class",
    "SubArray Sum using Prefix Sum/Solution.java",
    "SubArray Sum",
    "SubArray Sum/Solution.java",
    "SubArray with Zero",
    "SubArray with Zero/MaxLenZeroSumSub.class",
    "SubArray with Zero/Solution.class",
    "SubArray with Zero/Solution.java",
    "Subset Sum Problem",
    "Subset Sum Problem/Solution.class",
    "Subset Sum Problem/Solution.java",
    "Subsets LeetCode",
    "Subsets LeetCode/Solution.class",
    "Subsets LeetCode/Solution.java",
    "Sum of Paths in BST",
    "Sum of Paths in BST/Node.class",
    "Sum of Paths in BST/Solution.class",
    "Sum of Paths in BST/Solution.java",
    "SumLinkedList",
    "SumLinkedList/Node.class",
    "SumLinkedList/Solution.class",
    "SumLinkedList/Solution.java",
    "SumOfSubArray",
    "SumOfSubArray/Solution.class",
    "SumOfSubArray/Solution.java",
    "SumOfSubArray/SubarraySum.class",
    "Symentric Binary Tree",
    "Symentric Binary Tree/Solution.java",
    "Topo Sort",
    "Topo Sort/Graph.class",
    "Topo Sort/Solution.class",
    "Topo Sort/Solution.java",
    "Tower of Hanoi",
    "Tower of Hanoi/Solution.class",
    "Tower of Hanoi/Solution.java",
    "Trap RainWater ",
    "Trap RainWater /Solution.java",
    "Two City Scheduling",
    "Two City Scheduling/Solution.java",
    "Ugly Numbers",
    "Ugly Numbers/Solution.class",
    "Ugly Numbers/Solution.java",
    "Ugly Numbers/UglyNumber.class",
    "Union Find",
    "Union Find/UnionFind_Using Disjoint Set.cpp",
    "Weighted Graph",
    "Weighted Graph/Edge.class",
    "Weighted Graph/Graph.class",
    "Weighted Graph/Solution.class",
    "Weighted Graph/Solution.java",
    "Word Break",
    "Word Break/Solution.java",
    "Xor Subarray",
    "Xor Subarray/Solution.class",
    "Xor Subarray/Solution.java",
    "Z Algorithm for pattern matching",
    "Z Algorithm for pattern matching/Solution.class",
    "Z Algorithm for pattern matching/Solution.java",
    "fub series",
    "fub series/Solution.class",
    "fub series/Solution.java",
    "minium cost to connect cities",
    "minium cost to connect cities/Solution.java",
    "out",
    "out/production",
    "out/production/Algorithms",
    "out/production/Algorithms/README.md",
    "out/production/Algorithms/README.ms",
    "out/production/Algorithms/Solution.",
    "out/production/Algorithms/Solution.jav",
    "out/production/Algorithms/SolutionSelf",
    "testingSquash",
    "testingSquashOne"
]
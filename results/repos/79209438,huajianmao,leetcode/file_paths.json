[
    ".coveralls.yml",
    ".gitignore",
    ".travis.yml",
    "README.md",
    "build.gradle",
    "config",
    "config/checkstyle",
    "config/checkstyle/checkstyle.xml",
    "leetcode.code-workspace",
    "pre-commit",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/cn",
    "src/main/java/cn/hjmao",
    "src/main/java/cn/hjmao/ProblemFetcher.java",
    "src/main/java/cn/hjmao/utils",
    "src/main/java/cn/hjmao/utils/AssertUtils.java",
    "src/main/java/cn/hjmao/utils/list",
    "src/main/java/cn/hjmao/utils/list/ListNode.java",
    "src/main/java/cn/hjmao/utils/list/ListNodeUtils.java",
    "src/main/java/cn/hjmao/utils/narytree",
    "src/main/java/cn/hjmao/utils/narytree/Node.java",
    "src/main/java/cn/hjmao/utils/quadtree",
    "src/main/java/cn/hjmao/utils/quadtree/Node.java",
    "src/main/java/cn/hjmao/utils/tree",
    "src/main/java/cn/hjmao/utils/tree/TreeNode.java",
    "src/main/java/cn/hjmao/utils/tree/TreeNodeUtils.java",
    "src/main/java/com",
    "src/main/java/com/leetcode",
    "src/main/java/com/leetcode/snippets",
    "src/main/java/com/leetcode/snippets/a001twosum",
    "src/main/java/com/leetcode/snippets/a001twosum/Solution.java",
    "src/main/java/com/leetcode/snippets/a002addtwonumbers",
    "src/main/java/com/leetcode/snippets/a002addtwonumbers/Solution.java",
    "src/main/java/com/leetcode/snippets/a003longestsubstringwithoutrepeatingcharacters",
    "src/main/java/com/leetcode/snippets/a003longestsubstringwithoutrepeatingcharacters/Solution.java",
    "src/main/java/com/leetcode/snippets/a004medianoftwosortedarrays",
    "src/main/java/com/leetcode/snippets/a004medianoftwosortedarrays/Solution.java",
    "src/main/java/com/leetcode/snippets/a005longestpalindromicsubstring",
    "src/main/java/com/leetcode/snippets/a005longestpalindromicsubstring/Solution.java",
    "src/main/java/com/leetcode/snippets/a006zigzagconversion",
    "src/main/java/com/leetcode/snippets/a006zigzagconversion/Solution.java",
    "src/main/java/com/leetcode/snippets/a007reverseinteger",
    "src/main/java/com/leetcode/snippets/a007reverseinteger/Solution.java",
    "src/main/java/com/leetcode/snippets/a008stringtointeger",
    "src/main/java/com/leetcode/snippets/a008stringtointeger/Solution.java",
    "src/main/java/com/leetcode/snippets/a009palindromenumber",
    "src/main/java/com/leetcode/snippets/a009palindromenumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a010regularexpressionmatching",
    "src/main/java/com/leetcode/snippets/a010regularexpressionmatching/Solution.java",
    "src/main/java/com/leetcode/snippets/a011containerwithmostwater",
    "src/main/java/com/leetcode/snippets/a011containerwithmostwater/Solution.java",
    "src/main/java/com/leetcode/snippets/a012integertoroman",
    "src/main/java/com/leetcode/snippets/a012integertoroman/Solution.java",
    "src/main/java/com/leetcode/snippets/a013romantointeger",
    "src/main/java/com/leetcode/snippets/a013romantointeger/Solution.java",
    "src/main/java/com/leetcode/snippets/a014longestcommonprefix",
    "src/main/java/com/leetcode/snippets/a014longestcommonprefix/Solution.java",
    "src/main/java/com/leetcode/snippets/a015threesum",
    "src/main/java/com/leetcode/snippets/a015threesum/Solution.java",
    "src/main/java/com/leetcode/snippets/a016threesumclosest",
    "src/main/java/com/leetcode/snippets/a016threesumclosest/Solution.java",
    "src/main/java/com/leetcode/snippets/a017lettercombinationsofaphonenumber",
    "src/main/java/com/leetcode/snippets/a017lettercombinationsofaphonenumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a018foursum",
    "src/main/java/com/leetcode/snippets/a018foursum/Solution.java",
    "src/main/java/com/leetcode/snippets/a019removenthnodefromendoflist",
    "src/main/java/com/leetcode/snippets/a019removenthnodefromendoflist/Solution.java",
    "src/main/java/com/leetcode/snippets/a020validparentheses",
    "src/main/java/com/leetcode/snippets/a020validparentheses/Solution.java",
    "src/main/java/com/leetcode/snippets/a021mergetwosortedlists",
    "src/main/java/com/leetcode/snippets/a021mergetwosortedlists/Solution.java",
    "src/main/java/com/leetcode/snippets/a022generateparentheses",
    "src/main/java/com/leetcode/snippets/a022generateparentheses/Solution.java",
    "src/main/java/com/leetcode/snippets/a023mergeksortedlists",
    "src/main/java/com/leetcode/snippets/a023mergeksortedlists/Solution.java",
    "src/main/java/com/leetcode/snippets/a024swapnodesinpairs",
    "src/main/java/com/leetcode/snippets/a024swapnodesinpairs/Solution.java",
    "src/main/java/com/leetcode/snippets/a025reversenodesinkgroup",
    "src/main/java/com/leetcode/snippets/a025reversenodesinkgroup/Solution.java",
    "src/main/java/com/leetcode/snippets/a026removeduplicatesfromsortedarray",
    "src/main/java/com/leetcode/snippets/a026removeduplicatesfromsortedarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a027removeelement",
    "src/main/java/com/leetcode/snippets/a027removeelement/Solution.java",
    "src/main/java/com/leetcode/snippets/a028implementstrstr",
    "src/main/java/com/leetcode/snippets/a028implementstrstr/Solution.java",
    "src/main/java/com/leetcode/snippets/a029dividetwointegers",
    "src/main/java/com/leetcode/snippets/a029dividetwointegers/Solution.java",
    "src/main/java/com/leetcode/snippets/a030substringwithconcatenationofallwords",
    "src/main/java/com/leetcode/snippets/a030substringwithconcatenationofallwords/Solution.java",
    "src/main/java/com/leetcode/snippets/a031nextpermutation",
    "src/main/java/com/leetcode/snippets/a031nextpermutation/Solution.java",
    "src/main/java/com/leetcode/snippets/a032longestvalidparentheses",
    "src/main/java/com/leetcode/snippets/a032longestvalidparentheses/Solution.java",
    "src/main/java/com/leetcode/snippets/a033searchinrotatedsortedarray",
    "src/main/java/com/leetcode/snippets/a033searchinrotatedsortedarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a034searchforarange",
    "src/main/java/com/leetcode/snippets/a034searchforarange/Solution.java",
    "src/main/java/com/leetcode/snippets/a035searchinsertposition",
    "src/main/java/com/leetcode/snippets/a035searchinsertposition/Solution.java",
    "src/main/java/com/leetcode/snippets/a036validsudoku",
    "src/main/java/com/leetcode/snippets/a036validsudoku/Solution.java",
    "src/main/java/com/leetcode/snippets/a037sudokusolver",
    "src/main/java/com/leetcode/snippets/a037sudokusolver/Solution.java",
    "src/main/java/com/leetcode/snippets/a038countandsay",
    "src/main/java/com/leetcode/snippets/a038countandsay/Solution.java",
    "src/main/java/com/leetcode/snippets/a039combinationsum",
    "src/main/java/com/leetcode/snippets/a039combinationsum/Solution.java",
    "src/main/java/com/leetcode/snippets/a040combinationsum2",
    "src/main/java/com/leetcode/snippets/a040combinationsum2/Solution.java",
    "src/main/java/com/leetcode/snippets/a041firstmissingpositive",
    "src/main/java/com/leetcode/snippets/a041firstmissingpositive/Solution.java",
    "src/main/java/com/leetcode/snippets/a042trappingrainwater",
    "src/main/java/com/leetcode/snippets/a042trappingrainwater/Solution.java",
    "src/main/java/com/leetcode/snippets/a043multiplystrings",
    "src/main/java/com/leetcode/snippets/a043multiplystrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a044wildcardmatching",
    "src/main/java/com/leetcode/snippets/a044wildcardmatching/Solution.java",
    "src/main/java/com/leetcode/snippets/a045jumpgaameii",
    "src/main/java/com/leetcode/snippets/a045jumpgaameii/Solution.java",
    "src/main/java/com/leetcode/snippets/a046permutations",
    "src/main/java/com/leetcode/snippets/a046permutations/Solution.java",
    "src/main/java/com/leetcode/snippets/a047permutationsii",
    "src/main/java/com/leetcode/snippets/a047permutationsii/Solution.java",
    "src/main/java/com/leetcode/snippets/a048rotateimage",
    "src/main/java/com/leetcode/snippets/a048rotateimage/Solution.java",
    "src/main/java/com/leetcode/snippets/a049groupanagrams",
    "src/main/java/com/leetcode/snippets/a049groupanagrams/Solution.java",
    "src/main/java/com/leetcode/snippets/a050powxn",
    "src/main/java/com/leetcode/snippets/a050powxn/Solution.java",
    "src/main/java/com/leetcode/snippets/a051nqueens",
    "src/main/java/com/leetcode/snippets/a051nqueens/Solution.java",
    "src/main/java/com/leetcode/snippets/a053maximumsubarray",
    "src/main/java/com/leetcode/snippets/a053maximumsubarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a058lengthoflastword",
    "src/main/java/com/leetcode/snippets/a058lengthoflastword/Solution.java",
    "src/main/java/com/leetcode/snippets/a066plusone",
    "src/main/java/com/leetcode/snippets/a066plusone/Solution.java",
    "src/main/java/com/leetcode/snippets/a067addbinary",
    "src/main/java/com/leetcode/snippets/a067addbinary/Solution.java",
    "src/main/java/com/leetcode/snippets/a069sqrtx",
    "src/main/java/com/leetcode/snippets/a069sqrtx/Solution.java",
    "src/main/java/com/leetcode/snippets/a070climbingstairs",
    "src/main/java/com/leetcode/snippets/a070climbingstairs/Solution.java",
    "src/main/java/com/leetcode/snippets/a083removeduplicatesfromsortedlist",
    "src/main/java/com/leetcode/snippets/a083removeduplicatesfromsortedlist/Solution.java",
    "src/main/java/com/leetcode/snippets/a088mergesortedarray",
    "src/main/java/com/leetcode/snippets/a088mergesortedarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a1002findcommoncharacters",
    "src/main/java/com/leetcode/snippets/a1002findcommoncharacters/Solution.java",
    "src/main/java/com/leetcode/snippets/a1005maximizesumofarrayafterknegations",
    "src/main/java/com/leetcode/snippets/a1005maximizesumofarrayafterknegations/Solution.java",
    "src/main/java/com/leetcode/snippets/a1009complementofbase10integer",
    "src/main/java/com/leetcode/snippets/a1009complementofbase10integer/Solution.java",
    "src/main/java/com/leetcode/snippets/a100sametree",
    "src/main/java/com/leetcode/snippets/a100sametree/Solution.java",
    "src/main/java/com/leetcode/snippets/a1010pairsofsongswithtotaldurationsdivisibleby60",
    "src/main/java/com/leetcode/snippets/a1010pairsofsongswithtotaldurationsdivisibleby60/Solution.java",
    "src/main/java/com/leetcode/snippets/a1013partitionarrayintothreepartswithequalsum",
    "src/main/java/com/leetcode/snippets/a1013partitionarrayintothreepartswithequalsum/Solution.java",
    "src/main/java/com/leetcode/snippets/a1018binaryprefixdivisibleby5",
    "src/main/java/com/leetcode/snippets/a1018binaryprefixdivisibleby5/Solution.java",
    "src/main/java/com/leetcode/snippets/a101symmetrictree",
    "src/main/java/com/leetcode/snippets/a101symmetrictree/Solution.java",
    "src/main/java/com/leetcode/snippets/a1021removeoutermostparentheses",
    "src/main/java/com/leetcode/snippets/a1021removeoutermostparentheses/Solution.java",
    "src/main/java/com/leetcode/snippets/a1022sumofroottoleafbinarynumbers",
    "src/main/java/com/leetcode/snippets/a1022sumofroottoleafbinarynumbers/Solution.java",
    "src/main/java/com/leetcode/snippets/a1025divisorgame",
    "src/main/java/com/leetcode/snippets/a1025divisorgame/Solution.java",
    "src/main/java/com/leetcode/snippets/a1030matrixcellsindistanceorder",
    "src/main/java/com/leetcode/snippets/a1030matrixcellsindistanceorder/Solution.java",
    "src/main/java/com/leetcode/snippets/a1033movingstonesuntilconsecutive",
    "src/main/java/com/leetcode/snippets/a1033movingstonesuntilconsecutive/Solution.java",
    "src/main/java/com/leetcode/snippets/a1037validboomerang",
    "src/main/java/com/leetcode/snippets/a1037validboomerang/Solution.java",
    "src/main/java/com/leetcode/snippets/a1042flowerplantingwithnoadjacent",
    "src/main/java/com/leetcode/snippets/a1042flowerplantingwithnoadjacent/Solution.java",
    "src/main/java/com/leetcode/snippets/a1046laststoneweight",
    "src/main/java/com/leetcode/snippets/a1046laststoneweight/Solution.java",
    "src/main/java/com/leetcode/snippets/a1047removealladjacentduplicatesinstring",
    "src/main/java/com/leetcode/snippets/a1047removealladjacentduplicatesinstring/Solution.java",
    "src/main/java/com/leetcode/snippets/a104maximumdepthofbinarytree",
    "src/main/java/com/leetcode/snippets/a104maximumdepthofbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a107binarytreelevelordertraversalii",
    "src/main/java/com/leetcode/snippets/a107binarytreelevelordertraversalii/Solution.java",
    "src/main/java/com/leetcode/snippets/a108convertsortedarraytobinarysearchtree",
    "src/main/java/com/leetcode/snippets/a108convertsortedarraytobinarysearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a110balancedbinarytree",
    "src/main/java/com/leetcode/snippets/a110balancedbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a111minimumdepthofbinarytree",
    "src/main/java/com/leetcode/snippets/a111minimumdepthofbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a112pathsum",
    "src/main/java/com/leetcode/snippets/a112pathsum/Solution.java",
    "src/main/java/com/leetcode/snippets/a118pascalstriangle",
    "src/main/java/com/leetcode/snippets/a118pascalstriangle/Solution.java",
    "src/main/java/com/leetcode/snippets/a119pascalstriangleii",
    "src/main/java/com/leetcode/snippets/a119pascalstriangleii/Solution.java",
    "src/main/java/com/leetcode/snippets/a121besttimetobuyandsellstock",
    "src/main/java/com/leetcode/snippets/a121besttimetobuyandsellstock/Solution.java",
    "src/main/java/com/leetcode/snippets/a122besttimetobuyandsellstockii",
    "src/main/java/com/leetcode/snippets/a122besttimetobuyandsellstockii/Solution.java",
    "src/main/java/com/leetcode/snippets/a125validpalindrome",
    "src/main/java/com/leetcode/snippets/a125validpalindrome/Solution.java",
    "src/main/java/com/leetcode/snippets/a136singlenumber",
    "src/main/java/com/leetcode/snippets/a136singlenumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a137singlenumberii",
    "src/main/java/com/leetcode/snippets/a137singlenumberii/Solution.java",
    "src/main/java/com/leetcode/snippets/a141linkedlistcycle",
    "src/main/java/com/leetcode/snippets/a141linkedlistcycle/Solution.java",
    "src/main/java/com/leetcode/snippets/a155minstack",
    "src/main/java/com/leetcode/snippets/a155minstack/MinStack.java",
    "src/main/java/com/leetcode/snippets/a160intersectionoftwolinkedlists",
    "src/main/java/com/leetcode/snippets/a160intersectionoftwolinkedlists/Solution.java",
    "src/main/java/com/leetcode/snippets/a167twosumiiinputarrayissorted",
    "src/main/java/com/leetcode/snippets/a167twosumiiinputarrayissorted/Solution.java",
    "src/main/java/com/leetcode/snippets/a168excelsheetcolumntitle",
    "src/main/java/com/leetcode/snippets/a168excelsheetcolumntitle/Solution.java",
    "src/main/java/com/leetcode/snippets/a169majorityelement",
    "src/main/java/com/leetcode/snippets/a169majorityelement/Solution.java",
    "src/main/java/com/leetcode/snippets/a171excelsheetcolumnnumber",
    "src/main/java/com/leetcode/snippets/a171excelsheetcolumnnumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a172factorialtrailingzeroes",
    "src/main/java/com/leetcode/snippets/a172factorialtrailingzeroes/Solution.java",
    "src/main/java/com/leetcode/snippets/a189rotatearray",
    "src/main/java/com/leetcode/snippets/a189rotatearray/Solution.java",
    "src/main/java/com/leetcode/snippets/a190reversebits",
    "src/main/java/com/leetcode/snippets/a190reversebits/Solution.java",
    "src/main/java/com/leetcode/snippets/a191numberof1bits",
    "src/main/java/com/leetcode/snippets/a191numberof1bits/Solution.java",
    "src/main/java/com/leetcode/snippets/a198houserobber",
    "src/main/java/com/leetcode/snippets/a198houserobber/Solution.java",
    "src/main/java/com/leetcode/snippets/a202happynumber",
    "src/main/java/com/leetcode/snippets/a202happynumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a203removelinkedlistelements",
    "src/main/java/com/leetcode/snippets/a203removelinkedlistelements/Solution.java",
    "src/main/java/com/leetcode/snippets/a204countprimes",
    "src/main/java/com/leetcode/snippets/a204countprimes/Solution.java",
    "src/main/java/com/leetcode/snippets/a205isomorphicstrings",
    "src/main/java/com/leetcode/snippets/a205isomorphicstrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a206reverselinkedlist",
    "src/main/java/com/leetcode/snippets/a206reverselinkedlist/Solution.java",
    "src/main/java/com/leetcode/snippets/a217containsduplicate",
    "src/main/java/com/leetcode/snippets/a217containsduplicate/Solution.java",
    "src/main/java/com/leetcode/snippets/a219containsduplicateii",
    "src/main/java/com/leetcode/snippets/a219containsduplicateii/Solution.java",
    "src/main/java/com/leetcode/snippets/a221maximalsquare",
    "src/main/java/com/leetcode/snippets/a221maximalsquare/Solution.java",
    "src/main/java/com/leetcode/snippets/a225implementstackusingqueues",
    "src/main/java/com/leetcode/snippets/a225implementstackusingqueues/MyStack.java",
    "src/main/java/com/leetcode/snippets/a231poweroftwo",
    "src/main/java/com/leetcode/snippets/a231poweroftwo/Solution.java",
    "src/main/java/com/leetcode/snippets/a232implementqueueusingstacks",
    "src/main/java/com/leetcode/snippets/a232implementqueueusingstacks/MyQueue.java",
    "src/main/java/com/leetcode/snippets/a234palindromelinkedlist",
    "src/main/java/com/leetcode/snippets/a234palindromelinkedlist/Solution.java",
    "src/main/java/com/leetcode/snippets/a235lowestcommonancestorofabinarysearchtree",
    "src/main/java/com/leetcode/snippets/a235lowestcommonancestorofabinarysearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a237deletenodeinalinkedlist",
    "src/main/java/com/leetcode/snippets/a237deletenodeinalinkedlist/Solution.java",
    "src/main/java/com/leetcode/snippets/a242validanagram",
    "src/main/java/com/leetcode/snippets/a242validanagram/Solution.java",
    "src/main/java/com/leetcode/snippets/a257binarytreepaths",
    "src/main/java/com/leetcode/snippets/a257binarytreepaths/Solution.java",
    "src/main/java/com/leetcode/snippets/a258adddigits",
    "src/main/java/com/leetcode/snippets/a258adddigits/Solution.java",
    "src/main/java/com/leetcode/snippets/a263uglynumber",
    "src/main/java/com/leetcode/snippets/a263uglynumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a268missingnumber",
    "src/main/java/com/leetcode/snippets/a268missingnumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a278firstbadversion",
    "src/main/java/com/leetcode/snippets/a278firstbadversion/Solution.java",
    "src/main/java/com/leetcode/snippets/a278firstbadversion/VersionControl.java",
    "src/main/java/com/leetcode/snippets/a283movezeroes",
    "src/main/java/com/leetcode/snippets/a283movezeroes/Solution.java",
    "src/main/java/com/leetcode/snippets/a290wordpattern",
    "src/main/java/com/leetcode/snippets/a290wordpattern/Solution.java",
    "src/main/java/com/leetcode/snippets/a292nimgame",
    "src/main/java/com/leetcode/snippets/a292nimgame/Solution.java",
    "src/main/java/com/leetcode/snippets/a299bullsandcows",
    "src/main/java/com/leetcode/snippets/a299bullsandcows/Solution.java",
    "src/main/java/com/leetcode/snippets/a303rangesumqueryimmutable",
    "src/main/java/com/leetcode/snippets/a303rangesumqueryimmutable/NumArray.java",
    "src/main/java/com/leetcode/snippets/a326powerofthree",
    "src/main/java/com/leetcode/snippets/a326powerofthree/Solution.java",
    "src/main/java/com/leetcode/snippets/a342poweroffour",
    "src/main/java/com/leetcode/snippets/a342poweroffour/Solution.java",
    "src/main/java/com/leetcode/snippets/a344reversestring",
    "src/main/java/com/leetcode/snippets/a344reversestring/Solution.java",
    "src/main/java/com/leetcode/snippets/a345reversevowelsofastring",
    "src/main/java/com/leetcode/snippets/a345reversevowelsofastring/Solution.java",
    "src/main/java/com/leetcode/snippets/a349intersectionoftwoarrays",
    "src/main/java/com/leetcode/snippets/a349intersectionoftwoarrays/Solution.java",
    "src/main/java/com/leetcode/snippets/a350intersectionoftwoarraysii",
    "src/main/java/com/leetcode/snippets/a350intersectionoftwoarraysii/Solution.java",
    "src/main/java/com/leetcode/snippets/a367validperfectsquare",
    "src/main/java/com/leetcode/snippets/a367validperfectsquare/Solution.java",
    "src/main/java/com/leetcode/snippets/a371sumoftwointegers",
    "src/main/java/com/leetcode/snippets/a371sumoftwointegers/Solution.java",
    "src/main/java/com/leetcode/snippets/a374guessnumberhigherorlower",
    "src/main/java/com/leetcode/snippets/a374guessnumberhigherorlower/GuessGame.java",
    "src/main/java/com/leetcode/snippets/a374guessnumberhigherorlower/Solution.java",
    "src/main/java/com/leetcode/snippets/a383ransomnote",
    "src/main/java/com/leetcode/snippets/a383ransomnote/Solution.java",
    "src/main/java/com/leetcode/snippets/a387firstuniquecharacterinastring",
    "src/main/java/com/leetcode/snippets/a387firstuniquecharacterinastring/Solution.java",
    "src/main/java/com/leetcode/snippets/a389findthedifference",
    "src/main/java/com/leetcode/snippets/a389findthedifference/Solution.java",
    "src/main/java/com/leetcode/snippets/a400nthdigit",
    "src/main/java/com/leetcode/snippets/a400nthdigit/Solution.java",
    "src/main/java/com/leetcode/snippets/a401binarywatch",
    "src/main/java/com/leetcode/snippets/a401binarywatch/Solution.java",
    "src/main/java/com/leetcode/snippets/a404sumofleftleaves",
    "src/main/java/com/leetcode/snippets/a404sumofleftleaves/Solution.java",
    "src/main/java/com/leetcode/snippets/a405convertanumbertohexadecimal",
    "src/main/java/com/leetcode/snippets/a405convertanumbertohexadecimal/Solution.java",
    "src/main/java/com/leetcode/snippets/a409longestpalindrome",
    "src/main/java/com/leetcode/snippets/a409longestpalindrome/Solution.java",
    "src/main/java/com/leetcode/snippets/a412fizzbuzz",
    "src/main/java/com/leetcode/snippets/a412fizzbuzz/Solution.java",
    "src/main/java/com/leetcode/snippets/a414thirdmaximumnumber",
    "src/main/java/com/leetcode/snippets/a414thirdmaximumnumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a415addstrings",
    "src/main/java/com/leetcode/snippets/a415addstrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a429narytreelevelordertraversal",
    "src/main/java/com/leetcode/snippets/a429narytreelevelordertraversal/Solution.java",
    "src/main/java/com/leetcode/snippets/a434numberofsegmentsinastring",
    "src/main/java/com/leetcode/snippets/a434numberofsegmentsinastring/Solution.java",
    "src/main/java/com/leetcode/snippets/a437pathsumiii",
    "src/main/java/com/leetcode/snippets/a437pathsumiii/Solution.java",
    "src/main/java/com/leetcode/snippets/a438findallanagramsinastring",
    "src/main/java/com/leetcode/snippets/a438findallanagramsinastring/Solution.java",
    "src/main/java/com/leetcode/snippets/a441arrangingcoins",
    "src/main/java/com/leetcode/snippets/a441arrangingcoins/Solution.java",
    "src/main/java/com/leetcode/snippets/a443stringcompression",
    "src/main/java/com/leetcode/snippets/a443stringcompression/Solution.java",
    "src/main/java/com/leetcode/snippets/a447numberofboomerangs",
    "src/main/java/com/leetcode/snippets/a447numberofboomerangs/Solution.java",
    "src/main/java/com/leetcode/snippets/a448findallnumbersdisappearedinanarray",
    "src/main/java/com/leetcode/snippets/a448findallnumbersdisappearedinanarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a453minimummovestoequalarrayelements",
    "src/main/java/com/leetcode/snippets/a453minimummovestoequalarrayelements/Solution.java",
    "src/main/java/com/leetcode/snippets/a455assigncookies",
    "src/main/java/com/leetcode/snippets/a455assigncookies/Solution.java",
    "src/main/java/com/leetcode/snippets/a459repeatedsubstringpattern",
    "src/main/java/com/leetcode/snippets/a459repeatedsubstringpattern/Solution.java",
    "src/main/java/com/leetcode/snippets/a461hammingdistance",
    "src/main/java/com/leetcode/snippets/a461hammingdistance/Solution.java",
    "src/main/java/com/leetcode/snippets/a463islandperimeter",
    "src/main/java/com/leetcode/snippets/a463islandperimeter/Solution.java",
    "src/main/java/com/leetcode/snippets/a472constructquadtree",
    "src/main/java/com/leetcode/snippets/a472constructquadtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a475heaters",
    "src/main/java/com/leetcode/snippets/a475heaters/Solution.java",
    "src/main/java/com/leetcode/snippets/a476numbercomplement",
    "src/main/java/com/leetcode/snippets/a476numbercomplement/Solution.java",
    "src/main/java/com/leetcode/snippets/a482licensekeyformatting",
    "src/main/java/com/leetcode/snippets/a482licensekeyformatting/Solution.java",
    "src/main/java/com/leetcode/snippets/a485maxconsecutiveones",
    "src/main/java/com/leetcode/snippets/a485maxconsecutiveones/Solution.java",
    "src/main/java/com/leetcode/snippets/a492constructtherectangle",
    "src/main/java/com/leetcode/snippets/a492constructtherectangle/Solution.java",
    "src/main/java/com/leetcode/snippets/a496nextgreaterelementi",
    "src/main/java/com/leetcode/snippets/a496nextgreaterelementi/Solution.java",
    "src/main/java/com/leetcode/snippets/a500keyboardrow",
    "src/main/java/com/leetcode/snippets/a500keyboardrow/Solution.java",
    "src/main/java/com/leetcode/snippets/a501findmodeinbinarysearchtree",
    "src/main/java/com/leetcode/snippets/a501findmodeinbinarysearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a504base7",
    "src/main/java/com/leetcode/snippets/a504base7/Solution.java",
    "src/main/java/com/leetcode/snippets/a506relativeranks",
    "src/main/java/com/leetcode/snippets/a506relativeranks/Solution.java",
    "src/main/java/com/leetcode/snippets/a507perfectnumber",
    "src/main/java/com/leetcode/snippets/a507perfectnumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a509fibonaccinumber",
    "src/main/java/com/leetcode/snippets/a509fibonaccinumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a520detectcapital",
    "src/main/java/com/leetcode/snippets/a520detectcapital/Solution.java",
    "src/main/java/com/leetcode/snippets/a521longestuncommonsubsequencei",
    "src/main/java/com/leetcode/snippets/a521longestuncommonsubsequencei/Solution.java",
    "src/main/java/com/leetcode/snippets/a530minimumabsolutedifferenceinbst",
    "src/main/java/com/leetcode/snippets/a530minimumabsolutedifferenceinbst/Solution.java",
    "src/main/java/com/leetcode/snippets/a532kdiffpairsinanarray",
    "src/main/java/com/leetcode/snippets/a532kdiffpairsinanarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a538convertbsttogreatertree",
    "src/main/java/com/leetcode/snippets/a538convertbsttogreatertree/Solution.java",
    "src/main/java/com/leetcode/snippets/a541reversestringii",
    "src/main/java/com/leetcode/snippets/a541reversestringii/Solution.java",
    "src/main/java/com/leetcode/snippets/a543diameterofbinarytree",
    "src/main/java/com/leetcode/snippets/a543diameterofbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a551studentattendancerecordi",
    "src/main/java/com/leetcode/snippets/a551studentattendancerecordi/Solution.java",
    "src/main/java/com/leetcode/snippets/a557reversewordsinastringiii",
    "src/main/java/com/leetcode/snippets/a557reversewordsinastringiii/Solution.java",
    "src/main/java/com/leetcode/snippets/a558quadtreeintersection",
    "src/main/java/com/leetcode/snippets/a558quadtreeintersection/Solution.java",
    "src/main/java/com/leetcode/snippets/a559maximumdepthofnarytree",
    "src/main/java/com/leetcode/snippets/a559maximumdepthofnarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a561arraypartitioni",
    "src/main/java/com/leetcode/snippets/a561arraypartitioni/Solution.java",
    "src/main/java/com/leetcode/snippets/a563binarytreetilt",
    "src/main/java/com/leetcode/snippets/a563binarytreetilt/Solution.java",
    "src/main/java/com/leetcode/snippets/a566reshapethematrix",
    "src/main/java/com/leetcode/snippets/a566reshapethematrix/Solution.java",
    "src/main/java/com/leetcode/snippets/a572subtreeofanothertree",
    "src/main/java/com/leetcode/snippets/a572subtreeofanothertree/Solution.java",
    "src/main/java/com/leetcode/snippets/a575distributecandies",
    "src/main/java/com/leetcode/snippets/a575distributecandies/Solution.java",
    "src/main/java/com/leetcode/snippets/a581shortestunsortedcontinuoussubarray",
    "src/main/java/com/leetcode/snippets/a581shortestunsortedcontinuoussubarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a589narytreepreordertraversal",
    "src/main/java/com/leetcode/snippets/a589narytreepreordertraversal/Solution.java",
    "src/main/java/com/leetcode/snippets/a590narytreepostordertraversal",
    "src/main/java/com/leetcode/snippets/a590narytreepostordertraversal/Solution.java",
    "src/main/java/com/leetcode/snippets/a594longestharmonioussubsequence",
    "src/main/java/com/leetcode/snippets/a594longestharmonioussubsequence/Solution.java",
    "src/main/java/com/leetcode/snippets/a595bigcountries",
    "src/main/java/com/leetcode/snippets/a595bigcountries/Solution.java",
    "src/main/java/com/leetcode/snippets/a598rangeadditionii",
    "src/main/java/com/leetcode/snippets/a598rangeadditionii/Solution.java",
    "src/main/java/com/leetcode/snippets/a599minimumindexsumoftwolists",
    "src/main/java/com/leetcode/snippets/a599minimumindexsumoftwolists/Solution.java",
    "src/main/java/com/leetcode/snippets/a605canplaceflowers",
    "src/main/java/com/leetcode/snippets/a605canplaceflowers/Solution.java",
    "src/main/java/com/leetcode/snippets/a606constructstringfrombinarytree",
    "src/main/java/com/leetcode/snippets/a606constructstringfrombinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a617mergetwobinarytrees",
    "src/main/java/com/leetcode/snippets/a617mergetwobinarytrees/Solution.java",
    "src/main/java/com/leetcode/snippets/a628maximumproductofthreenumbers",
    "src/main/java/com/leetcode/snippets/a628maximumproductofthreenumbers/Solution.java",
    "src/main/java/com/leetcode/snippets/a633sumofsquarenumbers",
    "src/main/java/com/leetcode/snippets/a633sumofsquarenumbers/Solution.java",
    "src/main/java/com/leetcode/snippets/a637averageoflevelsinbinarytree",
    "src/main/java/com/leetcode/snippets/a637averageoflevelsinbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a643maximumaveragesubarrayi",
    "src/main/java/com/leetcode/snippets/a643maximumaveragesubarrayi/Solution.java",
    "src/main/java/com/leetcode/snippets/a645setmismatch",
    "src/main/java/com/leetcode/snippets/a645setmismatch/Solution.java",
    "src/main/java/com/leetcode/snippets/a653twosumivinputisabst",
    "src/main/java/com/leetcode/snippets/a653twosumivinputisabst/Solution.java",
    "src/main/java/com/leetcode/snippets/a657robotreturntoorigin",
    "src/main/java/com/leetcode/snippets/a657robotreturntoorigin/Solution.java",
    "src/main/java/com/leetcode/snippets/a661imagesmoother",
    "src/main/java/com/leetcode/snippets/a661imagesmoother/Solution.java",
    "src/main/java/com/leetcode/snippets/a665nondecreasingarray",
    "src/main/java/com/leetcode/snippets/a665nondecreasingarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a669trimabinarysearchtree",
    "src/main/java/com/leetcode/snippets/a669trimabinarysearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a671secondminimumnodeinabinarytree",
    "src/main/java/com/leetcode/snippets/a671secondminimumnodeinabinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a674longestcontinuousincreasingsubsequence",
    "src/main/java/com/leetcode/snippets/a674longestcontinuousincreasingsubsequence/Solution.java",
    "src/main/java/com/leetcode/snippets/a680validpalindromeii",
    "src/main/java/com/leetcode/snippets/a680validpalindromeii/Solution.java",
    "src/main/java/com/leetcode/snippets/a682baseballgame",
    "src/main/java/com/leetcode/snippets/a682baseballgame/Solution.java",
    "src/main/java/com/leetcode/snippets/a686repeatedstringmatch",
    "src/main/java/com/leetcode/snippets/a686repeatedstringmatch/Solution.java",
    "src/main/java/com/leetcode/snippets/a687longestunivaluepath",
    "src/main/java/com/leetcode/snippets/a687longestunivaluepath/Solution.java",
    "src/main/java/com/leetcode/snippets/a690employeeimportance",
    "src/main/java/com/leetcode/snippets/a690employeeimportance/Employee.java",
    "src/main/java/com/leetcode/snippets/a690employeeimportance/Solution.java",
    "src/main/java/com/leetcode/snippets/a693binarynumberwithalternatingbits",
    "src/main/java/com/leetcode/snippets/a693binarynumberwithalternatingbits/Solution.java",
    "src/main/java/com/leetcode/snippets/a696countbinarysubstrings",
    "src/main/java/com/leetcode/snippets/a696countbinarysubstrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a697degreeofanarray",
    "src/main/java/com/leetcode/snippets/a697degreeofanarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a700searchinabinarysearchtree",
    "src/main/java/com/leetcode/snippets/a700searchinabinarysearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a703kthlargestelementinastream",
    "src/main/java/com/leetcode/snippets/a703kthlargestelementinastream/KthLargest.java",
    "src/main/java/com/leetcode/snippets/a704binarysearch",
    "src/main/java/com/leetcode/snippets/a704binarysearch/Solution.java",
    "src/main/java/com/leetcode/snippets/a705designhashset",
    "src/main/java/com/leetcode/snippets/a705designhashset/MyHashSet.java",
    "src/main/java/com/leetcode/snippets/a706designhashmap",
    "src/main/java/com/leetcode/snippets/a706designhashmap/MyHashMap.java",
    "src/main/java/com/leetcode/snippets/a707designlinkedlist",
    "src/main/java/com/leetcode/snippets/a707designlinkedlist/MyLinkedList.java",
    "src/main/java/com/leetcode/snippets/a709tolowercase",
    "src/main/java/com/leetcode/snippets/a709tolowercase/Solution.java",
    "src/main/java/com/leetcode/snippets/a7171bitand2bitcharacters",
    "src/main/java/com/leetcode/snippets/a7171bitand2bitcharacters/Solution.java",
    "src/main/java/com/leetcode/snippets/a720longestwordindictionary",
    "src/main/java/com/leetcode/snippets/a720longestwordindictionary/Solution.java",
    "src/main/java/com/leetcode/snippets/a724findpivotindex",
    "src/main/java/com/leetcode/snippets/a724findpivotindex/Solution.java",
    "src/main/java/com/leetcode/snippets/a728selfdividingnumbers",
    "src/main/java/com/leetcode/snippets/a728selfdividingnumbers/Solution.java",
    "src/main/java/com/leetcode/snippets/a733floodfill",
    "src/main/java/com/leetcode/snippets/a733floodfill/Solution.java",
    "src/main/java/com/leetcode/snippets/a744findsmallestlettergreaterthantarget",
    "src/main/java/com/leetcode/snippets/a744findsmallestlettergreaterthantarget/Solution.java",
    "src/main/java/com/leetcode/snippets/a746mincostclimbingstairs",
    "src/main/java/com/leetcode/snippets/a746mincostclimbingstairs/Solution.java",
    "src/main/java/com/leetcode/snippets/a747largestnumberatleasttwiceofothers",
    "src/main/java/com/leetcode/snippets/a747largestnumberatleasttwiceofothers/Solution.java",
    "src/main/java/com/leetcode/snippets/a748shortestcompletingword",
    "src/main/java/com/leetcode/snippets/a748shortestcompletingword/Solution.java",
    "src/main/java/com/leetcode/snippets/a754reachanumber",
    "src/main/java/com/leetcode/snippets/a754reachanumber/Solution.java",
    "src/main/java/com/leetcode/snippets/a762primenumberofsetbitsinbinaryrepresentation",
    "src/main/java/com/leetcode/snippets/a762primenumberofsetbitsinbinaryrepresentation/Solution.java",
    "src/main/java/com/leetcode/snippets/a766toeplitzmatrix",
    "src/main/java/com/leetcode/snippets/a766toeplitzmatrix/Solution.java",
    "src/main/java/com/leetcode/snippets/a771jewelsandstones",
    "src/main/java/com/leetcode/snippets/a771jewelsandstones/Solution.java",
    "src/main/java/com/leetcode/snippets/a783minimumdistancebetweenbstnodes",
    "src/main/java/com/leetcode/snippets/a783minimumdistancebetweenbstnodes/Solution.java",
    "src/main/java/com/leetcode/snippets/a784lettercasepermutation",
    "src/main/java/com/leetcode/snippets/a784lettercasepermutation/Solution.java",
    "src/main/java/com/leetcode/snippets/a788rotateddigits",
    "src/main/java/com/leetcode/snippets/a788rotateddigits/Solution.java",
    "src/main/java/com/leetcode/snippets/a796rotatestring",
    "src/main/java/com/leetcode/snippets/a796rotatestring/Solution.java",
    "src/main/java/com/leetcode/snippets/a804uniquemorsecodewords",
    "src/main/java/com/leetcode/snippets/a804uniquemorsecodewords/Solution.java",
    "src/main/java/com/leetcode/snippets/a806numberoflinestowritestring",
    "src/main/java/com/leetcode/snippets/a806numberoflinestowritestring/Solution.java",
    "src/main/java/com/leetcode/snippets/a811subdomainvisitcount",
    "src/main/java/com/leetcode/snippets/a811subdomainvisitcount/Solution.java",
    "src/main/java/com/leetcode/snippets/a812largesttrianglearea",
    "src/main/java/com/leetcode/snippets/a812largesttrianglearea/Solution.java",
    "src/main/java/com/leetcode/snippets/a819mostcommonword",
    "src/main/java/com/leetcode/snippets/a819mostcommonword/Solution.java",
    "src/main/java/com/leetcode/snippets/a821shortestdistancetoacharacter",
    "src/main/java/com/leetcode/snippets/a821shortestdistancetoacharacter/Solution.java",
    "src/main/java/com/leetcode/snippets/a824goatlatin",
    "src/main/java/com/leetcode/snippets/a824goatlatin/Solution.java",
    "src/main/java/com/leetcode/snippets/a830positionsoflargegroups",
    "src/main/java/com/leetcode/snippets/a830positionsoflargegroups/Solution.java",
    "src/main/java/com/leetcode/snippets/a832flippinganimage",
    "src/main/java/com/leetcode/snippets/a832flippinganimage/Solution.java",
    "src/main/java/com/leetcode/snippets/a836rectangleoverlap",
    "src/main/java/com/leetcode/snippets/a836rectangleoverlap/Solution.java",
    "src/main/java/com/leetcode/snippets/a840magicsquaresingrid",
    "src/main/java/com/leetcode/snippets/a840magicsquaresingrid/Solution.java",
    "src/main/java/com/leetcode/snippets/a844backspacestringcompare",
    "src/main/java/com/leetcode/snippets/a844backspacestringcompare/Solution.java",
    "src/main/java/com/leetcode/snippets/a849maximizedistancetoclosestperson",
    "src/main/java/com/leetcode/snippets/a849maximizedistancetoclosestperson/Solution.java",
    "src/main/java/com/leetcode/snippets/a852peakindexinamountainarray",
    "src/main/java/com/leetcode/snippets/a852peakindexinamountainarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a859buddystrings",
    "src/main/java/com/leetcode/snippets/a859buddystrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a860lemonadechange",
    "src/main/java/com/leetcode/snippets/a860lemonadechange/Solution.java",
    "src/main/java/com/leetcode/snippets/a867transposematrix",
    "src/main/java/com/leetcode/snippets/a867transposematrix/Solution.java",
    "src/main/java/com/leetcode/snippets/a868binarygap",
    "src/main/java/com/leetcode/snippets/a868binarygap/Solution.java",
    "src/main/java/com/leetcode/snippets/a872leafsimilartrees",
    "src/main/java/com/leetcode/snippets/a872leafsimilartrees/Solution.java",
    "src/main/java/com/leetcode/snippets/a874walkingrobotsimulation",
    "src/main/java/com/leetcode/snippets/a874walkingrobotsimulation/Solution.java",
    "src/main/java/com/leetcode/snippets/a876middleofthelinkedlist",
    "src/main/java/com/leetcode/snippets/a876middleofthelinkedlist/Solution.java",
    "src/main/java/com/leetcode/snippets/a883projectionareaof3dshapes",
    "src/main/java/com/leetcode/snippets/a883projectionareaof3dshapes/Solution.java",
    "src/main/java/com/leetcode/snippets/a884uncommonwordsfromtwosentences",
    "src/main/java/com/leetcode/snippets/a884uncommonwordsfromtwosentences/Solution.java",
    "src/main/java/com/leetcode/snippets/a888faircandyswap",
    "src/main/java/com/leetcode/snippets/a888faircandyswap/Solution.java",
    "src/main/java/com/leetcode/snippets/a892surfaceareaof3dshapes",
    "src/main/java/com/leetcode/snippets/a892surfaceareaof3dshapes/Solution.java",
    "src/main/java/com/leetcode/snippets/a893groupsofspecialequivalentstrings",
    "src/main/java/com/leetcode/snippets/a893groupsofspecialequivalentstrings/Solution.java",
    "src/main/java/com/leetcode/snippets/a896monotonicarray",
    "src/main/java/com/leetcode/snippets/a896monotonicarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a897increasingordersearchtree",
    "src/main/java/com/leetcode/snippets/a897increasingordersearchtree/Solution.java",
    "src/main/java/com/leetcode/snippets/a905sortarraybyparity",
    "src/main/java/com/leetcode/snippets/a905sortarraybyparity/Solution.java",
    "src/main/java/com/leetcode/snippets/a908smallestrangei",
    "src/main/java/com/leetcode/snippets/a908smallestrangei/Solution.java",
    "src/main/java/com/leetcode/snippets/a914xofakindinadeckofcards",
    "src/main/java/com/leetcode/snippets/a914xofakindinadeckofcards/Solution.java",
    "src/main/java/com/leetcode/snippets/a917reverseonlyletters",
    "src/main/java/com/leetcode/snippets/a917reverseonlyletters/Solution.java",
    "src/main/java/com/leetcode/snippets/a922sortarraybyparityii",
    "src/main/java/com/leetcode/snippets/a922sortarraybyparityii/Solution.java",
    "src/main/java/com/leetcode/snippets/a925longpressedname",
    "src/main/java/com/leetcode/snippets/a925longpressedname/Solution.java",
    "src/main/java/com/leetcode/snippets/a929uniqueemailaddresses",
    "src/main/java/com/leetcode/snippets/a929uniqueemailaddresses/Solution.java",
    "src/main/java/com/leetcode/snippets/a933numberofrecentcalls",
    "src/main/java/com/leetcode/snippets/a933numberofrecentcalls/RecentCounter.java",
    "src/main/java/com/leetcode/snippets/a937reorderlogfiles",
    "src/main/java/com/leetcode/snippets/a937reorderlogfiles/Solution.java",
    "src/main/java/com/leetcode/snippets/a938rangesumofbst",
    "src/main/java/com/leetcode/snippets/a938rangesumofbst/Solution.java",
    "src/main/java/com/leetcode/snippets/a941validmountainarray",
    "src/main/java/com/leetcode/snippets/a941validmountainarray/Solution.java",
    "src/main/java/com/leetcode/snippets/a942distringmatch",
    "src/main/java/com/leetcode/snippets/a942distringmatch/Solution.java",
    "src/main/java/com/leetcode/snippets/a944deletecolumnstomakesorted",
    "src/main/java/com/leetcode/snippets/a944deletecolumnstomakesorted/Solution.java",
    "src/main/java/com/leetcode/snippets/a949largesttimeforgivendigits",
    "src/main/java/com/leetcode/snippets/a949largesttimeforgivendigits/Solution.java",
    "src/main/java/com/leetcode/snippets/a953verifyinganaliendictionary",
    "src/main/java/com/leetcode/snippets/a953verifyinganaliendictionary/Solution.java",
    "src/main/java/com/leetcode/snippets/a961nrepeatedelementinsize2narray",
    "src/main/java/com/leetcode/snippets/a961nrepeatedelementinsize2narray/Solution.java",
    "src/main/java/com/leetcode/snippets/a985sumofevennumbersafterqueries",
    "src/main/java/com/leetcode/snippets/a985sumofevennumbersafterqueries/Solution.java",
    "src/main/java/com/leetcode/snippets/a993cousinsinbinarytree",
    "src/main/java/com/leetcode/snippets/a993cousinsinbinarytree/Solution.java",
    "src/main/java/com/leetcode/snippets/a994rottingoranges",
    "src/main/java/com/leetcode/snippets/a994rottingoranges/Solution.java",
    "src/main/java/com/leetcode/snippets/a997findthetownjudge",
    "src/main/java/com/leetcode/snippets/a997findthetownjudge/Solution.java",
    "src/main/java/com/leetcode/snippets/a999availablecapturesforrook",
    "src/main/java/com/leetcode/snippets/a999availablecapturesforrook/Solution.java",
    "src/main/java/com/leetcode/snippets/blank",
    "src/main/java/com/leetcode/snippets/blank/Solution.java",
    "src/test",
    "src/test/java",
    "src/test/java/cn",
    "src/test/java/cn/hjmao",
    "src/test/java/cn/hjmao/ProblemFetcherTest.java",
    "src/test/java/cn/hjmao/utils",
    "src/test/java/cn/hjmao/utils/AssertUtilsTest.java",
    "src/test/java/cn/hjmao/utils/list",
    "src/test/java/cn/hjmao/utils/list/ListNodeUtilsTest.java",
    "src/test/java/cn/hjmao/utils/quadtree",
    "src/test/java/cn/hjmao/utils/quadtree/NodeTest.java",
    "src/test/java/cn/hjmao/utils/tree",
    "src/test/java/cn/hjmao/utils/tree/TreeNodeUtilsTest.java",
    "src/test/java/com",
    "src/test/java/com/leetcode",
    "src/test/java/com/leetcode/snippets",
    "src/test/java/com/leetcode/snippets/a001twosum",
    "src/test/java/com/leetcode/snippets/a001twosum/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a002addtwonumbers",
    "src/test/java/com/leetcode/snippets/a002addtwonumbers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a003longestsubstringwithoutrepeatingcharacters",
    "src/test/java/com/leetcode/snippets/a003longestsubstringwithoutrepeatingcharacters/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a004medianoftwosortedarrays",
    "src/test/java/com/leetcode/snippets/a004medianoftwosortedarrays/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a005longestpalindromicsubstring",
    "src/test/java/com/leetcode/snippets/a005longestpalindromicsubstring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a006zigzagconversion",
    "src/test/java/com/leetcode/snippets/a006zigzagconversion/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a007reverseinteger",
    "src/test/java/com/leetcode/snippets/a007reverseinteger/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a008stringtointeger",
    "src/test/java/com/leetcode/snippets/a008stringtointeger/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a009palindromenumber",
    "src/test/java/com/leetcode/snippets/a009palindromenumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a010regularexpressionmatching",
    "src/test/java/com/leetcode/snippets/a010regularexpressionmatching/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a011containerwithmostwater",
    "src/test/java/com/leetcode/snippets/a011containerwithmostwater/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a012integertoroman",
    "src/test/java/com/leetcode/snippets/a012integertoroman/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a013romantointeger",
    "src/test/java/com/leetcode/snippets/a013romantointeger/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a014longestcommonprefix",
    "src/test/java/com/leetcode/snippets/a014longestcommonprefix/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a015threesum",
    "src/test/java/com/leetcode/snippets/a015threesum/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a016threesumclosest",
    "src/test/java/com/leetcode/snippets/a016threesumclosest/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a017lettercombinationsofaphonenumber",
    "src/test/java/com/leetcode/snippets/a017lettercombinationsofaphonenumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a018foursum",
    "src/test/java/com/leetcode/snippets/a018foursum/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a019removenthnodefromendoflist",
    "src/test/java/com/leetcode/snippets/a019removenthnodefromendoflist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a020validparentheses",
    "src/test/java/com/leetcode/snippets/a020validparentheses/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a021mergetwosortedlists",
    "src/test/java/com/leetcode/snippets/a021mergetwosortedlists/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a022generateparentheses",
    "src/test/java/com/leetcode/snippets/a022generateparentheses/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a023mergeksortedlists",
    "src/test/java/com/leetcode/snippets/a023mergeksortedlists/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a024swapnodesinpairs",
    "src/test/java/com/leetcode/snippets/a024swapnodesinpairs/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a025reversenodesinkgroup",
    "src/test/java/com/leetcode/snippets/a025reversenodesinkgroup/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a026removeduplicatesfromsortedarray",
    "src/test/java/com/leetcode/snippets/a026removeduplicatesfromsortedarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a027removeelement",
    "src/test/java/com/leetcode/snippets/a027removeelement/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a028implementstrstr",
    "src/test/java/com/leetcode/snippets/a028implementstrstr/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a029dividetwointegers",
    "src/test/java/com/leetcode/snippets/a029dividetwointegers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a030substringwithconcatenationofallwords",
    "src/test/java/com/leetcode/snippets/a030substringwithconcatenationofallwords/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a031nextpermutation",
    "src/test/java/com/leetcode/snippets/a031nextpermutation/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a032longestvalidparentheses",
    "src/test/java/com/leetcode/snippets/a032longestvalidparentheses/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a033searchinrotatedsortedarray",
    "src/test/java/com/leetcode/snippets/a033searchinrotatedsortedarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a034searchforarange",
    "src/test/java/com/leetcode/snippets/a034searchforarange/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a035searchinsertposition",
    "src/test/java/com/leetcode/snippets/a035searchinsertposition/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a036validsudoku",
    "src/test/java/com/leetcode/snippets/a036validsudoku/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a037sudokusolver",
    "src/test/java/com/leetcode/snippets/a037sudokusolver/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a038countandsay",
    "src/test/java/com/leetcode/snippets/a038countandsay/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a039combinationsum",
    "src/test/java/com/leetcode/snippets/a039combinationsum/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a040combinationsum2",
    "src/test/java/com/leetcode/snippets/a040combinationsum2/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a041firstmissingpositive",
    "src/test/java/com/leetcode/snippets/a041firstmissingpositive/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a042trappingrainwater",
    "src/test/java/com/leetcode/snippets/a042trappingrainwater/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a043multiplystrings",
    "src/test/java/com/leetcode/snippets/a043multiplystrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a044wildcardmatching",
    "src/test/java/com/leetcode/snippets/a044wildcardmatching/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a045jumpgaameii",
    "src/test/java/com/leetcode/snippets/a045jumpgaameii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a046permutations",
    "src/test/java/com/leetcode/snippets/a046permutations/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a049groupanagrams",
    "src/test/java/com/leetcode/snippets/a049groupanagrams/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a050powxn",
    "src/test/java/com/leetcode/snippets/a050powxn/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a051nqueens",
    "src/test/java/com/leetcode/snippets/a051nqueens/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a053maximumsubarray",
    "src/test/java/com/leetcode/snippets/a053maximumsubarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a058lengthoflastword",
    "src/test/java/com/leetcode/snippets/a058lengthoflastword/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a066plusone",
    "src/test/java/com/leetcode/snippets/a066plusone/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a067addbinary",
    "src/test/java/com/leetcode/snippets/a067addbinary/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a069sqrtx",
    "src/test/java/com/leetcode/snippets/a069sqrtx/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a070climbingstairs",
    "src/test/java/com/leetcode/snippets/a070climbingstairs/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a083removeduplicatesfromsortedlist",
    "src/test/java/com/leetcode/snippets/a083removeduplicatesfromsortedlist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a088mergesortedarray",
    "src/test/java/com/leetcode/snippets/a088mergesortedarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1002findcommoncharacters",
    "src/test/java/com/leetcode/snippets/a1002findcommoncharacters/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1005maximizesumofarrayafterknegations",
    "src/test/java/com/leetcode/snippets/a1005maximizesumofarrayafterknegations/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1009complementofbase10integer",
    "src/test/java/com/leetcode/snippets/a1009complementofbase10integer/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a100sametree",
    "src/test/java/com/leetcode/snippets/a100sametree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1010pairsofsongswithtotaldurationsdivisibleby60",
    "src/test/java/com/leetcode/snippets/a1010pairsofsongswithtotaldurationsdivisibleby60/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1013partitionarrayintothreepartswithequalsum",
    "src/test/java/com/leetcode/snippets/a1013partitionarrayintothreepartswithequalsum/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1018binaryprefixdivisibleby5",
    "src/test/java/com/leetcode/snippets/a1018binaryprefixdivisibleby5/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1021removeoutermostparentheses",
    "src/test/java/com/leetcode/snippets/a1021removeoutermostparentheses/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1022sumofroottoleafbinarynumbers",
    "src/test/java/com/leetcode/snippets/a1022sumofroottoleafbinarynumbers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1025divisorgame",
    "src/test/java/com/leetcode/snippets/a1025divisorgame/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1030matrixcellsindistanceorder",
    "src/test/java/com/leetcode/snippets/a1030matrixcellsindistanceorder/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1033movingstonesuntilconsecutive",
    "src/test/java/com/leetcode/snippets/a1033movingstonesuntilconsecutive/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1037validboomerang",
    "src/test/java/com/leetcode/snippets/a1037validboomerang/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1042flowerplantingwithnoadjacent",
    "src/test/java/com/leetcode/snippets/a1042flowerplantingwithnoadjacent/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1046laststoneweight",
    "src/test/java/com/leetcode/snippets/a1046laststoneweight/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a1047removealladjacentduplicatesinstring",
    "src/test/java/com/leetcode/snippets/a1047removealladjacentduplicatesinstring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a104maximumdepthofbinarytree",
    "src/test/java/com/leetcode/snippets/a104maximumdepthofbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a107binarytreelevelordertraversalii",
    "src/test/java/com/leetcode/snippets/a107binarytreelevelordertraversalii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a108convertsortedarraytobinarysearchtree",
    "src/test/java/com/leetcode/snippets/a108convertsortedarraytobinarysearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a110balancedbinarytree",
    "src/test/java/com/leetcode/snippets/a110balancedbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a111minimumdepthofbinarytree",
    "src/test/java/com/leetcode/snippets/a111minimumdepthofbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a119pascalstriangleii",
    "src/test/java/com/leetcode/snippets/a119pascalstriangleii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a121besttimetobuyandsellstock",
    "src/test/java/com/leetcode/snippets/a121besttimetobuyandsellstock/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a122besttimetobuyandsellstockii",
    "src/test/java/com/leetcode/snippets/a122besttimetobuyandsellstockii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a125validpalindrome",
    "src/test/java/com/leetcode/snippets/a125validpalindrome/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a136singlenumber",
    "src/test/java/com/leetcode/snippets/a136singlenumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a137singlenumberii",
    "src/test/java/com/leetcode/snippets/a137singlenumberii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a141linkedlistcycle",
    "src/test/java/com/leetcode/snippets/a141linkedlistcycle/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a155minstack",
    "src/test/java/com/leetcode/snippets/a155minstack/MinStackTest.java",
    "src/test/java/com/leetcode/snippets/a160intersectionoftwolinkedlists",
    "src/test/java/com/leetcode/snippets/a160intersectionoftwolinkedlists/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a167twosumiiinputarrayissorted",
    "src/test/java/com/leetcode/snippets/a167twosumiiinputarrayissorted/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a168excelsheetcolumntitle",
    "src/test/java/com/leetcode/snippets/a168excelsheetcolumntitle/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a169majorityelement",
    "src/test/java/com/leetcode/snippets/a169majorityelement/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a171excelsheetcolumnnumber",
    "src/test/java/com/leetcode/snippets/a171excelsheetcolumnnumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a172factorialtrailingzeroes",
    "src/test/java/com/leetcode/snippets/a172factorialtrailingzeroes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a189rotatearray",
    "src/test/java/com/leetcode/snippets/a189rotatearray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a190reversebits",
    "src/test/java/com/leetcode/snippets/a190reversebits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a191numberof1bits",
    "src/test/java/com/leetcode/snippets/a191numberof1bits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a198houserobber",
    "src/test/java/com/leetcode/snippets/a198houserobber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a202happynumber",
    "src/test/java/com/leetcode/snippets/a202happynumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a203removelinkedlistelements",
    "src/test/java/com/leetcode/snippets/a203removelinkedlistelements/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a204countprimes",
    "src/test/java/com/leetcode/snippets/a204countprimes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a205isomorphicstrings",
    "src/test/java/com/leetcode/snippets/a205isomorphicstrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a206reverselinkedlist",
    "src/test/java/com/leetcode/snippets/a206reverselinkedlist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a217containsduplicate",
    "src/test/java/com/leetcode/snippets/a217containsduplicate/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a219containsduplicateii",
    "src/test/java/com/leetcode/snippets/a219containsduplicateii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a221maximalsquare",
    "src/test/java/com/leetcode/snippets/a221maximalsquare/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a225implementstackusingqueues",
    "src/test/java/com/leetcode/snippets/a225implementstackusingqueues/MyStackTest.java",
    "src/test/java/com/leetcode/snippets/a231poweroftwo",
    "src/test/java/com/leetcode/snippets/a231poweroftwo/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a232implementqueueusingstacks",
    "src/test/java/com/leetcode/snippets/a232implementqueueusingstacks/MyQueueTest.java",
    "src/test/java/com/leetcode/snippets/a234palindromelinkedlist",
    "src/test/java/com/leetcode/snippets/a234palindromelinkedlist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a235lowestcommonancestorofabinarysearchtree",
    "src/test/java/com/leetcode/snippets/a235lowestcommonancestorofabinarysearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a237deletenodeinalinkedlist",
    "src/test/java/com/leetcode/snippets/a237deletenodeinalinkedlist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a242validanagram",
    "src/test/java/com/leetcode/snippets/a242validanagram/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a257binarytreepaths",
    "src/test/java/com/leetcode/snippets/a257binarytreepaths/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a258adddigits",
    "src/test/java/com/leetcode/snippets/a258adddigits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a263uglynumber",
    "src/test/java/com/leetcode/snippets/a263uglynumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a268missingnumber",
    "src/test/java/com/leetcode/snippets/a268missingnumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a278firstbadversion",
    "src/test/java/com/leetcode/snippets/a278firstbadversion/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a283movezeroes",
    "src/test/java/com/leetcode/snippets/a283movezeroes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a290wordpattern",
    "src/test/java/com/leetcode/snippets/a290wordpattern/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a292nimgame",
    "src/test/java/com/leetcode/snippets/a292nimgame/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a299bullsandcows",
    "src/test/java/com/leetcode/snippets/a299bullsandcows/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a303rangesumqueryimmutable",
    "src/test/java/com/leetcode/snippets/a303rangesumqueryimmutable/NumArrayTest.java",
    "src/test/java/com/leetcode/snippets/a326powerofthree",
    "src/test/java/com/leetcode/snippets/a326powerofthree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a342poweroffour",
    "src/test/java/com/leetcode/snippets/a342poweroffour/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a344reversestring",
    "src/test/java/com/leetcode/snippets/a344reversestring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a345reversevowelsofastring",
    "src/test/java/com/leetcode/snippets/a345reversevowelsofastring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a349intersectionoftwoarrays",
    "src/test/java/com/leetcode/snippets/a349intersectionoftwoarrays/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a350intersectionoftwoarraysii",
    "src/test/java/com/leetcode/snippets/a350intersectionoftwoarraysii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a367validperfectsquare",
    "src/test/java/com/leetcode/snippets/a367validperfectsquare/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a371sumoftwointegers",
    "src/test/java/com/leetcode/snippets/a371sumoftwointegers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a374guessnumberhigherorlower",
    "src/test/java/com/leetcode/snippets/a374guessnumberhigherorlower/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a383ransomnote",
    "src/test/java/com/leetcode/snippets/a383ransomnote/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a387firstuniquecharacterinastring",
    "src/test/java/com/leetcode/snippets/a387firstuniquecharacterinastring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a389findthedifference",
    "src/test/java/com/leetcode/snippets/a389findthedifference/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a400nthdigit",
    "src/test/java/com/leetcode/snippets/a400nthdigit/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a401binarywatch",
    "src/test/java/com/leetcode/snippets/a401binarywatch/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a404sumofleftleaves",
    "src/test/java/com/leetcode/snippets/a404sumofleftleaves/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a405convertanumbertohexadecimal",
    "src/test/java/com/leetcode/snippets/a405convertanumbertohexadecimal/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a409longestpalindrome",
    "src/test/java/com/leetcode/snippets/a409longestpalindrome/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a412fizzbuzz",
    "src/test/java/com/leetcode/snippets/a412fizzbuzz/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a414thirdmaximumnumber",
    "src/test/java/com/leetcode/snippets/a414thirdmaximumnumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a415addstrings",
    "src/test/java/com/leetcode/snippets/a415addstrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a429narytreelevelordertraversal",
    "src/test/java/com/leetcode/snippets/a429narytreelevelordertraversal/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a434numberofsegmentsinastring",
    "src/test/java/com/leetcode/snippets/a434numberofsegmentsinastring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a437pathsumiii",
    "src/test/java/com/leetcode/snippets/a437pathsumiii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a438findallanagramsinastring",
    "src/test/java/com/leetcode/snippets/a438findallanagramsinastring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a441arrangingcoins",
    "src/test/java/com/leetcode/snippets/a441arrangingcoins/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a443stringcompression",
    "src/test/java/com/leetcode/snippets/a443stringcompression/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a447numberofboomerangs",
    "src/test/java/com/leetcode/snippets/a447numberofboomerangs/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a448findallnumbersdisappearedinanarray",
    "src/test/java/com/leetcode/snippets/a448findallnumbersdisappearedinanarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a453minimummovestoequalarrayelements",
    "src/test/java/com/leetcode/snippets/a453minimummovestoequalarrayelements/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a455assigncookies",
    "src/test/java/com/leetcode/snippets/a455assigncookies/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a459repeatedsubstringpattern",
    "src/test/java/com/leetcode/snippets/a459repeatedsubstringpattern/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a461hammingdistance",
    "src/test/java/com/leetcode/snippets/a461hammingdistance/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a463islandperimeter",
    "src/test/java/com/leetcode/snippets/a463islandperimeter/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a472constructquadtree",
    "src/test/java/com/leetcode/snippets/a472constructquadtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a475heaters",
    "src/test/java/com/leetcode/snippets/a475heaters/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a476numbercomplement",
    "src/test/java/com/leetcode/snippets/a476numbercomplement/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a482licensekeyformatting",
    "src/test/java/com/leetcode/snippets/a482licensekeyformatting/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a485maxconsecutiveones",
    "src/test/java/com/leetcode/snippets/a485maxconsecutiveones/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a492constructtherectangle",
    "src/test/java/com/leetcode/snippets/a492constructtherectangle/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a496nextgreaterelementi",
    "src/test/java/com/leetcode/snippets/a496nextgreaterelementi/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a500keyboardrow",
    "src/test/java/com/leetcode/snippets/a500keyboardrow/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a501findmodeinbinarysearchtree",
    "src/test/java/com/leetcode/snippets/a501findmodeinbinarysearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a504base7",
    "src/test/java/com/leetcode/snippets/a504base7/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a506relativeranks",
    "src/test/java/com/leetcode/snippets/a506relativeranks/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a507perfectnumber",
    "src/test/java/com/leetcode/snippets/a507perfectnumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a509fibonaccinumber",
    "src/test/java/com/leetcode/snippets/a509fibonaccinumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a520detectcapital",
    "src/test/java/com/leetcode/snippets/a520detectcapital/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a521longestuncommonsubsequencei",
    "src/test/java/com/leetcode/snippets/a521longestuncommonsubsequencei/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a530minimumabsolutedifferenceinbst",
    "src/test/java/com/leetcode/snippets/a530minimumabsolutedifferenceinbst/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a532kdiffpairsinanarray",
    "src/test/java/com/leetcode/snippets/a532kdiffpairsinanarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a538convertbsttogreatertree",
    "src/test/java/com/leetcode/snippets/a538convertbsttogreatertree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a541reversestringii",
    "src/test/java/com/leetcode/snippets/a541reversestringii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a543diameterofbinarytree",
    "src/test/java/com/leetcode/snippets/a543diameterofbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a551studentattendancerecordi",
    "src/test/java/com/leetcode/snippets/a551studentattendancerecordi/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a557reversewordsinastringiii",
    "src/test/java/com/leetcode/snippets/a557reversewordsinastringiii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a558quadtreeintersection",
    "src/test/java/com/leetcode/snippets/a558quadtreeintersection/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a559maximumdepthofnarytree",
    "src/test/java/com/leetcode/snippets/a559maximumdepthofnarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a561arraypartitioni",
    "src/test/java/com/leetcode/snippets/a561arraypartitioni/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a563binarytreetilt",
    "src/test/java/com/leetcode/snippets/a563binarytreetilt/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a566reshapethematrix",
    "src/test/java/com/leetcode/snippets/a566reshapethematrix/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a572subtreeofanothertree",
    "src/test/java/com/leetcode/snippets/a572subtreeofanothertree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a575distributecandies",
    "src/test/java/com/leetcode/snippets/a575distributecandies/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a581shortestunsortedcontinuoussubarray",
    "src/test/java/com/leetcode/snippets/a581shortestunsortedcontinuoussubarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a589narytreepreordertraversal",
    "src/test/java/com/leetcode/snippets/a589narytreepreordertraversal/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a590narytreepostordertraversal",
    "src/test/java/com/leetcode/snippets/a590narytreepostordertraversal/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a594longestharmonioussubsequence",
    "src/test/java/com/leetcode/snippets/a594longestharmonioussubsequence/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a598rangeadditionii",
    "src/test/java/com/leetcode/snippets/a598rangeadditionii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a599minimumindexsumoftwolists",
    "src/test/java/com/leetcode/snippets/a599minimumindexsumoftwolists/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a605canplaceflowers",
    "src/test/java/com/leetcode/snippets/a605canplaceflowers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a606constructstringfrombinarytree",
    "src/test/java/com/leetcode/snippets/a606constructstringfrombinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a617mergetwobinarytrees",
    "src/test/java/com/leetcode/snippets/a617mergetwobinarytrees/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a628maximumproductofthreenumbers",
    "src/test/java/com/leetcode/snippets/a628maximumproductofthreenumbers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a633sumofsquarenumbers",
    "src/test/java/com/leetcode/snippets/a633sumofsquarenumbers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a637averageoflevelsinbinarytree",
    "src/test/java/com/leetcode/snippets/a637averageoflevelsinbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a643maximumaveragesubarrayi",
    "src/test/java/com/leetcode/snippets/a643maximumaveragesubarrayi/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a645setmismatch",
    "src/test/java/com/leetcode/snippets/a645setmismatch/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a653twosumivinputisabst",
    "src/test/java/com/leetcode/snippets/a653twosumivinputisabst/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a657robotreturntoorigin",
    "src/test/java/com/leetcode/snippets/a657robotreturntoorigin/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a661imagesmoother",
    "src/test/java/com/leetcode/snippets/a661imagesmoother/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a665nondecreasingarray",
    "src/test/java/com/leetcode/snippets/a665nondecreasingarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a669trimabinarysearchtree",
    "src/test/java/com/leetcode/snippets/a669trimabinarysearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a671secondminimumnodeinabinarytree",
    "src/test/java/com/leetcode/snippets/a671secondminimumnodeinabinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a674longestcontinuousincreasingsubsequence",
    "src/test/java/com/leetcode/snippets/a674longestcontinuousincreasingsubsequence/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a680validpalindromeii",
    "src/test/java/com/leetcode/snippets/a680validpalindromeii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a682baseballgame",
    "src/test/java/com/leetcode/snippets/a682baseballgame/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a686repeatedstringmatch",
    "src/test/java/com/leetcode/snippets/a686repeatedstringmatch/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a687longestunivaluepath",
    "src/test/java/com/leetcode/snippets/a687longestunivaluepath/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a690employeeimportance",
    "src/test/java/com/leetcode/snippets/a690employeeimportance/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a693binarynumberwithalternatingbits",
    "src/test/java/com/leetcode/snippets/a693binarynumberwithalternatingbits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a696countbinarysubstrings",
    "src/test/java/com/leetcode/snippets/a696countbinarysubstrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a697degreeofanarray",
    "src/test/java/com/leetcode/snippets/a697degreeofanarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a700searchinabinarysearchtree",
    "src/test/java/com/leetcode/snippets/a700searchinabinarysearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a703kthlargestelementinastream",
    "src/test/java/com/leetcode/snippets/a703kthlargestelementinastream/KthLargestTest.java",
    "src/test/java/com/leetcode/snippets/a704binarysearch",
    "src/test/java/com/leetcode/snippets/a704binarysearch/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a705designhashset",
    "src/test/java/com/leetcode/snippets/a705designhashset/MyHashSetTest.java",
    "src/test/java/com/leetcode/snippets/a706designhashmap",
    "src/test/java/com/leetcode/snippets/a706designhashmap/MyHashMapTest.java",
    "src/test/java/com/leetcode/snippets/a707designlinkedlist",
    "src/test/java/com/leetcode/snippets/a707designlinkedlist/MyLinkedListTest.java",
    "src/test/java/com/leetcode/snippets/a709tolowercase",
    "src/test/java/com/leetcode/snippets/a709tolowercase/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a7171bitand2bitcharacters",
    "src/test/java/com/leetcode/snippets/a7171bitand2bitcharacters/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a720longestwordindictionary",
    "src/test/java/com/leetcode/snippets/a720longestwordindictionary/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a724findpivotindex",
    "src/test/java/com/leetcode/snippets/a724findpivotindex/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a728selfdividingnumbers",
    "src/test/java/com/leetcode/snippets/a728selfdividingnumbers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a733floodfill",
    "src/test/java/com/leetcode/snippets/a733floodfill/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a744findsmallestlettergreaterthantarget",
    "src/test/java/com/leetcode/snippets/a744findsmallestlettergreaterthantarget/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a746mincostclimbingstairs",
    "src/test/java/com/leetcode/snippets/a746mincostclimbingstairs/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a747largestnumberatleasttwiceofothers",
    "src/test/java/com/leetcode/snippets/a747largestnumberatleasttwiceofothers/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a748shortestcompletingword",
    "src/test/java/com/leetcode/snippets/a748shortestcompletingword/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a754reachanumber",
    "src/test/java/com/leetcode/snippets/a754reachanumber/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a762primenumberofsetbitsinbinaryrepresentation",
    "src/test/java/com/leetcode/snippets/a762primenumberofsetbitsinbinaryrepresentation/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a766toeplitzmatrix",
    "src/test/java/com/leetcode/snippets/a766toeplitzmatrix/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a771jewelsandstones",
    "src/test/java/com/leetcode/snippets/a771jewelsandstones/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a783minimumdistancebetweenbstnodes",
    "src/test/java/com/leetcode/snippets/a783minimumdistancebetweenbstnodes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a784lettercasepermutation",
    "src/test/java/com/leetcode/snippets/a784lettercasepermutation/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a788rotateddigits",
    "src/test/java/com/leetcode/snippets/a788rotateddigits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a796rotatestring",
    "src/test/java/com/leetcode/snippets/a796rotatestring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a804uniquemorsecodewords",
    "src/test/java/com/leetcode/snippets/a804uniquemorsecodewords/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a806numberoflinestowritestring",
    "src/test/java/com/leetcode/snippets/a806numberoflinestowritestring/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a811subdomainvisitcount",
    "src/test/java/com/leetcode/snippets/a811subdomainvisitcount/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a812largesttrianglearea",
    "src/test/java/com/leetcode/snippets/a812largesttrianglearea/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a819mostcommonword",
    "src/test/java/com/leetcode/snippets/a819mostcommonword/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a821shortestdistancetoacharacter",
    "src/test/java/com/leetcode/snippets/a821shortestdistancetoacharacter/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a824goatlatin",
    "src/test/java/com/leetcode/snippets/a824goatlatin/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a830positionsoflargegroups",
    "src/test/java/com/leetcode/snippets/a830positionsoflargegroups/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a832flippinganimage",
    "src/test/java/com/leetcode/snippets/a832flippinganimage/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a836rectangleoverlap",
    "src/test/java/com/leetcode/snippets/a836rectangleoverlap/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a837new21game",
    "src/test/java/com/leetcode/snippets/a837new21game/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a840magicsquaresingrid",
    "src/test/java/com/leetcode/snippets/a840magicsquaresingrid/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a844backspacestringcompare",
    "src/test/java/com/leetcode/snippets/a844backspacestringcompare/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a849maximizedistancetoclosestperson",
    "src/test/java/com/leetcode/snippets/a849maximizedistancetoclosestperson/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a852peakindexinamountainarray",
    "src/test/java/com/leetcode/snippets/a852peakindexinamountainarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a859buddystrings",
    "src/test/java/com/leetcode/snippets/a859buddystrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a860lemonadechange",
    "src/test/java/com/leetcode/snippets/a860lemonadechange/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a867transposematrix",
    "src/test/java/com/leetcode/snippets/a867transposematrix/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a868binarygap",
    "src/test/java/com/leetcode/snippets/a868binarygap/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a872leafsimilartrees",
    "src/test/java/com/leetcode/snippets/a872leafsimilartrees/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a874walkingrobotsimulation",
    "src/test/java/com/leetcode/snippets/a874walkingrobotsimulation/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a876middleofthelinkedlist",
    "src/test/java/com/leetcode/snippets/a876middleofthelinkedlist/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a883projectionareaof3dshapes",
    "src/test/java/com/leetcode/snippets/a883projectionareaof3dshapes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a884uncommonwordsfromtwosentences",
    "src/test/java/com/leetcode/snippets/a884uncommonwordsfromtwosentences/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a888faircandyswap",
    "src/test/java/com/leetcode/snippets/a888faircandyswap/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a892surfaceareaof3dshapes",
    "src/test/java/com/leetcode/snippets/a892surfaceareaof3dshapes/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a893groupsofspecialequivalentstrings",
    "src/test/java/com/leetcode/snippets/a893groupsofspecialequivalentstrings/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a896monotonicarray",
    "src/test/java/com/leetcode/snippets/a896monotonicarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a897increasingordersearchtree",
    "src/test/java/com/leetcode/snippets/a897increasingordersearchtree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a905sortarraybyparity",
    "src/test/java/com/leetcode/snippets/a905sortarraybyparity/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a908smallestrangei",
    "src/test/java/com/leetcode/snippets/a908smallestrangei/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a914xofakindinadeckofcards",
    "src/test/java/com/leetcode/snippets/a914xofakindinadeckofcards/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a917reverseonlyletters",
    "src/test/java/com/leetcode/snippets/a917reverseonlyletters/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a922sortarraybyparityii",
    "src/test/java/com/leetcode/snippets/a922sortarraybyparityii/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a925longpressedname",
    "src/test/java/com/leetcode/snippets/a925longpressedname/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a929uniqueemailaddresses",
    "src/test/java/com/leetcode/snippets/a929uniqueemailaddresses/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a933numberofrecentcalls",
    "src/test/java/com/leetcode/snippets/a933numberofrecentcalls/RecentCounterTest.java",
    "src/test/java/com/leetcode/snippets/a937reorderlogfiles",
    "src/test/java/com/leetcode/snippets/a937reorderlogfiles/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a938rangesumofbst",
    "src/test/java/com/leetcode/snippets/a938rangesumofbst/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a941validmountainarray",
    "src/test/java/com/leetcode/snippets/a941validmountainarray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a942distringmatch",
    "src/test/java/com/leetcode/snippets/a942distringmatch/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a944deletecolumnstomakesorted",
    "src/test/java/com/leetcode/snippets/a944deletecolumnstomakesorted/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a949largesttimeforgivendigits",
    "src/test/java/com/leetcode/snippets/a949largesttimeforgivendigits/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a953verifyinganaliendictionary",
    "src/test/java/com/leetcode/snippets/a953verifyinganaliendictionary/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a961nrepeatedelementinsize2narray",
    "src/test/java/com/leetcode/snippets/a961nrepeatedelementinsize2narray/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a985sumofevennumbersafterqueries",
    "src/test/java/com/leetcode/snippets/a985sumofevennumbersafterqueries/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a993cousinsinbinarytree",
    "src/test/java/com/leetcode/snippets/a993cousinsinbinarytree/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a994rottingoranges",
    "src/test/java/com/leetcode/snippets/a994rottingoranges/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a997findthetownjudge",
    "src/test/java/com/leetcode/snippets/a997findthetownjudge/SolutionTest.java",
    "src/test/java/com/leetcode/snippets/a999availablecapturesforrook",
    "src/test/java/com/leetcode/snippets/a999availablecapturesforrook/SolutionTest.java",
    "src/test/resources",
    "src/test/resources/log4j2.properties"
]
[
    ".gitignore",
    "LICENSE",
    "README.md",
    "build.gradle",
    "docker-compose",
    "docker-compose/multi-broker",
    "docker-compose/multi-broker/docker-compose.yaml",
    "docker-compose/single-broker",
    "docker-compose/single-broker/docker-compose.yaml",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "settings.gradle",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/effectivekafka",
    "src/main/java/effectivekafka/basic",
    "src/main/java/effectivekafka/basic/BasicConsumerSample.java",
    "src/main/java/effectivekafka/basic/BasicProducerSample.java",
    "src/main/java/effectivekafka/customerevents",
    "src/main/java/effectivekafka/customerevents/event",
    "src/main/java/effectivekafka/customerevents/event/CreateCustomer.java",
    "src/main/java/effectivekafka/customerevents/event/CustomerPayload.java",
    "src/main/java/effectivekafka/customerevents/event/ReinstateCustomer.java",
    "src/main/java/effectivekafka/customerevents/event/SuspendCustomer.java",
    "src/main/java/effectivekafka/customerevents/event/UpdateCustomer.java",
    "src/main/java/effectivekafka/customerevents/receiver",
    "src/main/java/effectivekafka/customerevents/receiver/AbstractReceiver.java",
    "src/main/java/effectivekafka/customerevents/receiver/ConsumerBusinessLogic.java",
    "src/main/java/effectivekafka/customerevents/receiver/CustomerPayloadDeserializer.java",
    "src/main/java/effectivekafka/customerevents/receiver/CustomerPayloadOrError.java",
    "src/main/java/effectivekafka/customerevents/receiver/DirectReceiver.java",
    "src/main/java/effectivekafka/customerevents/receiver/EventListener.java",
    "src/main/java/effectivekafka/customerevents/receiver/EventReceiver.java",
    "src/main/java/effectivekafka/customerevents/receiver/PipelinedReceiver.java",
    "src/main/java/effectivekafka/customerevents/receiver/ReceiveEvent.java",
    "src/main/java/effectivekafka/customerevents/receiver/RunDirectConsumer.java",
    "src/main/java/effectivekafka/customerevents/receiver/RunPipelinedConsumer.java",
    "src/main/java/effectivekafka/customerevents/sender",
    "src/main/java/effectivekafka/customerevents/sender/CustomerPayloadSerializer.java",
    "src/main/java/effectivekafka/customerevents/sender/DirectSender.java",
    "src/main/java/effectivekafka/customerevents/sender/EventSender.java",
    "src/main/java/effectivekafka/customerevents/sender/ProducerBusinessLogic.java",
    "src/main/java/effectivekafka/customerevents/sender/RunRandomEventProducer.java",
    "src/main/java/effectivekafka/framework",
    "src/main/java/effectivekafka/framework/config",
    "src/main/java/effectivekafka/framework/config/AbstractClientConfig.java",
    "src/main/java/effectivekafka/framework/config/SampleProducerConfig.java",
    "src/main/java/effectivekafka/framework/receiver",
    "src/main/java/effectivekafka/framework/receiver/AsyncReceiver.java",
    "src/main/java/effectivekafka/framework/receiver/EventListener.java",
    "src/main/java/effectivekafka/framework/receiver/EventReceiver.java",
    "src/main/java/effectivekafka/framework/receiver/FanoutReceiver.java",
    "src/main/java/effectivekafka/framework/receiver/ReceiveEvent.java",
    "src/main/java/effectivekafka/quota",
    "src/main/java/effectivekafka/quota/BufferedQuotaProducerSample.java",
    "src/main/java/effectivekafka/quota/QuotaProducerSample.java",
    "src/main/java/effectivekafka/quota/ScramProducerConfig.java",
    "src/main/java/effectivekafka/quota/StatsPrinter.java",
    "src/main/java/effectivekafka/quota/ThrottledProducerSample.java",
    "src/main/java/effectivekafka/sasl",
    "src/main/java/effectivekafka/sasl/SaslSslConsumerSample.java",
    "src/main/java/effectivekafka/sasl/SaslSslFreeConsumerSample.java",
    "src/main/java/effectivekafka/sasl/SaslSslProducerSample.java",
    "src/main/java/effectivekafka/sasl/SaslSslTokenConsumerSample.java",
    "src/main/java/effectivekafka/ssl",
    "src/main/java/effectivekafka/ssl/SslConsumerSample.java",
    "src/main/java/effectivekafka/ssl/SslMutualConsumerSample.java",
    "src/main/java/effectivekafka/ssl/SslMutualProducerSample.java",
    "src/main/java/effectivekafka/ssl/SslProducerSample.java",
    "src/main/java/effectivekafka/transaction",
    "src/main/java/effectivekafka/transaction/InputStage.java",
    "src/main/java/effectivekafka/transaction/OutputStage.java",
    "src/main/java/effectivekafka/transaction/TransformStage.java",
    "src/main/java/effectivekafka/typesafeproducer",
    "src/main/java/effectivekafka/typesafeproducer/TypesafeProducerConfig.java",
    "src/main/java/effectivekafka/typesafeproducer/TypesafeProducerSample.java",
    "src/main/resources",
    "src/main/resources/log4j.properties",
    "src/test",
    "src/test/java",
    "src/test/java/effectivekafka",
    "src/test/java/effectivekafka/framework",
    "src/test/java/effectivekafka/framework/config",
    "src/test/java/effectivekafka/framework/config/SampleProducerConfigTest.java",
    "src/test/java/effectivekafka/typesafeproducer",
    "src/test/java/effectivekafka/typesafeproducer/TypesafeProducerConfigTest.java"
]
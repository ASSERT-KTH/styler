[
    ".gitignore",
    "README.md",
    "algorithms",
    "algorithms/implementation",
    "algorithms/implementation/acmicpcteam",
    "algorithms/implementation/acmicpcteam/README",
    "algorithms/implementation/acmicpcteam/Solution.java",
    "algorithms/implementation/angryprofessor",
    "algorithms/implementation/angryprofessor/README",
    "algorithms/implementation/angryprofessor/Solution.java",
    "algorithms/implementation/caesarcipher",
    "algorithms/implementation/caesarcipher/README",
    "algorithms/implementation/caesarcipher/Solution.java",
    "algorithms/implementation/cavitymap",
    "algorithms/implementation/cavitymap/README",
    "algorithms/implementation/cavitymap/Solution.java",
    "algorithms/implementation/chocolatefeast",
    "algorithms/implementation/chocolatefeast/README",
    "algorithms/implementation/chocolatefeast/Solution.java",
    "algorithms/implementation/cutthesticks",
    "algorithms/implementation/cutthesticks/README",
    "algorithms/implementation/cutthesticks/Solution.java",
    "algorithms/implementation/encryption",
    "algorithms/implementation/encryption/README",
    "algorithms/implementation/encryption/Solution.java",
    "algorithms/implementation/extralongfactorial",
    "algorithms/implementation/extralongfactorial/README",
    "algorithms/implementation/extralongfactorial/Solution.java",
    "algorithms/implementation/finddigits",
    "algorithms/implementation/finddigits/README",
    "algorithms/implementation/finddigits/Solution.java",
    "algorithms/implementation/gridsearch",
    "algorithms/implementation/gridsearch/README",
    "algorithms/implementation/gridsearch/Solution.java",
    "algorithms/implementation/kaprekarnumbers",
    "algorithms/implementation/kaprekarnumbers/README",
    "algorithms/implementation/kaprekarnumbers/Solution.java",
    "algorithms/implementation/libraryfine",
    "algorithms/implementation/libraryfine/README",
    "algorithms/implementation/libraryfine/Solution.java",
    "algorithms/implementation/manasastones",
    "algorithms/implementation/manasastones/README",
    "algorithms/implementation/manasastones/Solution.java",
    "algorithms/implementation/matrixrotation",
    "algorithms/implementation/matrixrotation/README",
    "algorithms/implementation/matrixrotation/Solution.java",
    "algorithms/implementation/servicelane",
    "algorithms/implementation/servicelane/README",
    "algorithms/implementation/servicelane/Solution.java",
    "algorithms/implementation/sherlockandsquare",
    "algorithms/implementation/sherlockandsquare/README",
    "algorithms/implementation/sherlockandsquare/Solution.java",
    "algorithms/implementation/sherlockthebeast",
    "algorithms/implementation/sherlockthebeast/README",
    "algorithms/implementation/sherlockthebeast/Solution.java",
    "algorithms/implementation/taumbday",
    "algorithms/implementation/taumbday/README",
    "algorithms/implementation/taumbday/Solution.java",
    "algorithms/implementation/timeinwords",
    "algorithms/implementation/timeinwords/README",
    "algorithms/implementation/timeinwords/Solution.java",
    "algorithms/implementation/utopiantree",
    "algorithms/implementation/utopiantree/README",
    "algorithms/implementation/utopiantree/Solution.java",
    "algorithms/sorting",
    "algorithms/sorting/biggerisgreater",
    "algorithms/sorting/biggerisgreater/README",
    "algorithms/sorting/biggerisgreater/Solution.java",
    "algorithms/sorting/biggerisgreater/input01.txt",
    "algorithms/sorting/biggerisgreater/output01.txt",
    "algorithms/sorting/insertionsortpartone",
    "algorithms/sorting/insertionsortpartone/README",
    "algorithms/sorting/insertionsortpartone/Solution.java",
    "algorithms/sorting/insertionsortparttwo",
    "algorithms/sorting/insertionsortparttwo/README",
    "algorithms/sorting/insertionsortparttwo/Solution.java",
    "algorithms/sorting/minimumdifference",
    "algorithms/sorting/minimumdifference/README",
    "algorithms/sorting/minimumdifference/Solution.java",
    "algorithms/sorting/quicksortinplace",
    "algorithms/sorting/quicksortinplace/README",
    "algorithms/sorting/quicksortinplace/Solution.java",
    "algorithms/sorting/quicksortpartition",
    "algorithms/sorting/quicksortpartition/README",
    "algorithms/sorting/quicksortpartition/Solution.java",
    "algorithms/sorting/quicksortsorting",
    "algorithms/sorting/quicksortsorting/README",
    "algorithms/sorting/quicksortsorting/Solution.java",
    "algorithms/sorting/runningtimeofalgorithm",
    "algorithms/sorting/runningtimeofalgorithm/README",
    "algorithms/sorting/runningtimeofalgorithm/Solution.java",
    "algorithms/sorting/runningtimeofquicksort",
    "algorithms/sorting/runningtimeofquicksort/README",
    "algorithms/sorting/runningtimeofquicksort/Solution.java",
    "algorithms/strings",
    "algorithms/strings/alternatingcharacters",
    "algorithms/strings/alternatingcharacters/README",
    "algorithms/strings/alternatingcharacters/Solution.java",
    "algorithms/strings/anagram",
    "algorithms/strings/anagram/README",
    "algorithms/strings/anagram/Solution.java",
    "algorithms/strings/funnystring",
    "algorithms/strings/funnystring/README",
    "algorithms/strings/funnystring/Solution.java",
    "algorithms/strings/gameofthronesi",
    "algorithms/strings/gameofthronesi/README",
    "algorithms/strings/gameofthronesi/Solution.java",
    "algorithms/strings/gemstones",
    "algorithms/strings/gemstones/README",
    "algorithms/strings/gemstones/Solution.java",
    "algorithms/strings/lovelettermystery",
    "algorithms/strings/lovelettermystery/README",
    "algorithms/strings/lovelettermystery/Solution.java",
    "algorithms/strings/makeitanagram",
    "algorithms/strings/makeitanagram/README",
    "algorithms/strings/makeitanagram/Solution.java",
    "algorithms/strings/palindromeindex",
    "algorithms/strings/palindromeindex/README",
    "algorithms/strings/palindromeindex/Solution.java",
    "algorithms/strings/palindromeindex/input_01",
    "algorithms/strings/palindromeindex/output_01",
    "algorithms/strings/pangrams",
    "algorithms/strings/pangrams/README",
    "algorithms/strings/pangrams/Solution.java",
    "algorithms/strings/sherlockandanagram",
    "algorithms/strings/sherlockandanagram/README",
    "algorithms/strings/sherlockandanagram/Solution.java",
    "algorithms/strings/sherlockandvalidstring",
    "algorithms/strings/sherlockandvalidstring/README",
    "algorithms/strings/sherlockandvalidstring/Solution.java",
    "algorithms/strings/sherlockandvalidstring/input05.txt",
    "algorithms/strings/sherlockandvalidstring/output05.txt",
    "algorithms/strings/twostrings",
    "algorithms/strings/twostrings/README",
    "algorithms/strings/twostrings/Solution.java",
    "algorithms/warmup",
    "algorithms/warmup/diagonaldifference",
    "algorithms/warmup/diagonaldifference/README",
    "algorithms/warmup/diagonaldifference/Solution.java",
    "algorithms/warmup/plusminus",
    "algorithms/warmup/plusminus/README.md",
    "algorithms/warmup/plusminus/Solution.java",
    "algorithms/warmup/simplearraysum",
    "algorithms/warmup/simplearraysum/README.md",
    "algorithms/warmup/simplearraysum/Solution.java",
    "algorithms/warmup/solvemefirst",
    "algorithms/warmup/solvemefirst/README.md",
    "algorithms/warmup/solvemefirst/Solution.java",
    "algorithms/warmup/staircase",
    "algorithms/warmup/staircase/README",
    "algorithms/warmup/staircase/Solution.java",
    "algorithms/warmup/timeconversion",
    "algorithms/warmup/timeconversion/README.md",
    "algorithms/warmup/timeconversion/Solution.java",
    "algorithms/warmup/verybigsum",
    "algorithms/warmup/verybigsum/README.md",
    "algorithms/warmup/verybigsum/Solution.java",
    "datastructure",
    "datastructure/arrays",
    "datastructure/arrays/array2ds",
    "datastructure/arrays/array2ds/README",
    "datastructure/arrays/array2ds/Solution.java",
    "datastructure/arrays/arrayds",
    "datastructure/arrays/arrayds/README",
    "datastructure/arrays/arrayds/Solution.java",
    "datastructure/linkedlists",
    "datastructure/linkedlists/deleteduplicatevaluenode",
    "datastructure/linkedlists/deleteduplicatevaluenode/README",
    "datastructure/linkedlists/deleteduplicatevaluenode/Solution.java",
    "datastructure/linkedlists/detectcycle",
    "datastructure/linkedlists/detectcycle/README",
    "datastructure/linkedlists/detectcycle/Solution.java",
    "datastructure/linkedlists/findmergepoint",
    "datastructure/linkedlists/findmergepoint/README",
    "datastructure/linkedlists/findmergepoint/Solution.java",
    "datastructure/linkedlists/getnodevalue",
    "datastructure/linkedlists/getnodevalue/README",
    "datastructure/linkedlists/getnodevalue/SolutionNeatier",
    "datastructure/linkedlists/getnodevalue/SolutionWithStack.java",
    "datastructure/linkedlists/insertnodeintosorted",
    "datastructure/linkedlists/insertnodeintosorted/README",
    "datastructure/linkedlists/insertnodeintosorted/Solution.java",
    "datastructure/linkedlists/operations",
    "datastructure/linkedlists/operations/Solution.java",
    "datastructure/linkedlists/reversedoublylinkedlist",
    "datastructure/linkedlists/reversedoublylinkedlist/README",
    "datastructure/linkedlists/reversedoublylinkedlist/Solution.java",
    "datastructure/linkedlists/twolists",
    "datastructure/linkedlists/twolists/Solution.java",
    "datastructure/stacks",
    "datastructure/stacks/balancedparenthesis",
    "datastructure/stacks/balancedparenthesis/README",
    "datastructure/stacks/balancedparenthesis/Solution.java",
    "datastructure/stacks/largestrectangle",
    "datastructure/stacks/largestrectangle/README.md",
    "datastructure/stacks/largestrectangle/Solution.java",
    "datastructure/stacks/largestrectangle/input05.txt",
    "datastructure/stacks/largestrectangle/input07.txt",
    "datastructure/stacks/largestrectangle/output05.txt",
    "datastructure/stacks/largestrectangle/output07.txt",
    "datastructure/stacks/maximumelement",
    "datastructure/stacks/maximumelement/README",
    "datastructure/stacks/maximumelement/Solution.java",
    "datastructure/stacks/maximumelement/SolutionWithMap.java",
    "datastructure/stacks/maximumelement/input17.txt",
    "datastructure/stacks/maximumelement/output17.txt",
    "datastructure/stacks/poisonousplants",
    "datastructure/stacks/poisonousplants/README",
    "datastructure/stacks/poisonousplants/Solution.java",
    "datastructure/stacks/poisonousplants/input01.txt",
    "datastructure/stacks/poisonousplants/input04.txt",
    "datastructure/stacks/poisonousplants/input09.txt",
    "datastructure/stacks/poisonousplants/input10.txt",
    "datastructure/stacks/poisonousplants/input11.txt",
    "datastructure/stacks/poisonousplants/input12.txt",
    "datastructure/stacks/poisonousplants/input20.txt",
    "datastructure/stacks/poisonousplants/input21.txt",
    "datastructure/stacks/poisonousplants/output01.txt",
    "datastructure/stacks/poisonousplants/output04.txt",
    "datastructure/stacks/poisonousplants/output08.txt",
    "datastructure/stacks/poisonousplants/output09.txt",
    "datastructure/stacks/poisonousplants/output10.txt",
    "datastructure/stacks/poisonousplants/output11.txt",
    "datastructure/stacks/poisonousplants/output12.txt",
    "datastructure/stacks/poisonousplants/output20.txt",
    "datastructure/stacks/poisonousplants/output21.txt",
    "datastructure/stacks/simpletexteditor",
    "datastructure/stacks/simpletexteditor/README",
    "datastructure/stacks/simpletexteditor/Solution.java",
    "datastructure/stacks/simpletexteditor/input03.txt",
    "datastructure/stacks/simpletexteditor/output03.txt",
    "datastructure/trees",
    "datastructure/trees/height",
    "datastructure/trees/height/README",
    "datastructure/trees/height/Solution.java",
    "datastructure/trees/huffmandecoding",
    "datastructure/trees/huffmandecoding/README",
    "datastructure/trees/huffmandecoding/Solution.java",
    "datastructure/trees/insertion",
    "datastructure/trees/insertion/README",
    "datastructure/trees/insertion/Solution.java",
    "datastructure/trees/lowestcommonancestor",
    "datastructure/trees/lowestcommonancestor/README",
    "datastructure/trees/lowestcommonancestor/Solution.java",
    "datastructure/trees/swapnodes",
    "datastructure/trees/swapnodes/README",
    "datastructure/trees/swapnodes/Solution.java",
    "datastructure/trees/swapnodes/input04.txt",
    "datastructure/trees/swapnodes/input05.txt",
    "datastructure/trees/swapnodes/input11.txt",
    "datastructure/trees/swapnodes/output04.txt",
    "datastructure/trees/swapnodes/output05.txt",
    "datastructure/trees/swapnodes/output11.txt",
    "datastructure/trees/treetraversal",
    "datastructure/trees/treetraversal/README",
    "datastructure/trees/treetraversal/Solution.java",
    "javas",
    "javas/advanced",
    "javas/advanced/annotations",
    "javas/advanced/annotations/README",
    "javas/advanced/annotations/Solution.java",
    "javas/advanced/canyouaccess",
    "javas/advanced/canyouaccess/README",
    "javas/advanced/canyouaccess/Solution.java",
    "javas/advanced/covariantreturntypes",
    "javas/advanced/covariantreturntypes/Flower.java",
    "javas/advanced/factory",
    "javas/advanced/factory/README",
    "javas/advanced/factory/Solution.java",
    "javas/advanced/lambdaexpressions",
    "javas/advanced/lambdaexpressions/Solution.java",
    "javas/advanced/primechecker",
    "javas/advanced/primechecker/README",
    "javas/advanced/primechecker/Solution.java",
    "javas/advanced/reflection",
    "javas/advanced/reflection/README",
    "javas/advanced/reflection/Solution.java",
    "javas/advanced/singleton",
    "javas/advanced/singleton/README.md",
    "javas/advanced/singleton/Singleton.java",
    "javas/advanced/varargs",
    "javas/advanced/varargs/README",
    "javas/advanced/varargs/Solution.java",
    "javas/bignumber",
    "javas/bignumber/bigdecimal",
    "javas/bignumber/bigdecimal/README",
    "javas/bignumber/bigdecimal/Solution.java",
    "javas/bignumber/biginteger",
    "javas/bignumber/biginteger/README",
    "javas/bignumber/biginteger/Solution.java",
    "javas/bignumber/primalitytest",
    "javas/bignumber/primalitytest/README",
    "javas/bignumber/primalitytest/Solution.java",
    "javas/collections",
    "javas/collections/arraylist",
    "javas/collections/arraylist/README",
    "javas/collections/arraylist/Solution.java",
    "javas/collections/generics",
    "javas/collections/generics/README",
    "javas/collections/generics/Solution.java",
    "javas/collections/java1darrayhard",
    "javas/collections/java1darrayhard/README",
    "javas/collections/java1darrayhard/Solution.java",
    "javas/collections/java1darrayhard/input03.txt",
    "javas/collections/java1darrayhard/output03.txt",
    "javas/collections/javacomparator",
    "javas/collections/javacomparator/README",
    "javas/collections/javacomparator/Solution.java",
    "javas/collections/javadequeue",
    "javas/collections/javadequeue/README",
    "javas/collections/javadequeue/SolutionWithArray.java",
    "javas/collections/javadequeue/SolutionWithMap.java",
    "javas/collections/javahashset",
    "javas/collections/javahashset/README",
    "javas/collections/javahashset/Solution.java",
    "javas/collections/javalist",
    "javas/collections/javalist/README.md",
    "javas/collections/javalist/Solution.java",
    "javas/collections/javamap",
    "javas/collections/javamap/README",
    "javas/collections/javamap/Solution.java",
    "javas/collections/javasort",
    "javas/collections/javasort/README",
    "javas/collections/javasort/Solution.java",
    "javas/collections/javastack",
    "javas/collections/javastack/README",
    "javas/collections/javastack/Solution.java",
    "javas/collections/negativesubarray",
    "javas/collections/negativesubarray/README",
    "javas/collections/negativesubarray/Solution.java",
    "javas/exceptionhandling",
    "javas/exceptionhandling/throwsexception",
    "javas/exceptionhandling/throwsexception/README",
    "javas/exceptionhandling/throwsexception/Solution.java",
    "javas/exceptionhandling/trycatch",
    "javas/exceptionhandling/trycatch/README",
    "javas/exceptionhandling/trycatch/Solution.java",
    "javas/oop",
    "javas/oop/calculatingvolume",
    "javas/oop/calculatingvolume/README",
    "javas/oop/calculatingvolume/Solution.java",
    "javas/oop/iterator",
    "javas/oop/iterator/README",
    "javas/oop/iterator/Solution.java",
    "javas/strings",
    "javas/strings/javaanagrams",
    "javas/strings/javaanagrams/README",
    "javas/strings/javaanagrams/Solution.java",
    "javas/strings/javaregex",
    "javas/strings/javaregex/README",
    "javas/strings/javaregex/Solution.java",
    "javas/strings/javastringcompare",
    "javas/strings/javastringcompare/README",
    "javas/strings/javastringcompare/Solution.java",
    "javas/strings/javastringreverse",
    "javas/strings/javastringreverse/README",
    "javas/strings/javastringreverse/Solution.java",
    "javas/strings/javastringtoken",
    "javas/strings/javastringtoken/README",
    "javas/strings/javastringtoken/Solution.java",
    "javas/strings/patternsyntaxchecker",
    "javas/strings/patternsyntaxchecker/README",
    "javas/strings/patternsyntaxchecker/Solution.java",
    "new_class_file_intellij.template"
]
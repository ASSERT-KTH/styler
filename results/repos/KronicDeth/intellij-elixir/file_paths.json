[
    ".github",
    ".github/FUNDING.yml",
    ".github/ISSUE_TEMPLATE",
    ".github/ISSUE_TEMPLATE/bug_report.md",
    ".github/workflows",
    ".github/workflows/release.yml",
    ".github/workflows/test.yml",
    ".gitignore",
    "CHANGELOG.md",
    "CODE_OF_CONDUCT.md",
    "COLOR_SCHEME_DESIGN.md",
    "CONTRIBUTING.md",
    "LICENSE.md",
    "Makefile",
    "README.md",
    "RELEASING.md",
    "UPGRADING.md",
    "base.txt",
    "build.gradle",
    "gen",
    "gen/org",
    "gen/org/elixir_lang",
    "gen/org/elixir_lang/eex",
    "gen/org/elixir_lang/eex/Parser.java",
    "gen/org/elixir_lang/eex/lexer",
    "gen/org/elixir_lang/eex/lexer/Flex.java",
    "gen/org/elixir_lang/eex/lexer/Flex.java~",
    "gen/org/elixir_lang/eex/psi",
    "gen/org/elixir_lang/eex/psi/EExCommentBody.java",
    "gen/org/elixir_lang/eex/psi/EExElixirBody.java",
    "gen/org/elixir_lang/eex/psi/EExElixirMarker.java",
    "gen/org/elixir_lang/eex/psi/EExVisitor.java",
    "gen/org/elixir_lang/eex/psi/Types.java",
    "gen/org/elixir_lang/eex/psi/impl",
    "gen/org/elixir_lang/eex/psi/impl/EExTagImpl.java",
    "gen/org/elixir_lang/parser",
    "gen/org/elixir_lang/parser/ElixirParser.java",
    "gen/org/elixir_lang/psi",
    "gen/org/elixir_lang/psi/ElixirAccessExpression.java",
    "gen/org/elixir_lang/psi/ElixirAdditionInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirAlias.java",
    "gen/org/elixir_lang/psi/ElixirAndInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirAnonymousFunction.java",
    "gen/org/elixir_lang/psi/ElixirArrowInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirAssociations.java",
    "gen/org/elixir_lang/psi/ElixirAssociationsBase.java",
    "gen/org/elixir_lang/psi/ElixirAtIdentifier.java",
    "gen/org/elixir_lang/psi/ElixirAtNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirAtPrefixOperator.java",
    "gen/org/elixir_lang/psi/ElixirAtom.java",
    "gen/org/elixir_lang/psi/ElixirAtomKeyword.java",
    "gen/org/elixir_lang/psi/ElixirBinaryDigits.java",
    "gen/org/elixir_lang/psi/ElixirBinaryWholeNumber.java",
    "gen/org/elixir_lang/psi/ElixirBitString.java",
    "gen/org/elixir_lang/psi/ElixirBlockIdentifier.java",
    "gen/org/elixir_lang/psi/ElixirBlockItem.java",
    "gen/org/elixir_lang/psi/ElixirBlockList.java",
    "gen/org/elixir_lang/psi/ElixirBracketArguments.java",
    "gen/org/elixir_lang/psi/ElixirCaptureNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirCapturePrefixOperator.java",
    "gen/org/elixir_lang/psi/ElixirCharListHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirCharListHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirCharListLine.java",
    "gen/org/elixir_lang/psi/ElixirCharToken.java",
    "gen/org/elixir_lang/psi/ElixirComparisonInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirContainerAssociationOperation.java",
    "gen/org/elixir_lang/psi/ElixirDecimalDigits.java",
    "gen/org/elixir_lang/psi/ElixirDecimalFloat.java",
    "gen/org/elixir_lang/psi/ElixirDecimalFloatExponent.java",
    "gen/org/elixir_lang/psi/ElixirDecimalFloatExponentSign.java",
    "gen/org/elixir_lang/psi/ElixirDecimalFloatFractional.java",
    "gen/org/elixir_lang/psi/ElixirDecimalFloatIntegral.java",
    "gen/org/elixir_lang/psi/ElixirDecimalWholeNumber.java",
    "gen/org/elixir_lang/psi/ElixirDoBlock.java",
    "gen/org/elixir_lang/psi/ElixirDotInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirEex.java",
    "gen/org/elixir_lang/psi/ElixirEexTag.java",
    "gen/org/elixir_lang/psi/ElixirEmptyParentheses.java",
    "gen/org/elixir_lang/psi/ElixirEnclosedHexadecimalEscapeSequence.java",
    "gen/org/elixir_lang/psi/ElixirEndOfExpression.java",
    "gen/org/elixir_lang/psi/ElixirEscapedCharacter.java",
    "gen/org/elixir_lang/psi/ElixirEscapedEOL.java",
    "gen/org/elixir_lang/psi/ElixirHeredocLinePrefix.java",
    "gen/org/elixir_lang/psi/ElixirHeredocPrefix.java",
    "gen/org/elixir_lang/psi/ElixirHexadecimalDigits.java",
    "gen/org/elixir_lang/psi/ElixirHexadecimalEscapePrefix.java",
    "gen/org/elixir_lang/psi/ElixirHexadecimalWholeNumber.java",
    "gen/org/elixir_lang/psi/ElixirIdentifier.java",
    "gen/org/elixir_lang/psi/ElixirInInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirInMatchInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedCharListBody.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedCharListHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedCharListSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedCharListSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedRegexBody.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedRegexHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedRegexHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedRegexLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedSigilBody.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedSigilHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedStringBody.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedStringHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedStringSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedStringSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedWordsBody.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedWordsHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedWordsHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolatedWordsLine.java",
    "gen/org/elixir_lang/psi/ElixirInterpolation.java",
    "gen/org/elixir_lang/psi/ElixirKeywordKey.java",
    "gen/org/elixir_lang/psi/ElixirKeywordPair.java",
    "gen/org/elixir_lang/psi/ElixirKeywords.java",
    "gen/org/elixir_lang/psi/ElixirList.java",
    "gen/org/elixir_lang/psi/ElixirLiteralCharListBody.java",
    "gen/org/elixir_lang/psi/ElixirLiteralCharListHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralCharListSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirLiteralCharListSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralRegexBody.java",
    "gen/org/elixir_lang/psi/ElixirLiteralRegexHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirLiteralRegexHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralRegexLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralSigilBody.java",
    "gen/org/elixir_lang/psi/ElixirLiteralSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirLiteralSigilHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralStringBody.java",
    "gen/org/elixir_lang/psi/ElixirLiteralStringHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralStringSigilHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirLiteralStringSigilLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralWordsBody.java",
    "gen/org/elixir_lang/psi/ElixirLiteralWordsHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirLiteralWordsHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirLiteralWordsLine.java",
    "gen/org/elixir_lang/psi/ElixirMapArguments.java",
    "gen/org/elixir_lang/psi/ElixirMapConstructionArguments.java",
    "gen/org/elixir_lang/psi/ElixirMapOperation.java",
    "gen/org/elixir_lang/psi/ElixirMapPrefixOperator.java",
    "gen/org/elixir_lang/psi/ElixirMapUpdateArguments.java",
    "gen/org/elixir_lang/psi/ElixirMatchInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAdditionOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAndOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedArrowOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtAccessExpressionBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtNumericBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtUnqualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedAtUnqualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedComparisonOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedDotCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedExpression.java",
    "gen/org/elixir_lang/psi/ElixirMatchedGreaterThanOrEqualToOnePointSixCaptureNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedInMatchOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedInOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedLessThanOnePointSixCaptureNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedMatchOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedMultiplicationOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedNotInOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedOrOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedParenthesesArguments.java",
    "gen/org/elixir_lang/psi/ElixirMatchedPipeOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedAlias.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedMultipleAliases.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedNoArgumentsCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedQualifiedParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedRelationalOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedThreeOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedTwoOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedTypeOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnaryNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnaryOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnqualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnqualifiedNoArgumentsCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnqualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedUnqualifiedParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirMatchedWhenOperation.java",
    "gen/org/elixir_lang/psi/ElixirMultipleAliases.java",
    "gen/org/elixir_lang/psi/ElixirMultiplicationInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesArguments.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesKeywordPair.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesKeywords.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesManyStrictNoParenthesesExpression.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesOneArgument.java",
    "gen/org/elixir_lang/psi/ElixirNoParenthesesStrict.java",
    "gen/org/elixir_lang/psi/ElixirNotInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirOctalDigits.java",
    "gen/org/elixir_lang/psi/ElixirOctalWholeNumber.java",
    "gen/org/elixir_lang/psi/ElixirOpenHexadecimalEscapeSequence.java",
    "gen/org/elixir_lang/psi/ElixirOrInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirParenthesesArguments.java",
    "gen/org/elixir_lang/psi/ElixirParentheticalStab.java",
    "gen/org/elixir_lang/psi/ElixirPipeInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirQuoteCharListBody.java",
    "gen/org/elixir_lang/psi/ElixirQuoteHexadecimalEscapeSequence.java",
    "gen/org/elixir_lang/psi/ElixirQuoteStringBody.java",
    "gen/org/elixir_lang/psi/ElixirRelationalInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirRelativeIdentifier.java",
    "gen/org/elixir_lang/psi/ElixirSigilHexadecimalEscapeSequence.java",
    "gen/org/elixir_lang/psi/ElixirSigilModifiers.java",
    "gen/org/elixir_lang/psi/ElixirStab.java",
    "gen/org/elixir_lang/psi/ElixirStabBody.java",
    "gen/org/elixir_lang/psi/ElixirStabInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirStabNoParenthesesSignature.java",
    "gen/org/elixir_lang/psi/ElixirStabOperation.java",
    "gen/org/elixir_lang/psi/ElixirStabParenthesesSignature.java",
    "gen/org/elixir_lang/psi/ElixirStringHeredoc.java",
    "gen/org/elixir_lang/psi/ElixirStringHeredocLine.java",
    "gen/org/elixir_lang/psi/ElixirStringLine.java",
    "gen/org/elixir_lang/psi/ElixirStructOperation.java",
    "gen/org/elixir_lang/psi/ElixirThreeInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirTuple.java",
    "gen/org/elixir_lang/psi/ElixirTwoInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirTypeInfixOperator.java",
    "gen/org/elixir_lang/psi/ElixirTypes.java",
    "gen/org/elixir_lang/psi/ElixirUnaryNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnaryPrefixOperator.java",
    "gen/org/elixir_lang/psi/ElixirUnknownBaseDigits.java",
    "gen/org/elixir_lang/psi/ElixirUnknownBaseWholeNumber.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAdditionOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAndOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedArrowOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAtNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAtNumericBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAtOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAtUnqualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedAtUnqualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedComparisonOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedDotCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedExpression.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedGreaterThanOrEqualToOnePointSixCaptureNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedInMatchOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedInOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedLessThanOnePointSixCaptureNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedMatchOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedMultiplicationOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedNotInOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedOrOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedPipeOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedAlias.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedMultipleAliases.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedNoArgumentsCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedQualifiedParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedRelationalOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedThreeOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedTwoOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedTypeOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnaryNonNumericOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnaryOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnqualifiedBracketOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnqualifiedNoArgumentsCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnqualifiedNoParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedUnqualifiedParenthesesCall.java",
    "gen/org/elixir_lang/psi/ElixirUnmatchedWhenOperation.java",
    "gen/org/elixir_lang/psi/ElixirUnqualifiedNoParenthesesManyArgumentsCall.java",
    "gen/org/elixir_lang/psi/ElixirVariable.java",
    "gen/org/elixir_lang/psi/ElixirVersionDependentNonNumeric.java",
    "gen/org/elixir_lang/psi/ElixirVisitor.java",
    "gen/org/elixir_lang/psi/ElixirWhenInfixOperator.java",
    "gen/org/elixir_lang/psi/impl",
    "gen/org/elixir_lang/psi/impl/ElixirAccessExpressionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAdditionInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAliasImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAndInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAnonymousFunctionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirArrowInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAssociationsBaseImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAssociationsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAtIdentifierImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAtNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAtPrefixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAtomImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirAtomKeywordImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBinaryDigitsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBinaryWholeNumberImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBitStringImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBlockIdentifierImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBlockItemImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBlockListImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirBracketArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCaptureNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCapturePrefixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCharListHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCharListHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCharListLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirCharTokenImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirComparisonInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirContainerAssociationOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalDigitsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalFloatExponentImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalFloatExponentSignImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalFloatFractionalImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalFloatImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalFloatIntegralImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDecimalWholeNumberImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDoBlockImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirDotInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEexImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEexTagImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEmptyParenthesesImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEnclosedHexadecimalEscapeSequenceImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEndOfExpressionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEscapedCharacterImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirEscapedEOLImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirHeredocLinePrefixImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirHeredocPrefixImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirHexadecimalDigitsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirHexadecimalEscapePrefixImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirHexadecimalWholeNumberImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirIdentifierImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInMatchInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedCharListBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedCharListHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedCharListSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedCharListSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedRegexBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedRegexHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedRegexHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedRegexLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedSigilBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedSigilHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedStringBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedStringHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedStringSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedStringSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedWordsBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedWordsHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedWordsHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolatedWordsLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirInterpolationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirKeywordKeyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirKeywordPairImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirKeywordsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirListImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralCharListBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralCharListHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralCharListSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralCharListSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralRegexBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralRegexHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralRegexHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralRegexLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralSigilBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralSigilHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralStringBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralStringHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralStringSigilHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralStringSigilLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralWordsBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralWordsHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralWordsHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirLiteralWordsLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMapArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMapConstructionArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMapOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMapPrefixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMapUpdateArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAdditionOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAndOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedArrowOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAtNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAtNumericBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAtOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAtUnqualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedAtUnqualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedComparisonOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedDotCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedExpressionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedGreaterThanOrEqualToOnePointSixCaptureNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedInMatchOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedInOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedLessThanOnePointSixCaptureNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedMatchOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedMultiplicationOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedNotInOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedOrOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedParenthesesArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedPipeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedAliasImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedMultipleAliasesImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedNoArgumentsCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedQualifiedParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedRelationalOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedThreeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedTwoOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedTypeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnaryNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnaryOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnqualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnqualifiedNoArgumentsCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnqualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedUnqualifiedParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMatchedWhenOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMultipleAliasesImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirMultiplicationInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesKeywordPairImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesKeywordsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesManyStrictNoParenthesesExpressionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesOneArgumentImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNoParenthesesStrictImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirNotInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirOctalDigitsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirOctalWholeNumberImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirOpenHexadecimalEscapeSequenceImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirOrInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirParenthesesArgumentsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirParentheticalStabImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirPipeInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirQuoteCharListBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirQuoteHexadecimalEscapeSequenceImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirQuoteStringBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirRelationalInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirRelativeIdentifierImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirSigilHexadecimalEscapeSequenceImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirSigilModifiersImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabBodyImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabNoParenthesesSignatureImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStabParenthesesSignatureImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStringHeredocImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStringHeredocLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStringLineImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirStructOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirThreeInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirTupleImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirTwoInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirTypeInfixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnaryNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnaryPrefixOperatorImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnknownBaseDigitsImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnknownBaseWholeNumberImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAdditionOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAndOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedArrowOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAtNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAtNumericBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAtOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAtUnqualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedAtUnqualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedComparisonOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedDotCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedExpressionImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedGreaterThanOrEqualToOnePointSixCaptureNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedInMatchOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedInOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedLessThanOnePointSixCaptureNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedMatchOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedMultiplicationOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedNotInOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedOrOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedPipeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedAliasImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedMultipleAliasesImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedNoArgumentsCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedQualifiedParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedRelationalOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedThreeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedTwoOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedTypeOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnaryNonNumericOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnaryOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnqualifiedBracketOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnqualifiedNoArgumentsCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnqualifiedNoParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedUnqualifiedParenthesesCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnmatchedWhenOperationImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirUnqualifiedNoParenthesesManyArgumentsCallImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirVariableImpl.java",
    "gen/org/elixir_lang/psi/impl/ElixirWhenInfixOperatorImpl.java",
    "gradle.properties",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "jps-builder",
    "jps-builder/build.gradle",
    "jps-builder/resources",
    "jps-builder/resources/META-INF",
    "jps-builder/resources/META-INF/services",
    "jps-builder/resources/META-INF/services/org.jetbrains.jps.incremental.BuilderService",
    "jps-builder/src",
    "jps-builder/src/org",
    "jps-builder/src/org/elixir_lang",
    "jps-builder/src/org/elixir_lang/jps",
    "jps-builder/src/org/elixir_lang/jps/Builder.java",
    "jps-builder/src/org/elixir_lang/jps/LibraryNotFound.java",
    "jps-builder/src/org/elixir_lang/jps/MissingSdkProperties.java",
    "jps-builder/src/org/elixir_lang/jps/Target.java",
    "jps-builder/src/org/elixir_lang/jps/builder",
    "jps-builder/src/org/elixir_lang/jps/builder/ExecutionException.java",
    "jps-builder/src/org/elixir_lang/jps/builder/GeneralCommandLine.java",
    "jps-builder/src/org/elixir_lang/jps/builder/ParametersList.java",
    "jps-builder/src/org/elixir_lang/jps/builder/ParamsGroup.java",
    "jps-builder/src/org/elixir_lang/jps/builder/ProcessAdapter.java",
    "jps-builder/src/org/elixir_lang/jps/builder/ProcessNotCreatedException.java",
    "jps-builder/src/org/elixir_lang/jps/builder/Service.java",
    "jps-builder/src/org/elixir_lang/jps/builder/SourceRootDescriptor.java",
    "jps-builder/src/org/elixir_lang/jps/target",
    "jps-builder/src/org/elixir_lang/jps/target/BuilderUtil.java",
    "jps-builder/src/org/elixir_lang/jps/target/Type.java",
    "jps-builder/testData",
    "jps-builder/testData/mix_compiled",
    "jps-builder/testData/mix_compiled/.formatter.exs",
    "jps-builder/testData/mix_compiled/.gitignore",
    "jps-builder/testData/mix_compiled/README.md",
    "jps-builder/testData/mix_compiled/config",
    "jps-builder/testData/mix_compiled/config/config.exs",
    "jps-builder/testData/mix_compiled/lib",
    "jps-builder/testData/mix_compiled/lib/mix_compiled.ex",
    "jps-builder/testData/mix_compiled/mix.exs",
    "jps-builder/testData/mix_compiled/test",
    "jps-builder/testData/mix_compiled/test/mix_compiled_test.exs",
    "jps-builder/testData/mix_compiled/test/test_helper.exs",
    "jps-builder/tests",
    "jps-builder/tests/org",
    "jps-builder/tests/org/elixir_lang",
    "jps-builder/tests/org/elixir_lang/jps",
    "jps-builder/tests/org/elixir_lang/jps/BuildResult.java",
    "jps-builder/tests/org/elixir_lang/jps/BuilderTest.java",
    "jps-builder/tests/org/elixir_lang/jps/CompileScopeTestBuilder.java",
    "jps-builder/tests/org/elixir_lang/jps/JpsBuildTestCase.java",
    "jps-builder/tests/org/elixir_lang/jps/TestProjectBuilderLogger.java",
    "jps-shared",
    "jps-shared/build.gradle",
    "jps-shared/resources",
    "jps-shared/resources/META-INF",
    "jps-shared/resources/META-INF/services",
    "jps-shared/resources/META-INF/services/org.jetbrains.jps.model.serialization.JpsModelSerializerExtension",
    "jps-shared/src",
    "jps-shared/src/org",
    "jps-shared/src/org/elixir_lang",
    "jps-shared/src/org/elixir_lang/jps",
    "jps-shared/src/org/elixir_lang/jps/CompilerOptions.java",
    "jps-shared/src/org/elixir_lang/jps/HomePath.java",
    "jps-shared/src/org/elixir_lang/jps/SdkType.java",
    "jps-shared/src/org/elixir_lang/jps/compiler_options",
    "jps-shared/src/org/elixir_lang/jps/compiler_options/Extension.java",
    "jps-shared/src/org/elixir_lang/jps/compiler_options/Serializer.java",
    "jps-shared/src/org/elixir_lang/jps/mix",
    "jps-shared/src/org/elixir_lang/jps/mix/ConfigurationExtension.java",
    "jps-shared/src/org/elixir_lang/jps/mix/SettingsSerializer.java",
    "jps-shared/src/org/elixir_lang/jps/mix/SettingsState.java",
    "jps-shared/src/org/elixir_lang/jps/model",
    "jps-shared/src/org/elixir_lang/jps/model/ErlangSdkNameMissing.java",
    "jps-shared/src/org/elixir_lang/jps/model/ModuleType.java",
    "jps-shared/src/org/elixir_lang/jps/model/SdkProperties.java",
    "jps-shared/src/org/elixir_lang/jps/model/SerializerExtension.java",
    "jps-shared/src/org/elixir_lang/jps/sdk_type",
    "jps-shared/src/org/elixir_lang/jps/sdk_type/Elixir.java",
    "jps-shared/src/org/elixir_lang/jps/sdk_type/Erlang.java",
    "jps-shared/src/org/elixir_lang/jps/sdk_type/MissingHomePath.java",
    "resources",
    "resources/Color Settings Page Demo Text.ex",
    "resources/META-INF",
    "resources/META-INF/changelog.html",
    "resources/META-INF/description.html",
    "resources/META-INF/intellij-erlang-plugin.xml",
    "resources/META-INF/plugin.xml",
    "resources/META-INF/pluginIcon.svg",
    "resources/META-INF/rich-platform-plugin.xml",
    "resources/colorSchemes",
    "resources/colorSchemes/ElixirDarcula.xml",
    "resources/colorSchemes/ElixirDefault.xml",
    "resources/debugger",
    "resources/debugger/.formatter.exs",
    "resources/debugger/.gitignore",
    "resources/debugger/lib",
    "resources/debugger/lib/intellij_elixir",
    "resources/debugger/lib/intellij_elixir/debugged.ex",
    "resources/debugger/lib/intellij_elixir/debugger",
    "resources/debugger/lib/intellij_elixir/debugger/server.ex",
    "resources/debugger/lib/mix",
    "resources/debugger/lib/mix/tasks",
    "resources/debugger/lib/mix/tasks/intellij_elixir",
    "resources/debugger/lib/mix/tasks/intellij_elixir/debug.ex",
    "resources/debugger/mix.exs",
    "resources/debugger/test",
    "resources/debugger/test/intellij_elixir",
    "resources/debugger/test/intellij_elixir/debugger",
    "resources/debugger/test/intellij_elixir/debugger/server_test.exs",
    "resources/debugger/test/support",
    "resources/debugger/test/support/intellij_elixir",
    "resources/debugger/test/support/intellij_elixir/debugger",
    "resources/debugger/test/support/intellij_elixir/debugger/interpreted.ex",
    "resources/debugger/test/test_helper.exs",
    "resources/elixir.dic",
    "resources/elixir",
    "resources/elixir/ecto.dic",
    "resources/espec",
    "resources/espec/.formatter.exs",
    "resources/espec/team_city_espec_formatter.ex",
    "resources/exunit",
    "resources/exunit/.formatter.exs",
    "resources/exunit/1.1.0",
    "resources/exunit/1.1.0/team_city_ex_unit_formatter.ex",
    "resources/exunit/1.1.0/team_city_ex_unit_formatting.ex",
    "resources/exunit/1.4.0",
    "resources/exunit/1.4.0/team_city_ex_unit_formatter.ex",
    "resources/exunit/1.4.0/team_city_ex_unit_formatting.ex",
    "resources/exunit/1.6.0",
    "resources/exunit/1.6.0/team_city_ex_unit_formatter.ex",
    "resources/exunit/1.6.0/team_city_ex_unit_formatting.ex",
    "resources/exunit/test_with_formatter.ex",
    "resources/fileTemplates",
    "resources/fileTemplates/includes",
    "resources/fileTemplates/includes/Elixir File Docs.ex.ft",
    "resources/fileTemplates/includes/Elixir File Docs.ex.html",
    "resources/fileTemplates/internal",
    "resources/fileTemplates/internal/ESpec.exs.ft",
    "resources/fileTemplates/internal/ESpec.exs.html",
    "resources/fileTemplates/internal/Elixir Application.ex.ft",
    "resources/fileTemplates/internal/Elixir Application.ex.html",
    "resources/fileTemplates/internal/Elixir GenEvent.ex.ft",
    "resources/fileTemplates/internal/Elixir GenEvent.ex.html",
    "resources/fileTemplates/internal/Elixir GenServer.ex.ft",
    "resources/fileTemplates/internal/Elixir GenServer.ex.html",
    "resources/fileTemplates/internal/Elixir Module.ex.ft",
    "resources/fileTemplates/internal/Elixir Module.ex.html",
    "resources/fileTemplates/internal/Elixir Supervisor.ex.ft",
    "resources/fileTemplates/internal/Elixir Supervisor.ex.html",
    "resources/fileTemplates/internal/ExUnit.Case.exs.ft",
    "resources/fileTemplates/internal/ExUnit.Case.exs.html",
    "resources/icons",
    "resources/icons/IntelliJ Elixir.fig",
    "resources/icons/file",
    "resources/icons/file/beam.svg",
    "resources/icons/file/beam",
    "resources/icons/file/beam/assembly.svg",
    "resources/icons/file/beam/assembly_dark.svg",
    "resources/icons/file/beam_dark.svg",
    "resources/icons/file/eex.svg",
    "resources/icons/file/eex_dark.svg",
    "resources/icons/file/elixir.svg",
    "resources/icons/file/elixir",
    "resources/icons/file/elixir/application.svg",
    "resources/icons/file/elixir/application_dark.svg",
    "resources/icons/file/elixir/gen-event.svg",
    "resources/icons/file/elixir/gen-event_dark.svg",
    "resources/icons/file/elixir/gen-server.svg",
    "resources/icons/file/elixir/gen-server_dark.svg",
    "resources/icons/file/elixir/supervisor.svg",
    "resources/icons/file/elixir/supervisor_dark.svg",
    "resources/icons/file/elixir_dark.svg",
    "resources/icons/language",
    "resources/icons/language/beam.svg",
    "resources/icons/language/beam",
    "resources/icons/language/beam/assembly.svg",
    "resources/icons/language/elixir.svg",
    "resources/icons/library",
    "resources/icons/library/mix.svg",
    "resources/icons/module",
    "resources/icons/module/elixir.svg",
    "resources/icons/module/elixir_dark.svg",
    "resources/icons/project",
    "resources/icons/project/mix.svg",
    "resources/icons/run",
    "resources/icons/run/distillery",
    "resources/icons/run/distillery/release-cli.svg",
    "resources/icons/run/distillery/release-cli_dark.svg",
    "resources/icons/run/elixir.svg",
    "resources/icons/run/iex.svg",
    "resources/icons/run/iex",
    "resources/icons/run/iex/mix.svg",
    "resources/icons/run/iex/mix_dark.svg",
    "resources/icons/run/iex_dark.svg",
    "resources/icons/run/mix.svg",
    "resources/icons/run/mix",
    "resources/icons/run/mix/test.svg",
    "resources/icons/type.png",
    "resources/inspectionDescriptions",
    "resources/inspectionDescriptions/Credo.html",
    "resources/inspectionDescriptions/KeywordPairColonInsteadOfTypeOperator.html",
    "resources/inspectionDescriptions/KeywordsNotAtEnd.html",
    "resources/inspectionDescriptions/MatchOperatorInsteadOfTypeOperator.html",
    "resources/inspectionDescriptions/MissingEndOfExpression.html",
    "resources/inspectionDescriptions/NoParenthesesManyStrict.html",
    "resources/inspectionDescriptions/NoParenthesesStrict.html",
    "resources/liveTemplates",
    "resources/liveTemplates/Elixir.xml",
    "screenshots",
    "screenshots/Color Settings.png",
    "screenshots/Debugger.png",
    "screenshots/Function and Macro Calls Completion.png",
    "screenshots/New Elixir File.png",
    "screenshots/Project View.png",
    "screenshots/annotator",
    "screenshots/annotator/Module Attribute.png",
    "screenshots/contributing",
    "screenshots/contributing/gradle_settings.png",
    "screenshots/contributing/remove_module.png",
    "screenshots/contributing/select_modules.png",
    "screenshots/debugger",
    "screenshots/debugger/Debug.png",
    "screenshots/debugger/Evaluate.png",
    "screenshots/debugger/Frames.png",
    "screenshots/debugger/Processes.png",
    "screenshots/debugger/Show Execution Point.png",
    "screenshots/debugger/Variables.png",
    "screenshots/debugger/breakpoints",
    "screenshots/debugger/breakpoints/All.gif",
    "screenshots/debugger/breakpoints/Conditionally Disabled.png",
    "screenshots/debugger/breakpoints/Disabled.png",
    "screenshots/debugger/breakpoints/Enabled.png",
    "screenshots/debugger/breakpoints/Mute.png",
    "screenshots/debugger/breakpoints/Muted.png",
    "screenshots/debugger/breakpoints/Properties.png",
    "screenshots/debugger/breakpoints/creating",
    "screenshots/debugger/breakpoints/creating/eex.png",
    "screenshots/debugger/breakpoints/creating/ex.png",
    "screenshots/debugger/evaluate",
    "screenshots/debugger/evaluate/Exception.png",
    "screenshots/debugger/evaluate/Result.png",
    "screenshots/debugger/evaluate/Typo.png",
    "screenshots/debugger/excluding_modules",
    "screenshots/debugger/excluding_modules/Add.png",
    "screenshots/debugger/excluding_modules/Added.png",
    "screenshots/debugger/excluding_modules/Disable.png",
    "screenshots/debugger/excluding_modules/Do Not Step Into The Modules.png",
    "screenshots/debugger/excluding_modules/Edit.png",
    "screenshots/debugger/excluding_modules/Remove.png",
    "screenshots/debugger/excluding_modules/Removed.png",
    "screenshots/debugger/starting",
    "screenshots/debugger/starting/Attached.png",
    "screenshots/debugger/starting/Completed.png",
    "screenshots/debugger/starting/Skipped.png",
    "screenshots/debugger/starting/Waiting for debugger to attach.png",
    "screenshots/debugger/stepping",
    "screenshots/debugger/stepping/Step Into.png",
    "screenshots/debugger/stepping/Step Out.png",
    "screenshots/debugger/stepping/Step Over.png",
    "screenshots/debugger/variables",
    "screenshots/debugger/variables/Binary.png",
    "screenshots/debugger/variables/Bitstring.png",
    "screenshots/debugger/variables/Boolean.png",
    "screenshots/debugger/variables/Charlist.png",
    "screenshots/debugger/variables/Functions.png",
    "screenshots/debugger/variables/Lists.png",
    "screenshots/debugger/variables/Maps.png",
    "screenshots/debugger/variables/Numbers.png",
    "screenshots/debugger/variables/Pid.png",
    "screenshots/debugger/variables/Rebound.png",
    "screenshots/debugger/variables/String.png",
    "screenshots/debugger/variables/Tuple.png",
    "screenshots/error_handler",
    "screenshots/error_handler/IDE Fatal Errors.png",
    "screenshots/error_handler/Write New Issue.png",
    "screenshots/features",
    "screenshots/features/Show Parameters.png",
    "screenshots/features/beam_files",
    "screenshots/features/beam_files/Editor Tabs.png",
    "screenshots/features/beam_files/beam_chunks",
    "screenshots/features/beam_files/beam_chunks/Chunk Tabs.png",
    "screenshots/features/beam_files/beam_chunks/attr",
    "screenshots/features/beam_files/beam_chunks/attr/tab",
    "screenshots/features/beam_files/beam_chunks/attr/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/atu8",
    "screenshots/features/beam_files/beam_chunks/atu8/tab",
    "screenshots/features/beam_files/beam_chunks/atu8/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/cinf",
    "screenshots/features/beam_files/beam_chunks/cinf/tab",
    "screenshots/features/beam_files/beam_chunks/cinf/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/code",
    "screenshots/features/beam_files/beam_chunks/code/tab",
    "screenshots/features/beam_files/beam_chunks/code/tab/Editor.png",
    "screenshots/features/beam_files/beam_chunks/dbgi",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/Multivalue Tabs.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/Singletons.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/attributes",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/attributes/Table.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/compile_options",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/compile_options/Table.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Clause.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Function.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Module.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Tree.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Callback.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Callbacks.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Module.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Optional Callback.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Optional Callbacks.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Spec.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Specs.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Tree.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Type.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Types.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/Tabs.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/Tree.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Clause.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Function.png",
    "screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Module.png",
    "screenshots/features/beam_files/beam_chunks/exdc",
    "screenshots/features/beam_files/beam_chunks/exdc/tab",
    "screenshots/features/beam_files/beam_chunks/exdc/tab/Function.png",
    "screenshots/features/beam_files/beam_chunks/exdc/tab/Tree.png",
    "screenshots/features/beam_files/beam_chunks/expt",
    "screenshots/features/beam_files/beam_chunks/expt/tab",
    "screenshots/features/beam_files/beam_chunks/expt/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/impt",
    "screenshots/features/beam_files/beam_chunks/impt/tab",
    "screenshots/features/beam_files/beam_chunks/impt/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/line",
    "screenshots/features/beam_files/beam_chunks/line/tab",
    "screenshots/features/beam_files/beam_chunks/line/tab/file_names",
    "screenshots/features/beam_files/beam_chunks/line/tab/file_names/Table.png",
    "screenshots/features/beam_files/beam_chunks/line/tab/line_references",
    "screenshots/features/beam_files/beam_chunks/line/tab/line_references/Table.png",
    "screenshots/features/beam_files/beam_chunks/litt",
    "screenshots/features/beam_files/beam_chunks/litt/tab",
    "screenshots/features/beam_files/beam_chunks/litt/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/loct",
    "screenshots/features/beam_files/beam_chunks/loct/tab",
    "screenshots/features/beam_files/beam_chunks/loct/tab/Table.png",
    "screenshots/features/beam_files/beam_chunks/strt",
    "screenshots/features/beam_files/beam_chunks/strt/tab",
    "screenshots/features/beam_files/beam_chunks/strt/tab/Pool.png",
    "screenshots/features/building",
    "screenshots/features/building/Project.png",
    "screenshots/features/building/Settings.png",
    "screenshots/features/building/file",
    "screenshots/features/building/file/Messages Compile.png",
    "screenshots/features/building/messages",
    "screenshots/features/building/messages/Autoscroll to Source.png",
    "screenshots/features/building/messages/Jump to Source.png",
    "screenshots/features/building/messages/errors_and_warnings",
    "screenshots/features/building/messages/errors_and_warnings/Errors and Warnings.png",
    "screenshots/features/building/messages/errors_and_warnings/Source.png",
    "screenshots/features/building/messages/warnings_as_errors",
    "screenshots/features/building/messages/warnings_as_errors/Messages.png",
    "screenshots/features/building/messages/warnings_as_errors/Setting.png",
    "screenshots/features/building/messages/warnings_as_errors/warnings_only",
    "screenshots/features/building/messages/warnings_as_errors/warnings_only/Errors.png",
    "screenshots/features/building/messages/warnings_as_errors/warnings_only/Source.png",
    "screenshots/features/building/messages/warnings_as_errors/warnings_only/Warnings.png",
    "screenshots/features/credo",
    "screenshots/features/credo/external_annotator",
    "screenshots/features/credo/external_annotator/Explanation.png",
    "screenshots/features/credo/external_annotator/Warning Annotations.png",
    "screenshots/features/credo/inspection",
    "screenshots/features/credo/inspection/batch_mode",
    "screenshots/features/credo/inspection/batch_mode/Code Highlighting.png",
    "screenshots/features/credo/inspection/batch_mode/Expansion Preview.png",
    "screenshots/features/credo/inspection/batch_mode/Expansion.png",
    "screenshots/features/credo/inspection/batch_mode/Individual Entry.png",
    "screenshots/features/credo/inspection/batch_mode/Run Credo Custom Scope Project Production Files.png",
    "screenshots/features/eex_templates",
    "screenshots/features/eex_templates/Form Template.png",
    "screenshots/features/eex_templates/Parameter Usage in Form Template.png",
    "screenshots/features/elixir_external_tools",
    "screenshots/features/elixir_external_tools/Rich IDE.png",
    "screenshots/features/elixir_external_tools/Small IDE.png",
    "screenshots/features/go_to_related",
    "screenshots/features/go_to_related/call",
    "screenshots/features/go_to_related/call/Choose Target.png",
    "screenshots/features/go_to_related/call/Decompiled.png",
    "screenshots/features/go_to_related/module",
    "screenshots/features/go_to_related/module/Choose Target.png",
    "screenshots/features/go_to_related/module/Decompiled.png",
    "screenshots/features/leex_templates",
    "screenshots/features/leex_templates/Index.png",
    "screenshots/features/new",
    "screenshots/features/new/Elixir File.png",
    "screenshots/features/new/elixir_file",
    "screenshots/features/new/elixir_file/Kind.png",
    "screenshots/features/project",
    "screenshots/features/project/New.png",
    "screenshots/features/project/SDK.png",
    "screenshots/features/project/Window.png",
    "screenshots/features/project/from_existing_sources",
    "screenshots/features/project/from_existing_sources/import_project_from_external_model",
    "screenshots/features/project/from_existing_sources/import_project_from_external_model/Mix.png",
    "screenshots/features/project/new",
    "screenshots/features/project/new/Elixir.png",
    "screenshots/features/project/new/Settings.png",
    "screenshots/features/run_debug_configurations",
    "screenshots/features/run_debug_configurations/Edit Configurations.png",
    "screenshots/features/run_debug_configurations/distillery_release_cli",
    "screenshots/features/run_debug_configurations/distillery_release_cli/Add New.png",
    "screenshots/features/run_debug_configurations/elixir",
    "screenshots/features/run_debug_configurations/elixir/Add New.png",
    "screenshots/features/run_debug_configurations/elixir/running",
    "screenshots/features/run_debug_configurations/elixir/running/Toolbar Button.png",
    "screenshots/features/run_debug_configurations/iex",
    "screenshots/features/run_debug_configurations/iex/Add New.png",
    "screenshots/features/run_debug_configurations/iex/mix",
    "screenshots/features/run_debug_configurations/iex/mix/Add New.png",
    "screenshots/features/run_debug_configurations/iex/running",
    "screenshots/features/run_debug_configurations/iex/running/Toolbar Button.png",
    "screenshots/features/run_debug_configurations/mix_espec",
    "screenshots/features/run_debug_configurations/mix_espec/Add New.png",
    "screenshots/features/run_debug_configurations/mix_espec/Test Results.png",
    "screenshots/features/run_debug_configurations/mix_espec/context",
    "screenshots/features/run_debug_configurations/mix_espec/context/directory",
    "screenshots/features/run_debug_configurations/mix_espec/context/directory/Run Mix ESpec.png",
    "screenshots/features/run_debug_configurations/mix_espec/context/file",
    "screenshots/features/run_debug_configurations/mix_espec/context/file/Run Mix ESpec.png",
    "screenshots/features/run_debug_configurations/mix_espec/context/line",
    "screenshots/features/run_debug_configurations/mix_espec/context/line/Run Mix ESpec.png",
    "screenshots/features/run_debug_configurations/mix_espec/mark_directory_as",
    "screenshots/features/run_debug_configurations/mix_espec/mark_directory_as/Test Sources Root.png",
    "screenshots/features/run_debug_configurations/mix_espec/mark_directory_as/Unmark as Test Sources Root.png",
    "screenshots/features/run_debug_configurations/mix_tasks",
    "screenshots/features/run_debug_configurations/mix_tasks/Add New.png",
    "screenshots/features/run_debug_configurations/mix_tasks/Edit.png",
    "screenshots/features/run_debug_configurations/mix_tasks/running",
    "screenshots/features/run_debug_configurations/mix_tasks/running/Error Link.png",
    "screenshots/features/run_debug_configurations/mix_tasks/running/Toolbar Button.png",
    "screenshots/features/run_debug_configurations/mix_test",
    "screenshots/features/run_debug_configurations/mix_test/Add New.png",
    "screenshots/features/run_debug_configurations/mix_test/Test Results.png",
    "screenshots/features/run_debug_configurations/mix_test/context",
    "screenshots/features/run_debug_configurations/mix_test/context/directory",
    "screenshots/features/run_debug_configurations/mix_test/context/directory/Run Mix ExUnit.png",
    "screenshots/features/run_debug_configurations/mix_test/context/file",
    "screenshots/features/run_debug_configurations/mix_test/context/file/Run Mix ExUnit.png",
    "screenshots/features/run_debug_configurations/mix_test/context/line",
    "screenshots/features/run_debug_configurations/mix_test/context/line/Run Mix ExUnit.png",
    "screenshots/features/run_debug_configurations/mix_test/mark_directory_as",
    "screenshots/features/run_debug_configurations/mix_test/mark_directory_as/Test Sources Root.png",
    "screenshots/features/run_debug_configurations/mix_test/mark_directory_as/Unmark as Test Sources Root.png",
    "screenshots/features/sdk",
    "screenshots/features/sdk/Code Paths.png",
    "screenshots/features/sdk/Elixir SDK Home Directory Class Paths.png",
    "screenshots/features/sdk/Erlang SDK Home Directory Class Paths.png",
    "screenshots/features/sdk/default",
    "screenshots/features/sdk/default/Cannot Create SDK.png",
    "screenshots/features/sdk/default/Elixir SDK Home Directory.png",
    "screenshots/features/sdk/default/Elixir SDK.png",
    "screenshots/features/sdk/default/Erlang SDK.png",
    "screenshots/features/sdk/default/Internal Erlang SDK.png",
    "screenshots/features/sdk/default/No SDK.png",
    "screenshots/features/sdk/default/Project Defaults.png",
    "screenshots/features/sdk/default/Project Structure.png",
    "screenshots/features/sdk/show_hidden_files_and_directories",
    "screenshots/features/sdk/show_hidden_files_and_directories/IntelliJ.png",
    "screenshots/features/sdk/small_ides",
    "screenshots/features/sdk/small_ides/Add SDK.png",
    "screenshots/features/sdk/small_ides/Cannot Create SDK.png",
    "screenshots/features/sdk/small_ides/Internal Erlang SDK.png",
    "screenshots/features/sdk/small_ides/SDK.png",
    "screenshots/features/sdk/small_ides/Select Home Directory for Elixir SDK.png",
    "screenshots/features/sdk/small_ides/Select Home Directory for Erlang SDK for Elixir SDK.png",
    "screenshots/find_usages",
    "screenshots/find_usages/Multiple Clauses.png",
    "screenshots/find_usages/Multiple Functions.png",
    "screenshots/inspection",
    "screenshots/inspection/Elixir.png",
    "screenshots/inspection/elixir",
    "screenshots/inspection/elixir/ambiguous_nested_calls",
    "screenshots/inspection/elixir/ambiguous_nested_calls/error.png",
    "screenshots/inspection/elixir/ambiguous_nested_calls/inspection.png",
    "screenshots/inspection/elixir/ambiguous_nested_calls/preferences.png",
    "screenshots/inspection/elixir/ambiguous_parentheses",
    "screenshots/inspection/elixir/ambiguous_parentheses/error.png",
    "screenshots/inspection/elixir/ambiguous_parentheses/inspection.png",
    "screenshots/inspection/elixir/ambiguous_parentheses/preferences.png",
    "screenshots/inspection/elixir/keywords_not_at_end",
    "screenshots/inspection/elixir/keywords_not_at_end/error.png",
    "screenshots/inspection/elixir/keywords_not_at_end/inspection.png",
    "screenshots/inspection/elixir/keywords_not_at_end/preferences.png",
    "screenshots/inspection/elixir/missing_end_of_expression",
    "screenshots/inspection/elixir/missing_end_of_expression/error.png",
    "screenshots/inspection/elixir/missing_end_of_expression/inspection.png",
    "screenshots/inspection/elixir/missing_end_of_expression/preferences.png",
    "screenshots/local_quick_fix",
    "screenshots/local_quick_fix/Remove Space Before Ambiguous Parentheses.mov",
    "screenshots/local_quick_fix/Remove Spaces Before Ambiguous Parentheses.gif",
    "screenshots/preferences",
    "screenshots/preferences/editor",
    "screenshots/preferences/editor/colors_and_fonts",
    "screenshots/preferences/editor/colors_and_fonts/darcula",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Alias.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Atom.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Bit.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Braces.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Brackets.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Character Token.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Comma.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Dot.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Interpolation.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Maps and Structs",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Maps and Structs/Maps.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Maps and Structs/Structs.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Operation Sign.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Parentheses.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Braces and Operators/Semicolon.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Calls",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Calls/Function.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Calls/Macro.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Calls/Predefined.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Comment.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Keywords.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Documentation.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Documentation",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Documentation/Text.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Types",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Types/Callback.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Types/Specification.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Types/Type Parameter.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Module Attributes/Types/Type.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Base Prefix",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Base Prefix/Non-Decimal.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Base Prefix/Obsolete Non-Decimal.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Decimal Exponent, Mark, and Separator.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Digits",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Digits/Invalid.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Numbers/Digits/Valid.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Textual",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Textual/Character List.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Textual/Escape Sequence.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Textual/Sigil.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Textual/String.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Variables",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Variables/Ignored.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Variables/Parameter.png",
    "screenshots/preferences/editor/colors_and_fonts/darcula/Variables/Variable.png",
    "screenshots/preferences/editor/colors_and_fonts/default",
    "screenshots/preferences/editor/colors_and_fonts/default/Alias.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Atom.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Bit.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Braces.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Brackets.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Character Token.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Comma.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Dot.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Interpolation.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Maps and Structs",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Maps and Structs/Maps.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Maps and Structs/Structs.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Operation Sign.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Parentheses.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Braces and Operators/Semicolon.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Calls",
    "screenshots/preferences/editor/colors_and_fonts/default/Calls/Function.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Calls/Macro.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Calls/Predefined.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Comment.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Keywords.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Documentation.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Documentation",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Documentation/Text.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Types",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Types/Callback.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Types/Specification.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Types/Type Parameter.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Module Attributes/Types/Type.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Base Prefix",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Base Prefix/Non-Decimal.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Base Prefix/Obsolete Non-Decimal.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Decimal Exponent, Mark, and Separator.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Digits",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Digits/Invalid.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Numbers/Digits/Valid.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Textual",
    "screenshots/preferences/editor/colors_and_fonts/default/Textual/Character List.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Textual/Escape Sequence.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Textual/Sigil.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Textual/String.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Variables",
    "screenshots/preferences/editor/colors_and_fonts/default/Variables/Ignored.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Variables/Parameter.png",
    "screenshots/preferences/editor/colors_and_fonts/default/Variables/Variable.png",
    "screenshots/project_settings",
    "screenshots/project_settings/Project.png",
    "screenshots/project_settings/module",
    "screenshots/project_settings/module/Dependencies.png",
    "screenshots/project_settings/module/Paths.png",
    "screenshots/project_settings/module/Sources.png",
    "screenshots/structure",
    "screenshots/structure/Buttons.png",
    "screenshots/structure/button",
    "screenshots/structure/button/Autoscrollers.png",
    "screenshots/structure/button/Expanders.png",
    "screenshots/structure/button/Providers.png",
    "screenshots/structure/button/Sorters.png",
    "settings.gradle",
    "src",
    "src/org",
    "src/org/elixir_lang",
    "src/org/elixir_lang/Atom.kt",
    "src/org/elixir_lang/Clause.kt",
    "src/org/elixir_lang/ContentEntriesEditor.java",
    "src/org/elixir_lang/DepsWatcher.kt",
    "src/org/elixir_lang/Distillery.kt",
    "src/org/elixir_lang/EEx.bnf",
    "src/org/elixir_lang/EEx.flex",
    "src/org/elixir_lang/ESpec.kt",
    "src/org/elixir_lang/ElementTypeFactory.java",
    "src/org/elixir_lang/Elixir.bnf",
    "src/org/elixir_lang/Elixir.flex",
    "src/org/elixir_lang/Elixir.kt",
    "src/org/elixir_lang/ElixirColorSettingsPage.java",
    "src/org/elixir_lang/ElixirCommenter.java",
    "src/org/elixir_lang/ElixirFileType.java",
    "src/org/elixir_lang/ElixirFileTypeFactory.java",
    "src/org/elixir_lang/ElixirFlexLexer.java",
    "src/org/elixir_lang/ElixirFlexLexerAdapter.kt",
    "src/org/elixir_lang/ElixirLanguage.kt",
    "src/org/elixir_lang/ElixirLexer.kt",
    "src/org/elixir_lang/ElixirModules.kt",
    "src/org/elixir_lang/ElixirParserDefinition.kt",
    "src/org/elixir_lang/ElixirSyntaxHighlighter.java",
    "src/org/elixir_lang/ElixirSyntaxHighlighterFactory.java",
    "src/org/elixir_lang/Erl.kt",
    "src/org/elixir_lang/ExUnit.kt",
    "src/org/elixir_lang/Facet.java",
    "src/org/elixir_lang/FrameworkDetector.java",
    "src/org/elixir_lang/Generic.kt",
    "src/org/elixir_lang/GenericServer.kt",
    "src/org/elixir_lang/IEx.kt",
    "src/org/elixir_lang/IOLib.kt",
    "src/org/elixir_lang/Icons.kt",
    "src/org/elixir_lang/Inspect.kt",
    "src/org/elixir_lang/IntellijElixir.java",
    "src/org/elixir_lang/Keyword.kt",
    "src/org/elixir_lang/Level.java",
    "src/org/elixir_lang/List.java",
    "src/org/elixir_lang/Macro.kt",
    "src/org/elixir_lang/MailBox.kt",
    "src/org/elixir_lang/Mix.kt",
    "src/org/elixir_lang/Module.kt",
    "src/org/elixir_lang/NameArity.kt",
    "src/org/elixir_lang/NameArityRange.kt",
    "src/org/elixir_lang/PackageManager.kt",
    "src/org/elixir_lang/Process.java",
    "src/org/elixir_lang/QuoteHandler.java",
    "src/org/elixir_lang/RPC.kt",
    "src/org/elixir_lang/ReadWriteAccessDetector.kt",
    "src/org/elixir_lang/Reference.java",
    "src/org/elixir_lang/ReferencesSearch.java",
    "src/org/elixir_lang/Sender.java",
    "src/org/elixir_lang/Server.kt",
    "src/org/elixir_lang/TargetElementEvaluator.kt",
    "src/org/elixir_lang/TypedHandler.java",
    "src/org/elixir_lang/UsageTargetProvider.kt",
    "src/org/elixir_lang/UsageTypeProvider.kt",
    "src/org/elixir_lang/Visibility.java",
    "src/org/elixir_lang/action",
    "src/org/elixir_lang/action/HelpAction.kt",
    "src/org/elixir_lang/annotator",
    "src/org/elixir_lang/annotator/Alias.java",
    "src/org/elixir_lang/annotator/Atom.java",
    "src/org/elixir_lang/annotator/Callable.kt",
    "src/org/elixir_lang/annotator/EscapeSequence.java",
    "src/org/elixir_lang/annotator/FunctionWithIndex.java",
    "src/org/elixir_lang/annotator/Map.java",
    "src/org/elixir_lang/annotator/Module.java",
    "src/org/elixir_lang/annotator/ModuleAttribute.kt",
    "src/org/elixir_lang/annotator/Parameter.java",
    "src/org/elixir_lang/application",
    "src/org/elixir_lang/application/options",
    "src/org/elixir_lang/application/options/CodeStyleConfigurable.java",
    "src/org/elixir_lang/beam",
    "src/org/elixir_lang/beam/Beam.kt",
    "src/org/elixir_lang/beam/ByteArray.kt",
    "src/org/elixir_lang/beam/Cache.kt",
    "src/org/elixir_lang/beam/Decompiler.java",
    "src/org/elixir_lang/beam/FileEditor.kt",
    "src/org/elixir_lang/beam/FileType.java",
    "src/org/elixir_lang/beam/FileTypeFactory.java",
    "src/org/elixir_lang/beam/FileViewProvider.java",
    "src/org/elixir_lang/beam/FileViewProviderFactory.java",
    "src/org/elixir_lang/beam/Icons.java",
    "src/org/elixir_lang/beam/Language.java",
    "src/org/elixir_lang/beam/MacroNameArity.java",
    "src/org/elixir_lang/beam/StructureViewBuilderProvider.java",
    "src/org/elixir_lang/beam/StubBuilder.java",
    "src/org/elixir_lang/beam/assembly",
    "src/org/elixir_lang/beam/assembly/BEAM.Assembly.bnf",
    "src/org/elixir_lang/beam/assembly/BEAM.Assembly.flex",
    "src/org/elixir_lang/beam/assembly/BEAMAssemblyParser.java",
    "src/org/elixir_lang/beam/assembly/Controls.kt",
    "src/org/elixir_lang/beam/assembly/File.kt",
    "src/org/elixir_lang/beam/assembly/FlexLexer.java",
    "src/org/elixir_lang/beam/assembly/FlexLexerAdapter.kt",
    "src/org/elixir_lang/beam/assembly/Icons.kt",
    "src/org/elixir_lang/beam/assembly/Language.kt",
    "src/org/elixir_lang/beam/assembly/LookAheadLexer.kt",
    "src/org/elixir_lang/beam/assembly/ParserDefinition.java",
    "src/org/elixir_lang/beam/assembly/SyntaxHighlighter.kt",
    "src/org/elixir_lang/beam/assembly/file",
    "src/org/elixir_lang/beam/assembly/file/Type.kt",
    "src/org/elixir_lang/beam/assembly/file/type",
    "src/org/elixir_lang/beam/assembly/file/type/Factory.kt",
    "src/org/elixir_lang/beam/assembly/psi",
    "src/org/elixir_lang/beam/assembly/psi/BitString.java",
    "src/org/elixir_lang/beam/assembly/psi/ElementType.kt",
    "src/org/elixir_lang/beam/assembly/psi/FunctionReference.java",
    "src/org/elixir_lang/beam/assembly/psi/LastTail.java",
    "src/org/elixir_lang/beam/assembly/psi/List.java",
    "src/org/elixir_lang/beam/assembly/psi/Map.java",
    "src/org/elixir_lang/beam/assembly/psi/Operands.java",
    "src/org/elixir_lang/beam/assembly/psi/Operation.java",
    "src/org/elixir_lang/beam/assembly/psi/Qualifier.java",
    "src/org/elixir_lang/beam/assembly/psi/Relative.java",
    "src/org/elixir_lang/beam/assembly/psi/Struct.java",
    "src/org/elixir_lang/beam/assembly/psi/Term.java",
    "src/org/elixir_lang/beam/assembly/psi/TokenType.kt",
    "src/org/elixir_lang/beam/assembly/psi/Tuple.java",
    "src/org/elixir_lang/beam/assembly/psi/Types.java",
    "src/org/elixir_lang/beam/assembly/psi/Values.java",
    "src/org/elixir_lang/beam/assembly/psi/Visitor.java",
    "src/org/elixir_lang/beam/assembly/psi/impl",
    "src/org/elixir_lang/beam/assembly/psi/impl/BitStringImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/FunctionReferenceImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/LastTailImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/ListImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/MapImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/OperandsImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/OperationImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/QualifierImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/RelativeImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/StructImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/TermImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/TupleImpl.java",
    "src/org/elixir_lang/beam/assembly/psi/impl/ValuesImpl.java",
    "src/org/elixir_lang/beam/assembly/syntax_highlighter",
    "src/org/elixir_lang/beam/assembly/syntax_highlighter/Factory.kt",
    "src/org/elixir_lang/beam/chunk",
    "src/org/elixir_lang/beam/chunk/Atoms.kt",
    "src/org/elixir_lang/beam/chunk/CallDefinitions.java",
    "src/org/elixir_lang/beam/chunk/Chunk.java",
    "src/org/elixir_lang/beam/chunk/Code.kt",
    "src/org/elixir_lang/beam/chunk/DebugInfo.kt",
    "src/org/elixir_lang/beam/chunk/ElixirDocumentation.kt",
    "src/org/elixir_lang/beam/chunk/Functions.kt",
    "src/org/elixir_lang/beam/chunk/Imports.kt",
    "src/org/elixir_lang/beam/chunk/Keyword.kt",
    "src/org/elixir_lang/beam/chunk/Lines.kt",
    "src/org/elixir_lang/beam/chunk/Literals.kt",
    "src/org/elixir_lang/beam/chunk/OtpErlangObjectTableCellRenderer.kt",
    "src/org/elixir_lang/beam/chunk/Strings.kt",
    "src/org/elixir_lang/beam/chunk/Table.kt",
    "src/org/elixir_lang/beam/chunk/XValueRenderer.kt",
    "src/org/elixir_lang/beam/chunk/atoms",
    "src/org/elixir_lang/beam/chunk/atoms/Atom.kt",
    "src/org/elixir_lang/beam/chunk/atoms/Model.kt",
    "src/org/elixir_lang/beam/chunk/call_definitions",
    "src/org/elixir_lang/beam/chunk/call_definitions/CallDefinition.kt",
    "src/org/elixir_lang/beam/chunk/call_definitions/Model.kt",
    "src/org/elixir_lang/beam/chunk/code",
    "src/org/elixir_lang/beam/chunk/code/Component.kt",
    "src/org/elixir_lang/beam/chunk/code/Operation.kt",
    "src/org/elixir_lang/beam/chunk/code/operation",
    "src/org/elixir_lang/beam/chunk/code/operation/Code.kt",
    "src/org/elixir_lang/beam/chunk/code/operation/code",
    "src/org/elixir_lang/beam/chunk/code/operation/code/Argument.kt",
    "src/org/elixir_lang/beam/chunk/debug_info",
    "src/org/elixir_lang/beam/chunk/debug_info/Term.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/V1.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/term",
    "src/org/elixir_lang/beam/chunk/debug_info/term/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/ElixirErl.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/ErlAbstractCode.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/V1.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/Component.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/Definitions.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/MultipleTabbedPane.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/SingletonPanel.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/TypeSpecifications.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/Definition.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/Splitter.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/Tree.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/definition",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/definition/Clause.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/definition/clause",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/definitions/definition/clause/Panel.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Callbacks.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/MapField.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Opaques.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/OptionalCallbacks.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Panel.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Specifications.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Splitter.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Tree.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/TypeSpecification.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/elixir_erl/v1/type_specifications/Types.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/AbstractCodeCompileOptions.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/AbstractCode.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/Component.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/AbstractCodeString.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/AnnotatedType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Atom.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Attribute.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Attributes.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Bin.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/BinElement.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/BinElements.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Call.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Case.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Catch.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Char.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Clause.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Comprehension.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Cons.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Elements.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Fun.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Function.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Functions.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/If.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Integer.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/MacroStringDeclaredScope.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Map.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/MapField.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Match.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Model.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Nil.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Node.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Op.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Panel.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Receive.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Record.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/RecordField.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/RecordIndex.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Remote.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/RemoteType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Scope.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Sequence.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Splitter.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/ToMacroString.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Tree.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Try.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Tuple.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Type.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/UserType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/Var.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/annotated_type",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/annotated_type/AnnotationType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/ExportType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/MacroString.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/Spec.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/Type.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/spec",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/spec/Value.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/spec/value",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/attribute/spec/value/Definition.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/bin_element",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/bin_element/Pattern.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/bin_element/Size.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/bin_element/TypeSpecifier.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/bin_element/TypeSpecifierList.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/clause",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/clause/Body.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/clause/Guard.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/clause/GuardSequence.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/clause/PatternSequence.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension/Qualifier.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension/Qualifiers.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension/qualifier",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension/qualifier/BitstringGenerate.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/comprehension/qualifier/Generate.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/fun",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/fun/Clauses.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/fun/Function.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/function",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/function/Clause.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/remote_type",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/remote_type/List.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/BoundedFun.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Builtin.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Constraint.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/FieldType.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Fun.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/MapField.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/MapFieldAssociation.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/MapFieldExact.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Product.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Range.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Record.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/Union.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/bounded_fun",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/bounded_fun/FunBound.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/constraint",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/constraint/IsSubtype.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/fun",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/fun/ParameterReturn.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/record",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/abstract_code/type/record/NameRecordFields.kt",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/compiler_options",
    "src/org/elixir_lang/beam/chunk/debug_info/v1/erl_abstract_code/abstract_code_compiler_options/compiler_options/PropertyList.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/CallbackDoc.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/CallbackDocs.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Doc.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Docs.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Model.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/ModuleDoc.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Panel.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Splitter.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/Tree.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/TypeDoc.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/TypeDocs.kt",
    "src/org/elixir_lang/beam/chunk/elixir_documentation/namespace.kt",
    "src/org/elixir_lang/beam/chunk/functions",
    "src/org/elixir_lang/beam/chunk/functions/Function.kt",
    "src/org/elixir_lang/beam/chunk/functions/Model.kt",
    "src/org/elixir_lang/beam/chunk/imports",
    "src/org/elixir_lang/beam/chunk/imports/Import.kt",
    "src/org/elixir_lang/beam/chunk/imports/Model.kt",
    "src/org/elixir_lang/beam/chunk/keyword",
    "src/org/elixir_lang/beam/chunk/keyword/Entry.kt",
    "src/org/elixir_lang/beam/chunk/keyword/Model.kt",
    "src/org/elixir_lang/beam/chunk/lines",
    "src/org/elixir_lang/beam/chunk/lines/LineReference.kt",
    "src/org/elixir_lang/beam/chunk/lines/TabbedPane.kt",
    "src/org/elixir_lang/beam/chunk/lines/file_names",
    "src/org/elixir_lang/beam/chunk/lines/file_names/Index.kt",
    "src/org/elixir_lang/beam/chunk/lines/file_names/Indexer.kt",
    "src/org/elixir_lang/beam/chunk/lines/file_names/Model.kt",
    "src/org/elixir_lang/beam/chunk/lines/file_names/Table.kt",
    "src/org/elixir_lang/beam/chunk/lines/line_references",
    "src/org/elixir_lang/beam/chunk/lines/line_references/Model.kt",
    "src/org/elixir_lang/beam/chunk/literals",
    "src/org/elixir_lang/beam/chunk/literals/Literal.kt",
    "src/org/elixir_lang/beam/chunk/literals/Model.kt",
    "src/org/elixir_lang/beam/chunk/strings",
    "src/org/elixir_lang/beam/chunk/strings/Model.kt",
    "src/org/elixir_lang/beam/decompiler",
    "src/org/elixir_lang/beam/decompiler/Default.java",
    "src/org/elixir_lang/beam/decompiler/InfixOperator.java",
    "src/org/elixir_lang/beam/decompiler/MacroNameArity.java",
    "src/org/elixir_lang/beam/decompiler/PrefixOperator.java",
    "src/org/elixir_lang/beam/decompiler/Unquoted.java",
    "src/org/elixir_lang/beam/file_editor",
    "src/org/elixir_lang/beam/file_editor/Provider.kt",
    "src/org/elixir_lang/beam/psi",
    "src/org/elixir_lang/beam/psi/BeamFileImpl.java",
    "src/org/elixir_lang/beam/psi/CallDefinition.java",
    "src/org/elixir_lang/beam/psi/CallDefinitionElement.java",
    "src/org/elixir_lang/beam/psi/Modular.java",
    "src/org/elixir_lang/beam/psi/Module.java",
    "src/org/elixir_lang/beam/psi/ModuleElement.java",
    "src/org/elixir_lang/beam/psi/impl",
    "src/org/elixir_lang/beam/psi/impl/CallDefinitionImpl.java",
    "src/org/elixir_lang/beam/psi/impl/CallDefinitionStubImpl.kt",
    "src/org/elixir_lang/beam/psi/impl/ModuleElementImpl.java",
    "src/org/elixir_lang/beam/psi/impl/ModuleImpl.java",
    "src/org/elixir_lang/beam/psi/impl/ModuleStubImpl.java",
    "src/org/elixir_lang/beam/psi/impl/StubbicBase.java",
    "src/org/elixir_lang/beam/psi/stubs",
    "src/org/elixir_lang/beam/psi/stubs/CallDefinitionStub.java",
    "src/org/elixir_lang/beam/psi/stubs/ElixirFileStub.java",
    "src/org/elixir_lang/beam/psi/stubs/ModuleElementType.java",
    "src/org/elixir_lang/beam/psi/stubs/ModuleHolderFileStub.java",
    "src/org/elixir_lang/beam/psi/stubs/ModuleStub.java",
    "src/org/elixir_lang/beam/psi/stubs/ModuleStubElementType.java",
    "src/org/elixir_lang/beam/psi/stubs/ModuleStubElementTypes.java",
    "src/org/elixir_lang/beam/term",
    "src/org/elixir_lang/beam/term/Inspect.kt",
    "src/org/elixir_lang/beam/term/Line.kt",
    "src/org/elixir_lang/beam/term/Term.kt",
    "src/org/elixir_lang/clause",
    "src/org/elixir_lang/clause/Match.kt",
    "src/org/elixir_lang/code",
    "src/org/elixir_lang/code/Identifier.kt",
    "src/org/elixir_lang/code_insight",
    "src/org/elixir_lang/code_insight/ParameterInfo.kt",
    "src/org/elixir_lang/code_insight/completion",
    "src/org/elixir_lang/code_insight/completion/contributor",
    "src/org/elixir_lang/code_insight/completion/contributor/CallDefinitionClause.java",
    "src/org/elixir_lang/code_insight/completion/insert_handler",
    "src/org/elixir_lang/code_insight/completion/insert_handler/CallDefinitionClause.java",
    "src/org/elixir_lang/code_insight/completion/provider",
    "src/org/elixir_lang/code_insight/completion/provider/CallDefinitionClause.kt",
    "src/org/elixir_lang/code_insight/highlighting",
    "src/org/elixir_lang/code_insight/highlighting/brace_matcher",
    "src/org/elixir_lang/code_insight/highlighting/brace_matcher/NonTrivial.java",
    "src/org/elixir_lang/code_insight/highlighting/brace_matcher/Paired.java",
    "src/org/elixir_lang/code_insight/line_marker_provider",
    "src/org/elixir_lang/code_insight/line_marker_provider/CallDefinition.kt",
    "src/org/elixir_lang/code_insight/lookup",
    "src/org/elixir_lang/code_insight/lookup/element",
    "src/org/elixir_lang/code_insight/lookup/element/CallDefinitionClause.java",
    "src/org/elixir_lang/code_insight/lookup/element_renderer",
    "src/org/elixir_lang/code_insight/lookup/element_renderer/CallDefinitionClause.java",
    "src/org/elixir_lang/code_insight/lookup/element_renderer/Variable.java",
    "src/org/elixir_lang/code_style",
    "src/org/elixir_lang/code_style/CodeStyleSettings.java",
    "src/org/elixir_lang/configuration",
    "src/org/elixir_lang/configuration/ElixirCompilerOptionsConfigurable.form",
    "src/org/elixir_lang/configuration/ElixirCompilerOptionsConfigurable.java",
    "src/org/elixir_lang/configuration/ElixirCompilerSettings.java",
    "src/org/elixir_lang/console",
    "src/org/elixir_lang/console/ElixirConsoleUtil.java",
    "src/org/elixir_lang/console/FileReferenceFilter.java",
    "src/org/elixir_lang/create_module",
    "src/org/elixir_lang/create_module/Action.kt",
    "src/org/elixir_lang/create_module/Dialog.kt",
    "src/org/elixir_lang/create_module/ElementCreator.kt",
    "src/org/elixir_lang/credo",
    "src/org/elixir_lang/credo/Annotator.java",
    "src/org/elixir_lang/credo/Configurable.form",
    "src/org/elixir_lang/credo/Configurable.java",
    "src/org/elixir_lang/credo/Service.java",
    "src/org/elixir_lang/credo/State.java",
    "src/org/elixir_lang/credo/inspection_tool",
    "src/org/elixir_lang/credo/inspection_tool/Global.kt",
    "src/org/elixir_lang/credo/inspection_tool/Local.kt",
    "src/org/elixir_lang/debugger",
    "src/org/elixir_lang/debugger/Evaluator.kt",
    "src/org/elixir_lang/debugger/ExecutionStack.kt",
    "src/org/elixir_lang/debugger/InterpretedModule.kt",
    "src/org/elixir_lang/debugger/Log.java",
    "src/org/elixir_lang/debugger/Modules.kt",
    "src/org/elixir_lang/debugger/Node.kt",
    "src/org/elixir_lang/debugger/Process.kt",
    "src/org/elixir_lang/debugger/Runner.kt",
    "src/org/elixir_lang/debugger/Settings.kt",
    "src/org/elixir_lang/debugger/SourcePosition.java",
    "src/org/elixir_lang/debugger/StackFrame.kt",
    "src/org/elixir_lang/debugger/SuspendContext.kt",
    "src/org/elixir_lang/debugger/TabLayouter.kt",
    "src/org/elixir_lang/debugger/configuration",
    "src/org/elixir_lang/debugger/configuration/Debuggable.kt",
    "src/org/elixir_lang/debugger/configuration/InheritedModuleFilter.kt",
    "src/org/elixir_lang/debugger/configuration/inherited_module_filter",
    "src/org/elixir_lang/debugger/configuration/inherited_module_filter/table",
    "src/org/elixir_lang/debugger/configuration/inherited_module_filter/table/Model.kt",
    "src/org/elixir_lang/debugger/configuration/inherited_module_filter/table/cell_renderer",
    "src/org/elixir_lang/debugger/configuration/inherited_module_filter/table/cell_renderer/Pattern.kt",
    "src/org/elixir_lang/debugger/configuration/interpreted_modules",
    "src/org/elixir_lang/debugger/configuration/interpreted_modules/Editor.kt",
    "src/org/elixir_lang/debugger/interpreted_modules",
    "src/org/elixir_lang/debugger/interpreted_modules/Editor.kt",
    "src/org/elixir_lang/debugger/interpreted_modules/editor",
    "src/org/elixir_lang/debugger/interpreted_modules/editor/table",
    "src/org/elixir_lang/debugger/interpreted_modules/editor/table/Model.kt",
    "src/org/elixir_lang/debugger/interpreted_modules/editor/table/cell_renderer",
    "src/org/elixir_lang/debugger/interpreted_modules/editor/table/cell_renderer/Module.kt",
    "src/org/elixir_lang/debugger/line_breakpoint",
    "src/org/elixir_lang/debugger/line_breakpoint/AvailabilityProcessor.kt",
    "src/org/elixir_lang/debugger/line_breakpoint/Handler.kt",
    "src/org/elixir_lang/debugger/line_breakpoint/Properties.kt",
    "src/org/elixir_lang/debugger/line_breakpoint/Type.kt",
    "src/org/elixir_lang/debugger/line_breakpoint/availability_processor",
    "src/org/elixir_lang/debugger/line_breakpoint/availability_processor/EEx.kt",
    "src/org/elixir_lang/debugger/line_breakpoint/availability_processor/Elixir.kt",
    "src/org/elixir_lang/debugger/node",
    "src/org/elixir_lang/debugger/node/Binding.kt",
    "src/org/elixir_lang/debugger/node/Bindings.kt",
    "src/org/elixir_lang/debugger/node/Command.java",
    "src/org/elixir_lang/debugger/node/Exception.java",
    "src/org/elixir_lang/debugger/node/FileLine.kt",
    "src/org/elixir_lang/debugger/node/Level.kt",
    "src/org/elixir_lang/debugger/node/ModuleFunctionArguments.kt",
    "src/org/elixir_lang/debugger/node/ProcessSnapshot.kt",
    "src/org/elixir_lang/debugger/node/TraceElement.kt",
    "src/org/elixir_lang/debugger/node/event",
    "src/org/elixir_lang/debugger/node/event/Listener.kt",
    "src/org/elixir_lang/debugger/node/handle_cast",
    "src/org/elixir_lang/debugger/node/handle_cast/BreakpointReached.kt",
    "src/org/elixir_lang/debugger/node/ok_error",
    "src/org/elixir_lang/debugger/node/ok_error/OKError.kt",
    "src/org/elixir_lang/debugger/node/ok_error_reason",
    "src/org/elixir_lang/debugger/node/ok_error_reason/OKErrorReason.kt",
    "src/org/elixir_lang/debugger/settings",
    "src/org/elixir_lang/debugger/settings/stepping",
    "src/org/elixir_lang/debugger/settings/stepping/ModuleFilter.kt",
    "src/org/elixir_lang/debugger/settings/stepping/UI.kt",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/Editor.kt",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/ChooseByNameModel.kt",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/ModuleChooserDialog.kt",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/table",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/table/Model.kt",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/table/cell_renderer",
    "src/org/elixir_lang/debugger/settings/stepping/module_filter/editor/table/cell_renderer/ModuleFilter.kt",
    "src/org/elixir_lang/debugger/stack_frame",
    "src/org/elixir_lang/debugger/stack_frame/value",
    "src/org/elixir_lang/debugger/stack_frame/value/Atom.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/BitString.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/CharList.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Factory.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Indexed.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/LazyContainer.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/LazyParent.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Map.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Mapping.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Numeric.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Pid.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Port.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Presentable.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Presentation.java",
    "src/org/elixir_lang/debugger/stack_frame/value/Primitive.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Ref.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/String.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/Tuple.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/list",
    "src/org/elixir_lang/debugger/stack_frame/value/list/Improper.kt",
    "src/org/elixir_lang/debugger/stack_frame/value/list/Proper.kt",
    "src/org/elixir_lang/debugger/stack_frame/variable",
    "src/org/elixir_lang/debugger/stack_frame/variable/Elixir.kt",
    "src/org/elixir_lang/debugger/stack_frame/variable/Erlang.kt",
    "src/org/elixir_lang/debugger/stack_frame/variable/elixir",
    "src/org/elixir_lang/debugger/stack_frame/variable/elixir/Presentation.kt",
    "src/org/elixir_lang/debugger/stack_frame/variable/elixir/PreviousBindingGroup.kt",
    "src/org/elixir_lang/distillery",
    "src/org/elixir_lang/distillery/Configuration.kt",
    "src/org/elixir_lang/distillery/Runner.kt",
    "src/org/elixir_lang/distillery/State.kt",
    "src/org/elixir_lang/distillery/configuration",
    "src/org/elixir_lang/distillery/configuration/Editor.form",
    "src/org/elixir_lang/distillery/configuration/Editor.java",
    "src/org/elixir_lang/distillery/configuration/Factory.kt",
    "src/org/elixir_lang/distillery/configuration/Icons.kt",
    "src/org/elixir_lang/distillery/configuration/Type.kt",
    "src/org/elixir_lang/distillery/configuration/editor",
    "src/org/elixir_lang/distillery/configuration/editor/CodeLoadingMode.kt",
    "src/org/elixir_lang/distillery/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/eex",
    "src/org/elixir_lang/eex/ElementType.java",
    "src/org/elixir_lang/eex/File.java",
    "src/org/elixir_lang/eex/Highlighter.java",
    "src/org/elixir_lang/eex/Icons.kt",
    "src/org/elixir_lang/eex/Language.java",
    "src/org/elixir_lang/eex/ParserDefinition.java",
    "src/org/elixir_lang/eex/TemplateHighlighter.java",
    "src/org/elixir_lang/eex/element_type",
    "src/org/elixir_lang/eex/element_type/EmbeddedElixir.java",
    "src/org/elixir_lang/eex/element_type/Factory.java",
    "src/org/elixir_lang/eex/element_type/TemplateData.java",
    "src/org/elixir_lang/eex/file",
    "src/org/elixir_lang/eex/file/ElementType.java",
    "src/org/elixir_lang/eex/file/Type.java",
    "src/org/elixir_lang/eex/file/ViewProvider.java",
    "src/org/elixir_lang/eex/file/psi",
    "src/org/elixir_lang/eex/file/psi/Stub.java",
    "src/org/elixir_lang/eex/file/type",
    "src/org/elixir_lang/eex/file/type/Factory.java",
    "src/org/elixir_lang/eex/file/view_provider",
    "src/org/elixir_lang/eex/file/view_provider/Factory.java",
    "src/org/elixir_lang/eex/lexer",
    "src/org/elixir_lang/eex/lexer/Adapter.java",
    "src/org/elixir_lang/eex/lexer/EmbeddedElixir.java",
    "src/org/elixir_lang/eex/lexer/LookAhead.java",
    "src/org/elixir_lang/eex/lexer/TemplateData.java",
    "src/org/elixir_lang/eex/psi",
    "src/org/elixir_lang/eex/psi/EExTag.java",
    "src/org/elixir_lang/eex/psi/ElementType.java",
    "src/org/elixir_lang/eex/psi/TokenType.java",
    "src/org/elixir_lang/elixir",
    "src/org/elixir_lang/elixir/Configuration.kt",
    "src/org/elixir_lang/elixir/Runner.kt",
    "src/org/elixir_lang/elixir/State.kt",
    "src/org/elixir_lang/elixir/configuration",
    "src/org/elixir_lang/elixir/configuration/Editor.form",
    "src/org/elixir_lang/elixir/configuration/Editor.java",
    "src/org/elixir_lang/elixir/configuration/Factory.kt",
    "src/org/elixir_lang/elixir/configuration/Icons.kt",
    "src/org/elixir_lang/elixir/configuration/Type.kt",
    "src/org/elixir_lang/elixir/configuration/editor",
    "src/org/elixir_lang/elixir/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/erl",
    "src/org/elixir_lang/erl/Configuration.kt",
    "src/org/elixir_lang/erl/State.kt",
    "src/org/elixir_lang/erl/configuration",
    "src/org/elixir_lang/erl/configuration/Editor.form",
    "src/org/elixir_lang/erl/configuration/Editor.java",
    "src/org/elixir_lang/erl/configuration/editor",
    "src/org/elixir_lang/erl/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/errorreport",
    "src/org/elixir_lang/errorreport/Logger.java",
    "src/org/elixir_lang/errorreport/Submitter.java",
    "src/org/elixir_lang/errorreport/Task.java",
    "src/org/elixir_lang/espec",
    "src/org/elixir_lang/espec/Configuration.kt",
    "src/org/elixir_lang/espec/Gatherer.kt",
    "src/org/elixir_lang/espec/MixOutputToGeneralTestEventsConverter.java",
    "src/org/elixir_lang/espec/Modules.kt",
    "src/org/elixir_lang/espec/Runner.java",
    "src/org/elixir_lang/espec/State.kt",
    "src/org/elixir_lang/espec/TestConsoleProperties.java",
    "src/org/elixir_lang/espec/configuration",
    "src/org/elixir_lang/espec/configuration/Editor.form",
    "src/org/elixir_lang/espec/configuration/Editor.java",
    "src/org/elixir_lang/espec/configuration/Factory.kt",
    "src/org/elixir_lang/espec/configuration/Icons.kt",
    "src/org/elixir_lang/espec/configuration/Producer.kt",
    "src/org/elixir_lang/espec/configuration/Type.kt",
    "src/org/elixir_lang/espec/configuration/editor",
    "src/org/elixir_lang/espec/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/exunit",
    "src/org/elixir_lang/exunit/Configuration.kt",
    "src/org/elixir_lang/exunit/ElixirModules.kt",
    "src/org/elixir_lang/exunit/MixOutputToGeneralTestEventsConverter.java",
    "src/org/elixir_lang/exunit/Runner.java",
    "src/org/elixir_lang/exunit/State.kt",
    "src/org/elixir_lang/exunit/TestConsoleProperties.java",
    "src/org/elixir_lang/exunit/configuration",
    "src/org/elixir_lang/exunit/configuration/Editor.form",
    "src/org/elixir_lang/exunit/configuration/Editor.java",
    "src/org/elixir_lang/exunit/configuration/Factory.kt",
    "src/org/elixir_lang/exunit/configuration/Icons.kt",
    "src/org/elixir_lang/exunit/configuration/Producer.kt",
    "src/org/elixir_lang/exunit/configuration/Type.kt",
    "src/org/elixir_lang/exunit/configuration/editor",
    "src/org/elixir_lang/exunit/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/facet",
    "src/org/elixir_lang/facet/Configurable.form",
    "src/org/elixir_lang/facet/Configurable.kt",
    "src/org/elixir_lang/facet/Configuration.kt",
    "src/org/elixir_lang/facet/SdksService.kt",
    "src/org/elixir_lang/facet/Type.kt",
    "src/org/elixir_lang/facet/configurable",
    "src/org/elixir_lang/facet/configurable/Project.kt",
    "src/org/elixir_lang/facet/configurable/Provider.kt",
    "src/org/elixir_lang/facet/sdk",
    "src/org/elixir_lang/facet/sdk/ComboBox.kt",
    "src/org/elixir_lang/facet/sdk/Editor.kt",
    "src/org/elixir_lang/facet/sdk/Model.kt",
    "src/org/elixir_lang/facet/sdk/Name.kt",
    "src/org/elixir_lang/facet/sdk/PathEditor.kt",
    "src/org/elixir_lang/facet/sdks",
    "src/org/elixir_lang/facet/sdks/Configurable.kt",
    "src/org/elixir_lang/facet/sdks/List.kt",
    "src/org/elixir_lang/facet/sdks/Provider.kt",
    "src/org/elixir_lang/facet/sdks/elixir",
    "src/org/elixir_lang/facet/sdks/elixir/Configurable.kt",
    "src/org/elixir_lang/facet/sdks/elixir/Provider.kt",
    "src/org/elixir_lang/facet/sdks/erlang",
    "src/org/elixir_lang/facet/sdks/erlang/Configurable.kt",
    "src/org/elixir_lang/facet/sdks/erlang/Provider.kt",
    "src/org/elixir_lang/file",
    "src/org/elixir_lang/file/Finder.kt",
    "src/org/elixir_lang/file/LevelPropertyPusher.java",
    "src/org/elixir_lang/find_usages",
    "src/org/elixir_lang/find_usages/Handler.kt",
    "src/org/elixir_lang/find_usages/Provider.kt",
    "src/org/elixir_lang/find_usages/handler",
    "src/org/elixir_lang/find_usages/handler/AtNonNumericOperation.kt",
    "src/org/elixir_lang/find_usages/handler/Call.kt",
    "src/org/elixir_lang/find_usages/handler/Factory.kt",
    "src/org/elixir_lang/find_usages/handler/ModuleImpl.kt",
    "src/org/elixir_lang/find_usages/handler/QualifiableAlias.kt",
    "src/org/elixir_lang/folding",
    "src/org/elixir_lang/folding/Builder.java",
    "src/org/elixir_lang/folding/ElixirFoldingSettings.java",
    "src/org/elixir_lang/folding/OptionsProvider.java",
    "src/org/elixir_lang/formatter",
    "src/org/elixir_lang/formatter/Block.java",
    "src/org/elixir_lang/formatter/BlockListReducer.java",
    "src/org/elixir_lang/formatter/ContainerBlockListReducer.java",
    "src/org/elixir_lang/formatter/HeredocLineBlock.java",
    "src/org/elixir_lang/formatter/HeredocLineWhiteSpaceTokenBlock.java",
    "src/org/elixir_lang/formatter/settings",
    "src/org/elixir_lang/formatter/settings/CodeStyleSettingsProvider.java",
    "src/org/elixir_lang/formatter/settings/LanguageCodeStyleSettingsProvider.java",
    "src/org/elixir_lang/formatting",
    "src/org/elixir_lang/formatting/ModelBuilder.java",
    "src/org/elixir_lang/generic_server",
    "src/org/elixir_lang/generic_server/Behaviour.kt",
    "src/org/elixir_lang/github",
    "src/org/elixir_lang/github/issues",
    "src/org/elixir_lang/github/issues/create",
    "src/org/elixir_lang/github/issues/create/Request.java",
    "src/org/elixir_lang/goto_decompiled",
    "src/org/elixir_lang/goto_decompiled/Item.kt",
    "src/org/elixir_lang/goto_decompiled/Provider.kt",
    "src/org/elixir_lang/iex",
    "src/org/elixir_lang/iex/Configuration.kt",
    "src/org/elixir_lang/iex/Mix.kt",
    "src/org/elixir_lang/iex/ProcessHandler.kt",
    "src/org/elixir_lang/iex/Runner.kt",
    "src/org/elixir_lang/iex/State.kt",
    "src/org/elixir_lang/iex/configuration",
    "src/org/elixir_lang/iex/configuration/Editor.form",
    "src/org/elixir_lang/iex/configuration/Editor.java",
    "src/org/elixir_lang/iex/configuration/Factory.kt",
    "src/org/elixir_lang/iex/configuration/Icons.kt",
    "src/org/elixir_lang/iex/configuration/Type.kt",
    "src/org/elixir_lang/iex/configuration/editor",
    "src/org/elixir_lang/iex/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/iex/mix",
    "src/org/elixir_lang/iex/mix/Configuration.kt",
    "src/org/elixir_lang/iex/mix/Runner.kt",
    "src/org/elixir_lang/iex/mix/State.kt",
    "src/org/elixir_lang/iex/mix/configuration",
    "src/org/elixir_lang/iex/mix/configuration/Editor.form",
    "src/org/elixir_lang/iex/mix/configuration/Editor.java",
    "src/org/elixir_lang/iex/mix/configuration/Factory.kt",
    "src/org/elixir_lang/iex/mix/configuration/Icons.kt",
    "src/org/elixir_lang/iex/mix/configuration/Type.kt",
    "src/org/elixir_lang/iex/mix/configuration/editor",
    "src/org/elixir_lang/iex/mix/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/inspection",
    "src/org/elixir_lang/inspection/KeywordPairColonInsteadOfTypeOperator.kt",
    "src/org/elixir_lang/inspection/KeywordsNotAtEnd.java",
    "src/org/elixir_lang/inspection/MatchOperatorInsteadOfTypeOperator.kt",
    "src/org/elixir_lang/inspection/NoParenthesesManyStrict.java",
    "src/org/elixir_lang/inspection/NoParenthesesStrict.java",
    "src/org/elixir_lang/inspection/SetupSDKNotificationProvider.kt",
    "src/org/elixir_lang/lexer",
    "src/org/elixir_lang/lexer/SigilName.java",
    "src/org/elixir_lang/lexer/Stack.java",
    "src/org/elixir_lang/lexer/StackFrame.java",
    "src/org/elixir_lang/lexer/group",
    "src/org/elixir_lang/lexer/group/Base.java",
    "src/org/elixir_lang/lexer/group/Quote.java",
    "src/org/elixir_lang/lexer/group/Sigil.java",
    "src/org/elixir_lang/local_quick_fix",
    "src/org/elixir_lang/local_quick_fix/ConvertKeywordPairToTypeOperation.java",
    "src/org/elixir_lang/local_quick_fix/ConvertMatchToTypeOperation.java",
    "src/org/elixir_lang/local_quick_fix/RemoveSpaceInFrontOfNoParenthesesStrict.java",
    "src/org/elixir_lang/mail_box",
    "src/org/elixir_lang/mail_box/BadRPC.kt",
    "src/org/elixir_lang/mail_box/WaitingMatcher.kt",
    "src/org/elixir_lang/mix",
    "src/org/elixir_lang/mix/Configuration.kt",
    "src/org/elixir_lang/mix/Dep.kt",
    "src/org/elixir_lang/mix/DepGatherer.kt",
    "src/org/elixir_lang/mix/Icons.kt",
    "src/org/elixir_lang/mix/MissingSdk.kt",
    "src/org/elixir_lang/mix/MissingWorkingDirectory.kt",
    "src/org/elixir_lang/mix/PackageManager.kt",
    "src/org/elixir_lang/mix/Project.kt",
    "src/org/elixir_lang/mix/Runner.kt",
    "src/org/elixir_lang/mix/State.kt",
    "src/org/elixir_lang/mix/TestFinder.java",
    "src/org/elixir_lang/mix/Watcher.kt",
    "src/org/elixir_lang/mix/configuration",
    "src/org/elixir_lang/mix/configuration/Editor.form",
    "src/org/elixir_lang/mix/configuration/Editor.java",
    "src/org/elixir_lang/mix/configuration/Factory.kt",
    "src/org/elixir_lang/mix/configuration/Icons.kt",
    "src/org/elixir_lang/mix/configuration/Type.kt",
    "src/org/elixir_lang/mix/configuration/editor",
    "src/org/elixir_lang/mix/configuration/editor/ParametersPanel.java",
    "src/org/elixir_lang/mix/importWizard",
    "src/org/elixir_lang/mix/importWizard/conversion",
    "src/org/elixir_lang/mix/importWizard/conversion/Converter.kt",
    "src/org/elixir_lang/mix/importWizard/conversion/ModuleSettings.kt",
    "src/org/elixir_lang/mix/importWizard/conversion/Provider.kt",
    "src/org/elixir_lang/mix/library",
    "src/org/elixir_lang/mix/library/Kind.kt",
    "src/org/elixir_lang/mix/library/Type.kt",
    "src/org/elixir_lang/mix/project",
    "src/org/elixir_lang/mix/project/DirectoryConfigurator.kt",
    "src/org/elixir_lang/mix/project/OpenProcessor.kt",
    "src/org/elixir_lang/mix/project/OtpApp.kt",
    "src/org/elixir_lang/mix/project/_import",
    "src/org/elixir_lang/mix/project/_import/Builder.kt",
    "src/org/elixir_lang/mix/project/_import/Provider.java",
    "src/org/elixir_lang/mix/project/_import/step",
    "src/org/elixir_lang/mix/project/_import/step/Root.form",
    "src/org/elixir_lang/mix/project/_import/step/Root.java",
    "src/org/elixir_lang/mix/project/_import/step/SelectOtpApps.java",
    "src/org/elixir_lang/mix/runner",
    "src/org/elixir_lang/mix/runner/Status.java",
    "src/org/elixir_lang/mix/watcher",
    "src/org/elixir_lang/mix/watcher/Resolution.kt",
    "src/org/elixir_lang/mix/watcher/TransitiveResolution.kt",
    "src/org/elixir_lang/module",
    "src/org/elixir_lang/module/DefaultModuleEditorsProvider.java",
    "src/org/elixir_lang/module/ElixirContentEntriesEditor.java",
    "src/org/elixir_lang/module/ElixirModuleBuilder.java",
    "src/org/elixir_lang/module/ElixirModuleType.java",
    "src/org/elixir_lang/module/ElixirProjectStructureDetector.java",
    "src/org/elixir_lang/name_arity",
    "src/org/elixir_lang/name_arity/PresentationData.java",
    "src/org/elixir_lang/navigation",
    "src/org/elixir_lang/navigation/ChooseByNameContributor.kt",
    "src/org/elixir_lang/navigation/EnclosingModularByCall.java",
    "src/org/elixir_lang/navigation/GotoClassContributor.kt",
    "src/org/elixir_lang/navigation/GotoSymbolContributor.kt",
    "src/org/elixir_lang/navigation/SourcePreferredItems.kt",
    "src/org/elixir_lang/navigation/item_presentation",
    "src/org/elixir_lang/navigation/item_presentation/CallDefinitionByTuple.java",
    "src/org/elixir_lang/navigation/item_presentation/CallDefinitionHead.java",
    "src/org/elixir_lang/navigation/item_presentation/CallDefinitionSpecification.java",
    "src/org/elixir_lang/navigation/item_presentation/Delegation.java",
    "src/org/elixir_lang/navigation/item_presentation/Exception.java",
    "src/org/elixir_lang/navigation/item_presentation/FunctionDelegation.java",
    "src/org/elixir_lang/navigation/item_presentation/Implementation.java",
    "src/org/elixir_lang/navigation/item_presentation/NameArity.java",
    "src/org/elixir_lang/navigation/item_presentation/Overridable.java",
    "src/org/elixir_lang/navigation/item_presentation/Parent.java",
    "src/org/elixir_lang/navigation/item_presentation/Quote.java",
    "src/org/elixir_lang/navigation/item_presentation/Type.java",
    "src/org/elixir_lang/navigation/item_presentation/Use.java",
    "src/org/elixir_lang/navigation/item_presentation/modular",
    "src/org/elixir_lang/navigation/item_presentation/modular/Module.kt",
    "src/org/elixir_lang/navigation/item_presentation/modular/Protocol.kt",
    "src/org/elixir_lang/navigation/item_presentation/modular/Quote.java",
    "src/org/elixir_lang/navigation/item_presentation/modular/Unknown.java",
    "src/org/elixir_lang/navigation/item_presentation/modular/Use.java",
    "src/org/elixir_lang/navigation/item_presentation/structure",
    "src/org/elixir_lang/navigation/item_presentation/structure/Field.java",
    "src/org/elixir_lang/navigation/item_presentation/structure/Structure.java",
    "src/org/elixir_lang/package_manager",
    "src/org/elixir_lang/package_manager/DepGatherer.kt",
    "src/org/elixir_lang/package_manager/VirtualFile.kt",
    "src/org/elixir_lang/parser",
    "src/org/elixir_lang/parser/ExternalRules.java",
    "src/org/elixir_lang/pattern",
    "src/org/elixir_lang/pattern/Bind.kt",
    "src/org/elixir_lang/pattern/Binds.kt",
    "src/org/elixir_lang/psi",
    "src/org/elixir_lang/psi/Arguments.java",
    "src/org/elixir_lang/psi/AssociationOperation.java",
    "src/org/elixir_lang/psi/AtNonNumericOperation.java",
    "src/org/elixir_lang/psi/AtNumericBracketOperation.java",
    "src/org/elixir_lang/psi/AtUnqualifiedBracketOperation.java",
    "src/org/elixir_lang/psi/AtUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/Atomable.java",
    "src/org/elixir_lang/psi/Bodied.java",
    "src/org/elixir_lang/psi/Body.java",
    "src/org/elixir_lang/psi/BracketOperation.java",
    "src/org/elixir_lang/psi/CallDefinitionClause.kt",
    "src/org/elixir_lang/psi/CharListFragmented.java",
    "src/org/elixir_lang/psi/Definition.kt",
    "src/org/elixir_lang/psi/Digits.java",
    "src/org/elixir_lang/psi/DotCall.java",
    "src/org/elixir_lang/psi/ElementDescriptionProvider.kt",
    "src/org/elixir_lang/psi/ElementFactory.java",
    "src/org/elixir_lang/psi/ElixirElementType.java",
    "src/org/elixir_lang/psi/ElixirFile.java",
    "src/org/elixir_lang/psi/ElixirTokenType.java",
    "src/org/elixir_lang/psi/EscapeSequence.java",
    "src/org/elixir_lang/psi/EscapedHexadecimalDigits.java",
    "src/org/elixir_lang/psi/Fragmented.java",
    "src/org/elixir_lang/psi/Heredoc.java",
    "src/org/elixir_lang/psi/HeredocLine.java",
    "src/org/elixir_lang/psi/Import.kt",
    "src/org/elixir_lang/psi/Interpolated.java",
    "src/org/elixir_lang/psi/InterpolatedCharList.java",
    "src/org/elixir_lang/psi/InterpolatedCharListHeredocLined.java",
    "src/org/elixir_lang/psi/InterpolatedRegexHeredocLined.java",
    "src/org/elixir_lang/psi/InterpolatedSigilHeredoc.java",
    "src/org/elixir_lang/psi/InterpolatedSigilLine.java",
    "src/org/elixir_lang/psi/InterpolatedString.java",
    "src/org/elixir_lang/psi/InterpolatedStringHeredocLined.java",
    "src/org/elixir_lang/psi/Line.java",
    "src/org/elixir_lang/psi/Literal.java",
    "src/org/elixir_lang/psi/LiteralSigilHeredoc.java",
    "src/org/elixir_lang/psi/LiteralSigilLine.java",
    "src/org/elixir_lang/psi/MatchedCall.java",
    "src/org/elixir_lang/psi/MaybeModuleName.java",
    "src/org/elixir_lang/psi/Modular.kt",
    "src/org/elixir_lang/psi/ModuleAttributeNameable.java",
    "src/org/elixir_lang/psi/ModuleDefinition.java",
    "src/org/elixir_lang/psi/ModuleOwner.java",
    "src/org/elixir_lang/psi/NamedElement.java",
    "src/org/elixir_lang/psi/Operator.java",
    "src/org/elixir_lang/psi/Parent.java",
    "src/org/elixir_lang/psi/QualifiableAlias.kt",
    "src/org/elixir_lang/psi/QualifiedAlias.java",
    "src/org/elixir_lang/psi/QualifiedBracketOperation.java",
    "src/org/elixir_lang/psi/QualifiedMultipleAliases.java",
    "src/org/elixir_lang/psi/QualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/QualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/QualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/Quotable.java",
    "src/org/elixir_lang/psi/QuotableArguments.java",
    "src/org/elixir_lang/psi/QuotableKeywordList.java",
    "src/org/elixir_lang/psi/QuotableKeywordPair.java",
    "src/org/elixir_lang/psi/Quote.java",
    "src/org/elixir_lang/psi/QuoteMacro.kt",
    "src/org/elixir_lang/psi/RegexFragmented.java",
    "src/org/elixir_lang/psi/Sigil.java",
    "src/org/elixir_lang/psi/SigilFragmented.java",
    "src/org/elixir_lang/psi/SigilHeredoc.java",
    "src/org/elixir_lang/psi/SigilLine.java",
    "src/org/elixir_lang/psi/StringFragmented.java",
    "src/org/elixir_lang/psi/UnaryNonNumericOperation.java",
    "src/org/elixir_lang/psi/UnqualifiedBracketOperation.java",
    "src/org/elixir_lang/psi/UnqualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/UnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/UnqualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/Unquoted.java",
    "src/org/elixir_lang/psi/Use.kt",
    "src/org/elixir_lang/psi/Using.kt",
    "src/org/elixir_lang/psi/WholeNumber.java",
    "src/org/elixir_lang/psi/WordsFragmented.java",
    "src/org/elixir_lang/psi/__MODULE__.kt",
    "src/org/elixir_lang/psi/__module__",
    "src/org/elixir_lang/psi/__module__/AliasPresentation.kt",
    "src/org/elixir_lang/psi/__module__/PsiScopeProcessor.kt",
    "src/org/elixir_lang/psi/__module__/Reference.kt",
    "src/org/elixir_lang/psi/__module__/Resolver.kt",
    "src/org/elixir_lang/psi/call",
    "src/org/elixir_lang/psi/call/Call.java",
    "src/org/elixir_lang/psi/call/CanonicallyNamed.java",
    "src/org/elixir_lang/psi/call/MaybeExported.java",
    "src/org/elixir_lang/psi/call/Named.java",
    "src/org/elixir_lang/psi/call/StubBased.java",
    "src/org/elixir_lang/psi/call/arguments",
    "src/org/elixir_lang/psi/call/arguments/None.java",
    "src/org/elixir_lang/psi/call/arguments/Star.java",
    "src/org/elixir_lang/psi/call/arguments/star",
    "src/org/elixir_lang/psi/call/arguments/star/NoParentheses.java",
    "src/org/elixir_lang/psi/call/arguments/star/NoParenthesesOneArgument.java",
    "src/org/elixir_lang/psi/call/arguments/star/Parentheses.java",
    "src/org/elixir_lang/psi/call/name",
    "src/org/elixir_lang/psi/call/name/Function.java",
    "src/org/elixir_lang/psi/call/name/Module.java",
    "src/org/elixir_lang/psi/call/name/Quote.java",
    "src/org/elixir_lang/psi/call/qualification",
    "src/org/elixir_lang/psi/call/qualification/Qualified.java",
    "src/org/elixir_lang/psi/impl",
    "src/org/elixir_lang/psi/impl/ArgumentsImpl.kt",
    "src/org/elixir_lang/psi/impl/AtNonNumericOperationImpl.kt",
    "src/org/elixir_lang/psi/impl/AtUnqualifiedNoParenthesesCallImpl.kt",
    "src/org/elixir_lang/psi/impl/AtomableImpl.kt",
    "src/org/elixir_lang/psi/impl/DigitsImpl.kt",
    "src/org/elixir_lang/psi/impl/DigitsList.kt",
    "src/org/elixir_lang/psi/impl/ElixirAtIdentifierImpl.kt",
    "src/org/elixir_lang/psi/impl/ElixirAtomImpl.kt",
    "src/org/elixir_lang/psi/impl/ElixirHeredocLinePrefixImpl.kt",
    "src/org/elixir_lang/psi/impl/ElixirIdentifierImpl.kt",
    "src/org/elixir_lang/psi/impl/ElixirPsiImplUtil.java",
    "src/org/elixir_lang/psi/impl/EscapeSequenceImpl.java",
    "src/org/elixir_lang/psi/impl/HeredocImpl.kt",
    "src/org/elixir_lang/psi/impl/MaybeModuleNameImpl.kt",
    "src/org/elixir_lang/psi/impl/NamedElementImpl.java",
    "src/org/elixir_lang/psi/impl/NamedStubbedPsiElementBase.java",
    "src/org/elixir_lang/psi/impl/OperatorImpl.kt",
    "src/org/elixir_lang/psi/impl/ParentImpl.kt",
    "src/org/elixir_lang/psi/impl/PresentationImpl.kt",
    "src/org/elixir_lang/psi/impl/ProcessDeclarationsImpl.kt",
    "src/org/elixir_lang/psi/impl/PsiElementImpl.kt",
    "src/org/elixir_lang/psi/impl/PsiNameIdentifierOwnerImpl.kt",
    "src/org/elixir_lang/psi/impl/PsiNamedElementImpl.kt",
    "src/org/elixir_lang/psi/impl/QualifiableAliasImpl.kt",
    "src/org/elixir_lang/psi/impl/QuotableArgumentsImpl.kt",
    "src/org/elixir_lang/psi/impl/QuotableImpl.kt",
    "src/org/elixir_lang/psi/impl/QuotableKeywordListImpl.kt",
    "src/org/elixir_lang/psi/impl/QuotableKeywordPairImpl.kt",
    "src/org/elixir_lang/psi/impl/SigilImpl.kt",
    "src/org/elixir_lang/psi/impl/SigilLineImpl.kt",
    "src/org/elixir_lang/psi/impl/StubbedPsiElementBase.java",
    "src/org/elixir_lang/psi/impl/UnqualifiedNoParenthesesCallImpl.kt",
    "src/org/elixir_lang/psi/impl/WholeNumberImpl.kt",
    "src/org/elixir_lang/psi/impl/call",
    "src/org/elixir_lang/psi/impl/call/CallImpl.kt",
    "src/org/elixir_lang/psi/impl/call/CanonicallyNamedImpl.kt",
    "src/org/elixir_lang/psi/impl/call/qualification",
    "src/org/elixir_lang/psi/impl/call/qualification/QualifiedImpl.kt",
    "src/org/elixir_lang/psi/impl/declarations",
    "src/org/elixir_lang/psi/impl/declarations/UseScopeImpl.kt",
    "src/org/elixir_lang/psi/impl/operation",
    "src/org/elixir_lang/psi/impl/operation/capture",
    "src/org/elixir_lang/psi/impl/operation/capture/NonNumericImpl.kt",
    "src/org/elixir_lang/psi/impl/qualifiable_alias",
    "src/org/elixir_lang/psi/impl/qualifiable_alias/ItemPresentation.kt",
    "src/org/elixir_lang/psi/operation",
    "src/org/elixir_lang/psi/operation/Addition.java",
    "src/org/elixir_lang/psi/operation/And.java",
    "src/org/elixir_lang/psi/operation/Arrow.java",
    "src/org/elixir_lang/psi/operation/In.java",
    "src/org/elixir_lang/psi/operation/InMatch.java",
    "src/org/elixir_lang/psi/operation/Infix.java",
    "src/org/elixir_lang/psi/operation/Match.java",
    "src/org/elixir_lang/psi/operation/Multiplication.kt",
    "src/org/elixir_lang/psi/operation/Normalized.kt",
    "src/org/elixir_lang/psi/operation/NotIn.java",
    "src/org/elixir_lang/psi/operation/Operation.java",
    "src/org/elixir_lang/psi/operation/Or.java",
    "src/org/elixir_lang/psi/operation/Pipe.java",
    "src/org/elixir_lang/psi/operation/Prefix.java",
    "src/org/elixir_lang/psi/operation/Three.java",
    "src/org/elixir_lang/psi/operation/Two.java",
    "src/org/elixir_lang/psi/operation/Type.java",
    "src/org/elixir_lang/psi/operation/When.java",
    "src/org/elixir_lang/psi/operation/capture",
    "src/org/elixir_lang/psi/operation/capture/NonNumeric.kt",
    "src/org/elixir_lang/psi/operation/infix",
    "src/org/elixir_lang/psi/operation/infix/Normalized.java",
    "src/org/elixir_lang/psi/operation/infix/Position.java",
    "src/org/elixir_lang/psi/operation/infix/Triple.java",
    "src/org/elixir_lang/psi/operation/not_in",
    "src/org/elixir_lang/psi/operation/not_in/Normalized.java",
    "src/org/elixir_lang/psi/operation/prefix",
    "src/org/elixir_lang/psi/operation/prefix/Normalized.java",
    "src/org/elixir_lang/psi/qualification",
    "src/org/elixir_lang/psi/qualification/Qualified.java",
    "src/org/elixir_lang/psi/qualification/Unqualified.java",
    "src/org/elixir_lang/psi/scope",
    "src/org/elixir_lang/psi/scope/Atom.java",
    "src/org/elixir_lang/psi/scope/CallDefinitionClause.kt",
    "src/org/elixir_lang/psi/scope/Identifier.kt",
    "src/org/elixir_lang/psi/scope/Module.kt",
    "src/org/elixir_lang/psi/scope/MultiResolve.kt",
    "src/org/elixir_lang/psi/scope/ResolveResultOrderedSet.kt",
    "src/org/elixir_lang/psi/scope/Variable.java",
    "src/org/elixir_lang/psi/scope/atom",
    "src/org/elixir_lang/psi/scope/atom/Variants.java",
    "src/org/elixir_lang/psi/scope/call_definition_clause",
    "src/org/elixir_lang/psi/scope/call_definition_clause/ArityInterval.kt",
    "src/org/elixir_lang/psi/scope/call_definition_clause/MultiResolve.kt",
    "src/org/elixir_lang/psi/scope/call_definition_clause/Variants.kt",
    "src/org/elixir_lang/psi/scope/module",
    "src/org/elixir_lang/psi/scope/module/MultiResolve.kt",
    "src/org/elixir_lang/psi/scope/module/Variants.kt",
    "src/org/elixir_lang/psi/scope/module_attribute",
    "src/org/elixir_lang/psi/scope/module_attribute/implemetation",
    "src/org/elixir_lang/psi/scope/module_attribute/implemetation/For.kt",
    "src/org/elixir_lang/psi/scope/module_attribute/implemetation/Protocol.kt",
    "src/org/elixir_lang/psi/scope/variable",
    "src/org/elixir_lang/psi/scope/variable/MultiResolve.java",
    "src/org/elixir_lang/psi/scope/variable/Variants.java",
    "src/org/elixir_lang/psi/stub",
    "src/org/elixir_lang/psi/stub/File.java",
    "src/org/elixir_lang/psi/stub/MatchedAtUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/MatchedDotCall.java",
    "src/org/elixir_lang/psi/stub/MatchedQualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/MatchedQualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/MatchedQualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/MatchedUnqualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/MatchedUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/MatchedUnqualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedAtUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedDotCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedQualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedQualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedQualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedUnqualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnmatchedUnqualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/UnqualifiedNoParenthesesManyArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/call",
    "src/org/elixir_lang/psi/stub/call/Deserialized.java",
    "src/org/elixir_lang/psi/stub/call/Reader.java",
    "src/org/elixir_lang/psi/stub/call/Stub.java",
    "src/org/elixir_lang/psi/stub/call/Stubbic.kt",
    "src/org/elixir_lang/psi/stub/call/Writer.java",
    "src/org/elixir_lang/psi/stub/impl",
    "src/org/elixir_lang/psi/stub/impl/ElixirFileStubImpl.java",
    "src/org/elixir_lang/psi/stub/index",
    "src/org/elixir_lang/psi/stub/index/AllName.java",
    "src/org/elixir_lang/psi/stub/index/ModularName.kt",
    "src/org/elixir_lang/psi/stub/type",
    "src/org/elixir_lang/psi/stub/type/Element.java",
    "src/org/elixir_lang/psi/stub/type/File.java",
    "src/org/elixir_lang/psi/stub/type/MatchedAtUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedDotCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedQualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedQualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedQualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedUnqualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/MatchedUnqualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/Named.kt",
    "src/org/elixir_lang/psi/stub/type/UnmatchedAtUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedDotCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedQualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedQualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedQualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedUnqualifiedNoArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedUnqualifiedNoParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/UnmatchedUnqualifiedParenthesesCall.java",
    "src/org/elixir_lang/psi/stub/type/UnqualifiedNoParenthesesManyArgumentsCall.java",
    "src/org/elixir_lang/psi/stub/type/call",
    "src/org/elixir_lang/psi/stub/type/call/Stub.java",
    "src/org/elixir_lang/rebar3",
    "src/org/elixir_lang/rebar3/DepGatherer.kt",
    "src/org/elixir_lang/rebar3/PackageManager.kt",
    "src/org/elixir_lang/refactoring",
    "src/org/elixir_lang/refactoring/module_attribute",
    "src/org/elixir_lang/refactoring/module_attribute/rename",
    "src/org/elixir_lang/refactoring/module_attribute/rename/Handler.kt",
    "src/org/elixir_lang/refactoring/module_attribute/rename/Inplace.kt",
    "src/org/elixir_lang/refactoring/module_attribute/rename/InputValidator.kt",
    "src/org/elixir_lang/refactoring/module_attribute/rename/Processor.kt",
    "src/org/elixir_lang/refactoring/variable",
    "src/org/elixir_lang/refactoring/variable/rename",
    "src/org/elixir_lang/refactoring/variable/rename/Handler.kt",
    "src/org/elixir_lang/refactoring/variable/rename/Inplace.java",
    "src/org/elixir_lang/refactoring/variable/rename/InputValidator.kt",
    "src/org/elixir_lang/refactoring/variable/rename/Processor.kt",
    "src/org/elixir_lang/reference",
    "src/org/elixir_lang/reference/Atom.java",
    "src/org/elixir_lang/reference/CallDefinitionClause.java",
    "src/org/elixir_lang/reference/Callable.kt",
    "src/org/elixir_lang/reference/CaptureNameArity.kt",
    "src/org/elixir_lang/reference/Identifier.kt",
    "src/org/elixir_lang/reference/Module.kt",
    "src/org/elixir_lang/reference/ModuleAttribute.kt",
    "src/org/elixir_lang/reference/module",
    "src/org/elixir_lang/reference/module/ResolvableName.java",
    "src/org/elixir_lang/reference/module/UnaliasedName.kt",
    "src/org/elixir_lang/reference/resolver",
    "src/org/elixir_lang/reference/resolver/Atom.java",
    "src/org/elixir_lang/reference/resolver/CallDefinitionClause.kt",
    "src/org/elixir_lang/reference/resolver/Callable.kt",
    "src/org/elixir_lang/reference/resolver/CaptureNameArity.kt",
    "src/org/elixir_lang/reference/resolver/Identifier.kt",
    "src/org/elixir_lang/reference/resolver/Module.kt",
    "src/org/elixir_lang/reference/resolver/ModuleAttribute.kt",
    "src/org/elixir_lang/reference/resolver/atom",
    "src/org/elixir_lang/reference/resolver/atom/Resolvable.java",
    "src/org/elixir_lang/reference/resolver/atom/resolvable",
    "src/org/elixir_lang/reference/resolver/atom/resolvable/Exact.java",
    "src/org/elixir_lang/reference/resolver/atom/resolvable/Pattern.java",
    "src/org/elixir_lang/run.kt",
    "src/org/elixir_lang/run",
    "src/org/elixir_lang/run/Configuration.kt",
    "src/org/elixir_lang/run/configuration",
    "src/org/elixir_lang/run/configuration/Module.kt",
    "src/org/elixir_lang/scope_processor",
    "src/org/elixir_lang/scope_processor/Module.java",
    "src/org/elixir_lang/sdk",
    "src/org/elixir_lang/sdk/ProcessOutput.java",
    "src/org/elixir_lang/sdk/Type.java",
    "src/org/elixir_lang/sdk/elixir",
    "src/org/elixir_lang/sdk/elixir/ForSmallIdes.kt",
    "src/org/elixir_lang/sdk/elixir/Release.java",
    "src/org/elixir_lang/sdk/elixir/Type.java",
    "src/org/elixir_lang/sdk/erlang",
    "src/org/elixir_lang/sdk/erlang/Release.java",
    "src/org/elixir_lang/sdk/erlang/Type.java",
    "src/org/elixir_lang/sdk/erlang_dependent",
    "src/org/elixir_lang/sdk/erlang_dependent/AdditionalDataConfigurable.java",
    "src/org/elixir_lang/sdk/erlang_dependent/MissingErlangSdk.kt",
    "src/org/elixir_lang/sdk/erlang_dependent/SdkAdditionalData.java",
    "src/org/elixir_lang/sdk/erlang_dependent/SdkModificatorRootTypeConsumer.java",
    "src/org/elixir_lang/sdk/erlang_dependent/Type.java",
    "src/org/elixir_lang/spell_checking",
    "src/org/elixir_lang/spell_checking/BundledDictionaryProvider.kt",
    "src/org/elixir_lang/spell_checking/Splitter.kt",
    "src/org/elixir_lang/spell_checking/Strategy.kt",
    "src/org/elixir_lang/spell_checking/Tokenizer.kt",
    "src/org/elixir_lang/spell_checking/alias",
    "src/org/elixir_lang/spell_checking/alias/Splitter.kt",
    "src/org/elixir_lang/spell_checking/identifier",
    "src/org/elixir_lang/spell_checking/identifier/Splitter.kt",
    "src/org/elixir_lang/spell_checking/literal",
    "src/org/elixir_lang/spell_checking/literal/Splitter.kt",
    "src/org/elixir_lang/structure_view",
    "src/org/elixir_lang/structure_view/Factory.java",
    "src/org/elixir_lang/structure_view/Model.java",
    "src/org/elixir_lang/structure_view/element",
    "src/org/elixir_lang/structure_view/element/CallDefinition.kt",
    "src/org/elixir_lang/structure_view/element/CallDefinitionClause.kt",
    "src/org/elixir_lang/structure_view/element/CallDefinitionHead.kt",
    "src/org/elixir_lang/structure_view/element/CallDefinitionSpecification.kt",
    "src/org/elixir_lang/structure_view/element/CallReference.java",
    "src/org/elixir_lang/structure_view/element/Callback.kt",
    "src/org/elixir_lang/structure_view/element/Delegation.java",
    "src/org/elixir_lang/structure_view/element/Element.java",
    "src/org/elixir_lang/structure_view/element/Exception.java",
    "src/org/elixir_lang/structure_view/element/File.java",
    "src/org/elixir_lang/structure_view/element/Inserter.java",
    "src/org/elixir_lang/structure_view/element/Overridable.java",
    "src/org/elixir_lang/structure_view/element/Presentable.java",
    "src/org/elixir_lang/structure_view/element/Quote.java",
    "src/org/elixir_lang/structure_view/element/Timed.java",
    "src/org/elixir_lang/structure_view/element/Type.java",
    "src/org/elixir_lang/structure_view/element/Use.java",
    "src/org/elixir_lang/structure_view/element/Visible.java",
    "src/org/elixir_lang/structure_view/element/call_definition_by_name_arity",
    "src/org/elixir_lang/structure_view/element/call_definition_by_name_arity/CallDefinitionByNameArity.kt",
    "src/org/elixir_lang/structure_view/element/call_definition_by_name_arity/FunctionByNameArity.kt",
    "src/org/elixir_lang/structure_view/element/call_definition_by_name_arity/MacroByNameArity.java",
    "src/org/elixir_lang/structure_view/element/call_definition_by_name_arity/TreeElementList.kt",
    "src/org/elixir_lang/structure_view/element/modular",
    "src/org/elixir_lang/structure_view/element/modular/Implementation.java",
    "src/org/elixir_lang/structure_view/element/modular/Modular.java",
    "src/org/elixir_lang/structure_view/element/modular/Module.kt",
    "src/org/elixir_lang/structure_view/element/modular/Protocol.java",
    "src/org/elixir_lang/structure_view/element/modular/Quote.java",
    "src/org/elixir_lang/structure_view/element/modular/Unknown.java",
    "src/org/elixir_lang/structure_view/element/modular/Use.java",
    "src/org/elixir_lang/structure_view/element/structure",
    "src/org/elixir_lang/structure_view/element/structure/Field.java",
    "src/org/elixir_lang/structure_view/element/structure/FieldWithDefaultValue.java",
    "src/org/elixir_lang/structure_view/element/structure/Structure.java",
    "src/org/elixir_lang/structure_view/node_provider",
    "src/org/elixir_lang/structure_view/node_provider/Used.kt",
    "src/org/elixir_lang/structure_view/sorter",
    "src/org/elixir_lang/structure_view/sorter/Time.java",
    "src/org/elixir_lang/structure_view/sorter/Visibility.java",
    "src/org/elixir_lang/templates",
    "src/org/elixir_lang/templates/ElixirContextType.java",
    "src/org/elixir_lang/templates/ElixirLiveTemplateProvider.java",
    "src/org/elixir_lang/utils",
    "src/org/elixir_lang/utils/AncestorAdapter.java",
    "src/org/elixir_lang/utils/ElixirModulesUtil.kt",
    "src/org/elixir_lang/utils/ExtProcessUtil.java",
    "src/org/elixir_lang/utils/SetupElixirSDKNotificationListener.kt",
    "testData",
    "testData/org",
    "testData/org/elixir_lang",
    "testData/org/elixir_lang/action",
    "testData/org/elixir_lang/action/create_elixir_module_action_test",
    "testData/org/elixir_lang/action/create_elixir_module_action_test/camel_case_one",
    "testData/org/elixir_lang/action/create_elixir_module_action_test/camel_case_one/camel_case_two.ex",
    "testData/org/elixir_lang/action/create_elixir_module_action_test/foo",
    "testData/org/elixir_lang/action/create_elixir_module_action_test/foo/bar.ex",
    "testData/org/elixir_lang/action/create_elixir_module_action_test/foo_bar.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test",
    "testData/org/elixir_lang/action/goto_declaration_action_test/GoToDeepQualifiedSibilingDefmodule.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/GoToQualifiedSibilingDefmodule.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/GoToUnqualifiedAncestorDefmodule.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/GoToUnqualifiedSiblingDefmodule.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_qualified_defmodule_in_another_file",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_qualified_defmodule_in_another_file/qualifier",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_qualified_defmodule_in_another_file/qualifier/target.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_qualified_defmodule_in_another_file/reference.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_unqualified_defmodule_in_another_file",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_unqualified_defmodule_in_another_file/reference.ex",
    "testData/org/elixir_lang/action/goto_declaration_action_test/go_to_unqualified_defmodule_in_another_file/target.ex",
    "testData/org/elixir_lang/annotator",
    "testData/org/elixir_lang/annotator/module_attribute",
    "testData/org/elixir_lang/annotator/module_attribute/issue_469.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_471.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_525.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_557.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_559.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_605.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_632.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_694.ex",
    "testData/org/elixir_lang/annotator/module_attribute/issue_699.ex",
    "testData/org/elixir_lang/annotator/module_attribute/match.ex",
    "testData/org/elixir_lang/annotator/module_attribute/missing_type_operator.ex",
    "testData/org/elixir_lang/annotator/module_attribute/module_attributes.ex",
    "testData/org/elixir_lang/annotator/module_attribute/typespec_test.exs",
    "testData/org/elixir_lang/beam",
    "testData/org/elixir_lang/beam/decompiler",
    "testData/org/elixir_lang/beam/decompiler/Elixir.LDAPEx.ELDAPv3.beam",
    "testData/org/elixir_lang/beam/decompiler/Elixir.LDAPEx.ELDAPv3.ex",
    "testData/org/elixir_lang/beam/decompiler/OTP-PUB-KEY.beam",
    "testData/org/elixir_lang/beam/decompiler/OTP-PUB-KEY.ex",
    "testData/org/elixir_lang/beam/decompiler/OTP20",
    "testData/org/elixir_lang/beam/decompiler/OTP20/Elixir.AtU8Test.beam",
    "testData/org/elixir_lang/beam/decompiler/OTP20/Elixir.AtU8Test.ex",
    "testData/org/elixir_lang/beam/decompiler/OTP20/Elixir.Kernel.beam",
    "testData/org/elixir_lang/beam/decompiler/OTP20/Elixir.Kernel.ex",
    "testData/org/elixir_lang/beam/decompiler/certifi_cacerts.beam",
    "testData/org/elixir_lang/beam/decompiler/certifi_cacerts.ex",
    "testData/org/elixir_lang/beam/decompiler/docgen_xmerl_xml_cb.beam",
    "testData/org/elixir_lang/beam/decompiler/docgen_xmerl_xml_cb.ex",
    "testData/org/elixir_lang/beam/decompiler/erl_syntax.beam",
    "testData/org/elixir_lang/beam/decompiler/erl_syntax.ex",
    "testData/org/elixir_lang/beam/decompiler/fprof.beam",
    "testData/org/elixir_lang/beam/decompiler/fprof.ex",
    "testData/org/elixir_lang/beam/decompiler/gl.beam",
    "testData/org/elixir_lang/beam/decompiler/gl.ex",
    "testData/org/elixir_lang/beam/decompiler/orber_ifr.beam",
    "testData/org/elixir_lang/beam/decompiler/orber_ifr.ex",
    "testData/org/elixir_lang/beam/decompiler/rebar3_hex_config.beam",
    "testData/org/elixir_lang/beam/decompiler/rebar3_hex_config.ex",
    "testData/org/elixir_lang/code_insight",
    "testData/org/elixir_lang/code_insight/completion",
    "testData/org/elixir_lang/code_insight/completion/contributor",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/mixed_declaration.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/mixed_usage.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/private_function_declaration.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/private_function_usage.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/private_macro_declaration.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/private_macro_usage.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/public_function_declaration.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/public_function_usage.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/public_macro_declaration.ex",
    "testData/org/elixir_lang/code_insight/completion/contributor/call_definition_clause/public_macro_usage.ex",
    "testData/org/elixir_lang/code_insight/highlighting",
    "testData/org/elixir_lang/code_insight/highlighting/brace_matcher",
    "testData/org/elixir_lang/code_insight/highlighting/brace_matcher/issue_443",
    "testData/org/elixir_lang/code_insight/highlighting/brace_matcher/issue_443/do_block.ex",
    "testData/org/elixir_lang/code_insight/highlighting/brace_matcher/issue_443/do_keyword.ex",
    "testData/org/elixir_lang/code_insight/highlighting/brace_matcher/issue_443/fn_keyword.ex",
    "testData/org/elixir_lang/code_insight/lookup",
    "testData/org/elixir_lang/code_insight/lookup/element_renderer",
    "testData/org/elixir_lang/code_insight/lookup/element_renderer/call_definition_clause",
    "testData/org/elixir_lang/code_insight/lookup/element_renderer/call_definition_clause/issue_457.ex",
    "testData/org/elixir_lang/eex",
    "testData/org/elixir_lang/eex/psi",
    "testData/org/elixir_lang/eex/psi/parser",
    "testData/org/elixir_lang/eex/psi/parser/test",
    "testData/org/elixir_lang/eex/psi/parser/test/DoEExClosingWhiteSpaceEExOpening.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/DoEExClosingWhiteSpaceEExOpening.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/DoEExClosingWhiteSpaceEExOpening.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/DoEExClosingWhiteSpaceEExOpening.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplate.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplate.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplate.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplate.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplateWithBindings.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplateWithBindings.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplateWithBindings.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTemplateWithBindings.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestComments.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestComments.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestComments.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestComments.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestCommentsWithDoEnd.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestCommentsWithDoEnd.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestCommentsWithDoEnd.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestCommentsWithDoEnd.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotation.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotation.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotation.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotation.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithDoEnd.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithDoEnd.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithDoEnd.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithDoEnd.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation1.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation1.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation1.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation1.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation2.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation2.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation2.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestQuotationWithInterpolation2.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringWithEmbeddedCode.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringWithEmbeddedCode.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringWithEmbeddedCode.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringWithEmbeddedCode.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedDoEnd.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedDoEnd.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedDoEnd.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedDoEnd.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedKeywordsBlocks.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedKeywordsBlocks.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedKeywordsBlocks.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedKeywordsBlocks.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedStabOperatorEnd.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedStabOperatorEnd.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedStabOperatorEnd.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithEmbeddedStabOperatorEnd.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLine.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLine.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLine.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLine.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLineAndExpressionWithMoreThanOneLine.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLineAndExpressionWithMoreThanOneLine.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLineAndExpressionWithMoreThanOneLine.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestStringsWithMoreThanOneLineAndExpressionWithMoreThanOneLine.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimMode.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimMode.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimMode.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimMode.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeSetToFalse.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeSetToFalse.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeSetToFalse.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeSetToFalse.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithCRLF.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithCRLF.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithCRLF.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithCRLF.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithComment.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithComment.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithComment.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/EExTokenizerTestTrimModeWithComment.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1Clause.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1Clause.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1Clause.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1Clause.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1ClauseCall.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1ClauseCall.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1ClauseCall.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn1ClauseCall.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn2ClauseCall.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn2ClauseCall.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn2ClauseCall.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/Fn2ClauseCall.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExClosing.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExClosing.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExClosing.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExClosing.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirEExStabBody.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirEExStabBody.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirEExStabBody.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirEExStabBody.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirStabBody.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirStabBody.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirStabBody.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnEExElixirStabBody.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExElixirStabBody.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExElixirStabBody.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExElixirStabBody.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExElixirStabBody.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExStabBody.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExStabBody.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExStabBody.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnElixirEExStabBody.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/FnUnexpectedEnd.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnUnexpectedEnd.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnUnexpectedEnd.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/FnUnexpectedEnd.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesLayoutApp.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesLayoutApp.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesLayoutApp.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesLayoutApp.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesPageIndex.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesPageIndex.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesPageIndex.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesPageIndex.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserEdit.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserEdit.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserEdit.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserEdit.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserForm.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserForm.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserForm.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserForm.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserIndex.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserIndex.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserIndex.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserIndex.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserNew.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserNew.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserNew.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserNew.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserShow.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserShow.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserShow.HTML.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/PhoenixTemplatesUserShow.html.eex",
    "testData/org/elixir_lang/eex/psi/parser/test/StringSample.EEx.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/StringSample.Elixir.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/StringSample.TEXT.txt",
    "testData/org/elixir_lang/eex/psi/parser/test/StringSample.eex",
    "testData/org/elixir_lang/find_usages",
    "testData/org/elixir_lang/find_usages/function_import_declaration_target.ex",
    "testData/org/elixir_lang/find_usages/function_import_declaration_usage.ex",
    "testData/org/elixir_lang/find_usages/function_import_usage_declaration.ex",
    "testData/org/elixir_lang/find_usages/function_import_usage_target.ex",
    "testData/org/elixir_lang/find_usages/function_multiple_clauses_unused.ex",
    "testData/org/elixir_lang/find_usages/function_multiple_modules_declaration_target.ex",
    "testData/org/elixir_lang/find_usages/function_multiple_modules_declaration_usage.ex",
    "testData/org/elixir_lang/find_usages/function_multiple_modules_usage_declaration.ex",
    "testData/org/elixir_lang/find_usages/function_multiple_modules_usage_target.ex",
    "testData/org/elixir_lang/find_usages/function_recursive_declaration.ex",
    "testData/org/elixir_lang/find_usages/function_recursive_usage.ex",
    "testData/org/elixir_lang/find_usages/function_single_clause_unused.ex",
    "testData/org/elixir_lang/find_usages/module_attribute_declaration.ex",
    "testData/org/elixir_lang/find_usages/module_attribute_usage.ex",
    "testData/org/elixir_lang/find_usages/module_multiple_modules_declaration_target.ex",
    "testData/org/elixir_lang/find_usages/module_multiple_modules_declaration_usage.ex",
    "testData/org/elixir_lang/find_usages/module_multiple_modules_usage_declaration.ex",
    "testData/org/elixir_lang/find_usages/module_multiple_modules_usage_target.ex",
    "testData/org/elixir_lang/find_usages/module_nested_recursive_declaration.ex",
    "testData/org/elixir_lang/find_usages/module_recursive_declaration.ex",
    "testData/org/elixir_lang/find_usages/module_recursive_usage.ex",
    "testData/org/elixir_lang/find_usages/parameter_declaration.ex",
    "testData/org/elixir_lang/find_usages/parameter_unused.ex",
    "testData/org/elixir_lang/find_usages/parameter_usage.ex",
    "testData/org/elixir_lang/find_usages/variable_declaration.ex",
    "testData/org/elixir_lang/find_usages/variable_unused.ex",
    "testData/org/elixir_lang/find_usages/variable_usage.ex",
    "testData/org/elixir_lang/formatting",
    "testData/org/elixir_lang/formatting/align_boolean_operands_false.ex",
    "testData/org/elixir_lang/formatting/align_boolean_operands_true.ex",
    "testData/org/elixir_lang/formatting/align_guards_to_right_of_when_false.ex",
    "testData/org/elixir_lang/formatting/align_guards_to_right_of_when_true.ex",
    "testData/org/elixir_lang/formatting/align_pipe_operands_false.ex",
    "testData/org/elixir_lang/formatting/align_pipe_operands_true.ex",
    "testData/org/elixir_lang/formatting/align_two_operands_false.ex",
    "testData/org/elixir_lang/formatting/align_two_operands_true.ex",
    "testData/org/elixir_lang/formatting/align_type_definition_to_right_of_operator_false.ex",
    "testData/org/elixir_lang/formatting/align_type_definition_to_right_of_operator_true.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_as_last_argument.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_as_only_argument.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_multiple_clauses.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_multiple_clauses_chop_after.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_multiple_clauses_chop_before.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_single_clause.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_single_clause_chop_body_after.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_single_clause_chop_body_before.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_single_clause_chop_end_after.ex",
    "testData/org/elixir_lang/formatting/anonymous_function_with_single_clause_chop_end_before.ex",
    "testData/org/elixir_lang/formatting/bit_string_indent.ex",
    "testData/org/elixir_lang/formatting/bit_string_only_indent_nested_keywords.ex",
    "testData/org/elixir_lang/formatting/capture_and_symbol_operators_without_space_after_capture.ex",
    "testData/org/elixir_lang/formatting/capture_name_arity_with_space_around_multiplication.ex",
    "testData/org/elixir_lang/formatting/capture_qualifier_dot_name_arity_with_space_around_multiplication.ex",
    "testData/org/elixir_lang/formatting/capture_right_operand_without_space_around_and_operators_after.ex",
    "testData/org/elixir_lang/formatting/capture_right_operand_without_space_around_and_operators_before.ex",
    "testData/org/elixir_lang/formatting/case_at_end_of_pipeline.ex",
    "testData/org/elixir_lang/formatting/comment_at_end_of_line.ex",
    "testData/org/elixir_lang/formatting/comment_in_pipeline.ex",
    "testData/org/elixir_lang/formatting/comment_in_spec.ex",
    "testData/org/elixir_lang/formatting/comment_indent_after_do_in_do_block.ex",
    "testData/org/elixir_lang/formatting/comment_indent_after_fn.ex",
    "testData/org/elixir_lang/formatting/comment_indent_after_stab.ex",
    "testData/org/elixir_lang/formatting/comparison_operation_enforce_indent_to_children.ex",
    "testData/org/elixir_lang/formatting/for_one_liner.ex",
    "testData/org/elixir_lang/formatting/function_reference_as_argument_to_call.ex",
    "testData/org/elixir_lang/formatting/heredoc_alignment_after.ex",
    "testData/org/elixir_lang/formatting/heredoc_alignment_before.ex",
    "testData/org/elixir_lang/formatting/heredoc_as_last_argument.ex",
    "testData/org/elixir_lang/formatting/heredoc_as_only_argument.ex",
    "testData/org/elixir_lang/formatting/heredoc_blank_lines.ex",
    "testData/org/elixir_lang/formatting/incorrect_indent_after_else_keyword.ex",
    "testData/org/elixir_lang/formatting/incorrect_indent_before_else_keyword.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_after_after_keyword.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_after_catch_keyword.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_after_keyword_pair_colon.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_after_rescue_keyword.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_around_dot_operator.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_around_in_operator.ex",
    "testData/org/elixir_lang/formatting/incorrect_spaces_around_when_operator.ex",
    "testData/org/elixir_lang/formatting/indent_after_else_keyword.ex",
    "testData/org/elixir_lang/formatting/indent_before_else_keyword.ex",
    "testData/org/elixir_lang/formatting/indent_without_override_after.ex",
    "testData/org/elixir_lang/formatting/indent_without_override_before.ex",
    "testData/org/elixir_lang/formatting/interpolation_compact_after.ex",
    "testData/org/elixir_lang/formatting/interpolation_compact_before.ex",
    "testData/org/elixir_lang/formatting/list_do_not_indent_import_keywords.ex",
    "testData/org/elixir_lang/formatting/list_indent.ex",
    "testData/org/elixir_lang/formatting/list_only_indent_nested_keywords.ex",
    "testData/org/elixir_lang/formatting/map_and_struct_compact_empty.ex",
    "testData/org/elixir_lang/formatting/map_and_struct_construction_one_key_per_line_after.ex",
    "testData/org/elixir_lang/formatting/map_and_struct_construction_one_key_per_line_before.ex",
    "testData/org/elixir_lang/formatting/map_and_struct_update_one_key_per_line_after.ex",
    "testData/org/elixir_lang/formatting/map_and_struct_update_one_key_per_line_before.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_associations_all_wrap_if_any_wraps_after.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_associations_all_wrap_if_any_wraps_before.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_associations_base_and_keywords_all_wrap_if_any_wraps_after.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_associations_base_and_keywords_all_wrap_if_any_wraps_before.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_keywords_all_wrap_if_any_wraps_after.ex",
    "testData/org/elixir_lang/formatting/map_construction_arguments_keywords_all_wrap_if_any_wraps_before.ex",
    "testData/org/elixir_lang/formatting/map_indent.ex",
    "testData/org/elixir_lang/formatting/map_update_arguments_align_keywords.ex",
    "testData/org/elixir_lang/formatting/match_if_else.ex",
    "testData/org/elixir_lang/formatting/match_operation_enforce_indent_to_children.ex",
    "testData/org/elixir_lang/formatting/multiple_aliases_align_container_arguments.ex",
    "testData/org/elixir_lang/formatting/multispace_not_operator.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_anonymous_function_call_alignment.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_do_not_wrap_unless_keywords_multiline_after.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_do_not_wrap_unless_keywords_multiline_before.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_multiple_anonymous_function_stab_body_alignment.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_multiple_arguments_with_wrapped_map_after.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_multiple_arguments_with_wrapped_map_before.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_positional_and_keyword_wrap_after.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_call_positional_and_keyword_wrap_before.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_keywords_keyword_value_container_closing_alignment.ex",
    "testData/org/elixir_lang/formatting/no_parentheses_keywords_keyword_value_container_element_alignment.ex",
    "testData/org/elixir_lang/formatting/no_space_after_at_operator.ex",
    "testData/org/elixir_lang/formatting/no_spaces_around_dot_operator.ex",
    "testData/org/elixir_lang/formatting/parentheses_wrapping.ex",
    "testData/org/elixir_lang/formatting/pipeline_match_alignment.ex",
    "testData/org/elixir_lang/formatting/pipeline_mixed_position_after.ex",
    "testData/org/elixir_lang/formatting/pipeline_mixed_position_before.ex",
    "testData/org/elixir_lang/formatting/quote_keywords_after.ex",
    "testData/org/elixir_lang/formatting/quote_keywords_before.ex",
    "testData/org/elixir_lang/formatting/sigil_concatenation.ex",
    "testData/org/elixir_lang/formatting/single_space_not_operator.ex",
    "testData/org/elixir_lang/formatting/space_after_after_keyword.ex",
    "testData/org/elixir_lang/formatting/space_after_at_operator.ex",
    "testData/org/elixir_lang/formatting/space_after_catch_keyword.ex",
    "testData/org/elixir_lang/formatting/space_after_keyword_pair_colon.ex",
    "testData/org/elixir_lang/formatting/space_after_rescue_keyword.ex",
    "testData/org/elixir_lang/formatting/space_around_in_operator.ex",
    "testData/org/elixir_lang/formatting/space_around_when_operator.ex",
    "testData/org/elixir_lang/formatting/spec.ex",
    "testData/org/elixir_lang/formatting/struct_all_keys_wrap.ex",
    "testData/org/elixir_lang/formatting/struct_keys_aligned.ex",
    "testData/org/elixir_lang/formatting/struct_keys_are_normal_indented.ex",
    "testData/org/elixir_lang/formatting/struct_keys_unaligned.ex",
    "testData/org/elixir_lang/formatting/struct_some_keys_wrap.ex",
    "testData/org/elixir_lang/formatting/tuple_indent.ex",
    "testData/org/elixir_lang/formatting/tuple_only_indent_nested_keywords.ex",
    "testData/org/elixir_lang/formatting/unmatched_call_align_do_block_to_call.ex",
    "testData/org/elixir_lang/formatting/unmatched_call_align_do_block_to_line.ex",
    "testData/org/elixir_lang/formatting/unmatched_call_do_value_do_not_indent.ex",
    "testData/org/elixir_lang/formatting/unmatched_qualifed_parentheses_call_argument_indent.ex",
    "testData/org/elixir_lang/formatting/when_wraps_with_right_operand_after.ex",
    "testData/org/elixir_lang/formatting/when_wraps_with_right_operand_before.ex",
    "testData/org/elixir_lang/formatting/with_space_after_capture_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_after_comma.ex",
    "testData/org/elixir_lang/formatting/with_space_around_addition_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_and_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_arrow_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_association_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_comparison_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_in_match_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_match_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_multiplication_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_or_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_pipe_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_range_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_relational_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_stab_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_three_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_two_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_around_type_operator.ex",
    "testData/org/elixir_lang/formatting/with_space_around_unary_operators.ex",
    "testData/org/elixir_lang/formatting/with_space_before_comma.ex",
    "testData/org/elixir_lang/formatting/with_space_within_bits.ex",
    "testData/org/elixir_lang/formatting/with_space_within_brackets.ex",
    "testData/org/elixir_lang/formatting/with_space_within_curly_braces.ex",
    "testData/org/elixir_lang/formatting/with_space_within_parentheses.ex",
    "testData/org/elixir_lang/formatting/without_space_after_capture_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_after_comma.ex",
    "testData/org/elixir_lang/formatting/without_space_around_addition_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_and_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_arrow_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_association_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_comparison_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_in_match_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_match_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_multiplication_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_or_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_pipe_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_range_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_relational_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_stab_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_three_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_two_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_around_type_operator.ex",
    "testData/org/elixir_lang/formatting/without_space_around_unary_operators.ex",
    "testData/org/elixir_lang/formatting/without_space_before_comma.ex",
    "testData/org/elixir_lang/formatting/without_space_within_bits.ex",
    "testData/org/elixir_lang/formatting/without_space_within_brackets.ex",
    "testData/org/elixir_lang/formatting/without_space_within_curly_braces.ex",
    "testData/org/elixir_lang/formatting/without_space_within_parentheses.ex",
    "testData/org/elixir_lang/inspection",
    "testData/org/elixir_lang/inspection/keyword_pair_colon_instead_of_type_operator_test_case",
    "testData/org/elixir_lang/inspection/keyword_pair_colon_instead_of_type_operator_test_case/issue_525.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/Bug195.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/NoParenthesesWithMatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/NoParenthesesWithMatchedDotMatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/NoParenthesesWithMatchedWhenNoParenthesesKeywordsOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/ParenthesesWithMatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/ParenthesesWithMatchedDotMatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/keywords_not_at_end_test_case/ParenthesesWithMatchedWhenNoParenthesesKeywordsOperationInMiddle.ex",
    "testData/org/elixir_lang/inspection/match_operator_instead_of_type_operator_test_case",
    "testData/org/elixir_lang/inspection/match_operator_instead_of_type_operator_test_case/match_operator.ex",
    "testData/org/elixir_lang/inspection/missing_end_of_expression_test_case",
    "testData/org/elixir_lang/inspection/missing_end_of_expression_test_case/CharTokenNumber.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/MatchedCallOperationAtEnd.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/MatchedCallOperationKeywordValue.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/MatchedDotMatchedCallOperationAtEnd.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/MatchedDotMatchedCallOperationKeywordValue.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/SingleNestedKeywordValue.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_many_strict_test_case/SingleNestedPositional.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case/FunctionSpaceEmptyParentheses.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case/FunctionSpaceKeywordsInParentheses.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case/FunctionSpacePositionalsAndKeywordsInParentheses.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case/FunctionSpacePositionalsInParentheses.ex",
    "testData/org/elixir_lang/inspection/no_parentheses_strict_test_case/QualifierDotQuoteParentheses.ex",
    "testData/org/elixir_lang/issue_470",
    "testData/org/elixir_lang/issue_470/in_match_in_match.ex",
    "testData/org/elixir_lang/issue_470/in_match_match.ex",
    "testData/org/elixir_lang/issue_470/in_match_match_match.ex",
    "testData/org/elixir_lang/issue_470/match_in_match.ex",
    "testData/org/elixir_lang/issue_470/match_in_match_match.ex",
    "testData/org/elixir_lang/issue_470/match_match.ex",
    "testData/org/elixir_lang/mix",
    "testData/org/elixir_lang/mix/import",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/expected",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/expected/14",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/expected/14/kv.iml",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/expected/2017.1",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/expected/2017.1/kv.iml",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/test",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/test/lib",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/test/lib/kv.ex",
    "testData/org/elixir_lang/mix/import/fromRootMixExsFile/test/mix.exs",
    "testData/org/elixir_lang/mockSdk-1.0.4",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/eex",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/eex/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/eex/ebin/Elixir.EEx.beam",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/elixir",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/elixir/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/elixir/ebin/Elixir.Kernel.beam",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/ex_uint",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/ex_uint/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/ex_uint/ebin/Elixir.ExUnit.beam",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/iex",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/iex/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/iex/ebin/Elixir.IEx.beam",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/logger",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/logger/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/logger/ebin/Elixir.Logger.beam",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/mix",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/mix/ebin",
    "testData/org/elixir_lang/mockSdk-1.0.4/lib/mix/ebin/Elixir.Mix.beam",
    "testData/org/elixir_lang/navigation",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor/issue_1141.ex",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor/issue_1228.ex",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor/issue_472.ex",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor/issue_705__before_compile__.ex",
    "testData/org/elixir_lang/navigation/goto_symbol_contributor/issue_705_type_functions.ex",
    "testData/org/elixir_lang/parser_definition",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/Block.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/Block.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnEmptyParenthesesStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnEmptyParenthesesStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnEndOfExpressionStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnEndOfExpressionStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnKeywordsInParenthesesStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnKeywordsInParenthesesStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnKeywordsInParenthesesWhenExpressionStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnKeywordsInParenthesesWhenExpressionStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMatchedExpressionStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMatchedExpressionStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMultiNewlineStab.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMultiNewlineStab.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMultiStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnMultiStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesKeywordsStabExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesKeywordsStabExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesManyArgumentsStabExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesManyArgumentsStabExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesWhenStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnNoParenthesesWhenStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnPositionalsAndKeywordsInParenthesesStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnPositionalsAndKeywordsInParenthesesStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnPositionalsAndKeywordsInParenthesesWhenExpressionStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnPositionalsAndKeywordsInParenthesesWhenExpressionStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabEndOfExpressionExpressionListEndOfExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabEndOfExpressionExpressionListEndOfExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabExpressionListEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabExpressionListEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabMultiNewlineStab.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnStabMultiNewlineStab.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnUnqualifiedNoParenthesesManyArgumentsCallStabExpressionEnd.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/FnUnqualifiedNoParenthesesManyArgumentsCallStabExpressionEnd.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/KernelTypespecRegression.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/KernelTypespecRegression.txt",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/SpliceOnStab.ex",
    "testData/org/elixir_lang/parser_definition/anonymous_function_parsing_test_case/SpliceOnStab.txt",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/After.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/AndOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/ArrowOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/AtOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/CaptureOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/ComparisonOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/Do.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/DualOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/InMatchOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/InOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedDotCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedQualifiedAliasOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedQualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedQualifiedIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedUnqualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedUnqualifiedIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MatchedUnqualifiedIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/MultiplicationOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/OrOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/PipeOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/RelationalOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/StabOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/ThreeOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/TwoOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/UnaryOperator.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/at_bracket_operation_parsing_test_case/WhenOperator.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/atom_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/False.ex",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/False.txt",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/Nil.ex",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/Nil.txt",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/True.ex",
    "testData/org/elixir_lang/parser_definition/atom_keyword_parsing_test_case/True.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/DoubleQuotedInterpolation.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/DoubleQuotedInterpolation.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/DoubleQuotedLiteral.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/DoubleQuotedLiteral.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/Literal.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/Literal.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/Operator.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/Operator.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/SingleQuotedInterpolation.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/SingleQuotedInterpolation.txt",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/SingleQuotedLiteral.ex",
    "testData/org/elixir_lang/parser_definition/atom_parsing_test_case/SingleQuotedLiteral.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/InvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/InvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/InvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/InvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/NoDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/NoDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteInvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteInvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteInvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteInvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteNoDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteNoDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ObsoleteValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/binary_whole_number_parsing_test_case/ValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/NoParenthesesPositionalKeywords.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/NoParenthesesPositionalKeywords.txt",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/One.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/OneWithTrailingComma.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/Three.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/Two.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/TwoWithKeywords.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/WhenKeyword.ex",
    "testData/org/elixir_lang/parser_definition/bit_string_parsing_test_case/WhenKeyword.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/After.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/After.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AndOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AndOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ArrowOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ArrowOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CaptureOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CaptureOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ComparisonOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ComparisonOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Do.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Do.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DualOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/DualOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/InMatchOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/InMatchOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/InOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/InOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedDotCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedDotCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedAliasOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedAliasOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedQualifiedIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedUnqualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedUnqualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedUnqualifiedIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MatchedUnqualifiedIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MultiplicationOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/MultiplicationOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/OrOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/OrOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/PipeOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/PipeOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/RelationalOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/RelationalOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StabOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/StructOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ThreeOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/ThreeOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/TwoOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/TwoOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/UnaryOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/UnaryOperator.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/WhenOperator.ex",
    "testData/org/elixir_lang/parser_definition/bracket_operation_parsing_test_case/WhenOperator.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/char_list_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Multiline.ex",
    "testData/org/elixir_lang/parser_definition/char_list_line_parsing_test_case/Multiline.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Character.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Character.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EnclosedHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EnclosedHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EscapedCharacter.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EscapedCharacter.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EscapedEOL.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/EscapedEOL.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/OpenHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/OpenHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Space.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Space.txt",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Tab.ex",
    "testData/org/elixir_lang/parser_definition/char_token_parsing_test_case/Tab.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractional.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractional.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalLowerCaseExponent.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalLowerCaseExponent.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalMinusExponent.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalMinusExponent.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalMinusInvalidExponent.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalMinusInvalidExponent.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalPlusExponent.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalPlusExponent.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalUpperCaseExponent.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkFractionalUpperCaseExponent.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkInvalidFractional.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/IntegralDecimalMarkInvalidFractional.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/InvalidIntegralDecimalMarkFractional.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/InvalidIntegralDecimalMarkFractional.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/LeadingDecimalMark.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/LeadingDecimalMark.txt",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/TrailingDecimalMark.ex",
    "testData/org/elixir_lang/parser_definition/decimal_float_parsing_test_case/TrailingDecimalMark.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/InvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/InvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/InvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/InvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/TrailingUnderscore.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/TrailingUnderscore.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/UnderscoreSeparated.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/UnderscoreSeparated.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/ValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/ValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/ZeroPrefix.ex",
    "testData/org/elixir_lang/parser_definition/decimal_whole_number_parsing_test_case/ZeroPrefix.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/Enum.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierCommaOperatorIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierCommaOperatorSpaceIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierCommaSpaceDualSpaceIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierCommaSpaceOperatorIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierEOLOperatorIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierEOLOperatorSpaceIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorEOLIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorEOLIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorIdentifierCommaIdentifierInContainer.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorIdentifierCommaIdentifierInContainer.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorSpaceIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierOperatorSpaceIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorContainer.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorContainer.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorEOLIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorEOLIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorOperatorOperand.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorSpaceCommentEOLIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorSpaceCommentEOLIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorSpaceIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/dual_operator_parsing_test_case/IdentifierSpaceOperatorSpaceIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/elixir_1_6_5_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/elixir_1_6_5_parsing_test_case/EmptyParentheses.ex",
    "testData/org/elixir_lang/parser_definition/elixir_1_6_5_parsing_test_case/EmptyParentheses.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/And.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/And.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Arrow.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Arrow.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Association.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Association.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/At.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Capture.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Capture.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingBit.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingBit.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingBracket.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingBracket.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingCurly.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingCurly.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingParentheses.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/ClosingParentheses.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Comparison.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Comparison.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Do.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Do.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/In.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/In.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/InMatch.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/InMatch.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/KeywordPairColon.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/KeywordPairColon.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Match.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Match.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Not.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningBit.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningBit.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningBracket.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningBracket.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningCurly.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningCurly.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningParentheses.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/OpeningParentheses.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Or.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Or.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Pipe.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Pipe.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Relational.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Relational.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Semicolon.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Semicolon.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Stab.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Stab.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Three.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Two.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Two.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Type.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/Type.txt",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/When.ex",
    "testData/org/elixir_lang/parser_definition/eol_to_whitespace/When.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AliasDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AliasDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AliasDotOperator.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AliasDotOperator.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AtomDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AtomDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AtomDotOperator.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/AtomDotOperator.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/Identifier.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/Identifier.txt",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/Operator.ex",
    "testData/org/elixir_lang/parser_definition/function_reference_parsing_test_case/Operator.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/BlankPrefix.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/BlankPrefix.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/CommentAfterNumber.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/CommentAfterNumber.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/CommentEOL.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/CommentEOL.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Comments.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Comments.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/EOLPosix.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/EOLPosix.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/EOLWindows.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/EOLWindows.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/MultipleNumbersOnLine.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/MultipleStringsOnLine.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/NoEOLAtEOF.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/NoEOLAtEOF.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Parentheses.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Parentheses.txt",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Pygment.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/PygmentWithoutErrors.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Realistic.ex",
    "testData/org/elixir_lang/parser_definition/general_parsing_test_case/Realistic.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/heredoc_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/InvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/InvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/InvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/InvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/NoDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/NoDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteInvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteInvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteInvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteInvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteNoDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteNoDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ObsoleteValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/hexadecimal_whole_number_parsing_test_case/ValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/infix_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/infix_parsing_test_case/Issue251.ex",
    "testData/org/elixir_lang/parser_definition/infix_parsing_test_case/Issue251WithNoLeftOperand.ex",
    "testData/org/elixir_lang/parser_definition/infix_parsing_test_case/WellFormed.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_char_list_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_regex_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_string_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/interpolated_words_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/issue_1091",
    "testData/org/elixir_lang/parser_definition/issue_1091/MapExpressionEOL.ex",
    "testData/org/elixir_lang/parser_definition/issue_1091/MapExpressionEOL.txt",
    "testData/org/elixir_lang/parser_definition/issue_1105",
    "testData/org/elixir_lang/parser_definition/issue_1105/AssociatedAtom.ex",
    "testData/org/elixir_lang/parser_definition/issue_1105/AssociatedAtom.txt",
    "testData/org/elixir_lang/parser_definition/issue_1105/AssociatedBoolean.ex",
    "testData/org/elixir_lang/parser_definition/issue_1105/AssociatedBoolean.txt",
    "testData/org/elixir_lang/parser_definition/issue_1105/KeywordBoolean.ex",
    "testData/org/elixir_lang/parser_definition/issue_1105/KeywordBoolean.txt",
    "testData/org/elixir_lang/parser_definition/issue_458",
    "testData/org/elixir_lang/parser_definition/issue_458/MultipleNewlines.ex",
    "testData/org/elixir_lang/parser_definition/issue_458/MultipleNewlines.txt",
    "testData/org/elixir_lang/parser_definition/issue_458/NoNewline.ex",
    "testData/org/elixir_lang/parser_definition/issue_458/NoNewline.txt",
    "testData/org/elixir_lang/parser_definition/issue_458/OneNewline.ex",
    "testData/org/elixir_lang/parser_definition/issue_458/OneNewline.txt",
    "testData/org/elixir_lang/parser_definition/issue_580",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn1.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn1.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn2.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn2.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn3.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn3.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn4.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn4.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn5.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn5.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn6.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn6.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn7.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn7.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn8.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/Fn8.txt",
    "testData/org/elixir_lang/parser_definition/issue_580/FnStructNoParenthesesManyArguments.ex",
    "testData/org/elixir_lang/parser_definition/issue_580/FnStructNoParenthesesManyArguments.txt",
    "testData/org/elixir_lang/parser_definition/issue_674",
    "testData/org/elixir_lang/parser_definition/issue_674/Feymartynov.ex",
    "testData/org/elixir_lang/parser_definition/issue_674/Feymartynov.txt",
    "testData/org/elixir_lang/parser_definition/issue_821",
    "testData/org/elixir_lang/parser_definition/issue_821/EndKeywordKey.ex",
    "testData/org/elixir_lang/parser_definition/issue_821/EndKeywordKey.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/list_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/AdditionKeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/AdditionKeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/AliasColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/AliasColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/CharListColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/CharListColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/DotCallKeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/DotCallKeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/DotDotDotColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/DotDotDotColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EOLBeforeClosingBracket.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EOLBeforeClosingBracket.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyBinary.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyBinary.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyMapColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyMapColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyParentheses.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyParentheses.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyTupleColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/EmptyTupleColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/IdentifierColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/IdentifierColon.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/KeywordKey.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/KeywordKey.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/KeywordPair.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/KeywordPair.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/KeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedCallOperationKeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedCallOperationKeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedDotMatchedCallOperationKeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedDotMatchedCallOperationKeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedExpression.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/MatchedExpression.txt",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/StringColon.ex",
    "testData/org/elixir_lang/parser_definition/list_parsing_test_case/StringColon.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_char_list_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_regex_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmbeddedStringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmbeddedStringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_string_sigil_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Braces.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Braces.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Brackets.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Brackets.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Chevrons.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Chevrons.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/DoubleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/DoubleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EmptyHexadecimalEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EmptyHexadecimalEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EmptyUnicodeEscapeSequence.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EmptyUnicodeEscapeSequence.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/SigilModifiers.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/SigilModifiers.txt",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/SingleQuotes.ex",
    "testData/org/elixir_lang/parser_definition/literal_words_line_parsing_test_case/SingleQuotes.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/AssociationOperation.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/AssociationOperations.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/AssociationOperations.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/AssociationOperationsAndKeywords.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/AssociationOperationsAndKeywords.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/EmptyStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Keywords.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/Keywords.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapConstructionArgumentsWithPipes.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapExpression.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapUpdateArgumentsWithTrailingComma.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapUpdateArgumentsWithTrailingComma.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapUpdateKeywords.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MapUpdateKeywords.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MatchedPipeAsssociationAndKeywords.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MatchedPipeAsssociationAndKeywords.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MatchedPipeMapExpression.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MatchedPipeMapExpressionWIthTrailingComma.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MatchedPipeMatchedAssociationMatched.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MaxDotCallStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MaxQualifiedAliasStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MaxQualifiedNoArgumentsCallStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/MaxQualifiedParenthesesCallStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/QualifiedNoParenthesesCallAssociation.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/QualifiedNoParenthesesCallAssociation.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/StructConstruction.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/StructConstruction.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/StructUpdate.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/StructUpdate.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/UnqualifiedNoParenthesesCallAssociation.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/UnqualifiedNoParenthesesCallAssociation.txt",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/VariableStruct.ex",
    "testData/org/elixir_lang/parser_definition/map_operation_parsing_test_case/VariableStruct.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_addition_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_and_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_arrow_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/AtLeftOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/AtNoParenthesesManyArgumentsCall.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/CaptureLeftOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/CaptureNoParenthesesManyArgumentsCall.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/NoParenthesesManyArgumentsCall.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/NoParenthesesManyArgumentsCall.txt",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/UnaryLeftOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/UnaryNoParenthesesManyArgumentsCall.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_at_non_numeric_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/DecimalFloatDecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/matched_expression_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_call_operation/no_parentheses_many_arguments_strict_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_comparison_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/EOLs.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/EOLs.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperationAtEnd.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperationAtEnd.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedCallOperationInMiddle.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperationAtEnd.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperationAtEnd.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperationInMiddle.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotMatchedCallOperationInMiddle.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotOperatorCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedDotOperatorCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperationAtEnd.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperationAtEnd.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperationInMiddle.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperationInMiddle.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_call_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AliasDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AliasDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AliasDotIdentifierDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AliasDotIdentifierDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/IdentifierDotIdentifierDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/IdentifierDotIdentifierDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/matched_call_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_arguments_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/no_parentheses_keywords_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/one_argument_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/unqualified_no_parentheses_many_arguments_call_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_access_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_expression_access_expression_parsing_test_case/RegularKeywords.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_access_expression_parsing_test_case/RegularKeywords.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharList.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharList.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/False.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/False.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Identifier.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Identifier.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Nil.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Nil.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Number.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Number.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/String.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/String.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/True.ex",
    "testData/org/elixir_lang/parser_definition/matched_expression_parsing_test_case/True.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedTypeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedTypeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedWhenOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/MatchedWhenOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_match_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_in_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_match_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_or_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_pipe_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedAtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedCaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedCaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedDotCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedDotCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedInMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedInMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedQualifiedAliasOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedQualifiedAliasOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedQualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedQualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedTypeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedTypeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedUnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedUnqualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedUnqualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedWhenOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/MatchedWhenOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_alias_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedAtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedCaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedDotCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedDotCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedInMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedInMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedQualifiedAliasOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedQualifiedAliasOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedQualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedQualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedTypeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedTypeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedUnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedUnqualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedUnqualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedWhenOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/MatchedWhenOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_call_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedAtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedCaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedCaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedDotCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedDotCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedInMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedInMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedQualifiedAliasOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedQualifiedAliasOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedQualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedQualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedTypeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedTypeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedUnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedUnqualifiedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedUnqualifiedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedWhenNoParenthesesKeywordsOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedWhenOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/MatchedWhenOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_qualified_multiple_aliases_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedHatOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_relational_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_three_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CaptureNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_two_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_type_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Associativity.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Associativity.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedDotOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedDotOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedInOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedInOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedThreeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedThreeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedTypeOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/MatchedTypeOperation.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/NoParenthesesKeywords.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/NoParenthesesKeywords.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/UnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/matched_when_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/no_parentheses_expression_parsing_test_case/Function.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_expression_parsing_test_case/Function.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/FunctionEOLPositional.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAlias.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAlias.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAliasDotAlias.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAliasDotAlias.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAliasDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAliasDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAtom.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAtom.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueAtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharListLine.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharListLine.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharToken.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueCharToken.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueDecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueDecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueEOLComma.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueEOLComma.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueEmptyParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueEmptyParentheses.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueList.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueList.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueMatchedAtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueMatchedCaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueMatchedMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueMatchedMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueMatchedUnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueNoParenthesesNoArgumentsUnqualifiedCallOrVariable.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueNoParenthesesNoArgumentsUnqualifiedCallOrVariable.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueSigil.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueSigil.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueStringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueStringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueStringLine.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueStringLine.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/KeywordValueUnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/NoParenthesesExpressionKeywordValue.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/NoParenthesesExpressionKeywordValue.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/OneKeyword.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/OneKeyword.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAdditionOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAdditionOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAlias.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAlias.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAndOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAndOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalArrowOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalArrowOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAtom.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAtom.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalAtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCaptureNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharListLine.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharListLine.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharToken.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalCharToken.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalComparisonOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalComparisonOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalDecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalDecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalEOLComma.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalEOLComma.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalInMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalInMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalInOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalInOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalList.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalList.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalMatchOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalMatchOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalMultiplicationOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalMultiplicationOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalNumericAtOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalNumericCaptureOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalNumericCaptureOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalNumericUnaryOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalOrOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalOrOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalPipeOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalPipeOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalQualifiedAlias.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalQualifiedAlias.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalRelationalOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalRelationalOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalSigil.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalSigil.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalString.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalString.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalStringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalStringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalTwoOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalTwoOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalUnaryNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalVariable.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalVariable.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalWhenOperation.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalWhenOperation.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsEOLComma.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsEOLComma.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsWithKeywords.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsWithKeywords.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsWithoutKeywords.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/PositionalsWithoutKeywords.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/TwoKeywordsNewlineAfterComma.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/TwoKeywordsNewlineAfterComma.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/TwoKeywordsSameLine.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_many_arguments_call_parsing_test_case/TwoKeywordsSameLine.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AliasDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AliasDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtLeftOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtNumericOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtNumericOperationDotUnderscore.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtNumericOperationDotUnderscore.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtomDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtomDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtomKeywordDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/AtomKeywordDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/BinaryWholeNumberDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/BinaryWholeNumberDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CaptureLeftOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CaptureLeftOperationDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CaptureNumericOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CaptureNumericOperationDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharListHeredocDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharListHeredocDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharListLineDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharListLineDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharTokenDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/CharTokenDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/DecimalFloatDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/DecimalFloatDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/DecimalWholeNumberDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/DecimalWholeNumberDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/ListDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/ListDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/OctalWholeNumberDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/OctalWholeNumberDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/SigilDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/SigilDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/StringHeredocDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/StringHeredocDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/StringLineDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/StringLineDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/UnaryLeftOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/UnaryNumericOperationDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/UnknownBaseWholeNumberDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/UnknownBaseWholeNumberDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/VariableDotIdentifier.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_no_arguments_call_parsing_test_case/VariableDotIdentifier.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_one_argument_call_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/no_parentheses_one_argument_call_parsing_test_case/UnqualifiedSpaceOpeningParenthesisDualVariableClosingParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_one_argument_call_parsing_test_case/UnqualifiedSpaceOpeningParenthesisDualVariableClosingParenthesesDoBlock.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/EmptyParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/EmptyParentheses.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/KeywordsInParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/KeywordsInParentheses.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/PositionalsAndKeywordsInParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/PositionalsAndKeywordsInParentheses.txt",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/PositionalsInParentheses.ex",
    "testData/org/elixir_lang/parser_definition/no_parentheses_strict_parsing_test_case/PositionalsInParentheses.txt",
    "testData/org/elixir_lang/parser_definition/not_in_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/not_in_parsing_test_case/Issue844.ex",
    "testData/org/elixir_lang/parser_definition/not_in_parsing_test_case/Issue844.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/numeric_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/InvalidAndValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/InvalidAndValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/InvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/InvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/NoDigits.ex",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/NoDigits.txt",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/ValidDigits.ex",
    "testData/org/elixir_lang/parser_definition/octal_whole_number_parsing_test_case/ValidDigits.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Block.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Block.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/EmptyParenthesesStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/EmptyParenthesesStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/EndOfExpressionStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/EndOfExpressionStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Expression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Expression.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/KeywordsInParenthesesStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/KeywordsInParenthesesStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/KeywordsInParenthesesWhenExpressionStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/MatchedExpressionStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/MultiStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/MultiStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesKeywordsStabExpression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesKeywordsStabExpression.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesManyArgumentsStabExpression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesManyArgumentsStabExpression.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesWhenStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/NoParenthesesWhenStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/ParentheticalStabInNoParenthesesStabSignature.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/ParentheticalStabInNoParenthesesStabSignature.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/PositionalsAndKeywordsInParenthesesStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/PositionalsAndKeywordsInParenthesesStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/PositionalsAndKeywordsInParenthesesWhenExpressionStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/SpliceOnStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/SpliceOnStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Stab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/Stab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabEndOfExpressionExpressionListEndOfExpression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabEndOfExpressionExpressionListEndOfExpression.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabExpression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabExpressionList.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabExpressionList.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabMultiEndOfExpressionStab.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/StabMultiEndOfExpressionStab.txt",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/UnqualifiedNoParenthesesManyArgumentsCallStabExpression.ex",
    "testData/org/elixir_lang/parser_definition/parenthetical_stab_parsing_test_case/UnqualifiedNoParenthesesManyArgumentsCallStabExpression.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Alias.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Alias.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtNonNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtNonNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Atom.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Atom.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtomKeyword.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/AtomKeyword.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/BinaryWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/BinaryWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CaptureNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CaptureNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharListHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharListHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharListLine.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharListLine.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharToken.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/CharToken.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/DecimalFloat.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/DecimalFloat.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/DecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/DecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/HexadecimalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/HexadecimalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/List.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/List.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/MatchedCallOperation.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/MatchedCallOperation.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/OctalWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/OctalWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Sigil.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Sigil.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/StringHeredoc.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/StringHeredoc.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/StringLine.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/StringLine.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/UnaryNumericOperation.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/UnaryNumericOperation.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/UnknownBaseWholeNumber.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/UnknownBaseWholeNumber.txt",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Variable.ex",
    "testData/org/elixir_lang/parser_definition/sigil_dot_operation_parsing_test_case/Variable.txt",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Minimal.ex",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/Minimal.txt",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/WhitespaceEndPrefix.ex",
    "testData/org/elixir_lang/parser_definition/string_heredoc_parsing_test_case/WhitespaceEndPrefix.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/EscapeSequences.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/EscapeSequences.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Interpolation.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Interpolation.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/InterpolationRegression.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/InterpolationRegression.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Multiline.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/Multiline.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/NestedInterpolation.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/NestedInterpolation.txt",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/WithoutInterpolation.ex",
    "testData/org/elixir_lang/parser_definition/string_line_parsing_test_case/WithoutInterpolation.txt",
    "testData/org/elixir_lang/parser_definition/tail_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/tail_expression_parsing_test_case/EmptyParentheses.ex",
    "testData/org/elixir_lang/parser_definition/tail_expression_parsing_test_case/EmptyParentheses.txt",
    "testData/org/elixir_lang/parser_definition/tail_expression_parsing_test_case/NoParenthesesCall.ex",
    "testData/org/elixir_lang/parser_definition/tail_expression_parsing_test_case/NoParenthesesCall.txt",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/Empty.ex",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/Empty.txt",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/One.ex",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/OneWithTrailingComma.ex",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/Three.ex",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/Two.ex",
    "testData/org/elixir_lang/parser_definition/tuple_parsing_test_case/TwoWithKeywords.ex",
    "testData/org/elixir_lang/parser_definition/unknown_base_whole_number_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/unknown_base_whole_number_parsing_test_case/InvalidDigits.ex",
    "testData/org/elixir_lang/parser_definition/unknown_base_whole_number_parsing_test_case/InvalidDigits.txt",
    "testData/org/elixir_lang/parser_definition/unknown_base_whole_number_parsing_test_case/NoDigits.ex",
    "testData/org/elixir_lang/parser_definition/unknown_base_whole_number_parsing_test_case/NoDigits.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtDotCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtQualifiedNoArgumentsCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtQualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtQualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtUnqualifiedNoArgumentsBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtUnqualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtUnqualifiedNoParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/AtUnqualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/BlockIdentifierKeywordKeys.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/BlockIdentifierKeywordKeys.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/BlockItemCommentStab.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/BlockItemCommentStab.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureDotCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureQualifiedNoArgumentsCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureQualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureQualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureQualifiedParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedNoArgumentsBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedNoArgumentsBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedNoParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/CaptureUnqualifiedParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/DotCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointDotCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointQualifiedNoArgumentsCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointQualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointQualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointUnqualifiedNoArgumentsBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointUnqualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/ExclamationPointUnqualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/InternalError.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/InternalError.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotDotCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotQualifiedNoArgumentsCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotQualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotUnqualifiedNoArgumentsBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotUnqualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/NotUnqualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/QualifiedNoArgumentsCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/QualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/QualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/QualifiedParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnaryStabBody.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsAfterBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsAfterBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsAfterStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsCatchBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsCatchBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsCatchStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsElseBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsElseBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsElseStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsRepeatBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsRepeatBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsRescueBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsRescueBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsRescueStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsStabAfterStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsStabCatchStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsStabElseStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoArgumentsStabRescueStabBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedNoParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedParenthesesCallBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnqualifiedParenthesesCallBlock.txt",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnquoteSplicingBlock.ex",
    "testData/org/elixir_lang/parser_definition/unmatched_expression_parsing_test_case/UnquoteSplicingBlock.txt",
    "testData/org/elixir_lang/psi",
    "testData/org/elixir_lang/psi/import",
    "testData/org/elixir_lang/psi/import/import_module.ex",
    "testData/org/elixir_lang/psi/import/import_module_except_name_arity.ex",
    "testData/org/elixir_lang/psi/import/import_module_only_name_arity.ex",
    "testData/org/elixir_lang/psi/import/imported.ex",
    "testData/org/elixir_lang/psi/operation",
    "testData/org/elixir_lang/psi/operation/prefix",
    "testData/org/elixir_lang/psi/operation/prefix/zero_operands.ex",
    "testData/org/elixir_lang/psi/scope",
    "testData/org/elixir_lang/psi/scope/call_definition_clause",
    "testData/org/elixir_lang/psi/scope/call_definition_clause/variants",
    "testData/org/elixir_lang/psi/scope/call_definition_clause/variants/defmodule.ex",
    "testData/org/elixir_lang/psi/scope/call_definition_clause/variants/self_completion.ex",
    "testData/org/elixir_lang/refactoring",
    "testData/org/elixir_lang/refactoring/variable",
    "testData/org/elixir_lang/refactoring/variable/rename",
    "testData/org/elixir_lang/refactoring/variable/rename/parameter_unused.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/parameter_unused_after.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/parameter_used_after.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/parameter_used_declaration.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/parameter_used_usage.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/variable_unused.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/variable_unused_after.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/variable_used_after.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/variable_used_declaration.ex",
    "testData/org/elixir_lang/refactoring/variable/rename/variable_used_usage.ex",
    "testData/org/elixir_lang/reference",
    "testData/org/elixir_lang/reference/callable",
    "testData/org/elixir_lang/reference/callable/import",
    "testData/org/elixir_lang/reference/callable/import/import_module.ex",
    "testData/org/elixir_lang/reference/callable/import/import_module_except_name_arity.ex",
    "testData/org/elixir_lang/reference/callable/import/import_module_only_name_arity.ex",
    "testData/org/elixir_lang/reference/callable/import/imported.ex",
    "testData/org/elixir_lang/reference/callable/intramodule",
    "testData/org/elixir_lang/reference/callable/intramodule/ambiguous_back.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/ambiguous_forward.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/ambiguous_recursive.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/function_name_multiple_same_arity.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/parentheses_multiple_correct_arity.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/parentheses_recursive.ex",
    "testData/org/elixir_lang/reference/callable/intramodule/parentheses_single_correct_arity.ex",
    "testData/org/elixir_lang/reference/callable/issue_1270",
    "testData/org/elixir_lang/reference/callable/issue_1270/nested_module_bare_words.ex",
    "testData/org/elixir_lang/reference/callable/issue_1270/nested_module_full_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_1270/nested_module_relative_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_1270/outer_module_bare_words.ex",
    "testData/org/elixir_lang/reference/callable/issue_1270/outer_module_relative_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_354",
    "testData/org/elixir_lang/reference/callable/issue_354/logger_logstash_backend.ex",
    "testData/org/elixir_lang/reference/callable/issue_422",
    "testData/org/elixir_lang/reference/callable/issue_422/is_variable.ex",
    "testData/org/elixir_lang/reference/callable/issue_429",
    "testData/org/elixir_lang/reference/callable/issue_429/get_use_scope.ex",
    "testData/org/elixir_lang/reference/callable/issue_431",
    "testData/org/elixir_lang/reference/callable/issue_431/planet.ex",
    "testData/org/elixir_lang/reference/callable/issue_436",
    "testData/org/elixir_lang/reference/callable/issue_436/is_parameter.ex",
    "testData/org/elixir_lang/reference/callable/issue_456",
    "testData/org/elixir_lang/reference/callable/issue_456/is_variable.ex",
    "testData/org/elixir_lang/reference/callable/issue_463",
    "testData/org/elixir_lang/reference/callable/issue_463/aliased_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_463/direct_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_463/double_aliased_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_463/map_access_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_463/referenced.ex",
    "testData/org/elixir_lang/reference/callable/issue_463/unresolved_alias_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_480",
    "testData/org/elixir_lang/reference/callable/issue_480/aliased_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/direct_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/double_aliased_module_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/local.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/map_access_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/referenced.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/remote.ex",
    "testData/org/elixir_lang/reference/callable/issue_480/unresolved_alias_qualifier.ex",
    "testData/org/elixir_lang/reference/callable/issue_500",
    "testData/org/elixir_lang/reference/callable/issue_500/is_variable.ex",
    "testData/org/elixir_lang/reference/callable/issue_517",
    "testData/org/elixir_lang/reference/callable/issue_517/variable_use_scope.ex",
    "testData/org/elixir_lang/reference/callable/issue_659",
    "testData/org/elixir_lang/reference/callable/issue_659/is.ex",
    "testData/org/elixir_lang/reference/callable/issue_687",
    "testData/org/elixir_lang/reference/callable/issue_687/repeated_map_value_in_match.ex",
    "testData/org/elixir_lang/reference/callable/issue_692",
    "testData/org/elixir_lang/reference/callable/issue_692/unresolved_at_top_of_file.ex",
    "testData/org/elixir_lang/reference/module",
    "testData/org/elixir_lang/reference/module/as",
    "testData/org/elixir_lang/reference/module/as/completion.ex",
    "testData/org/elixir_lang/reference/module/as/nested",
    "testData/org/elixir_lang/reference/module/as/nested/completion.ex",
    "testData/org/elixir_lang/reference/module/as/nested/nested.ex",
    "testData/org/elixir_lang/reference/module/as/nested/reference.ex",
    "testData/org/elixir_lang/reference/module/as/nested/suffix.ex",
    "testData/org/elixir_lang/reference/module/as/reference.ex",
    "testData/org/elixir_lang/reference/module/as/suffix1.ex",
    "testData/org/elixir_lang/reference/module/as/suffix2.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias",
    "testData/org/elixir_lang/reference/module/multiple_alias/completion.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/completion_inside_curlies.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/multiple_alias_aye.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/multiple_alias_bee.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested/completion.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested/multiple_alias_aye.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested/multiple_alias_bee.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested/nested.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/nested/reference.ex",
    "testData/org/elixir_lang/reference/module/multiple_alias/reference.ex",
    "testData/org/elixir_lang/reference/module/nested_alias_vs_string",
    "testData/org/elixir_lang/reference/module/nested_alias_vs_string/completion.ex",
    "testData/org/elixir_lang/reference/module/nested_alias_vs_string/nested.ex",
    "testData/org/elixir_lang/reference/module/nested_alias_vs_string/nested_suffix.ex",
    "testData/org/elixir_lang/reference/module/nested_alias_vs_string/nested_under.ex",
    "testData/org/elixir_lang/reference/module/suffix",
    "testData/org/elixir_lang/reference/module/suffix/completion.ex",
    "testData/org/elixir_lang/reference/module/suffix/nested",
    "testData/org/elixir_lang/reference/module/suffix/nested/completion.ex",
    "testData/org/elixir_lang/reference/module/suffix/nested/nested.ex",
    "testData/org/elixir_lang/reference/module/suffix/nested/reference.ex",
    "testData/org/elixir_lang/reference/module/suffix/nested/suffix.ex",
    "testData/org/elixir_lang/reference/module/suffix/reference.ex",
    "testData/org/elixir_lang/reference/module/suffix/suffix.ex",
    "testData/org/elixir_lang/structure_view",
    "testData/org/elixir_lang/structure_view/element",
    "testData/org/elixir_lang/structure_view/element/call_definition_head",
    "testData/org/elixir_lang/structure_view/element/call_definition_head/issue_468.ex",
    "testData/org/elixir_lang/structure_view/element/call_definition_head/no_when.ex",
    "testData/org/elixir_lang/structure_view/element/call_definition_head/single_when.ex",
    "tests",
    "tests/mockito-core-2.0.7-beta-javadoc.jar",
    "tests/mockito-core-2.0.7-beta-sources.jar",
    "tests/mockito-core-2.0.7-beta.jar",
    "tests/objenesis-2.1-javadoc.jar",
    "tests/objenesis-2.1-sources.jar",
    "tests/objenesis-2.1.jar",
    "tests/org",
    "tests/org/elixir_lang",
    "tests/org/elixir_lang/FindUsagesTest.kt",
    "tests/org/elixir_lang/FormattingTest.java",
    "tests/org/elixir_lang/Issue470.java",
    "tests/org/elixir_lang/TokenTypeState.java",
    "tests/org/elixir_lang/annotator",
    "tests/org/elixir_lang/annotator/ModuleAttributeTest.java",
    "tests/org/elixir_lang/beam",
    "tests/org/elixir_lang/beam/BeamTest.java",
    "tests/org/elixir_lang/beam/DecompilerTest.java",
    "tests/org/elixir_lang/code_insight",
    "tests/org/elixir_lang/code_insight/completion",
    "tests/org/elixir_lang/code_insight/completion/contributor",
    "tests/org/elixir_lang/code_insight/completion/contributor/CallDefinitionClauseTest.java",
    "tests/org/elixir_lang/code_insight/highlighting",
    "tests/org/elixir_lang/code_insight/highlighting/brace_matcher",
    "tests/org/elixir_lang/code_insight/highlighting/brace_matcher/Issue443.java",
    "tests/org/elixir_lang/code_insight/lookup",
    "tests/org/elixir_lang/code_insight/lookup/element_renderer",
    "tests/org/elixir_lang/code_insight/lookup/element_renderer/CallDefinitionClauseTest.java",
    "tests/org/elixir_lang/create_module",
    "tests/org/elixir_lang/create_module/DialogTest.kt",
    "tests/org/elixir_lang/eex",
    "tests/org/elixir_lang/eex/lexer",
    "tests/org/elixir_lang/eex/lexer/look_ahead",
    "tests/org/elixir_lang/eex/lexer/look_ahead/BodylessTest.java",
    "tests/org/elixir_lang/eex/lexer/look_ahead/MinimalBodyTest.java",
    "tests/org/elixir_lang/eex/lexer/look_ahead/Test.java",
    "tests/org/elixir_lang/eex/lexer/look_ahead/WhiteSpaceBodyTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer",
    "tests/org/elixir_lang/elixir_flex_lexer/BaseIntegerBaseTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/BinaryIntegerTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/BracketCallTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/DecimalIntegerTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/DotOperationTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/DotRelativeIdentifierParenthesesCallTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/GroupHeredocStartTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/HexadecimalIntegerTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/InterpolationTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/OctalIntegerTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/ParenthesesCallTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/SigilPromoterTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/SigilTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/TokenTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/UnknownBaseIntegerTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/YYInitialTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/atom_start",
    "tests/org/elixir_lang/elixir_flex_lexer/atom_start/FragmentTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/atom_start/WholeTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group",
    "tests/org/elixir_lang/elixir_flex_lexer/group/Group.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/InterpolationTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/quote",
    "tests/org/elixir_lang/elixir_flex_lexer/group/quote/DoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/quote/SingleQuoteTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/quote/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/ClosingBraceTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/ClosingBracketTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/ClosingChevronTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/ClosingParenthesisTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/ForwardSlashTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/PipeTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/sigil/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/valid_escape_sequence",
    "tests/org/elixir_lang/elixir_flex_lexer/group/valid_escape_sequence/BracedCharacterCodeTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/valid_escape_sequence/CharacterCodeTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group/valid_escape_sequence/CharacterTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/quote",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/quote/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/quote/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/quote/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/char_list",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/char_list/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/char_list/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/char_list/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/custom",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/custom/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/custom/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/custom/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/regex",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/regex/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/regex/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/regex/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/string",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/string/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/string/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/string/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/words",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/words/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/words/TripleDoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_end/sigil/words/TripleSingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/InterpolationTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/quote",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/quote/CharListTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/quote/PromoterTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/quote/StringTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/CharListTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/CustomTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/PromoterTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/RegexTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/StringTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_body/sigil/WordsTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/quote",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/quote/CharListTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/quote/StringTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil/CharListTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil/CustomTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil/RegexTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil/StringTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/group_heredoc_line_start/sigil/WordsTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/interpolation",
    "tests/org/elixir_lang/elixir_flex_lexer/interpolation/EndTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/CharListTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/CustomTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/RegexTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/Sigil.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/StringTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/named_sigil/WordsTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/BracesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/BracketsTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/ChevronsTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/ParenthesesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/PipesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group/Test.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group_heredoc_end",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group_heredoc_end/DoubleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group_heredoc_end/SingleQuotesTest.java",
    "tests/org/elixir_lang/elixir_flex_lexer/sigil_modifiers/group_heredoc_end/Test.java",
    "tests/org/elixir_lang/flex_lexer",
    "tests/org/elixir_lang/flex_lexer/Test.java",
    "tests/org/elixir_lang/inspection",
    "tests/org/elixir_lang/inspection/KeywordPairColonInsteadOfTypeOperatorTestCase.java",
    "tests/org/elixir_lang/inspection/KeywordsNotAtEndTestCase.java",
    "tests/org/elixir_lang/inspection/MatchOperatorInsteadOfTypeOperatorTestCase.java",
    "tests/org/elixir_lang/inspection/NoParentheseStrictTestCase.java",
    "tests/org/elixir_lang/inspection/NoParenthesesManyStrictTestCase.java",
    "tests/org/elixir_lang/intellij_elixir",
    "tests/org/elixir_lang/intellij_elixir/Quoter.java",
    "tests/org/elixir_lang/intellij_elixir/refactoring",
    "tests/org/elixir_lang/intellij_elixir/refactoring/variable",
    "tests/org/elixir_lang/intellij_elixir/refactoring/variable/RenameTest.kt",
    "tests/org/elixir_lang/navigation",
    "tests/org/elixir_lang/navigation/GotoSymbolContributorTest.kt",
    "tests/org/elixir_lang/parser_definition",
    "tests/org/elixir_lang/parser_definition/AnonymousFunctionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/AtBracketOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/AtomDotOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/AtomKeywordParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/AtomParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/BinaryWholeNumberParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/BitStringParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/BracketOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/CharListHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/CharListLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/CharTokenParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/DecimalFloatParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/DecimalWholeNumberParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/DualOperatorParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/EOLtoWhitespace.java",
    "tests/org/elixir_lang/parser_definition/ElixirLangElixirParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/Elixir_1_6_5ParsingTestCase.kt",
    "tests/org/elixir_lang/parser_definition/FunctionReferenceParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/GeneralParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/HeredocDotOperationParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/HexadecimalWholeNumberParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InfixParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedCharListSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedCharListSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedRegexHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedRegexLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedStringSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedStringSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedWordsHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/InterpolatedWordsLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/Issue1091.kt",
    "tests/org/elixir_lang/parser_definition/Issue1105.kt",
    "tests/org/elixir_lang/parser_definition/Issue458.java",
    "tests/org/elixir_lang/parser_definition/Issue580.java",
    "tests/org/elixir_lang/parser_definition/Issue674.java",
    "tests/org/elixir_lang/parser_definition/Issue821.java",
    "tests/org/elixir_lang/parser_definition/ListDotOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/ListParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralCharListSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralCharListSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralRegexHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralRegexLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralStringSigilHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralStringSigilLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralWordsHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/LiteralWordsLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MapOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedAdditionOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedAndOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedArrowOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedAtNonNumericOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedComparisonOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedDotCallOperationParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/MatchedDotOperationParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/MatchedExpressionAccessExpressionParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/MatchedExpressionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedInMatchOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedInOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedMatchOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedOrOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedPipeOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedQualifiedAliasOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedQualifiedCallOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedQualifiedMultipleAliasesParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedRelationalOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedThreeOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedTwoOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedTypeOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/MatchedWhenOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NoParenthesesExpressionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NoParenthesesManyArgumentsCallParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NoParenthesesNoArgumentsCallParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NoParenthesesOneArgumentCallParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NoParenthesesStrictParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NotInParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/NumericDotOperationParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/OctalWholeNumberParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/ParentheticalStabParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/ParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/SigilDotOperationParsingTestcase.java",
    "tests/org/elixir_lang/parser_definition/StringHeredocParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/StringLineParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/TailExpressionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/TupleParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/UnknownBaseWholeNumberParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/UnmatchedExpressionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_call_operation",
    "tests/org/elixir_lang/parser_definition/matched_call_operation/MatchedExpressionParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_call_operation/NoParenthesesManyArgumentsStrictParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_call_operation/ParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/MatchedCallOperationParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/NoArgumentsParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/NoParenthesesKeywordsParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/OneArgumentParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/ParsingTestCase.java",
    "tests/org/elixir_lang/parser_definition/matched_dot_operator_call_operation/UnqualifiedNoParenthesesManyArgumentsCallParsingTestCase.java",
    "tests/org/elixir_lang/psi",
    "tests/org/elixir_lang/psi/ImportTest.kt",
    "tests/org/elixir_lang/psi/operation",
    "tests/org/elixir_lang/psi/operation/PrefixTest.java",
    "tests/org/elixir_lang/psi/scope",
    "tests/org/elixir_lang/psi/scope/call_definition_clause",
    "tests/org/elixir_lang/psi/scope/call_definition_clause/VariantsTest.java",
    "tests/org/elixir_lang/reference",
    "tests/org/elixir_lang/reference/callable",
    "tests/org/elixir_lang/reference/callable/ImportTest.java",
    "tests/org/elixir_lang/reference/callable/IntramoduleTest.java",
    "tests/org/elixir_lang/reference/callable/Issue1270Test.kt",
    "tests/org/elixir_lang/reference/callable/Issue354Test.java",
    "tests/org/elixir_lang/reference/callable/Issue422Test.java",
    "tests/org/elixir_lang/reference/callable/Issue429Test.java",
    "tests/org/elixir_lang/reference/callable/Issue431Test.java",
    "tests/org/elixir_lang/reference/callable/Issue436Test.java",
    "tests/org/elixir_lang/reference/callable/Issue456Test.java",
    "tests/org/elixir_lang/reference/callable/Issue463Test.java",
    "tests/org/elixir_lang/reference/callable/Issue480Test.java",
    "tests/org/elixir_lang/reference/callable/Issue500Test.java",
    "tests/org/elixir_lang/reference/callable/Issue517Test.java",
    "tests/org/elixir_lang/reference/callable/Issue659Test.java",
    "tests/org/elixir_lang/reference/callable/Issue687Test.java",
    "tests/org/elixir_lang/reference/callable/Issue692Test.java",
    "tests/org/elixir_lang/reference/module",
    "tests/org/elixir_lang/reference/module/AsTest.java",
    "tests/org/elixir_lang/reference/module/MultipleAliasTest.java",
    "tests/org/elixir_lang/reference/module/NestedAliasVsStringTest.java",
    "tests/org/elixir_lang/reference/module/SuffixTest.java",
    "tests/org/elixir_lang/reference/module/as",
    "tests/org/elixir_lang/reference/module/as/NestedTest.java",
    "tests/org/elixir_lang/reference/module/multiple_alias",
    "tests/org/elixir_lang/reference/module/multiple_alias/NestedTest.java",
    "tests/org/elixir_lang/reference/module/suffix",
    "tests/org/elixir_lang/reference/module/suffix/NestedTest.java",
    "tests/org/elixir_lang/sdk",
    "tests/org/elixir_lang/sdk/ProcessOutputTest.java",
    "tests/org/elixir_lang/sdk/elixir",
    "tests/org/elixir_lang/sdk/elixir/TypeTest.java",
    "tests/org/elixir_lang/structure_view",
    "tests/org/elixir_lang/structure_view/element",
    "tests/org/elixir_lang/structure_view/element/CallDefinitionHeadTest.java",
    "tests/org/elixir_lang/test",
    "tests/org/elixir_lang/test/ElixirVersion.java"
]
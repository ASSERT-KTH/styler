[
    ".DS_Store",
    ".gitignore",
    "README.md",
    "lcci0101_is_unique",
    "lcci0101_is_unique/Solution.java",
    "lcci0102_check_permutation",
    "lcci0102_check_permutation/Solution.java",
    "lcci0103_string_to_url",
    "lcci0103_string_to_url/Solution.java",
    "lcci0104_palindrome_permutation",
    "lcci0104_palindrome_permutation/Solution.java",
    "lcci0105_one_away",
    "lcci0105_one_away/Solution.java",
    "lcci0106_compress_string",
    "lcci0106_compress_string/Solution.java",
    "lcci0107_rotate_matrix",
    "lcci0107_rotate_matrix/Solution.java",
    "lcci0108_zero_matrix",
    "lcci0108_zero_matrix/Solution.java",
    "lcci0109_string_rotation",
    "lcci0109_string_rotation/Solution.java",
    "lcci0201_remove_duplicate_node",
    "lcci0201_remove_duplicate_node/ListNode.java",
    "lcci0201_remove_duplicate_node/Solution1.java",
    "lcci0201_remove_duplicate_node/Solution2.java",
    "lcci0202_kth_node_from_end_of_list",
    "lcci0202_kth_node_from_end_of_list/ListNode.java",
    "lcci0202_kth_node_from_end_of_list/Solution.java",
    "lcci0203_delete_middle_node",
    "lcci0203_delete_middle_node/ListNode.java",
    "lcci0203_delete_middle_node/Solution.java",
    "lcci0204_partition_list",
    "lcci0204_partition_list/ListNode.java",
    "lcci0204_partition_list/Solution.java",
    "lcci0205_sum_lists",
    "lcci0205_sum_lists/ListNode.java",
    "lcci0205_sum_lists/Solution1.java",
    "lcci0205_sum_lists/Solution2.java",
    "lcci0205_sum_lists/Solution3.java",
    "lcci0206_palindrome_linked_list",
    "lcci0206_palindrome_linked_list/ListNode.java",
    "lcci0206_palindrome_linked_list/Solution.java",
    "lcci0207_intersection_of_two_linked_lists",
    "lcci0207_intersection_of_two_linked_lists/ListNode.java",
    "lcci0207_intersection_of_two_linked_lists/Solution.java",
    "lcci0208_linked_list_cycle",
    "lcci0208_linked_list_cycle/ListNode.java",
    "lcci0208_linked_list_cycle/Solution.java",
    "lcci0301_three_in_one",
    "lcci0301_three_in_one/TripleInOne.java",
    "lcci0302_min_stack",
    "lcci0302_min_stack/MinStack.java",
    "lcci0303_stack_of_plates",
    "lcci0303_stack_of_plates/StackOfPlates.java",
    "lcci0304_implement_queue_using_stacks",
    "lcci0304_implement_queue_using_stacks/MyQueue.java",
    "lcci0305_sort_of_stacks",
    "lcci0305_sort_of_stacks/SortedStack.java",
    "lcci0306_animal_shelter",
    "lcci0306_animal_shelter/AnimalShelf.java",
    "lcci0401_route_between_nodes",
    "lcci0401_route_between_nodes/Solution1.java",
    "lcci0401_route_between_nodes/Solution2.java",
    "lcci0402_minimum_height_tree",
    "lcci0402_minimum_height_tree/Solution.java",
    "lcci0402_minimum_height_tree/TreeNode.java",
    "lcci0403_list_of_depth",
    "lcci0403_list_of_depth/ListNode.java",
    "lcci0403_list_of_depth/Solution.java",
    "lcci0403_list_of_depth/TreeNode.java",
    "lcci0404_check_balance",
    "lcci0404_check_balance/Solution.java",
    "lcci0404_check_balance/TreeNode.java",
    "lcci0405_legal_binary_search_tree",
    "lcci0405_legal_binary_search_tree/Solution.java",
    "lcci0405_legal_binary_search_tree/TreeNode.java",
    "lcci0406_successor",
    "lcci0406_successor/Solution.java",
    "lcci0406_successor/TreeNode.java",
    "lcci0408_first_common_ancestor",
    "lcci0408_first_common_ancestor/Solution.java",
    "lcci0408_first_common_ancestor/TreeNode.java",
    "lcci0409_bst_sequences",
    "lcci0409_bst_sequences/Solution.java",
    "lcci0409_bst_sequences/TreeNode.java",
    "lcci0410_check_subtree",
    "lcci0410_check_subtree/Solution.java",
    "lcci0410_check_subtree/TreeNode.java",
    "lcci0412_paths_with_sum",
    "lcci0412_paths_with_sum/Solution.java",
    "lcci0412_paths_with_sum/TreeNode.java",
    "lcci0501_insert_into_bits",
    "lcci0501_insert_into_bits/Solution.java",
    "lcci0502_bianry_number_to_string",
    "lcci0502_bianry_number_to_string/Solution.java",
    "lcci0503_reverse_bits",
    "lcci0503_reverse_bits/Solution.java",
    "lcci0504_closed_number",
    "lcci0504_closed_number/Solution.java",
    "lcci0506_convert_integer",
    "lcci0506_convert_integer/Solution.java",
    "lcci0507_exchange",
    "lcci0507_exchange/Solution.java",
    "lcci0508_draw_line",
    "lcci0508_draw_line/Solution.java",
    "lcci0801_three_steps_problem",
    "lcci0801_three_steps_problem/Solution.java",
    "lcci0802_robot_in_a_grid",
    "lcci0802_robot_in_a_grid/Solution.java",
    "lcci0803_magic_index",
    "lcci0803_magic_index/Solution.java",
    "lcci0804_power_set",
    "lcci0804_power_set/Solution.java",
    "lcci0805_recursive_mulitply",
    "lcci0805_recursive_mulitply/Solution.java",
    "lcci0806_hanota",
    "lcci0806_hanota/Solution.java",
    "lcci0807_permutation_i",
    "lcci0807_permutation_i/Solution.java",
    "lcci0810_color_fill",
    "lcci0810_color_fill/Solution.java",
    "lcci0811_coin",
    "lcci0811_coin/Solution.java",
    "lcci0813_pile_box",
    "lcci0813_pile_box/Solution.java",
    "lcci1001_sorted_merge",
    "lcci1001_sorted_merge/Solution.java",
    "lcci1001_sorted_merge/\u5408\u5e76\u6392\u5e8f\u7684\u6570\u7ec4.md",
    "lcci1005_sparse_array_search",
    "lcci1005_sparse_array_search/Solution.java",
    "lcci1603_intersection",
    "lcci1603_intersection/Solution.java",
    "lcci1605_factorial_zeros",
    "lcci1605_factorial_zeros/Solution.java",
    "lcci1607_maximum",
    "lcci1607_maximum/Solution.java",
    "lcci1608_english_int",
    "lcci1608_english_int/Solution.java",
    "lcci1611_diving_board",
    "lcci1611_diving_board/Solution.java",
    "lcci1615_master_mind",
    "lcci1615_master_mind/Solution.java",
    "lcci1617_contiguous_sequence",
    "lcci1617_contiguous_sequence/Solution1.java",
    "lcci1617_contiguous_sequence/Solution2.java",
    "lcci1618_pattern_matching",
    "lcci1618_pattern_matching/Solution.java",
    "lcci1622_langtons_ant",
    "lcci1622_langtons_ant/Solution.java",
    "lcci1625_lru_cache",
    "lcci1625_lru_cache/LRUCache.java",
    "lcci1701_add_without_plus",
    "lcci1701_add_without_plus/Solution.java",
    "lcci1704_missing_number",
    "lcci1704_missing_number/Solution.java",
    "lcci1706_number_of_2s_in_range",
    "lcci1706_number_of_2s_in_range/Solution.java",
    "lcci1708_circus_tower",
    "lcci1708_circus_tower/Solution.java",
    "lcci1710_find_majority_element",
    "lcci1710_find_majority_element/Solution.java",
    "lcci1712_binode",
    "lcci1712_binode/Solution.java",
    "lcci1712_binode/TreeNode.java",
    "lcci1713_re_space",
    "lcci1713_re_space/Solution1.java",
    "lcci1713_re_space/Solution2.java",
    "lcci1713_re_space/Solution3.java",
    "lcci1716_the_masseuse",
    "lcci1716_the_masseuse/Solution.java",
    "lcci1721_volume_of_histogram",
    "lcci1721_volume_of_histogram/Solution.java",
    "lcci1723_max_black_square",
    "lcci1723_max_black_square/Solution.java",
    "lcci1724_max_submatrix",
    "lcci1724_max_submatrix/Solution.java",
    "lcci1725_word_rectangle",
    "lcci1725_word_rectangle/Solution.java",
    "lcci1726_sparse_similarity",
    "lcci1726_sparse_similarity/Solution.java",
    "lcof03_shu_zu_zhong_zhong_fu_de_shu_zi",
    "lcof03_shu_zu_zhong_zhong_fu_de_shu_zi/Solution.java",
    "lcof04_er_wei_shu_zu_zhong_de_cha_zhao",
    "lcof04_er_wei_shu_zu_zhong_de_cha_zhao/Solution.java",
    "lcof05_ti_huan_kong_ge",
    "lcof05_ti_huan_kong_ge/Solution.java",
    "lcof06_cong_wei_dao_tou_da_yin_lian_biao",
    "lcof06_cong_wei_dao_tou_da_yin_lian_biao/ListNode.java",
    "lcof06_cong_wei_dao_tou_da_yin_lian_biao/Solution.java",
    "lcof07_zhong_jian_er_cha_shu",
    "lcof07_zhong_jian_er_cha_shu/Solution.java",
    "lcof07_zhong_jian_er_cha_shu/TreeNode.java",
    "lcof09_yong_liang_ge_zhan_shi_xian_dui_lie",
    "lcof09_yong_liang_ge_zhan_shi_xian_dui_lie/CQueue.java",
    "lcof10_i_fei_bo_na_qi_shu_lie",
    "lcof10_i_fei_bo_na_qi_shu_lie/Solution.java",
    "lcof10_ii_qing_wa_tiao_tai_jie_wen_ti",
    "lcof10_ii_qing_wa_tiao_tai_jie_wen_ti/Solution.java",
    "lcof11_xuan_zhuan_shu_zu_de_zui_xiao_shu_zi",
    "lcof11_xuan_zhuan_shu_zu_de_zui_xiao_shu_zi/Solution.java",
    "lcof12_ju_zhen_zhong_de_lu_jing",
    "lcof12_ju_zhen_zhong_de_lu_jing/Solution.java",
    "lcof13_ji_qi_ren_de_yun_dong_fan_wei",
    "lcof13_ji_qi_ren_de_yun_dong_fan_wei/Solution.java",
    "lcof14_i_jian_sheng_zi",
    "lcof14_i_jian_sheng_zi/Solution1.java",
    "lcof14_i_jian_sheng_zi/Solution2.java",
    "lcof14_ii_jian_sheng_zi",
    "lcof14_ii_jian_sheng_zi/Solution.java",
    "lcof15_er_jin_zhi_zhong_1de_ge_shu",
    "lcof15_er_jin_zhi_zhong_1de_ge_shu/Solution.java",
    "lcof16_shu_zhi_de_zheng_shu_ci_fang",
    "lcof16_shu_zhi_de_zheng_shu_ci_fang/Solution.java",
    "lcof17_da_yin_cong_1dao_zui_da_de_nwei_shu",
    "lcof17_da_yin_cong_1dao_zui_da_de_nwei_shu/Solution.java",
    "lcof18_shan_chu_lian_biao_de_jie_dian",
    "lcof18_shan_chu_lian_biao_de_jie_dian/ListNode.java",
    "lcof18_shan_chu_lian_biao_de_jie_dian/Solution.java",
    "lcof19_zheng_ze_biao_da_shi_pi_pei",
    "lcof19_zheng_ze_biao_da_shi_pi_pei/Solution.java",
    "lcof20_biao_shi_shu_zhi_de_zi_fu_chuan",
    "lcof20_biao_shi_shu_zhi_de_zi_fu_chuan/Solution.java",
    "lcof21_diao_zheng_shu_zu_shun_xu_shi_qi_shu_wei_yu_ou_shu_qian_mian",
    "lcof21_diao_zheng_shu_zu_shun_xu_shi_qi_shu_wei_yu_ou_shu_qian_mian/Solution.java",
    "lcof22_lian_biao_zhong_dao_shu_di_kge_jie_dian",
    "lcof22_lian_biao_zhong_dao_shu_di_kge_jie_dian/ListNode.java",
    "lcof22_lian_biao_zhong_dao_shu_di_kge_jie_dian/Solution.java",
    "lcof24_fan_zhuan_lian_biao",
    "lcof24_fan_zhuan_lian_biao/ListNode.java",
    "lcof24_fan_zhuan_lian_biao/Solution1.java",
    "lcof24_fan_zhuan_lian_biao/Solution2.java",
    "lcof25_he_bing_liang_ge_pai_xu_de_lian_biao",
    "lcof25_he_bing_liang_ge_pai_xu_de_lian_biao/ListNode.java",
    "lcof25_he_bing_liang_ge_pai_xu_de_lian_biao/Solution.java",
    "lcof26_shu_de_zi_jie_gou",
    "lcof26_shu_de_zi_jie_gou/Solution.java",
    "lcof26_shu_de_zi_jie_gou/TreeNode.java",
    "lcof27_er_cha_shu_de_jing_xiang",
    "lcof27_er_cha_shu_de_jing_xiang/Solution.java",
    "lcof27_er_cha_shu_de_jing_xiang/TreeNode.java",
    "lcof28_dui_cheng_de_er_cha_shu",
    "lcof28_dui_cheng_de_er_cha_shu/Solution.java",
    "lcof28_dui_cheng_de_er_cha_shu/TreeNode.java",
    "lcof29_shun_shi_zhen_da_yin_ju_zhen",
    "lcof29_shun_shi_zhen_da_yin_ju_zhen/Solution.java",
    "lcof30_bao_han_minhan_shu_de_zhan",
    "lcof30_bao_han_minhan_shu_de_zhan/MinStack.java",
    "lcof31_zhan_de_ya_ru_dan_chu_xu_lie",
    "lcof31_zhan_de_ya_ru_dan_chu_xu_lie/Solution.java",
    "lcof32_i_cong_shang_dao_xia_da_yin_er_cha_shu",
    "lcof32_i_cong_shang_dao_xia_da_yin_er_cha_shu/Solution.java",
    "lcof32_i_cong_shang_dao_xia_da_yin_er_cha_shu/TreeNode.java",
    "lcof32_ii_cong_shang_dao_xia_da_yin_er_cha_shu",
    "lcof32_ii_cong_shang_dao_xia_da_yin_er_cha_shu/Solution.java",
    "lcof32_ii_cong_shang_dao_xia_da_yin_er_cha_shu/TreeNode.java",
    "lcof32_iii_cong_shang_dao_xia_da_yin_er_cha_shu",
    "lcof32_iii_cong_shang_dao_xia_da_yin_er_cha_shu/Solution.java",
    "lcof32_iii_cong_shang_dao_xia_da_yin_er_cha_shu/TreeNode.java",
    "lcof33_er_cha_sou_suo_shu_de_hou_xu_bian_li_xu_lie",
    "lcof33_er_cha_sou_suo_shu_de_hou_xu_bian_li_xu_lie/Solution.java",
    "lcof34_er_cha_shu_zhong_he_wei_mou_yi_zhi_de_lu_jing",
    "lcof34_er_cha_shu_zhong_he_wei_mou_yi_zhi_de_lu_jing/Solution.java",
    "lcof34_er_cha_shu_zhong_he_wei_mou_yi_zhi_de_lu_jing/TreeNode.java",
    "lcof35_fu_za_lian_biao_de_fu_zhi",
    "lcof35_fu_za_lian_biao_de_fu_zhi/Node.java",
    "lcof35_fu_za_lian_biao_de_fu_zhi/Solution.java",
    "lcof36_er_cha_sou_suo_shu_yu_shuang_xiang_lian_biao",
    "lcof36_er_cha_sou_suo_shu_yu_shuang_xiang_lian_biao/Node.java",
    "lcof36_er_cha_sou_suo_shu_yu_shuang_xiang_lian_biao/Solution1.java",
    "lcof36_er_cha_sou_suo_shu_yu_shuang_xiang_lian_biao/Solution2.java",
    "lcof37_xu_lie_hua_er_cha_shu",
    "lcof37_xu_lie_hua_er_cha_shu/Codec.java",
    "lcof37_xu_lie_hua_er_cha_shu/TreeNode.java",
    "lcof38_zi_fu_chuan_de_pai_lie",
    "lcof38_zi_fu_chuan_de_pai_lie/Solution.java",
    "lcof39_shu_zu_zhong_chu_xian_ci_shu_chao_guo_yi_ban_de_shu_zi",
    "lcof39_shu_zu_zhong_chu_xian_ci_shu_chao_guo_yi_ban_de_shu_zi/Solution.java",
    "lcof40_zui_xiao_de_kge_shu",
    "lcof40_zui_xiao_de_kge_shu/Solution1.java",
    "lcof40_zui_xiao_de_kge_shu/Solution2.java",
    "lcof41_shu_ju_liu_zhong_de_zhong_wei_shu",
    "lcof41_shu_ju_liu_zhong_de_zhong_wei_shu/MedianFinder.java",
    "lcof42_lian_xu_zi_shu_zu_de_zui_da_he",
    "lcof42_lian_xu_zi_shu_zu_de_zui_da_he/Solution.java",
    "lcof43_1nzheng_shu_zhong_1chu_xian_de_ci_shu",
    "lcof43_1nzheng_shu_zhong_1chu_xian_de_ci_shu/Solution.java",
    "lcof44_shu_zi_xu_lie_zhong_mou_yi_wei_de_shu_zi",
    "lcof44_shu_zi_xu_lie_zhong_mou_yi_wei_de_shu_zi/Solution.java",
    "lcof45_ba_shu_zu_pai_cheng_zui_xiao_de_shu",
    "lcof45_ba_shu_zu_pai_cheng_zui_xiao_de_shu/Solution.java",
    "lcof46_ba_shu_zi_fan_yi_cheng_zi_fu_chuan",
    "lcof46_ba_shu_zi_fan_yi_cheng_zi_fu_chuan/Solution.java",
    "lcof47_li_wu_de_zui_da_jie_zhi",
    "lcof47_li_wu_de_zui_da_jie_zhi/Solution.java",
    "lcof48_zui_chang_bu_han_zhong_fu_zi_fu_de_zi_zi_fu_chuan",
    "lcof48_zui_chang_bu_han_zhong_fu_zi_fu_de_zi_zi_fu_chuan/Solution.java",
    "lcof49_chou_shu",
    "lcof49_chou_shu/Solution.java",
    "lcof50_di_yi_ge_zhi_chu_xian_yi_ci_de_zi_fu",
    "lcof50_di_yi_ge_zhi_chu_xian_yi_ci_de_zi_fu/Solution.java",
    "lcof51_shu_zu_zhong_de_ni_xu_dui",
    "lcof51_shu_zu_zhong_de_ni_xu_dui/Solution1.java",
    "lcof51_shu_zu_zhong_de_ni_xu_dui/Solution2.java",
    "lcof52_liang_ge_lian_biao_de_di_yi_ge_gong_gong_jie_dian",
    "lcof52_liang_ge_lian_biao_de_di_yi_ge_gong_gong_jie_dian/ListNode.java",
    "lcof52_liang_ge_lian_biao_de_di_yi_ge_gong_gong_jie_dian/Solution.java",
    "lcof53_i_zai_pai_xu_shu_zu_zhong_cha_zhao_shu_zi",
    "lcof53_i_zai_pai_xu_shu_zu_zhong_cha_zhao_shu_zi/Solution.java",
    "lcof53_ii_que_shi_de_shu_zi",
    "lcof53_ii_que_shi_de_shu_zi/Solution.java",
    "lcof55_er_cha_shu_de_shen_du",
    "lcof55_er_cha_shu_de_shen_du/Solution.java",
    "lcof55_er_cha_shu_de_shen_du/TreeNode.java",
    "lcof55_ii_ping_heng_er_cha_shu",
    "lcof55_ii_ping_heng_er_cha_shu/Solution.java",
    "lcof55_ii_ping_heng_er_cha_shu/TreeNode.java",
    "lcof56_i_shu_zu_zhong_shu_zi_chu_xian_de_ci_shu",
    "lcof56_i_shu_zu_zhong_shu_zi_chu_xian_de_ci_shu/Solution.java",
    "lcof56_ii_shu_zu_zhong_shu_zi_chu_xian_de_ci_shu",
    "lcof56_ii_shu_zu_zhong_shu_zi_chu_xian_de_ci_shu/Solution.java",
    "lcof57_he_wei_sde_liang_ge_shu_zi",
    "lcof57_he_wei_sde_liang_ge_shu_zi/Solution.java",
    "lcof57_ii_he_wei_sde_lian_xu_zheng_shu_xu_lie",
    "lcof57_ii_he_wei_sde_lian_xu_zheng_shu_xu_lie/Solution1.java",
    "lcof57_ii_he_wei_sde_lian_xu_zheng_shu_xu_lie/Solution2.java",
    "lcof58_i_fan_zhuan_dan_ci_shun_xu",
    "lcof58_i_fan_zhuan_dan_ci_shun_xu/Solution.java",
    "lcof58_ii_zuo_xuan_zhuan_zi_fu_chuan",
    "lcof58_ii_zuo_xuan_zhuan_zi_fu_chuan/Solution.java",
    "lcof59_i_hua_dong_chuang_kou_de_zui_da_zhi",
    "lcof59_i_hua_dong_chuang_kou_de_zui_da_zhi/Solution.java",
    "lcof59_ii_dui_lie_de_zui_da_zhi",
    "lcof59_ii_dui_lie_de_zui_da_zhi/MaxQueue.java",
    "lcof59_ii_dui_lie_de_zui_da_zhi/\u961f\u5217\u7684\u6700\u5927\u503c.md",
    "lcof60_nge_tou_zi_de_dian_shu",
    "lcof60_nge_tou_zi_de_dian_shu/Solution.java",
    "lcof61_bu_ke_pai_zhong_de_shun_zi",
    "lcof61_bu_ke_pai_zhong_de_shun_zi/Solution.java",
    "lcof62_yuan_quan_zhong_zui_hou_sheng_xia_de_shu_zi",
    "lcof62_yuan_quan_zhong_zui_hou_sheng_xia_de_shu_zi/Solution.java",
    "lcof63_gu_piao_de_zui_da_li_run",
    "lcof63_gu_piao_de_zui_da_li_run/Solution1.java",
    "lcof63_gu_piao_de_zui_da_li_run/Solution2.java",
    "lcof64_qiu_12n",
    "lcof64_qiu_12n/Solution.java",
    "lcof65_bu_yong_jia_jian_cheng_chu_zuo_jia_fa",
    "lcof65_bu_yong_jia_jian_cheng_chu_zuo_jia_fa/Solution.java",
    "lcof66_gou_jian_cheng_ji_shu_zu",
    "lcof66_gou_jian_cheng_ji_shu_zu/Solution.java",
    "lcof67_ba_zi_fu_chuan_zhuan_huan_cheng_zheng_shu",
    "lcof67_ba_zi_fu_chuan_zhuan_huan_cheng_zheng_shu/Solution.java",
    "lcof68_i_er_cha_sou_suo_shu_de_zui_jin_gong_gong_zu_xian",
    "lcof68_i_er_cha_sou_suo_shu_de_zui_jin_gong_gong_zu_xian/Solution.java",
    "lcof68_i_er_cha_sou_suo_shu_de_zui_jin_gong_gong_zu_xian/TreeNode.java",
    "lcof68_ii_er_cha_shu_de_zui_jin_gong_gong_zu_xian",
    "lcof68_ii_er_cha_shu_de_zui_jin_gong_gong_zu_xian/Solution.java",
    "lcof68_ii_er_cha_shu_de_zui_jin_gong_gong_zu_xian/TreeNode.java",
    "lcof_er_cha_sou_suo_shu_de_di_kda_jie_dian",
    "lcof_er_cha_sou_suo_shu_de_di_kda_jie_dian/Solution.java",
    "lcof_er_cha_sou_suo_shu_de_di_kda_jie_dian/TreeNode.java",
    "lcp01_guess_numbers",
    "lcp01_guess_numbers/Solution.java",
    "lcp02_deep_dark_fraction",
    "lcp02_deep_dark_fraction/Solution.java",
    "lcp03_programmable_robot",
    "lcp03_programmable_robot/Solution.java",
    "lcp06_na_ying_bi",
    "lcp06_na_ying_bi/Solution.java",
    "lcp07_chuan_di_xin_xi",
    "lcp07_chuan_di_xin_xi/Solution.java",
    "lcp08_ju_qing_hong_fa_shi_jian",
    "lcp08_ju_qing_hong_fa_shi_jian/Solution.java",
    "lcp09_zui_xiao_tiao_yue_ci_shu",
    "lcp09_zui_xiao_tiao_yue_ci_shu/Solution.java",
    "lcp12_xiao_zhang_shua_ti_ji_hua",
    "lcp12_xiao_zhang_shua_ti_ji_hua/Solution.java",
    "lcp17_nGK0Fy",
    "lcp17_nGK0Fy/Solution.java",
    "lcp18_2vYnGI",
    "lcp18_2vYnGI/Solution.java",
    "lcp19_UlBDOe",
    "lcp19_UlBDOe/Solution.java",
    "lcp22_ccw6C7",
    "lcp22_ccw6C7/Solution.java",
    "lcp23_er94lq",
    "lcp23_er94lq/Solution.java",
    "lcp28_4xy4Wx",
    "lcp28_4xy4Wx/Solution.java",
    "lcp29_SNJvJP",
    "lcp29_SNJvJP/Solution.java",
    "lcp30_p0NxJO",
    "lcp30_p0NxJO/Solution.java",
    "lcp33_o8SXZn",
    "lcp33_o8SXZn/Solution.java",
    "lcp34_er_cha_shu_ran_se_UGC",
    "lcp34_er_cha_shu_ran_se_UGC/Solution.java",
    "lcp34_er_cha_shu_ran_se_UGC/TreeNode.java",
    "lcs01_Ju9Xwi",
    "lcs01_Ju9Xwi/Solution.java",
    "lcs02_WqXACV",
    "lcs02_WqXACV/Solution.java",
    "lcs03_YesdPw",
    "lcs03_YesdPw/Solution.java",
    "question0001_two_sum",
    "question0001_two_sum/Solution1.java",
    "question0001_two_sum/Solution2.java",
    "question0001_two_sum/Solution3.java",
    "question0001_two_sum/\u4e24\u6570\u4e4b\u548c.md",
    "question0002_add_two_numbers",
    "question0002_add_two_numbers/ListNode.java",
    "question0002_add_two_numbers/Solution1.java",
    "question0002_add_two_numbers/Solution2.java",
    "question0002_add_two_numbers/Solution3.java",
    "question0002_add_two_numbers/\u4e24\u6570\u76f8\u52a0.md",
    "question0003_longest_substring_without_repeating_characters",
    "question0003_longest_substring_without_repeating_characters/Solution1.java",
    "question0003_longest_substring_without_repeating_characters/Solution2.java",
    "question0003_longest_substring_without_repeating_characters/Solution3.java",
    "question0003_longest_substring_without_repeating_characters/Solution4.java",
    "question0003_longest_substring_without_repeating_characters/\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32.md",
    "question0004_median_of_two_sorted_arrays",
    "question0004_median_of_two_sorted_arrays/Solution1.java",
    "question0004_median_of_two_sorted_arrays/Solution2.java",
    "question0004_median_of_two_sorted_arrays/\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570.md",
    "question0005_longest_palindromic_substring",
    "question0005_longest_palindromic_substring/Solution1.java",
    "question0005_longest_palindromic_substring/Solution2.java",
    "question0005_longest_palindromic_substring/Solution3.java",
    "question0005_longest_palindromic_substring/\u6700\u957f\u56de\u6587\u5b50\u4e32.md",
    "question0006_zigzag_conversion",
    "question0006_zigzag_conversion/Solution.java",
    "question0006_zigzag_conversion/Z\u5b57\u5f62\u53d8\u6362.md",
    "question0007_reverse_integer",
    "question0007_reverse_integer/Solution1.java",
    "question0007_reverse_integer/Solution2.java",
    "question0007_reverse_integer/\u6574\u6570\u53cd\u8f6c.md",
    "question0008_string_to_integer_atoi",
    "question0008_string_to_integer_atoi/Solution.java",
    "question0008_string_to_integer_atoi/\u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570(atoi).md",
    "question0009_palindrome_number",
    "question0009_palindrome_number/Solution1.java",
    "question0009_palindrome_number/Solution2.java",
    "question0009_palindrome_number/Solution3.java",
    "question0009_palindrome_number/\u56de\u6587\u6570.md",
    "question0010_regular_expression_matching",
    "question0010_regular_expression_matching/Solution1.java",
    "question0010_regular_expression_matching/Solution2.java",
    "question0010_regular_expression_matching/\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d.md",
    "question0011_container_with_most_water",
    "question0011_container_with_most_water/Solution1.java",
    "question0011_container_with_most_water/Solution2.java",
    "question0011_container_with_most_water/\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668.md",
    "question0012_integer_to_roman",
    "question0012_integer_to_roman/Solution.java",
    "question0012_integer_to_roman/\u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57.md",
    "question0013_roman_to_integer",
    "question0013_roman_to_integer/Solution.java",
    "question0013_roman_to_integer/\u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570.md",
    "question0014_longest_common_prefix",
    "question0014_longest_common_prefix/Solution1.java",
    "question0014_longest_common_prefix/Solution2.java",
    "question0014_longest_common_prefix/Solution3.java",
    "question0014_longest_common_prefix/Solution4.java",
    "question0014_longest_common_prefix/Solution5.java",
    "question0015_3sum",
    "question0015_3sum/Solution.java",
    "question0016_3sum_closest",
    "question0016_3sum_closest/Solution1.java",
    "question0016_3sum_closest/Solution2.java",
    "question0017_letter_combinations_of_a_phone_number",
    "question0017_letter_combinations_of_a_phone_number/Solution.java",
    "question0018_4sum",
    "question0018_4sum/Solution1.java",
    "question0018_4sum/Solution2.java",
    "question0018_4sum/Solution3.java",
    "question0018_4sum/Solution4.java",
    "question0018_4sum/Solution5.java",
    "question0019_remove_nth_node_from_end_of_list",
    "question0019_remove_nth_node_from_end_of_list/ListNode.java",
    "question0019_remove_nth_node_from_end_of_list/Solution1.java",
    "question0019_remove_nth_node_from_end_of_list/Solution2.java",
    "question0020_valid_parentheses",
    "question0020_valid_parentheses/Solution.java",
    "question0021_merge_two_sorted_lists",
    "question0021_merge_two_sorted_lists/ListNode.java",
    "question0021_merge_two_sorted_lists/Solution1.java",
    "question0021_merge_two_sorted_lists/Solution2.java",
    "question0022_generate_parentheses",
    "question0022_generate_parentheses/Solution1.java",
    "question0022_generate_parentheses/Solution2.java",
    "question0022_generate_parentheses/Solution3.java",
    "question0022_generate_parentheses/Solution4.java",
    "question0023_merge_k_sorted_lists",
    "question0023_merge_k_sorted_lists/ListNode.java",
    "question0023_merge_k_sorted_lists/Solution1.java",
    "question0023_merge_k_sorted_lists/Solution2.java",
    "question0023_merge_k_sorted_lists/Solution3.java",
    "question0023_merge_k_sorted_lists/Solution4.java",
    "question0024_swap_nodes_in_pairs",
    "question0024_swap_nodes_in_pairs/ListNode.java",
    "question0024_swap_nodes_in_pairs/Solution1.java",
    "question0024_swap_nodes_in_pairs/Solution2.java",
    "question0025_reverse_nodes_in_k_group",
    "question0025_reverse_nodes_in_k_group/ListNode.java",
    "question0025_reverse_nodes_in_k_group/Solution.java",
    "question0026_remove_duplicates_from_sorted_array",
    "question0026_remove_duplicates_from_sorted_array/Solution.java",
    "question0027_remove_element",
    "question0027_remove_element/Solution.java",
    "question0028_implement_strstr",
    "question0028_implement_strstr/Solution1.java",
    "question0028_implement_strstr/Solution2.java",
    "question0029_divide_two_integers",
    "question0029_divide_two_integers/Solution.java",
    "question0030_substring_with_concatenation_of_all_words",
    "question0030_substring_with_concatenation_of_all_words/Solution1.java",
    "question0030_substring_with_concatenation_of_all_words/Solution2.java",
    "question0031_next_permutation",
    "question0031_next_permutation/Solution.java",
    "question0032_longest_valid_parentheses",
    "question0032_longest_valid_parentheses/Solution1.java",
    "question0032_longest_valid_parentheses/Solution2.java",
    "question0033_search_in_rotated_sorted_array",
    "question0033_search_in_rotated_sorted_array/Solution.java",
    "question0034_find_first_and_last_position_of_element_in_sorted_array",
    "question0034_find_first_and_last_position_of_element_in_sorted_array/Solution.java",
    "question0035_search_insert_position",
    "question0035_search_insert_position/Solution1.java",
    "question0035_search_insert_position/Solution2.java",
    "question0036_valid_sudoku",
    "question0036_valid_sudoku/Solution.java",
    "question0037_sudoku_solver",
    "question0037_sudoku_solver/Solution.java",
    "question0038_count_and_say",
    "question0038_count_and_say/Solution.java",
    "question0039_combination_sum",
    "question0039_combination_sum/Solution.java",
    "question0040_combination_sum_ii",
    "question0040_combination_sum_ii/Solution.java",
    "question0041_first_missing_positive",
    "question0041_first_missing_positive/Solution.java",
    "question0042_trapping_rain_water",
    "question0042_trapping_rain_water/Solution1.java",
    "question0042_trapping_rain_water/Solution2.java",
    "question0042_trapping_rain_water/Solution3.java",
    "question0043_multiply_strings",
    "question0043_multiply_strings/Solution.java",
    "question0044_wildcard_matching",
    "question0044_wildcard_matching/Solution.java",
    "question0045_jump_game_ii",
    "question0045_jump_game_ii/Solution.java",
    "question0046_permutations",
    "question0046_permutations/Solution1.java",
    "question0046_permutations/Solution2.java",
    "question0047_permutations_ii",
    "question0047_permutations_ii/Solution.java",
    "question0048_rotate_image",
    "question0048_rotate_image/Solution.java",
    "question0049_group_anagrams",
    "question0049_group_anagrams/Solution.java",
    "question0050_powx_n",
    "question0050_powx_n/Solution.java",
    "question0051_n_queens",
    "question0051_n_queens/Solution1.java",
    "question0051_n_queens/Solution2.java",
    "question0052_n_queens_ii",
    "question0052_n_queens_ii/Solution1.java",
    "question0052_n_queens_ii/Solution2.java",
    "question0053_maximum_subarray",
    "question0053_maximum_subarray/Solution1.java",
    "question0053_maximum_subarray/Solution2.java",
    "question0053_maximum_subarray/Solution3.java",
    "question0054_spiral_matrix",
    "question0054_spiral_matrix/Solution.java",
    "question0055_jump_game",
    "question0055_jump_game/Solution1.java",
    "question0055_jump_game/Solution2.java",
    "question0055_jump_game/Solution3.java",
    "question0056_merge_intervals",
    "question0056_merge_intervals/Solution1.java",
    "question0056_merge_intervals/Solution2.java",
    "question0057_insert_interval",
    "question0057_insert_interval/Solution.java",
    "question0058_length_of_last_word",
    "question0058_length_of_last_word/Solution.java",
    "question0059_spiral_matrix_ii",
    "question0059_spiral_matrix_ii/Solution.java",
    "question0060_permutation_sequence",
    "question0060_permutation_sequence/Solution.java",
    "question0061_rotate_list",
    "question0061_rotate_list/ListNode.java",
    "question0061_rotate_list/Solution.java",
    "question0062_unique_paths",
    "question0062_unique_paths/Solution.java",
    "question0063_unique_paths_ii",
    "question0063_unique_paths_ii/Solution.java",
    "question0064_minimum_path_sum",
    "question0064_minimum_path_sum/Solution.java",
    "question0065_valid_number",
    "question0065_valid_number/Solution.java",
    "question0066_plus_one",
    "question0066_plus_one/Solution.java",
    "question0067_add_binary",
    "question0067_add_binary/Solution.java",
    "question0068_text_justification",
    "question0068_text_justification/Solution.java",
    "question0069_sqrtx",
    "question0069_sqrtx/Solution1.java",
    "question0069_sqrtx/Solution2.java",
    "question0069_sqrtx/Solution3.java",
    "question0070_climbing_stairs",
    "question0070_climbing_stairs/Solution1.java",
    "question0070_climbing_stairs/Solution2.java",
    "question0071_simplify_path",
    "question0071_simplify_path/Solution.java",
    "question0072_edit_distance",
    "question0072_edit_distance/Solution1.java",
    "question0072_edit_distance/Solution2.java",
    "question0073_set_matrix_zeroes",
    "question0073_set_matrix_zeroes/Solution1.java",
    "question0073_set_matrix_zeroes/Solution2.java",
    "question0073_set_matrix_zeroes/Solution3.java",
    "question0074_search_a_2d_matrix",
    "question0074_search_a_2d_matrix/Solution1.java",
    "question0074_search_a_2d_matrix/Solution2.java",
    "question0075_sort_colors",
    "question0075_sort_colors/Solution.java",
    "question0076_minimum_window_substring",
    "question0076_minimum_window_substring/Solution.java",
    "question0077_combinations",
    "question0077_combinations/Solution1.java",
    "question0077_combinations/Solution2.java",
    "question0078_subsets",
    "question0078_subsets/Solution.java",
    "question0079_word_search",
    "question0079_word_search/Solution.java",
    "question0080_remove_duplicates_from_sorted_array_ii",
    "question0080_remove_duplicates_from_sorted_array_ii/Solution.java",
    "question0081_search_in_rotated_sorted_array_ii",
    "question0081_search_in_rotated_sorted_array_ii/Solution.java",
    "question0082_remove_duplicates_from_sorted_list_ii",
    "question0082_remove_duplicates_from_sorted_list_ii/ListNode.java",
    "question0082_remove_duplicates_from_sorted_list_ii/Solution.java",
    "question0083",
    "question0083/ListNode.java",
    "question0083/Solution.java",
    "question0084_largest_rectangle_in_histogram",
    "question0084_largest_rectangle_in_histogram/Solution1.java",
    "question0084_largest_rectangle_in_histogram/Solution2.java",
    "question0085_maximal_rectangle",
    "question0085_maximal_rectangle/Solution.java",
    "question0086_partition_list",
    "question0086_partition_list/ListNode.java",
    "question0086_partition_list/Solution.java",
    "question0087_scramble_string",
    "question0087_scramble_string/Solution.java",
    "question0088_merge_sorted_array",
    "question0088_merge_sorted_array/Solution.java",
    "question0090_subsets_ii",
    "question0090_subsets_ii/Solution.java",
    "question0091_decode_ways",
    "question0091_decode_ways/Solution.java",
    "question0092_reverse_linked_list_ii",
    "question0092_reverse_linked_list_ii/ListNode.java",
    "question0092_reverse_linked_list_ii/Solution1.java",
    "question0092_reverse_linked_list_ii/Solution2.java",
    "question0093_restore_ip_addresses",
    "question0093_restore_ip_addresses/Solution.java",
    "question0094_binary_tree_inorder_traversal",
    "question0094_binary_tree_inorder_traversal/Solution1.java",
    "question0094_binary_tree_inorder_traversal/Solution2.java",
    "question0094_binary_tree_inorder_traversal/Solution3.java",
    "question0094_binary_tree_inorder_traversal/Solution4.java",
    "question0094_binary_tree_inorder_traversal/TreeNode.java",
    "question0095",
    "question0095/Solution.java",
    "question0095/TreeNode.java",
    "question0098_validate_binary_search_tree",
    "question0098_validate_binary_search_tree/Solution.java",
    "question0098_validate_binary_search_tree/TreeNode.java",
    "question0099_recover_binary_search_tree",
    "question0099_recover_binary_search_tree/Solution1.java",
    "question0099_recover_binary_search_tree/Solution2.java",
    "question0099_recover_binary_search_tree/Solution3.java",
    "question0099_recover_binary_search_tree/TreeNode.java",
    "question0100_same_tree",
    "question0100_same_tree/Solution1.java",
    "question0100_same_tree/Solution2.java",
    "question0100_same_tree/TreeNode.java",
    "question0101_symmetric_tree",
    "question0101_symmetric_tree/Solution1.java",
    "question0101_symmetric_tree/Solution2.java",
    "question0101_symmetric_tree/TreeNode.java",
    "question0102_binary_tree_level_order_traversal",
    "question0102_binary_tree_level_order_traversal/Solution.java",
    "question0102_binary_tree_level_order_traversal/TreeNode.java",
    "question0103_binary_tree_zigzag_level_order_traversal",
    "question0103_binary_tree_zigzag_level_order_traversal/Solution1.java",
    "question0103_binary_tree_zigzag_level_order_traversal/Solution2.java",
    "question0103_binary_tree_zigzag_level_order_traversal/TreeNode.java",
    "question0104",
    "question0104/Solution.java",
    "question0104/TreeNode.java",
    "question0105",
    "question0105/Solution.java",
    "question0105/TreeNode.java",
    "question0106_construct_binary_tree_from_inorder_and_postorder_traversal",
    "question0106_construct_binary_tree_from_inorder_and_postorder_traversal/Solution.java",
    "question0106_construct_binary_tree_from_inorder_and_postorder_traversal/TreeNode.java",
    "question0107_binary_tree_level_order_traversal_ii",
    "question0107_binary_tree_level_order_traversal_ii/Solution.java",
    "question0107_binary_tree_level_order_traversal_ii/TreeNode.java",
    "question0108_convert_sorted_array_to_binary_search_tree",
    "question0108_convert_sorted_array_to_binary_search_tree/Solution.java",
    "question0108_convert_sorted_array_to_binary_search_tree/TreeNode.java",
    "question0109_convert_sorted_list_to_binary_search_tree",
    "question0109_convert_sorted_list_to_binary_search_tree/ListNode.java",
    "question0109_convert_sorted_list_to_binary_search_tree/Solution.java",
    "question0109_convert_sorted_list_to_binary_search_tree/TreeNode.java",
    "question0110_balanced_binary_tree",
    "question0110_balanced_binary_tree/Solution1.java",
    "question0110_balanced_binary_tree/Solution2.java",
    "question0110_balanced_binary_tree/TreeNode.java",
    "question0111_minimum_depth_of_binary_tree",
    "question0111_minimum_depth_of_binary_tree/Solution1.java",
    "question0111_minimum_depth_of_binary_tree/Solution2.java",
    "question0111_minimum_depth_of_binary_tree/TreeNode.java",
    "question0113_path_sum_ii",
    "question0113_path_sum_ii/Solution1.java",
    "question0113_path_sum_ii/Solution2.java",
    "question0113_path_sum_ii/TreeNode.java",
    "question0114_flatten_binary_tree_to_linked_list",
    "question0114_flatten_binary_tree_to_linked_list/Solution1.java",
    "question0114_flatten_binary_tree_to_linked_list/Solution2.java",
    "question0114_flatten_binary_tree_to_linked_list/Solution3.java",
    "question0114_flatten_binary_tree_to_linked_list/Solution4.java",
    "question0114_flatten_binary_tree_to_linked_list/TreeNode.java",
    "question0115_distinct_subsequences",
    "question0115_distinct_subsequences/Solution.java",
    "question0116_populating_next_right_pointers_in_each_node",
    "question0116_populating_next_right_pointers_in_each_node/Node.java",
    "question0116_populating_next_right_pointers_in_each_node/Solution1.java",
    "question0116_populating_next_right_pointers_in_each_node/Solution2.java",
    "question0116_populating_next_right_pointers_in_each_node/Solution3.java",
    "question0117_populating_next_right_pointers_in_each_node_ii",
    "question0117_populating_next_right_pointers_in_each_node_ii/Node.java",
    "question0117_populating_next_right_pointers_in_each_node_ii/Solution1.java",
    "question0117_populating_next_right_pointers_in_each_node_ii/Solution2.java",
    "question0119_pascals_triangle_ii",
    "question0119_pascals_triangle_ii/Solution.java",
    "question0120_triangle",
    "question0120_triangle/Solution.java",
    "question0121_best_time_to_buy_and_sell_stock",
    "question0121_best_time_to_buy_and_sell_stock/Solution1.java",
    "question0121_best_time_to_buy_and_sell_stock/Solution2.java",
    "question0121_best_time_to_buy_and_sell_stock/\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a.md",
    "question0122_best_time_to_buy_and_sell_stock_ii",
    "question0122_best_time_to_buy_and_sell_stock_ii/Solution1.java",
    "question0122_best_time_to_buy_and_sell_stock_ii/Solution2.java",
    "question0122_best_time_to_buy_and_sell_stock_ii/Solution3.java",
    "question0123_best_time_to_buy_and_sell_stock_iii",
    "question0123_best_time_to_buy_and_sell_stock_iii/Solution1.java",
    "question0123_best_time_to_buy_and_sell_stock_iii/Solution2.java",
    "question0123_best_time_to_buy_and_sell_stock_iii/Solution3.java",
    "question0124_binary_tree_maximum_path_sum",
    "question0124_binary_tree_maximum_path_sum/Solution.java",
    "question0124_binary_tree_maximum_path_sum/TreeNode.java",
    "question0125_valid_palindrome",
    "question0125_valid_palindrome/Solution.java",
    "question0126_word_ladder_ii",
    "question0126_word_ladder_ii/Solution1.java",
    "question0126_word_ladder_ii/Solution2.java",
    "question0128_longest_consecutive_sequence",
    "question0128_longest_consecutive_sequence/Solution.java",
    "question0129_sum_root_to_leaf_numbers",
    "question0129_sum_root_to_leaf_numbers/Solution.java",
    "question0129_sum_root_to_leaf_numbers/TreeNode.java",
    "question0130_surrounded_regions",
    "question0130_surrounded_regions/Solution1.java",
    "question0130_surrounded_regions/Solution2.java",
    "question0131_palindrome_partitioning",
    "question0131_palindrome_partitioning/Solution.java",
    "question0132_palindrome_partitioning_ii",
    "question0132_palindrome_partitioning_ii/Solution.java",
    "question0133_clone_graph",
    "question0133_clone_graph/Node.java",
    "question0133_clone_graph/Solution1.java",
    "question0133_clone_graph/Solution2.java",
    "question0134_gas_station",
    "question0134_gas_station/Solution1.java",
    "question0134_gas_station/Solution2.java",
    "question0135_candy",
    "question0135_candy/Solution.java",
    "question0136_single_number",
    "question0136_single_number/Solution.java",
    "question0137",
    "question0137/Solution1.java",
    "question0137/Solution2.java",
    "question0138",
    "question0138/Node.java",
    "question0138/Solution1.java",
    "question0138/Solution2.java",
    "question0138/Solution3.java",
    "question0139_word_break",
    "question0139_word_break/Solution1.java",
    "question0139_word_break/Solution2.java",
    "question0140_word_break_ii",
    "question0140_word_break_ii/Solution1.java",
    "question0140_word_break_ii/Solution2.java",
    "question0140_word_break_ii/Solution3.java",
    "question0141_linked_list_cycle",
    "question0141_linked_list_cycle/ListNode.java",
    "question0141_linked_list_cycle/Solution1.java",
    "question0141_linked_list_cycle/Solution2.java",
    "question0142_linked_list_cycle_ii",
    "question0142_linked_list_cycle_ii/ListNode.java",
    "question0142_linked_list_cycle_ii/Solution1.java",
    "question0142_linked_list_cycle_ii/Solution2.java",
    "question0143_reorder_list",
    "question0143_reorder_list/ListNode.java",
    "question0143_reorder_list/Solution.java",
    "question0144_binary_tree_preorder_traversal",
    "question0144_binary_tree_preorder_traversal/Solution1.java",
    "question0144_binary_tree_preorder_traversal/Solution2.java",
    "question0144_binary_tree_preorder_traversal/Solution3.java",
    "question0144_binary_tree_preorder_traversal/Solution4.java",
    "question0144_binary_tree_preorder_traversal/TreeNode.java",
    "question0145_binary_tree_postorder_traversal",
    "question0145_binary_tree_postorder_traversal/Solution1.java",
    "question0145_binary_tree_postorder_traversal/Solution2.java",
    "question0145_binary_tree_postorder_traversal/Solution3.java",
    "question0145_binary_tree_postorder_traversal/Solution4.java",
    "question0145_binary_tree_postorder_traversal/Solution5.java",
    "question0145_binary_tree_postorder_traversal/Solution6.java",
    "question0145_binary_tree_postorder_traversal/Solution7.java",
    "question0145_binary_tree_postorder_traversal/TreeNode.java",
    "question0146_lru_cache",
    "question0146_lru_cache/LRUCache1.java",
    "question0146_lru_cache/LRUCache2.java",
    "question0148_sort_list",
    "question0148_sort_list/ListNode.java",
    "question0148_sort_list/Solution1.java",
    "question0148_sort_list/Solution2.java",
    "question0150_evaluate_reverse_polish_notation",
    "question0150_evaluate_reverse_polish_notation/Solution.java",
    "question0151_reverse_words_in_a_string",
    "question0151_reverse_words_in_a_string/Solution.java",
    "question0152_maximum_product_subarray",
    "question0152_maximum_product_subarray/Solution1.java",
    "question0152_maximum_product_subarray/Solution2.java",
    "question0152_maximum_product_subarray/Solution3.java",
    "question0152_maximum_product_subarray/Solution4.java",
    "question0153_find_minimum_in_rotated_sorted_array",
    "question0153_find_minimum_in_rotated_sorted_array/Solution1.java",
    "question0153_find_minimum_in_rotated_sorted_array/Solution2.java",
    "question0154_find_minimum_in_rotated_sorted_array_ii",
    "question0154_find_minimum_in_rotated_sorted_array_ii/Solution1.java",
    "question0154_find_minimum_in_rotated_sorted_array_ii/Solution2.java",
    "question0155_min_stack",
    "question0155_min_stack/MinStack.java",
    "question0156",
    "question0156/Solution.java",
    "question0156/TreeNode.java",
    "question0157_read_n_characters_given_read4",
    "question0157_read_n_characters_given_read4/Reader4.java",
    "question0157_read_n_characters_given_read4/Solution.java",
    "question0158_read_n_characters_given_read4_ii_call_multiple_times",
    "question0158_read_n_characters_given_read4_ii_call_multiple_times/Reader4.java",
    "question0158_read_n_characters_given_read4_ii_call_multiple_times/Solution.java",
    "question0159_longest_substring_with_at_most_two_distinct_characters",
    "question0159_longest_substring_with_at_most_two_distinct_characters/Solution.java",
    "question0160_intersection_of_two_linked_lists",
    "question0160_intersection_of_two_linked_lists/ListNode.java",
    "question0160_intersection_of_two_linked_lists/Solution1.java",
    "question0160_intersection_of_two_linked_lists/Solution2.java",
    "question0160_intersection_of_two_linked_lists/Solution3.java",
    "question0161_one_edit_distance",
    "question0161_one_edit_distance/Solution.java",
    "question0163",
    "question0163/Solution.java",
    "question0169_majority_element",
    "question0169_majority_element/Solution1.java",
    "question0169_majority_element/Solution2.java",
    "question0169_majority_element/Solution3.java",
    "question0169_majority_element/Solution4.java",
    "question0169_majority_element/Solution5.java",
    "question0169_majority_element/Solution6.java",
    "question0169_majority_element/Solution7.java",
    "question0169_majority_element/\u591a\u6570\u5143\u7d20.md",
    "question0170_two_sum_iii_data_structure_design",
    "question0170_two_sum_iii_data_structure_design/TwoSum.java",
    "question0173_binary_search_tree_iterator",
    "question0173_binary_search_tree_iterator/BSTIterator.java",
    "question0173_binary_search_tree_iterator/TreeNode.java",
    "question0175_combine_two_tables",
    "question0175_combine_two_tables/Solution.sql",
    "question0176_second_highest_salary",
    "question0176_second_highest_salary/Solution1.sql",
    "question0176_second_highest_salary/Solution2.sql",
    "question0177_nth_highest_salary",
    "question0177_nth_highest_salary/Solution.sql",
    "question0179_largest_number",
    "question0179_largest_number/Solution.java",
    "question0186_reverse_words_in_a_string_ii",
    "question0186_reverse_words_in_a_string_ii/Solution.java",
    "question0188_best_time_to_buy_and_sell_stock_iv",
    "question0188_best_time_to_buy_and_sell_stock_iv/Solution.java",
    "question0189_rotate_array",
    "question0189_rotate_array/Solution1.java",
    "question0189_rotate_array/Solution2.java",
    "question0189_rotate_array/Solution3.java",
    "question0190_reverse_bits",
    "question0190_reverse_bits/Solution1.java",
    "question0190_reverse_bits/Solution2.java",
    "question0191_number_of_1_bits",
    "question0191_number_of_1_bits/Solution1.java",
    "question0191_number_of_1_bits/Solution2.java",
    "question0191_number_of_1_bits/Solution3.java",
    "question0198_house_robber",
    "question0198_house_robber/Solution.java",
    "question0199_binary_tree_right_side_view",
    "question0199_binary_tree_right_side_view/Solution1.java",
    "question0199_binary_tree_right_side_view/Solution2.java",
    "question0199_binary_tree_right_side_view/TreeNode.java",
    "question0200_number_of_islands",
    "question0200_number_of_islands/Solution1.java",
    "question0200_number_of_islands/Solution2.java",
    "question0200_number_of_islands/Solution3.java",
    "question0201_bitwise_and_of_numbers_range",
    "question0201_bitwise_and_of_numbers_range/Solution1.java",
    "question0201_bitwise_and_of_numbers_range/Solution2.java",
    "question0202_happy_number",
    "question0202_happy_number/Solution.java",
    "question0203_remove_linked_list_elements",
    "question0203_remove_linked_list_elements/ListNode.java",
    "question0203_remove_linked_list_elements/Solution.java",
    "question0205_isomorphic_strings",
    "question0205_isomorphic_strings/Solution.java",
    "question0206_reverse_linked_list",
    "question0206_reverse_linked_list/ListNode.java",
    "question0206_reverse_linked_list/Solution1.java",
    "question0206_reverse_linked_list/Solution2.java",
    "question0206_reverse_linked_list/\u53cd\u8f6c\u94fe\u8868.md",
    "question0207_course_schedule",
    "question0207_course_schedule/Solution1.java",
    "question0207_course_schedule/Solution2.java",
    "question0208_implement_trie_prefix_tree",
    "question0208_implement_trie_prefix_tree/Trie.java",
    "question0209_minimum_size_subarray_sum",
    "question0209_minimum_size_subarray_sum/Solution1.java",
    "question0209_minimum_size_subarray_sum/Solution2.java",
    "question0209_minimum_size_subarray_sum/Solution3.java",
    "question0210_course_schedule_ii",
    "question0210_course_schedule_ii/Solution1.java",
    "question0210_course_schedule_ii/Solution2.java",
    "question0211_add_and_search_word_data_structure_design",
    "question0211_add_and_search_word_data_structure_design/WordDictionary.java",
    "question0213_house_robber_ii",
    "question0213_house_robber_ii/Solution.java",
    "question0214_shortest_palindrome",
    "question0214_shortest_palindrome/Solution1.java",
    "question0214_shortest_palindrome/Solution2.java",
    "question0215_kth_largest_element_in_an_array",
    "question0215_kth_largest_element_in_an_array/Solution.java",
    "question0216_combination_sum_iii",
    "question0216_combination_sum_iii/Solution.java",
    "question0218_the_skyline_problem",
    "question0218_the_skyline_problem/Solution.java",
    "question0220_contains_duplicate_iii",
    "question0220_contains_duplicate_iii/Solution1.java",
    "question0220_contains_duplicate_iii/Solution2.java",
    "question0221_maximal_square",
    "question0221_maximal_square/Solution.java",
    "question0222_count_complete_tree_nodes",
    "question0222_count_complete_tree_nodes/Solution1.java",
    "question0222_count_complete_tree_nodes/Solution2.java",
    "question0222_count_complete_tree_nodes/TreeNode.java",
    "question0224_basic_calculator",
    "question0224_basic_calculator/Solution.java",
    "question0225_implement_stack_using_queues",
    "question0225_implement_stack_using_queues/MyStack.java",
    "question0225_implement_stack_using_queues/\u7528\u961f\u5217\u5b9e\u73b0\u6808.md",
    "question0226_invert_binary_tree",
    "question0226_invert_binary_tree/Solution1.java",
    "question0226_invert_binary_tree/Solution2.java",
    "question0226_invert_binary_tree/TreeNode.java",
    "question0227_basic_calculator_ii",
    "question0227_basic_calculator_ii/Solution.java",
    "question0228_summary_ranges",
    "question0228_summary_ranges/Solution.java",
    "question0230",
    "question0230/Solution1.java",
    "question0230/Solution2.java",
    "question0230/TreeNode.java",
    "question0231_power_of_two",
    "question0231_power_of_two/Solution1.java",
    "question0231_power_of_two/Solution2.java",
    "question0231_power_of_two/Solution3.java",
    "question0231_power_of_two/Solution4.java",
    "question0232_implement_queue_using_stacks",
    "question0232_implement_queue_using_stacks/MyQueue.java",
    "question0233",
    "question0233/Solution.java",
    "question0234_palindrome_linked_list",
    "question0234_palindrome_linked_list/ListNode.java",
    "question0234_palindrome_linked_list/Solution.java",
    "question0235_lowest_common_ancestor_of_a_binary_search_tree",
    "question0235_lowest_common_ancestor_of_a_binary_search_tree/Solution1.java",
    "question0235_lowest_common_ancestor_of_a_binary_search_tree/Solution2.java",
    "question0235_lowest_common_ancestor_of_a_binary_search_tree/TreeNode.java",
    "question0236_lowest_common_ancestor_of_a_binary_tree",
    "question0236_lowest_common_ancestor_of_a_binary_tree/Solution.java",
    "question0236_lowest_common_ancestor_of_a_binary_tree/TreeNode.java",
    "question0238_product_of_array_except_self",
    "question0238_product_of_array_except_self/Solution1.java",
    "question0238_product_of_array_except_self/Solution2.java",
    "question0239_sliding_window_maximum",
    "question0239_sliding_window_maximum/Solution.java",
    "question0242_valid_anagram",
    "question0242_valid_anagram/Solution1.java",
    "question0242_valid_anagram/Solution2.java",
    "question0243",
    "question0243/Solution1.java",
    "question0243/Solution2.java",
    "question0244",
    "question0244/WordDistance1.java",
    "question0244/WordDistance2.java",
    "question0245",
    "question0245/Solution.java",
    "question0246",
    "question0246/Solution.java",
    "question0247_strobogrammatic_number_ii",
    "question0247_strobogrammatic_number_ii/Solution.java",
    "question0249_group_shifted_strings",
    "question0249_group_shifted_strings/Solution.java",
    "question0250_count_univalue_subtrees",
    "question0250_count_univalue_subtrees/Solution1.java",
    "question0250_count_univalue_subtrees/Solution2.java",
    "question0250_count_univalue_subtrees/Solution3.java",
    "question0250_count_univalue_subtrees/TreeNode.java",
    "question0251_flatten_2d_vector",
    "question0251_flatten_2d_vector/Vector2D.java",
    "question0252",
    "question0252/Solution.java",
    "question0253",
    "question0253/Solution1.java",
    "question0253/Solution2.java",
    "question0254_factor_combinations",
    "question0254_factor_combinations/Solution1.java",
    "question0254_factor_combinations/Solution2.java",
    "question0255",
    "question0255/Solution1.java",
    "question0255/Solution2.java",
    "question0256",
    "question0256/Solution1.java",
    "question0256/Solution2.java",
    "question0257_binary_tree_paths",
    "question0257_binary_tree_paths/Solution1.java",
    "question0257_binary_tree_paths/Solution2.java",
    "question0257_binary_tree_paths/Solution3.java",
    "question0257_binary_tree_paths/TreeNode.java",
    "question0259",
    "question0259/Solution.java",
    "question0260_single_number_iii",
    "question0260_single_number_iii/Solution.java",
    "question0261",
    "question0261/Solution.java",
    "question0263_ugly_number",
    "question0263_ugly_number/Solution.java",
    "question0264_ugly_number_ii",
    "question0264_ugly_number_ii/Solution.java",
    "question0265",
    "question0265/Solution1.java",
    "question0265/Solution2.java",
    "question0266",
    "question0266/Solution.java",
    "question0267_palindrome_permutation_ii",
    "question0267_palindrome_permutation_ii/Solution.java",
    "question0270_closest_binary_search_tree_value",
    "question0270_closest_binary_search_tree_value/Solution1.java",
    "question0270_closest_binary_search_tree_value/Solution2.java",
    "question0270_closest_binary_search_tree_value/TreeNode.java",
    "question0271_encode_and_decode_strings",
    "question0271_encode_and_decode_strings/Codec.java",
    "question0272_closest_binary_search_tree_value_ii",
    "question0272_closest_binary_search_tree_value_ii/Solution1.java",
    "question0272_closest_binary_search_tree_value_ii/Solution2.java",
    "question0272_closest_binary_search_tree_value_ii/TreeNode.java",
    "question0276",
    "question0276/Solution.java",
    "question0277_find_the_celebrity",
    "question0277_find_the_celebrity/Relation.java",
    "question0277_find_the_celebrity/Solution1.java",
    "question0277_find_the_celebrity/Solution2.java",
    "question0278_first_bad_version",
    "question0278_first_bad_version/Solution.java",
    "question0278_first_bad_version/VersionControl.java",
    "question0279_perfect_squares",
    "question0279_perfect_squares/Solution.java",
    "question0280_wiggle_sort",
    "question0280_wiggle_sort/Solution1.java",
    "question0280_wiggle_sort/Solution2.java",
    "question0281_zigzag_iterator",
    "question0281_zigzag_iterator/ZigzagIterator.java",
    "question0282_expression_add_operators",
    "question0282_expression_add_operators/Solution.java",
    "question0283_move_zeroes",
    "question0283_move_zeroes/Solution.java",
    "question0284",
    "question0284/PeekingIterator.java",
    "question0285_inorder_successor_in_bst",
    "question0285_inorder_successor_in_bst/Solution1.java",
    "question0285_inorder_successor_in_bst/Solution2.java",
    "question0285_inorder_successor_in_bst/TreeNode.java",
    "question0286_walls_and_gates",
    "question0286_walls_and_gates/Solution.java",
    "question0287_find_the_duplicate_number",
    "question0287_find_the_duplicate_number/Solution.java",
    "question0288_unique_word_abbreviation",
    "question0288_unique_word_abbreviation/ValidWordAbbr.java",
    "question0289_game_of_life",
    "question0289_game_of_life/Solution1.java",
    "question0289_game_of_life/Solution2.java",
    "question0292_nim_game",
    "question0292_nim_game/Solution.java",
    "question0293_flip_game",
    "question0293_flip_game/Solution.java",
    "question0294_flip_game_ii",
    "question0294_flip_game_ii/Solution.java",
    "question0295_find_median_from_data_stream",
    "question0295_find_median_from_data_stream/MedianFinder.java",
    "question0297_serialize_and_deserialize_binary_tree",
    "question0297_serialize_and_deserialize_binary_tree/Codec.java",
    "question0297_serialize_and_deserialize_binary_tree/TreeNode.java",
    "question0298",
    "question0298/Solution.java",
    "question0298/TreeNode.java",
    "question0299_bulls_and_cows",
    "question0299_bulls_and_cows/Solution.java",
    "question0300_longest_increasing_subsequence",
    "question0300_longest_increasing_subsequence/Solution1.java",
    "question0300_longest_increasing_subsequence/Solution2.java",
    "question0300_longest_increasing_subsequence/\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217.md",
    "question0303_range_sum_query_immutable",
    "question0303_range_sum_query_immutable/NumArray1.java",
    "question0303_range_sum_query_immutable/NumArray2.java",
    "question0304_range_sum_query_2d_immutable",
    "question0304_range_sum_query_2d_immutable/NumMatrix.java",
    "question0306",
    "question0306/Solution.java",
    "question0307_range_sum_query_mutable",
    "question0307_range_sum_query_mutable/NumArray.java",
    "question0309_best_time_to_buy_and_sell_stock_with_cooldown",
    "question0309_best_time_to_buy_and_sell_stock_with_cooldown/Solution1.java",
    "question0309_best_time_to_buy_and_sell_stock_with_cooldown/Solution2.java",
    "question0310_minimum_height_trees",
    "question0310_minimum_height_trees/Solution.java",
    "question0311_sparse_matrix_multiplication",
    "question0311_sparse_matrix_multiplication/Solution.java",
    "question0312_burst_balloons",
    "question0312_burst_balloons/Solution1.java",
    "question0312_burst_balloons/Solution2.java",
    "question0313_super_ugly_number",
    "question0313_super_ugly_number/Solution.java",
    "question0314",
    "question0314/Solution.java",
    "question0314/TreeNode.java",
    "question0315_count_of_smaller_numbers_after_self",
    "question0315_count_of_smaller_numbers_after_self/Solution.java",
    "question0316_remove_duplicate_letters",
    "question0316_remove_duplicate_letters/Solution.java",
    "question0318_maximum_product_of_word_lengths",
    "question0318_maximum_product_of_word_lengths/Solution.java",
    "question0319_bulb_switcher",
    "question0319_bulb_switcher/Solution.java",
    "question0320_generalized_abbreviation",
    "question0320_generalized_abbreviation/Solution.java",
    "question0321",
    "question0321/Solution.java",
    "question0322_coin_change",
    "question0322_coin_change/Solution1.java",
    "question0322_coin_change/Solution2.java",
    "question0322_coin_change/\u96f6\u94b1\u5151\u6362.md",
    "question0323_number_of_connected_components_in_an_undirected_graph",
    "question0323_number_of_connected_components_in_an_undirected_graph/Solution1.java",
    "question0323_number_of_connected_components_in_an_undirected_graph/Solution2.java",
    "question0324_wiggle_sort_ii",
    "question0324_wiggle_sort_ii/Solution1.java",
    "question0324_wiggle_sort_ii/Solution2.java",
    "question0325_maximum_size_subarray_sum_equals_k",
    "question0325_maximum_size_subarray_sum_equals_k/Solution.java",
    "question0326",
    "question0326/Solution1.java",
    "question0326/Solution2.java",
    "question0326/Solution3.java",
    "question0327_count_of_range_sum",
    "question0327_count_of_range_sum/Solution1.java",
    "question0327_count_of_range_sum/Solution2.java",
    "question0328_odd_even_linked_list",
    "question0328_odd_even_linked_list/ListNode.java",
    "question0328_odd_even_linked_list/Solution.java",
    "question0329",
    "question0329/Solution1.java",
    "question0329/Solution2.java",
    "question0329/Solution3.java",
    "question0330_patching_array",
    "question0330_patching_array/Solution.java",
    "question0331_verify_preorder_serialization_of_a_binary_tree",
    "question0331_verify_preorder_serialization_of_a_binary_tree/Solution1.java",
    "question0331_verify_preorder_serialization_of_a_binary_tree/Solution2.java",
    "question0332_reconstruct_itinerary",
    "question0332_reconstruct_itinerary/Solution.java",
    "question0333",
    "question0333/Solution.java",
    "question0333/TreeNode.java",
    "question0334",
    "question0334/Solution.java",
    "question0335_self_crossing",
    "question0335_self_crossing/Solution.java",
    "question0336_palindrome_pairs",
    "question0336_palindrome_pairs/Solution1.java",
    "question0336_palindrome_pairs/Solution2.java",
    "question0337_house_robber_iii",
    "question0337_house_robber_iii/Solution1.java",
    "question0337_house_robber_iii/Solution2.java",
    "question0337_house_robber_iii/TreeNode.java",
    "question0338_counting_bits",
    "question0338_counting_bits/Solution.java",
    "question0339_nested_list_weight_sum",
    "question0339_nested_list_weight_sum/NestedInteger.java",
    "question0339_nested_list_weight_sum/Solution1.java",
    "question0339_nested_list_weight_sum/Solution2.java",
    "question0341_flatten_nested_list_iterator",
    "question0341_flatten_nested_list_iterator/NestedInteger.java",
    "question0341_flatten_nested_list_iterator/NestedIterator.java",
    "question0342_power_of_four",
    "question0342_power_of_four/Solution.java",
    "question0343_integer_break",
    "question0343_integer_break/Solution1.java",
    "question0343_integer_break/Solution2.java",
    "question0344_reverse_string",
    "question0344_reverse_string/Solution.java",
    "question0346_moving_average_from_data_stream",
    "question0346_moving_average_from_data_stream/MovingAverage.java",
    "question0347_top_k_frequent_elements",
    "question0347_top_k_frequent_elements/Solution.java",
    "question0348_design_tic_tac_toe",
    "question0348_design_tic_tac_toe/TicTacToe.java",
    "question0349_intersection_of_two_arrays",
    "question0349_intersection_of_two_arrays/Solution.java",
    "question0351_android_unlock_patterns",
    "question0351_android_unlock_patterns/Solution.java",
    "question0352_data_stream_as_disjoint_intervals",
    "question0352_data_stream_as_disjoint_intervals/SummaryRanges.java",
    "question0353_design_snake_game",
    "question0353_design_snake_game/SnakeGame.java",
    "question0354_russian_doll_envelopes",
    "question0354_russian_doll_envelopes/Solution1.java",
    "question0354_russian_doll_envelopes/Solution2.java",
    "question0355_design_twitter",
    "question0355_design_twitter/Twitter1.java",
    "question0355_design_twitter/Twitter2.java",
    "question0356_line_reflection",
    "question0356_line_reflection/Solution.java",
    "question0357",
    "question0357/Solution.java",
    "question0359_logger_rate_limiter",
    "question0359_logger_rate_limiter/Logger.java",
    "question0359_logger_rate_limiter/\u65e5\u5fd7\u901f\u7387\u9650\u5236\u5668.md",
    "question0360",
    "question0360/Solution.java",
    "question0361",
    "question0361/Solution.java",
    "question0362_design_hit_counter",
    "question0362_design_hit_counter/HitCounter.java",
    "question0363_max_sum_of_rectangle_no_larger_than_k",
    "question0363_max_sum_of_rectangle_no_larger_than_k/Solution.java",
    "question0363_max_sum_of_rectangle_no_larger_than_k/\u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7K\u7684\u6700\u5927\u6570\u503c\u548c.md",
    "question0364_nested_list_weight_sum_ii",
    "question0364_nested_list_weight_sum_ii/NestedInteger.java",
    "question0364_nested_list_weight_sum_ii/Solution.java",
    "question0365_water_and_jug_problem",
    "question0365_water_and_jug_problem/Solution1.java",
    "question0365_water_and_jug_problem/Solution2.java",
    "question0365_water_and_jug_problem/Solution3.java",
    "question0366",
    "question0366/Solution.java",
    "question0366/TreeNode.java",
    "question0367",
    "question0367/Solution1.java",
    "question0367/Solution2.java",
    "question0368_largest_divisible_subset",
    "question0368_largest_divisible_subset/Solution.java",
    "question0369_plus_one_linked_list",
    "question0369_plus_one_linked_list/ListNode.java",
    "question0369_plus_one_linked_list/Solution.java",
    "question0370",
    "question0370/Solution1.java",
    "question0370/Solution2.java",
    "question0371",
    "question0371/Solution1.java",
    "question0371/Solution2.java",
    "question0372_super_pow",
    "question0372_super_pow/Solution.java",
    "question0373_find_k_pairs_with_smallest_sums",
    "question0373_find_k_pairs_with_smallest_sums/Solution1.java",
    "question0373_find_k_pairs_with_smallest_sums/Solution2.java",
    "question0374_guess_number_higher_or_lower",
    "question0374_guess_number_higher_or_lower/GuessGame.java",
    "question0374_guess_number_higher_or_lower/Solution.java",
    "question0375_guess_number_higher_or_lower_ii",
    "question0375_guess_number_higher_or_lower_ii/Solution.java",
    "question0375_guess_number_higher_or_lower_ii/\u731c\u6570\u5b57\u5927\u5c0fII.md",
    "question0377_combination_sum_iv",
    "question0377_combination_sum_iv/Solution.java",
    "question0378",
    "question0378/Solution.java",
    "question0379_design_phone_directory",
    "question0379_design_phone_directory/PhoneDirectory.java",
    "question0380",
    "question0380/RandomizedSet.java",
    "question0381_insert_delete_getrandom_o1_duplicates_allowed",
    "question0381_insert_delete_getrandom_o1_duplicates_allowed/RandomizedCollection.java",
    "question0382_linked_list_random_node",
    "question0382_linked_list_random_node/ListNode.java",
    "question0382_linked_list_random_node/Solution.java",
    "question0383_ransom_note",
    "question0383_ransom_note/Solution.java",
    "question0384",
    "question0384/Solution1.java",
    "question0384/Solution2.java",
    "question0385_mini_parser",
    "question0385_mini_parser/NestedInteger.java",
    "question0385_mini_parser/Solution.java",
    "question0386_lexicographical_numbers",
    "question0386_lexicographical_numbers/Solution.java",
    "question0387",
    "question0387/Solution1.java",
    "question0387/Solution2.java",
    "question0387_first_unique_character_in_a_string",
    "question0387_first_unique_character_in_a_string/Solution.java",
    "question0388_longest_absolute_file_path",
    "question0388_longest_absolute_file_path/Solution.java",
    "question0389",
    "question0389/Solution.java",
    "question0390_elimination_game",
    "question0390_elimination_game/Solution.java",
    "question0391_perfect_rectangle",
    "question0391_perfect_rectangle/Solution.java",
    "question0392_is_subsequence",
    "question0392_is_subsequence/Solution1.java",
    "question0392_is_subsequence/Solution2.java",
    "question0393_utf_8_validation",
    "question0393_utf_8_validation/Solution.java",
    "question0394_decode_string",
    "question0394_decode_string/Solution1.java",
    "question0394_decode_string/Solution2.java",
    "question0395_longest_substring_with_at_least_k_repeating_characters",
    "question0395_longest_substring_with_at_least_k_repeating_characters/Solution.java",
    "question0396_rotate_function",
    "question0396_rotate_function/Solution.java",
    "question0397_integer_replacement",
    "question0397_integer_replacement/Solution1.java",
    "question0397_integer_replacement/Solution2.java",
    "question0398_random_pick_index",
    "question0398_random_pick_index/Solution.java",
    "question0399_evaluate_division",
    "question0399_evaluate_division/Solution.java",
    "question0400",
    "question0400/Solution.java",
    "question0402_remove_k_digits",
    "question0402_remove_k_digits/Solution.java",
    "question0403_frog_jump",
    "question0403_frog_jump/Solution.java",
    "question0404_sum_of_left_leaves",
    "question0404_sum_of_left_leaves/Solution.java",
    "question0404_sum_of_left_leaves/TreeNode.java",
    "question0405_convert_a_number_to_hexadecimal",
    "question0405_convert_a_number_to_hexadecimal/Solution.java",
    "question0406",
    "question0406/Solution.java",
    "question0407_trapping_rain_water_ii",
    "question0407_trapping_rain_water_ii/Solution.java",
    "question0408_valid_word_abbreviation",
    "question0408_valid_word_abbreviation/Solution.java",
    "question0409_longest_palindrome",
    "question0409_longest_palindrome/Solution.java",
    "question0410_split_array_largest_sum",
    "question0410_split_array_largest_sum/Solution1.java",
    "question0410_split_array_largest_sum/Solution2.java",
    "question0412",
    "question0412/Solution.java",
    "question0413_arithmetic_slices",
    "question0413_arithmetic_slices/Solution1.java",
    "question0413_arithmetic_slices/Solution2.java",
    "question0413_arithmetic_slices/\u7b49\u5dee\u6570\u5217\u5212\u5206.md",
    "question0415_add_strings",
    "question0415_add_strings/Solution.java",
    "question0416_partition_equal_subset_sum",
    "question0416_partition_equal_subset_sum/Solution.java",
    "question0418_sentence_screen_fitting",
    "question0418_sentence_screen_fitting/Solution.java",
    "question0419_battleships_in_a_board",
    "question0419_battleships_in_a_board/Solution1.java",
    "question0419_battleships_in_a_board/Solution2.java",
    "question0419_battleships_in_a_board/\u7532\u677f\u4e0a\u7684\u6218\u8230.md",
    "question0420_strong_password_checker",
    "question0420_strong_password_checker/Solution.java",
    "question0421_maximum_xor_of_two_numbers_in_an_array",
    "question0421_maximum_xor_of_two_numbers_in_an_array/Solution1.java",
    "question0421_maximum_xor_of_two_numbers_in_an_array/Solution2.java",
    "question0421_maximum_xor_of_two_numbers_in_an_array/\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\u503c.md",
    "question0422_valid_word_square",
    "question0422_valid_word_square/Solution.java",
    "question0423_reconstruct_original_digits_from_english",
    "question0423_reconstruct_original_digits_from_english/Solution.java",
    "question0423_reconstruct_original_digits_from_english/\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57.md",
    "question0424_longest_repeating_character_replacement",
    "question0424_longest_repeating_character_replacement/Solution.java",
    "question0426_convert_binary_search_tree_to_sorted_doubly_linked_list",
    "question0426_convert_binary_search_tree_to_sorted_doubly_linked_list/Node.java",
    "question0426_convert_binary_search_tree_to_sorted_doubly_linked_list/Solution.java",
    "question0426_convert_binary_search_tree_to_sorted_doubly_linked_list/\u5c06\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u5316\u4e3a\u6392\u5e8f\u7684\u53cc\u5411\u94fe\u8868.md",
    "question0427_construct_quad_tree",
    "question0427_construct_quad_tree/Node.java",
    "question0427_construct_quad_tree/Solution.java",
    "question0427_construct_quad_tree/\u5efa\u7acb\u56db\u53c9\u6811.md",
    "question0428_serialize_and_deserialize_n_ary_tree",
    "question0428_serialize_and_deserialize_n_ary_tree/Codec.java",
    "question0428_serialize_and_deserialize_n_ary_tree/Node.java",
    "question0430_flatten_a_multilevel_doubly_linked_list",
    "question0430_flatten_a_multilevel_doubly_linked_list/Node.java",
    "question0430_flatten_a_multilevel_doubly_linked_list/Solution1.java",
    "question0430_flatten_a_multilevel_doubly_linked_list/Solution2.java",
    "question0430_flatten_a_multilevel_doubly_linked_list/\u6241\u5e73\u5316\u591a\u7ea7\u53cc\u5411\u94fe\u8868.md",
    "question0431_encode_n_ary_tree_to_binary_tree",
    "question0431_encode_n_ary_tree_to_binary_tree/Codec.java",
    "question0431_encode_n_ary_tree_to_binary_tree/Node.java",
    "question0431_encode_n_ary_tree_to_binary_tree/TreeNode.java",
    "question0432_all_oone_data_structure",
    "question0432_all_oone_data_structure/AllOne.java",
    "question0433_minimum_genetic_mutation",
    "question0433_minimum_genetic_mutation/Solution1.java",
    "question0433_minimum_genetic_mutation/Solution2.java",
    "question0433_minimum_genetic_mutation/\u6700\u5c0f\u57fa\u56e0\u53d8\u5316.md",
    "question0434",
    "question0434/Solution.java",
    "question0435_non_overlapping_intervals",
    "question0435_non_overlapping_intervals/Solution1.java",
    "question0435_non_overlapping_intervals/Solution2.java",
    "question0435_non_overlapping_intervals/Solution3.java",
    "question0436_find_right_interval",
    "question0436_find_right_interval/Solution.java",
    "question0436_find_right_interval/\u5bfb\u627e\u53f3\u533a\u95f4.md",
    "question0438_find_all_anagrams_in_a_string",
    "question0438_find_all_anagrams_in_a_string/Solution.java",
    "question0439_ternary_expression_parser",
    "question0439_ternary_expression_parser/Solution1.java",
    "question0439_ternary_expression_parser/Solution2.java",
    "question0439_ternary_expression_parser/\u4e09\u5143\u8868\u8fbe\u5f0f\u89e3\u6790\u5668.md",
    "question0440_k_th_smallest_in_lexicographical_order",
    "question0440_k_th_smallest_in_lexicographical_order/Solution.java",
    "question0441_arranging_coins",
    "question0441_arranging_coins/Solution1.java",
    "question0441_arranging_coins/Solution2.java",
    "question0443",
    "question0443/Solution.java",
    "question0444",
    "question0444/Solution.java",
    "question0445_add_two_numbers_ii",
    "question0445_add_two_numbers_ii/ListNode.java",
    "question0445_add_two_numbers_ii/Solution.java",
    "question0446_arithmetic_slices_ii_subsequence",
    "question0446_arithmetic_slices_ii_subsequence/Solution.java",
    "question0446_arithmetic_slices_ii_subsequence/\u7b49\u5dee\u6570\u5217\u5212\u5206II-\u5b50\u5e8f\u5217.md",
    "question0448_find_all_numbers_disappeared_in_an_array",
    "question0448_find_all_numbers_disappeared_in_an_array/Solution.java",
    "question0449_serialize_and_deserialize_bst",
    "question0449_serialize_and_deserialize_bst/Codec.java",
    "question0449_serialize_and_deserialize_bst/TreeNode.java",
    "question0452_minimum_number_of_arrows_to_burst_balloons",
    "question0452_minimum_number_of_arrows_to_burst_balloons/Solution.java",
    "question0452_minimum_number_of_arrows_to_burst_balloons/\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403.md",
    "question0453",
    "question0453/Solution.java",
    "question0454_4sum_ii",
    "question0454_4sum_ii/Solution.java",
    "question0455_assign_cookies",
    "question0455_assign_cookies/Solution.java",
    "question0456_132_pattern",
    "question0456_132_pattern/Solution.java",
    "question0457",
    "question0457/Solution.java",
    "question0458_poor_pigs",
    "question0458_poor_pigs/Solution.java",
    "question0459_repeated_substring_pattern",
    "question0459_repeated_substring_pattern/Solution1.java",
    "question0459_repeated_substring_pattern/Solution2.java",
    "question0459_repeated_substring_pattern/Solution3.java",
    "question0459_repeated_substring_pattern/Solution4.java",
    "question0460_lfu_cache",
    "question0460_lfu_cache/LFUCache.java",
    "question0461_hamming_distance",
    "question0461_hamming_distance/Solution.java",
    "question0462_minimum_moves_to_equal_array_elements_ii",
    "question0462_minimum_moves_to_equal_array_elements_ii/Solution.java",
    "question0462_minimum_moves_to_equal_array_elements_ii/\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u4f7f\u6570\u7ec4\u5143\u7d20\u76f8\u7b49II.md",
    "question0463_island_perimeter",
    "question0463_island_perimeter/Solution.java",
    "question0464",
    "question0464/Solution.java",
    "question0466_count_the_repetitions",
    "question0466_count_the_repetitions/Solution1.java",
    "question0466_count_the_repetitions/Solution2.java",
    "question0467",
    "question0467/Solution1.java",
    "question0467/Solution2.java",
    "question0468_validate_ip_address",
    "question0468_validate_ip_address/Solution.java",
    "question0468_validate_ip_address/\u9a8c\u8bc1IP\u5730\u5740.md",
    "question0469_convex_polygon",
    "question0469_convex_polygon/Solution.java",
    "question0469_convex_polygon/\u51f8\u591a\u8fb9\u5f62.md",
    "question0470_implement_rand10_using_rand7",
    "question0470_implement_rand10_using_rand7/SolBase.java",
    "question0470_implement_rand10_using_rand7/Solution.java",
    "question0470_implement_rand10_using_rand7/\u7528Rand7()\u5b9e\u73b0Rand10().md",
    "question0471_encode_string_with_shortest_length",
    "question0471_encode_string_with_shortest_length/Solution1.java",
    "question0471_encode_string_with_shortest_length/Solution2.java",
    "question0472_concatenated_words",
    "question0472_concatenated_words/Solution.java",
    "question0473_matchsticks_to_square",
    "question0473_matchsticks_to_square/Solution.java",
    "question0474_ones_and_zeroes",
    "question0474_ones_and_zeroes/Solution.java",
    "question0475_heaters",
    "question0475_heaters/Solution.java",
    "question0476_number_complement",
    "question0476_number_complement/Solution.java",
    "question0477_total_hamming_distance",
    "question0477_total_hamming_distance/Solution.java",
    "question0478_generate_random_point_in_a_circle",
    "question0478_generate_random_point_in_a_circle/Solution.java",
    "question0479_largest_palindrome_product",
    "question0479_largest_palindrome_product/Solution.java",
    "question0480_sliding_window_median",
    "question0480_sliding_window_median/Solution.java",
    "question0481_magical_string",
    "question0481_magical_string/Solution.java",
    "question0482",
    "question0482/Solution.java",
    "question0483_smallest_good_base",
    "question0483_smallest_good_base/Solution.java",
    "question0484_find_permutation",
    "question0484_find_permutation/Solution.java",
    "question0485",
    "question0485/Solution.java",
    "question0486_predict_the_winner",
    "question0486_predict_the_winner/Solution1.java",
    "question0486_predict_the_winner/Solution2.java",
    "question0486_predict_the_winner/Solution3.java",
    "question0487",
    "question0487/Solution.java",
    "question0488_zuma_game",
    "question0488_zuma_game/Solution.java",
    "question0490_the_maze",
    "question0490_the_maze/Solution.java",
    "question0491_increasing_subsequences",
    "question0491_increasing_subsequences/Solution.java",
    "question0492_construct_the_rectangle",
    "question0492_construct_the_rectangle/Solution.java",
    "question0493_reverse_pairs",
    "question0493_reverse_pairs/Solution.java",
    "question0494_target_sum",
    "question0494_target_sum/Solution.java",
    "question0495",
    "question0495/Solution.java",
    "question0496",
    "question0496/Solution1.java",
    "question0496/Solution2.java",
    "question0497_random_point_in_non_overlapping_rectangles",
    "question0497_random_point_in_non_overlapping_rectangles/Solution.java",
    "question0499_the_maze_iii",
    "question0499_the_maze_iii/Solution.java",
    "question0500",
    "question0500/Solution.java",
    "question0503_next_greater_element_ii",
    "question0503_next_greater_element_ii/Solution1.java",
    "question0503_next_greater_element_ii/Solution2.java",
    "question0504_base_7",
    "question0504_base_7/Solution.java",
    "question0505_the_maze_ii",
    "question0505_the_maze_ii/Solution1.java",
    "question0505_the_maze_ii/Solution2.java",
    "question0506_relative_ranks",
    "question0506_relative_ranks/Solution.java",
    "question0507_perfect_number",
    "question0507_perfect_number/Solution.java",
    "question0508",
    "question0508/Solution.java",
    "question0508/TreeNode.java",
    "question0509_fibonacci_number",
    "question0509_fibonacci_number/Solution1.java",
    "question0509_fibonacci_number/Solution2.java",
    "question0510_inorder_successor_in_bst_ii",
    "question0510_inorder_successor_in_bst_ii/Node.java",
    "question0510_inorder_successor_in_bst_ii/Solution.java",
    "question0513",
    "question0513/Solution.java",
    "question0513/TreeNode.java",
    "question0514_freedom_trail",
    "question0514_freedom_trail/Solution.java",
    "question0515",
    "question0515/Solution.java",
    "question0515/TreeNode.java",
    "question0516_longest_palindromic_subsequence",
    "question0516_longest_palindromic_subsequence/Solution.java",
    "question0517_super_washing_machines",
    "question0517_super_washing_machines/Solution1.java",
    "question0517_super_washing_machines/Solution2.java",
    "question0518_coin_change_2",
    "question0518_coin_change_2/Solution1.java",
    "question0518_coin_change_2/Solution2.java",
    "question0518_coin_change_2/Solution3.java",
    "question0519_random_flip_matrix",
    "question0519_random_flip_matrix/Solution.java",
    "question0520_detect_capital",
    "question0520_detect_capital/Solution.java",
    "question0521_longest_uncommon_subsequence_i",
    "question0521_longest_uncommon_subsequence_i/Solution.java",
    "question0522_longest_uncommon_subsequence_ii",
    "question0522_longest_uncommon_subsequence_ii/Solution1.java",
    "question0522_longest_uncommon_subsequence_ii/Solution2.java",
    "question0523_continuous_subarray_sum",
    "question0523_continuous_subarray_sum/Solution1.java",
    "question0523_continuous_subarray_sum/Solution2.java",
    "question0524",
    "question0524/Solution.java",
    "question0525_contiguous_array",
    "question0525_contiguous_array/Solution1.java",
    "question0525_contiguous_array/Solution2.java",
    "question0526_beautiful_arrangement",
    "question0526_beautiful_arrangement/Solution.java",
    "question0528_random_pick_with_weight",
    "question0528_random_pick_with_weight/Solution.java",
    "question0529_minesweeper",
    "question0529_minesweeper/Solution.java",
    "question0530_minimum_absolute_difference_in_bst",
    "question0530_minimum_absolute_difference_in_bst/Solution.java",
    "question0530_minimum_absolute_difference_in_bst/TreeNode.java",
    "question0532",
    "question0532/Solution.java",
    "question0535_encode_and_decode_tinyurl",
    "question0535_encode_and_decode_tinyurl/Codec.java",
    "question0536_construct_binary_tree_from_string",
    "question0536_construct_binary_tree_from_string/Solution.java",
    "question0536_construct_binary_tree_from_string/TreeNode.java",
    "question0537_complex_number_multiplication",
    "question0537_complex_number_multiplication/Solution.java",
    "question0538_convert_bst_to_greater_tree",
    "question0538_convert_bst_to_greater_tree/Solution1.java",
    "question0538_convert_bst_to_greater_tree/Solution2.java",
    "question0538_convert_bst_to_greater_tree/TreeNode.java",
    "question0539_minimum_time_difference",
    "question0539_minimum_time_difference/Solution.java",
    "question0540_single_element_in_a_sorted_array",
    "question0540_single_element_in_a_sorted_array/Solution.java",
    "question0541",
    "question0541/Solution.java",
    "question0542_01_matrix",
    "question0542_01_matrix/Solution.java",
    "question0543_diameter_of_binary_tree",
    "question0543_diameter_of_binary_tree/Solution.java",
    "question0543_diameter_of_binary_tree/TreeNode.java",
    "question0543_diameter_of_binary_tree/\u4e8c\u53c9\u6811\u7684\u76f4\u5f84.md",
    "question0545_boundary_of_binary_tree",
    "question0545_boundary_of_binary_tree/Solution.java",
    "question0545_boundary_of_binary_tree/TreeNode.java",
    "question0546_remove_boxes",
    "question0546_remove_boxes/Solution.java",
    "question0547_number_of_provinces",
    "question0547_number_of_provinces/Solution.java",
    "question0549_binary_tree_longest_consecutive_sequence_ii",
    "question0549_binary_tree_longest_consecutive_sequence_ii/Solution.java",
    "question0549_binary_tree_longest_consecutive_sequence_ii/TreeNode.java",
    "question0551_student_attendance_record_i",
    "question0551_student_attendance_record_i/Solution.java",
    "question0552_student_attendance_record_ii",
    "question0552_student_attendance_record_ii/Solution1.java",
    "question0552_student_attendance_record_ii/Solution2.java",
    "question0552_student_attendance_record_ii/Solution3.java",
    "question0553_optimal_division",
    "question0553_optimal_division/Solution.java",
    "question0554_brick_wall",
    "question0554_brick_wall/Solution.java",
    "question0556",
    "question0556/Solution.java",
    "question0557_reverse_words_in_a_string_iii",
    "question0557_reverse_words_in_a_string_iii/Solution.java",
    "question0558_quad_tree_intersection",
    "question0558_quad_tree_intersection/Node.java",
    "question0558_quad_tree_intersection/Solution.java",
    "question0559",
    "question0559/Node.java",
    "question0559/Solution1.java",
    "question0559/Solution2.java",
    "question0560_subarray_sum_equals_k",
    "question0560_subarray_sum_equals_k/Solution1.java",
    "question0560_subarray_sum_equals_k/Solution2.java",
    "question0561_array_partition_i",
    "question0561_array_partition_i/Solution.java",
    "question0563",
    "question0563/Solution1.java",
    "question0563/Solution2.java",
    "question0563/TreeNode.java",
    "question0565_array_nesting",
    "question0565_array_nesting/Solution.java",
    "question0566_reshape_the_matrix",
    "question0566_reshape_the_matrix/Solution.java",
    "question0567_permutation_in_string",
    "question0567_permutation_in_string/Solution.java",
    "question0568_maximum_vacation_days",
    "question0568_maximum_vacation_days/Solution1.java",
    "question0568_maximum_vacation_days/Solution2.java",
    "question0572_subtree_of_another_tree",
    "question0572_subtree_of_another_tree/Solution.java",
    "question0572_subtree_of_another_tree/TreeNode.java",
    "question0575_distribute_candies",
    "question0575_distribute_candies/Solution.java",
    "question0576_out_of_boundary_paths",
    "question0576_out_of_boundary_paths/Solution.java",
    "question0582_kill_process",
    "question0582_kill_process/Solution.java",
    "question0583_delete_operation_for_two_strings",
    "question0583_delete_operation_for_two_strings/Solution.java",
    "question0589_n_ary_tree_preorder_traversal",
    "question0589_n_ary_tree_preorder_traversal/Node.java",
    "question0589_n_ary_tree_preorder_traversal/Solution1.java",
    "question0589_n_ary_tree_preorder_traversal/Solution2.java",
    "question0590",
    "question0590/Node.java",
    "question0590/Solution1.java",
    "question0590/Solution2.java",
    "question0592_fraction_addition_and_subtraction",
    "question0592_fraction_addition_and_subtraction/Solution.java",
    "question0593_valid_square",
    "question0593_valid_square/Solution.java",
    "question0594_longest_harmonious_subsequence",
    "question0594_longest_harmonious_subsequence/Solution.java",
    "question0598",
    "question0598/Node.java",
    "question0598/Solution1.java",
    "question0598/Solution2.java",
    "question0598_range_addition_ii",
    "question0598_range_addition_ii/Solution.java",
    "question0599_minimum_index_sum_of_two_lists",
    "question0599_minimum_index_sum_of_two_lists/Solution.java",
    "question0600_non_negative_integers_without_consecutive_ones",
    "question0600_non_negative_integers_without_consecutive_ones/Solution1.java",
    "question0600_non_negative_integers_without_consecutive_ones/Solution2.java",
    "question0604_design_compressed_string_iterator",
    "question0604_design_compressed_string_iterator/StringIterator.java",
    "question0604_design_compressed_string_iterator/\u8fed\u4ee3\u538b\u7f29\u5b57\u7b26\u4e32.md",
    "question0605_can_place_flowers",
    "question0605_can_place_flowers/Solution.java",
    "question0606",
    "question0606/Solution.java",
    "question0606/TreeNode.java",
    "question0609_find_duplicate_file_in_system",
    "question0609_find_duplicate_file_in_system/Solution.java",
    "question0611_valid_triangle_number",
    "question0611_valid_triangle_number/Solution.java",
    "question0617_merge_two_binary_trees",
    "question0617_merge_two_binary_trees/Solution.java",
    "question0617_merge_two_binary_trees/TreeNode.java",
    "question0622_design_circular_queue",
    "question0622_design_circular_queue/MyCircularQueue.java",
    "question0623",
    "question0623/Solution.java",
    "question0623/TreeNode.java",
    "question0624_maximum_distance_in_arrays",
    "question0624_maximum_distance_in_arrays/Solution.java",
    "question0624_maximum_distance_in_arrays/\u6570\u7ec4\u5217\u8868\u4e2d\u7684\u6700\u5927\u8ddd\u79bb.md",
    "question0628",
    "question0628/Solution.java",
    "question0629_k_inverse_pairs_array",
    "question0629_k_inverse_pairs_array/Solution.java",
    "question0631_design_excel_sum_formula",
    "question0631_design_excel_sum_formula/Excel.java",
    "question0632_smallest_range_covering_elements_from_k_lists",
    "question0632_smallest_range_covering_elements_from_k_lists/Solution1.java",
    "question0632_smallest_range_covering_elements_from_k_lists/Solution2.java",
    "question0633_sum_of_square_numbers",
    "question0633_sum_of_square_numbers/Solution1.java",
    "question0633_sum_of_square_numbers/Solution2.java",
    "question0636_exclusive_time_of_functions",
    "question0636_exclusive_time_of_functions/Solution.java",
    "question0637_average_of_levels_in_binary_tree",
    "question0637_average_of_levels_in_binary_tree/Solution.java",
    "question0637_average_of_levels_in_binary_tree/TreeNode.java",
    "question0638_shopping_offers",
    "question0638_shopping_offers/Solution1.java",
    "question0638_shopping_offers/Solution2.java",
    "question0639_decode_ways_ii",
    "question0639_decode_ways_ii/Solution1.java",
    "question0639_decode_ways_ii/Solution2.java",
    "question0640_solve_the_equation",
    "question0640_solve_the_equation/Solution.java",
    "question0641_design_circular_deque",
    "question0641_design_circular_deque/MyCircularDeque.java",
    "question0643_maximum_average_subarray_i",
    "question0643_maximum_average_subarray_i/Solution.java",
    "question0645_set_mismatch",
    "question0645_set_mismatch/Solution.java",
    "question0646_maximum_length_of_pair_chain",
    "question0646_maximum_length_of_pair_chain/Solution.java",
    "question0647_palindromic_substrings",
    "question0647_palindromic_substrings/Solution1.java",
    "question0647_palindromic_substrings/Solution2.java",
    "question0647_palindromic_substrings/Solution3.java",
    "question0648_replace_words",
    "question0648_replace_words/Solution.java",
    "question0649_dota2_senate",
    "question0649_dota2_senate/Solution.java",
    "question0650_2_keys_keyboard",
    "question0650_2_keys_keyboard/Solution.java",
    "question0651_4_keys_keyboard",
    "question0651_4_keys_keyboard/Solution.java",
    "question0652",
    "question0652/Solution.java",
    "question0652/TreeNode.java",
    "question0653",
    "question0653/Solution1.java",
    "question0653/Solution2.java",
    "question0653/Solution3.java",
    "question0653/TreeNode.java",
    "question0656_coin_path",
    "question0656_coin_path/Solution1.java",
    "question0656_coin_path/Solution2.java",
    "question0657_robot_return_to_origin",
    "question0657_robot_return_to_origin/Solution.java",
    "question0658_find_k_closest_elements",
    "question0658_find_k_closest_elements/Solution1.java",
    "question0658_find_k_closest_elements/Solution2.java",
    "question0659_split_array_into_consecutive_subsequences",
    "question0659_split_array_into_consecutive_subsequences/Solution.java",
    "question0661_image_smoother",
    "question0661_image_smoother/Solution1.java",
    "question0661_image_smoother/Solution2.java",
    "question0662",
    "question0662/Solution.java",
    "question0662/TreeNode.java",
    "question0663_equal_tree_partition",
    "question0663_equal_tree_partition/Solution.java",
    "question0663_equal_tree_partition/TreeNode.java",
    "question0664",
    "question0664/Solution.java",
    "question0665_non_decreasing_array",
    "question0665_non_decreasing_array/Solution.java",
    "question0666_path_sum_iv",
    "question0666_path_sum_iv/Solution.java",
    "question0667_beautiful_arrangement_ii",
    "question0667_beautiful_arrangement_ii/Solution.java",
    "question0669",
    "question0669/Solution.java",
    "question0669/TreeNode.java",
    "question0670_maximum_swap",
    "question0670_maximum_swap/Solution.java",
    "question0671_second_minimum_node_in_a_binary_tree",
    "question0671_second_minimum_node_in_a_binary_tree/Solution.java",
    "question0671_second_minimum_node_in_a_binary_tree/TreeNode.java",
    "question0672_bulb_switcher_ii",
    "question0672_bulb_switcher_ii/Solution.java",
    "question0673_number_of_longest_increasing_subsequence",
    "question0673_number_of_longest_increasing_subsequence/Solution.java",
    "question0674_longest_continuous_increasing_subsequence",
    "question0674_longest_continuous_increasing_subsequence/Solution.java",
    "question0676_implement_magic_dictionary",
    "question0676_implement_magic_dictionary/MagicDictionary.java",
    "question0677_map_sum_pairs",
    "question0677_map_sum_pairs/MapSum.java",
    "question0678_valid_parenthesis_string",
    "question0678_valid_parenthesis_string/Solution.java",
    "question0679_24_game",
    "question0679_24_game/Solution.java",
    "question0680_valid_palindrome_ii",
    "question0680_valid_palindrome_ii/Solution.java",
    "question0684_redundant_connection",
    "question0684_redundant_connection/Solution1.java",
    "question0684_redundant_connection/Solution2.java",
    "question0685_redundant_connection_ii",
    "question0685_redundant_connection_ii/Solution.java",
    "question0686_repeated_string_match",
    "question0686_repeated_string_match/Solution.java",
    "question0687",
    "question0687/Solution.java",
    "question0687/TreeNode.java",
    "question0688_knight_probability_in_chessboard",
    "question0688_knight_probability_in_chessboard/Solution.java",
    "question0689_maximum_sum_of_3_non_overlapping_subarrays",
    "question0689_maximum_sum_of_3_non_overlapping_subarrays/Solution.java",
    "question0690",
    "question0690/Employee.java",
    "question0690/Solution1.java",
    "question0690/Solution2.java",
    "question0691_stickers_to_spell_word",
    "question0691_stickers_to_spell_word/Solution1.java",
    "question0691_stickers_to_spell_word/Solution2.java",
    "question0692_top_k_frequent_words",
    "question0692_top_k_frequent_words/Solution.java",
    "question0693_binary_number_with_alternating_bits",
    "question0693_binary_number_with_alternating_bits/Solution.java",
    "question0695_max_area_of_island",
    "question0695_max_area_of_island/Solution.java",
    "question0696_count_binary_substrings",
    "question0696_count_binary_substrings/Solution.java",
    "question0697_degree_of_an_array",
    "question0697_degree_of_an_array/Solution.java",
    "question0698_partition_to_k_equal_sum_subsets",
    "question0698_partition_to_k_equal_sum_subsets/Solution.java",
    "question0700_search_in_a_binary_search_tree",
    "question0700_search_in_a_binary_search_tree/Solution.java",
    "question0700_search_in_a_binary_search_tree/TreeNode.java",
    "question0701_insert_into_a_binary_search_tree",
    "question0701_insert_into_a_binary_search_tree/Solution.java",
    "question0701_insert_into_a_binary_search_tree/TreeNode.java",
    "question0703_kth_largest_element_in_a_stream",
    "question0703_kth_largest_element_in_a_stream/KthLargest.java",
    "question0704_binary_search",
    "question0704_binary_search/Solution.java",
    "question0705_design_hashset",
    "question0705_design_hashset/MyHashSet.java",
    "question0706_design_hashmap",
    "question0706_design_hashmap/MyHashMap.java",
    "question0707_design_linked_list",
    "question0707_design_linked_list/MyLinkedList.java",
    "question0708_insert_into_a_cyclic_sorted_list",
    "question0708_insert_into_a_cyclic_sorted_list/Node.java",
    "question0708_insert_into_a_cyclic_sorted_list/Solution.java",
    "question0709_to_lower_case",
    "question0709_to_lower_case/Solution.java",
    "question0712",
    "question0712/Solution.java",
    "question0713",
    "question0713/Solution.java",
    "question0714_best_time_to_buy_and_sell_stock_with_transaction_fee",
    "question0714_best_time_to_buy_and_sell_stock_with_transaction_fee/Solution1.java",
    "question0714_best_time_to_buy_and_sell_stock_with_transaction_fee/Solution2.java",
    "question0716_max_stack",
    "question0716_max_stack/MaxStack1.java",
    "question0716_max_stack/MaxStack2.java",
    "question0717_1_bit_and_2_bit_characters",
    "question0717_1_bit_and_2_bit_characters/Solution.java",
    "question0718_maximum_length_of_repeated_subarray",
    "question0718_maximum_length_of_repeated_subarray/Solution.java",
    "question0721_accounts_merge",
    "question0721_accounts_merge/Solution.java",
    "question0722_remove_comments",
    "question0722_remove_comments/Solution.java",
    "question0724_find_pivot_index",
    "question0724_find_pivot_index/Solution.java",
    "question0725_split_linked_list_in_parts",
    "question0725_split_linked_list_in_parts/ListNode.java",
    "question0725_split_linked_list_in_parts/Solution.java",
    "question0727_minimum_window_subsequence",
    "question0727_minimum_window_subsequence/Solution1.java",
    "question0727_minimum_window_subsequence/Solution2.java",
    "question0728_self_dividing_numbers",
    "question0728_self_dividing_numbers/Solution.java",
    "question0729_my_calendar_i",
    "question0729_my_calendar_i/MyCalendar1.java",
    "question0729_my_calendar_i/MyCalendar2.java",
    "question0729_my_calendar_i/MyCalendar3.java",
    "question0730_count_different_palindromic_subsequences",
    "question0730_count_different_palindromic_subsequences/Solution.java",
    "question0731_my_calendar_ii",
    "question0731_my_calendar_ii/MyCalendarTwo.java",
    "question0733_flood_fill",
    "question0733_flood_fill/Solution.java",
    "question0734_sentence_similarity",
    "question0734_sentence_similarity/Solution.java",
    "question0734_sentence_similarity/\u53e5\u5b50\u76f8\u4f3c\u6027.md",
    "question0735_asteroid_collision",
    "question0735_asteroid_collision/Solution.java",
    "question0737_sentence_similarity_ii",
    "question0737_sentence_similarity_ii/Solution.java",
    "question0738_monotone_increasing_digits",
    "question0738_monotone_increasing_digits/Solution1.java",
    "question0738_monotone_increasing_digits/Solution2.java",
    "question0739_daily_temperatures",
    "question0739_daily_temperatures/Solution1.java",
    "question0739_daily_temperatures/Solution2.java",
    "question0740_delete_and_earn",
    "question0740_delete_and_earn/Solution.java",
    "question0741_cherry_pickup",
    "question0741_cherry_pickup/Solution.java",
    "question0742_closest_leaf_in_a_binary_tree",
    "question0742_closest_leaf_in_a_binary_tree/Solution.java",
    "question0742_closest_leaf_in_a_binary_tree/TreeNode.java",
    "question0743_network_delay_time",
    "question0743_network_delay_time/Solution1.java",
    "question0743_network_delay_time/Solution2.java",
    "question0743_network_delay_time/Solution3.java",
    "question0744",
    "question0744/Solution.java",
    "question0746_min_cost_climbing_stairs",
    "question0746_min_cost_climbing_stairs/Solution.java",
    "question0747_largest_number_at_least_twice_of_others",
    "question0747_largest_number_at_least_twice_of_others/Solution.java",
    "question0748_shortest_completing_word",
    "question0748_shortest_completing_word/Solution.java",
    "question0750_number_of_corner_rectangles",
    "question0750_number_of_corner_rectangles/Solution.java",
    "question0751_ip_to_cidr",
    "question0751_ip_to_cidr/IP\u5230CIDR.md",
    "question0751_ip_to_cidr/Solution.java",
    "question0752_open_the_lock",
    "question0752_open_the_lock/Solution1.java",
    "question0752_open_the_lock/Solution2.java",
    "question0754",
    "question0754/Solution.java",
    "question0756_pyramid_transition_matrix",
    "question0756_pyramid_transition_matrix/Solution.java",
    "question0758_bold_words_in_string",
    "question0758_bold_words_in_string/Solution.java",
    "question0758_bold_words_in_string/\u5b57\u7b26\u4e32\u4e2d\u7684\u52a0\u7c97\u5355\u8bcd.md",
    "question0760_find_anagram_mappings",
    "question0760_find_anagram_mappings/Solution1.java",
    "question0760_find_anagram_mappings/Solution2.java",
    "question0760_find_anagram_mappings/\u627e\u51fa\u53d8\u4f4d\u6620\u5c04.md",
    "question0762_prime_number_of_set_bits_in_binary_representation",
    "question0762_prime_number_of_set_bits_in_binary_representation/Solution.java",
    "question0763_partition_labels",
    "question0763_partition_labels/Solution.java",
    "question0764_largest_plus_sign",
    "question0764_largest_plus_sign/Solution1.java",
    "question0764_largest_plus_sign/Solution2.java",
    "question0764_largest_plus_sign/Solution3.java",
    "question0765_couples_holding_hands",
    "question0765_couples_holding_hands/Solution.java",
    "question0766_toeplitz_matrix",
    "question0766_toeplitz_matrix/Solution.java",
    "question0767_reorganize_string",
    "question0767_reorganize_string/Solution.java",
    "question0769_max_chunks_to_make_sorted",
    "question0769_max_chunks_to_make_sorted/Solution.java",
    "question0771_jewels_and_stones",
    "question0771_jewels_and_stones/Solution.java",
    "question0775_global_and_local_inversions",
    "question0775_global_and_local_inversions/Solution.java",
    "question0776_split_bst",
    "question0776_split_bst/Solution.java",
    "question0776_split_bst/TreeNode.java",
    "question0777_swap_adjacent_in_lr_stringD",
    "question0777_swap_adjacent_in_lr_stringD/Solution.java",
    "question0778_swim_in_rising_water",
    "question0778_swim_in_rising_water/Solution.java",
    "question0779_k_th_symbol_in_grammark_th_symbol_in_grammar",
    "question0779_k_th_symbol_in_grammark_th_symbol_in_grammar/Solution.java",
    "question0781_rabbits_in_forest",
    "question0781_rabbits_in_forest/Solution.java",
    "question0783_minimum_distance_between_bst_nodes",
    "question0783_minimum_distance_between_bst_nodes/Solution.java",
    "question0783_minimum_distance_between_bst_nodes/TreeNode.java",
    "question0785_is_graph_bipartite",
    "question0785_is_graph_bipartite/Solution.java",
    "question0787_cheapest_flights_within_k_stops",
    "question0787_cheapest_flights_within_k_stops/Solution.java",
    "question0788_rotated_digits",
    "question0788_rotated_digits/Solution.java",
    "question0789_escape_the_ghosts",
    "question0789_escape_the_ghosts/Solution.java",
    "question0790_domino_and_tromino_tiling",
    "question0790_domino_and_tromino_tiling/Solution.java",
    "question0791_custom_sort_string",
    "question0791_custom_sort_string/Solution.java",
    "question0792_number_of_matching_subsequences",
    "question0792_number_of_matching_subsequences/Solution.java",
    "question0794_valid_tic_tac_toe_state",
    "question0794_valid_tic_tac_toe_state/Solution.java",
    "question0795",
    "question0795/Solution1.java",
    "question0795/Solution2.java",
    "question0796",
    "question0796/Solution1.java",
    "question0796/Solution2.java",
    "question0797_all_paths_from_source_to_target",
    "question0797_all_paths_from_source_to_target/Solution.java",
    "question0799",
    "question0799/Solution.java",
    "question0800_similar_rgb_color",
    "question0800_similar_rgb_color/Solution1.java",
    "question0800_similar_rgb_color/Solution2.java",
    "question0801_minimum_swaps_to_make_sequences_increasing",
    "question0801_minimum_swaps_to_make_sequences_increasing/Solution1.java",
    "question0801_minimum_swaps_to_make_sequences_increasing/Solution2.java",
    "question0801_minimum_swaps_to_make_sequences_increasing/Solution3.java",
    "question0802_find_eventual_safe_states",
    "question0802_find_eventual_safe_states/Solution.java",
    "question0803_bricks_falling_when_hit",
    "question0803_bricks_falling_when_hit/Solution.java",
    "question0806_number_of_lines_to_write_string",
    "question0806_number_of_lines_to_write_string/Solution.java",
    "question0807_max_increase_to_keep_city_skyline",
    "question0807_max_increase_to_keep_city_skyline/Solution.java",
    "question0808_soup_servings",
    "question0808_soup_servings/Solution1.java",
    "question0808_soup_servings/Solution2.java",
    "question0809_expressive_words",
    "question0809_expressive_words/Solution.java",
    "question0810_chalkboard_xor_game",
    "question0810_chalkboard_xor_game/Solution.java",
    "question0811_subdomain_visit_count",
    "question0811_subdomain_visit_count/Solution.java",
    "question0812_largest_triangle_area",
    "question0812_largest_triangle_area/Solution.java",
    "question0813_largest_sum_of_averages",
    "question0813_largest_sum_of_averages/Solution1.java",
    "question0813_largest_sum_of_averages/Solution2.java",
    "question0816_ambiguous_coordinates",
    "question0816_ambiguous_coordinates/Solution.java",
    "question0817_linked_list_components",
    "question0817_linked_list_components/ListNode.java",
    "question0817_linked_list_components/Solution.java",
    "question0818_race_car",
    "question0818_race_car/Solution1.java",
    "question0818_race_car/Solution2.java",
    "question0819_most_common_word",
    "question0819_most_common_word/Solution.java",
    "question0820_short_encoding_of_words",
    "question0820_short_encoding_of_words/Solution.java",
    "question0821_shortest_distance_to_a_character",
    "question0821_shortest_distance_to_a_character/Solution1.java",
    "question0821_shortest_distance_to_a_character/Solution2.java",
    "question0822_card_flipping_game",
    "question0822_card_flipping_game/Solution1.java",
    "question0822_card_flipping_game/Solution2.java",
    "question0823_binary_trees_with_factors",
    "question0823_binary_trees_with_factors/Solution.java",
    "question0824_goat_latin",
    "question0824_goat_latin/Solution.java",
    "question0825_friends_of_appropriate_ages",
    "question0825_friends_of_appropriate_ages/Solution.java",
    "question0826",
    "question0826/Solution.java",
    "question0830_positions_of_large_groups",
    "question0830_positions_of_large_groups/Solution.java",
    "question0831_masking_personal_information",
    "question0831_masking_personal_information/Solution.java",
    "question0832_flipping_an_image",
    "question0832_flipping_an_image/Solution.java",
    "question0833_find_and_replace_in_string",
    "question0833_find_and_replace_in_string/Solution.java",
    "question0834_sum_of_distances_in_tree",
    "question0834_sum_of_distances_in_tree/Solution.java",
    "question0835_image_overlap",
    "question0835_image_overlap/Solution.java",
    "question0836_rectangle_overlap",
    "question0836_rectangle_overlap/Solution.java",
    "question0837_new_21_game",
    "question0837_new_21_game/Solution1.java",
    "question0837_new_21_game/Solution2.java",
    "question0838_push_dominoes",
    "question0838_push_dominoes/Solution1.java",
    "question0838_push_dominoes/Solution2.java",
    "question0839_similar_string_groups",
    "question0839_similar_string_groups/Solution.java",
    "question0840_magic_squares_in_grid",
    "question0840_magic_squares_in_grid/Solution.java",
    "question0841_keys_and_rooms",
    "question0841_keys_and_rooms/Solution.java",
    "question0842_split_array_into_fibonacci_sequence",
    "question0842_split_array_into_fibonacci_sequence/Solution.java",
    "question0844_backspace_string_compare",
    "question0844_backspace_string_compare/Solution1.java",
    "question0844_backspace_string_compare/Solution2.java",
    "question0845_longest_mountain_in_array",
    "question0845_longest_mountain_in_array/Solution.java",
    "question0846_hand_of_straights",
    "question0846_hand_of_straights/Solution.java",
    "question0847_shortest_path_visiting_all_nodes",
    "question0847_shortest_path_visiting_all_nodes/Solution1.java",
    "question0847_shortest_path_visiting_all_nodes/Solution2.java",
    "question0848_shifting_letters",
    "question0848_shifting_letters/Solution.java",
    "question0849_maximize_distance_to_closest_person",
    "question0849_maximize_distance_to_closest_person/Solution.java",
    "question0851_loud_and_rich",
    "question0851_loud_and_rich/Solution.java",
    "question0852_peak_index_in_a_mountain_array",
    "question0852_peak_index_in_a_mountain_array/Solution.java",
    "question0853_car_fleet",
    "question0853_car_fleet/Solution.java",
    "question0855_exam_room",
    "question0855_exam_room/ExamRoom.java",
    "question0856_score_of_parentheses",
    "question0856_score_of_parentheses/Solution.java",
    "question0858_mirror_reflection",
    "question0858_mirror_reflection/Solution.java",
    "question0859_buddy_strings",
    "question0859_buddy_strings/Solution.java",
    "question0860_lemonade_change",
    "question0860_lemonade_change/Solution.java",
    "question0861_score_after_flipping_matrix",
    "question0861_score_after_flipping_matrix/Solution.java",
    "question0862_shortest_subarray_with_sum_at_least_k",
    "question0862_shortest_subarray_with_sum_at_least_k/Solution.java",
    "question0863",
    "question0863/Solution.java",
    "question0863/TreeNode.java",
    "question0865",
    "question0865/Solution1.java",
    "question0865/Solution2.java",
    "question0865/TreeNode.java",
    "question0866_prime_palindrome",
    "question0866_prime_palindrome/Solution.java",
    "question0867_transpose_matrix",
    "question0867_transpose_matrix/Solution.java",
    "question0868_binary_gap",
    "question0868_binary_gap/Solution.java",
    "question0869_reordered_power_of_2",
    "question0869_reordered_power_of_2/Solution.java",
    "question0870_advantage_shuffle",
    "question0870_advantage_shuffle/Solution.java",
    "question0871_minimum_number_of_refueling_stops",
    "question0871_minimum_number_of_refueling_stops/Solution.java",
    "question0872",
    "question0872/Solution.java",
    "question0872/TreeNode.java",
    "question0873",
    "question0873/Solution1.java",
    "question0873/Solution2.java",
    "question0874_walking_robot_simulation",
    "question0874_walking_robot_simulation/Solution.java",
    "question0875_koko_eating_bananas",
    "question0875_koko_eating_bananas/Solution.java",
    "question0876_middle_of_the_linked_list",
    "question0876_middle_of_the_linked_list/ListNode.java",
    "question0876_middle_of_the_linked_list/Solution.java",
    "question0877_stone_game",
    "question0877_stone_game/Solution1.java",
    "question0877_stone_game/Solution2.java",
    "question0877_stone_game/Solution3.java",
    "question0877_stone_game/Solution4.java",
    "question0878",
    "question0878/Solution1.java",
    "question0878/Solution2.java",
    "question0879_profitable_schemes",
    "question0879_profitable_schemes/Solution.java",
    "question0880_decoded_string_at_index",
    "question0880_decoded_string_at_index/Solution.java",
    "question0881",
    "question0881/Solution.java",
    "question0883_projection_area_of_3d_shapes",
    "question0883_projection_area_of_3d_shapes/Solution.java",
    "question0884_uncommon_words_from_two_sentences",
    "question0884_uncommon_words_from_two_sentences/Solution.java",
    "question0885_spiral_matrix_iii",
    "question0885_spiral_matrix_iii/Solution.java",
    "question0886_possible_bipartition",
    "question0886_possible_bipartition/Solution.java",
    "question0887_super_egg_drop",
    "question0887_super_egg_drop/Solution1.java",
    "question0887_super_egg_drop/Solution2.java",
    "question0887_super_egg_drop/Solution3.java",
    "question0887_super_egg_drop/Solution4.java",
    "question0888_fair_candy_swap",
    "question0888_fair_candy_swap/Solution.java",
    "question0889",
    "question0889/Solution.java",
    "question0889/TreeNode.java",
    "question089",
    "question089/Solution.java",
    "question0890_find_and_replace_pattern",
    "question0890_find_and_replace_pattern/Solution.java",
    "question0892_surface_area_of_3d_shapes",
    "question0892_surface_area_of_3d_shapes/Solution.java",
    "question0893_groups_of_special_equivalent_strings",
    "question0893_groups_of_special_equivalent_strings/Solution.java",
    "question0894",
    "question0894/Solution.java",
    "question0894/TreeNode.java",
    "question0896_monotonic_array",
    "question0896_monotonic_array/Solution.java",
    "question0897_increasing_order_search_tree",
    "question0897_increasing_order_search_tree/Solution.java",
    "question0897_increasing_order_search_tree/TreeNode.java",
    "question0898_bitwise_ors_of_subarrays",
    "question0898_bitwise_ors_of_subarrays/Solution1.java",
    "question0898_bitwise_ors_of_subarrays/Solution2.java",
    "question0900_rle_iterator",
    "question0900_rle_iterator/RLEIterator.java",
    "question0901_online_stock_span",
    "question0901_online_stock_span/StockSpanner.java",
    "question0902_numbers_at_most_n_given_digit_set",
    "question0902_numbers_at_most_n_given_digit_set/Solution.java",
    "question0903_valid_permutations_for_di_sequence",
    "question0903_valid_permutations_for_di_sequence/Solution1.java",
    "question0903_valid_permutations_for_di_sequence/Solution2.java",
    "question0903_valid_permutations_for_di_sequence/Solution3.java",
    "question0904_fruit_into_baskets",
    "question0904_fruit_into_baskets/Solution.java",
    "question0905",
    "question0905/Solution.java",
    "question0907_sum_of_subarray_minimums",
    "question0907_sum_of_subarray_minimums/Solution.java",
    "question0908_smallest_range_i",
    "question0908_smallest_range_i/Solution.java",
    "question0909_snakes_and_ladders",
    "question0909_snakes_and_ladders/Solution.java",
    "question0910_smallest_range_ii",
    "question0910_smallest_range_ii/Solution.java",
    "question0911_online_election",
    "question0911_online_election/TopVotedCandidate.java",
    "question0912_sort_an_array",
    "question0912_sort_an_array/Solution.java",
    "question0914_x_of_a_kind_in_a_deck_of_cards",
    "question0914_x_of_a_kind_in_a_deck_of_cards/Solution.java",
    "question0915_partition_array_into_disjoint_intervals",
    "question0915_partition_array_into_disjoint_intervals/Solution.java",
    "question0916",
    "question0916/Solution.java",
    "question0917_reverse_only_letters",
    "question0917_reverse_only_letters/Solution.java",
    "question0918_maximum_sum_circular_subarray",
    "question0918_maximum_sum_circular_subarray/Solution1.java",
    "question0918_maximum_sum_circular_subarray/Solution2.java",
    "question0919",
    "question0919/CBTInserter.java",
    "question0919/TreeNode.java",
    "question0920_number_of_music_playlists",
    "question0920_number_of_music_playlists/Solution.java",
    "question0921_minimum_add_to_make_parentheses_valid",
    "question0921_minimum_add_to_make_parentheses_valid/Solution.java",
    "question0922_sort_array_by_parity_ii",
    "question0922_sort_array_by_parity_ii/Solution.java",
    "question0923",
    "question0923/Solution.java",
    "question0925_long_pressed_name",
    "question0925_long_pressed_name/Solution.java",
    "question0926_flip_string_to_monotone_increasing",
    "question0926_flip_string_to_monotone_increasing/Solution.java",
    "question0929_unique_email_addresses",
    "question0929_unique_email_addresses/Solution.java",
    "question0930_binary_subarrays_with_sum",
    "question0930_binary_subarrays_with_sum/Solution1.java",
    "question0930_binary_subarrays_with_sum/Solution2.java",
    "question0930_binary_subarrays_with_sum/Solution3.java",
    "question0931_minimum_falling_path_sum",
    "question0931_minimum_falling_path_sum/Solution1.java",
    "question0931_minimum_falling_path_sum/Solution2.java",
    "question0932_beautiful_array",
    "question0932_beautiful_array/Solution.java",
    "question0933_number_of_recent_calls",
    "question0933_number_of_recent_calls/RecentCounter.java",
    "question0934_shortest_bridge",
    "question0934_shortest_bridge/Solution.java",
    "question0935_knight_dialer",
    "question0935_knight_dialer/Solution1.java",
    "question0935_knight_dialer/Solution2.java",
    "question0937_reorder_data_in_log_files",
    "question0937_reorder_data_in_log_files/Solution.java",
    "question0938_range_sum_of_bst",
    "question0938_range_sum_of_bst/Solution.java",
    "question0938_range_sum_of_bst/TreeNode.java",
    "question0939_minimum_area_rectangle",
    "question0939_minimum_area_rectangle/Solution1.java",
    "question0939_minimum_area_rectangle/Solution2.java",
    "question0940_distinct_subsequences_ii",
    "question0940_distinct_subsequences_ii/Solution.java",
    "question0941_valid_mountain_array",
    "question0941_valid_mountain_array/Solution.java",
    "question0942_di_string_match",
    "question0942_di_string_match/Solution.java",
    "question0943_find_the_shortest_superstring",
    "question0943_find_the_shortest_superstring/Solution1.java",
    "question0943_find_the_shortest_superstring/Solution2.java",
    "question0943_find_the_shortest_superstring/Solution3.java",
    "question0944_delete_columns_to_make_sorted",
    "question0944_delete_columns_to_make_sorted/Solution.java",
    "question0945_minimum_increment_to_make_array_unique",
    "question0945_minimum_increment_to_make_array_unique/Solution.java",
    "question0946_validate_stack_sequences",
    "question0946_validate_stack_sequences/Solution.java",
    "question0947_most_stones_removed_with_same_row_or_column",
    "question0947_most_stones_removed_with_same_row_or_column/Solution.java",
    "question0948_bag_of_tokens",
    "question0948_bag_of_tokens/Solution.java",
    "question0949_largest_time_for_given_digits",
    "question0949_largest_time_for_given_digits/Solution.java",
    "question0950_reveal_cards_in_increasing_order",
    "question0950_reveal_cards_in_increasing_order/Solution.java",
    "question0951",
    "question0951/Solution1.java",
    "question0951/Solution2.java",
    "question0951/TreeNode.java",
    "question0953_verifying_an_alien_dictionary",
    "question0953_verifying_an_alien_dictionary/Solution.java",
    "question0954_array_of_doubled_pairs",
    "question0954_array_of_doubled_pairs/Solution.java",
    "question0955_delete_columns_to_make_sorted_ii",
    "question0955_delete_columns_to_make_sorted_ii/Solution.java",
    "question0956_tallest_billboard",
    "question0956_tallest_billboard/Solution.java",
    "question0957_prison_cells_after_n_days",
    "question0957_prison_cells_after_n_days/Solution.java",
    "question0958",
    "question0958/Solution1.java",
    "question0958/Solution2.java",
    "question0958/TreeNode.java",
    "question0959_regions_cut_by_slashes",
    "question0959_regions_cut_by_slashes/Solution.java",
    "question096",
    "question096/Solution1.java",
    "question096/Solution2.java",
    "question096/Solution3.java",
    "question0960_delete_columns_to_make_sorted_iii",
    "question0960_delete_columns_to_make_sorted_iii/Solution.java",
    "question0961_n_repeated_element_in_size_2n_array",
    "question0961_n_repeated_element_in_size_2n_array/Solution1.java",
    "question0961_n_repeated_element_in_size_2n_array/Solution2.java",
    "question0962_maximum_width_ramp",
    "question0962_maximum_width_ramp/Solution.java",
    "question0963_minimum_area_rectangle_ii",
    "question0963_minimum_area_rectangle_ii/Solution1.java",
    "question0963_minimum_area_rectangle_ii/Solution2.java",
    "question0964_least_operators_to_express_number",
    "question0964_least_operators_to_express_number/Solution.java",
    "question0965",
    "question0965/Solution.java",
    "question0965/TreeNode.java",
    "question0966_vowel_spellchecker",
    "question0966_vowel_spellchecker/Solution.java",
    "question0967",
    "question0967/Solution.java",
    "question0968_binary_tree_cameras",
    "question0968_binary_tree_cameras/Solution.java",
    "question0968_binary_tree_cameras/TreeNode.java",
    "question0969_pancake_sorting",
    "question0969_pancake_sorting/Solution.java",
    "question097",
    "question097/Solution1.java",
    "question097/Solution2.java",
    "question0970_powerful_integers",
    "question0970_powerful_integers/Solution.java",
    "question0971",
    "question0971/Solution.java",
    "question0971/TreeNode.java",
    "question0973_k_closest_points_to_origin",
    "question0973_k_closest_points_to_origin/Solution1.java",
    "question0973_k_closest_points_to_origin/Solution2.java",
    "question0974_subarray_sums_divisible_by_k",
    "question0974_subarray_sums_divisible_by_k/Solution.java",
    "question0975_odd_even_jump",
    "question0975_odd_even_jump/Solution1.java",
    "question0975_odd_even_jump/Solution2.java",
    "question0976_largest_perimeter_triangle",
    "question0976_largest_perimeter_triangle/Solution.java",
    "question0977_squares_of_a_sorted_array",
    "question0977_squares_of_a_sorted_array/Solution.java",
    "question0978_longest_turbulent_subarray",
    "question0978_longest_turbulent_subarray/Solution.java",
    "question0979",
    "question0979/Solution.java",
    "question0979/TreeNode.java",
    "question0981_time_based_key_value_store",
    "question0981_time_based_key_value_store/TimeMap.java",
    "question0982_triples_with_bitwise_and_equal_to_zero",
    "question0982_triples_with_bitwise_and_equal_to_zero/Solution1.java",
    "question0982_triples_with_bitwise_and_equal_to_zero/Solution2.java",
    "question0983_minimum_cost_for_tickets",
    "question0983_minimum_cost_for_tickets/Solution.java",
    "question0984_string_without_aaa_or_bbb",
    "question0984_string_without_aaa_or_bbb/Solution.java",
    "question0985_sum_of_even_numbers_after_queries",
    "question0985_sum_of_even_numbers_after_queries/Solution.java",
    "question0986",
    "question0986/Solution.java",
    "question0987",
    "question0987/Solution.java",
    "question0987/TreeNode.java",
    "question0988",
    "question0988/Solution.java",
    "question0988/TreeNode.java",
    "question0989_add_to_array_form_of_integer",
    "question0989_add_to_array_form_of_integer/Solution.java",
    "question0990_satisfiability_of_equality_equations",
    "question0990_satisfiability_of_equality_equations/Solution.java",
    "question0991",
    "question0991/Solution.java",
    "question0991/TreeNode.java",
    "question0991_broken_calculator",
    "question0991_broken_calculator/Solution.java",
    "question0992_subarrays_with_k_different_integers",
    "question0992_subarrays_with_k_different_integers/Solution.java",
    "question0993_cousins_in_binary_tree",
    "question0993_cousins_in_binary_tree/Solution.java",
    "question0993_cousins_in_binary_tree/TreeNode.java",
    "question0994_rotting_oranges",
    "question0994_rotting_oranges/Solution.java",
    "question0994_rotting_oranges/\u8150\u70c2\u7684\u6a58\u5b50.md",
    "question0995_minimum_number_of_k_consecutive_bit_flips",
    "question0995_minimum_number_of_k_consecutive_bit_flips/Solution1.java",
    "question0995_minimum_number_of_k_consecutive_bit_flips/Solution2.java",
    "question0997_find_the_town_judge",
    "question0997_find_the_town_judge/Solution1.java",
    "question0997_find_the_town_judge/Solution2.java",
    "question0997_find_the_town_judge/\u627e\u5230\u5c0f\u9547\u7684\u6cd5\u5b98.md",
    "question0998",
    "question0998/Solution.java",
    "question0998/TreeNode.java",
    "question0999_available_captures_for_rook",
    "question0999_available_captures_for_rook/Solution.java",
    "question0999_available_captures_for_rook/\u8f66\u7684\u53ef\u7528\u6355\u83b7\u91cf.md",
    "question1000_minimum_cost_to_merge_stones",
    "question1000_minimum_cost_to_merge_stones/Solution1.java",
    "question1000_minimum_cost_to_merge_stones/Solution2.java",
    "question1002_find_common_characters",
    "question1002_find_common_characters/Solution.java",
    "question1002_find_common_characters/\u67e5\u627e\u5e38\u7528\u5b57\u7b26.md",
    "question1003_check_if_word_is_valid_after_substitutions",
    "question1003_check_if_word_is_valid_after_substitutions/Solution.java",
    "question1004_max_consecutive_ones_iii",
    "question1004_max_consecutive_ones_iii/Solution.java",
    "question1005_maximize_sum_of_array_after_k_negations",
    "question1005_maximize_sum_of_array_after_k_negations/Solution.java",
    "question1006_clumsy_factorial",
    "question1006_clumsy_factorial/Solution.java",
    "question1007_minimum_domino_rotations_for_equal_row",
    "question1007_minimum_domino_rotations_for_equal_row/Solution.java",
    "question1008",
    "question1008/Solution.java",
    "question1008/TreeNode.java",
    "question1009_complement_of_base_10_integer",
    "question1009_complement_of_base_10_integer/Solution.java",
    "question1010_pairs_of_songs_with_total_durations_divisible_by_60",
    "question1010_pairs_of_songs_with_total_durations_divisible_by_60/Solution.java",
    "question1010_pairs_of_songs_with_total_durations_divisible_by_60/\u603b\u6301\u7eed\u65f6\u95f4\u53ef\u88ab60\u6574\u9664\u7684\u6b4c\u66f2.md",
    "question1011_capacity_to_ship_packages_within_d_days",
    "question1011_capacity_to_ship_packages_within_d_days/Solution.java",
    "question1012_numbers_with_repeated_digits",
    "question1012_numbers_with_repeated_digits/Solution.java",
    "question1013_partition_array_into_three_parts_with_equal_sum",
    "question1013_partition_array_into_three_parts_with_equal_sum/Solution.java",
    "question1013_partition_array_into_three_parts_with_equal_sum/\u5c06\u6570\u7ec4\u5206\u6210\u548c\u76f8\u7b49\u7684\u4e09\u4e2a\u90e8\u5206.md",
    "question1014_best_sightseeing_pair",
    "question1014_best_sightseeing_pair/Solution.java",
    "question1015_smallest_integer_divisible_by_k",
    "question1015_smallest_integer_divisible_by_k/Solution.java",
    "question1016_binary_string_with_substrings_representing_1_to_n",
    "question1016_binary_string_with_substrings_representing_1_to_n/Solution.java",
    "question1017",
    "question1017/Solution.java",
    "question1018_binary_prefix_divisible_by_5",
    "question1018_binary_prefix_divisible_by_5/Solution.java",
    "question1018_binary_prefix_divisible_by_5/\u53ef\u88ab5\u6574\u9664\u7684\u4e8c\u8fdb\u5236\u524d\u7f00.md",
    "question1019_next_greater_node_in_linked_list",
    "question1019_next_greater_node_in_linked_list/ListNode.java",
    "question1019_next_greater_node_in_linked_list/Solution.java",
    "question1020_number_of_enclaves",
    "question1020_number_of_enclaves/Solution.java",
    "question1021_remove_outermost_parentheses",
    "question1021_remove_outermost_parentheses/Solution.java",
    "question1022",
    "question1022/Solution.java",
    "question1022/TreeNode.java",
    "question1023_camelcase_matching",
    "question1023_camelcase_matching/Solution.java",
    "question1024_video_stitching",
    "question1024_video_stitching/Solution.java",
    "question1025_divisor_game",
    "question1025_divisor_game/Solution.java",
    "question1026",
    "question1026/Solution.java",
    "question1026/TreeNode.java",
    "question1027_longest_arithmetic_sequence",
    "question1027_longest_arithmetic_sequence/Solution1.java",
    "question1027_longest_arithmetic_sequence/Solution2.java",
    "question1028_recover_a_tree_from_preorder_traversal",
    "question1028_recover_a_tree_from_preorder_traversal/Solution.java",
    "question1028_recover_a_tree_from_preorder_traversal/TreeNode.java",
    "question1029_two_city_scheduling",
    "question1029_two_city_scheduling/Solution.java",
    "question1030_matrix_cells_in_distance_order",
    "question1030_matrix_cells_in_distance_order/Solution.java",
    "question1031_maximum_sum_of_two_non_overlapping_subarrays",
    "question1031_maximum_sum_of_two_non_overlapping_subarrays/Solution.java",
    "question1033_moving_stones_until_consecutive",
    "question1033_moving_stones_until_consecutive/Solution.java",
    "question1034_coloring_a_border",
    "question1034_coloring_a_border/Solution.java",
    "question1035_uncrossed_lines",
    "question1035_uncrossed_lines/Solution.java",
    "question1037_valid_boomerang",
    "question1037_valid_boomerang/Solution.java",
    "question1038_binary_search_tree_to_greater_sum_tree",
    "question1038_binary_search_tree_to_greater_sum_tree/Solution.java",
    "question1038_binary_search_tree_to_greater_sum_tree/TreeNode.java",
    "question1039_minimum_score_triangulation_of_polygon",
    "question1039_minimum_score_triangulation_of_polygon/Solution.java",
    "question1040_moving_stones_until_consecutive_ii",
    "question1040_moving_stones_until_consecutive_ii/Solution.java",
    "question1041_robot_bounded_in_circle",
    "question1041_robot_bounded_in_circle/Solution.java",
    "question1042_flower_planting_with_no_adjacent",
    "question1042_flower_planting_with_no_adjacent/Solution.java",
    "question1043_partition_array_for_maximum_sum",
    "question1043_partition_array_for_maximum_sum/Solution.java",
    "question1044_longest_duplicate_substring",
    "question1044_longest_duplicate_substring/Solution.java",
    "question1046_last_stone_weight",
    "question1046_last_stone_weight/Solution1.java",
    "question1046_last_stone_weight/Solution2.java",
    "question1047_remove_all_adjacent_duplicates_in_string",
    "question1047_remove_all_adjacent_duplicates_in_string/Solution.java",
    "question1047_remove_all_adjacent_duplicates_in_string/\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u76f8\u90bb\u91cd\u590d\u9879.md",
    "question1048",
    "question1048/Solution.java",
    "question1049_last_stone_weight_ii",
    "question1049_last_stone_weight_ii/Solution.java",
    "question1051_height_checker",
    "question1051_height_checker/Solution.java",
    "question1051_height_checker/\u9ad8\u5ea6\u68c0\u67e5\u5668.md",
    "question1052_grumpy_bookstore_owner",
    "question1052_grumpy_bookstore_owner/Solution.java",
    "question1053_previous_permutation_with_one_swap",
    "question1053_previous_permutation_with_one_swap/Solution.java",
    "question1054_distant_barcodes",
    "question1054_distant_barcodes/Solution.java",
    "question1055_shortest_way_to_form_string",
    "question1055_shortest_way_to_form_string/Solution.java",
    "question1056_confusing_number",
    "question1056_confusing_number/Solution.java",
    "question1058_minimize_rounding_error_to_meet_target",
    "question1058_minimize_rounding_error_to_meet_target/Solution.java",
    "question1059_all_paths_from_source_lead_to_destination",
    "question1059_all_paths_from_source_lead_to_destination/Solution.java",
    "question1064_fixed_point",
    "question1064_fixed_point/Solution.java",
    "question1065_index_pairs_of_a_string",
    "question1065_index_pairs_of_a_string/Solution.java",
    "question1066_campus_bikes_ii",
    "question1066_campus_bikes_ii/Solution.java",
    "question1067_digit_count_in_range",
    "question1067_digit_count_in_range/Solution.java",
    "question1071_greatest_common_divisor_of_strings",
    "question1071_greatest_common_divisor_of_strings/Solution1.java",
    "question1071_greatest_common_divisor_of_strings/Solution2.java",
    "question1071_greatest_common_divisor_of_strings/Solution3.java",
    "question1071_greatest_common_divisor_of_strings/\u5b57\u7b26\u4e32\u7684\u6700\u5927\u516c\u56e0\u5b50.md",
    "question1072_flip_columns_for_maximum_number_of_equal_rows",
    "question1072_flip_columns_for_maximum_number_of_equal_rows/Solution.java",
    "question1073_adding_two_negabinary_numbers",
    "question1073_adding_two_negabinary_numbers/Solution.java",
    "question1074_number_of_submatrices_that_sum_to_target",
    "question1074_number_of_submatrices_that_sum_to_target/Solution1.java",
    "question1074_number_of_submatrices_that_sum_to_target/Solution2.java",
    "question1078_occurrences_after_bigram",
    "question1078_occurrences_after_bigram/Solution.java",
    "question1079_letter_tile_possibilities",
    "question1079_letter_tile_possibilities/Solution.java",
    "question1080_insufficient_nodes_in_root_to_leaf_paths",
    "question1080_insufficient_nodes_in_root_to_leaf_paths/Solution.java",
    "question1080_insufficient_nodes_in_root_to_leaf_paths/TreeNode.java",
    "question1081_smallest_subsequence_of_distinct_characters",
    "question1081_smallest_subsequence_of_distinct_characters/Solution.java",
    "question1085_sum_of_digits_in_the_minimum_number",
    "question1085_sum_of_digits_in_the_minimum_number/Solution.java",
    "question1086_high_five",
    "question1086_high_five/Solution.java",
    "question1087_brace_expansion",
    "question1087_brace_expansion/Solution.java",
    "question1089_duplicate_zeros",
    "question1089_duplicate_zeros/Solution.java",
    "question1090_largest_values_from_labels",
    "question1090_largest_values_from_labels/Solution.java",
    "question1091_shortest_path_in_binary_matrix",
    "question1091_shortest_path_in_binary_matrix/Solution.java",
    "question1092_shortest_common_supersequence",
    "question1092_shortest_common_supersequence/Solution.java",
    "question1093",
    "question1093/Solution.java",
    "question1094_car_pooling",
    "question1094_car_pooling/Solution.java",
    "question1095_find_in_mountain_array",
    "question1095_find_in_mountain_array/MountainArray.java",
    "question1095_find_in_mountain_array/Solution.java",
    "question1099_two_sum_less_than_k",
    "question1099_two_sum_less_than_k/Solution1.java",
    "question1099_two_sum_less_than_k/Solution2.java",
    "question1103_distribute_candies_to_people",
    "question1103_distribute_candies_to_people/Solution1.java",
    "question1103_distribute_candies_to_people/Solution2.java",
    "question1103_distribute_candies_to_people/\u5206\u7cd6\u679cII.md",
    "question1104",
    "question1104/Solution.java",
    "question1105_filling_bookcase_shelves",
    "question1105_filling_bookcase_shelves/Solution.java",
    "question1108_defanging_an_ip_address",
    "question1108_defanging_an_ip_address/Solution.java",
    "question1109_corporate_flight_bookings",
    "question1109_corporate_flight_bookings/Solution.java",
    "question1110_delete_nodes_and_return_forest",
    "question1110_delete_nodes_and_return_forest/Solution.java",
    "question1110_delete_nodes_and_return_forest/TreeNode.java",
    "question1111_maximum_nesting_depth_of_two_valid_parentheses_strings",
    "question1111_maximum_nesting_depth_of_two_valid_parentheses_strings/Solution1.java",
    "question1111_maximum_nesting_depth_of_two_valid_parentheses_strings/Solution2.java",
    "question1114",
    "question1114/Foo1.java",
    "question1114/Foo2.java",
    "question1118_number_of_days_in_a_month",
    "question1118_number_of_days_in_a_month/Solution.java",
    "question1119_remove_vowels_from_a_string",
    "question1119_remove_vowels_from_a_string/Solution.java",
    "question112",
    "question112/Solution1.java",
    "question112/Solution2.java",
    "question112/TreeNode.java",
    "question1120_maximum_average_subtree",
    "question1120_maximum_average_subtree/Solution.java",
    "question1120_maximum_average_subtree/TreeNode.java",
    "question1122_relative_sort_array",
    "question1122_relative_sort_array/Solution.java",
    "question1123",
    "question1123/Solution.java",
    "question1123/TreeNode.java",
    "question1124_longest_well_performing_interval",
    "question1124_longest_well_performing_interval/Solution1.java",
    "question1124_longest_well_performing_interval/Solution2.java",
    "question1125_smallest_sufficient_team",
    "question1125_smallest_sufficient_team/Solution.java",
    "question1128_number_of_equivalent_domino_pairs",
    "question1128_number_of_equivalent_domino_pairs/Solution1.java",
    "question1128_number_of_equivalent_domino_pairs/Solution2.java",
    "question1129_shortest_path_with_alternating_colors",
    "question1129_shortest_path_with_alternating_colors/Solution.java",
    "question1130_minimum_cost_tree_from_leaf_values",
    "question1130_minimum_cost_tree_from_leaf_values/Solution1.java",
    "question1130_minimum_cost_tree_from_leaf_values/Solution2.java",
    "question1130_minimum_cost_tree_from_leaf_values/Solution3.java",
    "question1131_maximum_of_absolute_value_expression",
    "question1131_maximum_of_absolute_value_expression/Solution.java",
    "question1133_largest_unique_number",
    "question1133_largest_unique_number/Solution.java",
    "question1134_armstrong_number",
    "question1134_armstrong_number/Solution.java",
    "question1136_parallel_courses",
    "question1136_parallel_courses/Solution.java",
    "question1137_n_th_tribonacci_number",
    "question1137_n_th_tribonacci_number/Solution.java",
    "question1138_alphabet_board_path",
    "question1138_alphabet_board_path/Solution.java",
    "question1139_largest_1_bordered_square",
    "question1139_largest_1_bordered_square/Solution.java",
    "question1140_stone_game_ii",
    "question1140_stone_game_ii/Solution1.java",
    "question1140_stone_game_ii/Solution2.java",
    "question1143_longest_common_subsequence",
    "question1143_longest_common_subsequence/Solution1.java",
    "question1143_longest_common_subsequence/Solution2.java",
    "question1144_decrease_elements_to_make_array_zigzag",
    "question1144_decrease_elements_to_make_array_zigzag/Solution.java",
    "question1145_binary_tree_coloring_game",
    "question1145_binary_tree_coloring_game/Solution.java",
    "question1145_binary_tree_coloring_game/TreeNode.java",
    "question1146_snapshot_array",
    "question1146_snapshot_array/SnapshotArray.java",
    "question1147_longest_chunked_palindrome_decomposition",
    "question1147_longest_chunked_palindrome_decomposition/Solution.java",
    "question1150_check_if_a_number_is_majority_element_in_a_sorted_array",
    "question1150_check_if_a_number_is_majority_element_in_a_sorted_array/Solution.java",
    "question1154_day_of_the_year",
    "question1154_day_of_the_year/Solution.java",
    "question1155_number_of_dice_rolls_with_target_sum",
    "question1155_number_of_dice_rolls_with_target_sum/Solution.java",
    "question1156_swap_for_longest_repeated_character_substring",
    "question1156_swap_for_longest_repeated_character_substring/Solution.java",
    "question1157_online_majority_element_in_subarray",
    "question1157_online_majority_element_in_subarray/MajorityChecker1.java",
    "question1157_online_majority_element_in_subarray/MajorityChecker2.java",
    "question1160_find_words_that_can_be_formed_by_characters",
    "question1160_find_words_that_can_be_formed_by_characters/Solution.java",
    "question1161_maximum_level_sum_of_a_binary_tree",
    "question1161_maximum_level_sum_of_a_binary_tree/Solution.java",
    "question1161_maximum_level_sum_of_a_binary_tree/TreeNode.java",
    "question1162_as_far_from_land_as_possible",
    "question1162_as_far_from_land_as_possible/Solution.java",
    "question1165_single_row_keyboard",
    "question1165_single_row_keyboard/Solution.java",
    "question1169_invalid_transactions",
    "question1169_invalid_transactions/Solution.java",
    "question1170_compare_strings_by_frequency_of_the_smallest_character",
    "question1170_compare_strings_by_frequency_of_the_smallest_character/Solution.java",
    "question1171_remove_zero_sum_consecutive_nodes_from_linked_list",
    "question1171_remove_zero_sum_consecutive_nodes_from_linked_list/ListNode.java",
    "question1171_remove_zero_sum_consecutive_nodes_from_linked_list/Solution.java",
    "question1175_prime_arrangements",
    "question1175_prime_arrangements/Solution.java",
    "question1176_diet_plan_performance",
    "question1176_diet_plan_performance/Solution.java",
    "question1177_can_make_palindrome_from_substring",
    "question1177_can_make_palindrome_from_substring/Solution.java",
    "question1178_number_of_valid_words_for_each_puzzle",
    "question1178_number_of_valid_words_for_each_puzzle/Solution.java",
    "question118",
    "question118/Solution.java",
    "question1180_count_substrings_with_only_one_distinct_letter",
    "question1180_count_substrings_with_only_one_distinct_letter/Solution.java",
    "question1184_distance_between_bus_stops",
    "question1184_distance_between_bus_stops/Solution.java",
    "question1185_day_of_the_week",
    "question1185_day_of_the_week/Solution.java",
    "question1186_maximum_subarray_sum_with_one_deletion",
    "question1186_maximum_subarray_sum_with_one_deletion/Solution.java",
    "question1187_make_array_strictly_increasing",
    "question1187_make_array_strictly_increasing/Solution.java",
    "question1189_maximum_number_of_balloons",
    "question1189_maximum_number_of_balloons/Solution.java",
    "question1190_reverse_substrings_between_each_pair_of_parentheses",
    "question1190_reverse_substrings_between_each_pair_of_parentheses/Solution.java",
    "question1191_k_concatenation_maximum_sum",
    "question1191_k_concatenation_maximum_sum/Solution.java",
    "question1196_how_many_apples_can_you_put_into_the_basket",
    "question1196_how_many_apples_can_you_put_into_the_basket/Solution.java",
    "question1199_minimum_time_to_build_blocks",
    "question1199_minimum_time_to_build_blocks/Solution.java",
    "question1200_minimum_absolute_difference",
    "question1200_minimum_absolute_difference/Solution.java",
    "question1201_ugly_number_iii",
    "question1201_ugly_number_iii/Solution.java",
    "question1202_smallest_string_with_swaps",
    "question1202_smallest_string_with_swaps/Solution.java",
    "question1203_sort_items_by_groups_respecting_dependencies",
    "question1203_sort_items_by_groups_respecting_dependencies/Solution.java",
    "question1207_unique_number_of_occurrences",
    "question1207_unique_number_of_occurrences/Solution.java",
    "question1208_get_equal_substrings_within_budget",
    "question1208_get_equal_substrings_within_budget/Solution.java",
    "question1209_remove_all_adjacent_duplicates_in_string_ii",
    "question1209_remove_all_adjacent_duplicates_in_string_ii/Solution.java",
    "question1213_intersection_of_three_sorted_arrays",
    "question1213_intersection_of_three_sorted_arrays/Solution.java",
    "question1215_stepping_numbers",
    "question1215_stepping_numbers/Solution.java",
    "question1216_valid_palindrome_iii",
    "question1216_valid_palindrome_iii/Solution.java",
    "question1217_play_with_chips",
    "question1217_play_with_chips/Solution1.java",
    "question1217_play_with_chips/Solution2.java",
    "question1218_longest_arithmetic_subsequence_of_given_difference",
    "question1218_longest_arithmetic_subsequence_of_given_difference/Solution1.java",
    "question1218_longest_arithmetic_subsequence_of_given_difference/Solution2.java",
    "question1219_path_with_maximum_gold",
    "question1219_path_with_maximum_gold/Solution.java",
    "question1220_count_vowels_permutation",
    "question1220_count_vowels_permutation/Solution.java",
    "question1221_split_a_string_in_balanced_strings",
    "question1221_split_a_string_in_balanced_strings/Solution.java",
    "question1222_queens_that_can_attack_the_king",
    "question1222_queens_that_can_attack_the_king/Solution.java",
    "question1223_dice_roll_simulation",
    "question1223_dice_roll_simulation/Solution1.java",
    "question1223_dice_roll_simulation/Solution2.java",
    "question1227_airplane_seat_assignment_probability",
    "question1227_airplane_seat_assignment_probability/Solution.java",
    "question1228_missing_number_in_arithmetic_progression",
    "question1228_missing_number_in_arithmetic_progression/Solution.java",
    "question1230_toss_strange_coins",
    "question1230_toss_strange_coins/Solution.java",
    "question1232_check_if_it_is_a_straight_line",
    "question1232_check_if_it_is_a_straight_line/Solution.java",
    "question1233_remove_sub_folders_from_the_filesystem",
    "question1233_remove_sub_folders_from_the_filesystem/Solution.java",
    "question1234_replace_the_substring_for_balanced_string",
    "question1234_replace_the_substring_for_balanced_string/Solution.java",
    "question1235_maximum_profit_in_job_scheduling",
    "question1235_maximum_profit_in_job_scheduling/Solution.java",
    "question1237_find_positive_integer_solution_for_a_given_equation",
    "question1237_find_positive_integer_solution_for_a_given_equation/CustomFunction.java",
    "question1237_find_positive_integer_solution_for_a_given_equation/Solution.java",
    "question1238_circular_permutation_in_binary_representation",
    "question1238_circular_permutation_in_binary_representation/Solution.java",
    "question1239_maximum_length_of_a_concatenated_string_with_unique_characters",
    "question1239_maximum_length_of_a_concatenated_string_with_unique_characters/Solution.java",
    "question1240_tiling_a_rectangle_with_the_fewest_squares",
    "question1240_tiling_a_rectangle_with_the_fewest_squares/Solution.java",
    "question1243_array_transformation",
    "question1243_array_transformation/Solution.java",
    "question1245_tree_diameter",
    "question1245_tree_diameter/Solution.java",
    "question1246_palindrome_removal",
    "question1246_palindrome_removal/Solution.java",
    "question1247_minimum_swaps_to_make_strings_equal",
    "question1247_minimum_swaps_to_make_strings_equal/Solution.java",
    "question1248_count_number_of_nice_subarrays",
    "question1248_count_number_of_nice_subarrays/Solution1.java",
    "question1248_count_number_of_nice_subarrays/Solution2.java",
    "question1248_count_number_of_nice_subarrays/Solution3.java",
    "question1249_minimum_remove_to_make_valid_parentheses",
    "question1249_minimum_remove_to_make_valid_parentheses/Solution.java",
    "question1252_cells_with_odd_values_in_a_matrix",
    "question1252_cells_with_odd_values_in_a_matrix/Solution1.java",
    "question1252_cells_with_odd_values_in_a_matrix/Solution2.java",
    "question1252_cells_with_odd_values_in_a_matrix/\u5947\u6570\u503c\u5355\u5143\u683c\u7684\u6570\u76ee.md",
    "question1253_reconstruct_a_2_row_binary_matrix",
    "question1253_reconstruct_a_2_row_binary_matrix/Solution.java",
    "question1254_number_of_closed_islands",
    "question1254_number_of_closed_islands/Solution.java",
    "question1257_smallest_common_region",
    "question1257_smallest_common_region/Solution.java",
    "question1258_synonymous_sentences",
    "question1258_synonymous_sentences/Solution.java",
    "question1259_handshakes_that_dont_cross",
    "question1259_handshakes_that_dont_cross/Solution1.java",
    "question1259_handshakes_that_dont_cross/Solution2.java",
    "question1260_shift_2d_grid",
    "question1260_shift_2d_grid/Solution.java",
    "question1261_find_elements_in_a_contaminated_binary_tree",
    "question1261_find_elements_in_a_contaminated_binary_tree/FindElements.java",
    "question1261_find_elements_in_a_contaminated_binary_tree/TreeNode.java",
    "question1262_greatest_sum_divisible_by_three",
    "question1262_greatest_sum_divisible_by_three/Solution.java",
    "question1266_minimum_time_visiting_all_points",
    "question1266_minimum_time_visiting_all_points/Solution.java",
    "question1266_minimum_time_visiting_all_points/\u8bbf\u95ee\u6240\u6709\u70b9\u7684\u6700\u5c0f\u65f6\u95f4.md",
    "question1267_count_servers_that_communicate",
    "question1267_count_servers_that_communicate/Solution.java",
    "question1268_search_suggestions_system",
    "question1268_search_suggestions_system/Solution.java",
    "question1269_number_of_ways_to_stay_in_the_same_place_after_some_steps",
    "question1269_number_of_ways_to_stay_in_the_same_place_after_some_steps/Solution.java",
    "question127",
    "question127/Solution1.java",
    "question127/Solution2.java",
    "question1271_hexspeak",
    "question1271_hexspeak/Solution.java",
    "question1273_delete_tree_nodes",
    "question1273_delete_tree_nodes/Solution.java",
    "question1275_find_winner_on_a_tic_tac_toe_game",
    "question1275_find_winner_on_a_tic_tac_toe_game/Solution.java",
    "question1276_number_of_burgers_with_no_waste_of_ingredients",
    "question1276_number_of_burgers_with_no_waste_of_ingredients/Solution.java",
    "question1277_count_square_submatrices_with_all_ones",
    "question1277_count_square_submatrices_with_all_ones/Solution.java",
    "question1278_palindrome_partitioning_iii",
    "question1278_palindrome_partitioning_iii/Solution.java",
    "question1281_subtract_the_product_and_sum_of_digits_of_an_integer",
    "question1281_subtract_the_product_and_sum_of_digits_of_an_integer/Solution.java",
    "question1282_group_the_people_given_the_group_size_they_belong_to",
    "question1282_group_the_people_given_the_group_size_they_belong_to/Solution.java",
    "question1283_find_the_smallest_divisor_given_a_threshold",
    "question1283_find_the_smallest_divisor_given_a_threshold/Solution.java",
    "question1286_iterator_for_combination",
    "question1286_iterator_for_combination/CombinationIterator.java",
    "question1287_element_appearing_more_than_25_in_sorted_array",
    "question1287_element_appearing_more_than_25_in_sorted_array/Solution.java",
    "question1288_remove_covered_intervals",
    "question1288_remove_covered_intervals/Solution.java",
    "question1289_minimum_falling_path_sum_ii",
    "question1289_minimum_falling_path_sum_ii/Solution1.java",
    "question1289_minimum_falling_path_sum_ii/Solution2.java",
    "question1290_convert_binary_number_in_a_linked_list_to_integer",
    "question1290_convert_binary_number_in_a_linked_list_to_integer/ListNode.java",
    "question1290_convert_binary_number_in_a_linked_list_to_integer/Solution.java",
    "question1291_sequential_digits",
    "question1291_sequential_digits/Solution.java",
    "question1292_maximum_side_length_of_a_square_with_sum_less_than_or_equal_to_threshold",
    "question1292_maximum_side_length_of_a_square_with_sum_less_than_or_equal_to_threshold/Solution.java",
    "question1296_divide_array_in_sets_of_k_consecutive_numbers",
    "question1296_divide_array_in_sets_of_k_consecutive_numbers/Solution.java",
    "question1297_maximum_number_of_occurrences_of_a_substring",
    "question1297_maximum_number_of_occurrences_of_a_substring/Solution.java",
    "question1299_replace_elements_with_greatest_element_on_right_side",
    "question1299_replace_elements_with_greatest_element_on_right_side/Solution.java",
    "question1300_sum_of_mutated_array_closest_to_target",
    "question1300_sum_of_mutated_array_closest_to_target/Solution.java",
    "question1301_number_of_paths_with_max_score",
    "question1301_number_of_paths_with_max_score/Solution.java",
    "question1302_deepest_leaves_sum",
    "question1302_deepest_leaves_sum/Solution.java",
    "question1302_deepest_leaves_sum/TreeNode.java",
    "question1306_jump_game_iii",
    "question1306_jump_game_iii/Solution.java",
    "question1309_decrypt_string_from_alphabet_to_integer_mapping",
    "question1309_decrypt_string_from_alphabet_to_integer_mapping/Solution.java",
    "question1310_xor_queries_of_a_subarray",
    "question1310_xor_queries_of_a_subarray/Solution.java",
    "question1311_get_watched_videos_by_your_friends",
    "question1311_get_watched_videos_by_your_friends/Solution.java",
    "question1312_minimum_insertion_steps_to_make_a_string_palindrome",
    "question1312_minimum_insertion_steps_to_make_a_string_palindrome/Solution.java",
    "question1313_decompress_run_length_encoded_list",
    "question1313_decompress_run_length_encoded_list/Solution.java",
    "question1314_matrix_block_sum",
    "question1314_matrix_block_sum/Solution1.java",
    "question1314_matrix_block_sum/Solution2.java",
    "question1314_matrix_block_sum/Solution3.java",
    "question1315_sum_of_nodes_with_even_valued_grandparent",
    "question1315_sum_of_nodes_with_even_valued_grandparent/Solution.java",
    "question1315_sum_of_nodes_with_even_valued_grandparent/TreeNode.java",
    "question1317_convert_integer_to_the_sum_of_two_no_zero_integers",
    "question1317_convert_integer_to_the_sum_of_two_no_zero_integers/Solution.java",
    "question1318_minimum_flips_to_make_a_or_b_equal_to_c",
    "question1318_minimum_flips_to_make_a_or_b_equal_to_c/Solution.java",
    "question1319_number_of_operations_to_make_network_connected",
    "question1319_number_of_operations_to_make_network_connected/Solution.java",
    "question1320_minimum_distance_to_type_a_word_using_two_fingers",
    "question1320_minimum_distance_to_type_a_word_using_two_fingers/Solution.java",
    "question1323_maximum_69_number",
    "question1323_maximum_69_number/Solution.java",
    "question1324_print_words_vertically",
    "question1324_print_words_vertically/Solution.java",
    "question1325_delete_leaves_with_a_given_value",
    "question1325_delete_leaves_with_a_given_value/Solution.java",
    "question1325_delete_leaves_with_a_given_value/TreeNode.java",
    "question1326_minimum_number_of_taps_to_open_to_water_a_garden",
    "question1326_minimum_number_of_taps_to_open_to_water_a_garden/Solution1.java",
    "question1326_minimum_number_of_taps_to_open_to_water_a_garden/Solution2.java",
    "question1328_break_a_palindrome",
    "question1328_break_a_palindrome/Solution.java",
    "question1329_sort_the_matrix_diagonally",
    "question1329_sort_the_matrix_diagonally/Solution.java",
    "question1331_rank_transform_of_an_array",
    "question1331_rank_transform_of_an_array/Solution.java",
    "question1332_remove_palindromic_subsequences",
    "question1332_remove_palindromic_subsequences/Solution.java",
    "question1333_filter_restaurants_by_vegan_friendly_price_and_distance",
    "question1333_filter_restaurants_by_vegan_friendly_price_and_distance/Solution.java",
    "question1334_find_the_city_with_the_smallest_number_of_neighbors_at_a_threshold_distance",
    "question1334_find_the_city_with_the_smallest_number_of_neighbors_at_a_threshold_distance/Solution.java",
    "question1335_minimum_difficulty_of_a_job_schedule",
    "question1335_minimum_difficulty_of_a_job_schedule/Solution.java",
    "question1337_the_k_weakest_rows_in_a_matrix",
    "question1337_the_k_weakest_rows_in_a_matrix/Solution.java",
    "question1338_reduce_array_size_to_the_half",
    "question1338_reduce_array_size_to_the_half/Solution.java",
    "question1339_maximum_product_of_splitted_binary_tree",
    "question1339_maximum_product_of_splitted_binary_tree/Solution.java",
    "question1339_maximum_product_of_splitted_binary_tree/TreeNode.java",
    "question1340_jump_game_v",
    "question1340_jump_game_v/Solution.java",
    "question1342_number_of_steps_to_reduce_a_number_to_zero",
    "question1342_number_of_steps_to_reduce_a_number_to_zero/Solution.java",
    "question1343_number_of_sub_arrays_of_size_k_and_average_greater_than_or_equal_to_threshold",
    "question1343_number_of_sub_arrays_of_size_k_and_average_greater_than_or_equal_to_threshold/Solution.java",
    "question1344_angle_between_hands_of_a_clock",
    "question1344_angle_between_hands_of_a_clock/Solution.java",
    "question1345_jump_game_iv",
    "question1345_jump_game_iv/Solution.java",
    "question1346_check_if_n_and_its_double_exist",
    "question1346_check_if_n_and_its_double_exist/Solution.java",
    "question1347_minimum_number_of_steps_to_make_two_strings_anagram",
    "question1347_minimum_number_of_steps_to_make_two_strings_anagram/Solution.java",
    "question1348_tweet_counts_per_frequency",
    "question1348_tweet_counts_per_frequency/TweetCounts.java",
    "question1349_maximum_students_taking_exam",
    "question1349_maximum_students_taking_exam/Solution.java",
    "question1351_count_negative_numbers_in_a_sorted_matrix",
    "question1351_count_negative_numbers_in_a_sorted_matrix/Solution1.java",
    "question1351_count_negative_numbers_in_a_sorted_matrix/Solution2.java",
    "question1351_count_negative_numbers_in_a_sorted_matrix/Solution3.java",
    "question1351_count_negative_numbers_in_a_sorted_matrix/\u7edf\u8ba1\u6709\u5e8f\u77e9\u9635\u4e2d\u7684\u8d1f\u6570.md",
    "question1352_product_of_the_last_k_numbers",
    "question1352_product_of_the_last_k_numbers/ProductOfNumbers.java",
    "question1353_maximum_number_of_events_that_can_be_attended",
    "question1353_maximum_number_of_events_that_can_be_attended/Solution.java",
    "question1356_sort_integers_by_the_number_of_1_bits",
    "question1356_sort_integers_by_the_number_of_1_bits/Solution.java",
    "question1357_apply_discount_every_n_orders",
    "question1357_apply_discount_every_n_orders/Cashier.java",
    "question1358_number_of_substrings_containing_all_three_characters",
    "question1358_number_of_substrings_containing_all_three_characters/Solution1.java",
    "question1358_number_of_substrings_containing_all_three_characters/Solution2.java",
    "question1359_count_all_valid_pickup_and_delivery_options",
    "question1359_count_all_valid_pickup_and_delivery_options/Solution.java",
    "question1360_number_of_days_between_two_dates",
    "question1360_number_of_days_between_two_dates/Solution.java",
    "question1360_number_of_days_between_two_dates/\u65e5\u671f\u4e4b\u95f4\u9694\u51e0\u5929.md",
    "question1361_validate_binary_tree_nodes",
    "question1361_validate_binary_tree_nodes/Solution.java",
    "question1362_closest_divisors",
    "question1362_closest_divisors/Solution.java",
    "question1362_closest_divisors/\u6700\u63a5\u8fd1\u7684\u56e0\u6570.md",
    "question1363_largest_multiple_of_three",
    "question1363_largest_multiple_of_three/Solution.java",
    "question1363_largest_multiple_of_three/\u5f62\u6210\u4e09\u7684\u6700\u5927\u500d\u6570.md",
    "question1365_how_many_numbers_are_smaller_than_the_current_number",
    "question1365_how_many_numbers_are_smaller_than_the_current_number/Solution.java",
    "question1366_rank_teams_by_votes",
    "question1366_rank_teams_by_votes/Solution.java",
    "question1366_rank_teams_by_votes/\u901a\u8fc7\u6295\u7968\u5bf9\u56e2\u961f\u6392\u540d.md",
    "question1367_linked_list_in_binary_tree",
    "question1367_linked_list_in_binary_tree/ListNode.java",
    "question1367_linked_list_in_binary_tree/Solution.java",
    "question1367_linked_list_in_binary_tree/TreeNode.java",
    "question1367_linked_list_in_binary_tree/\u4e8c\u53c9\u6811\u4e2d\u7684\u5217\u8868.md",
    "question1368_minimum_cost_to_make_at_least_one_valid_path_in_a_grid",
    "question1368_minimum_cost_to_make_at_least_one_valid_path_in_a_grid/Solution.java",
    "question1368_minimum_cost_to_make_at_least_one_valid_path_in_a_grid/\u4f7f\u7f51\u683c\u56fe\u81f3\u5c11\u6709\u4e00\u6761\u6709\u6548\u8def\u5f84\u7684\u6700\u5c0f\u4ee3\u4ef7.md",
    "question1371_find_the_longest_substring_containing_vowels_in_even_counts",
    "question1371_find_the_longest_substring_containing_vowels_in_even_counts/Solution.java",
    "question1371_find_the_longest_substring_containing_vowels_in_even_counts/\u6bcf\u4e2a\u5143\u97f3\u5305\u542b\u5076\u6570\u6b21\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32.md",
    "question1372_longest_zigzag_path_in_a_binary_tree",
    "question1372_longest_zigzag_path_in_a_binary_tree/Solution1.java",
    "question1372_longest_zigzag_path_in_a_binary_tree/Solution2.java",
    "question1372_longest_zigzag_path_in_a_binary_tree/TreeNode.java",
    "question1372_longest_zigzag_path_in_a_binary_tree/\u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u957f\u4ea4\u9519\u8def\u5f84.md",
    "question1373_maximum_sum_bst_in_binary_tree",
    "question1373_maximum_sum_bst_in_binary_tree/Solution.java",
    "question1373_maximum_sum_bst_in_binary_tree/TreeNode.java",
    "question1373_maximum_sum_bst_in_binary_tree/\u4e8c\u53c9\u641c\u7d22\u5b50\u6811\u7684\u6700\u5927\u952e\u503c\u548c.md",
    "question1374_generate_a_string_with_characters_that_have_odd_counts",
    "question1374_generate_a_string_with_characters_that_have_odd_counts/Solution.java",
    "question1374_generate_a_string_with_characters_that_have_odd_counts/\u751f\u6210\u6bcf\u79cd\u5b57\u7b26\u90fd\u662f\u5947\u6570\u4e2a\u7684\u5b57\u7b26\u4e32.md",
    "question1375_bulb_switcher_iii",
    "question1375_bulb_switcher_iii/Solution1.java",
    "question1375_bulb_switcher_iii/Solution2.java",
    "question1375_bulb_switcher_iii/\u706f\u6ce1\u5f00\u5173III.md",
    "question1376_time_needed_to_inform_all_employees",
    "question1376_time_needed_to_inform_all_employees/Solution.java",
    "question1379_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree",
    "question1379_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree/Solution.java",
    "question1379_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree/TreeNode.java",
    "question1380_lucky_numbers_in_a_matrix",
    "question1380_lucky_numbers_in_a_matrix/Solution.java",
    "question1381_design_a_stack_with_increment_operation",
    "question1381_design_a_stack_with_increment_operation/CustomStack.java",
    "question1382_balance_a_binary_search_tree",
    "question1382_balance_a_binary_search_tree/Solution.java",
    "question1382_balance_a_binary_search_tree/TreeNode.java",
    "question1383_maximum_performance_of_a_team",
    "question1383_maximum_performance_of_a_team/Solution.java",
    "question1385_find_the_distance_value_between_two_arrays",
    "question1385_find_the_distance_value_between_two_arrays/Solution.java",
    "question1386_cinema_seat_allocation",
    "question1386_cinema_seat_allocation/Solution.java",
    "question1387_sort_integers_by_the_power_value",
    "question1387_sort_integers_by_the_power_value/Solution.java",
    "question1388_pizza_with_3n_slices",
    "question1388_pizza_with_3n_slices/Solution.java",
    "question1389_create_target_array_in_the_given_order",
    "question1389_create_target_array_in_the_given_order/Solution.java",
    "question1390_four_divisors",
    "question1390_four_divisors/Solution.java",
    "question1391_check_if_there_is_a_valid_path_in_a_grid",
    "question1391_check_if_there_is_a_valid_path_in_a_grid/Solution.java",
    "question1392_longest_happy_prefix",
    "question1392_longest_happy_prefix/Solution1.java",
    "question1392_longest_happy_prefix/Solution2.java",
    "question1394_find_lucky_integer_in_an_array",
    "question1394_find_lucky_integer_in_an_array/Solution.java",
    "question1395_count_number_of_teams",
    "question1395_count_number_of_teams/Solution.java",
    "question1396_design_underground_system",
    "question1396_design_underground_system/UndergroundSystem.java",
    "question1397_find_all_good_strings",
    "question1397_find_all_good_strings/Solution.java",
    "question1399_count_largest_group",
    "question1399_count_largest_group/Solution.java",
    "question1400_construct_k_palindrome_strings",
    "question1400_construct_k_palindrome_strings/Solution.java",
    "question1401_circle_and_rectangle_overlapping",
    "question1401_circle_and_rectangle_overlapping/Solution.java",
    "question1402_reducing_dishes",
    "question1402_reducing_dishes/Solution.java",
    "question1403_minimum_subsequence_in_non_increasing_order",
    "question1403_minimum_subsequence_in_non_increasing_order/Solution.java",
    "question1404_number_of_steps_to_reduce_a_number_in_binary_representation_to_one",
    "question1404_number_of_steps_to_reduce_a_number_in_binary_representation_to_one/Solution.java",
    "question1405_longest_happy_string",
    "question1405_longest_happy_string/Solution.java",
    "question1406_stone_game_iii",
    "question1406_stone_game_iii/Solution.java",
    "question1408_string_matching_in_an_array",
    "question1408_string_matching_in_an_array/Solution.java",
    "question1409_queries_on_a_permutation_with_key",
    "question1409_queries_on_a_permutation_with_key/Solution.java",
    "question1410_html_entity_parser",
    "question1410_html_entity_parser/Solution.java",
    "question1411_number_of_ways_to_paint_n_x_3_grid",
    "question1411_number_of_ways_to_paint_n_x_3_grid/Solution.java",
    "question1414_find_the_minimum_number_of_fibonacci_numbers_whose_sum_is_k",
    "question1414_find_the_minimum_number_of_fibonacci_numbers_whose_sum_is_k/Solution.java",
    "question1415_the_k_th_lexicographical_string_of_all_happy_strings_of_length_n",
    "question1415_the_k_th_lexicographical_string_of_all_happy_strings_of_length_n/Solution.java",
    "question1416_restore_the_array",
    "question1416_restore_the_array/Solution.java",
    "question1420_build_array_where_you_can_find_the_maximum_exactly_k_comparisons",
    "question1420_build_array_where_you_can_find_the_maximum_exactly_k_comparisons/Solution.java",
    "question1422_maximum_score_after_splitting_a_string",
    "question1422_maximum_score_after_splitting_a_string/Solution.java",
    "question1423_maximum_points_you_can_obtain_from_cards",
    "question1423_maximum_points_you_can_obtain_from_cards/Solution1.java",
    "question1423_maximum_points_you_can_obtain_from_cards/Solution2.java",
    "question1424_diagonal_traverse_ii",
    "question1424_diagonal_traverse_ii/Solution.java",
    "question1425_constrained_subsequence_sum",
    "question1425_constrained_subsequence_sum/Solution.java",
    "question1426_counting_elements",
    "question1426_counting_elements/Solution.java",
    "question1427_perform_string_shifts",
    "question1427_perform_string_shifts/Solution.java",
    "question1430_check_if_a_string_is_a_valid_sequence_from_root_to_leaves_path_in_a_binary_tree",
    "question1430_check_if_a_string_is_a_valid_sequence_from_root_to_leaves_path_in_a_binary_tree/Solution.java",
    "question1430_check_if_a_string_is_a_valid_sequence_from_root_to_leaves_path_in_a_binary_tree/TreeNode.java",
    "question1431_kids_with_the_greatest_number_of_candies",
    "question1431_kids_with_the_greatest_number_of_candies/Solution.java",
    "question1432_max_difference_you_can_get_from_changing_an_integer",
    "question1432_max_difference_you_can_get_from_changing_an_integer/Solution.java",
    "question1433_check_if_a_string_can_break_another_string",
    "question1433_check_if_a_string_can_break_another_string/Solution.java",
    "question1434_number_of_ways_to_wear_different_hats_to_each_other",
    "question1434_number_of_ways_to_wear_different_hats_to_each_other/Solution.java",
    "question1436_destination_city",
    "question1436_destination_city/Solution.java",
    "question1437_check_if_all_1s_are_at_least_length_k_places_away",
    "question1437_check_if_all_1s_are_at_least_length_k_places_away/Solution.java",
    "question1438_longest_continuous_subarray_with_absolute_diff_less_than_or_equal_to_limit",
    "question1438_longest_continuous_subarray_with_absolute_diff_less_than_or_equal_to_limit/Solution1.java",
    "question1438_longest_continuous_subarray_with_absolute_diff_less_than_or_equal_to_limit/Solution2.java",
    "question1441_build_an_array_with_stack_operations",
    "question1441_build_an_array_with_stack_operations/Solution.java",
    "question1442_count_triplets_that_can_form_two_arrays_of_equal_xor",
    "question1442_count_triplets_that_can_form_two_arrays_of_equal_xor/Solution.java",
    "question1443_minimum_time_to_collect_all_apples_in_a_tree",
    "question1443_minimum_time_to_collect_all_apples_in_a_tree/Solution.java",
    "question1444_number_of_ways_of_cutting_a_pizza",
    "question1444_number_of_ways_of_cutting_a_pizza/Solution.java",
    "question1446_consecutive_characters",
    "question1446_consecutive_characters/Solution.java",
    "question1447_simplified_fractions",
    "question1447_simplified_fractions/Solution.java",
    "question1448_count_good_nodes_in_binary_tree",
    "question1448_count_good_nodes_in_binary_tree/Solution1.java",
    "question1448_count_good_nodes_in_binary_tree/Solution2.java",
    "question1448_count_good_nodes_in_binary_tree/TreeNode.java",
    "question1449_form_largest_integer_with_digits_that_add_up_to_target",
    "question1449_form_largest_integer_with_digits_that_add_up_to_target/Solution.java",
    "question1450_number_of_students_doing_homework_at_a_given_time",
    "question1450_number_of_students_doing_homework_at_a_given_time/Solution.java",
    "question1451_rearrange_words_in_a_sentence",
    "question1451_rearrange_words_in_a_sentence/Solution.java",
    "question1452_people_whose_list_of_favorite_companies_is_not_a_subset_of_another_list",
    "question1452_people_whose_list_of_favorite_companies_is_not_a_subset_of_another_list/Solution.java",
    "question1455_check_if_a_word_occurs_as_a_prefix_of_any_word_in_a_sentence",
    "question1455_check_if_a_word_occurs_as_a_prefix_of_any_word_in_a_sentence/Solution.java",
    "question1456_maximum_number_of_vowels_in_a_substring_of_given_length",
    "question1456_maximum_number_of_vowels_in_a_substring_of_given_length/Solution.java",
    "question1457_pseudo_palindromic_paths_in_a_binary_tree",
    "question1457_pseudo_palindromic_paths_in_a_binary_tree/Solution.java",
    "question1457_pseudo_palindromic_paths_in_a_binary_tree/TreeNode.java",
    "question1458_max_dot_product_of_two_subsequences",
    "question1458_max_dot_product_of_two_subsequences/Solution.java",
    "question1460_make_two_arrays_equal_by_reversing_sub_arrays",
    "question1460_make_two_arrays_equal_by_reversing_sub_arrays/Solution.java",
    "question1461_check_if_a_string_contains_all_binary_codes_of_size_k",
    "question1461_check_if_a_string_contains_all_binary_codes_of_size_k/Solution.java",
    "question1462_course_schedule_iv",
    "question1462_course_schedule_iv/Solution.java",
    "question1463_cherry_pick_ii",
    "question1463_cherry_pick_ii/Solution.java",
    "question1464_maximum_product_of_two_elements_in_an_array",
    "question1464_maximum_product_of_two_elements_in_an_array/Solution.java",
    "question1465_maximum_area_of_a_piece_of_cake_after_horizontal_and_vertical_cuts",
    "question1465_maximum_area_of_a_piece_of_cake_after_horizontal_and_vertical_cuts/Solution.java",
    "question1466_reorder_routes_to_make_all_paths_lead_to_the_city_zero",
    "question1466_reorder_routes_to_make_all_paths_lead_to_the_city_zero/Solution.java",
    "question1469_find_all_the_lonely_nodes",
    "question1469_find_all_the_lonely_nodes/Solution.java",
    "question1469_find_all_the_lonely_nodes/TreeNode.java",
    "question147",
    "question147/ListNode.java",
    "question147/Solution.java",
    "question1471_the_k_strongest_values_in_an_array",
    "question1471_the_k_strongest_values_in_an_array/Solution1.java",
    "question1471_the_k_strongest_values_in_an_array/Solution2.java",
    "question1472_design_browser_history",
    "question1472_design_browser_history/BrowserHistory.java",
    "question1473_paint_house_iii",
    "question1473_paint_house_iii/Solution.java",
    "question1475_final_prices_with_a_special_discount_in_a_shop",
    "question1475_final_prices_with_a_special_discount_in_a_shop/Solution1.java",
    "question1475_final_prices_with_a_special_discount_in_a_shop/Solution2.java",
    "question1476_subrectangle_queries",
    "question1476_subrectangle_queries/SubrectangleQueries.java",
    "question1477_find_two_non_overlapping_sub_arrays_each_with_target_sum",
    "question1477_find_two_non_overlapping_sub_arrays_each_with_target_sum/Solution.java",
    "question1478_allocate_mailboxes",
    "question1478_allocate_mailboxes/Solution.java",
    "question1480_running_sum_of_1d_array",
    "question1480_running_sum_of_1d_array/Solution.java",
    "question1481_least_number_of_unique_integers_after_k_removals",
    "question1481_least_number_of_unique_integers_after_k_removals/Solution.java",
    "question1482_minimum_number_of_days_to_make_m_bouquets",
    "question1482_minimum_number_of_days_to_make_m_bouquets/Solution.java",
    "question1483_kth_ancestor_of_a_tree_node",
    "question1483_kth_ancestor_of_a_tree_node/TreeAncestor.java",
    "question1484_clone_binary_tree_with_random_pointer",
    "question1484_clone_binary_tree_with_random_pointer/Node.java",
    "question1484_clone_binary_tree_with_random_pointer/NodeCopy.java",
    "question1484_clone_binary_tree_with_random_pointer/Solution.java",
    "question1486_xor_operation_in_an_array",
    "question1486_xor_operation_in_an_array/Solution.java",
    "question1487_making_file_names_unique",
    "question1487_making_file_names_unique/Solution.java",
    "question1488_avoid_flood_in_the_city",
    "question1488_avoid_flood_in_the_city/Solution.java",
    "question1489_find_critical_and_pseudo_critical_edges_in_minimum_spanning_tree",
    "question1489_find_critical_and_pseudo_critical_edges_in_minimum_spanning_tree/Solution.java",
    "question149",
    "question149/Point.java",
    "question149/Solution.java",
    "question1490_clone_n_ary_tree",
    "question1490_clone_n_ary_tree/Node.java",
    "question1490_clone_n_ary_tree/Solution.java",
    "question1491_average_salary_excluding_the_minimum_and_maximum_salary",
    "question1491_average_salary_excluding_the_minimum_and_maximum_salary/Solution.java",
    "question1492_the_kth_factor_of_n",
    "question1492_the_kth_factor_of_n/Solution.java",
    "question1493_longest_subarray_of_1s_after_deleting_one_element",
    "question1493_longest_subarray_of_1s_after_deleting_one_element/Solution.java",
    "question1496_path_crossing",
    "question1496_path_crossing/Solution.java",
    "question1497_check_if_array_pairs_are_divisible_by_k",
    "question1497_check_if_array_pairs_are_divisible_by_k/Solution.java",
    "question1498_number_of_subsequences_that_satisfy_the_given_sum_condition",
    "question1498_number_of_subsequences_that_satisfy_the_given_sum_condition/Solution.java",
    "question1502_can_make_arithmetic_progression_from_sequence",
    "question1502_can_make_arithmetic_progression_from_sequence/Solution.java",
    "question1503_last_moment_before_all_ants_fall_out_of_a_plank",
    "question1503_last_moment_before_all_ants_fall_out_of_a_plank/Solution.java",
    "question1504_count_submatrices_with_all_ones",
    "question1504_count_submatrices_with_all_ones/Solution1.java",
    "question1504_count_submatrices_with_all_ones/Solution2.java",
    "question1507_reformat_date",
    "question1507_reformat_date/Solution.java",
    "question1508_range_sum_of_sorted_subarray_sums",
    "question1508_range_sum_of_sorted_subarray_sums/Solution.java",
    "question1509_minimum_difference_between_largest_and_smallest_value_in_three_moves",
    "question1509_minimum_difference_between_largest_and_smallest_value_in_three_moves/Solution.java",
    "question1510_stone_game_iv",
    "question1510_stone_game_iv/Solution.java",
    "question1512_number_of_good_pairs",
    "question1512_number_of_good_pairs/Solution.java",
    "question1513_number_of_substrings_with_only_1s",
    "question1513_number_of_substrings_with_only_1s/Solution.java",
    "question1514_path_with_maximum_probability",
    "question1514_path_with_maximum_probability/Solution1.java",
    "question1514_path_with_maximum_probability/Solution2.java",
    "question1516_move_sub_tree_of_n_ary_tree",
    "question1516_move_sub_tree_of_n_ary_tree/Node.java",
    "question1516_move_sub_tree_of_n_ary_tree/Solution.java",
    "question1518_water_bottles",
    "question1518_water_bottles/Solution.java",
    "question1519_number_of_nodes_in_the_sub_tree_with_the_same_label",
    "question1519_number_of_nodes_in_the_sub_tree_with_the_same_label/Solution.java",
    "question1523_count_odd_numbers_in_an_interval_range",
    "question1523_count_odd_numbers_in_an_interval_range/Solution.java",
    "question1524_number_of_sub_arrays_with_odd_sum",
    "question1524_number_of_sub_arrays_with_odd_sum/Solution.java",
    "question1525_number_of_good_ways_to_split_a_string",
    "question1525_number_of_good_ways_to_split_a_string/Solution.java",
    "question1526_minimum_number_of_increments_on_subarrays_to_form_a_target_array",
    "question1526_minimum_number_of_increments_on_subarrays_to_form_a_target_array/Solution.java",
    "question1528_shuffle_string",
    "question1528_shuffle_string/Solution.java",
    "question1529_bulb_switcher_iv",
    "question1529_bulb_switcher_iv/Solution.java",
    "question1530_number_of_good_leaf_nodes_pairs",
    "question1530_number_of_good_leaf_nodes_pairs/Solution.java",
    "question1530_number_of_good_leaf_nodes_pairs/TreeNode.java",
    "question1531_string_compression_ii",
    "question1531_string_compression_ii/Solution1.java",
    "question1531_string_compression_ii/Solution2.java",
    "question1534_count_good_triplets",
    "question1534_count_good_triplets/Solution.java",
    "question1535_find_the_winner_of_an_array_game",
    "question1535_find_the_winner_of_an_array_game/Solution.java",
    "question1536_minimum_swaps_to_arrange_a_binary_grid",
    "question1536_minimum_swaps_to_arrange_a_binary_grid/Solution.java",
    "question1537_get_the_maximum_score",
    "question1537_get_the_maximum_score/Solution.java",
    "question1539_kth_missing_positive_number",
    "question1539_kth_missing_positive_number/Solution.java",
    "question1540_can_convert_string_in_k_moves",
    "question1540_can_convert_string_in_k_moves/Solution.java",
    "question1541_minimum_insertions_to_balance_a_parentheses_string",
    "question1541_minimum_insertions_to_balance_a_parentheses_string/Solution.java",
    "question1544_make_the_string_great",
    "question1544_make_the_string_great/Solution.java",
    "question1545_find_kth_bit_in_nth_binary_string",
    "question1545_find_kth_bit_in_nth_binary_string/Solution.java",
    "question1546_maximum_number_of_non_overlapping_subarrays_with_sum_equals_target",
    "question1546_maximum_number_of_non_overlapping_subarrays_with_sum_equals_target/Solution.java",
    "question1547_minimum_cost_to_cut_a_stick",
    "question1547_minimum_cost_to_cut_a_stick/Solution.java",
    "question1548_the_most_similar_path_in_a_graph",
    "question1548_the_most_similar_path_in_a_graph/Solution.java",
    "question1550_three_consecutive_odds",
    "question1550_three_consecutive_odds/Solution.java",
    "question1551_minimum_operations_to_make_array_equal",
    "question1551_minimum_operations_to_make_array_equal/Solution.java",
    "question1552_magnetic_force_between_two_balls",
    "question1552_magnetic_force_between_two_balls/Solution.java",
    "question1553_minimum_number_of_days_to_eat_n_oranges",
    "question1553_minimum_number_of_days_to_eat_n_oranges/Solution.java",
    "question1556_thousand_separator",
    "question1556_thousand_separator/Solution.java",
    "question1557_minimum_number_of_vertices_to_reach_all_nodes",
    "question1557_minimum_number_of_vertices_to_reach_all_nodes/Solution.java",
    "question1558_minimum_numbers_of_function_calls_to_make_target_array",
    "question1558_minimum_numbers_of_function_calls_to_make_target_array/Solution.java",
    "question1560_most_visited_sector_in_a_circular_track",
    "question1560_most_visited_sector_in_a_circular_track/Solution.java",
    "question1561_maximum_number_of_coins_you_can_get",
    "question1561_maximum_number_of_coins_you_can_get/Solution.java",
    "question1562_find_latest_group_of_size_m",
    "question1562_find_latest_group_of_size_m/Solution.java",
    "question1563_stone_game_v",
    "question1563_stone_game_v/Solution.java",
    "question1566_detect_pattern_of_length_m_repeated_k_or_more_times",
    "question1566_detect_pattern_of_length_m_repeated_k_or_more_times/Solution.java",
    "question1567_maximum_length_of_subarray_with_positive_product",
    "question1567_maximum_length_of_subarray_with_positive_product/Solution.java",
    "question1569_number_of_ways_to_reorder_array_to_get_same_bst",
    "question1569_number_of_ways_to_reorder_array_to_get_same_bst/Solution.java",
    "question1573_number_of_ways_to_split_a_string",
    "question1573_number_of_ways_to_split_a_string/Solution.java",
    "question1574_shortest_subarray_to_be_removed_to_make_array_sorted",
    "question1574_shortest_subarray_to_be_removed_to_make_array_sorted/Solution.java",
    "question1575_count_all_possible_routes",
    "question1575_count_all_possible_routes/Solution.java",
    "question1576_replace_all_s_to_avoid_consecutive_repeating_characters",
    "question1576_replace_all_s_to_avoid_consecutive_repeating_characters/Solution.java",
    "question1577_number_of_ways_where_square_of_number_is_equal_to_product_of_two_numbers",
    "question1577_number_of_ways_where_square_of_number_is_equal_to_product_of_two_numbers/Solution.java",
    "question1578_minimum_deletion_cost_to_avoid_repeating_letters",
    "question1578_minimum_deletion_cost_to_avoid_repeating_letters/Solution.java",
    "question1579_remove_max_number_of_edges_to_keep_graph_fully_traversable",
    "question1579_remove_max_number_of_edges_to_keep_graph_fully_traversable/Solution.java",
    "question1582_special_positions_in_a_binary_matrix",
    "question1582_special_positions_in_a_binary_matrix/Solution.java",
    "question1583_count_unhappy_friends",
    "question1583_count_unhappy_friends/Solution.java",
    "question1584_min_cost_to_connect_all_points",
    "question1584_min_cost_to_connect_all_points/Solution1.java",
    "question1584_min_cost_to_connect_all_points/Solution2.java",
    "question1586_binary_search_tree_iterator_ii",
    "question1586_binary_search_tree_iterator_ii/BSTIterator.java",
    "question1586_binary_search_tree_iterator_ii/TreeNode.java",
    "question1589_maximum_sum_obtained_of_any_permutation",
    "question1589_maximum_sum_obtained_of_any_permutation/Solution.java",
    "question1590_make_sum_divisible_by_p",
    "question1590_make_sum_divisible_by_p/Solution.java",
    "question1592_rearrange_spaces_between_words",
    "question1592_rearrange_spaces_between_words/Solution.java",
    "question1593_split_a_string_into_the_max_number_of_unique_substrings",
    "question1593_split_a_string_into_the_max_number_of_unique_substrings/Solution.java",
    "question1594_maximum_non_negative_product_in_a_matrix",
    "question1594_maximum_non_negative_product_in_a_matrix/Solution.java",
    "question1595_minimum_cost_to_connect_two_groups_of_points",
    "question1595_minimum_cost_to_connect_two_groups_of_points/Solution.java",
    "question1598_crawler_log_folder",
    "question1598_crawler_log_folder/Solution.java",
    "question1599_maximum_profit_of_operating_a_centennial_wheel",
    "question1599_maximum_profit_of_operating_a_centennial_wheel/Solution.java",
    "question1600_throne_inheritance",
    "question1600_throne_inheritance/ThroneInheritance.java",
    "question1601_maximum_number_of_achievable_transfer_requests",
    "question1601_maximum_number_of_achievable_transfer_requests/Solution.java",
    "question1603_design_parking_system",
    "question1603_design_parking_system/ParkingSystem.java",
    "question1604_alert_using_same_key_card_three_or_more_times_in_a_one_hour_period",
    "question1604_alert_using_same_key_card_three_or_more_times_in_a_one_hour_period/Solution.java",
    "question1605_find_valid_matrix_given_row_and_column_sums",
    "question1605_find_valid_matrix_given_row_and_column_sums/Solution.java",
    "question1608_special_array_with_x_elements_greater_than_or_equal_x",
    "question1608_special_array_with_x_elements_greater_than_or_equal_x/Solution.java",
    "question1609_even_odd_tree",
    "question1609_even_odd_tree/Solution.java",
    "question1609_even_odd_tree/TreeNode.java",
    "question1611_minimum_one_bit_operations_to_make_integers_zero",
    "question1611_minimum_one_bit_operations_to_make_integers_zero/Solution.java",
    "question1615_maximal_network_rank",
    "question1615_maximal_network_rank/Solution.java",
    "question1616_split_two_strings_to_make_palindrome",
    "question1616_split_two_strings_to_make_palindrome/Solution.java",
    "question1617_count_subtrees_with_max_distance_between_cities",
    "question1617_count_subtrees_with_max_distance_between_cities/Solution.java",
    "question162",
    "question162/Solution1.java",
    "question162/Solution2.java",
    "question1620_coordinate_with_maximum_network_quality",
    "question1620_coordinate_with_maximum_network_quality/Solution.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution1.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution2.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution3.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution4.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution5.java",
    "question1621_number_of_sets_of_k_non_overlapping_line_segments/Solution6.java",
    "question1622_fancy_sequence",
    "question1622_fancy_sequence/Fancy.java",
    "question1624_largest_substring_between_two_equal_characters",
    "question1624_largest_substring_between_two_equal_characters/Solution.java",
    "question1625_lexicographically_smallest_string_after_applying_operations",
    "question1625_lexicographically_smallest_string_after_applying_operations/Solution.java",
    "question1626_best_team_with_no_conflicts",
    "question1626_best_team_with_no_conflicts/Solution.java",
    "question1629_slowest_key",
    "question1629_slowest_key/Solution.java",
    "question1630_arithmetic_subarrays",
    "question1630_arithmetic_subarrays/Solution.java",
    "question1631_path_with_minimum_effort",
    "question1631_path_with_minimum_effort/Solution.java",
    "question1637_widest_vertical_area_between_two_points_containing_no_points",
    "question1637_widest_vertical_area_between_two_points_containing_no_points/Solution.java",
    "question1638_count_substrings_that_differ_by_one_character",
    "question1638_count_substrings_that_differ_by_one_character/Solution1.java",
    "question1638_count_substrings_that_differ_by_one_character/Solution2.java",
    "question1639_number_of_ways_to_form_a_target_string_given_a_dictionary",
    "question1639_number_of_ways_to_form_a_target_string_given_a_dictionary/Solution.java",
    "question164",
    "question164/Solution.java",
    "question1641_count_sorted_vowel_strings",
    "question1641_count_sorted_vowel_strings/Solution.java",
    "question1642_furthest_building_you_can_reach",
    "question1642_furthest_building_you_can_reach/Solution1.java",
    "question1642_furthest_building_you_can_reach/Solution2.java",
    "question1643_kth_smallest_instructions",
    "question1643_kth_smallest_instructions/Solution.java",
    "question1646_get_maximum_in_generated_array",
    "question1646_get_maximum_in_generated_array/Solution.java",
    "question1647_minimum_deletions_to_make_character_frequencies_unique",
    "question1647_minimum_deletions_to_make_character_frequencies_unique/Solution.java",
    "question1648_sell_diminishing_valued_colored_balls",
    "question1648_sell_diminishing_valued_colored_balls/Solution.java",
    "question165",
    "question165/Solution1.java",
    "question165/Solution2.java",
    "question1653_minimum_deletions_to_make_string_balanced",
    "question1653_minimum_deletions_to_make_string_balanced/Solution.java",
    "question1654_minimum_jumps_to_reach_home",
    "question1654_minimum_jumps_to_reach_home/Solution.java",
    "question1655_distribute_repeating_integers",
    "question1655_distribute_repeating_integers/Solution.java",
    "question1658_minimum_operations_to_reduce_x_to_zero",
    "question1658_minimum_operations_to_reduce_x_to_zero/Solution.java",
    "question1659_maximize_grid_happiness",
    "question1659_maximize_grid_happiness/Solution.java",
    "question166",
    "question166/Solution.java",
    "question1663_smallest_string_with_a_given_numeric_value",
    "question1663_smallest_string_with_a_given_numeric_value/Solution.java",
    "question1664_ways_to_make_a_fair_array",
    "question1664_ways_to_make_a_fair_array/Solution.java",
    "question1668_maximum_repeating_substring",
    "question1668_maximum_repeating_substring/Solution.java",
    "question1669_merge_in_between_linked_lists",
    "question1669_merge_in_between_linked_lists/ListNode.java",
    "question1669_merge_in_between_linked_lists/Solution.java",
    "question167",
    "question167/Solution1.java",
    "question167/Solution2.java",
    "question1670_design_front_middle_back_queue",
    "question1670_design_front_middle_back_queue/FrontMiddleBackQueue.java",
    "question1671_minimum_number_of_removals_to_make_mountain_array",
    "question1671_minimum_number_of_removals_to_make_mountain_array/Solution.java",
    "question1673_find_the_most_competitive_subsequence",
    "question1673_find_the_most_competitive_subsequence/Solution.java",
    "question1674_minimum_moves_to_make_array_complementary",
    "question1674_minimum_moves_to_make_array_complementary/Solution.java",
    "question1679_max_number_of_k_sum_pairs",
    "question1679_max_number_of_k_sum_pairs/Solution.java",
    "question168",
    "question168/Solution.java",
    "question1680_concatenation_of_consecutive_binary_numbers",
    "question1680_concatenation_of_consecutive_binary_numbers/Solution1.java",
    "question1680_concatenation_of_consecutive_binary_numbers/Solution2.java",
    "question1681_minimum_incompatibility",
    "question1681_minimum_incompatibility/Solution.java",
    "question1685_sum_of_absolute_differences_in_a_sorted_array",
    "question1685_sum_of_absolute_differences_in_a_sorted_array/Solution.java",
    "question1686_stone_game_vi",
    "question1686_stone_game_vi/Solution.java",
    "question1687_delivering_boxes_from_storage_to_ports",
    "question1687_delivering_boxes_from_storage_to_ports/Solution.java",
    "question1691_maximum_height_by_stacking_cuboids",
    "question1691_maximum_height_by_stacking_cuboids/Solution.java",
    "question1694_reformat_phone_number",
    "question1694_reformat_phone_number/Solution.java",
    "question1695_maximum_erasure_value",
    "question1695_maximum_erasure_value/Solution.java",
    "question1696_jump_game_vi",
    "question1696_jump_game_vi/Solution.java",
    "question1697_checking_existence_of_edge_length_limited_paths",
    "question1697_checking_existence_of_edge_length_limited_paths/Solution.java",
    "question1700_number_of_students_unable_to_eat_lunch",
    "question1700_number_of_students_unable_to_eat_lunch/Solution.java",
    "question1701_average_waiting_time",
    "question1701_average_waiting_time/Solution.java",
    "question1702_maximum_binary_string_after_change",
    "question1702_maximum_binary_string_after_change/Solution.java",
    "question1703_minimum_adjacent_swaps_for_k_consecutive_ones",
    "question1703_minimum_adjacent_swaps_for_k_consecutive_ones/Solution.java",
    "question1704_determine_if_string_halves_are_alike",
    "question1704_determine_if_string_halves_are_alike/Solution.java",
    "question1705_maximum_number_of_eaten_apples",
    "question1705_maximum_number_of_eaten_apples/Solution.java",
    "question1706_where_will_the_ball_fall",
    "question1706_where_will_the_ball_fall/Solution.java",
    "question1707_maximum_xor_with_an_element_from_array",
    "question1707_maximum_xor_with_an_element_from_array/Solution.java",
    "question171",
    "question171/Solution.java",
    "question1710_maximum_units_on_a_truck",
    "question1710_maximum_units_on_a_truck/Solution.java",
    "question1711_count_good_meals",
    "question1711_count_good_meals/Solution.java",
    "question1712_ways_to_split_array_into_three_subarrays",
    "question1712_ways_to_split_array_into_three_subarrays/Solution.java",
    "question1713_minimum_operations_to_make_a_subsequence",
    "question1713_minimum_operations_to_make_a_subsequence/Solution.java",
    "question1716_calculate_money_in_leetcode_bank",
    "question1716_calculate_money_in_leetcode_bank/Solution.java",
    "question1717_maximum_score_from_removing_substrings",
    "question1717_maximum_score_from_removing_substrings/Solution.java",
    "question1718_construct_the_lexicographically_largest_valid_sequence",
    "question1718_construct_the_lexicographically_largest_valid_sequence/Solution.java",
    "question1719_number_of_ways_to_reconstruct_a_tree",
    "question1719_number_of_ways_to_reconstruct_a_tree/Solution.java",
    "question172",
    "question172/Solution.java",
    "question172/Solution1.java",
    "question1720_decode_xored_array",
    "question1720_decode_xored_array/Solution.java",
    "question1721_swapping_nodes_in_a_linked_list",
    "question1721_swapping_nodes_in_a_linked_list/ListNode.java",
    "question1721_swapping_nodes_in_a_linked_list/Solution.java",
    "question1722_minimize_hamming_distance_after_swap_operations",
    "question1722_minimize_hamming_distance_after_swap_operations/Solution.java",
    "question1723_find_minimum_time_to_finish_all_jobs",
    "question1723_find_minimum_time_to_finish_all_jobs/Solution1.java",
    "question1723_find_minimum_time_to_finish_all_jobs/Solution2.java",
    "question1725_number_of_rectangles_that_can_form_the_largest_square",
    "question1725_number_of_rectangles_that_can_form_the_largest_square/Solution.java",
    "question1726_tuple_with_same_product",
    "question1726_tuple_with_same_product/Solution.java",
    "question1727_largest_submatrix_with_rearrangements",
    "question1727_largest_submatrix_with_rearrangements/Solution.java",
    "question1732_find_the_highest_altitude",
    "question1732_find_the_highest_altitude/Solution.java",
    "question1733_minimum_number_of_people_to_teach",
    "question1733_minimum_number_of_people_to_teach/Solution1.java",
    "question1733_minimum_number_of_people_to_teach/Solution2.java",
    "question1734_decode_xored_permutation",
    "question1734_decode_xored_permutation/Solution.java",
    "question1736_latest_time_by_replacing_hidden_digits",
    "question1736_latest_time_by_replacing_hidden_digits/Solution.java",
    "question1737_change_minimum_characters_to_satisfy_one_of_three_conditions",
    "question1737_change_minimum_characters_to_satisfy_one_of_three_conditions/Solution.java",
    "question1738_find_kth_largest_xor_coordinate_value",
    "question1738_find_kth_largest_xor_coordinate_value/Solution.java",
    "question174",
    "question174/Solution.java",
    "question1742_maximum_number_of_balls_in_a_box",
    "question1742_maximum_number_of_balls_in_a_box/Solution.java",
    "question1743_restore_the_array_from_adjacent_pairs",
    "question1743_restore_the_array_from_adjacent_pairs/Solution.java",
    "question1744_can_you_eat_your_favorite_candy_on_your_favorite_day",
    "question1744_can_you_eat_your_favorite_candy_on_your_favorite_day/Solution.java",
    "question1748_sum_of_unique_elements",
    "question1748_sum_of_unique_elements/Solution.java",
    "question1749_maximum_absolute_sum_of_any_subarray",
    "question1749_maximum_absolute_sum_of_any_subarray/Solution.java",
    "question1750_minimum_length_of_string_after_deleting_similar_ends",
    "question1750_minimum_length_of_string_after_deleting_similar_ends/Solution.java",
    "question1752_check_if_array_is_sorted_and_rotated",
    "question1752_check_if_array_is_sorted_and_rotated/Solution.java",
    "question1753_maximum_score_from_removing_stones",
    "question1753_maximum_score_from_removing_stones/Solution.java",
    "question1754_largest_merge_of_two_strings",
    "question1754_largest_merge_of_two_strings/Solution.java",
    "question1755_closest_subsequence_sum",
    "question1755_closest_subsequence_sum/Solution.java",
    "question1758_minimum_changes_to_make_alternating_binary_string",
    "question1758_minimum_changes_to_make_alternating_binary_string/Solution.java",
    "question1759_count_number_of_homogenous_substrings",
    "question1759_count_number_of_homogenous_substrings/Solution.java",
    "question1760_minimum_limit_of_balls_in_a_bag",
    "question1760_minimum_limit_of_balls_in_a_bag/Solution.java",
    "question1763_longest_nice_substring",
    "question1763_longest_nice_substring/Solution.java",
    "question1764_form_array_by_concatenating_subarrays_of_another_array",
    "question1764_form_array_by_concatenating_subarrays_of_another_array/Solution.java",
    "question1765_map_of_highest_peak",
    "question1765_map_of_highest_peak/Solution.java",
    "question1768_merge_strings_alternately",
    "question1768_merge_strings_alternately/Solution.java",
    "question1769_minimum_number_of_operations_to_move_all_balls_to_each_box",
    "question1769_minimum_number_of_operations_to_move_all_balls_to_each_box/Solution1.java",
    "question1769_minimum_number_of_operations_to_move_all_balls_to_each_box/Solution2.java",
    "question1770_maximum_score_from_performing_multiplication_operations",
    "question1770_maximum_score_from_performing_multiplication_operations/Solution.java",
    "question1773_count_items_matching_a_rule",
    "question1773_count_items_matching_a_rule/Solution.java",
    "question1774_closest_dessert_cost",
    "question1774_closest_dessert_cost/Solution.java",
    "question1775_equal_sum_arrays_with_minimum_number_of_operations",
    "question1775_equal_sum_arrays_with_minimum_number_of_operations/Solution.java",
    "question1779_find_nearest_point_that_has_the_same_x_or_y_coordinate",
    "question1779_find_nearest_point_that_has_the_same_x_or_y_coordinate/Solution.java",
    "question178",
    "question178/Solution1.sql",
    "question178/Solution2.sql",
    "question178/Solution3.sql",
    "question1780_check_if_number_is_a_sum_of_powers_of_three",
    "question1780_check_if_number_is_a_sum_of_powers_of_three/Solution.java",
    "question1781_sum_of_beauty_of_all_substrings",
    "question1781_sum_of_beauty_of_all_substrings/Solution.java",
    "question1784_check_if_binary_string_has_at_most_one_segment_of_ones",
    "question1784_check_if_binary_string_has_at_most_one_segment_of_ones/Solution.java",
    "question1785_minimum_elements_to_add_to_form_a_given_sum",
    "question1785_minimum_elements_to_add_to_form_a_given_sum/Solution.java",
    "question1786_number_of_restricted_paths_from_first_to_last_node",
    "question1786_number_of_restricted_paths_from_first_to_last_node/Solution.java",
    "question1787_make_the_xor_of_all_segments_equal_to_zero",
    "question1787_make_the_xor_of_all_segments_equal_to_zero/Solution.java",
    "question1790_check_if_one_string_swap_can_make_strings_equal",
    "question1790_check_if_one_string_swap_can_make_strings_equal/Solution.java",
    "question1791_find_center_of_star_graph",
    "question1791_find_center_of_star_graph/Solution.java",
    "question1792_maximum_average_pass_ratio",
    "question1792_maximum_average_pass_ratio/Solution.java",
    "question1793_maximum_score_of_a_good_subarray",
    "question1793_maximum_score_of_a_good_subarray/Solution.java",
    "question1796_second_largest_digit_in_a_string",
    "question1796_second_largest_digit_in_a_string/Solution.java",
    "question1797_design_authentication_manager",
    "question1797_design_authentication_manager/AuthenticationManager.java",
    "question1798_maximum_number_of_consecutive_values_you_can_make",
    "question1798_maximum_number_of_consecutive_values_you_can_make/Solution.java",
    "question1799_maximize_score_after_n_operations",
    "question1799_maximize_score_after_n_operations/Solution.java",
    "question180",
    "question180/Solution.sql",
    "question1800_maximum_ascending_subarray_sum",
    "question1800_maximum_ascending_subarray_sum/Solution.java",
    "question1801_number_of_orders_in_the_backlog",
    "question1801_number_of_orders_in_the_backlog/Solution.java",
    "question1802_maximum_value_at_a_given_index_in_a_bounded_array",
    "question1802_maximum_value_at_a_given_index_in_a_bounded_array/Solution.java",
    "question1803_count_pairs_with_xor_in_a_range",
    "question1803_count_pairs_with_xor_in_a_range/Solution.java",
    "question1805_number_of_different_integers_in_a_string",
    "question1805_number_of_different_integers_in_a_string/Solution.java",
    "question1806_minimum_number_of_operations_to_reinitialize_a_permutation",
    "question1806_minimum_number_of_operations_to_reinitialize_a_permutation/Solution.java",
    "question1807_evaluate_the_bracket_pairs_of_a_string",
    "question1807_evaluate_the_bracket_pairs_of_a_string/Solution.java",
    "question1808_maximize_number_of_nice_divisors",
    "question1808_maximize_number_of_nice_divisors/Solution.java",
    "question1812_determine_color_of_a_chessboard_square",
    "question1812_determine_color_of_a_chessboard_square/Solution.java",
    "question1813_sentence_similarity_iii",
    "question1813_sentence_similarity_iii/Solution.java",
    "question1814_count_nice_pairs_in_an_array",
    "question1814_count_nice_pairs_in_an_array/Solution.java",
    "question1816_truncate_sentence",
    "question1816_truncate_sentence/Solution.java",
    "question1817_finding_the_users_active_minutes",
    "question1817_finding_the_users_active_minutes/Solution.java",
    "question1818_minimum_absolute_sum_difference",
    "question1818_minimum_absolute_sum_difference/Solution.java",
    "question182",
    "question182/Solution1.sql",
    "question182/Solution2.sql",
    "question182/Solution3.sql",
    "question1822_sign_of_the_product_of_an_array",
    "question1822_sign_of_the_product_of_an_array/Solution.java",
    "question1823_find_the_winner_of_the_circular_game",
    "question1823_find_the_winner_of_the_circular_game/Solution.java",
    "question1824_minimum_sideway_jumps",
    "question1824_minimum_sideway_jumps/Solution.java",
    "question1825_finding_mk_average",
    "question1825_finding_mk_average/MKAverage.java",
    "question1827_minimum_operations_to_make_the_array_increasing",
    "question1827_minimum_operations_to_make_the_array_increasing/Solution.java",
    "question1828_queries_on_number_of_points_inside_a_circle",
    "question1828_queries_on_number_of_points_inside_a_circle/Solution.java",
    "question1829_maximum_xor_for_each_query",
    "question1829_maximum_xor_for_each_query/.DS_Store",
    "question1829_maximum_xor_for_each_query/Solution1.java",
    "question1829_maximum_xor_for_each_query/Solution2.java",
    "question183",
    "question183/Solution.sql",
    "question1834_single_threaded_cpu",
    "question1834_single_threaded_cpu/Solution.java",
    "question1837_sum_of_digits_in_base_k",
    "question1837_sum_of_digits_in_base_k/Solution.java",
    "question1838_frequency_of_the_most_frequent_element",
    "question1838_frequency_of_the_most_frequent_element/Solution.java",
    "question1839_longest_substring_of_all_vowels_in_order",
    "question1839_longest_substring_of_all_vowels_in_order/Solution.java",
    "question184",
    "question184/Solution.sql",
    "question1840_maximum_building_height",
    "question1840_maximum_building_height/Solution.java",
    "question1844_replace_all_digits_with_characters",
    "question1844_replace_all_digits_with_characters/Solution.java",
    "question1845_seat_reservation_manager",
    "question1845_seat_reservation_manager/SeatManager.java",
    "question1846_maximum_element_after_decreasing_and_rearranging",
    "question1846_maximum_element_after_decreasing_and_rearranging/Solution.java",
    "question1848_minimum_distance_to_the_target_element",
    "question1848_minimum_distance_to_the_target_element/Solution.java",
    "question1849_splitting_a_string_into_descending_consecutive_values",
    "question1849_splitting_a_string_into_descending_consecutive_values/Solution.java",
    "question185",
    "question185/Solution.sql",
    "question1850_minimum_adjacent_swaps_to_reach_the_kth_smallest_number",
    "question1850_minimum_adjacent_swaps_to_reach_the_kth_smallest_number/Solution.java",
    "question1854_maximum_population_year",
    "question1854_maximum_population_year/Solution.java",
    "question1855_maximum_distance_between_a_pair_of_values",
    "question1855_maximum_distance_between_a_pair_of_values/Solution.java",
    "question1856_maximum_subarray_min_product",
    "question1856_maximum_subarray_min_product/Solution.java",
    "question1859_sorting_the_sentence",
    "question1859_sorting_the_sentence/Solution.java",
    "question1860_incremental_memory_leak",
    "question1860_incremental_memory_leak/Solution.java",
    "question1861_rotating_the_box",
    "question1861_rotating_the_box/Solution.java",
    "question1863_sum_of_all_subset_xor_totals",
    "question1863_sum_of_all_subset_xor_totals/Solution.java",
    "question1864_minimum_number_of_swaps_to_make_the_binary_string_alternating",
    "question1864_minimum_number_of_swaps_to_make_the_binary_string_alternating/Solution.java",
    "question1865_finding_pairs_with_a_certain_sum",
    "question1865_finding_pairs_with_a_certain_sum/FindSumPairs.java",
    "question1869_longer_contiguous_segments_of_ones_than_zeros",
    "question1869_longer_contiguous_segments_of_ones_than_zeros/Solution.java",
    "question187",
    "question187/Solution.java",
    "question1870_minimum_speed_to_arrive_on_time",
    "question1870_minimum_speed_to_arrive_on_time/Solution.java",
    "question1871_jump_game_vii",
    "question1871_jump_game_vii/Solution.java",
    "question1876_substrings_of_size_three_with_distinct_characters",
    "question1876_substrings_of_size_three_with_distinct_characters/Solution.java",
    "question1877_minimize_maximum_pair_sum_in_array",
    "question1877_minimize_maximum_pair_sum_in_array/Solution.java",
    "question1878_get_biggest_three_rhombus_sums_in_a_grid",
    "question1878_get_biggest_three_rhombus_sums_in_a_grid/Solution.java",
    "question1880_check_if_word_equals_summation_of_two_words",
    "question1880_check_if_word_equals_summation_of_two_words/Solution.java",
    "question1881_maximum_value_after_insertion",
    "question1881_maximum_value_after_insertion/Solution.java",
    "question1882_process_tasks_using_servers",
    "question1882_process_tasks_using_servers/Solution.java",
    "question1884_egg_drop_with_2_eggs_and_n_floors",
    "question1884_egg_drop_with_2_eggs_and_n_floors/Solution1.java",
    "question1884_egg_drop_with_2_eggs_and_n_floors/Solution2.java",
    "question1886_determine_whether_matrix_can_be_obtained_by_rotation",
    "question1886_determine_whether_matrix_can_be_obtained_by_rotation/Solution.java",
    "question1887_reduction_operations_to_make_the_array_elements_equal",
    "question1887_reduction_operations_to_make_the_array_elements_equal/Solution.java",
    "question1888_minimum_number_of_flips_to_make_the_binary_string_alternating",
    "question1888_minimum_number_of_flips_to_make_the_binary_string_alternating/Solution.java",
    "question1893_check_if_all_the_integers_in_a_range_are_covered",
    "question1893_check_if_all_the_integers_in_a_range_are_covered/Solution.java",
    "question1894_find_the_student_that_will_replace_the_chalk",
    "question1894_find_the_student_that_will_replace_the_chalk/Solution.java",
    "question1895_largest_magic_square",
    "question1895_largest_magic_square/Solution.java",
    "question1897_redistribute_characters_to_make_all_strings_equal",
    "question1897_redistribute_characters_to_make_all_strings_equal/Solution.java",
    "question1898_maximum_number_of_removable_characters",
    "question1898_maximum_number_of_removable_characters/Solution.java",
    "question1899_merge_triplets_to_form_target_triplet",
    "question1899_merge_triplets_to_form_target_triplet/Solution.java",
    "question1901_find_a_peak_element_ii",
    "question1901_find_a_peak_element_ii/Solution.java",
    "question192",
    "question192/Solution1.sh",
    "question192/Solution2.sh",
    "question193",
    "question193/Solution1.sh",
    "question193/Solution2.sh",
    "question193/Solution3.sh",
    "question194",
    "question194/Solution.sh",
    "question195",
    "question195/Solution1.sh",
    "question195/Solution2.sh",
    "question195/Solution3.sh",
    "question195/Solution4.sh",
    "question196",
    "question196/Solution.sql",
    "question197",
    "question197/Solution1.sql",
    "question197/Solution2.sql",
    "question204",
    "question204/Solution1.java",
    "question204/Solution2.java",
    "question212",
    "question212/Solution1.java",
    "question212/Solution2.java",
    "question217",
    "question217/Solution.java",
    "question219",
    "question219/Solution.java",
    "question223",
    "question223/Solution.java",
    "question229",
    "question229/Solution1.java",
    "question229/Solution2.java",
    "question237",
    "question237/ListNode.java",
    "question237/Solution.java",
    "question240",
    "question240/Solution1.java",
    "question240/Solution2.java",
    "question240/Solution3.java",
    "question240/Solution4.java",
    "question301",
    "question301/Solution1.java",
    "question301/Solution2.java",
    "question301/Solution3.java",
    "question414",
    "question414/Solution1.java",
    "question414/Solution2.java",
    "question429",
    "question429/Node.java",
    "question429/Solution.java",
    "question442",
    "question442/Solution1.java",
    "question442/Solution2.java",
    "question442/Solution3.java",
    "question498",
    "question498/Solution.java",
    "question501",
    "question501/Solution1.java",
    "question501/Solution2.java",
    "question501/TreeNode.java",
    "question621",
    "question621/Solution1.java",
    "question621/Solution2.java",
    "question621/Solution3.java",
    "question654",
    "question654/Solution.java",
    "question654/TreeNode.java",
    "question655",
    "question655/Solution.java",
    "question655/TreeNode.java",
    "question784",
    "question784/Solution.java",
    "question814",
    "question814/Solution.java",
    "question814/TreeNode.java"
]
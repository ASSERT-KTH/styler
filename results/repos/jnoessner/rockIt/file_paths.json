[
    ".classpath",
    ".gitignore",
    ".project",
    ".settings",
    ".settings/org.eclipse.core.resources.prefs",
    ".settings/org.eclipse.jdt.core.prefs",
    ".settings/org.eclipse.jdt.ui.prefs",
    ".settings/org.eclipse.m2e.core.prefs",
    "LICENSE",
    "README.md",
    "data",
    "data/codi",
    "data/codi/evidence.db",
    "data/codi/output.db",
    "data/codi/prog.mln",
    "data/debug",
    "data/debug/evidence_i2.db",
    "data/debug/evidence_i3.db",
    "data/debug/prog_i2.mln",
    "data/debug/prog_i3.mln",
    "data/numeric",
    "data/numeric/examples",
    "data/numeric/examples/evidence_ae.db",
    "data/numeric/examples/evidence_np.db",
    "data/numeric/examples/evidence_speed.db",
    "data/numeric/examples/prog_ae.mln",
    "data/numeric/examples/prog_np.mln",
    "data/numeric/examples/prog_speed.mln",
    "data/numeric/generic",
    "data/numeric/generic/data1_1.db",
    "data/numeric/generic/data_basic.db",
    "data/numeric/generic/data_calc.db",
    "data/numeric/generic/data_function.db",
    "data/numeric/generic/data_interval.db",
    "data/numeric/generic/prog1.mln",
    "data/numeric/generic/prog_basic.mln",
    "data/numeric/generic/prog_calc.mln",
    "data/numeric/generic/prog_function.mln",
    "data/numeric/generic/prog_interval.mln",
    "data/numeric/grounding",
    "data/numeric/grounding/data_basic_grounding.db",
    "data/numeric/grounding/prog_basic_grounding.mln",
    "data/numeric/temporal",
    "data/numeric/temporal/data1_1.db",
    "data/numeric/temporal/data1_2.db",
    "data/numeric/temporal/prog1.mln",
    "data/numeric/temporal/prog2.mln",
    "default.xml",
    "doc",
    "doc/documentation.pdf",
    "doc/documentation.tex",
    "pom.xml",
    "rockit.properties",
    "src",
    "src/main",
    "src/main/antlr3",
    "src/main/antlr3/com",
    "src/main/antlr3/com/googlecode",
    "src/main/antlr3/com/googlecode/rockit",
    "src/main/antlr3/com/googlecode/rockit/parser",
    "src/main/antlr3/com/googlecode/rockit/parser/GroundValues.g",
    "src/main/antlr3/com/googlecode/rockit/parser/Model.g",
    "src/main/java",
    "src/main/java/GroundValues.tokens",
    "src/main/java/Model.tokens",
    "src/main/java/com",
    "src/main/java/com/googlecode",
    "src/main/java/com/googlecode/rockit",
    "src/main/java/com/googlecode/rockit/app",
    "src/main/java/com/googlecode/rockit/app/Main.java",
    "src/main/java/com/googlecode/rockit/app/Parameters.java",
    "src/main/java/com/googlecode/rockit/app/RockItAPI.java",
    "src/main/java/com/googlecode/rockit/app/evaluator",
    "src/main/java/com/googlecode/rockit/app/evaluator/ObjectiveEvaluator.java",
    "src/main/java/com/googlecode/rockit/app/evaluator/PrecisionRecallEvaluator.java",
    "src/main/java/com/googlecode/rockit/app/grounder",
    "src/main/java/com/googlecode/rockit/app/grounder/StandardGrounder.java",
    "src/main/java/com/googlecode/rockit/app/learner",
    "src/main/java/com/googlecode/rockit/app/learner/FormulaForLearning.java",
    "src/main/java/com/googlecode/rockit/app/learner/VotedPerceptronLearner.java",
    "src/main/java/com/googlecode/rockit/app/result",
    "src/main/java/com/googlecode/rockit/app/result/RockItResult.java",
    "src/main/java/com/googlecode/rockit/app/result/RockItResultNameComparer.java",
    "src/main/java/com/googlecode/rockit/app/result/RockItResultProbabilityComparer.java",
    "src/main/java/com/googlecode/rockit/app/sampler",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSChange.java",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSClauseCardinality.java",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSClauseHard.java",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSClauseSoft.java",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSLiteral.java",
    "src/main/java/com/googlecode/rockit/app/sampler/gibbs/GIBBSSampler.java",
    "src/main/java/com/googlecode/rockit/app/sampler/symmetry",
    "src/main/java/com/googlecode/rockit/app/sampler/symmetry/SymmetryPostProcessing.java",
    "src/main/java/com/googlecode/rockit/app/solver",
    "src/main/java/com/googlecode/rockit/app/solver/AbstractSolver.java",
    "src/main/java/com/googlecode/rockit/app/solver/StandardSolver.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/AggregationManager.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/frequentItemset",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/frequentItemset/AggregationFrequentItemsetForSpecificSize.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/frequentItemset/AggregationManagerFrequentItemsetImpl.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/simple",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/simple/AggregatedConstraint.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/simple/AggregationManagerOptimalColumnImpl.java",
    "src/main/java/com/googlecode/rockit/app/solver/aggregate/simple/AggregationManagerSimpleImpl.java",
    "src/main/java/com/googlecode/rockit/app/solver/exact",
    "src/main/java/com/googlecode/rockit/app/solver/exact/ExactSolver.java",
    "src/main/java/com/googlecode/rockit/app/solver/exact/GroundingSet.java",
    "src/main/java/com/googlecode/rockit/app/solver/numerical",
    "src/main/java/com/googlecode/rockit/app/solver/numerical/Expression.java",
    "src/main/java/com/googlecode/rockit/app/solver/numerical/LICENSE",
    "src/main/java/com/googlecode/rockit/app/solver/numerical/MathExpression.java",
    "src/main/java/com/googlecode/rockit/app/solver/numerical/NumericalExpression.java",
    "src/main/java/com/googlecode/rockit/app/solver/numerical/NumericalValues.java",
    "src/main/java/com/googlecode/rockit/app/solver/pojo",
    "src/main/java/com/googlecode/rockit/app/solver/pojo/CardinalityClause.java",
    "src/main/java/com/googlecode/rockit/app/solver/pojo/Clause.java",
    "src/main/java/com/googlecode/rockit/app/solver/pojo/Literal.java",
    "src/main/java/com/googlecode/rockit/app/solver/thread",
    "src/main/java/com/googlecode/rockit/app/solver/thread/CardinalityFormulaRestrictionBuilder.java",
    "src/main/java/com/googlecode/rockit/app/solver/thread/FormulaRestrictionBuilder.java",
    "src/main/java/com/googlecode/rockit/app/solver/thread/RestrictionBuilder.java",
    "src/main/java/com/googlecode/rockit/conn",
    "src/main/java/com/googlecode/rockit/conn/ilp",
    "src/main/java/com/googlecode/rockit/conn/ilp/GurobiConnector.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/GurobiConstrs.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/ILPConnector.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/ILPOperator.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/ILPVariable.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/SoftFormulaVars.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/cplex",
    "src/main/java/com/googlecode/rockit/conn/ilp/cplex/CplexConnector.java",
    "src/main/java/com/googlecode/rockit/conn/ilp/scip",
    "src/main/java/com/googlecode/rockit/conn/ilp/scip/ScipConnector.java",
    "src/main/java/com/googlecode/rockit/conn/sql",
    "src/main/java/com/googlecode/rockit/conn/sql/MySQLConnector.java",
    "src/main/java/com/googlecode/rockit/conn/sql/SQLQueryGenerator.java",
    "src/main/java/com/googlecode/rockit/exception",
    "src/main/java/com/googlecode/rockit/exception/DatabaseException.java",
    "src/main/java/com/googlecode/rockit/exception/EvaluationException.java",
    "src/main/java/com/googlecode/rockit/exception/GroundException.java",
    "src/main/java/com/googlecode/rockit/exception/ILPException.java",
    "src/main/java/com/googlecode/rockit/exception/ILPInfeasibleException.java",
    "src/main/java/com/googlecode/rockit/exception/Messages.java",
    "src/main/java/com/googlecode/rockit/exception/ParseException.java",
    "src/main/java/com/googlecode/rockit/exception/ReadOrWriteToFileException.java",
    "src/main/java/com/googlecode/rockit/exception/SampleException.java",
    "src/main/java/com/googlecode/rockit/exception/SolveException.java",
    "src/main/java/com/googlecode/rockit/file",
    "src/main/java/com/googlecode/rockit/file/DimacsFileWriter.java",
    "src/main/java/com/googlecode/rockit/file/FileReader.java",
    "src/main/java/com/googlecode/rockit/file/LogFileWriter.java",
    "src/main/java/com/googlecode/rockit/file/ModelFileWriter.java",
    "src/main/java/com/googlecode/rockit/file/MyEntry.java",
    "src/main/java/com/googlecode/rockit/file/MyFileWriter.java",
    "src/main/java/com/googlecode/rockit/file/ResultFileWriter.java",
    "src/main/java/com/googlecode/rockit/javaAPI",
    "src/main/java/com/googlecode/rockit/javaAPI/HerbrandUniverse.java",
    "src/main/java/com/googlecode/rockit/javaAPI/Model.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/FormulaAbstract.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/FormulaCardinality.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/FormulaHard.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/FormulaObjective.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/FormulaSoft.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions/IfExpression.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions/impl",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions/impl/EqualVariableExpression.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions/impl/PredicateExpression.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/expressions/impl/ThresholdExpression.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl/VariableAbstract.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl/VariableArithmeticExpression.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl/VariableDouble.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl/VariableString.java",
    "src/main/java/com/googlecode/rockit/javaAPI/formulas/variables/impl/VariableType.java",
    "src/main/java/com/googlecode/rockit/javaAPI/predicates",
    "src/main/java/com/googlecode/rockit/javaAPI/predicates/Predicate.java",
    "src/main/java/com/googlecode/rockit/javaAPI/predicates/PredicateAbstract.java",
    "src/main/java/com/googlecode/rockit/javaAPI/predicates/PredicateDouble.java",
    "src/main/java/com/googlecode/rockit/javaAPI/predicates/PredicateNumerical.java",
    "src/main/java/com/googlecode/rockit/javaAPI/types",
    "src/main/java/com/googlecode/rockit/javaAPI/types/Type.java",
    "src/main/java/com/googlecode/rockit/parser",
    "src/main/java/com/googlecode/rockit/parser/GroundValueReader.java",
    "src/main/java/com/googlecode/rockit/parser/GroundValuesLexer.java",
    "src/main/java/com/googlecode/rockit/parser/GroundValuesParser.java",
    "src/main/java/com/googlecode/rockit/parser/ModelLexer.java",
    "src/main/java/com/googlecode/rockit/parser/ModelParser.java",
    "src/main/java/com/googlecode/rockit/parser/SyntaxReader.java",
    "src/main/java/com/googlecode/rockit/test",
    "src/main/java/com/googlecode/rockit/test/AlchemyTest.java",
    "src/main/java/com/googlecode/rockit/test/BenchmarkTests.java",
    "src/main/java/com/googlecode/rockit/test/ExhausiveBenchmarkTests.java",
    "src/main/java/com/googlecode/rockit/test/InitialSolutionTestApplication.java",
    "src/main/java/com/googlecode/rockit/test/Issues.java",
    "src/main/java/com/googlecode/rockit/test/MiniTestApplication.java",
    "src/main/java/com/googlecode/rockit/test/NumericalTest.java",
    "src/main/java/com/googlecode/rockit/test/StandardSolverTest.java",
    "src/main/java/com/googlecode/rockit/test/Test.java",
    "src/main/java/com/googlecode/rockit/test/Test2.java",
    "src/main/java/com/googlecode/rockit/test/TuffyTest.java",
    "src/test",
    "src/test/java",
    "src/test/java/de",
    "src/test/java/de/unima",
    "src/test/java/de/unima/ki",
    "src/test/java/de/unima/ki/rockit",
    "src/test/java/de/unima/ki/rockit/AppTest.java",
    "src/test/java/de/unima/ki/rockit/ExactInferenceTest.java",
    "src/test/resources",
    "src/test/resources/exact",
    "src/test/resources/exact/box_alternative",
    "src/test/resources/exact/box_alternative/rockit_evidence.db",
    "src/test/resources/exact/box_alternative/rockit_model.mln",
    "src/test/resources/exact/box_negative",
    "src/test/resources/exact/box_negative/rockit_evidence.db",
    "src/test/resources/exact/box_negative/rockit_model.mln",
    "src/test/resources/exact/box_soft",
    "src/test/resources/exact/box_soft/rockit_evidence.db",
    "src/test/resources/exact/box_soft/rockit_model.mln",
    "src/test/resources/exact/minimal",
    "src/test/resources/exact/minimal/rockit_evidence.db",
    "src/test/resources/exact/minimal/rockit_model.mln",
    "src/test/resources/exact/minimal_big_altnative",
    "src/test/resources/exact/minimal_big_altnative/rockit_evidence.db",
    "src/test/resources/exact/minimal_big_altnative/rockit_model.mln",
    "src/test/resources/exact/minimal_inverted",
    "src/test/resources/exact/minimal_inverted/rockit_evidence.db",
    "src/test/resources/exact/minimal_inverted/rockit_model.mln",
    "src/test/resources/exact/samplable_hard",
    "src/test/resources/exact/samplable_hard/rockit_evidence.db",
    "src/test/resources/exact/samplable_hard/rockit_model.mln"
]
<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
  <property name="cacheFile" value="${checkstyle.cache.file}"/>

  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value=".*generated-sources.*"/>
  </module>
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>
  <module name="RegexpSingleline">
    <!-- \s matches whitespace character, $ matches end of line. -->
    <property name="format" value="\s+$"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>
  <module name="UniqueProperties"/>
  <module name="TreeWalker">

    <!-- Built-in checks -->
    <module name="AnnotationLocation" />
    <module name="AnnotationUseStyle" />
    <module name="ArrayTypeStyle" />
    <module name="AtclauseOrder" />
    <module name="AvoidNestedBlocks"/>
    <module name="AvoidStarImport"/>
    <module name="CovariantEquals"/>
    <module name="EmptyBlock">
        <property name="option" value="text"/>
    </module>
    <module name="EmptyCatchBlock">
        <property name="exceptionVariableName" value="ignore"/>
    </module>
    <module name="EmptyForInitializerPad" />
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="IllegalImport">
      <property name="illegalPkgs" value="com.sun, org.powermock, junit.framework"/>
    </module>
    <module name="IllegalType" />
    <module name="ImportOrder">
      <property name="groups" value="java,javax,org,com"/>
      <property name="ordered" value="true"/>
      <property name="caseSensitive" value="true"/>
      <property name="option" value="top"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
      <property name="separated" value="true"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="LeftCurly"/>
    <module name="MethodName" />
    <module name="MissingOverride" />
    <module name="ModifierOrder" />
    <module name="MultipleVariableDeclarations" />
    <module name="NeedBraces" />
    <module name="NonEmptyAtclauseDescription" />
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="SEMI"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="OneTopLevelClass" />
    <module name="PackageDeclaration"/>
    <module name="RedundantImport"/>
    <module name="RightCurly" />
    <module name="SimplifyBooleanExpression"/>
    <module name="StringLiteralEquality"/>
    <module name="SuppressionXpathSingleFilter">
      <property name="checks" value="IllegalType"/>
      <property name="query" value="//EXTENDS_CLAUSE[@text='HashMap' or @text='HashSet' or @text='LinkedHashMap']/IDENT"/>
    </module>
    <module name="TypeName" />
    <module name="UnnecessaryParentheses"/>
    <module name="UnusedImports"/>
    <module name="UpperEll"/>
    <module name="WhitespaceAfter">
          <property name="tokens" value="COMMA"/>
    </module>

    <!-- oVirt checks -->
    <module name="org.ovirt.checkstyle.checks.DiamondOperatorCheck"/>
    <module name="org.ovirt.checkstyle.checks.NlsCheck">
      <property name="run" value="${runNlsCheck}" default="false"/>
    </module>
    <module name="org.ovirt.checkstyle.checks.NoArgConstructorCheck">
      <property name="run" value="${checkNoArgConstructor}" default="false"/>
    </module>
    <module name="org.ovirt.checkstyle.checks.NoFinalMemberCheck">
      <property name="run" value="${disallowFinals}" default="false"/>
    </module>
    <module name="org.ovirt.checkstyle.checks.NoMemberInitializationCheck">
      <property name="run" value="${disallowMemberInit}" default="false"/>
    </module>
  </module>
</module>

[
    "1 Intro",
    "1 Intro/notes.txt",
    "10 Sorting",
    "10 Sorting/1 2 Duplicates.java",
    "10 Sorting/10 3Sum.java",
    "10 Sorting/16 17 sort colors.java",
    "10 Sorting/27 Merge sort LL.java",
    "10 Sorting/28 QuicksortLinkedlist",
    "10 Sorting/3 4 5 Most Frequent.java",
    "10 Sorting/33 Merge sorted array.java",
    "10 Sorting/34 35 36 Nuts and bolts.java",
    "10 Sorting/38 Remove Duplicates from Sorted Array.java",
    "10 Sorting/39 40 Wiggle sort.java",
    "10 Sorting/9 2Sum.java",
    "10 Sorting/Notes.txt",
    "10 Sorting/Treesort.java",
    "10 Sorting/bubblesort.java",
    "10 Sorting/countingsort.java",
    "10 Sorting/heapsort.java",
    "10 Sorting/insertionsort.java",
    "10 Sorting/mergesort.java",
    "10 Sorting/quicksort.java",
    "10 Sorting/selectionsort.java",
    "11 Searching",
    "11 Searching/1 2 3 Duplicates.java",
    "11 Searching/13 14 15 16 17 Missingnumber.java",
    "11 Searching/18 24 25 26 Odd.java",
    "11 Searching/27 28 29 30 31 2Sum.java",
    "11 Searching/32 33 SumClosestZero.java",
    "11 Searching/34 35 36 37 38 3Sum.java",
    "11 Searching/39 40 41 45 46 MaxinBitonic.java",
    "11 Searching/4 19 20 21 22 23 findDuplicates.java",
    "11 Searching/42 43 44 Search in a rotated sorted array.java",
    "11 Searching/49 FirstOccurence",
    "11 Searching/5 6 7 8 FrequentElement.java",
    "11 Searching/50 Last Occurence",
    "11 Searching/53 No of occurences",
    "11 Searching/54 Count and Say",
    "11 Searching/57 58 59 60 61 Majority Element.java",
    "11 Searching/65 LocalMinimum.java",
    "11 Searching/66 Search a matrix",
    "11 Searching/70 EvenAndOdd.java",
    "11 Searching/74 MaxDifferenceLargerFirst.java",
    "11 Searching/79 Max_j_i.java",
    "11 Searching/81 PairwiseSorted.java",
    "11 Searching/9 10 11 12 FirstRepeat.java",
    "11 Searching/BinarySearch.java",
    "11 Searching/InterpolationSearch.java",
    "11 Searching/LinearSearch.java",
    "11 Searching/notes.txt",
    "12 Selection Algorithms",
    "12 Selection Algorithms/15 16 MedianofTwoSortedArrays.java",
    "12 Selection Algorithms/Ksmallest.java",
    "12 Selection Algorithms/Median of Medians.java",
    "12 Selection Algorithms/Notes.txt",
    "12 Selection Algorithms/kthlargestelementinanarray.java",
    "13 Symbol Tables",
    "13 Symbol Tables/notes.txt",
    "14 Hashing",
    "14 Hashing/Hash Table Implementation",
    "14 Hashing/notes.txt",
    "15 String Algorithms",
    "15 String Algorithms/10 Combinations",
    "15 String Algorithms/11 RemoveAdjacentCharacters",
    "15 String Algorithms/12 Minimum Window Substring",
    "15 String Algorithms/13 Word Search",
    "15 String Algorithms/15 Surrounded Regions",
    "15 String Algorithms/16 Wildcard Matching",
    "15 String Algorithms/17 Combinations",
    "15 String Algorithms/18 Implement Trie",
    "15 String Algorithms/2 Longest Common Substring",
    "15 String Algorithms/3 Longest Palindromic Substring",
    "15 String Algorithms/5 Reverse String",
    "15 String Algorithms/8 Reverse Words in a String",
    "15 String Algorithms/9 Permutations",
    "15 String Algorithms/KMP.java",
    "15 String Algorithms/strStr()",
    "16 Algorithm Design Techniques",
    "16 Algorithm Design Techniques/notes.txt",
    "17 Greedy Algorithms",
    "17 Greedy Algorithms/1 2 3 MergeFiles.java",
    "17 Greedy Algorithms/11 CoinChange.java",
    "17 Greedy Algorithms/14 FractionalKnapsack.java",
    "17 Greedy Algorithms/17 19 CustomerCare.java",
    "17 Greedy Algorithms/18 printJobScheduling.java",
    "17 Greedy Algorithms/4 5 6 7 10 IntervalScheduling.java",
    "17 Greedy Algorithms/8 9 15 IntervalPartitioning.java",
    "17 Greedy Algorithms/Huffman.java",
    "17 Greedy Algorithms/Notes.txt",
    "18 Divide and Conquer",
    "18 Divide and Conquer/11 Find k.java",
    "18 Divide and Conquer/12 A[i]=i.java",
    "18 Divide and Conquer/13 14 15 Median of two sorted Arrays.java",
    "18 Divide and Conquer/16 Get Highest Index.java",
    "18 Divide and Conquer/18 19 Stock Price.java",
    "18 Divide and Conquer/20 Unbreakable laptops.java",
    "18 Divide and Conquer/21 Equal.java",
    "18 Divide and Conquer/22 Valid Square.java",
    "18 Divide and Conquer/23 Nuts and Bolts.java",
    "18 Divide and Conquer/24 25 Closest pair of points.java",
    "18 Divide and Conquer/25 Shuffle.java",
    "18 Divide and Conquer/26PowerFunction.java",
    "18 Divide and Conquer/27 Kadane.java",
    "18 Divide and Conquer/27Skyline.java",
    "18 Divide and Conquer/Notes.txt",
    "19 Dynamic Programming",
    "19 Dynamic Programming/11 MaxSumSubarraycontinuous3",
    "19 Dynamic Programming/13 14 Catalan Numbers",
    "19 Dynamic Programming/15 Matrix Chain Multiplication",
    "19 Dynamic Programming/17 Integer KnapSack",
    "19 Dynamic Programming/18 0-1 KnapSack",
    "19 Dynamic Programming/19 Coin Change",
    "19 Dynamic Programming/20 Longest Increasing Subsequnece",
    "19 Dynamic Programming/23) Box stacking",
    "19 Dynamic Programming/24 Building Bridges",
    "19 Dynamic Programming/25 subsetSum.java",
    "19 Dynamic Programming/26 27 Partition Equal Subset Sum",
    "19 Dynamic Programming/28 booleanpar.java",
    "19 Dynamic Programming/29 Floyd Warshall",
    "19 Dynamic Programming/30 Optimal BST.java",
    "19 Dynamic Programming/31 OptimalStrategy.java",
    "19 Dynamic Programming/32 Tiling.java",
    "19 Dynamic Programming/33 EditDistance.java",
    "19 Dynamic Programming/34 LongestPalindromicSubsequence.java",
    "19 Dynamic Programming/35 LongestPalindromicSubstring.java",
    "19 Dynamic Programming/36 Distinct Subsequences.java",
    "19 Dynamic Programming/37,38 Optimal Path",
    "19 Dynamic Programming/39Maxsubmatrixwithall1s.java",
    "19 Dynamic Programming/4 Maximum Subarray",
    "19 Dynamic Programming/40Maxsumsubmatrix.java",
    "19 Dynamic Programming/42 Perfect Squares",
    "19 Dynamic Programming/43 Min Jumps",
    "19 Dynamic Programming/43OptimalNumberofJumps.java",
    "19 Dynamic Programming/45 Partition closest",
    "19 Dynamic Programming/46 Circus Tower",
    "19 Dynamic Programming/9 House Robber",
    "19 Dynamic Programming/LCS.java",
    "19 Dynamic Programming/Notes.txt",
    "19 Dynamic Programming/factorial.java",
    "19 Dynamic Programming/fibonacci.java",
    "2 Recursion and BackTracking",
    "2 Recursion and BackTracking/Generate all n bits.java",
    "2 Recursion and BackTracking/GenerateKary.java",
    "2 Recursion and BackTracking/TowersOfHanoi.java",
    "2 Recursion and BackTracking/VerifySort.java",
    "2 Recursion and BackTracking/notes.txt",
    "20 Complexity Cases",
    "20 Complexity Cases/notes.txt",
    "21 Misc",
    "21 Misc/1 Spiral matrix",
    "21 Misc/10 NegandPos.java",
    "21 Misc/12 Swap even and odd",
    "21 Misc/13 Equilibrium Index",
    "21 Misc/14 Plus One",
    "21 Misc/15 Count all set bits.java",
    "21 Misc/2 Shuffle cards",
    "21 Misc/3 Rotate Array",
    "21 Misc/5 StringSpaces.java",
    "21 Misc/7 Move spaces end.java",
    "21 Misc/8 Move Zeroes",
    "21 Misc/Number of 1 bits.java",
    "21 Misc/ReverseBits.java",
    "21 Misc/notes.txt",
    "3 LinkedLists",
    "3 LinkedLists/1 Stack using LL.java",
    "3 LinkedLists/12 LL Cycle 2.java",
    "3 LinkedLists/17 Reverse LL.java",
    "3 LinkedLists/18 19 20 21 22 23 24 Intersection of Two Linked Lists.java",
    "3 LinkedLists/2 3 4 5 6 Find nth node from end.java",
    "3 LinkedLists/25 26 27 28 Middle of a LL.java",
    "3 LinkedLists/29 LL from End.java",
    "3 LinkedLists/32 Merge 2 sorted lists.java",
    "3 LinkedLists/34 Reverse Linked List in pairs.java",
    "3 LinkedLists/39 Palindrome Linked List.java",
    "3 LinkedLists/41 Reverse k LL.java",
    "3 LinkedLists/44 Jospheus Circle(Nannaku Prematho sum)",
    "3 LinkedLists/45 Copy List With Random Pointer",
    "3 LinkedLists/50 Median in an infinite steram of integers.java",
    "3 LinkedLists/54 Reorder List",
    "3 LinkedLists/56 Insertion sort",
    "3 LinkedLists/57 Rotate list",
    "3 LinkedLists/58 Add two numbers",
    "3 LinkedLists/59LessandGreaterthank",
    "3 LinkedLists/60 Merge K sorted Lists",
    "3 LinkedLists/66 Remove Duplicates O(n2)",
    "3 LinkedLists/67RemoveDuplicatesinaLL.java",
    "3 LinkedLists/68PrintEvenFirstandOddnext.java",
    "3 LinkedLists/69CommonElementsofASortedList.java",
    "3 LinkedLists/7 8 9 10 11 LL Cycle.java",
    "3 LinkedLists/Delete Node in a Linked list",
    "3 LinkedLists/Notes.txt",
    "4 Stacks",
    "4 Stacks/1 Valid Parentheses.java",
    "4 Stacks/11 stackReversal.java",
    "4 Stacks/12 Queue using Stacks.java",
    "4 Stacks/13 Stack using Queues.java",
    "4 Stacks/2 Postfix Conversion",
    "4 Stacks/22 23 spanfinding.java",
    "4 Stacks/24 25 largestrectangleinhistogram.java",
    "4 Stacks/26 StackSorting.java",
    "4 Stacks/27 Consecutive pairs.java",
    "4 Stacks/28 Dynamic Stack.java",
    "4 Stacks/28 RecursiveRemoval.java",
    "4 Stacks/3 Catalan numbers.java",
    "4 Stacks/4 postfixevaluation.java",
    "4 Stacks/5 Infix Evaluation.java",
    "4 Stacks/6 7 Minstack.java",
    "4 Stacks/8 9 10 Stack Palindrome.java",
    "4 Stacks/ArrayImplementation.java",
    "4 Stacks/DynamicArrayImplementation.java",
    "4 Stacks/LinkedListImplementation.java",
    "4 Stacks/Notes.txt",
    "5 Queues",
    "5 Queues/1 Queue Reversal.java",
    "5 Queues/10 reversefirstk.java",
    "5 Queues/2 Implementqueueswithstacks.java",
    "5 Queues/3 Implement Stack using Queues.java",
    "5 Queues/4 Maximum sum sliding window.java",
    "5 Queues/8 consecutivepairs.java",
    "5 Queues/9 interleavingnumbers.java",
    "5 Queues/CircularArrayImplementation.java",
    "5 Queues/DynamicCircularArray.java",
    "5 Queues/LinkedListImplementation.java",
    "5 Queues/Notes.txt",
    "6 Trees",
    "6 Trees/1 2 Max element in a tree.java",
    "6 Trees/10 11 12 Height of a tree.java",
    "6 Trees/13 minimumdepth.java",
    "6 Trees/14 Deepest node.java",
    "6 Trees/15 Delete an element.java",
    "6 Trees/16 17 18 Leaves, Full and half nodes.java",
    "6 Trees/19 Structurally Identical",
    "6 Trees/20 Diameter.java",
    "6 Trees/21 Width.java",
    "6 Trees/22 Maxsum.java",
    "6 Trees/23 paths.java",
    "6 Trees/24 pathsum.java",
    "6 Trees/25 26 Sum.java",
    "6 Trees/27 Invert.java",
    "6 Trees/28 Mirror.java",
    "6 Trees/29 Preorder Inorder.java",
    "6 Trees/3 4 Search.java",
    "6 Trees/30 Inorder Postorder.java",
    "6 Trees/32 Print All Ancestors.java",
    "6 Trees/33 LCA.java",
    "6 Trees/34 Zigzag.java",
    "6 Trees/35 Vertical order traversal.java",
    "6 Trees/36 53 Unique bst.java",
    "6 Trees/37 Unique BST 2.java",
    "6 Trees/39 40 Right pointers.java",
    "6 Trees/5 Insert in a tree.java",
    "6 Trees/52 Shortest path between two nodes in a bst.java",
    "6 Trees/54 LCA.java",
    "6 Trees/55 56 57 58 Validate BST.java",
    "6 Trees/59 bst to Circular DLL.java",
    "6 Trees/6 7 Size of a binary tree.java",
    "6 Trees/60 62 63 Convert sorted list to binary tree.java",
    "6 Trees/61 Convert sorted array to binary tree.java",
    "6 Trees/64 Kth smallest.java",
    "6 Trees/66 67 68 merge.java",
    "6 Trees/69 70 71 72 RangePrinter.java",
    "6 Trees/73 74 Same.java",
    "6 Trees/8 Delete a tree.java",
    "6 Trees/87 88 connect.java",
    "6 Trees/9 Level order Traversal.java",
    "6 Trees/BST.java",
    "6 Trees/InorderTraversal.java",
    "6 Trees/LevelorderTraversal.java",
    "6 Trees/Notes.txt",
    "6 Trees/PostorderTraversal.java",
    "6 Trees/PreorderTraversal.java",
    "7 Priority Queues",
    "7 Priority Queues/22 23 24 Merge K Sorted Lists.java",
    "7 Priority Queues/27 Median in an infinite stream.java",
    "7 Priority Queues/Heap.java",
    "7 Priority Queues/Notes.txt",
    "7 Priority Queues/Sliding Window Maximum.java",
    "8 Sets",
    "8 Sets/Cycle.java",
    "8 Sets/UnionFind.java",
    "8 Sets/notes.txt",
    "9 Graphs",
    "9 Graphs/BellmanFord.java",
    "9 Graphs/Kruskal.java",
    "9 Graphs/Prim.java",
    "9 Graphs/bfs_list.java",
    "9 Graphs/bfs_matrix.java",
    "9 Graphs/bfstopsort.java",
    "9 Graphs/dfs_list.java",
    "9 Graphs/dfs_matrix.java",
    "9 Graphs/dfstopsort.java",
    "9 Graphs/dijkstra_adj_list.java",
    "9 Graphs/dijkstra_adj_matrix.java",
    "CODE_OF_CONDUCT.md",
    "LICENSE",
    "README.md"
]
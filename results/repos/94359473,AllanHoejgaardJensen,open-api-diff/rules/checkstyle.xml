<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<module name="Checker">

    <!-- Checks properties files for duplicated properties -->
    <module name="UniqueProperties">
        <property name="fileExtensions" value="properties" />
    </module>

    <!-- Checks whether files end with a new line. -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf" />
    </module>

    <!-- Checks for size violations -->
    <module name="FileLength">
        <property name="max" value="1500" />
    </module>
    <module name="FileTabCharacter" />

    <module name="TreeWalker">
        <!-- Check for Javadocs Comments ? -->
        <module name="JavadocType">
            <property name="scope" value="public" />
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF" />
        </module>

        <!-- Checks for Naming Conventions. -->
        <module name="ConstantName" />
        <module name="LocalVariableName" />
        <module name="LocalFinalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports -->
        <module name="AvoidStaticImport">
            <property name="excludes" value="j2html.TagCreator.*" />
        </module>
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports" />
        <module name="AvoidStarImport">
            <property name="excludes" value="java.*, javax.*, j2html.TagCreator.*" />
        </module>
        <module name="ImportOrder">
            <property name="groups" value="java, javax, *" />
            <property name="ordered" value="true" />
            <property name="separated" value="true" />
            <property name="option" value="above" />
        </module>

        <!-- Checks for whitespace -->
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />
        <module name="Indentation" />
        <module name="GenericWhitespace" />

        <!-- Modifier Checks -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Checks for blocks. You know, those {}'s -->
        <module name="EmptyBlock">
            <property name="option" value="text" />
        </module>
        <module name="LeftCurly" />
        <module name="RightCurly" />
        <module name="AvoidNestedBlocks" />

        <!-- Checks for common coding problems -->
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />

        <!-- module name="FinalLocalVariable" / -->
        <module name="IllegalInstantiation" />
        <module name="HiddenField">
            <property name="tokens" value="VARIABLE_DEF" />
        </module>
        <module name="MissingSwitchDefault" />
        <module name="InnerAssignment" />
        <module name="MagicNumber">
            <property name="tokens" value="NUM_DOUBLE, NUM_FLOAT" />
            <property name="ignoreNumbers" value="0, 0.5, 0.75, 1" />
        </module>
        <module name="ModifiedControlVariable" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <module name="NestedTryDepth">
            <property name="max" value="3" />
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                value="java.lang.Throwable, java.lang.Error" />
        </module>
        <module name="IllegalThrows" />
        <module name="PackageDeclaration" />
        <module name="MultipleStringLiterals">
            <property name="ignoreStringsRegexp" value=".{0,3}" />
        </module>
        <module name="MultipleVariableDeclarations" />

        <module name="SuperClone" />
        
        <module name="DeclarationOrder" />
        <module name="ExplicitInitialization" />
        <module name="DefaultComesLast" />
        <module name="FallThrough" />

        <!-- Checks for class design -->
        <module name="HideUtilityClassConstructor" />
        <module name="NeedBraces">
            <property name="tokens"
                value="LITERAL_DO, LITERAL_FOR, LITERAL_WHILE" />
        </module>
        <module name="ThrowsCount">
            <property name="max" value="3" />
        </module>

        <!-- complexity checks -->
        <module name="BooleanExpressionComplexity" />
        <module name="ClassDataAbstractionCoupling">
            <property name="max" value="15" />
        </module>
        <module name="ClassFanOutComplexity">
            <property name="max" value="30" />
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="20" />
        </module>
        <module name="NPathComplexity">
            <property name="max" value="350" />
        </module>
        <module name="JavaNCSS">
            <property name="methodMaximum" value="150" />
        </module>
        <module name="ParameterNumber">
            <property name="max" value="12" />
        </module>

        <!-- Miscellaneous other checks. -->
        <module name="Regexp">
            <property name="format" value="System\.(out|err)\.println" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value="System.out.println() - never write to the console - use logging instead" />
        </module>
        <module name="Regexp">
            <property name="format" value="\.printStackTrace\(\)" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value=" printStackTrace() never write to the console - use logging instead" />
        </module>
        <module name="Regexp">
            <property name="format" value="Class\.forName" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value=" do you want to use Class.forName - use context classloader instead" />
        </module>
        <module name="Regexp">
            <property name="format" value="Place description here" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value=" Place description here - is an autogenerated comment - are noise - remove it" />
        </module>
        <module name="Regexp">
            <property name="format"
                value="Header: |Revision: |@version|@since" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value="Header: |Revision: |@version|@since - are noise - remove it" />
        </module>
        <module name="Regexp">
            <property name="format"
                value="\*\sUser:|\*\sDate:|\*\sTime:|\*\sCreated by IntelliJ IDEA.|Copyright|\*\sTo change this template use File" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value=" User:|Date:|Time:|Created by IntelliJ IDEA.|Copyright|To change this template use File are autogenerated comments - are noise - remove it" />
        </module>
        <module name="Regexp">
            <property name="format" value=" Cloneable" />
            <property name="illegalPattern" value="true" />
            <property name="message"
                value="Cloneable is broken by design - use copy constructors instead" />
        </module>

        <module name="ArrayTypeStyle" />
        <module name="UncommentedMain" />
        <module name="UpperEll" />

        <module name="LineLength">
            <property name="max" value="144" />
        </module>
        <module name="MethodLength">
            <property name="countEmpty" value="false" />
            <property name="max" value="50" />
        </module>

        <module name="AnonInnerLength">
            <property name="max" value="40" />
        </module>
    </module>
</module>


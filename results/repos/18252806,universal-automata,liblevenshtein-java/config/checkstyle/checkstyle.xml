<?xml version="1.0"?>

<!DOCTYPE module PUBLIC
  "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

  - the Java Language Specification at
    http://java.sun.com/docs/books/jls/second_edition/html/index.html

  - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

  - the Javadoc guidelines at
    http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

  - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

  - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
  <!--
    If you set the basedir property below, then all reported file
    names will be relative to the specified directory. See
    http://checkstyle.sourceforge.net/5.x/config.html#Checker

    <property name="basedir" value="${basedir}" />
  -->

  <!-- Checkstyle suppressions -->
  <module name="SuppressionFilter">
    <property name="file" value="config/checkstyle/suppressions.xml"/>
    <property name="optional" value="false"/>
  </module>

  <!-- See http://checkstyle.sf.net/config_javadoc.html -->
  <module name="JavadocPackage" />

  <!-- Checks whether files end with a new line.            -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile" />

  <!-- Checks for Size Violations.          -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <module name="FileLength">
    <property name="max" value="1000" />
  </module>

  <module name="UniqueProperties" />

  <!-- Checks for whitespace                 -->
  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
  <module name="FileTabCharacter" />

  <!-- Disables warnings via @SuppressWarnings -->
  <module name="SuppressWarningsFilter" />

  <!-- Miscellaneous other checks.           -->
  <!-- See http://checkstyle.sf.net/config_misc.html -->
  <module name="RegexpSingleline">
     <property name="format" value="\s+$" />
     <property name="minimum" value="0" />
     <property name="maximum" value="0" />
     <property name="message" value="Line has trailing spaces." />
  </module>

  <module name="TreeWalker">

    <!-- Annotation configs -->
    <!-- http://checkstyle.sourceforge.net/config_annotation.html -->
    <module name="AnnotationLocation" />
    <module name="AnnotationUseStyle" />
    <module name="MissingDeprecated" />
    <module name="MissingOverride" />
    <module name="PackageAnnotation" />
    <module name="SuppressWarningsHolder" />

    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocMethod">
      <property name="validateThrows" value="true" />
      <property name="allowUndeclaredRTE" value="true" />
    </module>
    <module name="JavadocType" />
    <module name="JavadocVariable">
      <property name="ignoreNamePattern" value="serialVersionUID" />
    </module>
    <module name="JavadocStyle">
      <property name="checkEmptyJavadoc" value="true" />
    </module>
    <module name="AtclauseOrder" />
    <module name="JavadocParagraph" />
    <module name="JavadocTagContinuationIndentation">
      <property name="offset" value="2" />
    </module>
    <module name="NonEmptyAtclauseDescription" />
    <module name="SingleLineJavadoc" />


    <!-- Checks for Naming Conventions.          -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName" />
    <module name="LocalFinalVariableName" />
    <module name="LocalVariableName" />
    <module name="MemberName" />
    <module name="MethodName" />
    <module name="PackageName" />
    <module name="ParameterName" />
    <module name="StaticVariableName" />
    <module name="TypeName" />


    <!-- Code metric validations -->
    <!-- http://checkstyle.sourceforge.net/config_metrics.html -->
    <module name="BooleanExpressionComplexity">
    	<property name="severity" value="warning" />
    </module>
    <module name="ClassDataAbstractionCoupling">
      <property name="excludedClasses" value="
      	AbstractMap.SimpleImmutableEntry,
        ArrayIndexOutOfBoundsException,
        ArrayList,
        Boolean,
        BufferedReader,
        BufferedWriter,
        Byte,
        ByteArrayInputStream,
        ByteArrayOutputStream,
        Character,
        Class,
        Date,
        Deque,
        Double,
        Exception,
        Float,
        HashMap,
        HashSet,
        IllegalArgumentException,
        IllegalStateException,
        ImmutableMap.Builder,
        IndexOutOfBoundsException,
        InputStreamReader,
        OutputStreamWriter,
        Integer,
        IOException,
        LinkedList,
        List,
        Long,
        Map,
        NullPointerException,
        Object,
        Properties,
        Queue,
        RuntimeException,
        SecurityException,
        Set,
        Short,
        SortedMap,
        SortedSet,
        String,
        StringBuffer,
        StringBuilder,
        Thread,
        Throwable,
        TreeMap,
        TreeSet,
        UnsupportedOperationException,
        Void,
      	boolean,
        byte,
        char,
        double,
        float,
        int,
        long,
        null,
        short,
        void" />
    </module>
    <module name="ClassFanOutComplexity">
      <property name="max" value="10" />
      <property name="severity" value="warning" />
    </module>
    <module name="CyclomaticComplexity">
      <property name="switchBlockAsSingleDecisionPoint" value="true" />
      <property name="severity" value="warning" />
    </module>
    <module name="JavaNCSS">
    	<property name="severity" value="warning" />
    </module>
    <module name="NPathComplexity">
    	<property name="severity" value="warning" />
    </module>


    <!-- Software design patterns -->
    <!-- http://checkstyle.sourceforge.net/config_design.html -->
    <module name="HideUtilityClassConstructor" />
    <module name="InnerTypeLast" />
    <module name="InterfaceIsType" />
    <module name="MutableException" />
    <module name="OneTopLevelClass" />
    <module name="ThrowsCount" />
    <module name="VisibilityModifier">
      <property name="allowPublicImmutableFields" value="false" />
      <property name="publicMemberPattern" value="^$" />
      <property name="protectedAllowed" value="true" />
    </module>


    <!-- Checks for Headers                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header">              -->
      <!-- The follow property value demonstrates the ability   -->
      <!-- to have access to ANT properties. In this case it uses -->
      <!-- the ${basedir} property to allow Checkstyle to be run  -->
      <!-- from any directory within a project. See property    -->
      <!-- expansion,                       -->
      <!-- http://checkstyle.sf.net/config.html#properties    -->
      <!-- <property                        -->
      <!--   name="headerFile"                  -->
      <!--   value="${basedir}/java.header" />           -->
    <!-- </module> -->

    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module name="RegexpHeader" />                -->


    <!-- Checks for imports                -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport" />
    <module name="IllegalImport" /> <!-- defaults to sun.* packages -->
    <module name="RedundantImport" />
    <module name="UnusedImports" />
    <module name="ImportOrder">
      <property name="groups" value="
        /^javax?\./,
        it.unimi.dsi.fastutil,
        org.apache.commons.lang3,
        org.apache.commons.io,
        org.apache.commons.cli,
        com.google.common,
        com.google.protobuf,
        org.stringtemplate.v4,
        org.testng,
        org.mockito,
        org.assertj,
        jdepend.framework,
        edu.umd.cs.findbugs,
        lombok,
        com.github.liblevenshtein
      " />
      <property name="ordered" value="true" />
      <property name="caseSensitive" value="true" />
      <property name="separated" value="true" />
      <property name="option" value="under" />
      <property name="sortStaticImportsAlphabetically" value="true" />
    </module>

    <!-- Checks for Size Violations.          -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength">
      <property name="max" value="120" />
      <!-- Ignore javadoc strings with long strings, like package names -->
      <property name="ignorePattern" value="^ *\* *[^ ]+$" />
    </module>
    <module name="ExecutableStatementCount">
    	<property name="severity" value="warning" />
    </module>
    <module name="MethodLength" />
    <module name="ParameterNumber" />
    <module name="AnonInnerLength" />
    <module name="OuterTypeNumber" />
    <module name="MethodCount" />


    <!-- Checks for whitespace                 -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForInitializerPad" />
    <module name="EmptyForIteratorPad" />
    <module name="EmptyLineSeparator">
      <property name="allowMultipleEmptyLines" value="false" />
      <property name="allowMultipleEmptyLinesInsideClassMembers" value="false" />
    </module>
    <module name="GenericWhitespace" />
    <module name="MethodParamPad">
      <property name="allowLineBreaks" value="true" />
    </module>
    <module name="NoLineWrap" />
    <module name="NoWhitespaceAfter" />
    <module name="NoWhitespaceBefore" />
    <module name="OperatorWrap" />
    <module name="ParenPad" />
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA" />
    </module>
    <module name="TypecastParenPad" />
    <module name="WhitespaceAfter" />
    <module name="WhitespaceAround" />


    <!-- Modifier Checks                  -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder" />
    <module name="RedundantModifier" />


    <!-- Checks for blocks. You know, those {}'s     -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks" />
    <module name="EmptyBlock" />
    <module name="EmptyCatchBlock" />
    <module name="LeftCurly" />
    <module name="NeedBraces" />
    <module name="RightCurly">
      <property name="option" value="alone" />
    </module>

    <!-- Ensure arrays have a trailing comma after their last elements -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="ArrayTrailingComma" />


    <!-- Checks for common coding problems         -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="EmptyStatement" />
    <module name="EqualsHashCode" />
    <module name="CovariantEquals" />
    <module name="HiddenField">
      <property name="ignoreConstructorParameter" value="true" />
      <property name="ignoreAbstractMethods" value="true" />
      <property name="ignoreSetter" value="true" />
      <property name="setterCanReturnItsClass" value="true" />
      <property name="severity" value="warning" />
    </module>
    <module name="IllegalInstantiation" />
    <module name="InnerAssignment" />
    <module name="MissingSwitchDefault" />
    <module name="SimplifyBooleanExpression" />
    <module name="SimplifyBooleanReturn" />
    <module name="DeclarationOrder" />
    <module name="DefaultComesLast" />
    <module name="EqualsAvoidNull" />
    <module name="FallThrough" />
    <module name="FinalLocalVariable">
      <property name="validateEnhancedForLoopVariable" value="true" />
      <property name="severity" value="warning" />
    </module>
    <module name="IllegalCatch" />
    <module name="IllegalThrows" />
    <module name="IllegalToken" />
    <!-- Forbid integer literals with leading zeros, unless they are literally
         zero or a hexadecimal literal -->
    <module name="IllegalTokenText">
      <property name="tokens" value="NUM_INT,NUM_LONG"/>
      <property name="format" value="^0[^lx]"/>
      <property name="ignoreCase" value="true"/>
    </module>
    <module name="IllegalType" />
    <module name="ModifiedControlVariable" />
    <module name="MultipleStringLiterals" />
    <module name="MultipleVariableDeclarations">
    	<property name="severity" value="warning" />
    </module>
    <module name="NestedForDepth">
    	<property name="severity" value="warning" />
    </module>
    <module name="NestedIfDepth">
    	<property name="severity" value="warning" />
    </module>
    <module name="NestedTryDepth">
    	<property name="severity" value="warning" />
    </module>
    <module name="NoClone" />
    <module name="NoFinalizer" />
    <module name="OneStatementPerLine">
    	<property name="severity" value="warning" />
    </module>
    <module name="OverloadMethodsDeclarationOrder" />
    <module name="PackageDeclaration" />
    <module name="ParameterAssignment">
    	<property name="severity" value="warning" />
    </module>
    <module name="RequireThis" />
    <module name="StringLiteralEquality" />
    <module name="UnnecessaryParentheses" />
    <module name="VariableDeclarationUsageDistance">
      <property name="validateBetweenScopes" value="true" />
    </module>


    <!-- Checks for class design             -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="HideUtilityClassConstructor" />
    <module name="InterfaceIsType" />

    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true" />
    </module>


    <!-- Miscellaneous other checks.           -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle" />
    <module name="FinalParameters" />
    <module name="TodoComment">
      <property name="format" value="\b(TODO|FIXME)\b" />
      <property name="severity" value="warning" />
    </module>
    <module name="UpperEll" />
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowNonPrintableEscapes" value="true" />
      <property name="allowIfAllCharactersEscaped" value="true" />
    </module>
    <module name="CommentsIndentation" />
    <module name="Indentation">
      <property name="basicOffset" value="2" />
      <property name="caseIndent" value="2" />
      <property name="throwsIndent" value="2" />
      <property name="arrayInitIndent" value="2" />
      <property name="lineWrappingIndentation" value="2" />
    </module>
    <module name="OuterTypeFilename" />
    <module name="UncommentedMain" />

  </module>

</module>

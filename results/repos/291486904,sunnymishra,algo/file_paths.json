[
    ".gitignore",
    ".idea",
    ".idea/.gitignore",
    ".idea/codeStyles",
    ".idea/codeStyles/Project.xml",
    ".idea/codeStyles/codeStyleConfig.xml",
    ".idea/misc.xml",
    ".idea/modules.xml",
    ".idea/vcs.xml",
    "Algos.iml",
    "lib",
    "lib/commons-collections-3.2.2.jar",
    "lib/commons-lang-2.3.jar",
    "lib/gson-2.8.5.jar",
    "lib/hamcrest.jar",
    "lib/junit.jar",
    "readme.md",
    "src",
    "src/CodeExecutor.bat",
    "src/epi",
    "src/epi/dynamicprogramming",
    "src/epi/dynamicprogramming/_13_Fibonacci.java",
    "src/epi/dynamicprogramming/_14_MaxSubArraySum.java",
    "src/epi/dynamicprogramming/_15_CoinChange.java",
    "src/epi/dynamicprogramming/_16_StairClimbing.java",
    "src/epi/dynamicprogramming/_17_LongestCommonSubsequence.java",
    "src/epi/dynamicprogramming/_18_TeamScoreSequence.java",
    "src/epi/dynamicprogramming/_19_MakePalindromeByDeleting.java",
    "src/epi/dynamicprogramming/_20_LevenshteinDistance.java",
    "src/epi/dynamicprogramming/_21_MakePalindromeByAdding.java",
    "src/epi/dynamicprogramming/_22_Traverse2DArray.java",
    "src/epi/dynamicprogramming/_23_BinomialCoefficient.java",
    "src/epi/dynamicprogramming/_24_FishCatchingMaxCost.java",
    "src/epi/dynamicprogramming/_25_ValidateInterleavingString.java",
    "src/epi/dynamicprogramming/_26_FindPatternIn2DArray.java",
    "src/epi/dynamicprogramming/_27_ZeroOneKnapsack.java",
    "src/epi/dynamicprogramming/_28_MinWeightPathTriangle.java",
    "src/epi/dynamicprogramming/_29_DictionaryWordBreak.java",
    "src/epi/dynamicprogramming/_30_CoinSelectionGame.java",
    "src/epi/dynamicprogramming/_31_StairClimbingWays.java",
    "src/epi/dynamicprogramming/_32_PrettyPrinting.java",
    "src/epi/dynamicprogramming/_33_LongestIncreasingSubsequence.java",
    "src/epi/recursion",
    "src/epi/recursion/_10_GrayCode.java",
    "src/epi/recursion/_11_TreeDiameter.java",
    "src/epi/recursion/_12_RangeSumBst.java",
    "src/epi/recursion/_1_NQueens.java",
    "src/epi/recursion/_2_Gcd.java",
    "src/epi/recursion/_3_TowerOfHanoi.java",
    "src/epi/recursion/_4_Permutation.java",
    "src/epi/recursion/_5_PowerSet.java",
    "src/epi/recursion/_6_Subset.java",
    "src/epi/recursion/_7_ParanthesisMatch.java",
    "src/epi/recursion/_8_PalindromePartitioning.java",
    "src/epi/recursion/_9_BinaryTreeGenerate.java",
    "src/geeksForGeeksChallenge",
    "src/geeksForGeeksChallenge/array",
    "src/geeksForGeeksChallenge/array/_10_EquilibriumPoint.java",
    "src/geeksForGeeksChallenge/array/_11_MinPlatforms.java",
    "src/geeksForGeeksChallenge/array/_12_KSmallestElement.java",
    "src/geeksForGeeksChallenge/array/_13_TrappingRainWater.java",
    "src/geeksForGeeksChallenge/array/_14_PythagoreanTriplet.java",
    "src/geeksForGeeksChallenge/array/_15_StockBuySell.java",
    "src/geeksForGeeksChallenge/array/_16_ZigZagArray.java",
    "src/geeksForGeeksChallenge/array/_17_SpiralTraverseMatrix.java",
    "src/geeksForGeeksChallenge/array/_18_LargestNumberString.java",
    "src/geeksForGeeksChallenge/array/_1_SubarrayWithSum.java",
    "src/geeksForGeeksChallenge/array/_2_CountTriplet.java",
    "src/geeksForGeeksChallenge/array/_3_KadaneAlgoMaxSubArraySum.java",
    "src/geeksForGeeksChallenge/array/_4_MissingNumber.java",
    "src/geeksForGeeksChallenge/array/_5_MergeSortedArrays.java",
    "src/geeksForGeeksChallenge/array/_6_RearrangeArrayInPlace.java",
    "src/geeksForGeeksChallenge/array/_7_CountPowerPairs.java",
    "src/geeksForGeeksChallenge/array/_8_InversionCount.java",
    "src/geeksForGeeksChallenge/array/_9_Sort3PartitionsOf_0_1_2.java",
    "src/geeksForGeeksChallenge/heap",
    "src/geeksForGeeksChallenge/heap/_1_MedianInAStream.java",
    "src/geeksForGeeksChallenge/linkedlist",
    "src/geeksForGeeksChallenge/linkedlist/_1_MiddleElement.java",
    "src/geeksForGeeksChallenge/linkedlist/_2_ReverseLinkedlist.java",
    "src/geeksForGeeksChallenge/linkedlist/_3_IntersectionPoint.java",
    "src/geeksForGeeksChallenge/linkedlist/_4_DetectLoop.java",
    "src/geeksForGeeksChallenge/linkedlist/_5_FlattenList.java",
    "src/geeksForGeeksChallenge/linkedlist/_6_MergeSortedLists.java",
    "src/geeksForGeeksChallenge/linkedlist/_7_Sum2List.java",
    "src/geeksForGeeksChallenge/stackQueue",
    "src/geeksForGeeksChallenge/stackQueue/_1_ParenthesisChecker.java",
    "src/geeksForGeeksChallenge/stackQueue/_2_NextLargeElement.java",
    "src/geeksForGeeksChallenge/stackQueue/_3_GetMinInStack.java",
    "src/geeksForGeeksChallenge/stackQueue/_4_LRUCache.java",
    "src/geeksForGeeksChallenge/stackQueue/_5_FirstNonRepeatingCharInStream.java",
    "src/geeksForGeeksChallenge/stackQueue/_6_MaxOfAllSubarrays.java",
    "src/geeksForGeeksChallenge/string",
    "src/geeksForGeeksChallenge/string/_1_FindPermutation.java",
    "src/geeksForGeeksChallenge/string/_2_LongestPalindrome.java",
    "src/geeksForGeeksChallenge/string/_3_RemoveDuplicateChar.java",
    "src/geeksForGeeksChallenge/string/_4_StringRotate.java",
    "src/geeksForGeeksChallenge/string/_5_RomanToDecimal.java",
    "src/geeksForGeeksChallenge/string/_6_FormPalindrome.java",
    "src/geeksForGeeksChallenge/string/_7_StringToInteger.java",
    "src/geeksForGeeksChallenge/tree",
    "src/geeksForGeeksChallenge/tree/_10_TreeHeight.java",
    "src/geeksForGeeksChallenge/tree/_11_Max2LeafNodeSum.java",
    "src/geeksForGeeksChallenge/tree/_12_TreeDiameter.java",
    "src/geeksForGeeksChallenge/tree/_1_PrintLeftView.java",
    "src/geeksForGeeksChallenge/tree/_2_IsTreeBst.java",
    "src/geeksForGeeksChallenge/tree/_3_TreeBottomView.java",
    "src/geeksForGeeksChallenge/tree/_4_VerticalTreeTraversal.java",
    "src/geeksForGeeksChallenge/tree/_5_LevelOrderSpiral.java",
    "src/geeksForGeeksChallenge/tree/_6_ConnectSameLevelNodes.java",
    "src/geeksForGeeksChallenge/tree/_7_BinaryTreeToDLL.java",
    "src/geeksForGeeksChallenge/tree/_8_LCA.java",
    "src/geeksForGeeksChallenge/tree/_9_SymmetricTree.java",
    "src/general",
    "src/general/Test123.java"
]
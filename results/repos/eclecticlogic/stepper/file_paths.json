[
    ".gitignore",
    "LICENSE",
    "README.md",
    "build.gradle.kts",
    "etc",
    "etc/fibonacci.png",
    "etc/helloworld.png",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "settings.gradle",
    "src",
    "src/main",
    "src/main/antlr",
    "src/main/antlr/Stepper.g4",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/eclecticlogic",
    "src/main/java/com/eclecticlogic/stepper",
    "src/main/java/com/eclecticlogic/stepper/StateMachine.java",
    "src/main/java/com/eclecticlogic/stepper/Stepper.java",
    "src/main/java/com/eclecticlogic/stepper/StepperParseException.java",
    "src/main/java/com/eclecticlogic/stepper/construct",
    "src/main/java/com/eclecticlogic/stepper/construct/CatchClause.java",
    "src/main/java/com/eclecticlogic/stepper/construct/Construct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/ExpressionConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/FailConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/ForIterationConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/ForLoopConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/GotoConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/IfConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/ParallelConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/ProgramConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/StateConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/SuccessConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/TryCatchConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/WaitConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/WhenCase.java",
    "src/main/java/com/eclecticlogic/stepper/construct/WhenConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/construct/WhileConstruct.java",
    "src/main/java/com/eclecticlogic/stepper/etc",
    "src/main/java/com/eclecticlogic/stepper/etc/Constants.java",
    "src/main/java/com/eclecticlogic/stepper/etc/Etc.java",
    "src/main/java/com/eclecticlogic/stepper/etc/LambdaBranch.java",
    "src/main/java/com/eclecticlogic/stepper/etc/LambdaHelper.java",
    "src/main/java/com/eclecticlogic/stepper/etc/WeaveContext.java",
    "src/main/java/com/eclecticlogic/stepper/install",
    "src/main/java/com/eclecticlogic/stepper/install/InstallConfig.java",
    "src/main/java/com/eclecticlogic/stepper/install/LambdaInstaller.java",
    "src/main/java/com/eclecticlogic/stepper/install/StepFunctionInstaller.java",
    "src/main/java/com/eclecticlogic/stepper/state",
    "src/main/java/com/eclecticlogic/stepper/state/AbstractState.java",
    "src/main/java/com/eclecticlogic/stepper/state/AttributableState.java",
    "src/main/java/com/eclecticlogic/stepper/state/Choice.java",
    "src/main/java/com/eclecticlogic/stepper/state/Fail.java",
    "src/main/java/com/eclecticlogic/stepper/state/NameProvider.java",
    "src/main/java/com/eclecticlogic/stepper/state/NamingScheme.java",
    "src/main/java/com/eclecticlogic/stepper/state/Parallel.java",
    "src/main/java/com/eclecticlogic/stepper/state/Pass.java",
    "src/main/java/com/eclecticlogic/stepper/state/State.java",
    "src/main/java/com/eclecticlogic/stepper/state/StateType.java",
    "src/main/java/com/eclecticlogic/stepper/state/Succeed.java",
    "src/main/java/com/eclecticlogic/stepper/state/Task.java",
    "src/main/java/com/eclecticlogic/stepper/state/Wait.java",
    "src/main/java/com/eclecticlogic/stepper/state/observer",
    "src/main/java/com/eclecticlogic/stepper/state/observer/NotificationReceiver.java",
    "src/main/java/com/eclecticlogic/stepper/state/observer/StateObserver.java",
    "src/main/java/com/eclecticlogic/stepper/visitor",
    "src/main/java/com/eclecticlogic/stepper/visitor/AbstractVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/AssignmentVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/DereferenceListener.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/DereferencingVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/ForVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/JsonObjectVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/RetryVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/StatementBlockVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/StatementVisitor.java",
    "src/main/java/com/eclecticlogic/stepper/visitor/StepperVisitor.java",
    "src/main/resources",
    "src/main/resources/stepper",
    "src/main/resources/stepper/template",
    "src/main/resources/stepper/template/lambda.stg",
    "src/test",
    "src/test/groovy",
    "src/test/groovy/com",
    "src/test/groovy/com/eclecticlogic",
    "src/test/groovy/com/eclecticlogic/stepper",
    "src/test/groovy/com/eclecticlogic/stepper/asl",
    "src/test/groovy/com/eclecticlogic/stepper/asl/AbstractStateMachineTester.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestBasic.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestFail.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestFor.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestGoto.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestIf.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestParallel.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestTryCatch.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestWhen.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/asl/TestWhile.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/construct",
    "src/test/groovy/com/eclecticlogic/stepper/construct/TestConstruct.groovy",
    "src/test/groovy/com/eclecticlogic/stepper/etc",
    "src/test/groovy/com/eclecticlogic/stepper/etc/TestEtc.groovy",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/eclecticlogic",
    "src/test/java/com/eclecticlogic/stepper",
    "src/test/java/com/eclecticlogic/stepper/antlr",
    "src/test/java/com/eclecticlogic/stepper/antlr/AbstractGrammarTester.java",
    "src/test/java/com/eclecticlogic/stepper/antlr/TestGrammar.java",
    "src/test/resources",
    "src/test/resources/antlr",
    "src/test/resources/antlr/grammar",
    "src/test/resources/antlr/grammar/grammar.stg",
    "src/test/resources/stepper",
    "src/test/resources/stepper/basic.stg",
    "src/test/resources/stepper/fail.stg",
    "src/test/resources/stepper/forloop.stg",
    "src/test/resources/stepper/goto.stg",
    "src/test/resources/stepper/if.stg",
    "src/test/resources/stepper/parallel.stg",
    "src/test/resources/stepper/trycatch.stg",
    "src/test/resources/stepper/when.stg",
    "src/test/resources/stepper/while.stg"
]
[
    ".gitignore",
    ".idea",
    ".idea/.name",
    ".idea/compiler.xml",
    ".idea/copyright",
    ".idea/copyright/profiles_settings.xml",
    ".idea/misc.xml",
    ".idea/modules.xml",
    ".idea/modules",
    ".idea/modules/autocoder.iml",
    ".idea/modules/autocoder_main.iml",
    ".idea/modules/autocoder_test.iml",
    ".idea/runConfigurations",
    ".idea/runConfigurations/Regenerate_IDEA_project_files.xml",
    ".idea/runConfigurations/Unit_tests.xml",
    "README.md",
    "autocoder.iml",
    "autocoder.ipr",
    "build.gradle",
    "circle.yml",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "settings.gradle",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/net",
    "src/main/java/net/michaelmelanson",
    "src/main/java/net/michaelmelanson/autocoder",
    "src/main/java/net/michaelmelanson/autocoder/AutocoderMain.java",
    "src/main/java/net/michaelmelanson/autocoder/InvalidTargetException.java",
    "src/main/java/net/michaelmelanson/autocoder/MappingReducer.java",
    "src/main/java/net/michaelmelanson/autocoder/Transformation.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations",
    "src/main/java/net/michaelmelanson/autocoder/transformations/ConstantToScalarReplaceWithIdentifier.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/EmptyToNilAddReturnStatement.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/ExpressionToFunctionReplaceWithExpression.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/NilToConstantReplaceWithStringLiteral.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfAddElseClauseReturningExpression.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfOnConditionReturnLiteral.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfOnConditionThrowInvalidArgument.java",
    "src/main/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfWrapInCondition.java",
    "src/test",
    "src/test/java",
    "src/test/java/net",
    "src/test/java/net/michaelmelanson",
    "src/test/java/net/michaelmelanson/autocoder",
    "src/test/java/net/michaelmelanson/autocoder/transformations",
    "src/test/java/net/michaelmelanson/autocoder/transformations/ConstantToScalarReplaceWithIdentifierTest.java",
    "src/test/java/net/michaelmelanson/autocoder/transformations/EmptyToNilAddReturnStatementTest.java",
    "src/test/java/net/michaelmelanson/autocoder/transformations/NilToConstantReplaceWithStringLiteralTest.java",
    "src/test/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfAddElseClauseReturningExpressionTest.java",
    "src/test/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfOnConditionReturnLiteralTest.java",
    "src/test/java/net/michaelmelanson/autocoder/transformations/UnconditionalToIfOnConditionThrowInvalidArgumentTest.java"
]
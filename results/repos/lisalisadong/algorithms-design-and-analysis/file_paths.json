[
    ".gitignore",
    "README.md",
    "certificate.png",
    "divide-and-conquer",
    "divide-and-conquer/count-inversions",
    "divide-and-conquer/count-inversions/CountInversions.java",
    "divide-and-conquer/count-inversions/IntegerArray.txt",
    "divide-and-conquer/count-inversions/Test.txt",
    "divide-and-conquer/matrix-multiplication",
    "divide-and-conquer/matrix-multiplication/MatrixMultiplication.java",
    "divide-and-conquer/merge-sort",
    "divide-and-conquer/merge-sort/MergeSort.java",
    "divide-and-conquer/merge-sort/Test.txt",
    "divide-and-conquer/the-closest-pair",
    "divide-and-conquer/the-closest-pair/Pair.java",
    "divide-and-conquer/the-closest-pair/TheClosestPair.java",
    "graph",
    "graph/dijkstra-shortest-path",
    "graph/dijkstra-shortest-path/DijkstraData.txt",
    "graph/dijkstra-shortest-path/Graph.java",
    "graph/dijkstra-shortest-path/SimpleInput.txt",
    "graph/karger-minimum-cut",
    "graph/karger-minimum-cut/Graph.java",
    "graph/karger-minimum-cut/MinCutInput.txt",
    "graph/karger-minimum-cut/SimpleInput.txt",
    "graph/kosaraju-dfs-scc",
    "graph/kosaraju-dfs-scc/Graph.java",
    "graph/kosaraju-dfs-scc/SCCInput.txt",
    "graph/kosaraju-dfs-scc/SimpleInput.txt",
    "greedy-algorithm",
    "greedy-algorithm/prim-minimum-spanning-tree",
    "greedy-algorithm/prim-minimum-spanning-tree/BigInput.txt",
    "greedy-algorithm/prim-minimum-spanning-tree/PrimMST.java",
    "greedy-algorithm/prim-minimum-spanning-tree/SmallInput.txt",
    "greedy-algorithm/prim-minimum-spanning-tree/TestMST.java",
    "greedy-algorithm/weight-length-scheduling",
    "greedy-algorithm/weight-length-scheduling/BigInput.txt",
    "greedy-algorithm/weight-length-scheduling/DifferenceSchedule.java",
    "greedy-algorithm/weight-length-scheduling/RatioSchedule.java",
    "greedy-algorithm/weight-length-scheduling/SmallInput.txt",
    "hash-table",
    "hash-table/two-sum",
    "hash-table/two-sum/Input.txt",
    "hash-table/two-sum/TwoSum.java",
    "heap",
    "heap/heap-sort",
    "heap/heap-sort/BigInput.txt",
    "heap/heap-sort/Heap.java",
    "heap/heap-sort/HeapSort.java",
    "heap/heap-sort/SmallInput.txt",
    "heap/median-maintenance",
    "heap/median-maintenance/Median.txt",
    "heap/median-maintenance/MedianMaintenance.java",
    "heap/optimized-dijkstra",
    "heap/optimized-dijkstra/DijkstraData.txt",
    "heap/optimized-dijkstra/Graph.java",
    "heap/optimized-dijkstra/SimpleInput.txt",
    "notes",
    "notes/week1.txt",
    "notes/week2.txt",
    "notes/week3.txt",
    "notes/week4.txt",
    "notes/week5.txt",
    "notes/week6.txt",
    "randomized-algorithm",
    "randomized-algorithm/linear-time-selection",
    "randomized-algorithm/linear-time-selection/BigInput.txt",
    "randomized-algorithm/linear-time-selection/LinearTimeSelection.java",
    "randomized-algorithm/linear-time-selection/SmallInput.txt",
    "randomized-algorithm/quick-sort",
    "randomized-algorithm/quick-sort/QuickSort.java",
    "randomized-algorithm/quick-sort/QuickSortInput.txt",
    "randomized-algorithm/quick-sort/Test.txt",
    "randomized-algorithm/quick-sort/Test2.txt"
]
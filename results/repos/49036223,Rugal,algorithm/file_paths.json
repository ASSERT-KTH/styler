[
    ".gitignore",
    ".projectKnowledge",
    ".projectKnowledge/map.mmd",
    "README.md",
    "configuration",
    "configuration/checkstyle",
    "configuration/checkstyle/checkstyle.xml",
    "configuration/checkstyle/suppression.xml",
    "configuration/findbugs",
    "configuration/findbugs/exclude.xml",
    "hackerrank",
    "hackerrank/.gitignore",
    "hackerrank/README.md",
    "hackerrank/pom.xml",
    "hackerrank/src",
    "hackerrank/src/main",
    "hackerrank/src/main/java",
    "hackerrank/src/main/java/ga",
    "hackerrank/src/main/java/ga/PackageInfo.java",
    "hackerrank/src/main/java/ga/rugal",
    "hackerrank/src/main/java/ga/rugal/hacker",
    "hackerrank/src/main/java/ga/rugal/hacker/DivideNumber.java",
    "hackerrank/src/main/java/ga/rugal/hacker/KMPSearch.java",
    "hackerrank/src/main/java/ga/rugal/hacker/LCS.java",
    "hackerrank/src/main/java/ga/rugal/hacker/LargestNumber.java",
    "hackerrank/src/main/java/ga/rugal/hacker/LongestReplace.java",
    "hackerrank/src/main/java/ga/rugal/hacker/MaxNodeLevel.java",
    "hackerrank/src/main/java/ga/rugal/hacker/MinimumJump.java",
    "hackerrank/src/main/java/ga/rugal/hacker/PalindromeList.java",
    "hackerrank/src/main/java/ga/rugal/hacker/ParentheseBalance.java",
    "hackerrank/src/main/java/ga/rugal/hacker/RelativeRanks.java",
    "hackerrank/src/main/java/ga/rugal/hacker/TrapWater.java",
    "hackerrank/src/main/java/ga/rugal/hacker/Zig.java",
    "hackerrank/src/main/resources",
    "hackerrank/src/main/resources/log4j.properties",
    "hackerrank/src/test",
    "hackerrank/src/test/java",
    "hackerrank/src/test/java/ga",
    "hackerrank/src/test/java/ga/rugal",
    "hackerrank/src/test/java/ga/rugal/hacker",
    "hackerrank/src/test/java/ga/rugal/hacker/DivideNumberTest.java",
    "hackerrank/src/test/java/ga/rugal/hacker/LCSTest.java",
    "hackerrank/src/test/java/ga/rugal/hacker/LargestNumberTest.java",
    "hackerrank/src/test/java/ga/rugal/hacker/PalindromeListTest.java",
    "hackerrank/src/test/java/ga/rugal/hacker/ParentheseBalanceTest.java",
    "hackerrank/src/test/java/ga/rugal/hacker/ZigTest.java",
    "leetcode",
    "leetcode/.gitignore",
    "leetcode/README.md",
    "leetcode/pom.xml",
    "leetcode/src",
    "leetcode/src/main",
    "leetcode/src/main/java",
    "leetcode/src/main/java/ga",
    "leetcode/src/main/java/ga/rugal",
    "leetcode/src/main/java/ga/rugal/leetcode",
    "leetcode/src/main/java/ga/rugal/leetcode/Interval.java",
    "leetcode/src/main/java/ga/rugal/leetcode/ListNode.java",
    "leetcode/src/main/java/ga/rugal/leetcode/Node.java",
    "leetcode/src/main/java/ga/rugal/leetcode/RandomListNode.java",
    "leetcode/src/main/java/ga/rugal/leetcode/TreeNode.java",
    "leetcode/src/main/java/ga/rugal/leetcode/accountsmerge",
    "leetcode/src/main/java/ga/rugal/leetcode/accountsmerge/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/addbinary",
    "leetcode/src/main/java/ga/rugal/leetcode/addbinary/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/addtwonumbers",
    "leetcode/src/main/java/ga/rugal/leetcode/addtwonumbers/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/asteroidcollision",
    "leetcode/src/main/java/ga/rugal/leetcode/asteroidcollision/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/availablecapturesforrook",
    "leetcode/src/main/java/ga/rugal/leetcode/availablecapturesforrook/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/backspacestringcompare",
    "leetcode/src/main/java/ga/rugal/leetcode/backspacestringcompare/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/balancedbinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/balancedbinarytree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/baseballgame",
    "leetcode/src/main/java/ga/rugal/leetcode/baseballgame/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/besttimetobuyandsellstockii",
    "leetcode/src/main/java/ga/rugal/leetcode/besttimetobuyandsellstockii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreelevelordertraversal",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreelevelordertraversal/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreelevelordertraversalii",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreelevelordertraversalii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreemaximumpathsum",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreemaximumpathsum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreerightsideview",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreerightsideview/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreezigzaglevelordertraversal",
    "leetcode/src/main/java/ga/rugal/leetcode/binarytreezigzaglevelordertraversal/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/binarywatch",
    "leetcode/src/main/java/ga/rugal/leetcode/binarywatch/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/bitwiseandofnumbersrange",
    "leetcode/src/main/java/ga/rugal/leetcode/bitwiseandofnumbersrange/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/buildanarraywithstackoperations",
    "leetcode/src/main/java/ga/rugal/leetcode/buildanarraywithstackoperations/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/busroutes",
    "leetcode/src/main/java/ga/rugal/leetcode/busroutes/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/capacitytoshippackageswithinddays",
    "leetcode/src/main/java/ga/rugal/leetcode/capacitytoshippackageswithinddays/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/checkifitisastraightline",
    "leetcode/src/main/java/ga/rugal/leetcode/checkifitisastraightline/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/checkvalidstringintree",
    "leetcode/src/main/java/ga/rugal/leetcode/checkvalidstringintree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/clonegraph",
    "leetcode/src/main/java/ga/rugal/leetcode/clonegraph/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/coinchange",
    "leetcode/src/main/java/ga/rugal/leetcode/coinchange/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/combinations",
    "leetcode/src/main/java/ga/rugal/leetcode/combinations/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsum",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumii",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumiii",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumiii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumiv",
    "leetcode/src/main/java/ga/rugal/leetcode/combinationsumiv/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/constructbinarysearchtreefrompreordertraversal",
    "leetcode/src/main/java/ga/rugal/leetcode/constructbinarysearchtreefrompreordertraversal/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/constructbinarytreefrompreorderandinordertraversal",
    "leetcode/src/main/java/ga/rugal/leetcode/constructbinarytreefrompreorderandinordertraversal/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/containerwithmostwater",
    "leetcode/src/main/java/ga/rugal/leetcode/containerwithmostwater/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/contiguousarray",
    "leetcode/src/main/java/ga/rugal/leetcode/contiguousarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/copylistwithrandompointer",
    "leetcode/src/main/java/ga/rugal/leetcode/copylistwithrandompointer/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/countingbits",
    "leetcode/src/main/java/ga/rugal/leetcode/countingbits/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/countingelements",
    "leetcode/src/main/java/ga/rugal/leetcode/countingelements/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/countprimes",
    "leetcode/src/main/java/ga/rugal/leetcode/countprimes/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/courseschedule",
    "leetcode/src/main/java/ga/rugal/leetcode/courseschedule/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/coursescheduleii",
    "leetcode/src/main/java/ga/rugal/leetcode/coursescheduleii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/cousinsinbinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/cousinsinbinarytree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/decodestring",
    "leetcode/src/main/java/ga/rugal/leetcode/decodestring/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/designhashmap",
    "leetcode/src/main/java/ga/rugal/leetcode/designhashmap/MyHashMap.java",
    "leetcode/src/main/java/ga/rugal/leetcode/designhashset",
    "leetcode/src/main/java/ga/rugal/leetcode/designhashset/MyHashSet.java",
    "leetcode/src/main/java/ga/rugal/leetcode/diameterofbinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/diameterofbinarytree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/dividearrayinsetsofkconsecutivenumbers",
    "leetcode/src/main/java/ga/rugal/leetcode/dividearrayinsetsofkconsecutivenumbers/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/dividetwointegers",
    "leetcode/src/main/java/ga/rugal/leetcode/dividetwointegers/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/editdistance",
    "leetcode/src/main/java/ga/rugal/leetcode/editdistance/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/erectthefence",
    "leetcode/src/main/java/ga/rugal/leetcode/erectthefence/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/exclusivetimeoffunctions",
    "leetcode/src/main/java/ga/rugal/leetcode/exclusivetimeoffunctions/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/factorialtrailingzeroes",
    "leetcode/src/main/java/ga/rugal/leetcode/factorialtrailingzeroes/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findduplicatesubtrees",
    "leetcode/src/main/java/ga/rugal/leetcode/findduplicatesubtrees/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findfirstandlastpositionofelementinsortedarray",
    "leetcode/src/main/java/ga/rugal/leetcode/findfirstandlastpositionofelementinsortedarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findmedianfromdatastream",
    "leetcode/src/main/java/ga/rugal/leetcode/findmedianfromdatastream/MedianFinder.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findsmallestlettergreaterthantarget",
    "leetcode/src/main/java/ga/rugal/leetcode/findsmallestlettergreaterthantarget/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findthetownjudge",
    "leetcode/src/main/java/ga/rugal/leetcode/findthetownjudge/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/findwinneronatictactoegame",
    "leetcode/src/main/java/ga/rugal/leetcode/findwinneronatictactoegame/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/firstbadversion",
    "leetcode/src/main/java/ga/rugal/leetcode/firstbadversion/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/firstmissingpositive",
    "leetcode/src/main/java/ga/rugal/leetcode/firstmissingpositive/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/firstuniquecharacterinastring",
    "leetcode/src/main/java/ga/rugal/leetcode/firstuniquecharacterinastring/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/firstuniquenumber",
    "leetcode/src/main/java/ga/rugal/leetcode/firstuniquenumber/FirstUnique.java",
    "leetcode/src/main/java/ga/rugal/leetcode/floodfill",
    "leetcode/src/main/java/ga/rugal/leetcode/floodfill/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/foursum",
    "leetcode/src/main/java/ga/rugal/leetcode/foursum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/gameoflife",
    "leetcode/src/main/java/ga/rugal/leetcode/gameoflife/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/generateparentheses",
    "leetcode/src/main/java/ga/rugal/leetcode/generateparentheses/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/graycode",
    "leetcode/src/main/java/ga/rugal/leetcode/graycode/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/groupanagrams",
    "leetcode/src/main/java/ga/rugal/leetcode/groupanagrams/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/handofstraights",
    "leetcode/src/main/java/ga/rugal/leetcode/handofstraights/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/happynumber",
    "leetcode/src/main/java/ga/rugal/leetcode/happynumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/implementstrstr",
    "leetcode/src/main/java/ga/rugal/leetcode/implementstrstr/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/implementtrieprefixtree",
    "leetcode/src/main/java/ga/rugal/leetcode/implementtrieprefixtree/Trie.java",
    "leetcode/src/main/java/ga/rugal/leetcode/insertdeletegetrandomo1",
    "leetcode/src/main/java/ga/rugal/leetcode/insertdeletegetrandomo1/RandomizedSet.java",
    "leetcode/src/main/java/ga/rugal/leetcode/insertinterval",
    "leetcode/src/main/java/ga/rugal/leetcode/insertinterval/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/integertoroman",
    "leetcode/src/main/java/ga/rugal/leetcode/integertoroman/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/intersectionoftwolinkedlists",
    "leetcode/src/main/java/ga/rugal/leetcode/intersectionoftwolinkedlists/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/isomorphicstrings",
    "leetcode/src/main/java/ga/rugal/leetcode/isomorphicstrings/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/jewelsandstones",
    "leetcode/src/main/java/ga/rugal/leetcode/jewelsandstones/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/jumpgame",
    "leetcode/src/main/java/ga/rugal/leetcode/jumpgame/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/kmp",
    "leetcode/src/main/java/ga/rugal/leetcode/kmp/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/knightprobabilityinchessboard",
    "leetcode/src/main/java/ga/rugal/leetcode/knightprobabilityinchessboard/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/knowledge.mmd",
    "leetcode/src/main/java/ga/rugal/leetcode/kthSmallestElementinaBST",
    "leetcode/src/main/java/ga/rugal/leetcode/kthSmallestElementinaBST/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/kthlargestelementinanarray",
    "leetcode/src/main/java/ga/rugal/leetcode/kthlargestelementinanarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/kthlargestelementinastream",
    "leetcode/src/main/java/ga/rugal/leetcode/kthlargestelementinastream/KthLargest.java",
    "leetcode/src/main/java/ga/rugal/leetcode/laststoneweight",
    "leetcode/src/main/java/ga/rugal/leetcode/laststoneweight/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/leftmostcolumnwithatleastaone",
    "leetcode/src/main/java/ga/rugal/leetcode/leftmostcolumnwithatleastaone/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/lettercasepermutation",
    "leetcode/src/main/java/ga/rugal/leetcode/lettercasepermutation/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/lettercombinationsofaphonenumber",
    "leetcode/src/main/java/ga/rugal/leetcode/lettercombinationsofaphonenumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/linkedlistcycle",
    "leetcode/src/main/java/ga/rugal/leetcode/linkedlistcycle/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestcommonsubsequence",
    "leetcode/src/main/java/ga/rugal/leetcode/longestcommonsubsequence/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestincreasingsubsequence",
    "leetcode/src/main/java/ga/rugal/leetcode/longestincreasingsubsequence/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestpalindrome",
    "leetcode/src/main/java/ga/rugal/leetcode/longestpalindrome/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestpalindromicsubstring",
    "leetcode/src/main/java/ga/rugal/leetcode/longestpalindromicsubstring/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestsubstringwithoutrepeatingcharacters",
    "leetcode/src/main/java/ga/rugal/leetcode/longestsubstringwithoutrepeatingcharacters/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/longestwordindictionary",
    "leetcode/src/main/java/ga/rugal/leetcode/longestwordindictionary/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/lowestcommonancestorofabinarysearchtree",
    "leetcode/src/main/java/ga/rugal/leetcode/lowestcommonancestorofabinarysearchtree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/lowestcommonancestorofabinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/lowestcommonancestorofabinarytree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/lrucache",
    "leetcode/src/main/java/ga/rugal/leetcode/lrucache/LRUCache.java",
    "leetcode/src/main/java/ga/rugal/leetcode/matrix01",
    "leetcode/src/main/java/ga/rugal/leetcode/matrix01/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/matrixcellsindistanceorder",
    "leetcode/src/main/java/ga/rugal/leetcode/matrixcellsindistanceorder/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/maximalsquare",
    "leetcode/src/main/java/ga/rugal/leetcode/maximalsquare/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/maximumsubarray",
    "leetcode/src/main/java/ga/rugal/leetcode/maximumsubarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/maximumsumoftwononoverlappingsubarrays",
    "leetcode/src/main/java/ga/rugal/leetcode/maximumsumoftwononoverlappingsubarrays/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/medianoftwosortedarrays",
    "leetcode/src/main/java/ga/rugal/leetcode/medianoftwosortedarrays/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergeintervals",
    "leetcode/src/main/java/ga/rugal/leetcode/mergeintervals/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergeksortedlists",
    "leetcode/src/main/java/ga/rugal/leetcode/mergeksortedlists/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergesort",
    "leetcode/src/main/java/ga/rugal/leetcode/mergesort/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergesortedarray",
    "leetcode/src/main/java/ga/rugal/leetcode/mergesortedarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergetwobinarytrees",
    "leetcode/src/main/java/ga/rugal/leetcode/mergetwobinarytrees/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mergetwosortedlists",
    "leetcode/src/main/java/ga/rugal/leetcode/mergetwosortedlists/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/middleofthelinkedlist",
    "leetcode/src/main/java/ga/rugal/leetcode/middleofthelinkedlist/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mincostclimbingstairs",
    "leetcode/src/main/java/ga/rugal/leetcode/mincostclimbingstairs/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumcosttomergestones",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumcosttomergestones/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumdepthofbinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumdepthofbinarytree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumheighttrees",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumheighttrees/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumwindowsubstring",
    "leetcode/src/main/java/ga/rugal/leetcode/minimumwindowsubstring/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/minstack",
    "leetcode/src/main/java/ga/rugal/leetcode/minstack/MinStack.java",
    "leetcode/src/main/java/ga/rugal/leetcode/mostcommonword",
    "leetcode/src/main/java/ga/rugal/leetcode/mostcommonword/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/movezeroes",
    "leetcode/src/main/java/ga/rugal/leetcode/movezeroes/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/movingstonesuntilconsecutive",
    "leetcode/src/main/java/ga/rugal/leetcode/movingstonesuntilconsecutive/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/multiplystrings",
    "leetcode/src/main/java/ga/rugal/leetcode/multiplystrings/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/nextpermutation",
    "leetcode/src/main/java/ga/rugal/leetcode/nextpermutation/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/nthdigit",
    "leetcode/src/main/java/ga/rugal/leetcode/nthdigit/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/numbercomplement",
    "leetcode/src/main/java/ga/rugal/leetcode/numbercomplement/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/numberofislands",
    "leetcode/src/main/java/ga/rugal/leetcode/numberofislands/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pacificatlanticwaterflow",
    "leetcode/src/main/java/ga/rugal/leetcode/pacificatlanticwaterflow/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pairsofsongswithtotaldurationsdivisibleby60",
    "leetcode/src/main/java/ga/rugal/leetcode/pairsofsongswithtotaldurationsdivisibleby60/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/palindromepartitioning",
    "leetcode/src/main/java/ga/rugal/leetcode/palindromepartitioning/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/palindromepartitioningii",
    "leetcode/src/main/java/ga/rugal/leetcode/palindromepartitioningii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/partitionlabels",
    "leetcode/src/main/java/ga/rugal/leetcode/partitionlabels/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pascalstriangle",
    "leetcode/src/main/java/ga/rugal/leetcode/pascalstriangle/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pascalstriangleii",
    "leetcode/src/main/java/ga/rugal/leetcode/pascalstriangleii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pathsum",
    "leetcode/src/main/java/ga/rugal/leetcode/pathsum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/pathsumii",
    "leetcode/src/main/java/ga/rugal/leetcode/pathsumii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/perfectsquares",
    "leetcode/src/main/java/ga/rugal/leetcode/perfectsquares/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/performstringshifts",
    "leetcode/src/main/java/ga/rugal/leetcode/performstringshifts/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/permutations",
    "leetcode/src/main/java/ga/rugal/leetcode/permutations/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/permutationsequence",
    "leetcode/src/main/java/ga/rugal/leetcode/permutationsequence/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/permutationsii",
    "leetcode/src/main/java/ga/rugal/leetcode/permutationsii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/productofarrayexceptself",
    "leetcode/src/main/java/ga/rugal/leetcode/productofarrayexceptself/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/quickselect",
    "leetcode/src/main/java/ga/rugal/leetcode/quickselect/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/quicksort",
    "leetcode/src/main/java/ga/rugal/leetcode/quicksort/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/ransomnote",
    "leetcode/src/main/java/ga/rugal/leetcode/ransomnote/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/rectanglearea",
    "leetcode/src/main/java/ga/rugal/leetcode/rectanglearea/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/rectangleoverlap",
    "leetcode/src/main/java/ga/rugal/leetcode/rectangleoverlap/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/redundantconnection",
    "leetcode/src/main/java/ga/rugal/leetcode/redundantconnection/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/redundantconnectionii",
    "leetcode/src/main/java/ga/rugal/leetcode/redundantconnectionii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/regularexpressionmatching",
    "leetcode/src/main/java/ga/rugal/leetcode/regularexpressionmatching/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedarray",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedarrayii",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedarrayii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedlist",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedlist/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedlistii",
    "leetcode/src/main/java/ga/rugal/leetcode/removeduplicatesfromsortedlistii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removeelement",
    "leetcode/src/main/java/ga/rugal/leetcode/removeelement/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removekdigits",
    "leetcode/src/main/java/ga/rugal/leetcode/removekdigits/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/removenthnodefromendoflist",
    "leetcode/src/main/java/ga/rugal/leetcode/removenthnodefromendoflist/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/reorderlogfiles",
    "leetcode/src/main/java/ga/rugal/leetcode/reorderlogfiles/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/reverselinkedlist",
    "leetcode/src/main/java/ga/rugal/leetcode/reverselinkedlist/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/reverselinkedlistii",
    "leetcode/src/main/java/ga/rugal/leetcode/reverselinkedlistii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/reversenodesinkgroup",
    "leetcode/src/main/java/ga/rugal/leetcode/reversenodesinkgroup/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/reverseonlyletters",
    "leetcode/src/main/java/ga/rugal/leetcode/reverseonlyletters/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/romantointeger",
    "leetcode/src/main/java/ga/rugal/leetcode/romantointeger/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/rotatearray",
    "leetcode/src/main/java/ga/rugal/leetcode/rotatearray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/rotateimage",
    "leetcode/src/main/java/ga/rugal/leetcode/rotateimage/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/rotatelist",
    "leetcode/src/main/java/ga/rugal/leetcode/rotatelist/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/searcha2dmatrixii",
    "leetcode/src/main/java/ga/rugal/leetcode/searcha2dmatrixii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinrotatedsortedarray",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinrotatedsortedarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinrotatedsortedarrayii",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinrotatedsortedarrayii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinsertposition",
    "leetcode/src/main/java/ga/rugal/leetcode/searchinsertposition/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/serializeanddeserializebinarytree",
    "leetcode/src/main/java/ga/rugal/leetcode/serializeanddeserializebinarytree/Codec.java",
    "leetcode/src/main/java/ga/rugal/leetcode/setmatrixzeroes",
    "leetcode/src/main/java/ga/rugal/leetcode/setmatrixzeroes/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/simplifypath",
    "leetcode/src/main/java/ga/rugal/leetcode/simplifypath/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/singleelementinasortedarray",
    "leetcode/src/main/java/ga/rugal/leetcode/singleelementinasortedarray/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/singlenumber",
    "leetcode/src/main/java/ga/rugal/leetcode/singlenumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/slidingwindowmaximum",
    "leetcode/src/main/java/ga/rugal/leetcode/slidingwindowmaximum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/sortcharactersbyfrequency",
    "leetcode/src/main/java/ga/rugal/leetcode/sortcharactersbyfrequency/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/sortcolors",
    "leetcode/src/main/java/ga/rugal/leetcode/sortcolors/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/spiralmatrix",
    "leetcode/src/main/java/ga/rugal/leetcode/spiralmatrix/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/spiralmatrixii",
    "leetcode/src/main/java/ga/rugal/leetcode/spiralmatrixii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/sqrtx",
    "leetcode/src/main/java/ga/rugal/leetcode/sqrtx/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/streamofcharacters",
    "leetcode/src/main/java/ga/rugal/leetcode/streamofcharacters/StreamChecker.java",
    "leetcode/src/main/java/ga/rugal/leetcode/stringtointegeratoi",
    "leetcode/src/main/java/ga/rugal/leetcode/stringtointegeratoi/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/subarraysumequalsk",
    "leetcode/src/main/java/ga/rugal/leetcode/subarraysumequalsk/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/subsets",
    "leetcode/src/main/java/ga/rugal/leetcode/subsets/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/subsetsii",
    "leetcode/src/main/java/ga/rugal/leetcode/subsetsii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/superwashingmachines",
    "leetcode/src/main/java/ga/rugal/leetcode/superwashingmachines/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/surroundedregions",
    "leetcode/src/main/java/ga/rugal/leetcode/surroundedregions/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/swapnodesinpairs",
    "leetcode/src/main/java/ga/rugal/leetcode/swapnodesinpairs/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/symmetrictree",
    "leetcode/src/main/java/ga/rugal/leetcode/symmetrictree/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/thirdmaximumnumber",
    "leetcode/src/main/java/ga/rugal/leetcode/thirdmaximumnumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/threesum",
    "leetcode/src/main/java/ga/rugal/leetcode/threesum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/threesumclosest",
    "leetcode/src/main/java/ga/rugal/leetcode/threesumclosest/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/tolowercase",
    "leetcode/src/main/java/ga/rugal/leetcode/tolowercase/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/trappingrainwater",
    "leetcode/src/main/java/ga/rugal/leetcode/trappingrainwater/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/triangle",
    "leetcode/src/main/java/ga/rugal/leetcode/triangle/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/twocityscheduling",
    "leetcode/src/main/java/ga/rugal/leetcode/twocityscheduling/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/twosum",
    "leetcode/src/main/java/ga/rugal/leetcode/twosum/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/twosumiiinputarrayissorted",
    "leetcode/src/main/java/ga/rugal/leetcode/twosumiiinputarrayissorted/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/uglynumber",
    "leetcode/src/main/java/ga/rugal/leetcode/uglynumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquebinarysearchtreesii",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquebinarysearchtreesii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/uniqueemailaddresses",
    "leetcode/src/main/java/ga/rugal/leetcode/uniqueemailaddresses/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquepaths",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquepaths/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquepathsii",
    "leetcode/src/main/java/ga/rugal/leetcode/uniquepathsii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/validnumber",
    "leetcode/src/main/java/ga/rugal/leetcode/validnumber/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/validpalindrome",
    "leetcode/src/main/java/ga/rugal/leetcode/validpalindrome/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/validparentheses",
    "leetcode/src/main/java/ga/rugal/leetcode/validparentheses/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/validparenthesisstring",
    "leetcode/src/main/java/ga/rugal/leetcode/validparenthesisstring/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/validperfectsquare",
    "leetcode/src/main/java/ga/rugal/leetcode/validperfectsquare/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wildcardmatching",
    "leetcode/src/main/java/ga/rugal/leetcode/wildcardmatching/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordbreak",
    "leetcode/src/main/java/ga/rugal/leetcode/wordbreak/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordbreakii",
    "leetcode/src/main/java/ga/rugal/leetcode/wordbreakii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordladder",
    "leetcode/src/main/java/ga/rugal/leetcode/wordladder/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordladderii",
    "leetcode/src/main/java/ga/rugal/leetcode/wordladderii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordsearch",
    "leetcode/src/main/java/ga/rugal/leetcode/wordsearch/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/wordsearchii",
    "leetcode/src/main/java/ga/rugal/leetcode/wordsearchii/Solution.java",
    "leetcode/src/main/java/ga/rugal/leetcode/zigzagconversion",
    "leetcode/src/main/java/ga/rugal/leetcode/zigzagconversion/Solution.java",
    "leetcode/src/main/resources",
    "leetcode/src/main/resources/log4j2.xml",
    "leetcode/src/test",
    "leetcode/src/test/java",
    "leetcode/src/test/java/ga",
    "leetcode/src/test/java/ga/rugal",
    "leetcode/src/test/java/ga/rugal/leetcode",
    "leetcode/src/test/java/ga/rugal/leetcode/asteroidcollision",
    "leetcode/src/test/java/ga/rugal/leetcode/asteroidcollision/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/availablecapturesforrook",
    "leetcode/src/test/java/ga/rugal/leetcode/availablecapturesforrook/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/balancedbinarytree",
    "leetcode/src/test/java/ga/rugal/leetcode/balancedbinarytree/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsum",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsum/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsumii",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsumii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsumiii",
    "leetcode/src/test/java/ga/rugal/leetcode/combinationsumiii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/containerwithmostwater",
    "leetcode/src/test/java/ga/rugal/leetcode/containerwithmostwater/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/countprimes",
    "leetcode/src/test/java/ga/rugal/leetcode/countprimes/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/coursescheduleii",
    "leetcode/src/test/java/ga/rugal/leetcode/coursescheduleii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/dividetwointegers",
    "leetcode/src/test/java/ga/rugal/leetcode/dividetwointegers/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/findfirstandlastpositionofelementinsortedarray",
    "leetcode/src/test/java/ga/rugal/leetcode/findfirstandlastpositionofelementinsortedarray/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/firstmissingpositive",
    "leetcode/src/test/java/ga/rugal/leetcode/firstmissingpositive/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/graycode",
    "leetcode/src/test/java/ga/rugal/leetcode/graycode/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/implementstrstr",
    "leetcode/src/test/java/ga/rugal/leetcode/implementstrstr/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/integertoroman",
    "leetcode/src/test/java/ga/rugal/leetcode/integertoroman/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/kmp",
    "leetcode/src/test/java/ga/rugal/leetcode/kmp/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/kthlargestelementinanarray",
    "leetcode/src/test/java/ga/rugal/leetcode/kthlargestelementinanarray/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/lettercasepermutation",
    "leetcode/src/test/java/ga/rugal/leetcode/lettercasepermutation/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/longestsubstringwithoutrepeatingcharacters",
    "leetcode/src/test/java/ga/rugal/leetcode/longestsubstringwithoutrepeatingcharacters/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/matrix01",
    "leetcode/src/test/java/ga/rugal/leetcode/matrix01/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/matrixcellsindistanceorder",
    "leetcode/src/test/java/ga/rugal/leetcode/matrixcellsindistanceorder/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/maximumsubarray",
    "leetcode/src/test/java/ga/rugal/leetcode/maximumsubarray/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/maximumsumoftwononoverlappingsubarrays",
    "leetcode/src/test/java/ga/rugal/leetcode/maximumsumoftwononoverlappingsubarrays/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/mergeksortedlists",
    "leetcode/src/test/java/ga/rugal/leetcode/mergeksortedlists/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/minstack",
    "leetcode/src/test/java/ga/rugal/leetcode/minstack/MinStackTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/multiplystrings",
    "leetcode/src/test/java/ga/rugal/leetcode/multiplystrings/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/nthdigit",
    "leetcode/src/test/java/ga/rugal/leetcode/nthdigit/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/numberofislands",
    "leetcode/src/test/java/ga/rugal/leetcode/numberofislands/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/pacificatlanticwaterflow",
    "leetcode/src/test/java/ga/rugal/leetcode/pacificatlanticwaterflow/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/perfectsquares",
    "leetcode/src/test/java/ga/rugal/leetcode/perfectsquares/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/permutationsequence",
    "leetcode/src/test/java/ga/rugal/leetcode/permutationsequence/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/quicksort",
    "leetcode/src/test/java/ga/rugal/leetcode/quicksort/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/redundantconnection",
    "leetcode/src/test/java/ga/rugal/leetcode/redundantconnection/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/redundantconnectionii",
    "leetcode/src/test/java/ga/rugal/leetcode/redundantconnectionii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/removeduplicatesfromsortedarrayii",
    "leetcode/src/test/java/ga/rugal/leetcode/removeduplicatesfromsortedarrayii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/rotatearray",
    "leetcode/src/test/java/ga/rugal/leetcode/rotatearray/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/rotateimage",
    "leetcode/src/test/java/ga/rugal/leetcode/rotateimage/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/searcha2dmatrixii",
    "leetcode/src/test/java/ga/rugal/leetcode/searcha2dmatrixii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/searchinrotatedsortedarray",
    "leetcode/src/test/java/ga/rugal/leetcode/searchinrotatedsortedarray/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/searchinsertposition",
    "leetcode/src/test/java/ga/rugal/leetcode/searchinsertposition/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/simplifypath",
    "leetcode/src/test/java/ga/rugal/leetcode/simplifypath/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/slidingwindowmaximum",
    "leetcode/src/test/java/ga/rugal/leetcode/slidingwindowmaximum/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/stringtointegeratoi",
    "leetcode/src/test/java/ga/rugal/leetcode/stringtointegeratoi/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/superwashingmachines",
    "leetcode/src/test/java/ga/rugal/leetcode/superwashingmachines/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/surroundedregions",
    "leetcode/src/test/java/ga/rugal/leetcode/surroundedregions/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/threesumclosest",
    "leetcode/src/test/java/ga/rugal/leetcode/threesumclosest/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/twosum",
    "leetcode/src/test/java/ga/rugal/leetcode/twosum/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/uniquebinarysearchtreesii",
    "leetcode/src/test/java/ga/rugal/leetcode/uniquebinarysearchtreesii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/uniqueemailaddresses",
    "leetcode/src/test/java/ga/rugal/leetcode/uniqueemailaddresses/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/validpalindrome",
    "leetcode/src/test/java/ga/rugal/leetcode/validpalindrome/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/validparentheses",
    "leetcode/src/test/java/ga/rugal/leetcode/validparentheses/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/wildcardmatching",
    "leetcode/src/test/java/ga/rugal/leetcode/wildcardmatching/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/wordladder",
    "leetcode/src/test/java/ga/rugal/leetcode/wordladder/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/wordladderii",
    "leetcode/src/test/java/ga/rugal/leetcode/wordladderii/SolutionTest.java",
    "leetcode/src/test/java/ga/rugal/leetcode/wordsearch",
    "leetcode/src/test/java/ga/rugal/leetcode/wordsearch/SolutionTest.java",
    "lintcode",
    "lintcode/.gitignore",
    "lintcode/README.md",
    "lintcode/pom.xml",
    "lintcode/src",
    "lintcode/src/main",
    "lintcode/src/main/java",
    "lintcode/src/main/java/ga",
    "lintcode/src/main/java/ga/rugal",
    "lintcode/src/main/java/ga/rugal/lintcode",
    "lintcode/src/main/java/ga/rugal/lintcode/Connection.java",
    "lintcode/src/main/java/ga/rugal/lintcode/Interval.java",
    "lintcode/src/main/java/ga/rugal/lintcode/Karatsuba.java",
    "lintcode/src/main/java/ga/rugal/lintcode/ListNode.java",
    "lintcode/src/main/java/ga/rugal/lintcode/Point.java",
    "lintcode/src/main/java/ga/rugal/lintcode/RandomListNode.java",
    "lintcode/src/main/java/ga/rugal/lintcode/Record.java",
    "lintcode/src/main/java/ga/rugal/lintcode/TreeNode.java",
    "lintcode/src/main/java/ga/rugal/lintcode/abproblem",
    "lintcode/src/main/java/ga/rugal/lintcode/abproblem/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/binarytreelevelordertraversal",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/binarytreelevelordertraversal/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/copylistwithrandompointer",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/copylistwithrandompointer/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/countprimes",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/countprimes/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/coursescheduleii",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/coursescheduleii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/cutofftreesforgolfevent",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/cutofftreesforgolfevent/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/foldingarray",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/foldingarray/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/graycode",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/graycode/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/highfive",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/highfive/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/kclosestpoints",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/kclosestpoints/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/knightshortestpath",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/knightshortestpath/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/ksubstringwithkdifferentcharacters",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/ksubstringwithkdifferentcharacters/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/lfucache",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/lfucache/LFUCache.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/logsorting",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/logsorting/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/longestpalindrome",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/longestpalindrome/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/longestpalindromicsubstring",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/longestpalindromicsubstring/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/lrucache",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/lrucache/LRUCache.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/maximumsubtree",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/maximumsubtree/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/mergetwosortedlists",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/mergetwosortedlists/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/minimumspanningtree",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/minimumspanningtree/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/minimumtime",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/minimumtime/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/mst",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/mst/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/numberofdistinctislandsii",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/numberofdistinctislandsii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/numberofislands",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/numberofislands/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/optimalutilization",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/optimalutilization/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/rectangleoverlap",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/rectangleoverlap/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/reverselinkedlist",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/reverselinkedlist/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/reversewordsinastringii",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/reversewordsinastringii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/slidingwindowmaximum",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/slidingwindowmaximum/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/sortintegersii",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/sortintegersii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/subsets",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/subsets/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/subtreewithmaximumaverage",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/subtreewithmaximumaverage/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/thelongestscene",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/thelongestscene/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/themostfrequentword",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/themostfrequentword/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/topkfrequentwords",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/topkfrequentwords/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/twosumclosesttotarget",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/twosumclosesttotarget/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/twosumlessthanorequaltotarget",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/twosumlessthanorequaltotarget/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/windowsum",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/windowsum/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/wordladderii",
    "lintcode/src/main/java/ga/rugal/lintcode/amazon/wordladderii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/boundaryofbinarytree",
    "lintcode/src/main/java/ga/rugal/lintcode/boundaryofbinarytree/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/countlinkedlistnodes",
    "lintcode/src/main/java/ga/rugal/lintcode/countlinkedlistnodes/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/fibonacci",
    "lintcode/src/main/java/ga/rugal/lintcode/fibonacci/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/findthenumbers",
    "lintcode/src/main/java/ga/rugal/lintcode/findthenumbers/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/highestfrequencyip",
    "lintcode/src/main/java/ga/rugal/lintcode/highestfrequencyip/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/meetingrooms",
    "lintcode/src/main/java/ga/rugal/lintcode/meetingrooms/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/meetingroomsii",
    "lintcode/src/main/java/ga/rugal/lintcode/meetingroomsii/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/narcissisticnumber",
    "lintcode/src/main/java/ga/rugal/lintcode/narcissisticnumber/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/numberofairplanesinthesky",
    "lintcode/src/main/java/ga/rugal/lintcode/numberofairplanesinthesky/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/repeatedstringmatch",
    "lintcode/src/main/java/ga/rugal/lintcode/repeatedstringmatch/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/reverse3digitinteger",
    "lintcode/src/main/java/ga/rugal/lintcode/reverse3digitinteger/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/rotatestring",
    "lintcode/src/main/java/ga/rugal/lintcode/rotatestring/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/singlenumber",
    "lintcode/src/main/java/ga/rugal/lintcode/singlenumber/Solution.java",
    "lintcode/src/main/java/ga/rugal/lintcode/swaptwointegersinarray",
    "lintcode/src/main/java/ga/rugal/lintcode/swaptwointegersinarray/Solution.java",
    "lintcode/src/main/resources",
    "lintcode/src/main/resources/log4j2.xml",
    "lintcode/src/test",
    "lintcode/src/test/java",
    "lintcode/src/test/java/ga",
    "lintcode/src/test/java/ga/rugal",
    "lintcode/src/test/java/ga/rugal/lintcode",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/cutofftreesforgolfevent",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/cutofftreesforgolfevent/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/minimumspanningtree",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/minimumspanningtree/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/mst",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/mst/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/optimalutilization",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/optimalutilization/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/reversewordsinastringii",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/reversewordsinastringii/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/subtreewithmaximumaverage",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/subtreewithmaximumaverage/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/themostfrequentword",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/themostfrequentword/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/topkfrequentwords",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/topkfrequentwords/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/windowsum",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/windowsum/SolutionTest.java",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/wordladderii",
    "lintcode/src/test/java/ga/rugal/lintcode/amazon/wordladderii/SolutionTest.java",
    "lombok.config",
    "pom.xml",
    "random",
    "random/.gitignore",
    "random/.projectKnowledge",
    "random/.projectKnowledge/tree.mmd",
    "random/README.md",
    "random/pom.xml",
    "random/src",
    "random/src/main",
    "random/src/main/java",
    "random/src/main/java/ga",
    "random/src/main/java/ga/rugal",
    "random/src/main/java/ga/rugal/amazon",
    "random/src/main/java/ga/rugal/amazon/TreeNode.java",
    "random/src/main/java/ga/rugal/amazon/aliendictionary",
    "random/src/main/java/ga/rugal/amazon/aliendictionary/Solution.java",
    "random/src/main/java/ga/rugal/amazon/asteroidcollision",
    "random/src/main/java/ga/rugal/amazon/asteroidcollision/Solution.java",
    "random/src/main/java/ga/rugal/amazon/basiccalculator",
    "random/src/main/java/ga/rugal/amazon/basiccalculator/Solution.java",
    "random/src/main/java/ga/rugal/amazon/basiccalculatorii",
    "random/src/main/java/ga/rugal/amazon/basiccalculatorii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/besttimetobuyandsellstock",
    "random/src/main/java/ga/rugal/amazon/besttimetobuyandsellstock/Solution.java",
    "random/src/main/java/ga/rugal/amazon/besttimetobuyandsellstockii",
    "random/src/main/java/ga/rugal/amazon/besttimetobuyandsellstockii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/binarytreeinordertraversal",
    "random/src/main/java/ga/rugal/amazon/binarytreeinordertraversal/Solution.java",
    "random/src/main/java/ga/rugal/amazon/binarytreemaximumpathsum",
    "random/src/main/java/ga/rugal/amazon/binarytreemaximumpathsum/Solution.java",
    "random/src/main/java/ga/rugal/amazon/capacitytoshippackageswithinddays",
    "random/src/main/java/ga/rugal/amazon/capacitytoshippackageswithinddays/Solution.java",
    "random/src/main/java/ga/rugal/amazon/cloudfrontcaching",
    "random/src/main/java/ga/rugal/amazon/cloudfrontcaching/Solution.java",
    "random/src/main/java/ga/rugal/amazon/coinchange",
    "random/src/main/java/ga/rugal/amazon/coinchange/Solution.java",
    "random/src/main/java/ga/rugal/amazon/containvirus",
    "random/src/main/java/ga/rugal/amazon/containvirus/Solution.java",
    "random/src/main/java/ga/rugal/amazon/countprimes",
    "random/src/main/java/ga/rugal/amazon/countprimes/Solution.java",
    "random/src/main/java/ga/rugal/amazon/countunivaluesubtrees",
    "random/src/main/java/ga/rugal/amazon/countunivaluesubtrees/Solution.java",
    "random/src/main/java/ga/rugal/amazon/courseschedule",
    "random/src/main/java/ga/rugal/amazon/courseschedule/Solution.java",
    "random/src/main/java/ga/rugal/amazon/coursescheduleii",
    "random/src/main/java/ga/rugal/amazon/coursescheduleii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/demo1",
    "random/src/main/java/ga/rugal/amazon/demo1/Solution.java",
    "random/src/main/java/ga/rugal/amazon/designsearchautocompletesystem",
    "random/src/main/java/ga/rugal/amazon/designsearchautocompletesystem/AutocompleteSystem.java",
    "random/src/main/java/ga/rugal/amazon/designtictactoe",
    "random/src/main/java/ga/rugal/amazon/designtictactoe/TicTacToe.java",
    "random/src/main/java/ga/rugal/amazon/diameterofbinarytree",
    "random/src/main/java/ga/rugal/amazon/diameterofbinarytree/Solution.java",
    "random/src/main/java/ga/rugal/amazon/encodeanddecodetinyurl",
    "random/src/main/java/ga/rugal/amazon/encodeanddecodetinyurl/Codec.java",
    "random/src/main/java/ga/rugal/amazon/exclusivetimeoffunctions",
    "random/src/main/java/ga/rugal/amazon/exclusivetimeoffunctions/Solution.java",
    "random/src/main/java/ga/rugal/amazon/find",
    "random/src/main/java/ga/rugal/amazon/find/Main.java",
    "random/src/main/java/ga/rugal/amazon/findallanagramsinastring",
    "random/src/main/java/ga/rugal/amazon/findallanagramsinastring/Solution.java",
    "random/src/main/java/ga/rugal/amazon/findcommand",
    "random/src/main/java/ga/rugal/amazon/findcommand/ExtensionFilter.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/File.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/FileSearcher.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/Filter.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/MaximumFilter.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/MinimumFilter.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/NameFilter.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/NotDirectoryException.java",
    "random/src/main/java/ga/rugal/amazon/findcommand/Predicate.java",
    "random/src/main/java/ga/rugal/amazon/findkclosestelements",
    "random/src/main/java/ga/rugal/amazon/findkclosestelements/Solution.java",
    "random/src/main/java/ga/rugal/amazon/findmedianfromdatastream",
    "random/src/main/java/ga/rugal/amazon/findmedianfromdatastream/MedianFinder.java",
    "random/src/main/java/ga/rugal/amazon/foursumii",
    "random/src/main/java/ga/rugal/amazon/foursumii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/groupanagrams",
    "random/src/main/java/ga/rugal/amazon/groupanagrams/Solution.java",
    "random/src/main/java/ga/rugal/amazon/guesstheword",
    "random/src/main/java/ga/rugal/amazon/guesstheword/Master.java",
    "random/src/main/java/ga/rugal/amazon/guesstheword/Solution.java",
    "random/src/main/java/ga/rugal/amazon/insertdeletegetrandomo1",
    "random/src/main/java/ga/rugal/amazon/insertdeletegetrandomo1/RandomizedSet.java",
    "random/src/main/java/ga/rugal/amazon/integertoenglishwords",
    "random/src/main/java/ga/rugal/amazon/integertoenglishwords/Solution.java",
    "random/src/main/java/ga/rugal/amazon/intersectionoftwoarrays",
    "random/src/main/java/ga/rugal/amazon/intersectionoftwoarrays/Solution.java",
    "random/src/main/java/ga/rugal/amazon/intersectionoftwoarraysii",
    "random/src/main/java/ga/rugal/amazon/intersectionoftwoarraysii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/islandperimeter",
    "random/src/main/java/ga/rugal/amazon/islandperimeter/Solution.java",
    "random/src/main/java/ga/rugal/amazon/itemincontainers",
    "random/src/main/java/ga/rugal/amazon/itemincontainers/Solution.java",
    "random/src/main/java/ga/rugal/amazon/jumpgame",
    "random/src/main/java/ga/rugal/amazon/jumpgame/Solution.java",
    "random/src/main/java/ga/rugal/amazon/jumpgameii",
    "random/src/main/java/ga/rugal/amazon/jumpgameii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/jumpgameiii",
    "random/src/main/java/ga/rugal/amazon/jumpgameiii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/kclosestpointstoorigin",
    "random/src/main/java/ga/rugal/amazon/kclosestpointstoorigin/Solution.java",
    "random/src/main/java/ga/rugal/amazon/lfucache",
    "random/src/main/java/ga/rugal/amazon/lfucache/LFUCache.java",
    "random/src/main/java/ga/rugal/amazon/longestvalidparentheses",
    "random/src/main/java/ga/rugal/amazon/longestvalidparentheses/Solution.java",
    "random/src/main/java/ga/rugal/amazon/lowestcommonancestorofabinarysearchtree",
    "random/src/main/java/ga/rugal/amazon/lowestcommonancestorofabinarysearchtree/Solution.java",
    "random/src/main/java/ga/rugal/amazon/lowestcommonancestorofabinarytree",
    "random/src/main/java/ga/rugal/amazon/lowestcommonancestorofabinarytree/Solution.java",
    "random/src/main/java/ga/rugal/amazon/lrucache",
    "random/src/main/java/ga/rugal/amazon/lrucache/LRUCache.java",
    "random/src/main/java/ga/rugal/amazon/maxconsecutiveonesiii",
    "random/src/main/java/ga/rugal/amazon/maxconsecutiveonesiii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/maximumareaofapieceofcakeafterhorizontalandverticalcuts",
    "random/src/main/java/ga/rugal/amazon/maximumareaofapieceofcakeafterhorizontalandverticalcuts/Solution.java",
    "random/src/main/java/ga/rugal/amazon/meetingrooms",
    "random/src/main/java/ga/rugal/amazon/meetingrooms/Solution.java",
    "random/src/main/java/ga/rugal/amazon/meetingroomsii",
    "random/src/main/java/ga/rugal/amazon/meetingroomsii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/mergetwobinarytrees",
    "random/src/main/java/ga/rugal/amazon/mergetwobinarytrees/Solution.java",
    "random/src/main/java/ga/rugal/amazon/minimumaddtomakeparenthesesvalid",
    "random/src/main/java/ga/rugal/amazon/minimumaddtomakeparenthesesvalid/Solution.java",
    "random/src/main/java/ga/rugal/amazon/minimumcosttoconnectsticks",
    "random/src/main/java/ga/rugal/amazon/minimumcosttoconnectsticks/Solution.java",
    "random/src/main/java/ga/rugal/amazon/minimumdeletionstomakecharacterfrequenciesunique",
    "random/src/main/java/ga/rugal/amazon/minimumdeletionstomakecharacterfrequenciesunique/Solution.java",
    "random/src/main/java/ga/rugal/amazon/minimumdifficultyofajobschedule",
    "random/src/main/java/ga/rugal/amazon/minimumdifficultyofajobschedule/Solution.java",
    "random/src/main/java/ga/rugal/amazon/minimumwindowsubstring",
    "random/src/main/java/ga/rugal/amazon/minimumwindowsubstring/Solution.java",
    "random/src/main/java/ga/rugal/amazon/movingaveragefromdatastream",
    "random/src/main/java/ga/rugal/amazon/movingaveragefromdatastream/MovingAverage.java",
    "random/src/main/java/ga/rugal/amazon/nestedlistweightsum",
    "random/src/main/java/ga/rugal/amazon/nestedlistweightsum/Solution.java",
    "random/src/main/java/ga/rugal/amazon/nestedlistweightsumii",
    "random/src/main/java/ga/rugal/amazon/nestedlistweightsumii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/nextpermutation",
    "random/src/main/java/ga/rugal/amazon/nextpermutation/Solution.java",
    "random/src/main/java/ga/rugal/amazon/oneeditdistance",
    "random/src/main/java/ga/rugal/amazon/oneeditdistance/Solution.java",
    "random/src/main/java/ga/rugal/amazon/optimizatingboxweight",
    "random/src/main/java/ga/rugal/amazon/optimizatingboxweight/Solution.java",
    "random/src/main/java/ga/rugal/amazon/pairsofsongswithtotaldurationsdivisibleby60",
    "random/src/main/java/ga/rugal/amazon/pairsofsongswithtotaldurationsdivisibleby60/Solution.java",
    "random/src/main/java/ga/rugal/amazon/permutations",
    "random/src/main/java/ga/rugal/amazon/permutations/Solution.java",
    "random/src/main/java/ga/rugal/amazon/permutationsii",
    "random/src/main/java/ga/rugal/amazon/permutationsii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/phone1",
    "random/src/main/java/ga/rugal/amazon/phone1/Solution.java",
    "random/src/main/java/ga/rugal/amazon/powxn",
    "random/src/main/java/ga/rugal/amazon/powxn/Solution.java",
    "random/src/main/java/ga/rugal/amazon/primeairtime",
    "random/src/main/java/ga/rugal/amazon/primeairtime/Solution.java",
    "random/src/main/java/ga/rugal/amazon/prisoncellsafterndays",
    "random/src/main/java/ga/rugal/amazon/prisoncellsafterndays/Solution.java",
    "random/src/main/java/ga/rugal/amazon/question1",
    "random/src/main/java/ga/rugal/amazon/question1/Solution.java",
    "random/src/main/java/ga/rugal/amazon/question2",
    "random/src/main/java/ga/rugal/amazon/question2/Solution.java",
    "random/src/main/java/ga/rugal/amazon/redundantconnection",
    "random/src/main/java/ga/rugal/amazon/redundantconnection/Solution.java",
    "random/src/main/java/ga/rugal/amazon/redundantconnectionii",
    "random/src/main/java/ga/rugal/amazon/redundantconnectionii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/restoreipaddresses",
    "random/src/main/java/ga/rugal/amazon/restoreipaddresses/Solution.java",
    "random/src/main/java/ga/rugal/amazon/robotboundedincircle",
    "random/src/main/java/ga/rugal/amazon/robotboundedincircle/Solution.java",
    "random/src/main/java/ga/rugal/amazon/romantointeger",
    "random/src/main/java/ga/rugal/amazon/romantointeger/Solution.java",
    "random/src/main/java/ga/rugal/amazon/searchinrotatedsortedarrayii",
    "random/src/main/java/ga/rugal/amazon/searchinrotatedsortedarrayii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/serializeanddeserializebst",
    "random/src/main/java/ga/rugal/amazon/serializeanddeserializebst/Codec.java",
    "random/src/main/java/ga/rugal/amazon/shoppingoption",
    "random/src/main/java/ga/rugal/amazon/shoppingoption/Solution.java",
    "random/src/main/java/ga/rugal/amazon/shoppingpatterns",
    "random/src/main/java/ga/rugal/amazon/shoppingpatterns/Solution.java",
    "random/src/main/java/ga/rugal/amazon/shortestunsortedcontinuoussubarray",
    "random/src/main/java/ga/rugal/amazon/shortestunsortedcontinuoussubarray/Solution.java",
    "random/src/main/java/ga/rugal/amazon/shortestworddistance",
    "random/src/main/java/ga/rugal/amazon/shortestworddistance/Solution.java",
    "random/src/main/java/ga/rugal/amazon/slidingwindowmaximum",
    "random/src/main/java/ga/rugal/amazon/slidingwindowmaximum/Solution.java",
    "random/src/main/java/ga/rugal/amazon/snakesandladders",
    "random/src/main/java/ga/rugal/amazon/snakesandladders/Solution.java",
    "random/src/main/java/ga/rugal/amazon/sortcolors",
    "random/src/main/java/ga/rugal/amazon/sortcolors/Solution.java",
    "random/src/main/java/ga/rugal/amazon/sqrtx",
    "random/src/main/java/ga/rugal/amazon/sqrtx/Solution.java",
    "random/src/main/java/ga/rugal/amazon/storageoptimization",
    "random/src/main/java/ga/rugal/amazon/storageoptimization/Solution.java",
    "random/src/main/java/ga/rugal/amazon/transactionlog",
    "random/src/main/java/ga/rugal/amazon/transactionlog/Solution.java",
    "random/src/main/java/ga/rugal/amazon/trappingrainwater",
    "random/src/main/java/ga/rugal/amazon/trappingrainwater/Solution.java",
    "random/src/main/java/ga/rugal/amazon/trappingrainwaterii",
    "random/src/main/java/ga/rugal/amazon/trappingrainwaterii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/triangle",
    "random/src/main/java/ga/rugal/amazon/triangle/Solution.java",
    "random/src/main/java/ga/rugal/amazon/twosumivinputisabst",
    "random/src/main/java/ga/rugal/amazon/twosumivinputisabst/Solution.java",
    "random/src/main/java/ga/rugal/amazon/typeahead",
    "random/src/main/java/ga/rugal/amazon/typeahead/Typeahead.java",
    "random/src/main/java/ga/rugal/amazon/utilizationchecks",
    "random/src/main/java/ga/rugal/amazon/utilizationchecks/Solution.java",
    "random/src/main/java/ga/rugal/amazon/wordbreakii",
    "random/src/main/java/ga/rugal/amazon/wordbreakii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/wordladderii",
    "random/src/main/java/ga/rugal/amazon/wordladderii/Solution.java",
    "random/src/main/java/ga/rugal/amazon/wordsearch",
    "random/src/main/java/ga/rugal/amazon/wordsearch/Solution.java",
    "random/src/main/java/ga/rugal/amazon/wordsearchii",
    "random/src/main/java/ga/rugal/amazon/wordsearchii/Solution.java",
    "random/src/main/java/ga/rugal/google",
    "random/src/main/java/ga/rugal/google/Reader4.java",
    "random/src/main/java/ga/rugal/google/readncharactersgivenread4",
    "random/src/main/java/ga/rugal/google/readncharactersgivenread4/Solution.java",
    "random/src/main/java/ga/rugal/google/readncharactersgivenread4iicallmultipletimes",
    "random/src/main/java/ga/rugal/google/readncharactersgivenread4iicallmultipletimes/Solution.java",
    "random/src/main/java/ga/rugal/reuters",
    "random/src/main/java/ga/rugal/reuters/Question1.java",
    "random/src/main/java/ga/rugal/reuters/Question2.java",
    "random/src/main/java/ga/rugal/reuters/Question3.java",
    "random/src/main/java/ga/rugal/reuters/Question4.java",
    "random/src/main/java/ga/rugal/reuters/Question5.java",
    "random/src/main/java/ga/rugal/reuters/Question6.java",
    "random/src/main/java/ga/rugal/reuters/constructionmanagement",
    "random/src/main/java/ga/rugal/reuters/constructionmanagement/Result.java",
    "random/src/main/java/ga/rugal/reuters/longestVowelSubsequence",
    "random/src/main/java/ga/rugal/reuters/longestVowelSubsequence/Result.java",
    "random/src/main/java/ga/rugal/wish",
    "random/src/main/java/ga/rugal/wish/Point.java",
    "random/src/main/java/ga/rugal/wish/designbrowserhistory",
    "random/src/main/java/ga/rugal/wish/designbrowserhistory/BrowserHistory.java",
    "random/src/main/java/ga/rugal/wish/findleavesofbinarytree",
    "random/src/main/java/ga/rugal/wish/findleavesofbinarytree/Solution.java",
    "random/src/main/java/ga/rugal/wish/minimumabsolutedifference",
    "random/src/main/java/ga/rugal/wish/minimumabsolutedifference/Solution.java",
    "random/src/main/java/ga/rugal/wish/numberofdistinctislands",
    "random/src/main/java/ga/rugal/wish/numberofdistinctislands/Solution.java",
    "random/src/main/java/ga/rugal/wish/numberofislands",
    "random/src/main/java/ga/rugal/wish/numberofislands/Solution.java",
    "random/src/main/java/ga/rugal/wish/numberofislandsii",
    "random/src/main/java/ga/rugal/wish/numberofislandsii/Solution.java",
    "random/src/main/java/ga/rugal/wish/twosum",
    "random/src/main/java/ga/rugal/wish/twosum/Solution.java",
    "random/src/main/resources",
    "random/src/main/resources/log4j.properties",
    "random/src/test",
    "random/src/test/java",
    "random/src/test/java/ga",
    "random/src/test/java/ga/rugal",
    "random/src/test/java/ga/rugal/amazon",
    "random/src/test/java/ga/rugal/amazon/basiccalculatorii",
    "random/src/test/java/ga/rugal/amazon/basiccalculatorii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/besttimetobuyandsellstock",
    "random/src/test/java/ga/rugal/amazon/besttimetobuyandsellstock/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/coinchange",
    "random/src/test/java/ga/rugal/amazon/coinchange/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/courseschedule",
    "random/src/test/java/ga/rugal/amazon/courseschedule/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/findallanagramsinastring",
    "random/src/test/java/ga/rugal/amazon/findallanagramsinastring/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/findkclosestelements",
    "random/src/test/java/ga/rugal/amazon/findkclosestelements/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/intersectionoftwoarraysii",
    "random/src/test/java/ga/rugal/amazon/intersectionoftwoarraysii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/islandperimeter",
    "random/src/test/java/ga/rugal/amazon/islandperimeter/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/itemincontainers",
    "random/src/test/java/ga/rugal/amazon/itemincontainers/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/jumpgameii",
    "random/src/test/java/ga/rugal/amazon/jumpgameii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/jumpgameiii",
    "random/src/test/java/ga/rugal/amazon/jumpgameiii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/kclosestpointstoorigin",
    "random/src/test/java/ga/rugal/amazon/kclosestpointstoorigin/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/lrucache",
    "random/src/test/java/ga/rugal/amazon/lrucache/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/maximumareaofapieceofcakeafterhorizontalandverticalcuts",
    "random/src/test/java/ga/rugal/amazon/maximumareaofapieceofcakeafterhorizontalandverticalcuts/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/meetingroomsii",
    "random/src/test/java/ga/rugal/amazon/meetingroomsii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/minimumdeletionstomakecharacterfrequenciesunique",
    "random/src/test/java/ga/rugal/amazon/minimumdeletionstomakecharacterfrequenciesunique/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/minimumdifficultyofajobschedule",
    "random/src/test/java/ga/rugal/amazon/minimumdifficultyofajobschedule/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/nextpermutation",
    "random/src/test/java/ga/rugal/amazon/nextpermutation/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/optimizatingboxweight",
    "random/src/test/java/ga/rugal/amazon/optimizatingboxweight/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/phone1",
    "random/src/test/java/ga/rugal/amazon/phone1/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/primeairtime",
    "random/src/test/java/ga/rugal/amazon/primeairtime/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/robotboundedincircle",
    "random/src/test/java/ga/rugal/amazon/robotboundedincircle/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/romantointeger",
    "random/src/test/java/ga/rugal/amazon/romantointeger/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/searchinrotatedsortedarrayii",
    "random/src/test/java/ga/rugal/amazon/searchinrotatedsortedarrayii/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/shortestunsortedcontinuoussubarray",
    "random/src/test/java/ga/rugal/amazon/shortestunsortedcontinuoussubarray/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/slidingwindowmaximum",
    "random/src/test/java/ga/rugal/amazon/slidingwindowmaximum/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/sortcolors",
    "random/src/test/java/ga/rugal/amazon/sortcolors/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/storageoptimization",
    "random/src/test/java/ga/rugal/amazon/storageoptimization/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/transactionlog",
    "random/src/test/java/ga/rugal/amazon/transactionlog/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/trappingrainwater",
    "random/src/test/java/ga/rugal/amazon/trappingrainwater/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/triangle",
    "random/src/test/java/ga/rugal/amazon/triangle/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/typeahead",
    "random/src/test/java/ga/rugal/amazon/typeahead/TypeaheadTest.java",
    "random/src/test/java/ga/rugal/amazon/utilizationchecks",
    "random/src/test/java/ga/rugal/amazon/utilizationchecks/SolutionTest.java",
    "random/src/test/java/ga/rugal/amazon/wordsearch",
    "random/src/test/java/ga/rugal/amazon/wordsearch/SolutionTest.java",
    "random/src/test/java/ga/rugal/reuters",
    "random/src/test/java/ga/rugal/reuters/Question4Test.java",
    "random/src/test/java/ga/rugal/reuters/Question5Test.java",
    "random/src/test/java/ga/rugal/reuters/Question6Test.java",
    "random/src/test/java/ga/rugal/reuters/constructionmanagement",
    "random/src/test/java/ga/rugal/reuters/constructionmanagement/ResultTest.java",
    "random/src/test/java/ga/rugal/reuters/longestVowelSubsequence",
    "random/src/test/java/ga/rugal/reuters/longestVowelSubsequence/ResultTest.java",
    "random/src/test/java/ga/rugal/wish",
    "random/src/test/java/ga/rugal/wish/designbrowserhistory",
    "random/src/test/java/ga/rugal/wish/designbrowserhistory/BrowserHistoryTest.java",
    "random/src/test/java/ga/rugal/wish/numberofdistinctislands",
    "random/src/test/java/ga/rugal/wish/numberofdistinctislands/SolutionTest.java",
    "tree",
    "tree/.gitignore",
    "tree/.projectKnowledge",
    "tree/.projectKnowledge/tree.mmd",
    "tree/README.md",
    "tree/pom.xml",
    "tree/src",
    "tree/src/main",
    "tree/src/main/java",
    "tree/src/main/java/ga",
    "tree/src/main/java/ga/PackageInfo.java",
    "tree/src/main/java/ga/rugal",
    "tree/src/main/java/ga/rugal/heap",
    "tree/src/main/java/ga/rugal/heap/ArrayBasedHeap.java",
    "tree/src/main/java/ga/rugal/heap/Heap.java",
    "tree/src/main/java/ga/rugal/tree",
    "tree/src/main/java/ga/rugal/tree/AVLTree.java",
    "tree/src/main/java/ga/rugal/tree/RBTree.java",
    "tree/src/main/java/ga/rugal/tree/SpiralMatrix.java",
    "tree/src/main/java/ga/rugal/tree/Tree.java",
    "tree/src/main/java/ga/rugal/tree/TreeNode.java",
    "tree/src/main/java/ga/rugal/trie",
    "tree/src/main/java/ga/rugal/trie/Trie.java",
    "tree/src/main/resources",
    "tree/src/main/resources/log4j.properties",
    "tree/src/test",
    "tree/src/test/java",
    "tree/src/test/java/ga",
    "tree/src/test/java/ga/rugal",
    "tree/src/test/java/ga/rugal/heap",
    "tree/src/test/java/ga/rugal/heap/ArrayBasedHeapTest.java",
    "tree/src/test/java/ga/rugal/tree",
    "tree/src/test/java/ga/rugal/tree/AVLTreeTest.java",
    "tree/src/test/java/ga/rugal/tree/RBTreeTest.java",
    "tree/src/test/java/ga/rugal/tree/SpiralMatrixTest.java"
]
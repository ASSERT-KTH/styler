[
    "README",
    "fluent-reflection",
    "fluent-reflection/.classpath",
    "fluent-reflection/.gitignore",
    "fluent-reflection/.project",
    "fluent-reflection/.settings",
    "fluent-reflection/.settings/org.eclipse.core.resources.prefs",
    "fluent-reflection/.settings/org.eclipse.jdt.core.prefs",
    "fluent-reflection/.settings/org.eclipse.m2e.core.prefs",
    "fluent-reflection/.settings/org.maven.ide.eclipse.prefs",
    "fluent-reflection/pom.xml",
    "fluent-reflection/src",
    "fluent-reflection/src/main",
    "fluent-reflection/src/main/java",
    "fluent-reflection/src/main/java/com",
    "fluent-reflection/src/main/java/com/lexicalscope",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/AbstractFluentAccess.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/AbstractFluentAnnotated.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/BoundFluentFieldImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/BoundFluentMemberImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/BoundFluentMethodImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ClassNotFoundRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConstructorNotFoundRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertAnnotationToClass.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertClassToReflectedType.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertClassToReflectedTypeAssignableMatcher.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertClassToReflectedTypeMatcher.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertClassToSimpleName.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertConstructorToReflectedConstructor.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertFluentTypeToFluentTypeAssignableMatcher.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertObjectToClass.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertReflectedFieldToBoundReflectedField.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertReflectedMethodToBoundReflectedMethod.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertReflectedTypeToClass.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ConvertTypeLiteralToReflectedType.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FieldNotFoundException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentAccess.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentAnnotated.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentAnnotatedImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentClass.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentClassImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentConstructor.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentConstructorImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentField.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentFieldImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentMember.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentMethod.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentMethodImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentObject.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentObjectImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/FluentReflection.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/IllegalAccessRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/IllegalArgumentRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/InstantiationRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/InvocationTargetRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ListBuilder.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherAnd.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherAnyFluentType.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherArgumentCount.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherArgumentTypes.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherAssignableFrom.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherAssignableTo.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherCallableAnnotatedWith.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherConstructorReflectingOn.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherDeclaredBy.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherFieldReflectingOn.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherFinalMember.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasInterface.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNameContaining.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNameEndingWith.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNameMatching.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNameStartingWith.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNoInterfaces.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasNoSuperclasses.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherHasSimpleName.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherIsInterface.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherIsStatic.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherNamed.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherOr.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherPropertyName.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherPublic.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherReflectingOn.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherReturnType.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherStrictSubtypeOf.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MatcherVisibility.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MemberNotFoundException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/MethodNotFoundException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedConstructors.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedConstructorsImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedFields.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedFieldsBinder.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedFieldsImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedMembers.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedMembersImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedMethods.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedMethodsBinder.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedMethodsImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedSuperclassesAndInterfaces.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedSuperclassesAndInterfacesImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedTypeFactory.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectedTypeFactoryImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectionMatcher.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectionMatchers.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/ReflectionRuntimeException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/SecurityException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/StringHelpers.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/TypeHierarchyCalculation.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/TypeToken.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/Visibility.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/bean",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/bean/BeanMap.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/bean/BeanMapBuilder.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/bean/BeanMapBuilderImpl.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/bean/MapBean.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/CallIfUnmatchedException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/CannotProxyThisException.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/FluentProxy.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/Implementing.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/MethodBinding.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/MethodBody.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/ProxyImplementation.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/dynamicproxy/QueryMethod.java",
    "fluent-reflection/src/main/java/com/lexicalscope/fluentreflection/package-info.java",
    "fluent-reflection/src/site",
    "fluent-reflection/src/site/site.xml",
    "fluent-reflection/src/test",
    "fluent-reflection/src/test/java",
    "fluent-reflection/src/test/java/com",
    "fluent-reflection/src/test/java/com/lexicalscope",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/AbstractTestReflectionMatcher.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/JUnitRuleMockery.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestBoundReflectedFieldImpl.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestBoundReflectedMemberImpl.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestBoundReflectedMethodImpl.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestConvertClassToReflectedType.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestConvertClassToReflectedTypeMatcher.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestConvertConstructorToReflectedConstructor.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestConvertObjectToClass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestConvertReflectedType2Class.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherAnd.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherAnyFluentType.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherArgumentCount.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherConstructorReflectingOn.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementDeclaredBy.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementHasNameContaining.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementHasNameEndingWith.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementHasNameMatching.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementHasNameStartingWith.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementHasVoidReturn.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementNamed.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherElementWithArguments.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherOr.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherReflectedTypeReflectingOn.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherReflectedTypeReflectingOnAssignableFrom.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherTypeHasInterfaces.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherTypeHasNoInterfaces.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherTypeHasNoSuperclasses.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestMatcherTypeIsInterface.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/TestReflectedClassImpl.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend/MapEntryMatcher.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend/TestBeanMap.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend/TestBeanMapBuilder.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend/TestMapBean.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/bean/endtoend/TestMapBeanWithNoPrefixes.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/dynamicproxy",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/dynamicproxy/endtoend",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/dynamicproxy/endtoend/TestFluentDynamicProxy.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/dynamicproxy/endtoend/TestLightweightFluentDynamicProxy.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleClass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleInterface.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleSubclass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleSubinterface.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleSubsubclass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleSuperclass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ExampleSuperinterface.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/ListBuilder.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestRawConstructionByReflection.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedClass.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedClassFields.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedClassInstanceMethod.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedClassStaticMethods.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedMethodToString.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectedObject.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionMatchersArgumentTypes.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionMatchersHasReturnType.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnAnnotatedMethods.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnBoundMethods.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnConstructors.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnInherentedMethods.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnInterface.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/endtoend/TestReflectionOnTypeHierarchy.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestCanCallAnnotatedMethodsInTheRightOrder.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestCanFindAllAnnotatedFields.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestCanReadAndSetFields.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestFindAllBeanMethods.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestIdentifyMembersByVisibiity.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestJoorExamples.java",
    "fluent-reflection/src/test/java/com/lexicalscope/fluentreflection/usecases/TestNullHandling.java",
    "pom.xml"
]
[
    ".gitignore",
    "Advent of Code",
    "Advent of Code/2018",
    "Advent of Code/2018/Day 1",
    "Advent of Code/2018/Day 1/Part One",
    "Advent of Code/2018/Day 1/Part One/Main.java",
    "Advent of Code/2018/Day 1/Part One/input.txt",
    "Advent of Code/2018/Day 1/Part Two",
    "Advent of Code/2018/Day 1/Part Two/Main.java",
    "Advent of Code/2018/Day 1/Part Two/input.txt",
    "Advent of Code/2018/Day 1/input2.txt",
    "Advent of Code/2018/Day 2",
    "Advent of Code/2018/Day 2/Part One",
    "Advent of Code/2018/Day 2/Part One/Main.java",
    "Advent of Code/2018/Day 2/Part One/input.txt",
    "Advent of Code/2018/Day 2/Part Two",
    "Advent of Code/2018/Day 2/Part Two/Main.java",
    "Advent of Code/2018/Day 2/Part Two/input.txt",
    "Advent of Code/2018/Day 3",
    "Advent of Code/2018/Day 3/Part One",
    "Advent of Code/2018/Day 3/Part One/Main.java",
    "Advent of Code/2018/Day 3/Part One/input.txt",
    "Advent of Code/2018/Day 3/Part One/input2.txt",
    "Advent of Code/2018/Day 3/Part Two",
    "Advent of Code/2018/Day 3/Part Two/Main.java",
    "Advent of Code/2018/Day 3/Part Two/input.txt",
    "Advent of Code/2018/Day 3/Part Two/input2.txt",
    "Advent of Code/2018/Day 4",
    "Advent of Code/2018/Day 4/Part One and Two",
    "Advent of Code/2018/Day 4/Part One and Two/Main.java",
    "Advent of Code/2018/Day 4/Part One and Two/input.txt",
    "Advent of Code/2018/Day 5",
    "Advent of Code/2018/Day 5/Main.java",
    "Advent of Code/2018/Day 5/input.txt",
    "Advent of Code/2018/Day 5/input2.txt",
    "Advent of Code/2018/Day 7",
    "Advent of Code/2018/Day 7/Part One",
    "Advent of Code/2018/Day 7/Part One/Main.java",
    "Advent of Code/2018/Day 7/Part One/input.txt",
    "CTCI",
    "CTCI/Chapter 1",
    "CTCI/Chapter 1/p1",
    "CTCI/Chapter 1/p1/Main.java",
    "CTCI/Chapter 1/p2",
    "CTCI/Chapter 1/p2/Main.java",
    "CTCI/Chapter 1/p3",
    "CTCI/Chapter 1/p3/Main.java",
    "CTCI/Chapter 1/p4",
    "CTCI/Chapter 1/p4/Main.java",
    "CTCI/Chapter 1/p5",
    "CTCI/Chapter 1/p5/Main.java",
    "CTCI/Chapter 1/p6",
    "CTCI/Chapter 1/p6/Main.java",
    "CTCI/Chapter 1/p7",
    "CTCI/Chapter 1/p7/Main.java",
    "CTCI/Chapter 1/p8",
    "CTCI/Chapter 1/p8/Main.java",
    "CTCI/Chapter 1/p9",
    "CTCI/Chapter 1/p9/Main.java",
    "CTCI/Chapter 2",
    "CTCI/Chapter 2/p1",
    "CTCI/Chapter 2/p1/Main.java",
    "CTCI/Chapter 2/p2",
    "CTCI/Chapter 2/p2/Main.java",
    "CTCI/Chapter 2/p3",
    "CTCI/Chapter 2/p3/Main.java",
    "CTCI/Chapter 2/p4",
    "CTCI/Chapter 2/p4/Main.java",
    "CTCI/Chapter 2/p5",
    "CTCI/Chapter 2/p5/Main.java",
    "CTCI/Chapter 2/p6",
    "CTCI/Chapter 2/p6/Main.java",
    "CTCI/Chapter 2/p7",
    "CTCI/Chapter 2/p7/Main.java",
    "CTCI/Chapter 3",
    "CTCI/Chapter 3/p1",
    "CTCI/Chapter 3/p1/Main.java",
    "CTCI/Chapter 3/p2",
    "CTCI/Chapter 3/p2/Main.java",
    "CTCI/Chapter 3/p3",
    "CTCI/Chapter 3/p3/Main.java",
    "CTCI/Chapter 3/p4",
    "CTCI/Chapter 3/p4/Main.java",
    "CTCI/Chapter 3/p5",
    "CTCI/Chapter 3/p5/Main.java",
    "CTCI/Chapter 3/p6",
    "CTCI/Chapter 3/p6/Main.java",
    "CTCI/Chapter 4",
    "CTCI/Chapter 4/p1",
    "CTCI/Chapter 4/p1/Main.java",
    "CTCI/Chapter 4/p10",
    "CTCI/Chapter 4/p10/Main.java",
    "CTCI/Chapter 4/p11",
    "CTCI/Chapter 4/p11/Main.java",
    "CTCI/Chapter 4/p12",
    "CTCI/Chapter 4/p12/Main.java",
    "CTCI/Chapter 4/p2",
    "CTCI/Chapter 4/p2/Main.java",
    "CTCI/Chapter 4/p3",
    "CTCI/Chapter 4/p3/Main.java",
    "CTCI/Chapter 4/p4",
    "CTCI/Chapter 4/p4/Main.java",
    "CTCI/Chapter 4/p5",
    "CTCI/Chapter 4/p5/Main.java",
    "CTCI/Chapter 4/p6",
    "CTCI/Chapter 4/p6/Main.java",
    "CTCI/Chapter 4/p7",
    "CTCI/Chapter 4/p7/Main.java",
    "CTCI/Chapter 4/p8",
    "CTCI/Chapter 4/p8/Main.java",
    "CTCI/Chapter 4/p9",
    "CTCI/Chapter 4/p9/Main.java",
    "CTCI/Chapter 5",
    "CTCI/Chapter 5/p1",
    "CTCI/Chapter 5/p1/Main.java",
    "CTCI/Chapter 5/p2",
    "CTCI/Chapter 5/p2/Main.java",
    "CTCI/Chapter 5/p3",
    "CTCI/Chapter 5/p3/Main.java",
    "CTCI/Chapter 5/p4",
    "CTCI/Chapter 5/p4/Main.java",
    "CTCI/Chapter 5/p5",
    "CTCI/Chapter 5/p5/Main.java",
    "CTCI/Chapter 5/p6",
    "CTCI/Chapter 5/p6/Main.java",
    "CTCI/Chapter 5/p7",
    "CTCI/Chapter 5/p7/Main.java",
    "CTCI/Chapter 5/p8",
    "CTCI/Chapter 5/p8/Main.java",
    "Codechef",
    "Codechef/ABC-Strings",
    "Codechef/ABC-Strings/Main.java",
    "Codechef/ABC-Strings/test.in",
    "Codechef/Dividing Stamps",
    "Codechef/Dividing Stamps/Main.java",
    "Codechef/Dividing Stamps/test.in",
    "Codechef/Game of Divisors",
    "Codechef/Game of Divisors/Main.java",
    "Codechef/Game of Divisors/test.in",
    "Codeforces",
    "Codeforces/Round 178",
    "Codeforces/Round 178/A",
    "Codeforces/Round 178/A/Main.java",
    "Codeforces/Round 178/A/test.in",
    "Codeforces/Round 178/A/test2.in",
    "Codeforces/Round 178/B",
    "Codeforces/Round 178/B/Main.java",
    "Codeforces/Round 178/B/test.in",
    "Codeforces/Round 180",
    "Codeforces/Round 180/Main.java",
    "Codeforces/Round 180/test.in",
    "Codeforces/Round 236",
    "Codeforces/Round 236/1",
    "Codeforces/Round 236/1/Main.java",
    "Codeforces/Round 236/1/test.in",
    "Codeforces/Round 236/2",
    "Codeforces/Round 236/2/Main.java",
    "Codeforces/Round 236/2/test.in",
    "Codeforces/Round 236/3",
    "Codeforces/Round 236/3/Main.java",
    "Codeforces/Round 236/3/test.in",
    "Codeforces/Round 238",
    "Codeforces/Round 238/1",
    "Codeforces/Round 238/1/Main.java",
    "Codeforces/Round 238/1/test.in",
    "Codeforces/Round 238/2",
    "Codeforces/Round 238/2/Main.java",
    "Codeforces/Round 238/2/test.in",
    "Codeforces/Round 238/3",
    "Codeforces/Round 238/3/Main.java",
    "Codeforces/Round 238/3/test.in",
    "Codeforces/Round 239",
    "Codeforces/Round 239/1",
    "Codeforces/Round 239/1/Main.java",
    "Codeforces/Round 239/1/test.in",
    "Codeforces/Round 239/2",
    "Codeforces/Round 239/2/Main.java",
    "Codeforces/Round 239/2/test.in",
    "Codeforces/Round 239/3",
    "Codeforces/Round 239/3/Main.java",
    "Codeforces/Round 239/3/test.in",
    "Codeforces/Round 239/4",
    "Codeforces/Round 239/4/Main.java",
    "Codeforces/Round 239/4/test.in",
    "Codeforces/Round 244",
    "Codeforces/Round 244/1",
    "Codeforces/Round 244/1/Main.java",
    "Codeforces/Round 244/1/test.in",
    "Codeforces/Round 244/2",
    "Codeforces/Round 244/2/Main.java",
    "Codeforces/Round 244/2/test.in",
    "Codeforces/Round 244/3",
    "Codeforces/Round 244/3/Main.java",
    "Codeforces/Round 244/3/test.in",
    "Codeforces/Round 249",
    "Codeforces/Round 249/1",
    "Codeforces/Round 249/1/Main.java",
    "Codeforces/Round 249/1/test.in",
    "Codeforces/Round 249/2",
    "Codeforces/Round 249/2/Main.java",
    "Codeforces/Round 249/2/test.in",
    "Codeforces/Round 249/3",
    "Codeforces/Round 249/3/Main.java",
    "Codeforces/Round 249/3/TEST1.IN",
    "Codeforces/Round 249/3/TEST2.IN",
    "Codeforces/Round 249/3/test.in",
    "Codeforces/Round 249/3/test.out",
    "Codeforces/Round 250",
    "Codeforces/Round 250/Main.java",
    "Codeforces/Round 250/Main2.java",
    "Codeforces/Round 250/test.in",
    "Codeforces/Round 51",
    "Codeforces/Round 51/Chat room",
    "Codeforces/Round 51/Chat room/main3.cpp",
    "Codeforces/Round 51/Coins",
    "Codeforces/Round 51/Coins/main2.cpp",
    "Codeforces/Round 51/Trees",
    "Codeforces/Round 51/Trees/main.cpp",
    "Codewars",
    "Codewars/7 kyu",
    "Codewars/7 kyu/Adding values of arrays in a shifted way",
    "Codewars/7 kyu/Adding values of arrays in a shifted way/main.ts",
    "Codewars/7 kyu/Calculate mean and concatenate string",
    "Codewars/7 kyu/Calculate mean and concatenate string/main.ts",
    "Codewars/7 kyu/Cartesian neighbors",
    "Codewars/7 kyu/Cartesian neighbors/main.ts",
    "Codewars/7 kyu/Ch4113ng3",
    "Codewars/7 kyu/Ch4113ng3/main.ts",
    "Codewars/7 kyu/Computer problem series #1: Fill the Hard Disk Drive",
    "Codewars/7 kyu/Computer problem series #1: Fill the Hard Disk Drive/main.ts",
    "Codewars/7 kyu/Fix string case",
    "Codewars/7 kyu/Fix string case/main.ts",
    "Codewars/7 kyu/GA-DE-RY-PO-LU-KI cypher",
    "Codewars/7 kyu/GA-DE-RY-PO-LU-KI cypher/main.ts",
    "Codewars/7 kyu/Help Suzuki complete his chores!",
    "Codewars/7 kyu/Help Suzuki complete his chores!/main.ts",
    "Codewars/7 kyu/Help Suzuki count his vegetables....",
    "Codewars/7 kyu/Help Suzuki count his vegetables..../main.ts",
    "Codewars/7 kyu/Hero's root",
    "Codewars/7 kyu/Hero's root/main.ts",
    "Codewars/7 kyu/Learning TypeScript. Advanced Types. Union Types",
    "Codewars/7 kyu/Learning TypeScript. Advanced Types. Union Types/main.ts",
    "Codewars/7 kyu/MOD 256 without the MOD operator",
    "Codewars/7 kyu/MOD 256 without the MOD operator/main.ts",
    "Codewars/7 kyu/Median fun fun",
    "Codewars/7 kyu/Median fun fun/main.ts",
    "Codewars/7 kyu/New \u00a35 notes collectors!",
    "Codewars/7 kyu/New \u00a35 notes collectors!/main.ts",
    "Codewars/7 kyu/Ninja vs Samurai: Strike",
    "Codewars/7 kyu/Ninja vs Samurai: Strike/main.ts",
    "Codewars/7 kyu/Number of Divisions",
    "Codewars/7 kyu/Number of Divisions/main.ts",
    "Codewars/7 kyu/Numbers in strings",
    "Codewars/7 kyu/Numbers in strings/main.ts",
    "Codewars/7 kyu/Numbers with this digit inside",
    "Codewars/7 kyu/Numbers with this digit inside/main.ts",
    "Codewars/7 kyu/Odd-Even String Sort",
    "Codewars/7 kyu/Odd-Even String Sort/main.ts",
    "Codewars/7 kyu/Ping Pong",
    "Codewars/7 kyu/Ping Pong/main.ts",
    "Codewars/7 kyu/Remove Empty Items of Array",
    "Codewars/7 kyu/Remove Empty Items of Array/main.ts",
    "Codewars/7 kyu/STRONGN Strong Number (Special Numbers Series #2)",
    "Codewars/7 kyu/STRONGN Strong Number (Special Numbers Series #2)/main.ts",
    "Codewars/7 kyu/Simple Fun #37: House Numbers Sum",
    "Codewars/7 kyu/Simple Fun #37: House Numbers Sum/main.ts",
    "Codewars/7 kyu/Simple Fun #87: Shuffled Array",
    "Codewars/7 kyu/Simple Fun #87: Shuffled Array/main.ts",
    "Codewars/7 kyu/Sorted? yes? no? how?",
    "Codewars/7 kyu/Sorted? yes? no? how?/main.ts",
    "Codewars/7 kyu/Stacked Balls - 2D",
    "Codewars/7 kyu/Stacked Balls - 2D/main.ts",
    "Codewars/7 kyu/Tetris Series #1 \u2014 Scoring System",
    "Codewars/7 kyu/Tetris Series #1 \u2014 Scoring System/main.ts",
    "Codewars/7 kyu/The Baum-Sweet sequence",
    "Codewars/7 kyu/The Baum-Sweet sequence/main.ts",
    "Codewars/7 kyu/dummy",
    "Codewars/8 kyu",
    "Codewars/8 kyu/Beginner Series #2 Clock",
    "Codewars/8 kyu/Beginner Series #2 Clock/main.ts",
    "Codewars/A Needle in the Haystack",
    "Codewars/A Needle in the Haystack/main.ts",
    "Codewars/Abbreviate a Two Word Name",
    "Codewars/Abbreviate a Two Word Name/main.ts",
    "Codewars/Are they the \"same\"?",
    "Codewars/Are they the \"same\"?/main.ts",
    "Codewars/Arguments to Binary addition",
    "Codewars/Arguments to Binary addition/main.ts",
    "Codewars/BASIC: Making Six Toast.",
    "Codewars/BASIC: Making Six Toast./main.ts",
    "Codewars/Basic Mathematical Operations",
    "Codewars/Basic Mathematical Operations/main.ts",
    "Codewars/Basic Training: Add item to an Array",
    "Codewars/Basic Training: Add item to an Array/main.ts",
    "Codewars/Basic subclasses - Adam and Eve",
    "Codewars/Basic subclasses - Adam and Eve/main.ts",
    "Codewars/Basic variable assignment",
    "Codewars/Basic variable assignment/main.ts",
    "Codewars/Beginner - Reduce but Grow",
    "Codewars/Beginner - Reduce but Grow/main.ts",
    "Codewars/Calculate BMI",
    "Codewars/Calculate BMI/main.ts",
    "Codewars/Calculate average",
    "Codewars/Calculate average/main.ts",
    "Codewars/Century From Year",
    "Codewars/Century From Year/main.ts",
    "Codewars/Convert a String to a Number!",
    "Codewars/Convert a String to a Number!/main.ts",
    "Codewars/Convert a string to an array",
    "Codewars/Convert a string to an array/main.ts",
    "Codewars/Convert boolean values to strings 'Yes' or 'No'",
    "Codewars/Convert boolean values to strings 'Yes' or 'No'/main.ts",
    "Codewars/Count Odd Numbers below n",
    "Codewars/Count Odd Numbers below n/main.ts",
    "Codewars/Count of positives sum of negatives",
    "Codewars/Count of positives sum of negatives/main.ts",
    "Codewars/Count the Monkeys!",
    "Codewars/Count the Monkeys!/main.ts",
    "Codewars/Counting Duplicates",
    "Codewars/Counting Duplicates/main.ts",
    "Codewars/Counting sheep...",
    "Codewars/Counting sheep.../main.ts",
    "Codewars/DNA to RNA Conversion",
    "Codewars/DNA to RNA Conversion/main.ts",
    "Codewars/Do I get a bonus?",
    "Codewars/Do I get a bonus?/main.ts",
    "Codewars/Exclamation marks series #4: Remove all exclamation marks from sentence but ensure a exclamation mark at the end of string",
    "Codewars/Exclamation marks series #4: Remove all exclamation marks from sentence but ensure a exclamation mark at the end of string/main.ts",
    "Codewars/Exclusive \"or\" (xor) Logical Operator",
    "Codewars/Exclusive \"or\" (xor) Logical Operator/main.ts",
    "Codewars/Expression Matter",
    "Codewars/Expression Matter/main.ts",
    "Codewars/Fake Binary",
    "Codewars/Fake Binary/main.ts",
    "Codewars/Find Maximum and Minimum Values of a List",
    "Codewars/Find Maximum and Minimum Values of a List/main.ts",
    "Codewars/Find out whether the shape is a cube",
    "Codewars/Find out whether the shape is a cube/main.ts",
    "Codewars/Find the position!",
    "Codewars/Find the position!/main.ts",
    "Codewars/Find the smallest integer in the array",
    "Codewars/Find the smallest integer in the array/main.ts",
    "Codewars/Get Nth Even Number",
    "Codewars/Get Nth Even Number/main.ts",
    "Codewars/Get the mean of an array",
    "Codewars/Get the mean of an array/main.ts",
    "Codewars/Grasshopper - Check for factor",
    "Codewars/Grasshopper - Check for factor/main.ts",
    "Codewars/Grasshopper - Grade book",
    "Codewars/Grasshopper - Grade book/main.ts",
    "Codewars/Grasshopper - Messi goals function",
    "Codewars/Grasshopper - Messi goals function/main.ts",
    "Codewars/Grasshopper - Summation",
    "Codewars/Grasshopper - Summation/main.ts",
    "Codewars/Grasshopper - Terminal game move function",
    "Codewars/Grasshopper - Terminal game move function/main.ts",
    "Codewars/Hex to Decimal",
    "Codewars/Hex to Decimal/main.ts",
    "Codewars/How good are you really?",
    "Codewars/How good are you really?/main.ts",
    "Codewars/How many stairs will Suzuki climb in 20 years?",
    "Codewars/How many stairs will Suzuki climb in 20 years?/main.ts",
    "Codewars/I love you, a little , a lot, passionately ... not at all",
    "Codewars/I love you, a little , a lot, passionately ... not at all/main.ts",
    "Codewars/If you can't sleep, just count sheep!!",
    "Codewars/If you can't sleep, just count sheep!!/main.ts",
    "Codewars/Integers: Recreation One",
    "Codewars/Integers: Recreation One/Digital cypher",
    "Codewars/Integers: Recreation One/Digital cypher/main.ts",
    "Codewars/Integers: Recreation One/main.ts",
    "Codewars/Is integer safe to use?",
    "Codewars/Is integer safe to use?/main.ts",
    "Codewars/Is n divisible by x and y?",
    "Codewars/Is n divisible by x and y?/main.ts",
    "Codewars/Is the string uppercase?",
    "Codewars/Is the string uppercase?/main.ts",
    "Codewars/Jenny's secret message",
    "Codewars/Jenny's secret message/main.ts",
    "Codewars/Keep Hydrated!",
    "Codewars/Keep Hydrated!/main.ts",
    "Codewars/L1: Bartender, drinks!",
    "Codewars/L1: Bartender, drinks!/main.ts",
    "Codewars/L1: Set Alarm",
    "Codewars/L1: Set Alarm/main.ts",
    "Codewars/Learning TypeScript. Basic Types. Type Assertions",
    "Codewars/Learning TypeScript. Basic Types. Type Assertions/main.ts",
    "Codewars/Learning TypeScript. Basic Types",
    "Codewars/Learning TypeScript. Basic Types/main.ts",
    "Codewars/Opposite number",
    "Codewars/Opposite number/main.ts",
    "Codewars/Palindrome Strings",
    "Codewars/Palindrome Strings/main.ts",
    "Codewars/Parse float",
    "Codewars/Parse float/main.ts",
    "Codewars/Parse nice int from char problem",
    "Codewars/Parse nice int from char problem/main.ts",
    "Codewars/Playing with cubes II",
    "Codewars/Playing with cubes II/main.ts",
    "Codewars/Plural",
    "Codewars/Plural/main.ts",
    "Codewars/Printing Array elements with Comma delimiters",
    "Codewars/Printing Array elements with Comma delimiters/main.ts",
    "Codewars/Rainfall",
    "Codewars/Rainfall/main.ts",
    "Codewars/Regexp Basics - is it a digit?",
    "Codewars/Regexp Basics - is it a digit?/main.ts",
    "Codewars/Remove String Spaces",
    "Codewars/Remove String Spaces/main.ts",
    "Codewars/Return Negative",
    "Codewars/Return Negative/main.ts",
    "Codewars/Reversed Words",
    "Codewars/Reversed Words/main.ts",
    "Codewars/Reversed sequence",
    "Codewars/Reversed sequence/main.ts",
    "Codewars/Safen User Input Part I - htmlspecialchars",
    "Codewars/Safen User Input Part I - htmlspecialchars/main.ts",
    "Codewars/Short Long Short",
    "Codewars/Short Long Short/main.ts",
    "Codewars/Simple Fun #1: Seats in Theater",
    "Codewars/Simple Fun #1: Seats in Theater/main.ts",
    "Codewars/Sort and Star",
    "Codewars/Sort and Star/main.ts",
    "Codewars/Statistics for an Athletic Association",
    "Codewars/Statistics for an Athletic Association/index.ts",
    "Codewars/String Templates - Bug Fixing #5",
    "Codewars/String Templates - Bug Fixing #5/main.ts",
    "Codewars/String repeat",
    "Codewars/String repeat/main.ts",
    "Codewars/Sum Mixed Array",
    "Codewars/Sum Mixed Array/main.ts",
    "Codewars/Sum of positive",
    "Codewars/Sum of positive/main.ts",
    "Codewars/Switch it Up!",
    "Codewars/Switch it Up!/main.ts",
    "Codewars/Take a Ten Minute Walk",
    "Codewars/Take a Ten Minute Walk/main.ts",
    "Codewars/The Feast of Many Beasts",
    "Codewars/The Feast of Many Beasts/main.ts",
    "Codewars/Third Angle of a Triangle",
    "Codewars/Third Angle of a Triangle/main.ts",
    "Codewars/To square(root) or not to square(root)",
    "Codewars/To square(root) or not to square(root)/main.ts",
    "Codewars/Training JS #29: methods of arrayObject---concat() and join()",
    "Codewars/Training JS #29: methods of arrayObject---concat() and join()/main.ts",
    "Codewars/Training JS #7: if..else and ternary operator",
    "Codewars/Training JS #7: if..else and ternary operator/main.ts",
    "Codewars/Will there be enough space?",
    "Codewars/Will there be enough space?/main.ts",
    "Codewars/Will you make it?",
    "Codewars/Will you make it?/main.ts",
    "Codewars/altERnaTIng cAsE <=> ALTerNAtiNG CaSe",
    "Codewars/altERnaTIng cAsE <=> ALTerNAtiNG CaSe/main.ts",
    "Codewars/isReallyNaN",
    "Codewars/isReallyNaN/main.ts",
    "Facebook Hacker Cup",
    "Facebook Hacker Cup/2011",
    "Facebook Hacker Cup/2011/Qualification",
    "Facebook Hacker Cup/2011/Qualification/Main.java",
    "Facebook Hacker Cup/2011/Qualification/Main.java~",
    "Facebook Hacker Cup/2011/Qualification/double_squares.txt",
    "Facebook Hacker Cup/2011/Qualification/test.in",
    "Facebook Hacker Cup/2011/Qualification/test.in~",
    "Facebook Hacker Cup/2011/Qualification/test.out",
    "Facebook Hacker Cup/2012",
    "Facebook Hacker Cup/2012/Qualification",
    "Facebook Hacker Cup/2012/Qualification/Alphabet.java",
    "Facebook Hacker Cup/2012/Qualification/Alphabet.java~",
    "Facebook Hacker Cup/2012/Qualification/Auction.java",
    "Facebook Hacker Cup/2012/Qualification/Auction.java~",
    "Facebook Hacker Cup/2012/Qualification/Billboards.java",
    "Facebook Hacker Cup/2012/Qualification/Billboards.java~",
    "Facebook Hacker Cup/2012/Qualification/alph.in",
    "Facebook Hacker Cup/2012/Qualification/alphabet_soup.out",
    "Facebook Hacker Cup/2012/Qualification/auc.in",
    "Facebook Hacker Cup/2012/Qualification/bill.in",
    "Facebook Hacker Cup/2012/Qualification/bill.in~",
    "Facebook Hacker Cup/2012/Qualification/billboards.out",
    "Facebook Hacker Cup/2012/Qualification/test.in",
    "Facebook Hacker Cup/2012/Qualification/test.in~",
    "Google code jam",
    "Google code jam/2011",
    "Google code jam/2011/A. Bot Trust",
    "Google code jam/2011/A. Bot Trust/main.cpp",
    "Google code jam/2011/A. Bot Trust/test.in",
    "Google code jam/2014",
    "Google code jam/2014/1",
    "Google code jam/2014/1/A-small-attempt0.in",
    "Google code jam/2014/1/Main.java",
    "Google code jam/2014/1/test.in",
    "Google code jam/2014/1/test.out",
    "Google code jam/2014/2",
    "Google code jam/2014/2/B-large.in",
    "Google code jam/2014/2/B-small-attempt0.in",
    "Google code jam/2014/2/Main.java",
    "Google code jam/2014/2/test.in",
    "Google code jam/2014/2/test.out",
    "Google code jam/2014/2/test2.out",
    "Google code jam/2014/3",
    "Google code jam/2014/3/C-small-attempt0.in",
    "Google code jam/2014/3/C-small-attempt1.in",
    "Google code jam/2014/3/C-small-attempt2.in",
    "Google code jam/2014/3/Main.java",
    "Google code jam/2014/3/test.in",
    "Google code jam/2014/3/test.out",
    "Google code jam/2014/3/test2.out",
    "Google code jam/2014/Round 2",
    "Google code jam/2014/Round 2/1",
    "Google code jam/2014/Round 2/1/A-large (1).in",
    "Google code jam/2014/Round 2/1/A-large-practice.in",
    "Google code jam/2014/Round 2/1/A-large.in",
    "Google code jam/2014/Round 2/1/A-small-attempt0.in",
    "Google code jam/2014/Round 2/1/A-small-attempt1.in",
    "Google code jam/2014/Round 2/1/A-small-attempt2.in",
    "Google code jam/2014/Round 2/1/Main.java",
    "Google code jam/2014/Round 2/1/Main2.java",
    "Google code jam/2014/Round 2/1/new.out",
    "Google code jam/2014/Round 2/1/new2.out",
    "Google code jam/2014/Round 2/1/result.out",
    "Google code jam/2014/Round 2/1/test.in",
    "Google code jam/2014/Round 2/1/test.out",
    "Google code jam/2014/Round 2/1/test2.out",
    "Google code jam/2014/Round 2/1/test3.out",
    "Google code jam/2014/Round 2/1/test4.out",
    "Google code jam/2014/Round 2/1/tst.out",
    "Google code jam/2014/Round 2/1/v1.out",
    "Google code jam/2014/Round 2/1/v2.out",
    "Google code jam/2014/Round 2/2",
    "Google code jam/2014/Round 2/2/B-small-attempt0.in",
    "Google code jam/2014/Round 2/2/Main.java",
    "Google code jam/2014/Round 2/2/test.in",
    "Google code jam/2014/Round 2/2/test.out",
    "Google code jam/2014/Round 2/Main.java",
    "Google code jam/2014/Round 2/test.in",
    "Google code jam/2014/tmp",
    "Google code jam/2014/tmp/Main.java",
    "Google code jam/2014/tmp/test.in",
    "HackerRank",
    "HackerRank/Algorithms",
    "HackerRank/Algorithms/Implementation",
    "HackerRank/Algorithms/Implementation/Divisible-Sum-Pairs",
    "HackerRank/Algorithms/Implementation/Divisible-Sum-Pairs/Solution.java",
    "HackerRank/Algorithms/Implementation/Fair-Rations",
    "HackerRank/Algorithms/Implementation/Fair-Rations/Solution.java",
    "HackerRank/Algorithms/Implementation/Flatland-Space-Stations",
    "HackerRank/Algorithms/Implementation/Flatland-Space-Stations/Solution.java",
    "HackerRank/Algorithms/Implementation/Jumping-on-the-Clouds-Revisited",
    "HackerRank/Algorithms/Implementation/Jumping-on-the-Clouds-Revisited/Solution.java",
    "HackerRank/Algorithms/Implementation/Jumping-on-the-Clouds",
    "HackerRank/Algorithms/Implementation/Jumping-on-the-Clouds/Solution.java",
    "HackerRank/Algorithms/Implementation/Kangaroo",
    "HackerRank/Algorithms/Implementation/Kangaroo/Solution.java",
    "HackerRank/Algorithms/Implementation/Larrys-Array",
    "HackerRank/Algorithms/Implementation/Larrys-Array/Solution.java",
    "HackerRank/Algorithms/Implementation/Minimum-Distances",
    "HackerRank/Algorithms/Implementation/Minimum-Distances/Solution.java",
    "HackerRank/Algorithms/Implementation/Non-Divisible-Subset",
    "HackerRank/Algorithms/Implementation/Non-Divisible-Subset/Solution.java",
    "HackerRank/Algorithms/Implementation/Save-the-Prisoner",
    "HackerRank/Algorithms/Implementation/Save-the-Prisoner/Solution.java",
    "HackerRank/Algorithms/InPlace-Quick-Sort",
    "HackerRank/Algorithms/InPlace-Quick-Sort/QuickSortInPlace.java",
    "HackerRank/Algorithms/Sorting",
    "HackerRank/Algorithms/Sorting/Counting-Sort-1",
    "HackerRank/Algorithms/Sorting/Counting-Sort-1/Main.java",
    "HackerRank/Algorithms/Sorting/Counting-Sort-2",
    "HackerRank/Algorithms/Sorting/Counting-Sort-2/Solution.java",
    "HackerRank/Algorithms/Sorting/Counting-Sort-3",
    "HackerRank/Algorithms/Sorting/Counting-Sort-3/Solution.java",
    "HackerRank/Algorithms/Sorting/Counting-Sort-4",
    "HackerRank/Algorithms/Sorting/Counting-Sort-4/Solution.java",
    "HackerRank/Algorithms/Sorting/Insertion-Sort",
    "HackerRank/Algorithms/Sorting/Insertion-Sort/Main.java",
    "HackerRank/Algorithms/Sorting/Insertion-Sort/Main2.java",
    "HackerRank/Algorithms/Sorting/Running-Time-of-Quicksort",
    "HackerRank/Algorithms/Sorting/Running-Time-of-Quicksort/Main.java",
    "HackerRank/Algorithms/Strings",
    "HackerRank/Algorithms/Strings/Sherlock and Anagrams",
    "HackerRank/Algorithms/Strings/Sherlock and Anagrams/Main.java",
    "HackerRank/Algorithms/Warmup",
    "HackerRank/Algorithms/Warmup/Circular-Array-Rotation",
    "HackerRank/Algorithms/Warmup/Circular-Array-Rotation/Solution.java",
    "Leetcode",
    "Leetcode/Top Interview Questions",
    "Leetcode/Top Interview Questions/Easy Collection",
    "Leetcode/Top Interview Questions/Easy Collection/Array",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Contains Duplicate",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Contains Duplicate/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Intersection of Two Arrays II",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Intersection of Two Arrays II/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Move Zeroes",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Move Zeroes/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Plus One",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Plus One/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Remove Duplicates from Sorted Array",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Remove Duplicates from Sorted Array/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Rotate Array",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Rotate Array/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Rotate Image",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Rotate Image/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Single Number",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Single Number/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Two Sum",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Two Sum/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Valid Sudoku",
    "Leetcode/Top Interview Questions/Easy Collection/Array/Valid Sudoku/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Design",
    "Leetcode/Top Interview Questions/Easy Collection/Design/Min Stack",
    "Leetcode/Top Interview Questions/Easy Collection/Design/Min Stack/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Design/Shuffle an Array",
    "Leetcode/Top Interview Questions/Easy Collection/Design/Shuffle an Array/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Best Time to Buy And Sell Stock",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Best Time to Buy And Sell Stock/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Climbing Stairs",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Climbing Stairs/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/House Robber",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/House Robber/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Maximum Subarray",
    "Leetcode/Top Interview Questions/Easy Collection/Dynamic Programming/Maximum Subarray/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Delete Node in a Linked List",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Delete Node in a Linked List/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Linked List Cycle",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Linked List Cycle/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Merge Two Sorted Lists",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Merge Two Sorted Lists/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Palindrome Linked List",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Palindrome Linked List/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Remove Nth Node From End of List",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Remove Nth Node From End of List/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Reverse Linked List",
    "Leetcode/Top Interview Questions/Easy Collection/Linked List/Reverse Linked List/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Math",
    "Leetcode/Top Interview Questions/Easy Collection/Math/Count Primes",
    "Leetcode/Top Interview Questions/Easy Collection/Math/Count Primes/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Math/Fizz Buzz",
    "Leetcode/Top Interview Questions/Easy Collection/Math/Fizz Buzz/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Sorting and Searching",
    "Leetcode/Top Interview Questions/Easy Collection/Sorting and Searching/First Bad Version",
    "Leetcode/Top Interview Questions/Easy Collection/Sorting and Searching/First Bad Version/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Sorting and Searching/Merge Sorted Array",
    "Leetcode/Top Interview Questions/Easy Collection/Sorting and Searching/Merge Sorted Array/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Count and Say",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Count and Say/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/First Unique Character in a String",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/First Unique Character in a String/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Implement strStr()",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Implement strStr()/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Longest Common Prefix",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Longest Common Prefix/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Reverse Integer",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Reverse Integer/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Reverse String",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Reverse String/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/String to Integer (atoi)",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/String to Integer (atoi)/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Valid Anagram",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Valid Anagram/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Valid Palindrome",
    "Leetcode/Top Interview Questions/Easy Collection/Strings/Valid Palindrome/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Trees",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Binary Tree Level Order Traversal",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Binary Tree Level Order Traversal/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Convert Sorted Array to Binary Search Tree",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Convert Sorted Array to Binary Search Tree/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Maximum Depth of Binary Tree",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Maximum Depth of Binary Tree/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Symmetric Tree",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Symmetric Tree/Solution.java",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Validate Binary Search Tree",
    "Leetcode/Top Interview Questions/Easy Collection/Trees/Validate Binary Search Tree/Solution.java",
    "Main.java",
    "Misc",
    "Misc/Game of Life",
    "Misc/Game of Life/Life.java",
    "Misc/Game of Life/input.txt",
    "Misc/Huffman.java",
    "Misc/InOrder BST Print",
    "Misc/InOrder BST Print/Main.java",
    "Misc/Trees",
    "Misc/Trees/.DS_Store",
    "Misc/Trees/AVL",
    "Misc/Trees/AVL/AVLTree.java",
    "Misc/Trees/AVL/AVLTree2.java",
    "Misc/Trees/RedBlackTree",
    "Misc/Trees/RedBlackTree/RedBlackTree.java",
    "Project Euler",
    "Project Euler/EulerProject10",
    "Project Euler/EulerProject10/main.cpp",
    "Project Euler/EulerProject11",
    "Project Euler/EulerProject11/EulerProject11.scala",
    "Project Euler/EulerProject11/main.cpp",
    "Project Euler/EulerProject14",
    "Project Euler/EulerProject14/EulerProject14.scala",
    "Project Euler/EulerProject17",
    "Project Euler/EulerProject17/EulerProject17 (2).scala",
    "Project Euler/EulerProject17/EulerProject17.scala",
    "Project Euler/EulerProject17/EulerProject17v2.scala",
    "Project Euler/EulerProject17/EulerProject17v3.scala",
    "Project Euler/EulerProject17/numbers.txt",
    "Project Euler/EulerProject26",
    "Project Euler/EulerProject26/EulerProject26.scala",
    "Project Euler/EulerProject4",
    "Project Euler/EulerProject4/main.cpp",
    "Project Euler/EulerProject48",
    "Project Euler/EulerProject48/EulerProject48.scala",
    "Project Euler/EulerProject5",
    "Project Euler/EulerProject5/main.cpp",
    "Project Euler/EulerProject6",
    "Project Euler/EulerProject6/main.cpp",
    "Project Euler/EulerProject67",
    "Project Euler/EulerProject67/Main.scala",
    "Project Euler/EulerProject67/data.txt",
    "Project Euler/EulerProject7",
    "Project Euler/EulerProject7/main.cpp",
    "Project Euler/EulerProject8",
    "Project Euler/EulerProject8/main.cpp",
    "Project Euler/EulerProject9",
    "Project Euler/EulerProject9/main.cpp",
    "Project Euler/ProjectEuler12",
    "Project Euler/ProjectEuler12/Main.scala",
    "Project Euler/ProjectEuler13",
    "Project Euler/ProjectEuler13/Main.scala",
    "Project Euler/ProjectEuler13/input.txt",
    "Project Euler/ProjectEuler15",
    "Project Euler/ProjectEuler15/Main.scala",
    "Project Euler/ProjectEuler18",
    "Project Euler/ProjectEuler18/Main.scala",
    "Project Euler/ProjectEuler18/data.txt",
    "Project Euler/ProjectEuler19",
    "Project Euler/ProjectEuler19/Main.scala",
    "Project Euler/ProjectEuler20",
    "Project Euler/ProjectEuler20/Main.scala",
    "Project Euler/ProjectEuler3",
    "Project Euler/ProjectEuler3/main.cpp",
    "Project Euler/ProjectEuler5",
    "Project Euler/ProjectEuler5/main.cpp",
    "Project Euler/input.txt",
    "README.md",
    "Solution.java",
    "Talentbuddy",
    "Talentbuddy/Simple expression",
    "Talentbuddy/Simple expression/MyClass.java",
    "Timus",
    "Timus/1000 A+B Problem",
    "Timus/1000 A+B Problem/a.out",
    "Timus/1000 A+B Problem/main.cpp",
    "Timus/1001 Reverse Root",
    "Timus/1001 Reverse Root/a.out",
    "Timus/1001 Reverse Root/main.cpp",
    "Timus/1001 Reverse Root/test.in",
    "Timus/1068. Sum",
    "Timus/1068. Sum/a.out",
    "Timus/1068. Sum/main.cpp",
    "Timus/1409. Two Gangsters",
    "Timus/1409. Two Gangsters/a.out",
    "Timus/1409. Two Gangsters/main.cpp",
    "Topcoder",
    "Topcoder/TCO 2014",
    "Topcoder/TCO 2014/2",
    "Topcoder/TCO 2014/2/Main.java",
    "Topcoder/TCO 2014/2/test.in",
    "Topcoder/TCO 2014/Main.java",
    "Topcoder/TCO 2014/test.in",
    "UVa",
    "UVa/Competitive Programming 2",
    "UVa/Competitive Programming 2/Chapter 1",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer/Main.java~",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer/test.in",
    "UVa/Competitive Programming 2/Chapter 1/10114 - Loansome Car Buyer/test.in~",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/test.in",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/test.out",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/uva_problem_10205 (1).txt",
    "UVa/Competitive Programming 2/Chapter 1/10205 - Stack em Up/uva_problem_10205.txt",
    "UVa/Competitive Programming 2/Chapter 1/10284 - Chessboard in FEN",
    "UVa/Competitive Programming 2/Chapter 1/10284 - Chessboard in FEN/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/10284 - Chessboard in FEN/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/10284 - Chessboard in FEN/test.in",
    "UVa/Competitive Programming 2/Chapter 1/10420 - List of Conquests",
    "UVa/Competitive Programming 2/Chapter 1/10420 - List of Conquests/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/10420 - List of Conquests/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/10420 - List of Conquests/test.in",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card/compare.txt",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card/test.in",
    "UVa/Competitive Programming 2/Chapter 1/10646 - What is the Card/test.out",
    "UVa/Competitive Programming 2/Chapter 1/11221 - Magic square palindromes",
    "UVa/Competitive Programming 2/Chapter 1/11221 - Magic square palindromes/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/11221 - Magic square palindromes/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/11221 - Magic square palindromes/test.in",
    "UVa/Competitive Programming 2/Chapter 1/11459 - Snakes and Ladders",
    "UVa/Competitive Programming 2/Chapter 1/11459 - Snakes and Ladders/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/11459 - Snakes and Ladders/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/11459 - Snakes and Ladders/test.in",
    "UVa/Competitive Programming 2/Chapter 1/11559 - Event Planning",
    "UVa/Competitive Programming 2/Chapter 1/11559 - Event Planning/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/11559 - Event Planning/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/11559 - Event Planning/test.in",
    "UVa/Competitive Programming 2/Chapter 1/11799 - Horror Dash",
    "UVa/Competitive Programming 2/Chapter 1/11799 - Horror Dash/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/11799 - Horror Dash/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/11799 - Horror Dash/test.in",
    "UVa/Competitive Programming 2/Chapter 1/11947 - Cancer or Scorpio",
    "UVa/Competitive Programming 2/Chapter 1/11947 - Cancer or Scorpio/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/11947 - Cancer or Scorpio/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/11947 - Cancer or Scorpio/test.in",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/compare.txt",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/out.txt",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/test.class",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/test.in",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/test.java",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/uva_out.txt",
    "UVa/Competitive Programming 2/Chapter 1/151 - Power Crisis/uva_problem_151.txt",
    "UVa/Competitive Programming 2/Chapter 1/156 - Ananagrams",
    "UVa/Competitive Programming 2/Chapter 1/156 - Ananagrams/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/156 - Ananagrams/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/156 - Ananagrams/test.in",
    "UVa/Competitive Programming 2/Chapter 1/161 - Traffic Lights",
    "UVa/Competitive Programming 2/Chapter 1/161 - Traffic Lights/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/161 - Traffic Lights/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/161 - Traffic Lights/test.in",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram/test.in",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram/test.out",
    "UVa/Competitive Programming 2/Chapter 1/195 - Anagram/uva_problem_195 (1).txt",
    "UVa/Competitive Programming 2/Chapter 1/278 - Chess",
    "UVa/Competitive Programming 2/Chapter 1/278 - Chess/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/278 - Chess/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/278 - Chess/test.in",
    "UVa/Competitive Programming 2/Chapter 1/305 - Josephus",
    "UVa/Competitive Programming 2/Chapter 1/305 - Josephus/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/305 - Josephus/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/305 - Josephus/test.in",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/BridgeHandEvaluator.java",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/BridgeHandEvaluator_backupo.java",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/BridgeHandEvaluator_try2.java",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/Generator.java",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/462 - Bridge Hand Evaluator/test.in",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/Main.java~",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/test.in",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/test.in~",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/test.out",
    "UVa/Competitive Programming 2/Chapter 1/556 - Amazing/test.out~",
    "UVa/Competitive Programming 2/Chapter 1/579 - ClockHands",
    "UVa/Competitive Programming 2/Chapter 1/579 - ClockHands/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/579 - ClockHands/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/579 - ClockHands/test.in",
    "UVa/Competitive Programming 2/Chapter 1/584 - Bowling",
    "UVa/Competitive Programming 2/Chapter 1/584 - Bowling/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/584 - Bowling/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/584 - Bowling/test.in",
    "UVa/Competitive Programming 2/Chapter 1/696 - How Many Knights",
    "UVa/Competitive Programming 2/Chapter 1/696 - How Many Knights/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/696 - How Many Knights/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/696 - How Many Knights/test.in",
    "UVa/Competitive Programming 2/Chapter 1/893 - Y3K Problem",
    "UVa/Competitive Programming 2/Chapter 1/893 - Y3K Problem/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/893 - Y3K Problem/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/893 - Y3K Problem/test.in",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/Main$1.class",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/Main.class",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/Main.java",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/Main.java~",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/test.in",
    "UVa/Competitive Programming 2/Chapter 1/978 - Lemmings Battle/test.in~",
    "UVa/Competitive Programming 2/Chapter 2",
    "UVa/Competitive Programming 2/Chapter 2/10172 - The Lonesome Cargo Distributor",
    "UVa/Competitive Programming 2/Chapter 2/10172 - The Lonesome Cargo Distributor/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10172 - The Lonesome Cargo Distributor/Main.java~",
    "UVa/Competitive Programming 2/Chapter 2/10172 - The Lonesome Cargo Distributor/test.in",
    "UVa/Competitive Programming 2/Chapter 2/10172 - The Lonesome Cargo Distributor/test.in~",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain/new  2.txt",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain/test.in",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain/test2.in",
    "UVa/Competitive Programming 2/Chapter 2/10507 - Waking up brain/test3.in",
    "UVa/Competitive Programming 2/Chapter 2/10720 - Graph Construction",
    "UVa/Competitive Programming 2/Chapter 2/10720 - Graph Construction/Main.class",
    "UVa/Competitive Programming 2/Chapter 2/10720 - Graph Construction/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10720 - Graph Construction/test.in",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose/Main.class",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose/test.in",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose/test.out",
    "UVa/Competitive Programming 2/Chapter 2/10895 - Matrix Transpose/test2.in",
    "UVa/Competitive Programming 2/Chapter 2/10901 - Ferry Loading III",
    "UVa/Competitive Programming 2/Chapter 2/10901 - Ferry Loading III/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10901 - Ferry Loading III/Main.java~",
    "UVa/Competitive Programming 2/Chapter 2/10901 - Ferry Loading III/Main_v1.java",
    "UVa/Competitive Programming 2/Chapter 2/10901 - Ferry Loading III/test.in",
    "UVa/Competitive Programming 2/Chapter 2/10954 - Add All",
    "UVa/Competitive Programming 2/Chapter 2/10954 - Add All/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/10954 - Add All/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11111 - Generalized Matrioshkas",
    "UVa/Competitive Programming 2/Chapter 2/11111 - Generalized Matrioshkas/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11111 - Generalized Matrioshkas/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/Generator.java",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/Main2.java",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/result.out",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/test.out",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/test2.in",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/test3.in",
    "UVa/Competitive Programming 2/Chapter 2/11235 - Frequent values/test4.in",
    "UVa/Competitive Programming 2/Chapter 2/11286 - Conformity",
    "UVa/Competitive Programming 2/Chapter 2/11286 - Conformity/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11286 - Conformity/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11402 - Ahoy, Pirates!",
    "UVa/Competitive Programming 2/Chapter 2/11402 - Ahoy, Pirates!/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11402 - Ahoy, Pirates!/Main2.java",
    "UVa/Competitive Programming 2/Chapter 2/11402 - Ahoy, Pirates!/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11503 - Virtual Friends",
    "UVa/Competitive Programming 2/Chapter 2/11503 - Virtual Friends/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11503 - Virtual Friends/Main3.java",
    "UVa/Competitive Programming 2/Chapter 2/11503 - Virtual Friends/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding/Main.java~",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding/main.java (Case Conflict 1)",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11588 - Image Coding/test.in~",
    "UVa/Competitive Programming 2/Chapter 2/11629 - Ballot evaluation",
    "UVa/Competitive Programming 2/Chapter 2/11629 - Ballot evaluation/main.java",
    "UVa/Competitive Programming 2/Chapter 2/11629 - Ballot evaluation/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/IntegerArray.txt",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/Main.java~",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/Main2.java",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11858 - Frosh Week/test.out",
    "UVa/Competitive Programming 2/Chapter 2/11926 - Multitasking",
    "UVa/Competitive Programming 2/Chapter 2/11926 - Multitasking/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11926 - Multitasking/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard.java",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard.java~",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard2.java",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard2.java~",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard3.java",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Keyboard4.java",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/array.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/builder.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/char.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/charAr.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/lin.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/string.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/string2.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/t.in",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/test.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/test2.out",
    "UVa/Competitive Programming 2/Chapter 2/11988 - Broken Keyboard/test3.out",
    "UVa/Competitive Programming 2/Chapter 2/11991 - Easy Problem From Rujia Liu",
    "UVa/Competitive Programming 2/Chapter 2/11991 - Easy Problem From Rujia Liu/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11991 - Easy Problem From Rujia Liu/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/Main2.java",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/Main3.java",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/Test.java",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/in.out",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test.in",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test.out",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test2.out",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test3.out",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test4.out",
    "UVa/Competitive Programming 2/Chapter 2/11995 - I Can Guess that Data Structure/test5.out",
    "UVa/Competitive Programming 2/Chapter 2/1203 - Argus",
    "UVa/Competitive Programming 2/Chapter 2/1203 - Argus/Main.class",
    "UVa/Competitive Programming 2/Chapter 2/1203 - Argus/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/1203 - Argus/test.in",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/Main (viaduk's conflicted copy 2012-07-20).java",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/Main.class",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/test.in",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/test.out",
    "UVa/Competitive Programming 2/Chapter 2/793 - Network Connections/test2.in",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/Main.class",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/Main.java",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/Main.java~",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/test.in",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/test.in~",
    "UVa/Competitive Programming 2/Chapter 2/855 - Lunch in Grid City/test2.in",
    "UVa/Competitive Programming 2/Exercise",
    "UVa/Competitive Programming 2/Exercise/1.2.3",
    "UVa/Competitive Programming 2/Exercise/1.2.3/1",
    "UVa/Competitive Programming 2/Exercise/1.2.3/1/Main.class",
    "UVa/Competitive Programming 2/Exercise/1.2.3/1/Main.java",
    "UVa/Competitive Programming 2/Exercise/1.2.3/2",
    "UVa/Competitive Programming 2/Exercise/1.2.3/2/Main.class",
    "UVa/Competitive Programming 2/Exercise/1.2.3/2/Main.java",
    "UVa/Competitive Programming 2/Exercise/3n + 1 in Java",
    "UVa/Competitive Programming 2/Exercise/3n + 1 in Java/Main.java",
    "UVa/Competitive Programming 2/Exercise/Test.class",
    "UVa/Competitive Programming 2/Exercise/Test.java",
    "UVa/Competitive Programming 3",
    "UVa/Competitive Programming 3/Chapter 1",
    "UVa/Competitive Programming 3/Chapter 1/10443 - Rock, Scissors, Paper",
    "UVa/Competitive Programming 3/Chapter 1/10443 - Rock, Scissors, Paper/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/10443 - Rock, Scissors, Paper/test.in",
    "UVa/Competitive Programming 3/Chapter 1/10945 - Mother Bear",
    "UVa/Competitive Programming 3/Chapter 1/10945 - Mother Bear/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/10945 - Mother Bear/test.in",
    "UVa/Competitive Programming 3/Chapter 1/11507 - Bender B. Rodriguez Problem",
    "UVa/Competitive Programming 3/Chapter 1/11507 - Bender B. Rodriguez Problem/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/11507 - Bender B. Rodriguez Problem/test.in",
    "UVa/Competitive Programming 3/Chapter 1/11849 - CD",
    "UVa/Competitive Programming 3/Chapter 1/11849 - CD/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/11849 - CD/test.in",
    "UVa/Competitive Programming 3/Chapter 1/12060 - All Integer Average",
    "UVa/Competitive Programming 3/Chapter 1/12060 - All Integer Average/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/12060 - All Integer Average/test.in",
    "UVa/Competitive Programming 3/Chapter 1/12085 - Mobile Casanova",
    "UVa/Competitive Programming 3/Chapter 1/12085 - Mobile Casanova/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/12085 - Mobile Casanova/test.in",
    "UVa/Competitive Programming 3/Chapter 1/12247 - Jollo",
    "UVa/Competitive Programming 3/Chapter 1/12247 - Jollo/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/12247 - Jollo/test.in",
    "UVa/Competitive Programming 3/Chapter 1/161 - Traffic Lights",
    "UVa/Competitive Programming 3/Chapter 1/161 - Traffic Lights/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/161 - Traffic Lights/test.in",
    "UVa/Competitive Programming 3/Chapter 1/195 - Anagram",
    "UVa/Competitive Programming 3/Chapter 1/195 - Anagram/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/195 - Anagram/test.in",
    "UVa/Competitive Programming 3/Chapter 1/401 - Palindromes",
    "UVa/Competitive Programming 3/Chapter 1/401 - Palindromes/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/401 - Palindromes/test.in",
    "UVa/Competitive Programming 3/Chapter 1/403 - Postscript",
    "UVa/Competitive Programming 3/Chapter 1/403 - Postscript/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/403 - Postscript/test.in",
    "UVa/Competitive Programming 3/Chapter 1/403 - Postscript/test.out",
    "UVa/Competitive Programming 3/Chapter 1/454 - Anagrams",
    "UVa/Competitive Programming 3/Chapter 1/454 - Anagrams/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/454 - Anagrams/test.in",
    "UVa/Competitive Programming 3/Chapter 1/462 - Bridge Hand Evaluator",
    "UVa/Competitive Programming 3/Chapter 1/462 - Bridge Hand Evaluator/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/462 - Bridge Hand Evaluator/test.in",
    "UVa/Competitive Programming 3/Chapter 1/489 - Hangman Judge",
    "UVa/Competitive Programming 3/Chapter 1/489 - Hangman Judge/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/489 - Hangman Judge/test.in",
    "UVa/Competitive Programming 3/Chapter 1/584 - Bowling",
    "UVa/Competitive Programming 3/Chapter 1/584 - Bowling/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/584 - Bowling/test.in",
    "UVa/Competitive Programming 3/Chapter 1/608 - Counterfeit Dollar",
    "UVa/Competitive Programming 3/Chapter 1/608 - Counterfeit Dollar/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/637 - Booklet Printing",
    "UVa/Competitive Programming 3/Chapter 1/637 - Booklet Printing/Main.java",
    "UVa/Competitive Programming 3/Chapter 1/637 - Booklet Printing/test.in",
    "UVa/Competitive Programming 3/Chapter 2",
    "UVa/Competitive Programming 3/Chapter 2/10107 - What is the Median",
    "UVa/Competitive Programming 3/Chapter 2/10107 - What is the Median/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10172 - The Lonesome Cargo Distributor",
    "UVa/Competitive Programming 3/Chapter 2/10172 - The Lonesome Cargo Distributor/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10172 - The Lonesome Cargo Distributor/test.in",
    "UVa/Competitive Programming 3/Chapter 2/10264 - The Most Potent Corner",
    "UVa/Competitive Programming 3/Chapter 2/10264 - The Most Potent Corner/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10264 - The Most Potent Corner/test.in",
    "UVa/Competitive Programming 3/Chapter 2/1062 - Containers",
    "UVa/Competitive Programming 3/Chapter 2/1062 - Containers/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/1062 - Containers/test.in",
    "UVa/Competitive Programming 3/Chapter 2/10855 - Rotated squares",
    "UVa/Competitive Programming 3/Chapter 2/10855 - Rotated squares/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10855 - Rotated squares/test.in",
    "UVa/Competitive Programming 3/Chapter 2/10901 - Ferry Loading III",
    "UVa/Competitive Programming 3/Chapter 2/10901 - Ferry Loading III/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10901 - Ferry Loading III/test.in",
    "UVa/Competitive Programming 3/Chapter 2/10920 - Spiral Tap",
    "UVa/Competitive Programming 3/Chapter 2/10920 - Spiral Tap/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/10920 - Spiral Tap/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11034 - Ferry Loading IV",
    "UVa/Competitive Programming 3/Chapter 2/11034 - Ferry Loading IV/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11034 - Ferry Loading IV/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11136 - Hoax or what",
    "UVa/Competitive Programming 3/Chapter 2/11136 - Hoax or what/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11136 - Hoax or what/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11402 - Ahoy, Pirates!",
    "UVa/Competitive Programming 3/Chapter 2/11402 - Ahoy, Pirates!/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11402 - Ahoy, Pirates!/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11572 - Unique Snowflakes",
    "UVa/Competitive Programming 3/Chapter 2/11572 - Unique Snowflakes/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11572 - Unique Snowflakes/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11926 - Multitasking",
    "UVa/Competitive Programming 3/Chapter 2/11926 - Multitasking/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11926 - Multitasking/test.in",
    "UVa/Competitive Programming 3/Chapter 2/11933 - Splitting Numbers",
    "UVa/Competitive Programming 3/Chapter 2/11933 - Splitting Numbers/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/11933 - Splitting Numbers/test.in",
    "UVa/Competitive Programming 3/Chapter 2/12356 - Army buddies",
    "UVa/Competitive Programming 3/Chapter 2/12356 - Army buddies/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/12356 - Army buddies/test.in",
    "UVa/Competitive Programming 3/Chapter 2/12356 - Army buddies/test.out",
    "UVa/Competitive Programming 3/Chapter 2/12532 - Interval Product",
    "UVa/Competitive Programming 3/Chapter 2/12532 - Interval Product/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/12532 - Interval Product/test.in",
    "UVa/Competitive Programming 3/Chapter 2/599 - The Forrest for the Trees",
    "UVa/Competitive Programming 3/Chapter 2/599 - The Forrest for the Trees/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/599 - The Forrest for the Trees/test.in",
    "UVa/Competitive Programming 3/Chapter 2/732 - Anagrams by Stack",
    "UVa/Competitive Programming 3/Chapter 2/732 - Anagrams by Stack/Main.java",
    "UVa/Competitive Programming 3/Chapter 2/732 - Anagrams by Stack/test.in",
    "UVa/Competitive Programming 3/Chapter 3",
    "UVa/Competitive Programming 3/Chapter 3/10102 - The Path in the Colored Field",
    "UVa/Competitive Programming 3/Chapter 3/10102 - The Path in the Colored Field/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10102 - The Path in the Colored Field/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10306 - e-Coins",
    "UVa/Competitive Programming 3/Chapter 3/10306 - e-Coins/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10306 - e-Coins/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 3/10306 - e-Coins/Mainv3.java",
    "UVa/Competitive Programming 3/Chapter 3/10306 - e-Coins/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10341 - Solve It",
    "UVa/Competitive Programming 3/Chapter 3/10341 - Solve It/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10341 - Solve It/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10487 - Closest Sums",
    "UVa/Competitive Programming 3/Chapter 3/10487 - Closest Sums/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10487 - Closest Sums/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10503 - The dominoes solitaire",
    "UVa/Competitive Programming 3/Chapter 3/10503 - The dominoes solitaire/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10503 - The dominoes solitaire/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10567 - Helping Fill Bates",
    "UVa/Competitive Programming 3/Chapter 3/10567 - Helping Fill Bates/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10567 - Helping Fill Bates/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10576 - Y2K Accounting Bug",
    "UVa/Competitive Programming 3/Chapter 3/10576 - Y2K Accounting Bug/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10576 - Y2K Accounting Bug/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10616 - Divisible Group Sums",
    "UVa/Competitive Programming 3/Chapter 3/10616 - Divisible Group Sums/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10616 - Divisible Group Sums/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10656 - Maximum Sum (II)",
    "UVa/Competitive Programming 3/Chapter 3/10656 - Maximum Sum (II)/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10656 - Maximum Sum (II)/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10660 - Citizen attention offices",
    "UVa/Competitive Programming 3/Chapter 3/10660 - Citizen attention offices/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10660 - Citizen attention offices/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10684 - The jackpot",
    "UVa/Competitive Programming 3/Chapter 3/10684 - The jackpot/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10684 - The jackpot/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10718 - Bit Mask",
    "UVa/Competitive Programming 3/Chapter 3/10718 - Bit Mask/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10718 - Bit Mask/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap/Mainv3.java",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10755 - Garbage Heap/test.out",
    "UVa/Competitive Programming 3/Chapter 3/108 - Maximum Sum",
    "UVa/Competitive Programming 3/Chapter 3/108 - Maximum Sum/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/108 - Maximum Sum/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10819 - Trouble of 13-Dots",
    "UVa/Competitive Programming 3/Chapter 3/10819 - Trouble of 13-Dots/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10819 - Trouble of 13-Dots/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10827 - Maximum sum on a torus",
    "UVa/Competitive Programming 3/Chapter 3/10827 - Maximum sum on a torus/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10827 - Maximum sum on a torus/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10943 - How do you add",
    "UVa/Competitive Programming 3/Chapter 3/10943 - How do you add/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10943 - How do you add/test.in",
    "UVa/Competitive Programming 3/Chapter 3/10976 - Fractions Again",
    "UVa/Competitive Programming 3/Chapter 3/10976 - Fractions Again/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/10976 - Fractions Again/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11057 - Exact Sum",
    "UVa/Competitive Programming 3/Chapter 3/11057 - Exact Sum/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11057 - Exact Sum/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11085 - Back to the 8-Queens",
    "UVa/Competitive Programming 3/Chapter 3/11085 - Back to the 8-Queens/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11085 - Back to the 8-Queens/Main2.java",
    "UVa/Competitive Programming 3/Chapter 3/11085 - Back to the 8-Queens/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11100 - The Trip, 2007",
    "UVa/Competitive Programming 3/Chapter 3/11100 - The Trip, 2007/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11100 - The Trip, 2007/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11137 - Ingenuous Cubrency",
    "UVa/Competitive Programming 3/Chapter 3/11137 - Ingenuous Cubrency/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11137 - Ingenuous Cubrency/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11157 - Dynamic Frog",
    "UVa/Competitive Programming 3/Chapter 3/11157 - Dynamic Frog/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11157 - Dynamic Frog/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11236 - Grocery store",
    "UVa/Competitive Programming 3/Chapter 3/11236 - Grocery store/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11242 - Tour de France",
    "UVa/Competitive Programming 3/Chapter 3/11242 - Tour de France/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11242 - Tour de France/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11264 - Coin Collector",
    "UVa/Competitive Programming 3/Chapter 3/11264 - Coin Collector/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11264 - Coin Collector/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11292 - Dragon of Loowater",
    "UVa/Competitive Programming 3/Chapter 3/11292 - Dragon of Loowater/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11292 - Dragon of Loowater/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11389 - The Bus Driver Problem",
    "UVa/Competitive Programming 3/Chapter 3/11389 - The Bus Driver Problem/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11389 - The Bus Driver Problem/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11413 - Fill the Containers",
    "UVa/Competitive Programming 3/Chapter 3/11413 - Fill the Containers/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11413 - Fill the Containers/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11456 - Trainsorting",
    "UVa/Competitive Programming 3/Chapter 3/11456 - Trainsorting/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11456 - Trainsorting/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11517 - Exact Change",
    "UVa/Competitive Programming 3/Chapter 3/11517 - Exact Change/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11517 - Exact Change/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11553 - Grid Game",
    "UVa/Competitive Programming 3/Chapter 3/11553 - Grid Game/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11553 - Grid Game/test.in",
    "UVa/Competitive Programming 3/Chapter 3/11565 - Simple Equations",
    "UVa/Competitive Programming 3/Chapter 3/11565 - Simple Equations/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11790 - Murcia's Skyline",
    "UVa/Competitive Programming 3/Chapter 3/11790 - Murcia's Skyline/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/11790 - Murcia's Skyline/test.in",
    "UVa/Competitive Programming 3/Chapter 3/12032 - The Monkey and the Oiled Bamboo",
    "UVa/Competitive Programming 3/Chapter 3/12032 - The Monkey and the Oiled Bamboo/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/12032 - The Monkey and the Oiled Bamboo/test.in",
    "UVa/Competitive Programming 3/Chapter 3/12192 - Grapevine",
    "UVa/Competitive Programming 3/Chapter 3/12192 - Grapevine/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/12192 - Grapevine/test.in",
    "UVa/Competitive Programming 3/Chapter 3/12210 - A Match Making Problem",
    "UVa/Competitive Programming 3/Chapter 3/12210 - A Match Making Problem/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/12210 - A Match Making Problem/Main2.java",
    "UVa/Competitive Programming 3/Chapter 3/12210 - A Match Making Problem/Main3.java",
    "UVa/Competitive Programming 3/Chapter 3/12210 - A Match Making Problem/test.in",
    "UVa/Competitive Programming 3/Chapter 3/1237 - Expert Enough",
    "UVa/Competitive Programming 3/Chapter 3/1237 - Expert Enough/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/1237 - Expert Enough/Main2.java",
    "UVa/Competitive Programming 3/Chapter 3/1237 - Expert Enough/test.in",
    "UVa/Competitive Programming 3/Chapter 3/12405 - Scarecrow",
    "UVa/Competitive Programming 3/Chapter 3/12405 - Scarecrow/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/12405 - Scarecrow/test.in",
    "UVa/Competitive Programming 3/Chapter 3/12455 - Bars",
    "UVa/Competitive Programming 3/Chapter 3/12455 - Bars/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/12455 - Bars/test.in",
    "UVa/Competitive Programming 3/Chapter 3/1260 - Sales",
    "UVa/Competitive Programming 3/Chapter 3/1260 - Sales/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/1260 - Sales/test.in",
    "UVa/Competitive Programming 3/Chapter 3/147 - Dollars",
    "UVa/Competitive Programming 3/Chapter 3/147 - Dollars/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/147 - Dollars/test.in",
    "UVa/Competitive Programming 3/Chapter 3/166 - Making Change",
    "UVa/Competitive Programming 3/Chapter 3/166 - Making Change/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/166 - Making Change/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 3/166 - Making Change/test.in",
    "UVa/Competitive Programming 3/Chapter 3/183 - Bit Maps",
    "UVa/Competitive Programming 3/Chapter 3/183 - Bit Maps/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/183 - Bit Maps/test.in",
    "UVa/Competitive Programming 3/Chapter 3/193 - Graph Coloring",
    "UVa/Competitive Programming 3/Chapter 3/193 - Graph Coloring/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/193 - Graph Coloring/test.in",
    "UVa/Competitive Programming 3/Chapter 3/216 - Getting in Line",
    "UVa/Competitive Programming 3/Chapter 3/216 - Getting in Line/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/216 - Getting in Line/test.in",
    "UVa/Competitive Programming 3/Chapter 3/357 - Let Me Count The Ways",
    "UVa/Competitive Programming 3/Chapter 3/357 - Let Me Count The Ways/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/357 - Let Me Count The Ways/test.in",
    "UVa/Competitive Programming 3/Chapter 3/416 - LED Test",
    "UVa/Competitive Programming 3/Chapter 3/416 - LED Test/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/416 - LED Test/test.in",
    "UVa/Competitive Programming 3/Chapter 3/441 - Lotto",
    "UVa/Competitive Programming 3/Chapter 3/441 - Lotto/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/441 - Lotto/test.in",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/Main(nlogn).java",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/MainOn2.java",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/Mainv3.java",
    "UVa/Competitive Programming 3/Chapter 3/481 - What Goes Up/test.in",
    "UVa/Competitive Programming 3/Chapter 3/524 - Prime Ring Problem",
    "UVa/Competitive Programming 3/Chapter 3/524 - Prime Ring Problem/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/524 - Prime Ring Problem/test.in",
    "UVa/Competitive Programming 3/Chapter 3/574 - Sum It Up",
    "UVa/Competitive Programming 3/Chapter 3/574 - Sum It Up/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/574 - Sum It Up/test.in",
    "UVa/Competitive Programming 3/Chapter 3/624 - CD",
    "UVa/Competitive Programming 3/Chapter 3/624 - CD/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/624 - CD/test.in",
    "UVa/Competitive Programming 3/Chapter 3/674 - Coin Change",
    "UVa/Competitive Programming 3/Chapter 3/674 - Coin Change/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/674 - Coin Change/test.in",
    "UVa/Competitive Programming 3/Chapter 3/735 - Dart-a-Mania",
    "UVa/Competitive Programming 3/Chapter 3/735 - Dart-a-Mania/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/735 - Dart-a-Mania/test.in",
    "UVa/Competitive Programming 3/Chapter 3/787 - Maximum Sub-sequence Product",
    "UVa/Competitive Programming 3/Chapter 3/787 - Maximum Sub-sequence Product/Main.java",
    "UVa/Competitive Programming 3/Chapter 3/787 - Maximum Sub-sequence Product/test.in",
    "UVa/Competitive Programming 3/Chapter 3/787 - Maximum Sub-sequence Product/test.out",
    "UVa/Competitive Programming 3/Chapter 4",
    "UVa/Competitive Programming 3/Chapter 4/10004 - Bicoloring",
    "UVa/Competitive Programming 3/Chapter 4/10004 - Bicoloring/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10004 - Bicoloring/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10048 - Audiophobia",
    "UVa/Competitive Programming 3/Chapter 4/10048 - Audiophobia/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10048 - Audiophobia/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10171---Meeting-Prof.-Miguel",
    "UVa/Competitive Programming 3/Chapter 4/10171---Meeting-Prof.-Miguel/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10171---Meeting-Prof.-Miguel/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10305 - Ordering Tasks",
    "UVa/Competitive Programming 3/Chapter 4/10305 - Ordering Tasks/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10305 - Ordering Tasks/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10369 - Arctic Network",
    "UVa/Competitive Programming 3/Chapter 4/10369 - Arctic Network/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10369 - Arctic Network/test.in",
    "UVa/Competitive Programming 3/Chapter 4/104 - Arbitrage",
    "UVa/Competitive Programming 3/Chapter 4/104 - Arbitrage/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/104 - Arbitrage/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10449---Traffic",
    "UVa/Competitive Programming 3/Chapter 4/10449---Traffic/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10449---Traffic/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10557---XYZZY",
    "UVa/Competitive Programming 3/Chapter 4/10557---XYZZY/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10557---XYZZY/test.in",
    "UVa/Competitive Programming 3/Chapter 4/1056 - Degrees of Separation",
    "UVa/Competitive Programming 3/Chapter 4/1056 - Degrees of Separation/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/1056 - Degrees of Separation/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10600 - ACM Contest and Blackout",
    "UVa/Competitive Programming 3/Chapter 4/10600 - ACM Contest and Blackout/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10600 - ACM Contest and Blackout/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10653 - Bombs! NO they are Mines",
    "UVa/Competitive Programming 3/Chapter 4/10653 - Bombs! NO they are Mines/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10653 - Bombs! NO they are Mines/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10765 - Doves and bombs",
    "UVa/Competitive Programming 3/Chapter 4/10765 - Doves and bombs/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10765 - Doves and bombs/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10801 - Lift Hopping",
    "UVa/Competitive Programming 3/Chapter 4/10801 - Lift Hopping/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10801 - Lift Hopping/test.in",
    "UVa/Competitive Programming 3/Chapter 4/10986 - Sending email",
    "UVa/Competitive Programming 3/Chapter 4/10986 - Sending email/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/10986 - Sending email/test.in",
    "UVa/Competitive Programming 3/Chapter 4/1103 - Ancient Messages",
    "UVa/Competitive Programming 3/Chapter 4/1103 - Ancient Messages/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/1103 - Ancient Messages/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11060 - Beverages",
    "UVa/Competitive Programming 3/Chapter 4/11060 - Beverages/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11060 - Beverages/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11080 - Place the Guards",
    "UVa/Competitive Programming 3/Chapter 4/11080 - Place the Guards/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11080 - Place the Guards/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11094 - Continents",
    "UVa/Competitive Programming 3/Chapter 4/11094 - Continents/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11094 - Continents/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11101 - Mall Mania",
    "UVa/Competitive Programming 3/Chapter 4/11101 - Mall Mania/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11101 - Mall Mania/test.in",
    "UVa/Competitive Programming 3/Chapter 4/1112 - Mice and Maze",
    "UVa/Competitive Programming 3/Chapter 4/1112 - Mice and Maze/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/1112 - Mice and Maze/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11228 - Transportation system",
    "UVa/Competitive Programming 3/Chapter 4/11228 - Transportation system/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11228 - Transportation system/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11396 - Claw Decomposition",
    "UVa/Competitive Programming 3/Chapter 4/11396 - Claw Decomposition/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11396 - Claw Decomposition/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11463 - Commandos",
    "UVa/Competitive Programming 3/Chapter 4/11463 - Commandos/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11463 - Commandos/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11492 - Babel",
    "UVa/Competitive Programming 3/Chapter 4/11492 - Babel/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11492 - Babel/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11504 - Dominos",
    "UVa/Competitive Programming 3/Chapter 4/11504 - Dominos/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11504 - Dominos/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11631 - Dark roads",
    "UVa/Competitive Programming 3/Chapter 4/11631 - Dark roads/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11631 - Dark roads/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11747 - Heavy Cycle Edges",
    "UVa/Competitive Programming 3/Chapter 4/11747 - Heavy Cycle Edges/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11747 - Heavy Cycle Edges/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11831 - Sticker Collector Robot",
    "UVa/Competitive Programming 3/Chapter 4/11831 - Sticker Collector Robot/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11831 - Sticker Collector Robot/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11838 - Come and Go",
    "UVa/Competitive Programming 3/Chapter 4/11838 - Come and Go/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11838 - Come and Go/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Mainv3.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Mainv4.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Mainv5.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/Mainv6.java",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/main.cpp",
    "UVa/Competitive Programming 3/Chapter 4/11906 - Knight in a War Grid/test.in",
    "UVa/Competitive Programming 3/Chapter 4/11953 - Battleships",
    "UVa/Competitive Programming 3/Chapter 4/11953 - Battleships/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/11953 - Battleships/test.in",
    "UVa/Competitive Programming 3/Chapter 4/12047 - Highest Paid Toll",
    "UVa/Competitive Programming 3/Chapter 4/12047 - Highest Paid Toll/Fibonacci-Heaps.java",
    "UVa/Competitive Programming 3/Chapter 4/12047 - Highest Paid Toll/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/12047 - Highest Paid Toll/test.in",
    "UVa/Competitive Programming 3/Chapter 4/12160 - Unlock the Lock",
    "UVa/Competitive Programming 3/Chapter 4/12160 - Unlock the Lock/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/12160 - Unlock the Lock/test.in",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails/Gen.java",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails/Mainv2.java",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails/test.in",
    "UVa/Competitive Programming 3/Chapter 4/12442 - Forwarding Emails/test2.in",
    "UVa/Competitive Programming 3/Chapter 4/247 - Calling Circles",
    "UVa/Competitive Programming 3/Chapter 4/247 - Calling Circles/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/247 - Calling Circles/test.in",
    "UVa/Competitive Programming 3/Chapter 4/314 - Robot",
    "UVa/Competitive Programming 3/Chapter 4/314 - Robot/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/314 - Robot/test.in",
    "UVa/Competitive Programming 3/Chapter 4/315 - Network",
    "UVa/Competitive Programming 3/Chapter 4/315 - Network/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/315 - Network/test.in",
    "UVa/Competitive Programming 3/Chapter 4/334 -  Identifying Concurrent Events",
    "UVa/Competitive Programming 3/Chapter 4/334 -  Identifying Concurrent Events/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/334 -  Identifying Concurrent Events/test.in",
    "UVa/Competitive Programming 3/Chapter 4/334 -  Identifying Concurrent Events/test.out",
    "UVa/Competitive Programming 3/Chapter 4/352 - The Seasonal War",
    "UVa/Competitive Programming 3/Chapter 4/352 - The Seasonal War/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/352 - The Seasonal War/test.in",
    "UVa/Competitive Programming 3/Chapter 4/429 - Word Transformation",
    "UVa/Competitive Programming 3/Chapter 4/429 - Word Transformation/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/429 - Word Transformation/test.in",
    "UVa/Competitive Programming 3/Chapter 4/558---Wormholes",
    "UVa/Competitive Programming 3/Chapter 4/558---Wormholes/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/558---Wormholes/test.in",
    "UVa/Competitive Programming 3/Chapter 4/796 - Critical Links",
    "UVa/Competitive Programming 3/Chapter 4/796 - Critical Links/Main.class",
    "UVa/Competitive Programming 3/Chapter 4/796 - Critical Links/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/796 - Critical Links/test.in",
    "UVa/Competitive Programming 3/Chapter 4/821---Page-Hopping",
    "UVa/Competitive Programming 3/Chapter 4/821---Page-Hopping/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/821---Page-Hopping/test.in",
    "UVa/Competitive Programming 3/Chapter 4/872 - Ordering",
    "UVa/Competitive Programming 3/Chapter 4/872 - Ordering/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/872 - Ordering/test.in",
    "UVa/Competitive Programming 3/Chapter 4/924 - Spreading The News",
    "UVa/Competitive Programming 3/Chapter 4/924 - Spreading The News/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/924 - Spreading The News/test.in",
    "UVa/Competitive Programming 3/Chapter 4/929 - Number Maze",
    "UVa/Competitive Programming 3/Chapter 4/929 - Number Maze/Main.java",
    "UVa/Competitive Programming 3/Chapter 4/929 - Number Maze/Main2.java",
    "UVa/Competitive Programming 3/Chapter 4/929 - Number Maze/test.in",
    "UVa/Competitive Programming 3/Chapter 5",
    "UVa/Competitive Programming 3/Chapter 5/10042 - Smith Numbers",
    "UVa/Competitive Programming 3/Chapter 5/10042 - Smith Numbers/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/10042 - Smith Numbers/test.in",
    "UVa/Competitive Programming 3/Chapter 5/10773 - Back to Intermediate Math",
    "UVa/Competitive Programming 3/Chapter 5/10773 - Back to Intermediate Math/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/10773 - Back to Intermediate Math/test.in",
    "UVa/Competitive Programming 3/Chapter 5/10931 - Parity",
    "UVa/Competitive Programming 3/Chapter 5/10931 - Parity/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/10931 - Parity/test.in",
    "UVa/Competitive Programming 3/Chapter 5/11723 - Numbering Roads",
    "UVa/Competitive Programming 3/Chapter 5/11723 - Numbering Roads/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/11723 - Numbering Roads/test.in",
    "UVa/Competitive Programming 3/Chapter 5/11875 - Brick Game",
    "UVa/Competitive Programming 3/Chapter 5/11875 - Brick Game/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/11875 - Brick Game/test.in",
    "UVa/Competitive Programming 3/Chapter 5/11875 - Brick Game/test.out",
    "UVa/Competitive Programming 3/Chapter 5/1225 - Digit Counting",
    "UVa/Competitive Programming 3/Chapter 5/1225 - Digit Counting/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/1225 - Digit Counting/test.in",
    "UVa/Competitive Programming 3/Chapter 5/1225 - Digit Counting/test.out",
    "UVa/Competitive Programming 3/Chapter 5/264 - Count on Cantor",
    "UVa/Competitive Programming 3/Chapter 5/264 - Count on Cantor/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/382 - Perfection",
    "UVa/Competitive Programming 3/Chapter 5/382 - Perfection/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/382 - Perfection/test.in",
    "UVa/Competitive Programming 3/Chapter 5/382 - Perfection/test.out",
    "UVa/Competitive Programming 3/Chapter 5/443 - Humble Numbers",
    "UVa/Competitive Programming 3/Chapter 5/443 - Humble Numbers/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/443 - Humble Numbers/test.in",
    "UVa/Competitive Programming 3/Chapter 5/713 - Adding Reversed Numbers",
    "UVa/Competitive Programming 3/Chapter 5/713 - Adding Reversed Numbers/Main.java",
    "UVa/Competitive Programming 3/Chapter 5/713 - Adding Reversed Numbers/test.in",
    "UVa/Competitive Programming 3/Chapter 6",
    "UVa/Competitive Programming 3/Chapter 6/10010 - Wheres Waldorf",
    "UVa/Competitive Programming 3/Chapter 6/10010 - Wheres Waldorf/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10010 - Wheres Waldorf/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10192 - Vacation",
    "UVa/Competitive Programming 3/Chapter 6/10192 - Vacation/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10192 - Vacation/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10252 - Common Permutation",
    "UVa/Competitive Programming 3/Chapter 6/10252 - Common Permutation/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10252 - Common Permutation/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10298 - Power Strings",
    "UVa/Competitive Programming 3/Chapter 6/10298 - Power Strings/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10298 - Power Strings/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10346 - Peters Smokes",
    "UVa/Competitive Programming 3/Chapter 6/10346 - Peters Smokes/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10346 - Peters Smokes/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10635 - Prince and Princess",
    "UVa/Competitive Programming 3/Chapter 6/10635 - Prince and Princess/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10635 - Prince and Princess/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10635 - Prince and Princess/test.out",
    "UVa/Competitive Programming 3/Chapter 6/10800 - Not That Kind of Graph",
    "UVa/Competitive Programming 3/Chapter 6/10800 - Not That Kind of Graph/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/10800 - Not That Kind of Graph/test.in",
    "UVa/Competitive Programming 3/Chapter 6/10800 - Not That Kind of Graph/test.out",
    "UVa/Competitive Programming 3/Chapter 6/108787 - Decode the tape",
    "UVa/Competitive Programming 3/Chapter 6/108787 - Decode the tape/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/11385 - Da Vinci Code",
    "UVa/Competitive Programming 3/Chapter 6/11385 - Da Vinci Code/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/11385 - Da Vinci Code/test.in",
    "UVa/Competitive Programming 3/Chapter 6/11475 - Extend to Palindromes",
    "UVa/Competitive Programming 3/Chapter 6/11475 - Extend to Palindromes/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/11475 - Extend to Palindromes/test.in",
    "UVa/Competitive Programming 3/Chapter 6/11475 - Extend to Palindromes/test.out",
    "UVa/Competitive Programming 3/Chapter 6/11878 - Homework Checker",
    "UVa/Competitive Programming 3/Chapter 6/11878 - Homework Checker/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/11878 - Homework Checker/test.in",
    "UVa/Competitive Programming 3/Chapter 6/325 - Identifying Legal Pascal Real Constants",
    "UVa/Competitive Programming 3/Chapter 6/325 - Identifying Legal Pascal Real Constants/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/325 - Identifying Legal Pascal Real Constants/test.in",
    "UVa/Competitive Programming 3/Chapter 6/488 - Triangle Wave",
    "UVa/Competitive Programming 3/Chapter 6/488 - Triangle Wave/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/526 - String Distance and Transform Process",
    "UVa/Competitive Programming 3/Chapter 6/526 - String Distance and Transform Process/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/526 - String Distance and Transform Process/test.in",
    "UVa/Competitive Programming 3/Chapter 6/526 - String Distance and Transform Process/test.out",
    "UVa/Competitive Programming 3/Chapter 6/644 - Immediate Decodability",
    "UVa/Competitive Programming 3/Chapter 6/644 - Immediate Decodability/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/902 - Password Search",
    "UVa/Competitive Programming 3/Chapter 6/902 - Password Search/Main.java",
    "UVa/Competitive Programming 3/Chapter 6/902 - Password Search/test.in",
    "UVa/Competitive Programming",
    "UVa/Competitive Programming/Chapter 1",
    "UVa/Competitive Programming/Chapter 1/10082 - WERTYU",
    "UVa/Competitive Programming/Chapter 1/10082 - WERTYU/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10082 - WERTYU/test.in",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/a.out",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/first-try.cpp",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/new file",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/test.in",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/test.out",
    "UVa/Competitive Programming/Chapter 1/10141 - Request for Proposal/test2.in",
    "UVa/Competitive Programming/Chapter 1/10281 - Average Speed",
    "UVa/Competitive Programming/Chapter 1/10281 - Average Speed/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10281 - Average Speed/test.in",
    "UVa/Competitive Programming/Chapter 1/10363 - Tic Tac Toe",
    "UVa/Competitive Programming/Chapter 1/10363 - Tic Tac Toe/a.out",
    "UVa/Competitive Programming/Chapter 1/10363 - Tic Tac Toe/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10363 - Tic Tac Toe/test.in",
    "UVa/Competitive Programming/Chapter 1/10420 - List of Conquests",
    "UVa/Competitive Programming/Chapter 1/10420 - List of Conquests/a.out",
    "UVa/Competitive Programming/Chapter 1/10420 - List of Conquests/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10420 - List of Conquests/test.in",
    "UVa/Competitive Programming/Chapter 1/10528 - Major Scales",
    "UVa/Competitive Programming/Chapter 1/10528 - Major Scales/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10528 - Major Scales/test.in",
    "UVa/Competitive Programming/Chapter 1/10683 - The decadary watch",
    "UVa/Competitive Programming/Chapter 1/10683 - The decadary watch/a.out",
    "UVa/Competitive Programming/Chapter 1/10683 - The decadary watch/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10683 - The decadary watch/test.in",
    "UVa/Competitive Programming/Chapter 1/10703 - Free spots",
    "UVa/Competitive Programming/Chapter 1/10703 - Free spots/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10703 - Free spots/test.in",
    "UVa/Competitive Programming/Chapter 1/10812 - Beat the Spread!",
    "UVa/Competitive Programming/Chapter 1/10812 - Beat the Spread!/a.out",
    "UVa/Competitive Programming/Chapter 1/10812 - Beat the Spread!/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10812 - Beat the Spread!/test.in",
    "UVa/Competitive Programming/Chapter 1/10921 - Find the Telephone",
    "UVa/Competitive Programming/Chapter 1/10921 - Find the Telephone/a.out",
    "UVa/Competitive Programming/Chapter 1/10921 - Find the Telephone/main.cpp",
    "UVa/Competitive Programming/Chapter 1/10921 - Find the Telephone/test.in",
    "UVa/Competitive Programming/Chapter 1/11044 - Searching For Nessy",
    "UVa/Competitive Programming/Chapter 1/11044 - Searching For Nessy/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11044 - Searching For Nessy/test.in",
    "UVa/Competitive Programming/Chapter 1/11150 - Cola",
    "UVa/Competitive Programming/Chapter 1/11150 - Cola/a.out",
    "UVa/Competitive Programming/Chapter 1/11150 - Cola/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11150 - Cola/test.in",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah/a.out",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah/test.in",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah/test.out",
    "UVa/Competitive Programming/Chapter 1/11223 - O dah, dah, dah/uva_problem_11223 (3).txt",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper/a.out",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper/new file",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper/test.in",
    "UVa/Competitive Programming/Chapter 1/11340 - Newspaper/test.out",
    "UVa/Competitive Programming/Chapter 1/11498 - Division of Nlogonia",
    "UVa/Competitive Programming/Chapter 1/11498 - Division of Nlogonia/a.out",
    "UVa/Competitive Programming/Chapter 1/11498 - Division of Nlogonia/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11498 - Division of Nlogonia/test.in",
    "UVa/Competitive Programming/Chapter 1/11547 - Automatic Answer",
    "UVa/Competitive Programming/Chapter 1/11547 - Automatic Answer/a.out",
    "UVa/Competitive Programming/Chapter 1/11547 - Automatic Answer/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11547 - Automatic Answer/test.in",
    "UVa/Competitive Programming/Chapter 1/11616 - Roman Numerals",
    "UVa/Competitive Programming/Chapter 1/11616 - Roman Numerals/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11616 - Roman Numerals/test.in",
    "UVa/Competitive Programming/Chapter 1/11616 - Roman Numerals/test.out",
    "UVa/Competitive Programming/Chapter 1/11727 - Cost Cutting",
    "UVa/Competitive Programming/Chapter 1/11727 - Cost Cutting/a.out",
    "UVa/Competitive Programming/Chapter 1/11727 - Cost Cutting/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11727 - Cost Cutting/test.in",
    "UVa/Competitive Programming/Chapter 1/11800 - Determine the Shape",
    "UVa/Competitive Programming/Chapter 1/11800 - Determine the Shape/a.out",
    "UVa/Competitive Programming/Chapter 1/11800 - Determine the Shape/main.cpp",
    "UVa/Competitive Programming/Chapter 1/11800 - Determine the Shape/main2.cpp",
    "UVa/Competitive Programming/Chapter 1/11800 - Determine the Shape/test.in",
    "UVa/Competitive Programming/Chapter 1/272 - TEX Quotes",
    "UVa/Competitive Programming/Chapter 1/272 - TEX Quotes/main.cpp",
    "UVa/Competitive Programming/Chapter 1/272 - TEX Quotes/test.in",
    "UVa/Competitive Programming/Chapter 1/394 - Mapmaker",
    "UVa/Competitive Programming/Chapter 1/394 - Mapmaker/main.cpp",
    "UVa/Competitive Programming/Chapter 1/394 - Mapmaker/test.in",
    "UVa/Competitive Programming/Chapter 1/483 - Word Scramble",
    "UVa/Competitive Programming/Chapter 1/483 - Word Scramble/main.cpp",
    "UVa/Competitive Programming/Chapter 1/483 - Word Scramble/test.in",
    "UVa/Competitive Programming/Chapter 1/573 - The Snail",
    "UVa/Competitive Programming/Chapter 1/573 - The Snail/main.cpp",
    "UVa/Competitive Programming/Chapter 1/573 - The Snail/test.in",
    "UVa/Competitive Programming/Chapter 1/661 - Blowing Fuses",
    "UVa/Competitive Programming/Chapter 1/661 - Blowing Fuses/a.out",
    "UVa/Competitive Programming/Chapter 1/661 - Blowing Fuses/main.cpp",
    "UVa/Competitive Programming/Chapter 1/661 - Blowing Fuses/test.in",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing/a.out",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing/etal.out",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing/main.cpp",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing/test.in",
    "UVa/Competitive Programming/Chapter 1/739 - Soundex Indexing/test.out",
    "UVa/Competitive Programming/Chapter 1/837 - Light and Transparencies",
    "UVa/Competitive Programming/Chapter 1/837 - Light and Transparencies/main.cpp",
    "UVa/Competitive Programming/Chapter 1/837 - Light and Transparencies/test.in",
    "UVa/Competitive Programming/Chapter 1/941 - Permutations",
    "UVa/Competitive Programming/Chapter 1/941 - Permutations/a.out",
    "UVa/Competitive Programming/Chapter 1/941 - Permutations/main.cpp",
    "UVa/Competitive Programming/Chapter 1/941 - Permutations/main2.cpp",
    "UVa/Competitive Programming/Chapter 2",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/a.out",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/test.in",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/test.out",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/uva_problem_10194.txt",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/v2",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/v2/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10194 - Football (aka Soccer)/v2/test.in",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species/a.out",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species/test.in",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species/test.out",
    "UVa/Competitive Programming/Chapter 2/10226 - Hardwood Species/uva_problem_10226.txt",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard/a.out",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard/test.in",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard/test.out",
    "UVa/Competitive Programming/Chapter 2/10258 - Contest Scoreboard/uva_problem_10258.txt",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/B.1.dat",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/B.1.diff",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/a.out",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/test.in",
    "UVa/Competitive Programming/Chapter 2/10810 - Ultra-QuickSort/test.out",
    "UVa/Competitive Programming/Chapter 2/10901 - Ferry Loading III",
    "UVa/Competitive Programming/Chapter 2/10901 - Ferry Loading III/a.out",
    "UVa/Competitive Programming/Chapter 2/10901 - Ferry Loading III/main.cpp",
    "UVa/Competitive Programming/Chapter 2/10901 - Ferry Loading III/test.in",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/a.out",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/test.cpp",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/test.in",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/test.out",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/uva_problem_11239 (1).txt",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/uva_problem_11239 (2).txt",
    "UVa/Competitive Programming/Chapter 2/11239 - Open Source/uva_problem_11239.txt",
    "UVa/Competitive Programming/Chapter 2/11462 - Age Sort",
    "UVa/Competitive Programming/Chapter 2/11462 - Age Sort/main.cpp",
    "UVa/Competitive Programming/Chapter 2/11462 - Age Sort/test.in",
    "UVa/Competitive Programming/Chapter 2/11462 - Age Sort/test.out",
    "UVa/Competitive Programming/Chapter 2/11495 - Bubbles and Buckets",
    "UVa/Competitive Programming/Chapter 2/11495 - Bubbles and Buckets/main.cpp",
    "UVa/Competitive Programming/Chapter 2/11495 - Bubbles and Buckets/main.cpp.txt",
    "UVa/Competitive Programming/Chapter 2/11495 - Bubbles and Buckets/main.cpp.txt~",
    "UVa/Competitive Programming/Chapter 2/11495 - Bubbles and Buckets/test.in",
    "UVa/Competitive Programming/Chapter 2/127 - ``Accordian'' Patience",
    "UVa/Competitive Programming/Chapter 2/127 - ``Accordian'' Patience/main.cpp",
    "UVa/Competitive Programming/Chapter 2/127 - ``Accordian'' Patience/test.in",
    "UVa/Competitive Programming/Chapter 2/127 - ``Accordian'' Patience/test.out",
    "UVa/Competitive Programming/Chapter 2/127 - ``Accordian'' Patience/test2.in",
    "UVa/Competitive Programming/Chapter 2/146 - ID Codes",
    "UVa/Competitive Programming/Chapter 2/146 - ID Codes/a.out",
    "UVa/Competitive Programming/Chapter 2/146 - ID Codes/main.cpp",
    "UVa/Competitive Programming/Chapter 2/146 - ID Codes/test.in",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/Paul.PROPER.DVDRip.XviD-DoNE..torrent",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/a.out",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/lec13.pdf",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/main.cpp",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/test.out",
    "UVa/Competitive Programming/Chapter 2/291 - House of Santa Claus/uva_problem_291.txt",
    "UVa/Competitive Programming/Chapter 2/299 - Train Swapping",
    "UVa/Competitive Programming/Chapter 2/299 - Train Swapping/a.out",
    "UVa/Competitive Programming/Chapter 2/299 - Train Swapping/main.cpp",
    "UVa/Competitive Programming/Chapter 2/299 - Train Swapping/test.in",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/[rutracker.org].t3578468.torrent",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/a.out",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/main.cpp",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/not-mine.cpp",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/test.in",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/test.out",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/uva_problem_336 (1).txt",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/uva_problem_336 (2).txt",
    "UVa/Competitive Programming/Chapter 2/336 - A Node Too Far/uva_problem_336.txt",
    "UVa/Competitive Programming/Chapter 2/482 - Permutation Arrays",
    "UVa/Competitive Programming/Chapter 2/482 - Permutation Arrays/a.out",
    "UVa/Competitive Programming/Chapter 2/482 - Permutation Arrays/main.cpp",
    "UVa/Competitive Programming/Chapter 2/482 - Permutation Arrays/test.in",
    "UVa/Competitive Programming/Chapter 2/514 - Rails",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/a.out",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/etal.txt",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/etalon.txt",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/main.cpp",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/main2.cpp",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/test.in",
    "UVa/Competitive Programming/Chapter 2/514 - Rails/test.out",
    "UVa/Competitive Programming/Chapter 2/594 - One Little, Two Little, Three Little Endians",
    "UVa/Competitive Programming/Chapter 2/594 - One Little, Two Little, Three Little Endians/main.cpp",
    "UVa/Competitive Programming/Chapter 2/594 - One Little, Two Little, Three Little Endians/test.in",
    "UVa/Competitive Programming/Chapter 2/612 - DNA Sorting",
    "UVa/Competitive Programming/Chapter 2/612 - DNA Sorting/a.out",
    "UVa/Competitive Programming/Chapter 2/612 - DNA Sorting/main.cpp",
    "UVa/Competitive Programming/Chapter 2/612 - DNA Sorting/test.in",
    "UVa/Competitive Programming/Chapter 2/673 - Parentheses Balance",
    "UVa/Competitive Programming/Chapter 2/673 - Parentheses Balance/a.out",
    "UVa/Competitive Programming/Chapter 2/673 - Parentheses Balance/main.cpp",
    "UVa/Competitive Programming/Chapter 2/673 - Parentheses Balance/test.in",
    "UVa/Competitive Programming/Chapter 2/727 - Equation",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/a.out",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/example",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/main.cpp",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/main.cpp~",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/test.in",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/test.out",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/uva_problem_727 (1).txt",
    "UVa/Competitive Programming/Chapter 2/727 - Equation/uva_problem_727.txt",
    "UVa/Competitive Programming/Chapter 3",
    "UVa/Competitive Programming/Chapter 3/725 - Division",
    "UVa/Competitive Programming/Chapter 3/725 - Division/a.out",
    "UVa/Competitive Programming/Chapter 3/725 - Division/main.cpp",
    "UVa/Competitive Programming/Chapter 3/725 - Division/test.in",
    "UVa/Competitive Programming/Sandbox",
    "UVa/Competitive Programming/Sandbox/Segment Tree",
    "UVa/Competitive Programming/Sandbox/Segment Tree/a.out",
    "UVa/Competitive Programming/Sandbox/Segment Tree/main.cpp",
    "UVa/Programming challenges",
    "UVa/Programming challenges/Chapter 1",
    "UVa/Programming challenges/Chapter 1/100 - 3n + 1",
    "UVa/Programming challenges/Chapter 1/100 - 3n + 1/main.cpp",
    "UVa/Programming challenges/Chapter 1/100 - 3n + 1/main.h",
    "UVa/Programming challenges/Chapter 1/10033 - Interpreter",
    "UVa/Programming challenges/Chapter 1/10033 - Interpreter/main.cpp",
    "UVa/Programming challenges/Chapter 1/10033 - Interpreter/test.in",
    "UVa/Programming challenges/Chapter 1/10137 - The Trip",
    "UVa/Programming challenges/Chapter 1/10137 - The Trip/leha.cpp-no-count",
    "UVa/Programming challenges/Chapter 1/10137 - The Trip/leha2.cpp-no-count",
    "UVa/Programming challenges/Chapter 1/10137 - The Trip/main-first.cpp",
    "UVa/Programming challenges/Chapter 1/10137 - The Trip/main.cpp",
    "UVa/Programming challenges/Chapter 1/10142 - Australian Voting",
    "UVa/Programming challenges/Chapter 1/10142 - Australian Voting/main.cpp",
    "UVa/Programming challenges/Chapter 1/10142 - Australian Voting/test.in",
    "UVa/Programming challenges/Chapter 1/10189 - Minesweeper",
    "UVa/Programming challenges/Chapter 1/10189 - Minesweeper/main-1st-try.cpp",
    "UVa/Programming challenges/Chapter 1/10189 - Minesweeper/main-2nd-try.cpp-no-cnt",
    "UVa/Programming challenges/Chapter 1/10196 - Check The Check",
    "UVa/Programming challenges/Chapter 1/10196 - Check The Check/main.cpp",
    "UVa/Programming challenges/Chapter 1/10196 - Check The Check/test.in",
    "UVa/Programming challenges/Chapter 1/10267 - Graphical Editor",
    "UVa/Programming challenges/Chapter 1/10267 - Graphical Editor/.main.cpp.swo",
    "UVa/Programming challenges/Chapter 1/10267 - Graphical Editor/main.cpp",
    "UVa/Programming challenges/Chapter 1/10267 - Graphical Editor/test.in",
    "UVa/Programming challenges/Chapter 1/706 - LCD Display",
    "UVa/Programming challenges/Chapter 1/706 - LCD Display/leha.cpp-no-count",
    "UVa/Programming challenges/Chapter 1/706 - LCD Display/main.cpp",
    "UVa/Programming challenges/Chapter 1/706 - LCD Display/sketch.txt",
    "UVa/Programming challenges/Chapter 2",
    "UVa/Programming challenges/Chapter 2/10038 - Jolly Jumpers",
    "UVa/Programming challenges/Chapter 2/10038 - Jolly Jumpers/a.out",
    "UVa/Programming challenges/Chapter 2/10038 - Jolly Jumpers/main.cpp",
    "UVa/Programming challenges/Chapter 2/10038 - Jolly Jumpers/test.in",
    "UVa/Programming challenges/Chapter 2/10050 - Hartals",
    "UVa/Programming challenges/Chapter 2/10050 - Hartals/a.out",
    "UVa/Programming challenges/Chapter 2/10050 - Hartals/main.cpp",
    "UVa/Programming challenges/Chapter 2/10050 - Hartals/test.in",
    "UVa/Programming challenges/Chapter 2/10315 - Poker Hands",
    "UVa/Programming challenges/Chapter 2/10315 - Poker Hands/a.out",
    "UVa/Programming challenges/Chapter 2/10315 - Poker Hands/main.cpp",
    "UVa/Programming challenges/Chapter 2/10315 - Poker Hands/main_first_try.cpp",
    "UVa/Programming challenges/Chapter 2/10315 - Poker Hands/test.in",
    "UVa/Programming challenges/Chapter 2/843 - Crypt Kicker",
    "UVa/Programming challenges/Chapter 2/843 - Crypt Kicker/a.out",
    "UVa/Programming challenges/Chapter 2/843 - Crypt Kicker/main.cpp",
    "UVa/Programming challenges/Chapter 2/843 - Crypt Kicker/test.in",
    "UVa/Random",
    "UVa/Random/10018 - Reverse and Add",
    "UVa/Random/10018 - Reverse and Add/a.out",
    "UVa/Random/10018 - Reverse and Add/main.cpp",
    "UVa/Random/10018 - Reverse and Add/test.in",
    "UVa/Random/10035 - Primary Arithmetic",
    "UVa/Random/10035 - Primary Arithmetic/a.out",
    "UVa/Random/10035 - Primary Arithmetic/main.cpp",
    "UVa/Random/10035 - Primary Arithmetic/test.in",
    "UVa/Random/10055 - Hashmat the Brave Warrior",
    "UVa/Random/10055 - Hashmat the Brave Warrior/main.cpp",
    "UVa/Random/10055 - Hashmat the Brave Warrior/test.in",
    "UVa/Random/102 - Ecological Bin Packing",
    "UVa/Random/102 - Ecological Bin Packing/a.out",
    "UVa/Random/102 - Ecological Bin Packing/main.cpp",
    "UVa/Random/102 - Ecological Bin Packing/test.in",
    "UVa/Random/10300 - Ecological Premium",
    "UVa/Random/10300 - Ecological Premium/a.out",
    "UVa/Random/10300 - Ecological Premium/main.cpp",
    "UVa/Random/10300 - Ecological Premium/test.in",
    "UVa/Random/10370 - Above Average",
    "UVa/Random/10370 - Above Average/a.out",
    "UVa/Random/10370 - Above Average/main.cpp",
    "UVa/Random/10370 - Above Average/test.in",
    "UVa/Random/10924 - Prime Words",
    "UVa/Random/10924 - Prime Words/Main.java",
    "UVa/Random/10924 - Prime Words/test.in",
    "UVa/Random/136 - Ugly Numbers",
    "UVa/Random/136 - Ugly Numbers/Main.java",
    "UVa/Random/136 - Ugly Numbers/a.out",
    "UVa/Random/136 - Ugly Numbers/main.cpp",
    "UVa/Random/458 - The Decoder",
    "UVa/Random/458 - The Decoder/a.out",
    "UVa/Random/458 - The Decoder/main.cpp",
    "UVa/Random/458 - The Decoder/test.in",
    "UVa/Random/494 - Kindergarten Counting Game",
    "UVa/Random/494 - Kindergarten Counting Game/a.out",
    "UVa/Random/494 - Kindergarten Counting Game/main.cpp",
    "UVa/Random/494 - Kindergarten Counting Game/test.in"
]
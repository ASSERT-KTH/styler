[
    ".github",
    ".github/CODE_OF_CONDUCT.md",
    ".github/workflows",
    ".github/workflows/maven.yml",
    ".gitignore",
    ".project",
    "LICENSE",
    "README.md",
    "build.gradle",
    "build.xml",
    "gradle",
    "gradle/wrapper",
    "gradle/wrapper/gradle-wrapper.jar",
    "gradle/wrapper/gradle-wrapper.properties",
    "gradlew",
    "gradlew.bat",
    "nb-configuration.xml",
    "pom.xml",
    "settings.gradle",
    "src",
    "src/jmh",
    "src/jmh/assembly",
    "src/jmh/assembly/assembly.xml",
    "src/jmh/java",
    "src/jmh/java/com",
    "src/jmh/java/com/esaulpaugh",
    "src/jmh/java/com/esaulpaugh/headlong",
    "src/jmh/java/com/esaulpaugh/headlong/jmh",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/Main.java",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/abi",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/abi/MeasureFunction.java",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/abi/MeasurePadding.java",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/rlp",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/rlp/MeasureKeyValuePairSort.java",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/util",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/util/MeasureBase64.java",
    "src/jmh/java/com/esaulpaugh/headlong/jmh/util/MeasureHex.java",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/esaulpaugh",
    "src/main/java/com/esaulpaugh/headlong",
    "src/main/java/com/esaulpaugh/headlong/abi",
    "src/main/java/com/esaulpaugh/headlong/abi/ABIJSON.java",
    "src/main/java/com/esaulpaugh/headlong/abi/ABIObject.java",
    "src/main/java/com/esaulpaugh/headlong/abi/ABIType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/ArrayType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/BigDecimalType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/BigIntegerType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/BooleanType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/ByteType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/ContractError.java",
    "src/main/java/com/esaulpaugh/headlong/abi/Encoding.java",
    "src/main/java/com/esaulpaugh/headlong/abi/Event.java",
    "src/main/java/com/esaulpaugh/headlong/abi/Function.java",
    "src/main/java/com/esaulpaugh/headlong/abi/IntType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/LongType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/PackedDecoder.java",
    "src/main/java/com/esaulpaugh/headlong/abi/PackedEncoder.java",
    "src/main/java/com/esaulpaugh/headlong/abi/Tuple.java",
    "src/main/java/com/esaulpaugh/headlong/abi/TupleType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/TypeEnum.java",
    "src/main/java/com/esaulpaugh/headlong/abi/TypeFactory.java",
    "src/main/java/com/esaulpaugh/headlong/abi/UnitType.java",
    "src/main/java/com/esaulpaugh/headlong/abi/util",
    "src/main/java/com/esaulpaugh/headlong/abi/util/BizarroIntegers.java",
    "src/main/java/com/esaulpaugh/headlong/abi/util/Uint.java",
    "src/main/java/com/esaulpaugh/headlong/rlp",
    "src/main/java/com/esaulpaugh/headlong/rlp/DataType.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/KVP.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPDecoder.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPEncoder.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPItem.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPList.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPOutputStream.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPStream.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPStreamIterator.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/RLPString.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/Record.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/ShortInputException.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/util",
    "src/main/java/com/esaulpaugh/headlong/rlp/util/FloatingPoint.java",
    "src/main/java/com/esaulpaugh/headlong/rlp/util/Notation.java",
    "src/main/java/com/esaulpaugh/headlong/util",
    "src/main/java/com/esaulpaugh/headlong/util/FastBase64.java",
    "src/main/java/com/esaulpaugh/headlong/util/FastHex.java",
    "src/main/java/com/esaulpaugh/headlong/util/Integers.java",
    "src/main/java/com/esaulpaugh/headlong/util/JsonUtils.java",
    "src/main/java/com/esaulpaugh/headlong/util/Strings.java",
    "src/main/java/com/esaulpaugh/headlong/util/SuperSerial.java",
    "src/main/java/com/joemelsha",
    "src/main/java/com/joemelsha/crypto",
    "src/main/java/com/joemelsha/crypto/hash",
    "src/main/java/com/joemelsha/crypto/hash/Keccak.java",
    "src/test",
    "src/test/java",
    "src/test/java/com",
    "src/test/java/com/esaulpaugh",
    "src/test/java/com/esaulpaugh/headlong",
    "src/test/java/com/esaulpaugh/headlong/TestUtils.java",
    "src/test/java/com/esaulpaugh/headlong/abi",
    "src/test/java/com/esaulpaugh/headlong/abi/ABIJSONTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/ABIJsonCasesTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/ABIJsonCasesTest2.java",
    "src/test/java/com/esaulpaugh/headlong/abi/DecodeTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/EncodeTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/EqualsTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/EventTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/FunctionTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/MonteCarloTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/MonteCarloTestCase.java",
    "src/test/java/com/esaulpaugh/headlong/abi/PackedEncoderTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/Serializer.java",
    "src/test/java/com/esaulpaugh/headlong/abi/TupleTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/example",
    "src/test/java/com/esaulpaugh/headlong/abi/example/ABIEncodeable.java",
    "src/test/java/com/esaulpaugh/headlong/abi/example/ABIStudent.java",
    "src/test/java/com/esaulpaugh/headlong/abi/example/ABIStudentTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/util",
    "src/test/java/com/esaulpaugh/headlong/abi/util/BizarroIntegersTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/util/Deserializer.java",
    "src/test/java/com/esaulpaugh/headlong/abi/util/UnsignedTest.java",
    "src/test/java/com/esaulpaugh/headlong/abi/util/WrappedKeccak.java",
    "src/test/java/com/esaulpaugh/headlong/rlp",
    "src/test/java/com/esaulpaugh/headlong/rlp/EIP778Test.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/RLPDecoderTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/RLPEncoderTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/RLPJsonDecodeTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/RLPJsonEncodeTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/RLPStreamTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/example",
    "src/test/java/com/esaulpaugh/headlong/rlp/example/RLPAdapter.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/example/RLPEncodeable.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/example/RLPStudent.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/example/RLPStudentAdapter.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/example/RLPStudentTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/util",
    "src/test/java/com/esaulpaugh/headlong/rlp/util/FloatingPointTest.java",
    "src/test/java/com/esaulpaugh/headlong/rlp/util/NotationTest.java",
    "src/test/java/com/esaulpaugh/headlong/util",
    "src/test/java/com/esaulpaugh/headlong/util/IntegersTest.java",
    "src/test/java/com/esaulpaugh/headlong/util/StringsTest.java",
    "src/test/java/com/esaulpaugh/headlong/util/SuperSerialTest.java",
    "src/test/java/com/joemelsha",
    "src/test/java/com/joemelsha/crypto",
    "src/test/java/com/joemelsha/crypto/hash",
    "src/test/java/com/joemelsha/crypto/hash/KeccakTest.java",
    "src/test/resources",
    "src/test/resources/tests",
    "src/test/resources/tests/ethereum",
    "src/test/resources/tests/ethereum/ABITests",
    "src/test/resources/tests/ethereum/ABITests/basic_abi_tests.json",
    "src/test/resources/tests/ethereum/LICENSE",
    "src/test/resources/tests/ethereum/RLPTests",
    "src/test/resources/tests/ethereum/RLPTests/RandomRLPTests",
    "src/test/resources/tests/ethereum/RLPTests/RandomRLPTests/example.json",
    "src/test/resources/tests/ethereum/RLPTests/invalidRLPTest.json",
    "src/test/resources/tests/ethereum/RLPTests/rlptest.json",
    "src/test/resources/tests/ethers-io",
    "src/test/resources/tests/ethers-io/LICENSE",
    "src/test/resources/tests/ethers-io/tests",
    "src/test/resources/tests/ethers-io/tests/tests",
    "src/test/resources/tests/ethers-io/tests/tests/contract-interface-abi2.json",
    "src/test/resources/tests/headlong",
    "src/test/resources/tests/headlong/ALTERNATIVE_LICENSE",
    "src/test/resources/tests/headlong/LICENSE",
    "src/test/resources/tests/headlong/tests",
    "src/test/resources/tests/headlong/tests/abi_tests.json"
]
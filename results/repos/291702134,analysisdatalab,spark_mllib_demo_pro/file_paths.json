[
    "README.md",
    "data",
    "data/als",
    "data/als/lastfm",
    "data/als/lastfm/artist_alias.txt",
    "data/als/lastfm/artist_data.txt",
    "data/als/lastfm/user_artist_data.txt",
    "data/als/movielens",
    "data/als/movielens/ml-100k",
    "data/als/movielens/ml-100k/u.data",
    "data/als/movielens/ml-100k/u.item",
    "data/als/movielens/ml-100k/u.user",
    "data/als/movielens/ml-1m",
    "data/als/movielens/ml-1m/movies.dat",
    "data/als/movielens/ml-1m/ratings.dat",
    "data/als/movielens/ml-1m/users.dat",
    "data/association",
    "data/association/sample_fpgrowth.txt",
    "data/classification",
    "data/classification/iris.data",
    "data/classification/train.csv",
    "data/clustering",
    "data/clustering/gps.csv",
    "data/graphx",
    "data/graphx/followers.txt",
    "data/graphx/users.txt",
    "data/ml",
    "data/ml/crossvalidation",
    "data/ml/crossvalidation/news_train",
    "data/ml/crossvalidation/news_train/T01_\u6c7d\u8f66\u7c7b_1900.txt",
    "data/ml/crossvalidation/news_train/T02_\u8bc1\u5238\u91d1\u878d\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T03_\u79d1\u6280\u6570\u7801\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T04_\u5065\u5eb7\u517b\u751f\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T05_\u4f53\u80b2\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T06_\u65c5\u6e38\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T07_\u6559\u80b2\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T08_\u804c\u573a\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T09_\u5386\u53f2\u7c7b_1990.txt",
    "data/ml/crossvalidation/news_train/T10_\u56fd\u9632\u519b\u4e8b\u7c7b_1990.txt",
    "data/ml/crossvalidation/train.csv",
    "data/ml/crossvalidation/\u5783\u573e\u90ae\u4ef6\u5206\u7c7b_SMSSpamCollection.txt",
    "data/pipelinemodel",
    "data/pipelinemodel/metadata",
    "data/pipelinemodel/metadata/._SUCCESS.crc",
    "data/pipelinemodel/metadata/.part-00000.crc",
    "data/pipelinemodel/metadata/_SUCCESS",
    "data/pipelinemodel/metadata/part-00000",
    "data/pipelinemodel/stages",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f/metadata",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f/metadata/._SUCCESS.crc",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f/metadata/.part-00000.crc",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f/metadata/_SUCCESS",
    "data/pipelinemodel/stages/0_tok_9df3ba40fe0f/metadata/part-00000",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5/metadata",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5/metadata/._SUCCESS.crc",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5/metadata/.part-00000.crc",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5/metadata/_SUCCESS",
    "data/pipelinemodel/stages/1_hashingTF_92a090f47cc5/metadata/part-00000",
    "data/pipelinemodel/stages/2_idf_a7962c055d81",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/data",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/data/._SUCCESS.crc",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/data/.part-00000-5d34c9ec-631c-49dd-8e0a-9a595ad70ff1-c000.snappy.parquet.crc",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/data/_SUCCESS",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/data/part-00000-5d34c9ec-631c-49dd-8e0a-9a595ad70ff1-c000.snappy.parquet",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/metadata",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/metadata/._SUCCESS.crc",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/metadata/.part-00000.crc",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/metadata/_SUCCESS",
    "data/pipelinemodel/stages/2_idf_a7962c055d81/metadata/part-00000",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/data",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/data/._SUCCESS.crc",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/data/.part-00000-8d94ddec-680f-480d-a329-2d1755d0b3cd-c000.snappy.parquet.crc",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/data/_SUCCESS",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/data/part-00000-8d94ddec-680f-480d-a329-2d1755d0b3cd-c000.snappy.parquet",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/metadata",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/metadata/._SUCCESS.crc",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/metadata/.part-00000.crc",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/metadata/_SUCCESS",
    "data/pipelinemodel/stages/3_logreg_b2717a78daa5/metadata/part-00000",
    "data/pipeplne",
    "data/pipeplne/metadata",
    "data/pipeplne/metadata/._SUCCESS.crc",
    "data/pipeplne/metadata/.part-00000.crc",
    "data/pipeplne/metadata/_SUCCESS",
    "data/pipeplne/metadata/part-00000",
    "data/pipeplne/stages",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f/metadata",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f/metadata/._SUCCESS.crc",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f/metadata/.part-00000.crc",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f/metadata/_SUCCESS",
    "data/pipeplne/stages/0_tok_9df3ba40fe0f/metadata/part-00000",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5/metadata",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5/metadata/._SUCCESS.crc",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5/metadata/.part-00000.crc",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5/metadata/_SUCCESS",
    "data/pipeplne/stages/1_hashingTF_92a090f47cc5/metadata/part-00000",
    "data/pipeplne/stages/2_idf_a7962c055d81",
    "data/pipeplne/stages/2_idf_a7962c055d81/metadata",
    "data/pipeplne/stages/2_idf_a7962c055d81/metadata/._SUCCESS.crc",
    "data/pipeplne/stages/2_idf_a7962c055d81/metadata/.part-00000.crc",
    "data/pipeplne/stages/2_idf_a7962c055d81/metadata/_SUCCESS",
    "data/pipeplne/stages/2_idf_a7962c055d81/metadata/part-00000",
    "data/pipeplne/stages/3_logreg_b2717a78daa5",
    "data/pipeplne/stages/3_logreg_b2717a78daa5/metadata",
    "data/pipeplne/stages/3_logreg_b2717a78daa5/metadata/._SUCCESS.crc",
    "data/pipeplne/stages/3_logreg_b2717a78daa5/metadata/.part-00000.crc",
    "data/pipeplne/stages/3_logreg_b2717a78daa5/metadata/_SUCCESS",
    "data/pipeplne/stages/3_logreg_b2717a78daa5/metadata/part-00000",
    "data/regression",
    "data/regression/bikesharing",
    "data/regression/bikesharing/day.csv",
    "data/regression/bikesharing/hour.csv",
    "data/streaming",
    "data/streaming/AFINN-111.txt",
    "doc",
    "doc/Spark \u673a\u5668\u5b66\u4e60.xmind",
    "doc/pic",
    "doc/pic/01_\u673a\u5668\u5b66\u4e60\u7b97\u6cd5.png",
    "doc/pic/02_\u673a\u5668\u5b66\u4e60\u6846\u67b6.png",
    "doc/pic/03_\u805a\u7c7b\u7b97\u6cd5k-means.png",
    "doc/pic/17-\u63a8\u8350\u7b97\u6cd5--ALS\u7535\u5f71\u8bc4\u5206\u6848\u4f8b--\u63a8\u8350\u7b97\u6cd5\u6a21\u578b\u8bc4\u4f30\u6307\u6807RMSE\u548cMSE\u4ecb\u7ecd.png",
    "doc/pic/22-\u5206\u7c7b\u7b97\u6cd5--\u4e8c\u5206\u7c7b\u7b97\u6cd5--Titanic\u53f7\u6848\u4f8b--\u4e58\u5ba2\u751f\u6210\u72b6\u51b5\u9884\u6d4b\u5206\u6790.png",
    "doc/pic/26-\u5206\u7c7b\u7b97\u6cd5--\u4e8c\u5206\u7c7b\u7b97\u6cd5--Titanic\u53f7\u6848\u4f8b--\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673aSVM\u8fdb\u884c\u4e58\u5ba2\u751f\u5b58\u4e0e\u5426\u9884\u6d4b.png",
    "doc/pic/28-\u5206\u7c7b\u7b97\u6cd5--\u4e8c\u5206\u7c7b\u7b97\u6cd5--Titanic\u53f7\u6848\u4f8b--\u4f7f\u7528\u51b3\u7b56\u6811DecisionTree\u7b97\u6cd5\u8fdb\u884c\u4e58\u5ba2\u751f\u5b58\u4e0e\u5426\u9884\u6d4b.png",
    "doc/txt",
    "doc/txt/09-\u63a8\u8350\u7cfb\u7edf--\u63a8\u8350\u7cfb\u7edf\u7684\u7ec4\u6210\u548c\u4e09\u79cd\u63a8\u8350\u65b9\u6cd5\u4f18\u7f3a\u70b9\u4ecb\u7ecd.txt",
    "doc/txt/\u4eba\u5de5\u667a\u80fd.txt",
    "doc/txt/\u7b14\u8bb0.txt",
    "doc/word",
    "doc/word/Kmeans\u539f\u7406\u4ecb\u7ecd.docx",
    "doc/word/TF-IDF\u4ecb\u7ecd.docx",
    "doc/word/spark\u673a\u5668\u5b66\u4e60\u4ecb\u7ecd.docx",
    "pom.xml",
    "src",
    "src/main",
    "src/main/java",
    "src/main/java/com",
    "src/main/java/com/java",
    "src/main/java/com/java/sparkml",
    "src/main/java/com/java/sparkml/classification",
    "src/main/java/com/java/sparkml/classification/mult",
    "src/main/java/com/java/sparkml/classification/mult/Java_IrisMulticlassClassification.java",
    "src/main/java/com/java/sparkml/ml",
    "src/main/java/com/java/sparkml/ml/textclassification",
    "src/main/java/com/java/sparkml/ml/textclassification/T01_BadMailClassification.java",
    "src/main/java/com/java/sparkml/ml/textclassification/T02_SplitWordTest.java",
    "src/main/java/com/java/sparkml/ml/textclassification/T03_SaveModel.java",
    "src/main/java/com/java/sparkml/ml/textclassification/T04_LoadModel.java",
    "src/main/java/com/java/sparkml/ml/textclassification/T05_LoadModel.java",
    "src/main/java/com/java/sparkml/ml/textclassification/T06_Classification_MultiWays.java",
    "src/main/java/com/java/sparkml/recommand",
    "src/main/java/com/java/sparkml/recommand/MovieALSReCommand.java",
    "src/main/java/com/java/util",
    "src/main/java/com/java/util/FileImportUtil.java",
    "src/main/java/org",
    "src/main/java/org/apache",
    "src/main/java/org/apache/spark",
    "src/main/java/org/apache/spark/examples",
    "src/main/java/org/apache/spark/examples/ml.zip",
    "src/main/java/org/apache/spark/examples/ml",
    "src/main/java/org/apache/spark/examples/ml/JavaAFTSurvivalRegressionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaALSExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaBinarizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaBisectingKMeansExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaBucketedRandomProjectionLSHExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaBucketizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaChiSqSelectorExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaChiSquareTestExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaCorrelationExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaCountVectorizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaDCTExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaDecisionTreeClassificationExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaDecisionTreeRegressionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaDocument.java",
    "src/main/java/org/apache/spark/examples/ml/JavaElementwiseProductExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaEstimatorTransformerParamExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaFPGrowthExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaFeatureHasherExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaGaussianMixtureExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaGeneralizedLinearRegressionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaGradientBoostedTreeClassifierExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaGradientBoostedTreeRegressorExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaImputerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaIndexToStringExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaInteractionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaIsotonicRegressionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaKMeansExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLDAExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLabeledDocument.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLinearRegressionWithElasticNetExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLinearSVCExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLogisticRegressionSummaryExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaLogisticRegressionWithElasticNetExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaMaxAbsScalerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaMinHashLSHExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaMinMaxScalerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaModelSelectionViaCrossValidationExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaModelSelectionViaTrainValidationSplitExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaMulticlassLogisticRegressionWithElasticNetExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaMultilayerPerceptronClassifierExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaNGramExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaNaiveBayesExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaNormalizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaOneHotEncoderEstimatorExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaOneVsRestExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaPCAExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaPipelineExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaPolynomialExpansionExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaPowerIterationClusteringExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaPrefixSpanExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaQuantileDiscretizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaRFormulaExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaRandomForestClassifierExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaRandomForestRegressorExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaSQLTransformerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaStandardScalerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaStopWordsRemoverExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaStringIndexerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaSummarizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaTfIdfExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaTokenizerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaVectorAssemblerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaVectorIndexerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaVectorSizeHintExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaVectorSlicerExample.java",
    "src/main/java/org/apache/spark/examples/ml/JavaWord2VecExample.java",
    "src/main/java/test",
    "src/main/java/test/T01_LoadFromFile.java",
    "src/main/scala",
    "src/main/scala/com",
    "src/main/scala/com/sparkml",
    "src/main/scala/com/sparkml/classification",
    "src/main/scala/com/sparkml/classification/VectorDemo.scala",
    "src/main/scala/com/sparkml/classification/binary",
    "src/main/scala/com/sparkml/classification/binary/TitanicBinaryClassification.scala",
    "src/main/scala/com/sparkml/classification/binary/TitanicBinaryClassification2.scala",
    "src/main/scala/com/sparkml/classification/mult",
    "src/main/scala/com/sparkml/classification/mult/IrisMulticlassClassification.scala",
    "src/main/scala/com/sparkml/clustering",
    "src/main/scala/com/sparkml/clustering/GPSKMeans.scala",
    "src/main/scala/com/sparkml/fpm",
    "src/main/scala/com/sparkml/fpm/FPGrowthDemo.scala",
    "src/main/scala/com/sparkml/ml",
    "src/main/scala/com/sparkml/ml/als",
    "src/main/scala/com/sparkml/ml/als/ML_ALS.scala",
    "src/main/scala/com/sparkml/ml/clustering",
    "src/main/scala/com/sparkml/ml/clustering/GPSKMeans.scala",
    "src/main/scala/com/sparkml/ml/clustering/GPSKMeansPipeline.scala",
    "src/main/scala/com/sparkml/ml/crossvalidation",
    "src/main/scala/com/sparkml/ml/crossvalidation/CrossValidation.scala",
    "src/main/scala/com/sparkml/ml/textclassification",
    "src/main/scala/com/sparkml/ml/textclassification/BadMailClassification.scala",
    "src/main/scala/com/sparkml/ml/textclassification/TextClassification.scala",
    "src/main/scala/com/sparkml/ml/textclassification/TextClassificationParam.scala",
    "src/main/scala/com/sparkml/ml/tf_idf",
    "src/main/scala/com/sparkml/ml/tf_idf/TF_IDF_Demo.scala",
    "src/main/scala/com/sparkml/recommand",
    "src/main/scala/com/sparkml/recommand/MovieALSReCommand.scala",
    "src/main/scala/com/sparkml/recommand/MovieALSReCommand2.scala",
    "src/main/scala/com/sparkml/regression",
    "src/main/scala/com/sparkml/regression/T01_BikeSharingDecisionTreeRegression.scala",
    "src/main/scala/com/sparkml/regression/T02_BikeSharingLinearRegression.scala",
    "src/main/scala/com/sparkml/regression/T03_BikeSharingLassoRegression.scala",
    "src/main/scala/com/sparkml/regression/T04_BikeSharingRidgeRegression.scala"
]
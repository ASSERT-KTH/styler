<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!-- Checkstyle configuration that checks the Google coding conventions from 
	Google Java Style that can be found at https://google.github.io/styleguide/javaguide.html. 
	Checkstyle is very configurable. Be sure to read the documentation at http://checkstyle.sf.net 
	(or in your downloaded distribution). To completely disable a check, just 
	comment it out or delete it from the file. Authors: Max Vetrenko, Ruslan 
	Diachenko, Roman Ivanov. -->

<module name="Checker">

	<!-- Headers -->
	<module name="Header">
		<property name="headerFile" value="${checkstyle.header.file}" />
		<property name="fileExtensions" value="java" />
		<property name="id" value="header" />
	</module>

	<!-- Regexp -->
	<module name="RegexpSingleline">
		<property name="format" value="^(?!\s+\* $).*?\s+$" />
		<property name="message" value="Line has trailing spaces." />
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="/\*\* +\p{javaLowerCase}" />
		<property name="fileExtensions" value="java" />
		<property name="message"
			value="First sentence in a comment should start with a capital letter" />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\r?\n[\t ]*\r?\n[\t ]*\r?\n" />
		<property name="fileExtensions" value="java,xml,properties" />
		<property name="message"
			value="Unnecessary consecutive lines" />
	</module>
	<module name="RegexpMultiline">
		<property name="format" value="/\*\*\W+\* +\p{javaLowerCase}" />
		<property name="fileExtensions" value="java" />
		<property name="message"
			value="First sentence in a comment should start with a capital letter" />
	</module>

	<!-- Size Violations -->
	<module name="FileLength">
		<property name="fileExtensions" value="java" />
	</module>

	<!-- Whitespace -->
	<module name="FileTabCharacter">
		<property name="eachLine" value="false" />
	</module>

	<module name="TreeWalker">

		<!-- Annotations -->
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationMostCases" />
			<property name="tokens" value="CLASS_DEF" />
			<property name="tokens" value="INTERFACE_DEF" />
			<property name="tokens" value="ENUM_DEF" />
			<property name="tokens" value="METHOD_DEF" />
			<property name="tokens" value="CTOR_DEF" />
		</module>
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationVariables" />
			<property name="tokens" value="VARIABLE_DEF" />
			<property name="allowSamelineMultipleAnnotations"
				value="true" />
		</module>

		<!-- Block Checks -->
		<module name="EmptyBlock">
			<property name="tokens" value="LITERAL_CATCH" />
			<property name="tokens" value="ARRAY_INIT" />
			<property name="tokens" value="LITERAL_DEFAULT" />
			<property name="tokens" value="LITERAL_CASE" />
			<property name="tokens" value="INSTANCE_INIT" />
			<property name="tokens" value="LITERAL_DO" />
			<property name="tokens" value="LITERAL_ELSE" />
			<property name="tokens" value="LITERAL_FINALLY" />
			<property name="tokens" value="LITERAL_FOR" />
			<property name="tokens" value="LITERAL_IF" />
			<property name="tokens" value="LITERAL_SWITCH" />
			<property name="tokens" value="LITERAL_SYNCHRONIZED" />
			<property name="tokens" value="LITERAL_TRY" />
			<property name="tokens" value="LITERAL_WHILE" />
			<property name="tokens" value="STATIC_INIT" />
			<property name="option" value="text" />
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected" />
		</module>
		<module name="NeedBraces" />
		<module name="LeftCurly" />
		<module name="RightCurly">
			<property name="id" value="RightCurlySame" />
			<property name="tokens" value="LITERAL_TRY" />
			<property name="tokens" value="LITERAL_CATCH" />
			<property name="tokens" value="LITERAL_FINALLY" />
			<property name="tokens" value="LITERAL_IF" />
			<property name="tokens" value="LITERAL_ELSE" />
			<property name="tokens" value="LITERAL_DO" />
			<property name="option" value="same" />
		</module>
		<module name="RightCurly">
			<property name="id" value="RightCurlyAlone" />
			<property name="tokens" value="CLASS_DEF" />
			<property name="tokens" value="METHOD_DEF" />
			<property name="tokens" value="CTOR_DEF" />
			<property name="tokens" value="LITERAL_FOR" />
			<property name="tokens" value="LITERAL_WHILE" />
			<property name="tokens" value="INSTANCE_INIT" />
			<property name="tokens" value="STATIC_INIT" />
			<property name="option" value="alone" />
		</module>

		<!-- Class Design -->
		<module name="OneTopLevelClass" />

		<!-- Coding -->
		<module name="IllegalTokenText">
			<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
			<property name="format"
				value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
			<property name="message"
				value="Avoid using corresponding octal or Unicode escape." />
		</module>
		<module name="OneStatementPerLine" />
		<module name="MultipleVariableDeclarations" />
		<module name="MissingSwitchDefault" />
		<module name="FallThrough" />
		<module name="NoFinalizer" />
		<module name="OverloadMethodsDeclarationOrder" />
		<module name="LineLength">
			<property name="max" value="150" />
			<property name="ignorePattern"
				value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
		</module>

		<!-- Filters -->
		<module name="SuppressionCommentFilter" />

		<!-- Imports -->
		<module name="AvoidStarImport" />
		<module name="AvoidStaticImport">
			<property name="excludes" value="org.junit.Assert.*" />
		</module>

		<!-- Javadoc Comments -->
		<module name="NonEmptyAtclauseDescription" />
		<module name="JavadocTagContinuationIndentation" />
		<module name="SummaryJavadoc">
			<property name="forbiddenSummaryFragments"
				value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
		</module>
		<module name="JavadocParagraph" />
		<module name="AtclauseOrder">
			<property name="tagOrder"
				value="@param, @return, @throws, @deprecated" />
			<property name="target" value="CLASS_DEF" />
			<property name="target" value="INTERFACE_DEF" />
			<property name="target" value="ENUM_DEF" />
			<property name="target" value="METHOD_DEF" />
			<property name="target" value="CTOR_DEF" />
			<property name="target" value="VARIABLE_DEF" />
		</module>
		<module name="JavadocMethod">
			<property name="scope" value="public" />
			<property name="allowMissingParamTags" value="true" />
			<property name="allowMissingThrowsTags" value="true" />
			<property name="allowMissingReturnTag" value="true" />
			<property name="minLineCount" value="0" />
			<property name="allowedAnnotations" value="Override, Test" />
			<property name="allowThrowsTagsForSubclasses" value="true" />
			<property name="ignoreMethodNamesRegex"
				value=".*(create|test).*" />
			<property name="allowMissingJavadoc" value="true" />
		</module>
		<module name="SingleLineJavadoc">
			<property name="ignoreInlineTags" value="false" />
		</module>

		<!-- Metrics -->
		<module name="BooleanExpressionComplexity">
			<property name="max" value="7" />
		</module>

		<!-- Misc -->
		<module name="ArrayTypeStyle" />
		<module name="OuterTypeFilename" />
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters"
				value="true" />
			<property name="allowByTailComment" value="true" />
			<property name="allowNonPrintableEscapes" value="true" />
		</module>
		<module name="UpperEll" />
		<module name="Indentation">
			<property name="basicOffset" value="4" />
			<property name="braceAdjustment" value="0" />
			<property name="caseIndent" value="0" />
			<property name="throwsIndent" value="8" />
			<property name="lineWrappingIndentation" value="8" />
			<property name="arrayInitIndent" value="4" />
		</module>
		<module name="CommentsIndentation" />

		<!-- Modifiers -->
		<module name="ModifierOrder" />

		<!-- Naming Conventions -->
		<module name="AbbreviationAsWordInName">
			<!-- property name="allowedAbbreviationLength" value="1"/ -->
			<property name="ignoreFinal" value="false" />
		</module>
		<module name="PackageName">
			<message key="name.invalidPattern"
				value="Package name ''{0}'' must match pattern ''{1}''." />
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
		</module>
		<module name="TypeName">
			<message key="name.invalidPattern"
				value="Type name ''{0}'' must match pattern ''{1}''." />
		</module>
		<module name="MemberName">
			<message key="name.invalidPattern"
				value="Member name ''{0}'' must match pattern ''{1}''." />
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
		</module>
		<module name="ParameterName">
			<message key="name.invalidPattern"
				value="Parameter name ''{0}'' must match pattern ''{1}''." />
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
		</module>
		<module name="LambdaParameterName">
			<message key="name.invalidPattern"
				value="Lambda parameter name ''{0}'' must match pattern ''{1}''." />
			<property name="format"
				value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
		</module>
		<module name="CatchParameterName">
			<message key="name.invalidPattern"
				value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
			<property name="format"
				value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
		</module>
		<module name="LocalVariableName">
			<message key="name.invalidPattern"
				value="Local variable name ''{0}'' must match pattern ''{1}''." />
			<property name="tokens" value="VARIABLE_DEF" />
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
			<property name="allowOneCharVarInForLoop" value="true" />
		</module>
		<module name="ClassTypeParameterName">
			<message key="name.invalidPattern"
				value="Class type name ''{0}'' must match pattern ''{1}''." />
			<property name="format"
				value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
		</module>
		<module name="MethodTypeParameterName">
			<message key="name.invalidPattern"
				value="Method type name ''{0}'' must match pattern ''{1}''." />
			<property name="format"
				value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
		</module>
		<module name="InterfaceTypeParameterName">
			<message key="name.invalidPattern"
				value="Interface type name ''{0}'' must match pattern ''{1}''." />
			<property name="format"
				value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
		</module>
		<module name="MethodName">
			<message key="name.invalidPattern"
				value="Method name ''{0}'' must match pattern ''{1}''." />
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
		</module>

		<!-- Regexp -->
		<module name="Regexp" />
		<module name="RegexpSinglelineJava" />
		<module name="RegexpSinglelineJava">
			<property name="format" value="[^\p{ASCII}]" />
			<property name="ignoreComments" value="true" />
		</module>

		<!-- Size Violations -->
		<!-- <module name="AnonInnerLength" /> <module name="ExecutableStatementCount"/> -->
		<module name="MethodCount" />
		<!-- module name="MethodLength" / -->
		<module name="OuterTypeNumber" />
		<!-- <module name="ParameterNumber" /> -->

		<!-- Whitespace -->
		<module name="NoLineWrap" />
		<module name="WhitespaceAround">
			<message key="ws.notFollowed"
				value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
			<message key="ws.notPreceded"
				value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
			<property name="allowEmptyConstructors" value="true" />
			<property name="allowEmptyMethods" value="true" />
			<property name="allowEmptyTypes" value="true" />
			<property name="allowEmptyLoops" value="true" />
		</module>
		<module name="EmptyLineSeparator">
			<property name="allowNoEmptyLineBetweenFields" value="true" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapDot" />
			<property name="tokens" value="DOT" />
			<property name="option" value="nl" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapComma" />
			<property name="tokens" value="COMMA" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
			<property name="id" value="SeparatorWrapEllipsis" />
			<property name="tokens" value="ELLIPSIS" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
			<property name="id" value="SeparatorWrapArrayDeclarator" />
			<property name="tokens" value="ARRAY_DECLARATOR" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapMethodRef" />
			<property name="tokens" value="METHOD_REF" />
			<property name="option" value="nl" />
		</module>
		<module name="MethodParamPad" />
		<module name="NoWhitespaceBefore">
			<property name="tokens" value="DOT" />
			<property name="tokens" value="METHOD_REF" />
			<property name="tokens" value="COMMA" />
			<property name="tokens" value="SEMI" />
			<property name="tokens" value="POST_INC" />
			<property name="tokens" value="POST_DEC" />
			<property name="tokens" value="ELLIPSIS" />
			<property name="allowLineBreaks" value="true" />
		</module>
		<module name="ParenPad" />
		<module name="OperatorWrap">
			<property name="tokens" value="QUESTION" />
			<property name="tokens" value="COLON" />
			<property name="tokens" value="EQUAL" />
			<property name="tokens" value="NOT_EQUAL" />
			<property name="tokens" value="DIV" />
			<property name="tokens" value="PLUS" />
			<property name="tokens" value="MINUS" />
			<property name="tokens" value="STAR" />
			<property name="tokens" value="MOD" />
			<property name="tokens" value="SR" />
			<property name="tokens" value="BSR" />
			<property name="tokens" value="GE" />
			<property name="tokens" value="GT" />
			<property name="tokens" value="SL" />
			<property name="tokens" value="LE" />
			<property name="tokens" value="LT" />
			<property name="tokens" value="BXOR" />
			<property name="tokens" value="BOR" />
			<property name="tokens" value="LOR" />
			<property name="tokens" value="BAND" />
			<property name="tokens" value="LAND" />
			<property name="tokens" value="TYPE_EXTENSION_AND" />
			<property name="tokens" value="LITERAL_INSTANCEOF" />
			<property name="tokens" value="METHOD_REF" />
			<property name="option" value="nl" />
		</module>
	</module>
	<property name="charset" value="UTF-8" />
	<property name="fileExtensions" value="java, properties, xml" />
</module>

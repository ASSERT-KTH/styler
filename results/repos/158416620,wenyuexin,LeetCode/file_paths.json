[
    ".gitignore",
    ".idea",
    ".idea/.gitignore",
    ".idea/LeetCode.iml",
    ".idea/dataSources.xml",
    ".idea/dictionaries",
    ".idea/dictionaries/Apollo.xml",
    ".idea/inspectionProfiles",
    ".idea/inspectionProfiles/Project_Default.xml",
    ".idea/misc.xml",
    ".idea/modules.xml",
    ".idea/uiDesigner.xml",
    ".idea/vcs.xml",
    "LeetCode.iml",
    "README.md",
    "notes",
    "notes/\u8d2a\u5fc3\u3001\u5206\u6cbb\u4e0e\u52a8\u6001\u89c4\u5212.md",
    "problem",
    "problem/array",
    "problem/array/0001_TwoSum.md",
    "problem/array/0004_MedianOfTwoSortedArrays.md",
    "problem/array/0011_ContainerWithMostWater.md",
    "problem/array/0015_3Sum.md",
    "problem/array/0016_3SumClosest.md",
    "problem/array/0018_4Sum.md",
    "problem/array/0026_RemoveDuplicatesFromSortedArray.md",
    "problem/array/0027_RemoveElement.md",
    "problem/array/0031_NextPermutation.md",
    "problem/array/0033_SearchInRotatedSortedArray.md",
    "problem/array/0034_FindFirstAndLastPositionOfElementInSortedArray.md",
    "problem/array/0035_SearchInsertPosition.md",
    "problem/array/0039_CombinationSum.md",
    "problem/array/0040_CombinationSum2.md",
    "problem/array/0048_RotateImage.md",
    "problem/array/0053 Maximum Subarray.md",
    "problem/array/0054 Spiral Matrix.md",
    "problem/array/0055 Jump Game.md",
    "problem/array/0056 Merge Intervals.md",
    "problem/array/0066 Plus One.md",
    "problem/array/0121 Best Time to Buy and Sell Stock.md",
    "problem/array/array.md",
    "problem/backtracking",
    "problem/backtracking/0046_Permutations.md",
    "problem/backtracking/0047_Permutations2.md",
    "problem/backtracking/backtracking.md",
    "problem/binary_indexed_tree",
    "problem/binary_indexed_tree/binary_indexed_tree.md",
    "problem/binary_search",
    "problem/binary_search/binary_search.md",
    "problem/binary_search_tree",
    "problem/binary_search_tree/binary_search_tree.md",
    "problem/bit_manipulation",
    "problem/bit_manipulation/bit_manipulation.md",
    "problem/brainteaser",
    "problem/brainteaser/brainteaser.md",
    "problem/breadth_first_search",
    "problem/breadth_first_search/breadth_first_search.md",
    "problem/concurrency",
    "problem/concurrency/concurrency.md",
    "problem/database",
    "problem/database/0175 Combine Two Tables.md",
    "problem/database/0176 Second Highest Salary.md",
    "problem/database/0177 Nth Highest Salary.md",
    "problem/database/0178 Rank Scores.md",
    "problem/database/database.md",
    "problem/depth_first_search",
    "problem/depth_first_search/0133_CloneGraph.md",
    "problem/depth_first_search/depth_first_search.md",
    "problem/design",
    "problem/design/design.md",
    "problem/divide_and_conquer",
    "problem/divide_and_conquer/divide_and_conquer.md",
    "problem/dynamic_programming",
    "problem/dynamic_programming/0070 Climbing Stairs.md",
    "problem/dynamic_programming/0198 House Robber.md",
    "problem/dynamic_programming/dynamic_programming.md",
    "problem/geometry",
    "problem/geometry/geometry.md",
    "problem/graph",
    "problem/graph/graph.md",
    "problem/greedy",
    "problem/greedy/greedy.md",
    "problem/hash_table",
    "problem/hash_table/0003_LongestSubstringWithoutRepeatingCharacters.md",
    "problem/hash_table/0030_SubstringWithConcatenationOfAllWords.md",
    "problem/hash_table/0036_ValidSudoku.md",
    "problem/hash_table/0049_GroupAnagrams.md",
    "problem/hash_table/hash_table.md",
    "problem/heap",
    "problem/heap/239 Sliding Window Maximum.md",
    "problem/heap/heap.md",
    "problem/linked_list",
    "problem/linked_list/0002_AddTwoNumbers.md",
    "problem/linked_list/0019_RemoveNthNodeFromEndOfList.md",
    "problem/linked_list/0021_MergeTwoSortedLists.md",
    "problem/linked_list/0023_MergeKSortedLists.md",
    "problem/linked_list/0024_SwapNodesInPairs.md",
    "problem/linked_list/0025_ReverseNodesInKGroup.md",
    "problem/linked_list/0083 Remove Duplicates from Sorted List.md",
    "problem/linked_list/linked_list.md",
    "problem/map",
    "problem/map/map.md",
    "problem/math",
    "problem/math/0007_ReverseInteger.md",
    "problem/math/0008_StringToInteger.md",
    "problem/math/0009_PalindromeNumber.md",
    "problem/math/0012_IntegerToRoman.md",
    "problem/math/0013_RomanToInteger.md",
    "problem/math/0029_DivideTwoIntegers.md",
    "problem/math/0043_MultiplyStrings.md",
    "problem/math/0050_Pow(x, n).md",
    "problem/math/0067_AddBinary.md",
    "problem/math/0069 Sqrt(x).md",
    "problem/math/math.md",
    "problem/memoization",
    "problem/memoization/memoization.md",
    "problem/minimax",
    "problem/minimax/minimax.md",
    "problem/queue",
    "problem/queue/queue.md",
    "problem/random",
    "problem/random/random.md",
    "problem/recursion",
    "problem/recursion/recursion.md",
    "problem/rejection_sampling",
    "problem/rejection_sampling/rejection_sampling.md",
    "problem/reservoir_sampling",
    "problem/reservoir_sampling/reservoir_sampling.md",
    "problem/segment_tree",
    "problem/segment_tree/segment_tree.md",
    "problem/shell",
    "problem/shell/shell.md",
    "problem/sort",
    "problem/sort/sort.md",
    "problem/stack",
    "problem/stack/stack.md",
    "problem/string",
    "problem/string/0005_LongestPalindromicSubstring.md",
    "problem/string/0006_ZigZagConversion.md",
    "problem/string/0010_RegularExpressionMatching.md",
    "problem/string/0014_LongestCommonPrefix.md",
    "problem/string/0017_LetterCombinationsOfAPhoneNumber.md",
    "problem/string/0020_ValidParentheses.md",
    "problem/string/0022_GenerateParentheses.md",
    "problem/string/0038_CountAndSay.md",
    "problem/string/0058 Length of Last Word.md",
    "problem/string/0091 Decode Ways.md",
    "problem/string/string.md",
    "problem/topological_sort",
    "problem/topological_sort/0207_CourseSchedule.md",
    "problem/topological_sort/topological_sort.md",
    "problem/tree",
    "problem/tree/0100 Same Tree.md",
    "problem/tree/0101 Symmetric Tree.md",
    "problem/tree/0102 Binary Tree Level Order Traversal.md",
    "problem/tree/0104 Maximum Depth of Binary Tree.md",
    "problem/tree/0105 Construct Binary Tree from Preorder and Inorder Traversal.md",
    "problem/tree/0108 Convert Sorted Array to Binary Search Tree.md",
    "problem/tree/tree.md",
    "problem/trie",
    "problem/trie/trie.md",
    "problem/two_pointers",
    "problem/two_pointers/0028_ImplementStrStr.md",
    "problem/two_pointers/two_pointers.md",
    "problem/union_find",
    "problem/union_find/union_find.md",
    "src",
    "src/array",
    "src/array/reference",
    "src/array/reference/CombinationSum_39.java",
    "src/array/reference/ContainerWithMostWater_11.java",
    "src/array/reference/FindFirstAndLastPositionOfElementInSortedArray_34.java",
    "src/array/reference/FourSum_18.java",
    "src/array/reference/MaximumSubarray_53.java",
    "src/array/reference/MedianOfTwoSortedArrays_4.java",
    "src/array/reference/RemoveDuplicatesFromSortedArray_26.java",
    "src/array/reference/RemoveElement_27.java",
    "src/array/reference/SpiralMatrix_54.java",
    "src/array/reference/ThreeSumClosest_16.java",
    "src/array/reference/ThreeSum_15.java",
    "src/array/reference/TwoSum_1.java",
    "src/array/solution",
    "src/array/solution/BestTimeToBuyAndSellStock_121.java",
    "src/array/solution/CombinationSum2_40.java",
    "src/array/solution/CombinationSum_39.java",
    "src/array/solution/ContainerWithMostWater_11.java",
    "src/array/solution/FindFirstAndLastPositionOfElementInSortedArray_34.java",
    "src/array/solution/FourSum_18.java",
    "src/array/solution/JumpGame_55.java",
    "src/array/solution/MaximumSubarray_53.java",
    "src/array/solution/MedianOfTwoSortedArrays_4.java",
    "src/array/solution/MergeIntervals_56.java",
    "src/array/solution/NextPermutation_31.java",
    "src/array/solution/PlusOne_66.java",
    "src/array/solution/RemoveDuplicatesFromSortedArray_26.java",
    "src/array/solution/RemoveElement_27.java",
    "src/array/solution/RotateImage_48.java",
    "src/array/solution/SearchInRotatedSortedArray_33.java",
    "src/array/solution/SearchInsertPosition_35.java",
    "src/array/solution/SpiralMatrix_54.java",
    "src/array/solution/ThreeSumClosest_16.java",
    "src/array/solution/ThreeSum_15.java",
    "src/array/solution/TwoSum_1.java",
    "src/backtracking",
    "src/backtracking/reference",
    "src/backtracking/reference/Permutations2_47.java",
    "src/backtracking/reference/Permutations_46.java",
    "src/backtracking/solution",
    "src/backtracking/solution/Permutations2_47.java",
    "src/backtracking/solution/Permutations_46.java",
    "src/database",
    "src/database/CombineTwoTables_175.sql",
    "src/database/NthHighestSalary_177.sql",
    "src/database/RankScores_178.sql",
    "src/database/SecondHighestSalary_176.sql",
    "src/depth_first_search",
    "src/depth_first_search/reference",
    "src/depth_first_search/reference/CloneGraph_133.java",
    "src/depth_first_search/solution",
    "src/depth_first_search/solution/CloneGraph_133.java",
    "src/dynamic_programming",
    "src/dynamic_programming/solution",
    "src/dynamic_programming/solution/ClimbingStairs_70.java",
    "src/dynamic_programming/solution/HouseRobber_198.java",
    "src/graph",
    "src/graph/utils",
    "src/graph/utils/Node.java",
    "src/hash_table",
    "src/hash_table/reference",
    "src/hash_table/reference/GroupAnagrams_49.java",
    "src/hash_table/reference/LongestSubstringWithoutRepeatingCharacters_3.java",
    "src/hash_table/reference/SubstringWithConcatenationOfAllWords_30.java",
    "src/hash_table/reference/ValidSudoku_36.java",
    "src/hash_table/solution",
    "src/hash_table/solution/GroupAnagrams_49.java",
    "src/hash_table/solution/LongestSubstringWithoutRepeatingCharacters_3.java",
    "src/hash_table/solution/SubstringWithConcatenationOfAllWords_30.java",
    "src/hash_table/solution/ValidSudoku_36.java",
    "src/heap",
    "src/heap/solution",
    "src/heap/solution/SlidingWindowMaximum_239.java",
    "src/linked_list",
    "src/linked_list/reference",
    "src/linked_list/reference/AddTwoNumbers_2.java",
    "src/linked_list/reference/MergeKSortedLists_23.java",
    "src/linked_list/reference/MergeTwoSortedLists_21.java",
    "src/linked_list/reference/RemoveNthNodeFromEndOfList_19.java",
    "src/linked_list/reference/ReverseNodesInKGroup_25.java",
    "src/linked_list/reference/SwapNodesInPairs_24.java",
    "src/linked_list/solution",
    "src/linked_list/solution/AddTwoNumbers_2.java",
    "src/linked_list/solution/MergeKSortedLists_23.java",
    "src/linked_list/solution/MergeTwoSortedLists_21.java",
    "src/linked_list/solution/RemoveDuplicatesFromSortedList_83.java",
    "src/linked_list/solution/RemoveNthNodeFromEndOfList_19.java",
    "src/linked_list/solution/ReverseNodesInKGroup_25.java",
    "src/linked_list/solution/SwapNodesInPairs_24.java",
    "src/linked_list/utils",
    "src/linked_list/utils/ListNode.java",
    "src/math",
    "src/math/reference",
    "src/math/reference/DivideTwoIntegers_29.java",
    "src/math/reference/IntegerToRoman_12.java",
    "src/math/reference/MultiplyStrings_43.java",
    "src/math/reference/PalindromeNumber_9.java",
    "src/math/reference/PowXN_50.java",
    "src/math/reference/ReverseInteger_7.java",
    "src/math/reference/RomanToInteger_13.java",
    "src/math/reference/StringToInteger_8.java",
    "src/math/solution",
    "src/math/solution/AddBinary_67.java",
    "src/math/solution/DivideTwoIntegers_29.java",
    "src/math/solution/IntegerToRoman_12.java",
    "src/math/solution/MultiplyStrings_43.java",
    "src/math/solution/PalindromeNumber2.java",
    "src/math/solution/PalindromeNumber_9.java",
    "src/math/solution/PowXN_50.java",
    "src/math/solution/ReverseInteger2.java",
    "src/math/solution/ReverseInteger_7.java",
    "src/math/solution/RomanToInteger_13.java",
    "src/math/solution/SqrtX_69.java",
    "src/math/solution/StringToInteger_8.java",
    "src/string",
    "src/string/reference",
    "src/string/reference/CountAndSay_38.java",
    "src/string/reference/DecodeWays_91.java",
    "src/string/reference/GenerateParentheses_22.java",
    "src/string/reference/LetterCombinationsOfAPhoneNumber_17.java",
    "src/string/reference/LongestCommonPrefix_14.java",
    "src/string/reference/LongestPalindromicSubstring_5.java",
    "src/string/reference/ValidParentheses_20.java",
    "src/string/reference/ZigZagConversion_6.java",
    "src/string/solution",
    "src/string/solution/CountAndSay_38.java",
    "src/string/solution/DecodeWays_91.java",
    "src/string/solution/GenerateParentheses_22.java",
    "src/string/solution/LengthOfLastWord_58.java",
    "src/string/solution/LetterCombinationsOfAPhoneNumber_17.java",
    "src/string/solution/LongestCommonPrefix_14.java",
    "src/string/solution/LongestPalindromicSubstring_5.java",
    "src/string/solution/RegularExpressionMatching_10.java",
    "src/string/solution/ValidParentheses_20.java",
    "src/string/solution/ZigZagConversion_6.java",
    "src/topological_sort",
    "src/topological_sort/reference",
    "src/topological_sort/reference/CourseSchedule_207.java",
    "src/topological_sort/solution",
    "src/topological_sort/solution/CourseSchedule_207.java",
    "src/tree",
    "src/tree/reference",
    "src/tree/reference/BinaryTreeLevelOrderTraversal_102.java",
    "src/tree/reference/SymmetricTree_101.java",
    "src/tree/solution",
    "src/tree/solution/BinaryTreeLevelOrderTraversal_102.java",
    "src/tree/solution/ConstructBinaryTreeFromPreorderAndInorderTraversal_105.java",
    "src/tree/solution/ConvertSortedArrayToBinarySearchTree_108.java",
    "src/tree/solution/MaximumDepthOfBinaryTree_104.java",
    "src/tree/solution/SameTree_100.java",
    "src/tree/solution/SymmetricTree_101.java",
    "src/tree/utils",
    "src/tree/utils/TreeNode.java",
    "src/two_pointers",
    "src/two_pointers/reference",
    "src/two_pointers/reference/ImplementStrStr_28.java",
    "src/two_pointers/solution",
    "src/two_pointers/solution/ImplementStrStr_28.java"
]
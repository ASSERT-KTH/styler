[
    ".gitignore",
    "README.md",
    "UCACO",
    "UCACO/gift1.java",
    "UCACO/ride.java",
    "UCACO/template.java",
    "arr",
    "arr/Count_Inversion.java",
    "arr/Find_An_Ascending_Triplet.py",
    "arr/Find_Index_Value_Equal_Element.java",
    "arr/Find_Multiple_Dups.java",
    "arr/Longest_Subarray_With_Same_Number_of_One_and_Zero.java",
    "arr/Merge_Two_Arrays_Maximum_Result.py",
    "arr/Rotate_Array_Inplace.java",
    "arr/Sliding_Window_Maximum.py",
    "arr/Trapping_Rain_Water_2D.java",
    "arr/Twitter_Merge_K_Sorted_Arrays.java",
    "arr/cap_Interleaving_Array.java",
    "arr/cap_Maximum_Subarray.java",
    "arr/cap_Maximum_Subsquare_with_Border.java",
    "arr/cap_Pairs.java",
    "arr/cap_Remove_Duplicates_from_Array.java",
    "arr/cap_Rotate_Image.java",
    "arr/cap_Set_Matrix_Zeroes.java",
    "arr/cap_Shortest_Distance_Between_Two_Words.java",
    "arr/cap_Swap_Numbers.java",
    "arr/codeforces_Counting_Kangaroos_Is_Fun.java",
    "arr/codejam_Swinging_Wild.java",
    "arr/facebook_Find_Longest_Subarray_With_Sum_K.java",
    "arr/google_Intersection_Of_Two_Unsorted_Integer_Array.java",
    "arr/hackerrank_Mr_K_Marsh.java",
    "arr/hackerrank_Pairs.java",
    "arr/hackerrank_Two_Arrays_Arrangement.py",
    "arr/leetcode_3Sum_Smaller.py",
    "arr/leetcode_Best_Time_to_Buy_and_Sell_Stock.java",
    "arr/leetcode_Best_Time_to_Buy_and_Sell_Stock_II.java",
    "arr/leetcode_Best_Time_to_Buy_and_Sell_Stock_III.java",
    "arr/leetcode_Candy.java",
    "arr/leetcode_Container_With_Most_Water.cpp",
    "arr/leetcode_Container_With_Most_Water.java",
    "arr/leetcode_Contains_Duplicate.py",
    "arr/leetcode_Contains_Duplicate_II.py",
    "arr/leetcode_Contains_Duplicate_III.py",
    "arr/leetcode_Count_Of_Range_Sum.py",
    "arr/leetcode_Create_Maximum_Number.py",
    "arr/leetcode_Find_The_Celebrity.py",
    "arr/leetcode_First_Missing_Positive.cpp",
    "arr/leetcode_First_Missing_Positive.java",
    "arr/leetcode_First_Missing_Positive.py",
    "arr/leetcode_Flatten_2D_Vector.py",
    "arr/leetcode_Game_Of_Life.py",
    "arr/leetcode_Gas_Station.java",
    "arr/leetcode_H_Index.py",
    "arr/leetcode_H_Index_II.py",
    "arr/leetcode_Implement_Queue_Using_Stacks.py",
    "arr/leetcode_Implement_Stack_Using_Queues.py",
    "arr/leetcode_Increasing_Triplet_Subsequence.py",
    "arr/leetcode_Insert_Interval.cpp",
    "arr/leetcode_Insert_Interval.java",
    "arr/leetcode_Insert_Interval.py",
    "arr/leetcode_Jump_Game.cpp",
    "arr/leetcode_Jump_Game.java",
    "arr/leetcode_Jump_Game_II.cpp",
    "arr/leetcode_Jump_Game_II.java",
    "arr/leetcode_Largest_Rectangle_in_Histogram.cpp",
    "arr/leetcode_Largest_Rectangle_in_Histogram.java",
    "arr/leetcode_Longest_Consecutive_Sequence.java",
    "arr/leetcode_Majority_Element.cpp",
    "arr/leetcode_Majority_Element.java",
    "arr/leetcode_Majority_Element_II.py",
    "arr/leetcode_Maximum_Product_Subarray.py",
    "arr/leetcode_Maximum_Size_Subarray_Sum_Equal_K.py",
    "arr/leetcode_Maximum_Subarray.cpp",
    "arr/leetcode_Maximum_Subarray.java",
    "arr/leetcode_Meeting_Rooms.py",
    "arr/leetcode_Meeting_Rooms_II.py",
    "arr/leetcode_Merge_Intervals.cpp",
    "arr/leetcode_Merge_Intervals.java",
    "arr/leetcode_Merge_Sorted_Array.cpp",
    "arr/leetcode_Merge_Sorted_Array.java",
    "arr/leetcode_Minimum_Size_Subarray_Sum.py",
    "arr/leetcode_Missing_Number.py",
    "arr/leetcode_Missing_Ranges.py",
    "arr/leetcode_Move_Zeros.py",
    "arr/leetcode_Patching_Array.py",
    "arr/leetcode_Peek_Iterator.py",
    "arr/leetcode_Product_Of_Array_Except_Self.py",
    "arr/leetcode_Range_Sum_Query_2D_Immutable.py",
    "arr/leetcode_Range_Sum_Query_Immutable.py",
    "arr/leetcode_Remove_Duplicates_from_Sorted_Array.cpp",
    "arr/leetcode_Remove_Duplicates_from_Sorted_Array.java",
    "arr/leetcode_Remove_Duplicates_from_Sorted_Array_II.cpp",
    "arr/leetcode_Remove_Duplicates_from_Sorted_Array_II.java",
    "arr/leetcode_Remove_Element.cpp",
    "arr/leetcode_Remove_Element.java",
    "arr/leetcode_Rotate_Array.py",
    "arr/leetcode_Rotate_Image.cpp",
    "arr/leetcode_Rotate_Image.java",
    "arr/leetcode_Set_Matrix_Zeroes.cpp",
    "arr/leetcode_Set_Matrix_Zeroes.java",
    "arr/leetcode_Shortest_Word_Distance.py",
    "arr/leetcode_Shortest_Word_Distance_II.py",
    "arr/leetcode_Shortest_Word_Distance_III.py",
    "arr/leetcode_Sliding_Window_Maximum.py",
    "arr/leetcode_Summary_Ranges.py",
    "arr/leetcode_The_Skyline_Problem.py",
    "arr/leetcode_Trapping_Rain_Water.cpp",
    "arr/leetcode_Trapping_Rain_Water.java",
    "arr/leetcode_Two_Sum.cpp",
    "arr/leetcode_Two_Sum.java",
    "arr/leetcode_Two_Sum_III_Data_Structure_Design.py",
    "arr/leetcode_Two_Sum_II_Input_Array_Is_Sorted.py",
    "arr/leetcode_Zigzag_Iterator.py",
    "arr/leetcode_array_partition_i.py",
    "arr/leetcode_assign_cookies.rs",
    "arr/leetcode_available_captures_for_rook.rs",
    "arr/leetcode_average_salary_excluding_the_min_and_max.py",
    "arr/leetcode_baseball_game.rs",
    "arr/leetcode_can_make_arithmetic_progression_from_sequence.py",
    "arr/leetcode_can_place_flowers.rs",
    "arr/leetcode_cells_with_odd_values_in_a_matrix.rs",
    "arr/leetcode_check_array_formation_through_concatenation.py",
    "arr/leetcode_compare_strings_by_frequency_of_the_smallest_character.rs",
    "arr/leetcode_corporate_flight_bookings.rs",
    "arr/leetcode_count_good_triplets.rs",
    "arr/leetcode_create_target_array_in_the_given_order.py",
    "arr/leetcode_decompress_run_length_encoded_list.rs",
    "arr/leetcode_degree_of_an_array.rs",
    "arr/leetcode_distance_between_bus_stops.rs",
    "arr/leetcode_distribute_candies.rs",
    "arr/leetcode_duplicate_zeros.rs",
    "arr/leetcode_element_appearing_more_than_25_in_sorted_array.rs",
    "arr/leetcode_final_prices_with_a_special_discount_in_a_shop.py",
    "arr/leetcode_find_all_numbers_disappeared_in_an_array.rs",
    "arr/leetcode_find_n_unique_integers_sum_up_to_zero.rs",
    "arr/leetcode_find_numbers_with_even_number_of_digits.rs",
    "arr/leetcode_find_pivot_index.rs",
    "arr/leetcode_find_the_distance_value_between_two_arrays.py",
    "arr/leetcode_find_the_town_judge.rs",
    "arr/leetcode_find_winner_on_a_tic_tac_toe_game.rs",
    "arr/leetcode_flipping_an_image.rs",
    "arr/leetcode_greatest_common_divisor_of_strings.rs",
    "arr/leetcode_height_checker.rs",
    "arr/leetcode_how_many_numbers_are_smaller_than_the_current_number.rs",
    "arr/leetcode_image_smoother.rs",
    "arr/leetcode_intersection_of_two_arrays.rs",
    "arr/leetcode_intersection_of_two_arrays_ii.rs",
    "arr/leetcode_island_perimeter.rs",
    "arr/leetcode_k_diff_pairs_in_an_array.rs",
    "arr/leetcode_kids_with_the_greatest_number_of_candies.rs",
    "arr/leetcode_last_stone_weight.rs",
    "arr/leetcode_lemonade_change.rs",
    "arr/leetcode_longest_harmonious_subsequence.rs",
    "arr/leetcode_lucky_numbers_in_a_matrix.py",
    "arr/leetcode_magic_squares_in_grid.rs",
    "arr/leetcode_make_two_arrays_equal_by_reversing_sub_arrays.py",
    "arr/leetcode_matrix_cells_in_distance_order.rs",
    "arr/leetcode_matrix_diagonal_sum.rs",
    "arr/leetcode_max_consecutive_ones.rs",
    "arr/leetcode_maximize_distance_to_closest_person.rs",
    "arr/leetcode_maximize_sum_of_array_after_k_negations.rs",
    "arr/leetcode_maximum_average_subarray_i.rs",
    "arr/leetcode_maximum_product_of_two_elements_in_an_array.rs",
    "arr/leetcode_mean_of_array_after_removing_some_elements.py",
    "arr/leetcode_minimum_absolute_difference.rs",
    "arr/leetcode_minimum_moves_to_equal_array_elements.rs",
    "arr/leetcode_minimum_subsequence_in_non_increasing_order.py",
    "arr/leetcode_monotonic_array.rs",
    "arr/leetcode_n_repeated_element_in_size_2n_array.rs",
    "arr/leetcode_next_greater_element_i.rs",
    "arr/leetcode_non_decreasing_array.rs",
    "arr/leetcode_number_of_equivalent_domino_pairs.rs",
    "arr/leetcode_number_of_good_pairs.rs",
    "arr/leetcode_number_of_students_doing_homework_at_a_given_time.py",
    "arr/leetcode_number_of_students_unable_to_eat_lunch.py",
    "arr/leetcode_partition_array_into_three_parts_with_equal_sum.rs",
    "arr/leetcode_peak_index_in_a_mountain_array.rs",
    "arr/leetcode_play_with_chips.rs",
    "arr/leetcode_range_addition_ii.rs",
    "arr/leetcode_relative_ranks.rs",
    "arr/leetcode_replace_elements_with_greatest_element_on_right_side.rs",
    "arr/leetcode_reshape_the_mmatrix.rs",
    "arr/leetcode_richest_customer_wealth.py",
    "arr/leetcode_robot_return_to_origin.rs",
    "arr/leetcode_running_sum_of_1d_array.rs",
    "arr/leetcode_set_mismatch.rs",
    "arr/leetcode_shortest_unsorted_continuous_subarray.rs",
    "arr/leetcode_shuffle_the_array.rs",
    "arr/leetcode_squares_of_a_sorted_array.rs",
    "arr/leetcode_sum_of_even_numbers_after_queries.rs",
    "arr/leetcode_third_maximum_number.rs",
    "arr/leetcode_toeplits_matrix.rs",
    "arr/leetcode_top_k_frequent_elements.rs",
    "arr/leetcode_transpose_matrix.rs",
    "arr/leetcode_two_city_scheduling.rs",
    "arr/leetcode_unique_number_of_occurrances.rs",
    "arr/leetcode_valid_mountain_array.rs",
    "arr/leetcode_walking_robot_simulation.rs",
    "bit",
    "bit/Find_Integer_Occurs_with_Odd_Freq.java",
    "bit/Least_Significant_Bit.py",
    "bit/Multi_Single_Encoding.java",
    "bit/cap_Bits_Combination_And_Mapping.java",
    "bit/cap_Decimal_In_Binary_Representation.java",
    "bit/cap_Explain_Bits_Operation.java",
    "bit/cap_Missing_Integer.java",
    "bit/cap_Next_Smallest_Largest_With_Same_Number_Of_One_Bits.java",
    "bit/cap_Number_Of_Bits_Changed_When_Converting_Numbers.java",
    "bit/cap_Swap_Even_Odd_Bits.java",
    "bit/cap_Update_Bit_Substring.java",
    "bit/google_Count_One_in_Binary.java",
    "bit/google_Find_Duplicate.py",
    "bit/leetcode_Bitwise_And_Of_Numbers_Range.py",
    "bit/leetcode_Gray_Code.cpp",
    "bit/leetcode_Gray_Code.java",
    "bit/leetcode_Number_Of_1_Bits.py",
    "bit/leetcode_Reverse_Bits.py",
    "bit/leetcode_Single_Number.java",
    "bit/leetcode_Single_Number_II.java",
    "bit/leetcode_Single_Number_III.py",
    "bit/leetcode_counting_bits.rs",
    "bit/leetcode_xor_operation_in_an_array.rs",
    "bit/nim.java",
    "bit/xor_practice.py",
    "codejam",
    "codejam/codejam_2015_infinite_house_of_pancakes.py",
    "codejam/codejam_2015_standing_ovation.py",
    "cpp",
    "cpp/test_83.cpp",
    "cpp/test_84",
    "cpp/test_85",
    "cpp/test_86",
    "cpp/test_87",
    "cpp/test_88",
    "cpp/test_89",
    "cpp/test_90.cpp",
    "cpp/test_91.cpp",
    "database",
    "database/test_100",
    "database/test_101",
    "database/test_102",
    "database/test_98",
    "database/test_99",
    "divide_and_conquer",
    "divide_and_conquer/Find_Points_Pair_With_Closest_Distance_Given_N_Points.py",
    "divide_and_conquer/extra_1",
    "ds_design",
    "ds_design/Implement_LRU_Cache.py",
    "ds_design/apple_Unique_Line_In_Huge_Files.txt",
    "ds_design/facebook_last_min_hour_day_requests_count.py",
    "ds_design/geohash.py",
    "ds_design/google_Implement_Hashtable.java",
    "ds_design/google_Implement_Set_With_RandomDelete.java",
    "ds_design/google_OS_Update_System.java",
    "ds_design/leetcode_Implement_LRU_Cache.java",
    "ds_design/leetcode_design_an_ordered_stream.py",
    "ds_design/leetcode_design_hashmap.rs",
    "ds_design/leetcode_design_hashset.rs",
    "ds_design/leetcode_design_parking_system.rs",
    "ds_design/leetcode_number_of_recent_calls.rs",
    "dynamic_programming",
    "dynamic_programming/ACM_Longest_Subsequence_With_Non_coprime_Adjacencies.java",
    "dynamic_programming/Assembly_Line_Scheduling.java",
    "dynamic_programming/Balanced_Partition.java",
    "dynamic_programming/Binomial_Coefficient.java",
    "dynamic_programming/Bounded_Knapsack.java",
    "dynamic_programming/Box_Stacking.java",
    "dynamic_programming/Building_Bridges.java",
    "dynamic_programming/Counting_Boolean_Parenthesizations.java",
    "dynamic_programming/Creating_Palindrome.java",
    "dynamic_programming/Cutting_a_Rod.java",
    "dynamic_programming/Dice_Throw.java",
    "dynamic_programming/Edit_Distance.java",
    "dynamic_programming/Egg_Dropping.java",
    "dynamic_programming/Floyd_Warshall_Algo.java",
    "dynamic_programming/Longest_Arithmetic_Pgrogression.java",
    "dynamic_programming/Longest_Bitonic_Subsequence.java",
    "dynamic_programming/Longest_Common_Subsequence.java",
    "dynamic_programming/Longest_Increasing_Subsequence.java",
    "dynamic_programming/Longest_Palindrome_Subsequence.java",
    "dynamic_programming/Longest_Palindrome_Substring.java",
    "dynamic_programming/Mathematical_Epxression.py",
    "dynamic_programming/Matrix_Chain_Operation.java",
    "dynamic_programming/Max_Product_Cutting.java",
    "dynamic_programming/Maximum_Sum_Increasing_Subsequence.java",
    "dynamic_programming/Minimum_Number_Of_Square_Sum.java",
    "dynamic_programming/Optimal_BST.java",
    "dynamic_programming/Pizza.java",
    "dynamic_programming/RaquetBall_Game.java",
    "dynamic_programming/Robot_Moving_1D.java",
    "dynamic_programming/Robot_Moving_2D.java",
    "dynamic_programming/Unbounded_Knapsack.java",
    "dynamic_programming/cap_Coins_Change.java",
    "dynamic_programming/cap_Maximum_Submatrix.java",
    "dynamic_programming/codejam_2013_subround1A_Manage_your_Energy.py",
    "dynamic_programming/codejam_Ocean_View.java",
    "dynamic_programming/facebook_Longest_Increasing_Subsequence.py",
    "dynamic_programming/facebook_Spaces_Added_To_a_Word.java",
    "dynamic_programming/google_Domino_Tiling.java",
    "dynamic_programming/google_Maximum_Money_Collected_By_Two_People.java",
    "dynamic_programming/google_Maximum_Submatrix_Product.py",
    "dynamic_programming/hackerrank_Lego_Blocks.java",
    "dynamic_programming/hackerrank_Play_Game.py",
    "dynamic_programming/hackerrank_Red_John_Is_Back.py",
    "dynamic_programming/hackerrank_Sam_And_Substrings.py",
    "dynamic_programming/hackerrank_Stock_Maximize.java",
    "dynamic_programming/leetcode_Alien_Dictionary.py",
    "dynamic_programming/leetcode_Best_Time_To_Buy_And_Sell_Stock_IV.py",
    "dynamic_programming/leetcode_Best_Time_To_Buy_And_Sell_Stock_With_Cooldown.py",
    "dynamic_programming/leetcode_Burst_Balloons.py",
    "dynamic_programming/leetcode_Candy.py",
    "dynamic_programming/leetcode_Climbing_Stairs.cpp",
    "dynamic_programming/leetcode_Climbing_Stairs.java",
    "dynamic_programming/leetcode_Coin_Change.java",
    "dynamic_programming/leetcode_Coin_Change.py",
    "dynamic_programming/leetcode_Decode_Ways.cpp",
    "dynamic_programming/leetcode_Decode_Ways.java",
    "dynamic_programming/leetcode_Decode_Ways.py",
    "dynamic_programming/leetcode_Different_Ways_To_Add_Parentheses.py",
    "dynamic_programming/leetcode_Distinct_Subsequences.java",
    "dynamic_programming/leetcode_Distinct_Subsequences.py",
    "dynamic_programming/leetcode_Dungeon_Game.py",
    "dynamic_programming/leetcode_Edit_Distance.cpp",
    "dynamic_programming/leetcode_Edit_Distance.java",
    "dynamic_programming/leetcode_Expression_Add_Operators.py",
    "dynamic_programming/leetcode_House_Robber.py",
    "dynamic_programming/leetcode_House_Robber_II.py",
    "dynamic_programming/leetcode_Interleaving_String.java",
    "dynamic_programming/leetcode_Interleaving_String.py",
    "dynamic_programming/leetcode_Longest_Common_Prefix.java",
    "dynamic_programming/leetcode_Longest_Increasing_Subsequence.py",
    "dynamic_programming/leetcode_Longest_Palindromic_Substring.cpp",
    "dynamic_programming/leetcode_Maximal_Rectangle.cpp",
    "dynamic_programming/leetcode_Maximal_Rectangle.java",
    "dynamic_programming/leetcode_Maximal_Square.py",
    "dynamic_programming/leetcode_Maximum_Square.py",
    "dynamic_programming/leetcode_Minimum_Path_Sum.cpp",
    "dynamic_programming/leetcode_Minimum_Path_Sum.java",
    "dynamic_programming/leetcode_Paint_Fence.py",
    "dynamic_programming/leetcode_Paint_House.py",
    "dynamic_programming/leetcode_Paint_House_II.py",
    "dynamic_programming/leetcode_Palindrome_Partitioning.java",
    "dynamic_programming/leetcode_Palindrome_Partitioning.py",
    "dynamic_programming/leetcode_Palindrome_Partitioning_II.java",
    "dynamic_programming/leetcode_Palindrome_Partitioning_II.py",
    "dynamic_programming/leetcode_Pascal_Triangle.java",
    "dynamic_programming/leetcode_Pascal_Triangle_II.java",
    "dynamic_programming/leetcode_Regular_Expression_Matching.java",
    "dynamic_programming/leetcode_Regular_Expression_Matching.py",
    "dynamic_programming/leetcode_Scramble_String.cpp",
    "dynamic_programming/leetcode_Scramble_String.java",
    "dynamic_programming/leetcode_Shortest_Palindrome.py",
    "dynamic_programming/leetcode_Triangle.java",
    "dynamic_programming/leetcode_Triangle.py",
    "dynamic_programming/leetcode_Unique_Binary_Search_Trees.cpp",
    "dynamic_programming/leetcode_Unique_Binary_Search_Trees.java",
    "dynamic_programming/leetcode_Unique_Paths.cpp",
    "dynamic_programming/leetcode_Unique_Paths.java",
    "dynamic_programming/leetcode_Unique_Paths_II.cpp",
    "dynamic_programming/leetcode_Unique_Paths_II.java",
    "dynamic_programming/leetcode_Wildcard_Matching.java",
    "dynamic_programming/leetcode_Word_Break.java",
    "dynamic_programming/leetcode_Word_Break.py",
    "dynamic_programming/leetcode_Word_Break_II.py",
    "dynamic_programming/leetcode_divisor_game.rs",
    "dynamic_programming/leetcode_integer_break.rs",
    "dynamic_programming/leetcode_longest_continuous_increasing_subsequence.rs",
    "dynamic_programming/leetcode_min_cost_climbing_stairs.rs",
    "dynamic_programming/leetcode_sum_of_all_odd_length_subarrays.rs",
    "dynamic_programming/the_valley_of_mexico.py",
    "easy",
    "easy/leetcode_arranging_coins.py",
    "easy/leetcode_average_waiting_time.py",
    "easy/leetcode_beautiful_arragement.py",
    "easy/leetcode_calculate_money_in_leetcode_bank.py",
    "easy/leetcode_check_if_a_word_occurs_as_a_prefix_of_any_word_in_a_sentence.py",
    "easy/leetcode_check_if_array_is_sorted_and_rotated.py",
    "easy/leetcode_check_if_n_and_its_double_exist.py",
    "easy/leetcode_consecutive_characters.py",
    "easy/leetcode_convert_integer_to_the_sum_of_two_no_zero_integers.py",
    "easy/leetcode_count_largest_group.py",
    "easy/leetcode_count_odd_numbers_in_an_interval_range.py",
    "easy/leetcode_crawler_log_folder.py",
    "easy/leetcode_day_of_the_week.py",
    "easy/leetcode_day_of_year.py",
    "easy/leetcode_decode_xored_array.py",
    "easy/leetcode_defuse_the_bomb.py",
    "easy/leetcode_detect_pattern_of_length_m_repeated_k_or_more_times.py",
    "easy/leetcode_dtermine_if_string_halves_are_alike.py",
    "easy/leetcode_employee_importance.py",
    "easy/leetcode_find_lucky_integer_in_an_array.py",
    "easy/leetcode_find_the_highest_altitude.py",
    "easy/leetcode_get_maximum_in_generated_array.py",
    "easy/leetcode_guess_number_higher_or_lower.py",
    "easy/leetcode_kth_largest_element_in_a_stream.py",
    "easy/leetcode_kth_missing_positive_number.py",
    "easy/leetcode_largest_substring_between_two_equal_characters.py",
    "easy/leetcode_latest_time_by_replacing_hidden_digits.py",
    "easy/leetcode_make_the_string_great.py",
    "easy/leetcode_maximum_number_of_balls_in_a_box.py",
    "easy/leetcode_maximum_repeating_substring.py",
    "easy/leetcode_maximum_score_after_splitting_a_string.py",
    "easy/leetcode_maximum_units_on_a_truck.py",
    "easy/leetcode_minimum_changes_to_make_alternating_binary_string.py",
    "easy/leetcode_minimum_value_to_get_positive_step_by_step_sum.py",
    "easy/leetcode_most_visited_sector_in_a_circular_track.py",
    "easy/leetcode_number_of_closed_islands.py",
    "easy/leetcode_number_of_days_between_two_dates.py",
    "easy/leetcode_number_of_rectagnles_that_can_form_the_largest_square.py",
    "easy/leetcode_palindromeic_substrings.py",
    "easy/leetcode_path_crossing.py",
    "easy/leetcode_rank_transform_of_an_array.py",
    "easy/leetcode_rearrange_spaces_between_words.py",
    "easy/leetcode_reformat_date.py",
    "easy/leetcode_reformat_the_string.py",
    "easy/leetcode_remove_palindromic_subsequences.py",
    "easy/leetcode_repeated_substring_pattern.py",
    "easy/leetcode_replace_all_s_to_avoid_consecutive_repeating_characters.py",
    "easy/leetcode_shift_2d_grid.py",
    "easy/leetcode_slowest_key.py",
    "easy/leetcode_special_array_with_x_elements_greater_than_or_equal_x.py",
    "easy/leetcode_special_positions_in_a_binary_matrix.py",
    "easy/leetcode_string_matching_in_an_array.py",
    "easy/leetcode_sum_of_absolute_differences_in_a_sorted_array.py",
    "easy/leetcode_sum_of_unique_elements.py",
    "easy/leetcode_thousand_separator.py",
    "easy/leetcode_three_consecutive_odds.py",
    "easy/leetcode_water_bottles.py",
    "func_prog",
    "func_prog/hackerrank_Area_Under_Curves_And_Volume.scala",
    "func_prog/hackerrank_Array_Of_N_Elements.scala",
    "func_prog/hackerrank_Common_Divisors.scala",
    "func_prog/hackerrank_Computing_GCD.scala",
    "func_prog/hackerrank_Dice_Path.scala",
    "func_prog/hackerrank_Different_Ways.scala",
    "func_prog/hackerrank_Evaluating_e_X.scala",
    "func_prog/hackerrank_Fibonacci_FP.scala",
    "func_prog/hackerrank_John_And_Fences.scala",
    "func_prog/hackerrank_Jumping_Bunnies.scala",
    "func_prog/hackerrank_Lists_And_GCD.scala",
    "func_prog/hackerrank_Mango.scala",
    "func_prog/hackerrank_Matrix_Rotation.scala",
    "func_prog/hackerrank_Messy_Medians.scala",
    "func_prog/hackerrank_Number_of_Binary_Search_Tree.scala",
    "func_prog/hackerrank_Pascal_Triagnle.scala",
    "func_prog/hackerrank_Pentagonal_Numbers.scala",
    "func_prog/hackerrank_Prefix_Compression.scala",
    "func_prog/hackerrank_Range_Minimum_Query.scala",
    "func_prog/hackerrank_Remove_Duplicates.scala",
    "func_prog/hackerrank_Reverse_Factorization.scala",
    "func_prog/hackerrank_Rotate_String.scala",
    "func_prog/hackerrank_Sequence_Full_Of_Colors.scala",
    "func_prog/hackerrank_Sherlock_And_The_Maze.scala",
    "func_prog/hackerrank_String_Compression.scala",
    "func_prog/hackerrank_String_Mingling.scala",
    "func_prog/hackerrank_String_Reductions.scala",
    "func_prog/hackerrank_String_o_Permute.scala",
    "func_prog/hackerrank_Subset_Sum.scala",
    "func_prog/hackerrank_Substring_Searching.scala",
    "func_prog/hackerrank_Super_Digit.scala",
    "func_prog/hackerrank_Swap_Nodes.scala",
    "func_prog/hackerrank_The_Sum_Of_Powers.scala",
    "func_prog/hackerrank_Valid_BST.scala",
    "graph",
    "graph/A_Star_Search.py",
    "graph/Android_Unlock_Pattern.py",
    "graph/Articulation_Point.java",
    "graph/Biconnected_Graph.java",
    "graph/Bridge_in_Graph.java",
    "graph/Connectivity_in_Directed_Graph.java",
    "graph/Continental_Divide.java",
    "graph/Dijkstra.java",
    "graph/Eulerian_Path_and_Circuit.java",
    "graph/Find_Min_STCut_In_Flow_Network.java",
    "graph/Ford_Fulkerson_Max_Flow_Problem.java",
    "graph/Graph_Coloring.java",
    "graph/Hamiltonian_Cycle.java",
    "graph/HammerItBabe.java",
    "graph/Is_Acyclic.py",
    "graph/Is_Bipartite.java",
    "graph/Max_Bipartite_Matching.java",
    "graph/Max_Number_Of_Edge_Disjoint_Paths_Between_Two_Vertices.java",
    "graph/Minimum_Distance_Sum_To_K_Points_In_Maze.java",
    "graph/Strongly_Connected_Components.java",
    "graph/Topological_Sorting.java",
    "graph/cap_Two_Connected_Nodes.java",
    "graph/cap_Word_Ladder.java",
    "graph/codeforces_Inna_and_Dima.java",
    "graph/dijkstra.py",
    "graph/facebook_Celebrity_Problem.java",
    "graph/facebook_Group_Users_With_Same_Email_Address.java",
    "graph/google_Breaking_The_Wall.py",
    "graph/google_Encoded_Dict.java",
    "graph/google_Encoded_Dict.py",
    "graph/google_Shuffle_Pattern.py",
    "graph/google_bomber_man_game.py",
    "graph/hexagon.py",
    "graph/leetcode_Alien_Dictionary.py",
    "graph/leetcode_Clone_Graph.java",
    "graph/leetcode_Course_Schedule.py",
    "graph/leetcode_Course_Schedule_II.py",
    "graph/leetcode_Graph_Valid_Tree.py",
    "graph/leetcode_Longest_Increasing_Path_In_A_Matrix.py",
    "graph/leetcode_Number_Of_Connected_Components_In_An_Undirected_Graph.py",
    "graph/leetcode_Number_Of_Islands.py",
    "graph/leetcode_Reconstruct_Itinerary.py",
    "graph/leetcode_Shortest_Distance_From_All_Buildings.py",
    "graph/leetcode_Surrounded_Regions.java",
    "graph/leetcode_Surrounded_Regions.py",
    "graph/leetcode_Walls_And_Gates.py",
    "graph/leetcode_Word_Ladder.java",
    "graph/leetcode_Word_Ladder.py",
    "graph/leetcode_Word_Ladder_II.java",
    "graph/leetcode_Word_Ladder_II.py",
    "graph/leetcode_Word_Search.java",
    "graph/leetcode_Word_Search_II.py",
    "graph/leetcode_destination_city.rs",
    "graph/leetcode_find_bottom_left_tree_value.py",
    "graph/leetcode_find_largest_value_in_each_tree_row.py",
    "graph/leetcode_flood_fill.rs",
    "graph/leetcode_rotting_oranges.py",
    "graph/minesweeper.py",
    "graph/pinball_maze.py",
    "graph/topological_sorting.py",
    "hackerrank",
    "hackerrank/evernote_search",
    "hackerrank/evernote_search/evernote_search.py",
    "hackerrank/hackerrank_Alternating_Characters.py",
    "hackerrank/hackerrank_And_Product.py",
    "hackerrank/hackerrank_Angry_Professor.py",
    "hackerrank/hackerrank_AntiPalindromic_Strings.py",
    "hackerrank/hackerrank_Bus_Station.py",
    "hackerrank/hackerrank_Candles_Counting.py",
    "hackerrank/hackerrank_Cavity_Map.py",
    "hackerrank/hackerrank_Chief_Hopper.py",
    "hackerrank/hackerrank_Cipher.py",
    "hackerrank/hackerrank_Circle_City.py",
    "hackerrank/hackerrank_Counter_Game.py",
    "hackerrank/hackerrank_Favorite_Sequence.py",
    "hackerrank/hackerrank_Flipping_Bits.py",
    "hackerrank/hackerrank_Girlfriend_and_Necklace.py",
    "hackerrank/hackerrank_Grid_Challenge.py",
    "hackerrank/hackerrank_Jim_And_The_Jokes.py",
    "hackerrank/hackerrank_Jim_and_the_Orders.py",
    "hackerrank/hackerrank_Journey_Scheduling.py",
    "hackerrank/hackerrank_Magical_Girl_Devu_And_Spirits.py",
    "hackerrank/hackerrank_Marble_Cut.py",
    "hackerrank/hackerrank_Number_List.py",
    "hackerrank/hackerrank_Pangrams.py",
    "hackerrank/hackerrank_Permutation_Of_Natural_Numbers.py",
    "hackerrank/hackerrank_Priyanka_And_Toys.py",
    "hackerrank/hackerrank_Roys_Rectangle.py",
    "hackerrank/hackerrank_Sansa_And_Xor.py",
    "hackerrank/hackerrank_Sherlock_and_Anagrams.py",
    "hackerrank/hackerrank_Sherlock_and_Square.py",
    "hackerrank/hackerrank_Strange_Numbers.py",
    "hackerrank/hackerrank_Superman_Celebrates_Diwali.py",
    "hackerrank/hackerrank_Taum_and_Bday.py",
    "hackerrank/hackerrank_Travel_Around_The_World.py",
    "hackerrank/hackerrank_Tree_Pruning.py",
    "hackerrank/hackerrank_Two_String.py",
    "hackerrank/hackerrank_Volleyball_Match.py",
    "hackerrank/hackerrank_Worst_Permutation.py",
    "hackerrank/lets_bash",
    "hackerrank/lets_bash/hackerrank_arithmetic_operations.sh",
    "hackerrank/lets_bash/hackerrank_compute_the_average.sh",
    "hackerrank/lets_bash/hackerrank_getting_started_with_conditionals.sh",
    "hackerrank/lets_bash/hackerrank_looping_and_skipping.sh",
    "hackerrank/lets_bash/hackerrank_looping_with_numbers.sh",
    "hackerrank/lets_bash/hackerrank_more_on_conditionals.sh",
    "hackerrank/lets_bash/hackerrank_the_cut_command_1.sh",
    "hackerrank/lets_bash/hackerrank_the_cut_command_2.sh",
    "hackerrank/lets_bash/hackerrank_the_cut_command_3.sh",
    "hackerrank/lets_bash/hackerrank_the_sort_command_1.sh",
    "hackerrank/lets_bash/hackerrank_the_sort_command_2.sh",
    "hackerrank/lets_bash/hackerrank_the_tr_command_1.sh",
    "hackerrank/lets_bash/hackerrank_the_tr_command_2.sh",
    "hackerrank/lets_bash/hackerrank_the_tr_command_3.sh",
    "hackerrank/pythonista",
    "hackerrank/pythonista/hackerrank_basic_calculator.py",
    "hackerrank/pythonista/hackerrank_decorator2_name_directory.py",
    "hackerrank/pythonista/hackerrank_find_a_string.py",
    "hackerrank/pythonista/hackerrank_finding_the_percentage.py",
    "hackerrank/pythonista/hackerrank_leibniz.py",
    "hackerrank/pythonista/hackerrank_list_comprehensions.py",
    "hackerrank/pythonista/hackerrank_map_and_lambda_function.py",
    "hackerrank/pythonista/hackerrank_nested_list.py",
    "hackerrank/pythonista/hackerrank_regex1_validating_the_phone_number.py",
    "hackerrank/pythonista/hackerrank_regex2_validate_a_roman_number.py",
    "hackerrank/pythonista/hackerrank_set_symmetric_difference.py",
    "hackerrank/pythonista/hackerrank_standardize_mobile_number_using_decorator.py",
    "hackerrank/pythonista/hackerrank_validate_list_of_email_with_filter.py",
    "hackerrank/pythonista/hackerrank_xml1_find_the_score.py",
    "hackerrank/pythonista/hackerrank_xml2_find_the_maximum_depth.py",
    "hackerrank/quora_hackathon",
    "hackerrank/quora_hackathon/archery.py",
    "hackerrank/quora_hackathon/upvotes.py",
    "hackerrank/zenhack",
    "hackerrank/zenhack/strange_grid.py",
    "hard",
    "hard/leetcode_largest_multiple_of_three.py",
    "java",
    "java/test_92",
    "java/test_93",
    "java/test_94",
    "java/test_95",
    "java/test_96",
    "java/test_97",
    "linkedlist",
    "linkedlist/Merge_Two_Linkedlists_At_Alternate_Positions.java",
    "linkedlist/Reverse_Doubly_Linked_List.py",
    "linkedlist/Reverse_Linked_List.java",
    "linkedlist/Sort_LinkedList.java",
    "linkedlist/cap_Add_Two_Numbers.java",
    "linkedlist/cap_Cycle_Detection.java",
    "linkedlist/cap_Delete_Given_Node.java",
    "linkedlist/cap_Find_Nth_Node_From_End_of_List.java",
    "linkedlist/cap_Remove_Duplicates_from_Unsorted_List.java",
    "linkedlist/facebook_Convert_BST_to_Circular_DLL_in_Inorder_Traversal.java",
    "linkedlist/google_Common_Elements_In_Sorted_Linkedlist.java",
    "linkedlist/google_Implement_Infinite_Counter.java",
    "linkedlist/josephus_problem.py",
    "linkedlist/leetcode_Add_Two_Numbers.cpp",
    "linkedlist/leetcode_Add_Two_Numbers.java",
    "linkedlist/leetcode_Copy_Linked_List_With_Random_Pointer.java",
    "linkedlist/leetcode_Copy_Linked_List_With_Random_Pointer.py",
    "linkedlist/leetcode_Delete_Node_In_Linked_List.py",
    "linkedlist/leetcode_Intersection_of_Two_Linked_lists.java",
    "linkedlist/leetcode_Intersection_of_Two_Linked_lists.py",
    "linkedlist/leetcode_Linked_List_Cycle.py",
    "linkedlist/leetcode_Linked_List_Cycle_II.java",
    "linkedlist/leetcode_Linked_List_Cycle_II.py",
    "linkedlist/leetcode_Merge_Two_Sorted_Lists.cpp",
    "linkedlist/leetcode_Merge_Two_Sorted_Lists.java",
    "linkedlist/leetcode_Merge_k_Sorted_Lists.cpp",
    "linkedlist/leetcode_Merge_k_Sorted_Lists.java",
    "linkedlist/leetcode_Palindrome_Linked_List.py",
    "linkedlist/leetcode_Partition_List.cpp",
    "linkedlist/leetcode_Partition_List.java",
    "linkedlist/leetcode_Remove_Duplicates_from_Sorted_List.cpp",
    "linkedlist/leetcode_Remove_Duplicates_from_Sorted_List.java",
    "linkedlist/leetcode_Remove_Duplicates_from_Sorted_List_II.cpp",
    "linkedlist/leetcode_Remove_Duplicates_from_Sorted_List_II.java",
    "linkedlist/leetcode_Remove_Duplicates_from_Sorted_List_II.py",
    "linkedlist/leetcode_Remove_Linked_List_Elements.py",
    "linkedlist/leetcode_Remove_Nth_Node_From_End_of_List.cpp",
    "linkedlist/leetcode_Remove_Nth_Node_From_End_of_List.java",
    "linkedlist/leetcode_Reorder_List.java",
    "linkedlist/leetcode_Reorder_List.py",
    "linkedlist/leetcode_Reverse_Linked_List.cpp",
    "linkedlist/leetcode_Reverse_Linked_List_II.cpp",
    "linkedlist/leetcode_Reverse_Linked_List_II.java",
    "linkedlist/leetcode_Reverse_Nodes_in_k_Group.java",
    "linkedlist/leetcode_Rotate_List.cpp",
    "linkedlist/leetcode_Rotate_List.java",
    "linkedlist/leetcode_Swap_Nodes_in_Pairs.cpp",
    "linkedlist/leetcode_Swap_Nodes_in_Pairs.java",
    "linkedlist/leetcode_convert_binary_number_in_a_linked_list_to_integer.rs",
    "linkedlist/leetcode_middle_of_the_linked_list.rs",
    "low_level",
    "low_level/test_102",
    "low_level/test_103",
    "low_level/test_104",
    "low_level/test_105",
    "low_level/test_106",
    "low_level/test_107",
    "low_level/test_108",
    "low_level/test_109",
    "low_level/test_110",
    "low_level/test_111",
    "math",
    "math/Amazon_Evaluating_Math_Expression.java",
    "math/Big_Factorial.java",
    "math/Conways_Game_Of_Life.py",
    "math/Find_Centrally_Symmetric_Numbers.java",
    "math/Implement_itoa.java",
    "math/Is_Point_Inside_Polygon_Jarvis.java",
    "math/Is_Two_Line_Segments_Intersect.java",
    "math/LinkedIn_Product_Sequence.py",
    "math/Partition_Even_Odd.java",
    "math/Random_Number_Generator.java",
    "math/Random_Number_Not_In_Given_List.java",
    "math/Split_Stones",
    "math/USACO_Fraction_Decimal.java",
    "math/Ugly_Number.java",
    "math/Unfair_Coin.java",
    "math/cap_Add.java",
    "math/cap_Basketball_Shots",
    "math/cap_Count_Number.java",
    "math/cap_Cutting_Two_Squares_In_Half.java",
    "math/cap_Equal_Prob_Set_Generator.java",
    "math/cap_Fibonacci.java",
    "math/cap_Implement_Max.java",
    "math/cap_Implement_Substraction_Times_Division_Without_Using_Add.java",
    "math/cap_Integer_to_English_Phrase.java",
    "math/cap_Perfect_Shuffle.java",
    "math/cap_Random_Generator.java",
    "math/cap_Trailing_Zeros.java",
    "math/cap_Two_Lines_Intersect.java",
    "math/cap_Word_Frequency.java",
    "math/codeforces_Inna_And_Nine.py",
    "math/codeforces_Inna_And_Pink_Pony.py",
    "math/codeforces_Jzzhu_And_Chocolate.py",
    "math/facebook_Product_Equation.java",
    "math/facebook_True_False_Generator.java",
    "math/google_Binary_Generator.java",
    "math/google_Find_A_Point_Which_Sum_Of_Distances_To_Set_Of_Other_Points_Is_Minimal.py",
    "math/google_Products_Of_Arrays.java",
    "math/google_kth_Element_of_a_Sequence_of_Numbers.java",
    "math/is_prime.py",
    "math/leetcode_3Sum.cpp",
    "math/leetcode_3Sum.java",
    "math/leetcode_3Sum.py",
    "math/leetcode_3Sum_Closest.cpp",
    "math/leetcode_3Sum_Closest.java",
    "math/leetcode_4Sum.cpp",
    "math/leetcode_4Sum.java",
    "math/leetcode_4Sum.py",
    "math/leetcode_Add_Binary.cpp",
    "math/leetcode_Add_Binary.java",
    "math/leetcode_Add_Digits.py",
    "math/leetcode_Basic_Calculator.py",
    "math/leetcode_Basic_Calculator_II.py",
    "math/leetcode_Best_Meeting_Point.py",
    "math/leetcode_Bulb_Switcher.py",
    "math/leetcode_Count_Primes.py",
    "math/leetcode_Divide_Two_Integers.cpp",
    "math/leetcode_Divide_Two_Integers.java",
    "math/leetcode_Evaluate_Reverse_Polish_Notation.java",
    "math/leetcode_Excel_Sheet_Column_Number.java",
    "math/leetcode_Excel_Sheet_Column_Number.py",
    "math/leetcode_Excel_Sheet_Column_Title.java",
    "math/leetcode_Excel_Sheet_Column_Title.py",
    "math/leetcode_Factorial_Trailing_Zeros.java",
    "math/leetcode_Fraction_to_Recurring_Decimal.java",
    "math/leetcode_Fraction_to_Recurring_Decimal.py",
    "math/leetcode_Happy_Number.py",
    "math/leetcode_Integer_to_Roman.cpp",
    "math/leetcode_Integer_to_Roman.java",
    "math/leetcode_Max_Points_On_A_Line.java",
    "math/leetcode_Multiply_Strings.cpp",
    "math/leetcode_Multiply_Strings.java",
    "math/leetcode_Next_Permutation.cpp",
    "math/leetcode_Next_Permutation.java",
    "math/leetcode_Nim_Game.py",
    "math/leetcode_Number_Of_Digit_One.py",
    "math/leetcode_Palindrome_Number.cpp",
    "math/leetcode_Palindrome_Number.java",
    "math/leetcode_Perfect_Squares.py",
    "math/leetcode_Plus_One.cpp",
    "math/leetcode_Plus_One.java",
    "math/leetcode_Pow.cpp",
    "math/leetcode_Pow.java",
    "math/leetcode_Power_Of_Three.py",
    "math/leetcode_Power_Of_Two.py",
    "math/leetcode_Rectangle_Area.py",
    "math/leetcode_Reverse_Integer.cpp",
    "math/leetcode_Reverse_Integer.java",
    "math/leetcode_Roman_to_Integer.cpp",
    "math/leetcode_Roman_to_Integer.java",
    "math/leetcode_Roman_to_Integer.py",
    "math/leetcode_Self_Crossing.py",
    "math/leetcode_Sparse_Matrix_Multiplication.py",
    "math/leetcode_Sqrt.cpp",
    "math/leetcode_Sqrt.java",
    "math/leetcode_Super_Ugly_Number.py",
    "math/leetcode_Ugly_Number.py",
    "math/leetcode_Ugly_Number_II.py",
    "math/leetcode_Valid_Number.cpp",
    "math/leetcode_Valid_Number.java",
    "math/leetcode_add_strings.rs",
    "math/leetcode_add_to_array_from_of_integer.rs",
    "math/leetcode_base_7.rs",
    "math/leetcode_binary_gap.rs",
    "math/leetcode_binary_number_with_alternating_bits.rs",
    "math/leetcode_binary_prefix_divisible_by_5.rs",
    "math/leetcode_check_if_it_is_a_straight_line.rs",
    "math/leetcode_complement_of_base_10_integer.rs",
    "math/leetcode_construct_the_rectangle.rs",
    "math/leetcode_convert_a_number_to_hexadecimal.rs",
    "math/leetcode_count_of_matches_in_tournament.py",
    "math/leetcode_distribute_candies_to_people.py",
    "math/leetcode_fair_candy_swap.rs",
    "math/leetcode_fibonacci_number.rs",
    "math/leetcode_hamming_distance.rs",
    "math/leetcode_largest_number_at_least_twice_of_others.rs",
    "math/leetcode_largest_perimeter_triangle.rs",
    "math/leetcode_largest_time_for_given_digits.rs",
    "math/leetcode_maximum_69_number.rs",
    "math/leetcode_maximum_prodct_of_tree_numbers.rs",
    "math/leetcode_minimum_time_visiting_all_points.rs",
    "math/leetcode_moving_stones_until_consecutive.rs",
    "math/leetcode_n_th_tribonacci_number.rs",
    "math/leetcode_number_complement.rs",
    "math/leetcode_number_of_steps_to_reduce_a_number_to_zero.rs",
    "math/leetcode_pairs_of_songs_with_total_durations_divisible_by_60.rs",
    "math/leetcode_perfect_number.rs",
    "math/leetcode_power_of_four.rs",
    "math/leetcode_powerful_integers.rs",
    "math/leetcode_prime_arrangements.rs",
    "math/leetcode_prime_number_of_set_bits_in_binary_representation.rs",
    "math/leetcode_projection_area_of_3d_shapes.rs",
    "math/leetcode_recatangle_overlap.rs",
    "math/leetcode_rotated_digits.rs",
    "math/leetcode_self_dividing_numbers.rs",
    "math/leetcode_smallest_range_i.rs",
    "math/leetcode_substract_the_product_and_sum_of_digits_of_an_integer.rs",
    "math/leetcode_sum_of_square_numbers.rs",
    "math/leetcode_sum_of_two_integers.rs",
    "math/leetcode_surface_area_of_3d_shapes.rs",
    "math/leetcode_valid_boomerange.rs",
    "math/leetcode_valid_perfect_square.rs",
    "math/leetcode_x_of_a_kind_in_a_deck_of_cards.rs",
    "medium",
    "medium/design_underground_system.py",
    "medium/leetcode_airplane_seat_assignment_probability.py",
    "medium/leetcode_all_elements_in_two_binary_search_trees.py",
    "medium/leetcode_all_paths_from_source_to_target.py",
    "medium/leetcode_all_possible_full_binary_trees.py",
    "medium/leetcode_angle_between_hands_of_a_clock.py",
    "medium/leetcode_apply_discount_every_n_orders.py",
    "medium/leetcode_arithmetic_subarrays.py",
    "medium/leetcode_balance_a_binary_search_tree.py",
    "medium/leetcode_battleships_in_a_board.py",
    "medium/leetcode_binary_search_tree_to_greater_sum_tree.py",
    "medium/leetcode_binary_tree_pruning.py",
    "medium/leetcode_bulb_switcher_iii.py",
    "medium/leetcode_bulb_switcher_iv.py",
    "medium/leetcode_check_if_a_string_can_break_another_string.py",
    "medium/leetcode_circular_permutation_in_binary_representation.py",
    "medium/leetcode_coin_change_2.py",
    "medium/leetcode_complex_number_multiplication.py",
    "medium/leetcode_construct_a_2_rwo_binary_matrix.py",
    "medium/leetcode_construct_binary_search_tree_from_preorder_traversal.py",
    "medium/leetcode_construct_binary_tree_from_preorder_and_postorder_traversal.py",
    "medium/leetcode_construct_k_palindrome_strings.py",
    "medium/leetcode_construct_quad_tree.py",
    "medium/leetcode_continuous_subarray_sum.py",
    "medium/leetcode_convert_to_base_negative_2.py",
    "medium/leetcode_coordinate_with_maximum_network_quality.py",
    "medium/leetcode_count_good_nodes_in_binary_tree.py",
    "medium/leetcode_count_number_of_teams.py",
    "medium/leetcode_count_sorted_vowel_strings.py",
    "medium/leetcode_count_substrings_that_differ_by_one_character.py",
    "medium/leetcode_custom_sort_string.py",
    "medium/leetcode_daily_temperatures.py",
    "medium/leetcode_delete_leaves_with_a_given_value.py",
    "medium/leetcode_delete_node_in_a_bst.py",
    "medium/leetcode_delete_nodes_and_return_forest.py",
    "medium/leetcode_design_a_stack_with_increment_operation.py",
    "medium/leetcode_design_browser_history.py",
    "medium/leetcode_design_circular_queue.py",
    "medium/leetcode_design_tinyurl.py",
    "medium/leetcode_determine_if_two_strings_are_close.py",
    "medium/leetcode_display_table_of_food_orders_in_a_restaurant.py",
    "medium/leetcode_distribute_coins_in_binary_tree.py",
    "medium/leetcode_encode_and_decode_tinyurl.py",
    "medium/leetcode_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree.py",
    "medium/leetcode_find_all_duplicates_in_an_array.py",
    "medium/leetcode_find_and_replace_pattern.py",
    "medium/leetcode_find_duplicate_file_in_system.py",
    "medium/leetcode_find_elements_in_a_contaminated_binary_tree.py",
    "medium/leetcode_find_kth_largest_xor_coordinate_value.py",
    "medium/leetcode_find_the_longest_substring_containing_vowels_in_even_counts.py",
    "medium/leetcode_find_the_minimum_number_of_fibonacci_numbers_whose_sum_is_k.py",
    "medium/leetcode_find_the_most_competitive_subsequence.py",
    "medium/leetcode_find_valid_matrix_given_row_and_column_sums.py",
    "medium/leetcode_flip_columns_for_maximum_number_of_equal_rows.py",
    "medium/leetcode_flip_equivalent_binary_trees.py",
    "medium/leetcode_group_the_people_given_the_group_size_they_belong_to.py",
    "medium/leetcode_image_overlap.py",
    "medium/leetcode_interval_list_intersections.py",
    "medium/leetcode_iterator_for_combination.py",
    "medium/leetcode_jump_game_iii.py",
    "medium/leetcode_k_closest_points_to_origin.py",
    "medium/leetcode_keys_and_rooms.py",
    "medium/leetcode_last_stone_weight_ii.py",
    "medium/leetcode_letter_tile_possibilities.py",
    "medium/leetcode_lexicographically_smallest_string_after_applying_operations.py",
    "medium/leetcode_lowest_common_ancestor_of_deepest_leaves.py",
    "medium/leetcode_matrix_block_sum.py",
    "medium/leetcode_max_area_of_island.py",
    "medium/leetcode_max_increase_to_keep_city_skyline.py",
    "medium/leetcode_max_number_of_k_sum_pairs.py",
    "medium/leetcode_maximal_network_rank.py",
    "medium/leetcode_maximum_binary_tree.py",
    "medium/leetcode_maximum_binary_tree_ii.py",
    "medium/leetcode_maximum_difference_between_node_and_ancestor.py",
    "medium/leetcode_maximum_erasure_value.py",
    "medium/leetcode_maximum_level_sum_of_a_binary_tree.py",
    "medium/leetcode_maximum_nesting_depth_of_two_valid_parentheses_strings.py",
    "medium/leetcode_maximum_number_of_coins_you_can_get.py",
    "medium/leetcode_merge_in_between_linked_lists.py",
    "medium/leetcode_minimum_add_to_make_parentheses_valid.py",
    "medium/leetcode_minimum_cost_for_tickets.py",
    "medium/leetcode_minimum_cost_tree_from_leaf_values.py",
    "medium/leetcode_minimum_failing_path_sum.py",
    "medium/leetcode_minimum_flips_to_make_a_or_b_equal_to_c.py",
    "medium/leetcode_minimum_number_of_steps_to_make_two_strings_anagram.py",
    "medium/leetcode_minimum_number_of_vertices_to_reach_all_nodes.py",
    "medium/leetcode_minimum_numbers_of_function_calls_to_make_target_array.py",
    "medium/leetcode_minimum_operations_to_make_array_equal.py",
    "medium/leetcode_minimum_remove_to_make_valid_parentheses.py",
    "medium/leetcode_minimum_swaps_to_make_strings_equal.py",
    "medium/leetcode_number_of_good_ways_to_split_a_string.py",
    "medium/leetcode_number_of_provinces.py",
    "medium/leetcode_number_of_sub_arrays_of_size_k_and_average_greater_than_or_equal_to_threshold.py",
    "medium/leetcode_online_stock_span.py",
    "medium/leetcode_pancake_sorting.py",
    "medium/leetcode_partition_array_into_disjoint_intervals.py",
    "medium/leetcode_partition_labels.py",
    "medium/leetcode_partitioning_into_minimum_number_of_deci_binary_numbers.py",
    "medium/leetcode_path_in_zigzag_labelled_binary_tree.py",
    "medium/leetcode_path_with_maximum_gold.py",
    "medium/leetcode_print_binary_tree.py",
    "medium/leetcode_pseudo_palindromic_paths_in_a_binary_tree.py",
    "medium/leetcode_queens_that_can_attack_the_king.py",
    "medium/leetcode_queue_reconstruction_by_height.py",
    "medium/leetcode_rabbits_in_forest.py",
    "medium/leetcode_rank_teams_by_votes.py",
    "medium/leetcode_rearrange_words_in_a_sentence.py",
    "medium/leetcode_reduce_array_size_to_the_half.py",
    "medium/leetcode_remove_sub_folders_from_the_filesystem.py",
    "medium/leetcode_reorder_routes_to_make_all_paths_lead_to_the_city_zero.py",
    "medium/leetcode_restore_the_array_from_adjacent_pairs.py",
    "medium/leetcode_reveal_cards_in_increasing_order.py",
    "medium/leetcode_score_after_fpling_matrix.py",
    "medium/leetcode_score_of_parentheses.py",
    "medium/leetcode_search_suggestions_system.py",
    "medium/leetcode_simplified_fractions.py",
    "medium/leetcode_smallest_string_with_a_given_numberic_value.py",
    "medium/leetcode_smallest_subtree_with_all_the_deepest_nodes.py",
    "medium/leetcode_sort_an_array.py",
    "medium/leetcode_sort_characters_by_frequency.py",
    "medium/leetcode_sort_integers_by_the_power_value.py",
    "medium/leetcode_sort_the_matrix_diagonally.py",
    "medium/leetcode_spiral_matrix_iii.py",
    "medium/leetcode_stone_game.py",
    "medium/leetcode_subrectangle_queries.py",
    "medium/leetcode_sum_of_nodes_with_even_valued_grandparent.py",
    "medium/leetcode_swapping_nodes_in_a_linked_list.py",
    "medium/leetcode_the_k_th_lexicographical_string_of_all_happy_strings_of_length_n.py",
    "medium/leetcode_the_kth_factor_of_n.py",
    "medium/leetcode_throne_inheritance.py",
    "medium/leetcode_time_needed_to_inform_all_employees.py",
    "medium/leetcode_validate_stack_sequences.py",
    "medium/leetcode_ways_to_make_a_fair_array.py",
    "medium/leetcode_where_will_the_ball_fall.py",
    "medium/leetcode_widest_vertical_area_between_two_points_containing_no_points.py",
    "medium/leetcode_xor_queries_of_a_subarray.py",
    "medium/minimum_domino_rotations_for_equal_row.py",
    "misc",
    "misc/Stable_Marriage_Problem.java",
    "misc/cap_Tic_Tac_Toe.java",
    "misc/codejam_Lawnmower.java",
    "misc/codejam_The_Repeater.py",
    "misc/codejam_Tic_Tac_Toe_Tomek.java",
    "misc/codejam_cookie_clicker_alpha.py",
    "misc/codejam_deceitful_war.py",
    "misc/codejam_magic_trick.py",
    "misc/codejam_osmos.py",
    "misc/decompress_data.py",
    "misc/double_batch.py",
    "misc/google_domino_checker.py",
    "misc/hackerrank_ACM_ICPC_Team.py",
    "misc/hackerrank_Angry_Children.py",
    "misc/hackerrank_Chocolate_Feast.py",
    "misc/hackerrank_Closest_Number.py",
    "misc/hackerrank_Consecutive_Subsequences.py",
    "misc/hackerrank_Count_Luck.py",
    "misc/hackerrank_Crush.py",
    "misc/hackerrank_Cut_the_Sticks.py",
    "misc/hackerrank_Cut_the_Tree.py",
    "misc/hackerrank_Even_Odd_Query.py",
    "misc/hackerrank_Filling_Jars.py",
    "misc/hackerrank_Game_Of_Rotation.py",
    "misc/hackerrank_Gem_Stones.py",
    "misc/hackerrank_Halloween_Party.py",
    "misc/hackerrank_Hexagonal_Grid.py",
    "misc/hackerrank_Is_Fibo.py",
    "misc/hackerrank_Lucy_And_Flowers.py",
    "misc/hackerrank_Manasa_And_Stones.py",
    "misc/hackerrank_Manasa_loves_Maths.py",
    "misc/hackerrank_Minimum_Average_Waiting_Time.py",
    "misc/hackerrank_Morgan_And_A_String.py",
    "misc/hackerrank_Palindrome_Index.py",
    "misc/hackerrank_Prime_Sum.py",
    "misc/hackerrank_Rectangular_Game.py",
    "misc/hackerrank_Sherlock_and_Array.py",
    "misc/hackerrank_Sherlock_and_Pairs.py",
    "misc/hackerrank_Sherlock_and_Permutations.py",
    "misc/hackerrank_Sherlock_and_Squares.py",
    "misc/hackerrank_Special_numbers.py",
    "misc/hackerrank_The_Indian_Job.py",
    "misc/hackerrank_The_Love_Letter_Mystery.py",
    "misc/hackerrank_Upstairs.py",
    "misc/hackerrank_Utopian_Tree.py",
    "misc/hackerrank_euler001.py",
    "moderate",
    "moderate/test_127.java",
    "moderate/test_131.java",
    "networking",
    "networking/test_112",
    "networking/test_113",
    "networking/test_114",
    "networking/test_115",
    "networking/test_116",
    "oop",
    "oop/cap_Design_In_Memory_File_System.cpp",
    "oop/cap_Garbage_Collector_in_CPP.cpp",
    "oop/cap_Othello_Game.java",
    "oop/test_40.java",
    "oop/test_41.java",
    "oop/test_42.java",
    "oop/test_43.java",
    "oop/test_44.java",
    "oop/test_45.java",
    "queue",
    "queue/queueDemo.java",
    "recursion",
    "recursion/Boggle.java",
    "recursion/Dice_Word_Puzzle.py",
    "recursion/Kights_Tour.java",
    "recursion/Min_Sum_With_Unique_Index_In_Matrix.java",
    "recursion/N-Queens_Followup.java",
    "recursion/Permutations_II.java",
    "recursion/Tail_Recursion.py",
    "recursion/Tug_of_War.java",
    "recursion/cap_Coins_Change.java",
    "recursion/cap_Combinations_Of_N_Pair_Parentheses.java",
    "recursion/cap_Eight_Queens.java",
    "recursion/cap_K_Combination.java",
    "recursion/cap_K_Permutation.java",
    "recursion/cap_Paint_Fill.java",
    "recursion/cap_Permutation.java",
    "recursion/cap_Robot_Walk.java",
    "recursion/cap_Subsets.java",
    "recursion/cap_Words_Rectangle.java",
    "recursion/google_Securitie_Guarding_Doors.java",
    "recursion/google_String_Matching.java",
    "recursion/hackerrank_Coint_on_the_Table.py",
    "recursion/hackerrank_Triplets.java",
    "recursion/leetcode_Additive_Number.py",
    "recursion/leetcode_Combination_Sum.cpp",
    "recursion/leetcode_Combination_Sum.java",
    "recursion/leetcode_Combination_Sum.py",
    "recursion/leetcode_Combination_Sum_II.cpp",
    "recursion/leetcode_Combination_Sum_II.java",
    "recursion/leetcode_Combination_Sum_II.py",
    "recursion/leetcode_Combination_Sum_III.py",
    "recursion/leetcode_Combinations.cpp",
    "recursion/leetcode_Combinations.java",
    "recursion/leetcode_Combinations.py",
    "recursion/leetcode_Expression_Add_Operators.py",
    "recursion/leetcode_Factor_Combinations.py",
    "recursion/leetcode_Flip_Game_II.py",
    "recursion/leetcode_Generalized_Abbreviation.py",
    "recursion/leetcode_Generate_Parentheses.cpp",
    "recursion/leetcode_Generate_Parentheses.java",
    "recursion/leetcode_Letter_Combinations_of_a_Phone_Number.cpp",
    "recursion/leetcode_Letter_Combinations_of_a_Phone_Number.java",
    "recursion/leetcode_N-Queens.cpp",
    "recursion/leetcode_N-Queens.java",
    "recursion/leetcode_N-Queens_II.cpp",
    "recursion/leetcode_N-Queens_II.java",
    "recursion/leetcode_Palindrome_Permutation_II.py",
    "recursion/leetcode_Permutation_Sequence.cpp",
    "recursion/leetcode_Permutation_Sequence.java",
    "recursion/leetcode_Permutations.cpp",
    "recursion/leetcode_Permutations.java",
    "recursion/leetcode_Permutations.py",
    "recursion/leetcode_Permutations_II.cpp",
    "recursion/leetcode_Permutations_II.java",
    "recursion/leetcode_Permutations_II.py",
    "recursion/leetcode_Remove_Invalid_Parentheses.py",
    "recursion/leetcode_Restore_IP_Addresses.cpp",
    "recursion/leetcode_Restore_IP_Addresses.java",
    "recursion/leetcode_Spiral_Matrix.cpp",
    "recursion/leetcode_Spiral_Matrix.java",
    "recursion/leetcode_Spiral_Matrix_II.cpp",
    "recursion/leetcode_Spiral_Matrix_II.java",
    "recursion/leetcode_Strobogrammatic_Number_III.py",
    "recursion/leetcode_Subsets.cpp",
    "recursion/leetcode_Subsets.java",
    "recursion/leetcode_Subsets.py",
    "recursion/leetcode_Subsets_II.cpp",
    "recursion/leetcode_Subsets_II.java",
    "recursion/leetcode_Subsets_II.py",
    "recursion/leetcode_Sudoku_Solver.cpp",
    "recursion/leetcode_Sudoku_Solver.java",
    "recursion/leetcode_Valid_Sudoku.cpp",
    "recursion/leetcode_Valid_Sudoku.java",
    "recursion/leetcode_Word_Pattern_II.py",
    "recursion/leetcode_binary_watch.rs",
    "recursion/leetcode_letter_case_permutation.rs",
    "recursion/pogo_stick.py",
    "recursion/rocket_fuel_Parentheses_Combinations.py",
    "recursion/twitter_Gift_Exchange.py",
    "search",
    "search/Find_A_Element_Appears_No_Less_Than_One_Forth_Times_In_Sorted_Array.java",
    "search/Find_Duplicates.java",
    "search/Find_Largest_Element_But_Less_Than_Target_In_Array.java",
    "search/Find_Peak.java",
    "search/First_Positive_Point_in_Monotonically_Increasing_Function.java",
    "search/Segment_Tree_Sum.java",
    "search/Triplets.java",
    "search/cap_Find_Largest_k_numbers_in_n_Numbers.java",
    "search/cap_Maintain_Median.java",
    "search/cap_Search_a_Sorted_Matrix.java",
    "search/cap_Search_in_Rotated_Sorted_Array.java",
    "search/cap_Searching_String_in_Sorted_Arrays_Interspersed_With_Empty_Strings.java",
    "search/codejam_2013_subround1a_Bulleyes.py",
    "search/facebook_Pair_Across_Two_Sorted_Array_With_K_Largest_Sum.java",
    "search/facebook_Rotation_Distance_Of_Sorted_Array.java",
    "search/google_Binary_Search.java",
    "search/google_Range_Minimum_Query.java",
    "search/google_kth_Maximum_Element_in_Sorted_Matrix.java",
    "search/hackerrank_Billboards.java",
    "search/hackerrank_Closest_Numbers.py",
    "search/hackerrank_Encryption.py",
    "search/hackerrank_Find_The_Median.py",
    "search/hackerrank_Flowers.java",
    "search/hackerrank_Lonely_Integer.py",
    "search/hackerrank_Median.java",
    "search/hackerrank_Missing_Numbers.py",
    "search/hackerrank_Service_Lane.py",
    "search/leetcode_Find_Median_From_Data_Stream.py",
    "search/leetcode_Find_Minimum_in_Rotated_Sorted_Array.java",
    "search/leetcode_Find_Minimum_in_Rotated_Sorted_Array_II.java",
    "search/leetcode_Find_Peak_Element.py",
    "search/leetcode_Find_The_Duplicate_Number.java",
    "search/leetcode_Find_The_Duplicate_Number.py",
    "search/leetcode_First_Bad_Version.py",
    "search/leetcode_Median_of_Two_Sorted_Arrays.java",
    "search/leetcode_Median_of_Two_Sorted_Arrays.py",
    "search/leetcode_Number_Of_Island_II.py",
    "search/leetcode_Search_Insert_Position.cpp",
    "search/leetcode_Search_Insert_Position.java",
    "search/leetcode_Search_a_2D_Matrix.cpp",
    "search/leetcode_Search_a_2D_Matrix.java",
    "search/leetcode_Search_a_2D_Matrix_II.py",
    "search/leetcode_Search_for_a_Range.cpp",
    "search/leetcode_Search_for_a_Range.java",
    "search/leetcode_Search_in_Rotated_Sorted_Array.cpp",
    "search/leetcode_Search_in_Rotated_Sorted_Array.java",
    "search/leetcode_Search_in_Rotated_Sorted_Array_II.cpp",
    "search/leetcode_Search_in_Rotated_Sorted_Array_II.java",
    "search/leetcode_Smallest_Rectangle_Enclosing_Black_Pixels.py",
    "search/leetcode_Word_Search.cpp",
    "search/leetcode_binary_search.rs",
    "search/leetcode_count_negative_numbers_in_a_sorted_matrix.rs",
    "search/leetcode_find_positive_integer_solution_for_a_given_equation.py",
    "search/poj_Banana.java",
    "search/poj_Banana.py",
    "sort",
    "sort/Choose_Sorting_Algorithm.java",
    "sort/Find_Number_Of_Larger_Element_On_Right_Side.java",
    "sort/Find_kth_Largest_In_Array.java",
    "sort/Merge_k_Sorted_Arrays.java",
    "sort/Selection_Sort.java",
    "sort/cap_Anagrams_Sorting.java",
    "sort/cap_Circur_Tower.java",
    "sort/cap_Merge_Two_Sorted_Arrays.java",
    "sort/google_Median_Interleaving.java",
    "sort/google_Radix_Sorting.java",
    "sort/hackerrank_Correctness_Invariant.py",
    "sort/hackerrank_Counting_Sort_1.py",
    "sort/hackerrank_Counting_Sort_2.py",
    "sort/hackerrank_Counting_Sort_3.py",
    "sort/hackerrank_Insertion_Sort_I.java",
    "sort/hackerrank_Insertion_Sort_II.java",
    "sort/hackerrank_Intro_to_Tutorial_Challenges.py",
    "sort/hackerrank_Mark_And_Toys.py",
    "sort/hackerrank_QuickSort_I.java",
    "sort/hackerrank_QuickSort_II.java",
    "sort/hackerrank_Running_Time_of_Algorithm.java",
    "sort/hackerrank_Two_Arrays.py",
    "sort/insertion_sort.py",
    "sort/leetcode_Count_Of_Smaller_Numbers_After_Self.py",
    "sort/leetcode_Insertion_Sort_List.py",
    "sort/leetcode_Kth_Largest_Element_In_An_Array.py",
    "sort/leetcode_Largest_Number.py",
    "sort/leetcode_Maximum_Gap.py",
    "sort/leetcode_Sort_Colors.cpp",
    "sort/leetcode_Sort_Colors.java",
    "sort/leetcode_Sort_Colors.py",
    "sort/leetcode_Sort_List.java",
    "sort/leetcode_Sort_List.py",
    "sort/leetcode_Wiggle_Sort.py",
    "sort/leetcode_Wiggle_Sort_II.py",
    "sort/leetcode_recorder_data_in_log_files.rs",
    "sort/leetcode_relative_sort_array.rs",
    "sort/leetcode_sort_array_by_increasing_frequency.py",
    "sort/leetcode_sort_array_by_parity.rs",
    "sort/leetcode_sort_array_by_parity_ii.rs",
    "sort/leetcode_sort_integers_by_the_number_of_1_bits.py",
    "sort/leetcode_the_k_weakest_rows_in_a_matrix.py",
    "sort/merge_sort.cpp",
    "sort/radix_sort.py",
    "stack",
    "stack/Stack_with_Op_on_Middle.java",
    "stack/cap_Hanoi_Tower.java",
    "stack/cap_Implement_Three_Stacks_with_Single_Array.java",
    "stack/cap_Stack_with_function_Min.java",
    "stack/leetcode_Min_Stack.java",
    "stack/leetcode_Min_Stack.py",
    "stack/leetcode_backspace_string_compare.rs",
    "stack/stackDemo.java",
    "stack/test_16.java",
    "stack/test_18.java",
    "stack/test_19.java",
    "stats.sh",
    "str",
    "str/Fibbonacci_Word.java",
    "str/KMP.java",
    "str/Remove_Pattern_from_String.java",
    "str/cap_Anagrams.java",
    "str/cap_Longest_Word_Made_Of_Other_Words.java",
    "str/cap_Reverse_C_String.java",
    "str/cap_String_Replace.java",
    "str/cap_String_with_Unique_Character.java",
    "str/cap_isSubstring.java",
    "str/coderbyte_Longest_Word.java",
    "str/consonants.py",
    "str/facebook_Two_String_With_One_Deletion_Insertion_Replacement.java",
    "str/google_Abbreviation.py",
    "str/google_K_Base_Form_In_String.py",
    "str/google_Most_Common_Words.java",
    "str/google_String_Order.java",
    "str/google_Substring_With_Two_Distinct_Chars.java",
    "str/google_Verify_UTF8.java",
    "str/hackerrank_Anagram.py",
    "str/leetcode_Bulls_And_Cows.py",
    "str/leetcode_Compare_Version_Numbers.java",
    "str/leetcode_Compare_Version_Numbers.py",
    "str/leetcode_Count_and_Say.cpp",
    "str/leetcode_Count_and_Say.java",
    "str/leetcode_Encode_And_Decode_Strings.java",
    "str/leetcode_Flip_Game.py",
    "str/leetcode_Group_Anagrams.cpp",
    "str/leetcode_Group_Anagrams.java",
    "str/leetcode_Group_Shifted_Strings.py",
    "str/leetcode_Implement_strStr.cpp",
    "str/leetcode_Implement_strStr.java",
    "str/leetcode_Integer_To_English_Word.py",
    "str/leetcode_Isomorphic_Strings.py",
    "str/leetcode_Length_of_Last_Word.cpp",
    "str/leetcode_Length_of_Last_Word.java",
    "str/leetcode_Longest_Common_Prefix.cpp",
    "str/leetcode_Longest_Common_Prefix.java",
    "str/leetcode_Longest_Substring_With_At_Most_Two_Distinct_Characters.py",
    "str/leetcode_Longest_Substring_Without_Repeating_Characters.cpp",
    "str/leetcode_Longest_Substring_Without_Repeating_Characters.java",
    "str/leetcode_Longest_Valid_Parentheses.cpp",
    "str/leetcode_Longest_Valid_Parentheses.java",
    "str/leetcode_Maximum_Product_Of_Word_Lengths.py",
    "str/leetcode_Minimum_Window_Substring.cpp",
    "str/leetcode_Minimum_Window_Substring.java",
    "str/leetcode_Minimum_Window_Substring.py",
    "str/leetcode_One_Edit_Distance.py",
    "str/leetcode_Read_N_Characters_Given_Read4.cpp",
    "str/leetcode_Read_N_Characters_Given_Read4.py",
    "str/leetcode_Read_N_Characters_Given_Read4_II_Call_Multiple_Times.py",
    "str/leetcode_Remove_Duplicate_Letters.py",
    "str/leetcode_Repeated_DNA_Sequences.java",
    "str/leetcode_Reverse_Words_In_A_String_II.py",
    "str/leetcode_Revserse_Words_in_a_String.java",
    "str/leetcode_Simplify_Path.cpp",
    "str/leetcode_Simplify_Path.java",
    "str/leetcode_String_to_Integer_atoi.cpp",
    "str/leetcode_String_to_Integer_atoi.java",
    "str/leetcode_Strobogrammatic_Number.py",
    "str/leetcode_Strobogrammatic_Number_II.py",
    "str/leetcode_Substring_with_Concatenation_of_All_Words.cpp",
    "str/leetcode_Substring_with_Concatenation_of_All_Words.java",
    "str/leetcode_Text_Justification.cpp",
    "str/leetcode_Text_Justification.java",
    "str/leetcode_Unique_Word_Abbreviation.py",
    "str/leetcode_Valid_Anagram.py",
    "str/leetcode_Valid_Palindrome.java",
    "str/leetcode_Valid_Parentheses.cpp",
    "str/leetcode_Valid_Parentheses.java",
    "str/leetcode_Word_Pattern.py",
    "str/leetcode_ZigZag_Conversion.cpp",
    "str/leetcode_ZigZag_Conversion.java",
    "str/leetcode_buddy_strings.rs",
    "str/leetcode_build_an_array_with_stack_operation.py",
    "str/leetcode_count_binary_substrings.rs",
    "str/leetcode_count_the_number_of_consistent_strings.py",
    "str/leetcode_decrypt_string_from_alphabet_to_integer_mapping.rs",
    "str/leetcode_defanging_an_ip_address.rs",
    "str/leetcode_delete_columns_to_make_sorted.rs",
    "str/leetcode_detect_capital.rs",
    "str/leetcode_di_string_match.rs",
    "str/leetcode_find_common_characters.rs",
    "str/leetcode_find_smallest_letter_greater_than_target.rs",
    "str/leetcode_find_the_difference.rs",
    "str/leetcode_find_words_that_can_be_formed_by_characters.rs",
    "str/leetcode_first_unique_character_in_a_string.rs",
    "str/leetcode_fizz_buzz.rs",
    "str/leetcode_goal_parser_interpretation.py",
    "str/leetcode_goat_latin.rs",
    "str/leetcode_groups_of_special_equivalent_strings.rs",
    "str/leetcode_increasing_decreasing_string.rs",
    "str/leetcode_is_subsequence.rs",
    "str/leetcode_jewels_and_stones.rs",
    "str/leetcode_keyboard_row.rs",
    "str/leetcode_license_key_formatting.rs",
    "str/leetcode_long_pressed_name.rs",
    "str/leetcode_longest_palindrome.rs",
    "str/leetcode_longest_uncommon_subsequence_i.rs",
    "str/leetcode_longest_word_in_dictionary.rs",
    "str/leetcode_maximum_nesting_depth_of_the_parenthese.py",
    "str/leetcode_maximum_number_of_balloons.rs",
    "str/leetcode_minimum_index_sum_of_two_lists.rs",
    "str/leetcode_most_common_word.rs",
    "str/leetcode_number_of_lines_to_write_string.rs",
    "str/leetcode_number_of_segments_in_a_string.rs",
    "str/leetcode_occurrences_after_bigram.rs",
    "str/leetcode_positions_of_large_groups.rs",
    "str/leetcode_ransom_note.rs",
    "str/leetcode_reformat_phone_number.py",
    "str/leetcode_remove_all_adjacent_duplicates_in_string.py",
    "str/leetcode_remove_outermost_parentheses.rs",
    "str/leetcode_repeated_string_match.rs",
    "str/leetcode_repeated_substring_pattern.rs",
    "str/leetcode_reverse_only_letters.rs",
    "str/leetcode_reverse_string.rs",
    "str/leetcode_reverse_string_ii.rs",
    "str/leetcode_reverse_string_iii.rs",
    "str/leetcode_reverse_vowels_of_a_string.rs",
    "str/leetcode_rotate_string.rs",
    "str/leetcode_shortest_completing_word.rs",
    "str/leetcode_shortest_distance_to_a_character.rs",
    "str/leetcode_shuffle_string.rs",
    "str/leetcode_split_a_string_in_balanced_strings.rs",
    "str/leetcode_string_compression.rs",
    "str/leetcode_student_attendance_record_i.rs",
    "str/leetcode_subdomain_visit_count.rs",
    "str/leetcode_to_lowercase.rs",
    "str/leetcode_uncommon_words_from_two_sentences.rs",
    "str/leetcode_unique_email_address.rs",
    "str/leetcode_unique_morse_code_words.rs",
    "str/leetcode_valid_palindrome_ii.rs",
    "str/leetcode_varifying_an_alien_dictionary.rs",
    "str/test_justification.py",
    "system_design_memory_limits",
    "system_design_memory_limits/Design_Feeds_Of_Stack_Price",
    "system_design_memory_limits/dropbox_Function_Execution_Count.java",
    "system_design_memory_limits/test_71",
    "system_design_memory_limits/test_72",
    "system_design_memory_limits/test_73.java",
    "system_design_memory_limits/test_74",
    "system_design_memory_limits/test_75",
    "system_design_memory_limits/test_76",
    "testing",
    "testing/test_77",
    "testing/test_78",
    "testing/test_79",
    "testing/test_80",
    "testing/test_81",
    "testing/test_82",
    "threads_locks",
    "threads_locks/test_117",
    "threads_locks/test_118",
    "threads_locks/test_119",
    "threads_locks/test_120",
    "threads_locks/test_121",
    "threads_locks/test_122",
    "tree",
    "tree/Add_All_Greater_Value_To_Every_Node_In_BST.java",
    "tree/Add_Two_Tree.java",
    "tree/Ancestors_of_Given_Binary_Tree_Node.java",
    "tree/Are_All_Leaves_At_Same_Level.java",
    "tree/BST_Identical_Check_Without_Building_Trees.java",
    "tree/Binary_Index_Tree.py",
    "tree/Create_Mirror_of_Tree.java",
    "tree/Depth_Of_Deepest_Odd_Level_Node.java",
    "tree/Extract_Leaves_Of_Binary_Tree_In_A_Doubly_Linked_List.java",
    "tree/Find_Duplicates_In_BST.java",
    "tree/Height_of_Binary_Tree.java",
    "tree/K_Nearest_Neighbor.java",
    "tree/Largest_Independent_Tree_Set.java",
    "tree/Lowest_Common_Ancestor_of_a_Binary_Search_Tree.java",
    "tree/Prefix_Tree.java",
    "tree/Prefix_Tree.py",
    "tree/Print_Left_View_of_Binary_Tree.java",
    "tree/Remove_All_Nodes_Do_Not_Lie_In_Any_Path_With_Sum_More_Than_K.java",
    "tree/Sum_Difference_Between_Odd_Even_Level_Of_Binary_Tree.java",
    "tree/Sum_Path_III.java",
    "tree/Tree_Basic.java",
    "tree/cap_BST_Inorder_Iterator.java",
    "tree/cap_Balanced_Tree.java",
    "tree/cap_Binary_Tree_Level_Order_Traversal.java",
    "tree/cap_Construct_Binary_Tree_from_Sorted_Array.java",
    "tree/cap_First_Common_Ancestor.java",
    "tree/cap_Is_Subtree.java",
    "tree/cap_Suffix_Trie.java",
    "tree/facebook_Binary_Tree_With_All_Nodes_On_Right_At_Same_Level.java",
    "tree/facebook_Next_Node_In_Binary_Search_Tree.java",
    "tree/facebook_Serialization_Deserialization_Of_Binary_Tree.java",
    "tree/google_BST_Serialization_Deserialization.java",
    "tree/google_Find_Ceiling_Value_In_BST.java",
    "tree/google_Find_Most_Frequent_Words_In_Top_Down_Path_In_A_Tree.py",
    "tree/google_Is_BST.java",
    "tree/google_Longest_Path.java",
    "tree/google_Topologically_Same_Tree.java",
    "tree/google_Two_Sum.java",
    "tree/google_quadtree.java",
    "tree/hackerrank_cut_tree.py",
    "tree/leetcode_Add_And_Search_Word_Data_Structure_Design.py",
    "tree/leetcode_Balanced_Binary_Tree.java",
    "tree/leetcode_Binary_Search_Tree_Iterator.java",
    "tree/leetcode_Binary_Tree_Inorder_Traversal.cpp",
    "tree/leetcode_Binary_Tree_Inorder_Traversal.java",
    "tree/leetcode_Binary_Tree_Level_Order_Traversal.cpp",
    "tree/leetcode_Binary_Tree_Level_Order_Traversal.java",
    "tree/leetcode_Binary_Tree_Level_Order_Traversal_II.cpp",
    "tree/leetcode_Binary_Tree_Level_Order_Traversal_II.java",
    "tree/leetcode_Binary_Tree_Longest_Consecutive_Sequence.py",
    "tree/leetcode_Binary_Tree_Maximum_Path_Sum.java",
    "tree/leetcode_Binary_Tree_Maximum_Path_Sum.py",
    "tree/leetcode_Binary_Tree_Paths.py",
    "tree/leetcode_Binary_Tree_Postorder_Traversal.py",
    "tree/leetcode_Binary_Tree_Preorder_Traversal.py",
    "tree/leetcode_Binary_Tree_Right_Side_View.py",
    "tree/leetcode_Binary_Tree_Upside_Down.py",
    "tree/leetcode_Binary_Tree_Vertical_Order_Traversal.py",
    "tree/leetcode_Binary_Tree_Zigzag_Level_Order_Traversal.cpp",
    "tree/leetcode_Binary_Tree_Zigzag_Level_Order_Traversal.java",
    "tree/leetcode_Closest_Binary_Search_Tree_Value.py",
    "tree/leetcode_Closest_Binary_Search_Tree_Value_II.py",
    "tree/leetcode_Construct_Binary_Tree_from_Inorder_and_Postorder_Traversal.java",
    "tree/leetcode_Construct_Binary_Tree_from_Preorder_and_Inorder_Traversal.java",
    "tree/leetcode_Convert_Sorted_Array_to_Binary_Search_Tree.java",
    "tree/leetcode_Convert_Sorted_List_to_Binary_Search_Tree.java",
    "tree/leetcode_Count_Complete_Tree_Nodes.py",
    "tree/leetcode_Count_Univalue_Subtrees.py",
    "tree/leetcode_Flatten_Binary_Tree_to_Linked_List.java",
    "tree/leetcode_Flatten_Binary_Tree_to_Linked_List.py",
    "tree/leetcode_Implement_Trie_Prefix_Tree.py",
    "tree/leetcode_Inorder_Successor_In_BST.py",
    "tree/leetcode_Invert_Binary_Tree.py",
    "tree/leetcode_Kth_Smallest_Element_In_A_BST.py",
    "tree/leetcode_Largest_BST_Subtree.py",
    "tree/leetcode_Lowest_Common_Ancestor_Of_A_Binary_Search_Tree.py",
    "tree/leetcode_Lowest_Common_Ancestor_Of_A_Binary_Tree.py",
    "tree/leetcode_Maximum_Depth_of_Binary_Tree.cpp",
    "tree/leetcode_Maximum_Depth_of_Binary_Tree.java",
    "tree/leetcode_Minimum_Depth_of_Binary_Tree.java",
    "tree/leetcode_Minimum_Height_Tree.py",
    "tree/leetcode_Odd_Even_Linked_list.py",
    "tree/leetcode_Path_Sum.java",
    "tree/leetcode_Path_Sum_II.java",
    "tree/leetcode_Populating_Next_Right_Pointers_in_Each_Node.py",
    "tree/leetcode_Populating_Next_Right_Pointers_in_Each_Node_II.java",
    "tree/leetcode_Populating_Next_Right_Pointers_in_Each_Node_II.py",
    "tree/leetcode_Range_Sum_Query_Mutable.py",
    "tree/leetcode_Recover_Binary_Search_Tree.java",
    "tree/leetcode_Same_Tree.cpp",
    "tree/leetcode_Same_Tree.java",
    "tree/leetcode_Serialize_And_Deserialize_Binary_Tree.py",
    "tree/leetcode_Sum_Root_to_Leaf_Numbers.java",
    "tree/leetcode_Sum_Root_to_Leaf_Numbers.py",
    "tree/leetcode_Symmetric_Tree.cpp",
    "tree/leetcode_Symmetric_Tree.java",
    "tree/leetcode_Unique_Binary_Search_Trees_II.cpp",
    "tree/leetcode_Unique_Binary_Search_Trees_II.java",
    "tree/leetcode_Validate_Binary_Search_Tree.java",
    "tree/leetcode_Verify_Preorder_Sequence_In_Binary_Search_Tree.py",
    "tree/leetcode_Verify_Preorder_Serialization_Of_A_Binary_Tree.py",
    "tree/leetcode_construct_string_from_binary_tree.rs",
    "tree/leetcode_deepest_leaves_sum.rs",
    "tree/leetcode_find_node_in_binary_search_tree.rs",
    "tree/leetcode_house_robber_iii.rs",
    "tree/leetcode_longest_univalue_path.rs",
    "tree/leetcode_path_sum_iii.rs",
    "tree/leetcode_second_minimum_node_in_a_binary_tree.rs",
    "tree/leetcode_subtree_of_another_tree.rs",
    "tree/linkedin_Are_Two_Mirror_Tree.java",
    "tree/linkedin_Binary_Search_Tree_Detele_Node.java",
    "tree/linkedin_Binary_Search_Tree_Iterater.java",
    "tree/next_node_in_inorder_traversal.py",
    "tree/rust_bfs.rs",
    "tree/segment_tree.py",
    "tree/suffix_tree.py"
]
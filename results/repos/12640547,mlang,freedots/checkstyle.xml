<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">

  <property name="severity" value="warning"/>

  <!--module name="SuppressionFilter">
    <property name="file" value="checkstyle-suppressions.xml"/>
  </module-->

  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- Checks that a package-info.java file exists for each package.     -->
  <module name="JavadocPackage"/>

  <module name="FileLength"/>

  <!-- Checks for Headers                                -->
  <!-- See http://checkstyle.sf.net/config_header.html   -->
  <module name="Header">
    <property name="headerFile"
	      value="${basedir}/java.header"/>
  </module>

  <!-- Checks whether files end with a new line.                        -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile"/>

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation"/>


  <module name="TreeWalker">

    <property name="tabWidth" value="8" />

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocMethod">
      <property name="scope" value="public"/>
    </module>
    <module name="JavadocType">
      <property name="scope" value="public"/>
    </module>
    <!--module name="JavadocVariable">
      <property name="scope" value="public"/>
    </module-->
    <module name="JavadocStyle">
      <property name="scope" value="public"/>
    </module>


    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>


    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module name="RegexpHeader"/>                                -->


    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>


    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength"/>
    <module name="MethodLength"/>
    <module name="ParameterNumber"/>


    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <!--module name="OperatorWrap"/-->
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <!--module name="TabCharacter"/-->
    <module name="WhitespaceAfter">
      <property name="tokens" value="COMMA, SEMI"/>
    </module>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN"/>
    </module>


    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>


    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock"/>
    <!--module name="LeftCurly"/-->
    <module name="NeedBraces">
      <property name="tokens" value="LITERAL_DO"/>
    </module>
    <!--module name="RightCurly"/-->


    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <!--module name="AvoidInlineConditionals"/-->
    <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <!--module name="HiddenField"/-->
    <module name="IllegalInstantiation"/>
    <!--module name="MagicNumber"/-->
    <module name="MissingSwitchDefault"/>
    <module name="RedundantThrows"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>


    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <!--module name="DesignForExtension"/-->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <module name="FinalParameters">
      <property name="tokens" value="CTOR_DEF"/>
    </module>
    <module name="TodoComment"/>
    <module name="UpperEll"/>

    <!--module name="ExplicitInitialization"/-->
    <module name="UnnecessaryParentheses"/>
    <module name="StringLiteralEquality"/>
    <module name="ClassFanOutComplexity"/>
    <module name="CyclomaticComplexity">
      <property name="max" value="11"/>
    </module>
    <module name="NPathComplexity"/>
  </module>
</module>

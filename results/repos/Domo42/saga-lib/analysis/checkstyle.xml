<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">

    <property name="localeCountry" value="GB"/>
    <property name="localeLanguage" value="en"/>

    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that each Java package has a Javadoc file used for commenting. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage       -->
    <!-- module name="JavadocPackage">
        <property name="allowLegacy" value="true"/>
    </module -->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <module name="FileLength">
        <property name="max" value="2000"/>
    </module>

    <!-- <module name="RegexpHeader"/>                                -->

    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="RegexpSingleline">
        <!-- \s matches whitespace character, $ matches end of line. -->
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="SuppressionFilter">
	<!--
	<property name="file" value="/code-checks/checkstyle-suppression.xml" />
	-->
    </module>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">

            <property name="scope" value="protected" />
            <property name="allowMissingParamTags" value="true" />
            <property name="allowMissingReturnTag" value="true" />

            <!--
            <property name="excludeScope" value="private" />
            <property name="allowMissingThrowsTags" value="true" />
            <property name="allowMissingPropertyJavadoc" value="true" />
            -->
        </module>

        <module name="JavadocType"/>

        <module name="JavadocVariable">
            <property name="scope" value="protected" />
            <!-- property name="excludeScope" value="private" /-->
        </module>

        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="true" />
            <!-- <property name="scope" value="private" /> -->
            <!-- <property name="excludeScope" value="private" /> -->
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="160" />
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <!-- module name="ModifierOrder"/ -->
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
            <property name="option" value="eol" />
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="option" value="same" />
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--module name="AvoidInlineConditionals"/-->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreSetter" value="true" />
			<property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- module name="DesignForExtension"/ -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="UpperEll"/>

        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
        </module>

        <module name="MissingOverride"/>
        <module name="ExecutableStatementCount"/>
        <module name="SuperClone"/>
        <module name="ReturnCount">
            <property name="max" value="1"/>
        </module>
        <module name="TrailingComment" />

        <!-- Do not allow multiple empty lines -->
        <module name="Regexp">
            <property name="format" value="^\s*$\n^\s*$" />
            <property name="illegalPattern" value="true" />
            <property name="message" value="Found more than one consecutive empty line." />
        </module>

        <!-- Do not allow an empty line between 2 closing curly brackets -->
        <module name="Regexp">
            <property name="format" value="}\n^\s*$\n^\s*}" />
            <property name="illegalPattern" value="true" />
            <property name="message" value="Found an empty line between two closing curly brackets." />
        </module>

        <!-- An ELOC must be separated from an earlier closing curly bracket with an empty line. -->
        <module name="Regexp">
            <property name="format" value="}$\n^[ \t\x0B\f]*(?!((else)|(catch)))\w" />
            <property name="illegalPattern" value="true" />
            <property name="message" value="Closing curly bracket and instructions must be separated by an empty line." />
        </module>

        <!-- A closing curly bracket must no be preceded by an empty line. -->
        <module name="Regexp">
            <property name="format" value="^\s*$\n^\s*}" />
            <property name="illegalPattern" value="true" />
            <property name="message" value="Found an empty line before a closing curly bracket." />
        </module>

    </module>

</module>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
    Checkstyle-Configuration: LocalCheckstyle
    Description: none
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
    <module name="FileContentsHolder"/>
    <module name="JavadocType">
      <property name="severity" value="ignore"/>
      <property name="scope" value="public"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>
    <module name="EqualsAvoidNull">
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalImport"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>
    <module name="LineLength">
      <property name="max" value="140"/>
    </module>
    <module name="MethodLength">
      <property name="severity" value="error"/>
      <property name="max" value="400"/>
    </module>
    <module name="MethodLength">
      <property name="severity" value="warning"/>
      <property name="max" value="200"/>
    </module>
    <module name="ParameterNumber">
      <property name="max" value="8"/>
    </module>
    <module name="AnonInnerLength"/>
    <module name="EmptyForIteratorPad"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap">
      <property name="tokens" value="BAND,BOR,BSR,BXOR,COLON,DIV,EQUAL,GE,GT,LAND,LE,LITERAL_INSTANCEOF,LOR,LT,MINUS,MOD,NOT_EQUAL,QUESTION,SL,SR,STAR"/>
    </module>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <module name="WhitespaceAfter">
      <property name="severity" value="error"/>
      <property name="tokens" value="COMMA,SEMI"/>
    </module>
    <module name="WhitespaceAround">
      <property name="severity" value="error"/>
      <property name="tokens" value="BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN"/>
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
    </module>
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="NeedBraces"/>
    <module name="RightCurly"/>
    <module name="CovariantEquals"/>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF"/>
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean"/>
    </module>
    <module name="IllegalToken">
      <property name="tokens" value="BAND, BNOT, BOR, BXOR"/>
    </module>
    <module name="IllegalType"/>
    <module name="InnerAssignment"/>
    <module name="JUnitTestCase"/>
    <module name="MagicNumber">
      <property name="ignoreNumbers" value="-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 24, 30, 60, 1000, 1024"/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="ModifiedControlVariable"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="UnnecessaryParentheses"/>
    <module name="NestedIfDepth">
      <property name="max" value="4"/>
    </module>
    <module name="NestedIfDepth">
      <property name="severity" value="warning"/>
      <property name="max" value="3"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="2"/>
    </module>
    <module name="PackageDeclaration"/>
    <module name="ReturnCount">
      <property name="max" value="16"/>
    </module>
    <module name="ReturnCount">
      <property name="severity" value="warning"/>
      <property name="max" value="5"/>
    </module>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>
    <module name="CyclomaticComplexity">
      <property name="severity" value="error"/>
      <property name="max" value="20"/>
    </module>
    <module name="CyclomaticComplexity">
      <property name="severity" value="warning"/>
      <property name="max" value="18"/>
    </module>
    <module name="ClassFanOutComplexity">
      <property name="severity" value="error"/>
      <property name="max" value="150"/>
    </module>
    <module name="ClassFanOutComplexity">
      <property name="severity" value="warning"/>
      <property name="max" value="50"/>
    </module>
    <module name="JavaNCSS">
      <property name="severity" value="error"/>
      <property name="methodMaximum" value="100"/>
      <property name="fileMaximum" value="1700"/>
    </module>
    <module name="JavaNCSS">
      <property name="severity" value="warning"/>
      <property name="classMaximum" value="1200"/>
      <property name="fileMaximum" value="1300"/>
    </module>
    <module name="ArrayTypeStyle"/>
    <module name="TodoComment"/>
    <module name="UncommentedMain">
      <property name="excludedClasses" value="\.Test\.$"/>
    </module>
    <module name="UpperEll"/>
  </module>
  <module name="FileLength">
    <property name="severity" value="error"/>
    <property name="max" value="4000"/>
  </module>
  <module name="FileLength">
    <property name="severity" value="warning"/>
  </module>
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="System\.out\.println"/>
    <property name="message" value="Do not print out to sysout. Use a logger."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="System\.err\.println"/>
    <property name="message" value="Do not print out to syserr. Use a logger."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="\.printStackTrace\(\)"/>
    <property name="message" value="Do not print stacktrace. Log/handle it correctly"/>
  </module>
  <module name="RegexpSingleline">
    <property name="severity" value="warning"/>
    <property name="format" value="(?&lt;!@.{0,140}?\(.{0,140}?=\s{0,140}?)&quot;com\.youdevise\.[a-zA-Z\.]*&quot;"/>
    <property name="message" value="Do not create a string for a class name. Use 'class'.class.getName() instead. This helps with refactoring"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="\/\* *package *\*\/"/>
    <property name="message" value="Don't ever have a comment of /* package */"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="CHECKSTYLE_OFF:\s*Javadoc"/>
    <property name="message" value="Don't disable javadoc. You only need a comment for a class!"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="java\.text\..*DateFormat"/>
    <property name="message" value="Use our own DateFormatter, which is threadsafe"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*Date\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="Calendar.getInstance\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="System.currentTimeMillis\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*DateTime\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*LocalDate\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*LocalDateTime\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*LocalTime\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="new\s\s*DateMidnight\(\)"/>
    <property name="message" value="Use DateUtils.getNow(). This allows us to change 'now'"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="DateTimeUtils.setCurrentMillisFixed"/>
    <property name="message" value="Don't adjust the time!"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="Thread.sleep"/>
    <property name="message" value="Don't sleep. This is bad."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="\/\* *package *\*\/"/>
    <property name="message" value="Don't ever have a comment of /* package */"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value=".*static.* NumberFormat "/>
    <property name="message" value="Number format is not thread safe. Don't create a static instance of one."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value=".*static.* DecimalFormat "/>
    <property name="message" value="Decimal format is not thread safe. Don't create a static instance of one."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="@SuppressWarnings\(&quot;deprecation&quot;\)"/>
    <property name="message" value="Suppressing deprecation warnings is not the way to fix them."/>
  </module>
  <module name="SuppressionCommentFilter">
    <property name="offCommentFormat" value="CHECKSTYLE_OFF\: ([\w\|]+)"/>
    <property name="onCommentFormat" value="CHECKSTYLE_ON\: ([\w\|]+)"/>
    <property name="checkFormat" value="$1"/>
  </module>
  <module name="SuppressionFilter">
    <property name="file" value="${basedir}/config/checkstyle/checkstyle_suppressions.xml"/>
  </module>
</module>

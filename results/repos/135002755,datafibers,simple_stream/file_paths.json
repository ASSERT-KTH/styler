[
    ".gitignore",
    "README.md",
    "build_and_run.sh",
    "df_connect_finance",
    "df_connect_finance/README.md",
    "df_connect_finance/config",
    "df_connect_finance/config/connect-finance-source.properties",
    "df_connect_finance/pom.xml",
    "df_connect_finance/src",
    "df_connect_finance/src/main",
    "df_connect_finance/src/main/java",
    "df_connect_finance/src/main/java/com",
    "df_connect_finance/src/main/java/com/datafibers",
    "df_connect_finance/src/main/java/com/datafibers/kafka",
    "df_connect_finance/src/main/java/com/datafibers/kafka/connect",
    "df_connect_finance/src/main/java/com/datafibers/kafka/connect/FinanceSourceConnector.java",
    "df_connect_finance/src/main/java/com/datafibers/kafka/connect/FinanceSourceTask.java",
    "df_connect_finance/src/main/java/com/datafibers/kafka/connect/YahooFinanceStockHelper.java",
    "df_connect_finance/target",
    "df_connect_finance/target/maven-archiver",
    "df_connect_finance/target/maven-archiver/pom.properties",
    "df_connect_finance/target/maven-status",
    "df_connect_finance/target/maven-status/maven-compiler-plugin",
    "df_connect_finance/target/maven-status/maven-compiler-plugin/compile",
    "df_connect_finance/target/maven-status/maven-compiler-plugin/compile/default-compile",
    "df_connect_finance/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst",
    "df_connect_finance/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst",
    "df_simple_stream.iml",
    "df_stream_flink",
    "df_stream_flink/.gitignore",
    "df_stream_flink/README.md",
    "df_stream_flink/pom.xml",
    "df_stream_flink/src",
    "df_stream_flink/src/main",
    "df_stream_flink/src/main/java",
    "df_stream_flink/src/main/java/com",
    "df_stream_flink/src/main/java/com/datafibers",
    "df_stream_flink/src/main/java/com/datafibers/flink",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/kafka",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/kafka/Kafka010Example.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/kafka/KafkaEvent.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/kafka/KafkaEventSchema.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/socket",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/socket/SocketWindowWordCount.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/GroupedProcessingTimeWindowExample.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/SessionWindowing.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/TopSpeedWindowing.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/WindowWordCount.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/util",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/util/SessionWindowingData.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/windowing/util/TopSpeedWindowingExampleData.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/wordcount",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/wordcount/WordCount.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/wordcount/util",
    "df_stream_flink/src/main/java/com/datafibers/flink/stream_api/wordcount/util/WordCountData.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/ComplexSQLExamples.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/ExplainingTable.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/SimpleSQLExample.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/WordCountSQL.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/WordCountTable.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util/ImpressionSource.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util/ItemsSource.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util/PageViewsSource.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util/SensorSource.java",
    "df_stream_flink/src/main/java/com/datafibers/flink/table_api/util/WatermarkAssigner.java",
    "df_stream_kafka",
    "df_stream_kafka/.gitignore",
    "df_stream_kafka/README.md",
    "df_stream_kafka/df_stream_kafka.iml",
    "df_stream_kafka/pom.xml",
    "df_stream_kafka/src",
    "df_stream_kafka/src/main",
    "df_stream_kafka/src/main/java",
    "df_stream_kafka/src/main/java/com",
    "df_stream_kafka/src/main/java/com/datafibers",
    "df_stream_kafka/src/main/java/com/datafibers/kafka",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/AnomalyDetectionLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/ApplicationResetExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/GlobalKTablesExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/GlobalKTablesExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/MapFunctionLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/PageViewRegionExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/PageViewRegionExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/PageViewRegionLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/SecureKafkaStreamsExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/SessionWindowsExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/SessionWindowsExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/StockAvroExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/StockAvroExample2.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/SumLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/SumLambdaExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/TopArticlesExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/TopArticlesLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/UserRegionLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/WikipediaFeedAvroExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/WikipediaFeedAvroExampleDriver.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/WikipediaFeedAvroLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/WordCountLambdaExample.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/utils",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/utils/PriorityQueueDeserializer.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/utils/PriorityQueueSerde.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/utils/PriorityQueueSerializer.java",
    "df_stream_kafka/src/main/java/com/datafibers/kafka/streams/utils/WindowedSerde.java",
    "df_stream_kafka/src/main/resources",
    "df_stream_kafka/src/main/resources/avro",
    "df_stream_kafka/src/main/resources/avro/com",
    "df_stream_kafka/src/main/resources/avro/com/datafibers",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/global-tables-example.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/pageview.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/pageviewregion.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/pageviewstats.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/playevent.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/song.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/songplaycount.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/stock.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/stockcount.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/userprofile.avsc",
    "df_stream_kafka/src/main/resources/avro/com/datafibers/kafka/streams/wikifeed.avsc",
    "df_stream_kafka/src/main/resources/log4j.properties",
    "df_stream_kafka/src/main/resources/song_source.csv",
    "df_stream_kafka/src/main/scala",
    "df_stream_kafka/src/main/scala/com",
    "df_stream_kafka/src/main/scala/com/datafibers",
    "df_stream_kafka/src/main/scala/com/datafibers/kafka",
    "df_stream_kafka/src/main/scala/com/datafibers/kafka/streams",
    "df_stream_kafka/src/main/scala/com/datafibers/kafka/streams/Consumer.scala",
    "df_stream_kafka/src/main/scala/com/datafibers/kafka/streams/Producer.scala",
    "df_stream_kafka/src/main/sql",
    "df_stream_kafka/src/main/sql/KSQL_DEMO_CityBike.md",
    "df_stream_kafka/src/main/sql/KSQL_DEMO_Stock.md",
    "df_stream_kafka/src/test",
    "df_stream_kafka/src/test/java",
    "df_stream_kafka/src/test/java/com",
    "df_stream_kafka/src/test/java/com/datafibers",
    "df_stream_kafka/src/test/java/com/datafibers/kafka",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/ApplicationResetIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/EventDeduplicationLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/FanoutLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/GenericAvroIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/GlobalKTablesExampleTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/HandlingCorruptedInputRecordsIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/IntegrationTestUtils.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/JoinLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/MapFunctionLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/MixAndMatchLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/PassThroughIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/SessionWindowsExampleTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/SpecificAvroIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/StateStoresInTheDSLIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/StreamToStreamJoinIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/StreamToTableJoinIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/SumLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/TableToTableJoinIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/TopArticlesLambdaExampleTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/UserCountsPerRegionLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/ValidateStateWithInteractiveQueriesLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/WikipediaFeedAvroExampleTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/WikipediaFeedAvroLambdaExampleTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/WordCountLambdaIntegrationTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/kafka",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/kafka/EmbeddedSingleNodeKafkaCluster.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/kafka/KafkaEmbedded.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/utils",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/utils/PriorityQueueSerdeTest.java",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/zookeeper",
    "df_stream_kafka/src/test/java/com/datafibers/kafka/streams/zookeeper/ZooKeeperEmbedded.java",
    "df_stream_kafka/src/test/resources",
    "df_stream_kafka/src/test/resources/log4j.properties",
    "df_stream_spark",
    "df_stream_spark/.gitignore",
    "df_stream_spark/README.md",
    "df_stream_spark/df_stream_spark.iml",
    "df_stream_spark/pom.xml",
    "pom.xml"
]
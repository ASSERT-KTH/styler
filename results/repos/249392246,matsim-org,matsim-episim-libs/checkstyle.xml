<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="SuppressWarningsFilter"/>

    <module name="SeverityMatchFilter">
        <property name="severity" value="info"/>
        <property name="acceptOnMatch" value="false"/>
    </module>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="TreeWalker">

        <property name="severity" value="error"/>

        <!-- This only fails if at least 4 spaces have been used somewhere -->
        <!-- Generally, this allows to still use the "smart tabs" feature for certain code alignments -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t* {4,}"/>
            <property name="message" value="Indent must use tab characters"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <!-- Needed to suppress warnings if needed -->
        <module name="SuppressWarningsHolder"/>
        <module name="SuppressWithNearbyCommentFilter"/>
        <module name="SuppressionCommentFilter"/>

        <!-- Block checks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>


        <!-- Class design -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
            <property name="packageAllowed" value="true"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="allowPublicImmutableFields" value="true"/>
        </module>


        <!-- Coding -->
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder">
            <property name="ignoreModifiers" value="true"/>
        </module>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="FallThrough"/>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>
        <module name="IllegalType">
            <property name="ignoredMethodNames" value="getInstance"/>
        </module>
        
        <module name="IllegalType">
            <property name="illegalClassNames" value="org.apache.log4j.Logger,org.slf4j.Logger"/>
            <message key="illegal.type" value="Use new Logging API: org.apache.logging.log4j.Logger / LogManager"/>
        </module>

        <module name="IllegalType">
            <property name="illegalClassNames" value="java.util.Random"/>
            <message key="illegal.type" value="Use java.util.SplittableRandom for better performance and randomness"/>
        </module>

        <module name="IllegalType">
            <property name="illegalClassNames" value="com.google.inject.Singleton"/>
            <message key="illegal.type" value="Use javax.inject.Singleton"/>
        </module>
        
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <!-- Very high because some code violates it -->
            <property name="max" value="7"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NoArrayTrailingComma"/>
        <module name="NoClone"/>
        <module name="NoEnumTrailingComma"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>


        <!-- Imports -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- JavaDoc -->
        <module name="AtclauseOrder"/>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocContentLocationCheck"/>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
        </module>
        <module name="JavadocType">
            <property name="scope" value="protected"/>
            <property name="allowMissingParamTags" value="true"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="scope" value="protected"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowedAnnotations" value="Override,Inject,Provides"/>
            <!-- Relaxed check on common names -->
            <property name="ignoreMethodNamesRegex" value="^(is|get|set|remove|add|new|create|main).*$"/>
        </module>
        <module name="MissingJavadocType">
            <property name="scope" value="public"/>
            <property name="skipAnnotations" value="Generated"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>


        <!-- Metrics -->
        <module name="JavaNCSS">
            <property name="methodMaximum" value="70"/>
            <property name="classMaximum" value="800"/>
            <property name="fileMaximum" value="1000"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
            <property name="max" value="20"/>
        </module>


        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters"/>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <!-- High priority comments -->
            <property name="format" value="yyyyyy"/>
            <message key="todo.match" value="Address this issue or reduce severity (yyyy)"/>
        </module>
        <module name="UpperEll"/>


        <!-- Modifier -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Naming conventions -->
        <module name="AbbreviationAsWordInName"/>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName">
            <!-- Only public constants are checked -->
            <property name="applyToProtected" value="false"/>
            <property name="applyToPackage" value="false"/>
            <property name="applyToPrivate" value="false"/>
        </module>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
            <!-- Underscores are allowed -->
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName">
            <!-- Underscores are allowed -->
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <!--
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        -->
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>


    </module>
</module>

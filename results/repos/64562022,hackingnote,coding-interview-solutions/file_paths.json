[
    ".bookignore",
    ".gitignore",
    "README.md",
    "SUMMARY.md",
    "book.json",
    "build",
    "build/README.md",
    "build/copy.js",
    "build/create_problems.js",
    "build/create_readme.js",
    "build/create_summary.js",
    "build/finished.txt",
    "build/google-java-format-1.6.jar",
    "build/index_table.md",
    "build/parse_index.js",
    "build/parse_raw.js",
    "build/problems.json",
    "cpp",
    "cpp/patching-array",
    "cpp/patching-array/Solution.cpp",
    "cpp/rotate-array",
    "cpp/rotate-array/Solution.cpp",
    "java",
    "java/3sum-closest",
    "java/3sum-closest/Solution.java",
    "java/3sum",
    "java/3sum/Solution.java",
    "java/4sum",
    "java/4sum/Solution.java",
    "java/a-b-problem",
    "java/a-b-problem/Solution.java",
    "java/add-and-search-word",
    "java/add-and-search-word/Solution.java",
    "java/add-binary",
    "java/add-binary/Solution.java",
    "java/add-digits",
    "java/add-digits/Solution.java",
    "java/add-two-numbers",
    "java/add-two-numbers/Solution.java",
    "java/anagrams",
    "java/anagrams/Solution.java",
    "java/backpack-ii",
    "java/backpack-ii/Solution.java",
    "java/backpack-vi",
    "java/backpack-vi/Solution.java",
    "java/backpack",
    "java/backpack/Solution.java",
    "java/balanced-Lineup",
    "java/balanced-Lineup/Solution.java",
    "java/balanced-binary-tree",
    "java/balanced-binary-tree/Solution.java",
    "java/best-time-to-buy-and-sell-stock-ii",
    "java/best-time-to-buy-and-sell-stock-ii/Solution.java",
    "java/best-time-to-buy-and-sell-stock-iii",
    "java/best-time-to-buy-and-sell-stock-iii/Solution.java",
    "java/best-time-to-buy-and-sell-stock",
    "java/best-time-to-buy-and-sell-stock/Solution.java",
    "java/binary-representation",
    "java/binary-representation/Solution.java",
    "java/binary-search-tree-iterator",
    "java/binary-search-tree-iterator/Solution.java",
    "java/binary-tree-inorder-traversal",
    "java/binary-tree-inorder-traversal/Solution.java",
    "java/binary-tree-level-order-traversal-ii",
    "java/binary-tree-level-order-traversal-ii/Solution.java",
    "java/binary-tree-level-order-traversal",
    "java/binary-tree-level-order-traversal/Solution.java",
    "java/binary-tree-maximum-path-sum",
    "java/binary-tree-maximum-path-sum/Solution.java",
    "java/binary-tree-path-sum",
    "java/binary-tree-path-sum/Solution.java",
    "java/binary-tree-paths",
    "java/binary-tree-paths/Solution.java",
    "java/binary-tree-postorder-traversal",
    "java/binary-tree-postorder-traversal/Solution.java",
    "java/binary-tree-preorder-traversal",
    "java/binary-tree-preorder-traversal/Solution.java",
    "java/binary-tree-serialization",
    "java/binary-tree-serialization/Solution.java",
    "java/binary-tree-zigzag-level-order-traversal",
    "java/binary-tree-zigzag-level-order-traversal/Solution.java",
    "java/candy",
    "java/candy/Solution.java",
    "java/climbing-stairs",
    "java/climbing-stairs/Solution.java",
    "java/clone-binary-tree",
    "java/clone-binary-tree/Solution.java",
    "java/clone-graph",
    "java/clone-graph/Solution.java",
    "java/coins-in-a-line",
    "java/coins-in-a-line/Solution.java",
    "java/combination-sum-ii",
    "java/combination-sum-ii/Solution.java",
    "java/combination-sum",
    "java/combination-sum/Solution.java",
    "java/combinations",
    "java/combinations/Solution.java",
    "java/compare-strings",
    "java/compare-strings/Solution.java",
    "java/construct-binary-tree-from-inorder-and-postorder-traversal",
    "java/construct-binary-tree-from-inorder-and-postorder-traversal/Solution.java",
    "java/construct-binary-tree-from-preorder-and-inorder-traversal",
    "java/construct-binary-tree-from-preorder-and-inorder-traversal/Solution.java",
    "java/container-with-most-water",
    "java/container-with-most-water/Solution.java",
    "java/continuous-subarray-sum",
    "java/continuous-subarray-sum/Solution.java",
    "java/convert-binary-search-tree-to-doubly-linked-list",
    "java/convert-binary-search-tree-to-doubly-linked-list/Solution.java",
    "java/convert-sorted-array-to-binary-search-tree-with-minimal-height",
    "java/convert-sorted-array-to-binary-search-tree-with-minimal-height/Solution.java",
    "java/convert-sorted-list-to-balanced-bst",
    "java/convert-sorted-list-to-balanced-bst/Solution.java",
    "java/copy-list-with-random-pointer",
    "java/copy-list-with-random-pointer/Solution.java",
    "java/cosine-similarity",
    "java/cosine-similarity/Solution.java",
    "java/count-1-in-binary",
    "java/count-1-in-binary/Solution.java",
    "java/count-and-say",
    "java/count-and-say/Solution.java",
    "java/data-stream-median",
    "java/data-stream-median/Solution.java",
    "java/decode-ways",
    "java/decode-ways/Solution.java",
    "java/delete-digits",
    "java/delete-digits/Solution.java",
    "java/delete-node-in-the-middle-of-singly-linked-list",
    "java/delete-node-in-the-middle-of-singly-linked-list/Solution.java",
    "java/distinct-subsequences",
    "java/distinct-subsequences/Solution.java",
    "java/edit-distance",
    "java/edit-distance/Solution.java",
    "java/evaluate-reverse-polish-notation",
    "java/evaluate-reverse-polish-notation/Solution.java",
    "java/fast-power",
    "java/fast-power/Solution.java",
    "java/fibonacci",
    "java/fibonacci/Solution.java",
    "java/find-minimum-in-rotated-sorted-array-ii",
    "java/find-minimum-in-rotated-sorted-array-ii/Solution.java",
    "java/find-minimum-in-rotated-sorted-array",
    "java/find-minimum-in-rotated-sorted-array/Solution.java",
    "java/find-peak-element",
    "java/find-peak-element/Solution.java",
    "java/find-the-missing-number",
    "java/find-the-missing-number/Solution.java",
    "java/first-bad-version",
    "java/first-bad-version/Solution.java",
    "java/first-missing-positive",
    "java/first-missing-positive/Solution.java",
    "java/first-position-of-target",
    "java/first-position-of-target/Solution.java",
    "java/fizz-buzz",
    "java/fizz-buzz/Solution.java",
    "java/flatten-binary-tree-to-linked-list",
    "java/flatten-binary-tree-to-linked-list/Solution.java",
    "java/flatten-list",
    "java/flatten-list/Solution.java",
    "java/flip-bits",
    "java/flip-bits/Solution.java",
    "java/flip-bits/Solution2.java",
    "java/gas-station",
    "java/gas-station/Solution.java",
    "java/generate-parentheses",
    "java/generate-parentheses/Solution.java",
    "java/graph-valid-tree",
    "java/graph-valid-tree/Solution.java",
    "java/gray-code",
    "java/gray-code/Solution.java",
    "java/happy-number",
    "java/happy-number/Solution.java",
    "java/hash-function",
    "java/hash-function/Solution.java",
    "java/heapify",
    "java/heapify/Solution.java",
    "java/house-robber-ii",
    "java/house-robber-ii/Solution.java",
    "java/house-robber-iii",
    "java/house-robber-iii/Solution.java",
    "java/house-robber",
    "java/house-robber/Solution.java",
    "java/identical-binary-tree",
    "java/identical-binary-tree/Solution.java",
    "java/implement-queue-by-two-stacks",
    "java/implement-queue-by-two-stacks/Solution.java",
    "java/implement-trie",
    "java/implement-trie/Solution.java",
    "java/insert-interval",
    "java/insert-interval/Solution.java",
    "java/insert-node-in-a-binary-search-tree",
    "java/insert-node-in-a-binary-search-tree/Solution.java",
    "java/insertion-sort-list",
    "java/insertion-sort-list/Solution.java",
    "java/integer-to-roman",
    "java/integer-to-roman/Solution.java",
    "java/interleaving-positive-and-negative-numbers",
    "java/interleaving-positive-and-negative-numbers/Solution.java",
    "java/interleaving-string",
    "java/interleaving-string/Solution.java",
    "java/intersection-of-two-arrays-ii",
    "java/intersection-of-two-arrays-ii/Solution.java",
    "java/intersection-of-two-arrays",
    "java/intersection-of-two-arrays/Solution.java",
    "java/intersection-of-two-linked-lists",
    "java/intersection-of-two-linked-lists/Solution.java",
    "java/interval-minimum-number",
    "java/interval-minimum-number/Solution.java",
    "java/interval-sum",
    "java/interval-sum/Solution.java",
    "java/invert-binary-tree",
    "java/invert-binary-tree/Solution.java",
    "java/jump-game-ii",
    "java/jump-game-ii/Solution.java",
    "java/jump-game",
    "java/jump-game/Solution.java",
    "java/kth-largest-element",
    "java/kth-largest-element/Solution.java",
    "java/kth-smallest-number-in-sorted-matrix",
    "java/kth-smallest-number-in-sorted-matrix/Solution.java",
    "java/largest-number",
    "java/largest-number/Solution.java",
    "java/left-pad",
    "java/left-pad/Solution.java",
    "java/length-of-last-word",
    "java/length-of-last-word/Solution.java",
    "java/letter-combinations-of-a-phone-number",
    "java/letter-combinations-of-a-phone-number/Solution.java",
    "java/linked-list-cycle-ii",
    "java/linked-list-cycle-ii/Solution.java",
    "java/linked-list-cycle",
    "java/linked-list-cycle/Solution.java",
    "java/lonely-integer",
    "java/lonely-integer/Solution.java",
    "java/longest-common-prefix",
    "java/longest-common-prefix/Solution.java",
    "java/longest-common-subsequence",
    "java/longest-common-subsequence/Solution.java",
    "java/longest-common-substring",
    "java/longest-common-substring/Solution.java",
    "java/longest-consecutive-sequence",
    "java/longest-consecutive-sequence/Solution.java",
    "java/longest-increasing-continuous-subsequence",
    "java/longest-increasing-continuous-subsequence/Solution.java",
    "java/longest-increasing-subsequence",
    "java/longest-increasing-subsequence/Solution.java",
    "java/longest-palindromic-substring",
    "java/longest-palindromic-substring/Solution.java",
    "java/longest-substring-without-repeating-characters",
    "java/longest-substring-without-repeating-characters/Solution.java",
    "java/longest-words",
    "java/longest-words/Solution.java",
    "java/lowest-common-ancestor",
    "java/lowest-common-ancestor/Solution.java",
    "java/lru-cache",
    "java/lru-cache/Solution.java",
    "java/majority-number-ii",
    "java/majority-number-ii/Solution.java",
    "java/majority-number-iii",
    "java/majority-number-iii/Solution.java",
    "java/majority-number",
    "java/majority-number/Solution.java",
    "java/matrix-zigzag-traversal",
    "java/matrix-zigzag-traversal/Solution.java",
    "java/max-points-on-a-line",
    "java/max-points-on-a-line/Solution.java",
    "java/maximum-depth-of-binary-tree",
    "java/maximum-depth-of-binary-tree/Solution.java",
    "java/maximum-product-subarray",
    "java/maximum-product-subarray/Solution.java",
    "java/maximum-square",
    "java/maximum-square/Solution.java",
    "java/maximum-subarray-difference",
    "java/maximum-subarray-difference/Solution.java",
    "java/maximum-subarray-ii",
    "java/maximum-subarray-ii/Solution.java",
    "java/maximum-subarray",
    "java/maximum-subarray/Solution.java",
    "java/median",
    "java/median/Solution.java",
    "java/merge-intervals",
    "java/merge-intervals/Solution.java",
    "java/merge-k-sorted-lists",
    "java/merge-k-sorted-lists/Solution.java",
    "java/merge-sorted-array-ii",
    "java/merge-sorted-array-ii/Solution.java",
    "java/merge-sorted-array",
    "java/merge-sorted-array/Solution.java",
    "java/merge-two-sorted-lists",
    "java/merge-two-sorted-lists/Solution.java",
    "java/min-stack",
    "java/min-stack/Solution.java",
    "java/minimum-adjustment-cost",
    "java/minimum-adjustment-cost/Solution.java",
    "java/minimum-depth-of-binary-tree",
    "java/minimum-depth-of-binary-tree/Solution.java",
    "java/minimum-path-sum",
    "java/minimum-path-sum/Solution.java",
    "java/minimum-size-subarray-sum",
    "java/minimum-size-subarray-sum/Solution.java",
    "java/minimum-subarray",
    "java/minimum-subarray/Solution.java",
    "java/mock-hanoi-tower-by-stacks",
    "java/mock-hanoi-tower-by-stacks/Solution.java",
    "java/move-zeroes",
    "java/move-zeroes/Solution.java",
    "java/n-queens-ii",
    "java/n-queens-ii/Solution.java",
    "java/n-queens",
    "java/n-queens/Solution.java",
    "java/next-permutation",
    "java/next-permutation/Solution.java",
    "java/nth-to-last-node-in-list",
    "java/nth-to-last-node-in-list/Solution.java",
    "java/number-of-airplanes-in-the-sky",
    "java/number-of-airplanes-in-the-sky/Solution.java",
    "java/number-of-islands",
    "java/number-of-islands/Solution.java",
    "java/o1-check-power-of-2",
    "java/o1-check-power-of-2/Solution.java",
    "java/paint-fence",
    "java/paint-fence/Solution.java",
    "java/paint-house",
    "java/paint-house/Solution.java",
    "java/palindrome-linked-list",
    "java/palindrome-linked-list/Solution.java",
    "java/palindrome-partitioning",
    "java/palindrome-partitioning/Solution.java",
    "java/partition-array-by-odd-and-even",
    "java/partition-array-by-odd-and-even/Solution.java",
    "java/partition-array",
    "java/partition-array/Solution.java",
    "java/partition-list",
    "java/partition-list/Solution.java",
    "java/permutation-index",
    "java/permutation-index/Solution.java",
    "java/permutation-sequence",
    "java/permutation-sequence/Solution.java",
    "java/permutations-ii",
    "java/permutations-ii/Solution.java",
    "java/permutations",
    "java/permutations/Solution.java",
    "java/plus-one",
    "java/plus-one/Solution.java",
    "java/powx-n",
    "java/powx-n/Solution.java",
    "java/previous-permutation",
    "java/previous-permutation/Solution.java",
    "java/print-numbers-by-recursion",
    "java/print-numbers-by-recursion/Solution.java",
    "java/product-of-array-exclude-itself",
    "java/product-of-array-exclude-itself/Solution.java",
    "java/recover-rotated-sorted-array",
    "java/recover-rotated-sorted-array/Solution.java",
    "java/rehashing",
    "java/rehashing/Solution.java",
    "java/remove-duplicates-from-sorted-array-ii",
    "java/remove-duplicates-from-sorted-array-ii/Solution.java",
    "java/remove-duplicates-from-sorted-array",
    "java/remove-duplicates-from-sorted-array/Solution.java",
    "java/remove-duplicates-from-sorted-list-ii",
    "java/remove-duplicates-from-sorted-list-ii/Solution.java",
    "java/remove-duplicates-from-sorted-list",
    "java/remove-duplicates-from-sorted-list/Solution.java",
    "java/remove-element",
    "java/remove-element/Solution.java",
    "java/remove-linked-list-elements",
    "java/remove-linked-list-elements/Solution.java",
    "java/remove-node-in-binary-search-tree",
    "java/remove-node-in-binary-search-tree/Solution.java",
    "java/remove-nth-node-from-end-of-list",
    "java/remove-nth-node-from-end-of-list/Solution.java",
    "java/reorder-list",
    "java/reorder-list/Solution.java",
    "java/restore-ip-addresses",
    "java/restore-ip-addresses/Solution.java",
    "java/reverse-integer",
    "java/reverse-integer/Solution.java",
    "java/reverse-linked-list-ii",
    "java/reverse-linked-list-ii/Solution.java",
    "java/reverse-linked-list",
    "java/reverse-linked-list/Solution.java",
    "java/reverse-nodes-in-k-group",
    "java/reverse-nodes-in-k-group/Solution.java",
    "java/reverse-pairs",
    "java/reverse-pairs/Solution.java",
    "java/reverse-words-in-a-string",
    "java/reverse-words-in-a-string/Solution.java",
    "java/roman-to-integer",
    "java/roman-to-integer/Solution.java",
    "java/rotate-image",
    "java/rotate-image/Solution.java",
    "java/rotate-list",
    "java/rotate-list/Solution.java",
    "java/rotate-string",
    "java/rotate-string/Solution.java",
    "java/route-between-two-nodes-in-graph",
    "java/route-between-two-nodes-in-graph/Solution.java",
    "java/same-tree",
    "java/same-tree/Solution.java",
    "java/search-a-2d-matrix-ii",
    "java/search-a-2d-matrix-ii/Solution.java",
    "java/search-a-2d-matrix",
    "java/search-a-2d-matrix/Solution.java",
    "java/search-for-a-range",
    "java/search-for-a-range/Solution.java",
    "java/search-in-rotated-sorted-array-ii",
    "java/search-in-rotated-sorted-array-ii/Solution.java",
    "java/search-in-rotated-sorted-array",
    "java/search-in-rotated-sorted-array/Solution.java",
    "java/search-insert-position",
    "java/search-insert-position/Solution.java",
    "java/search-range-in-binary-search-tree",
    "java/search-range-in-binary-search-tree/Solution.java",
    "java/segment-tree-build-ii",
    "java/segment-tree-build-ii/Solution.java",
    "java/segment-tree-build",
    "java/segment-tree-build/Solution.java",
    "java/segment-tree-modify",
    "java/segment-tree-modify/Solution.java",
    "java/segment-tree-query-ii",
    "java/segment-tree-query-ii/Solution.java",
    "java/segment-tree-query",
    "java/segment-tree-query/Solution.java",
    "java/set-matrix-zeroes",
    "java/set-matrix-zeroes/Solution.java",
    "java/shape-factory",
    "java/shape-factory/Solution.java",
    "java/simplify-path",
    "java/simplify-path/Solution.java",
    "java/single-number-ii",
    "java/single-number-ii/Solution.java",
    "java/single-number-iii",
    "java/single-number-iii/Solution.java",
    "java/single-number",
    "java/single-number/Solution.java",
    "java/singleton",
    "java/singleton/Solution.java",
    "java/sort-color-ii",
    "java/sort-color-ii/Solution.java",
    "java/sort-color",
    "java/sort-color/Solution.java",
    "java/sort-integers-ii",
    "java/sort-integers-ii/Solution.java",
    "java/sort-integers",
    "java/sort-integers/Solution.java",
    "java/sort-letters-by-case",
    "java/sort-letters-by-case/Solution.java",
    "java/sort-list",
    "java/sort-list/Solution.java",
    "java/space-replacement",
    "java/space-replacement/Solution.java",
    "java/spiral-matrix-ii",
    "java/spiral-matrix-ii/Solution.java",
    "java/spiral-matrix",
    "java/spiral-matrix/Solution.java",
    "java/sqrtx",
    "java/sqrtx/Solution.java",
    "java/string-permutation",
    "java/string-permutation/Solution.java",
    "java/strstr",
    "java/strstr/Solution.java",
    "java/subarray-sum",
    "java/subarray-sum/Solution.java",
    "java/subsets-ii",
    "java/subsets-ii/Solution.java",
    "java/subsets",
    "java/subsets/Solution.java",
    "java/subtree",
    "java/subtree/Solution.java",
    "java/super-ugly-number",
    "java/super-ugly-number/Solution.java",
    "java/surrounded-regions",
    "java/surrounded-regions/Solution.java",
    "java/swap-nodes-in-pairs",
    "java/swap-nodes-in-pairs/Solution.java",
    "java/swap-two-nodes-in-linked-list",
    "java/swap-two-nodes-in-linked-list/Solution.java",
    "java/symmetric-tree",
    "java/symmetric-tree/Solution.java",
    "java/the-smallest-difference",
    "java/the-smallest-difference/Solution.java",
    "java/topological-sorting",
    "java/topological-sorting/Solution.java",
    "java/toy-factory",
    "java/toy-factory/Solution.java",
    "java/trailing-zeros",
    "java/trailing-zeros/Solution.java",
    "java/trapping-rain-water",
    "java/trapping-rain-water/Solution.java",
    "java/triangle",
    "java/triangle/Solution.java",
    "java/two-strings-are-anagrams",
    "java/two-strings-are-anagrams/Solution.java",
    "java/two-sum",
    "java/two-sum/Solution.java",
    "java/ugly-number-ii",
    "java/ugly-number-ii/Solution.java",
    "java/ugly-number",
    "java/ugly-number/Solution.java",
    "java/unique-binary-search-trees-ii",
    "java/unique-binary-search-trees-ii/Solution.java",
    "java/unique-binary-search-trees",
    "java/unique-binary-search-trees/Solution.java",
    "java/unique-characters",
    "java/unique-characters/Solution.java",
    "java/unique-paths-ii",
    "java/unique-paths-ii/Solution.java",
    "java/unique-paths",
    "java/unique-paths/Solution.java",
    "java/update-bits",
    "java/update-bits/Solution.java",
    "java/valid-palindrome",
    "java/valid-palindrome/Solution.java",
    "java/valid-parentheses",
    "java/valid-parentheses/Solution.java",
    "java/valid-sudoku",
    "java/valid-sudoku/Solution.java",
    "java/validate-binary-search-tree",
    "java/validate-binary-search-tree/Solution.java",
    "java/wiggle-sort",
    "java/wiggle-sort/Solution.java",
    "java/wood-cut",
    "java/wood-cut/Solution.java",
    "java/word-break-ii",
    "java/word-break-ii/Solution.java",
    "java/word-break",
    "java/word-break/Solution.java",
    "java/word-count-map-reduce",
    "java/word-count-map-reduce/Solution.java",
    "java/word-ladder-ii",
    "java/word-ladder-ii/Solution.java",
    "java/word-ladder",
    "java/word-ladder/Solution.java",
    "java/word-search",
    "java/word-search/Solution.java",
    "python",
    "python/the-skyline-problem.py",
    "update.sh"
]
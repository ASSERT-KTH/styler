[
    ".gitignore",
    ".travis.yml",
    "CHANGELOG.md",
    "CODE_OF_CONDUCT.md",
    "CONTRIBUTING.md",
    "LICENSE",
    "NOTICE",
    "README.md",
    "java",
    "java/CHANGELOG.md",
    "java/README.md",
    "java/RELEASING.md",
    "java/build.gradle",
    "java/config",
    "java/config/hooks",
    "java/config/hooks/pre-commit",
    "java/config/hooks/pre-commit-stub",
    "java/gradle.properties",
    "java/gradle",
    "java/gradle/dependencies.gradle",
    "java/gradle/gradle-mvn-push.gradle",
    "java/gradle/wrapper",
    "java/gradle/wrapper/gradle-wrapper.jar",
    "java/gradle/wrapper/gradle-wrapper.properties",
    "java/gradlew",
    "java/gradlew.bat",
    "java/piranha",
    "java/piranha/build.gradle",
    "java/piranha/config",
    "java/piranha/config/fewer-piranha.properties",
    "java/piranha/config/piranha.properties",
    "java/piranha/gradle.properties",
    "java/piranha/src",
    "java/piranha/src/main",
    "java/piranha/src/main/java",
    "java/piranha/src/main/java/com",
    "java/piranha/src/main/java/com/uber",
    "java/piranha/src/main/java/com/uber/piranha",
    "java/piranha/src/main/java/com/uber/piranha/PiranhaUtils.java",
    "java/piranha/src/main/java/com/uber/piranha/UsageCounter.java",
    "java/piranha/src/main/java/com/uber/piranha/XPFlagCleaner.java",
    "java/piranha/src/test",
    "java/piranha/src/test/java",
    "java/piranha/src/test/java/com",
    "java/piranha/src/test/java/com/uber",
    "java/piranha/src/test/java/com/uber/piranha",
    "java/piranha/src/test/java/com/uber/piranha/XPFlagCleanerTest.java",
    "java/piranha/src/test/resources",
    "java/piranha/src/test/resources/com",
    "java/piranha/src/test/resources/com/uber",
    "java/piranha/src/test/resources/com/uber/piranha",
    "java/piranha/src/test/resources/com/uber/piranha/XPFlagCleanerNegativeCases.java",
    "java/piranha/src/test/resources/com/uber/piranha/XPFlagCleanerPositiveCases.java",
    "java/piranha/src/test/resources/com/uber/piranha/XPFlagCleanerPositiveCasesControl.java",
    "java/piranha/src/test/resources/com/uber/piranha/XPFlagCleanerPositiveCasesTreatment.java",
    "java/piranha/src/test/resources/com/uber/piranha/XPTest.java",
    "java/sample",
    "java/sample/build.gradle",
    "java/sample/config",
    "java/sample/config/piranha.properties",
    "java/sample/src",
    "java/sample/src/main",
    "java/sample/src/main/java",
    "java/sample/src/main/java/com",
    "java/sample/src/main/java/com/uber",
    "java/sample/src/main/java/com/uber/mylib",
    "java/sample/src/main/java/com/uber/mylib/MyClass.java",
    "java/sample/src/main/resources",
    "java/sample/src/main/resources/com",
    "java/sample/src/main/resources/com/uber",
    "java/sample/src/main/resources/com/uber/mylib",
    "java/sample/src/main/resources/com/uber/mylib/MyClass.bak",
    "java/sample/src/main/resources/com/uber/mylib/MyClass.expect",
    "java/settings.gradle",
    "objc",
    "objc/README.md",
    "objc/generate-dylib.sh",
    "objc/generate-piranha-artifact.sh",
    "objc/piranha-objc.sh",
    "objc/src",
    "objc/src/XPFlagRefactoring",
    "objc/src/XPFlagRefactoring/CMakeLists.txt",
    "objc/src/XPFlagRefactoring/README.txt",
    "objc/src/XPFlagRefactoring/XPFlagRefactoring.cpp",
    "objc/src/XPFlagRefactoring/XPFlagRefactoring.exports",
    "objc/test.sh",
    "objc/tests",
    "objc/tests/Control.m",
    "objc/tests/Control.m.expected",
    "objc/tests/OptimisticNamed.m",
    "objc/tests/OptimisticNamed.m.expected",
    "objc/tests/OptimisticNamedImpl.m",
    "objc/tests/OptimisticNamedImpl.m.expected",
    "objc/tests/OptimisticNamedOther.m",
    "objc/tests/OptimisticNamedOther.m.expected",
    "objc/tests/Treated.m",
    "objc/tests/Treated.m.expected",
    "report.pdf",
    "swift",
    "swift/Package.swift",
    "swift/README.md",
    "swift/package.sh",
    "swift/piranha.properties",
    "swift/src",
    "swift/src/CleanupStaleFlags",
    "swift/src/CleanupStaleFlags/StaleFlagCleaner.swift",
    "swift/src/CleanupStaleFlags/StaleFlagCleanerLauncher.swift",
    "swift/src/CommandLauncher.swift",
    "swift/src/main.swift",
    "swift/test.sh",
    "swift/tests",
    "swift/tests/control.swift",
    "swift/tests/testfile.swift",
    "swift/tests/treated.swift"
]
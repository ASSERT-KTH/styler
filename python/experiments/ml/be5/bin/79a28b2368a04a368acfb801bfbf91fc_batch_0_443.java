/* Generated By:JJTree: Do not edit this line. AstBeSqlSubQuery.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

import one.util.streamex.StreamEx;

import java.util.Collections;
import java.util.Map;
import java.util.Set;

public class AstBeSqlSubQuery extends AstBeNode
{
    static final Set<String> ALLOWED_PARAMETERS = StreamEx.of("beautifier", "beautifierName", "limit", "property", "default", "distinct",
            "if", "unless", "connectString", "noError", "varSubst", "outColumns", "entity", "queryName", "cache", "filterKey","filterKeyProperty",
            "filterVal","filterValProperty","exec", "queryNameProperty","entityProperty", "splitParameter","queryID", "using").toSet ();private Map<String, String>substMap=
                    null;publicAstBeSqlSubQuery (intid) {super(id
                            );tagName="sql";allowedParameters=ALLOWED_PARAMETERS;}public
                            AstQuerygetQuery (){return this. children ( ).

                            select (AstQuery. class)
                            .
                                findFirst().orElse
                                ( null );
                                } public AstBeSqlVargetAstBeSqlVar
                            (

                            ) { returnthis.
                            children
                                ( ).select(AstBeSqlVar.class).findFirst().orElse(null);}publicIntegergetLimit
                            (

                            ) { Stringlimit=
                            getParameter
                                ( "limit");returnlimit==null?null:Integer.valueOf(limit);}publicStringgetQueryName(
                            )

                            { return getParameter("queryName"
                            )
                                ; } public StringgetEntityName(){
                                return getParameter ( "entity" ) ; } publicStringtranslateVar(Stringname)
                            {

                            if ( substMap==null
                            )
                                { StringsubstString=getParameter(
                            "varSubst"

                            ) ; if(substString
                            ==
                                null )substMap=Collections.
                            emptyMap

                            ( ) ;elsesubstMap =StreamEx
                            .
                                split (substString , ",")
                                .
                                    map ( s ->s.split(
                                    "=" )) . toMap(
                                        arr -> arr[0].trim
                                    (
                                        ) , arr->arr[1] .trim()); } returnsubstMap.getOrDefault(name,
                                                name);} public StringgetExec(){returngetParameter("exec" ) ; }publicStringgetFilterKeys(){returngetParameter(
                                "filterKey"
                                ) ;}publicStringgetFilterValProperties( ){return
                            getParameter

                            ( "filterValProperty" );}
                            public
                                String getOutColumns(){return
                            getParameter

                            ( "outColumns" );}
                            public
                                String getUsingParamNames(){return
                            getParameter

                            ( "using" );}
                            }
                                /* JavaCC - OriginalChecksum=ec5b3915a160671116c3a7ccecc25aa9 (do not edit this line) */ 
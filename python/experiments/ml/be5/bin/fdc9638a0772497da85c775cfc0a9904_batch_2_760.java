/* Generated By:JJTree: Do not edit this line. AstBeSqlSubQuery.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;importone

.util .streamex.StreamEx;importjava.util.Collections;importjava.util

.Map ;importjava.util.Set;publicclassAstBeSqlSubQuery
extends AstBeNode{staticfinalSet<
String >ALLOWED_PARAMETERS=StreamEx.of

( "beautifier" , "beautifierName" ,
"limit"
    , "property" ,"default","distinct" , "if" ,"unless","connectString","noError" ,"varSubst" ,"outColumns" ,"entity" ,"queryName" ,"cache"
            ,"filterKey" ,"filterKeyProperty" ,"filterVal" ,"filterValProperty" ,"exec" ,"queryNameProperty" ,"entityProperty" ,"splitParameter" ,"queryID" ,"using"
            ). toSet( ); privateMap <String ,String >substMap
            =null ;publicAstBeSqlSubQuery(intid)

    { super(id) ;tagName = "sql" ;allowedParameters

    = ALLOWED_PARAMETERS;} publicAstQuery
    getQuery
        (){returnthis
        . children ()
        . select (AstQuery
    .

    class ) .findFirst(
    )
        . orElse(null);}publicAstBeSqlVargetAstBeSqlVar(){returnthis.children().select(AstBeSqlVar
    .

    class ) .findFirst(
    )
        . orElse(null);}publicIntegergetLimit(){Stringlimit=getParameter("limit");returnlimit
    ==

    null ? null:Integer
    .
        valueOf ( limit );}publicString
        getQueryName ( ) { return getParameter ( "queryName");}publicStringgetEntityName
    (

    ) { returngetParameter(
    "entity"
        ) ;}publicStringtranslateVar
    (

    String name ){if
    (
        substMap ==null){String
    substString

    = getParameter ("varSubst") ;if
    (
        substString ==null ) substMap=
        Collections
            . emptyMap ( );elsesubstMap=
            StreamEx .split ( substString,
                "," ) .map(s->s
            .
                split ( "=")).toMap( arr->arr[0] . trim(),arr->arr
                        [1]. trim ());}returnsubstMap.getOrDefault ( name ,name);}publicStringgetExec()
        {
        return getParameter("exec");} publicStringgetFilterKeys
    (

    ) { returngetParameter(
    "filterKey"
        ) ;}publicStringgetFilterValProperties
    (

    ) { returngetParameter(
    "filterValProperty"
        ) ;}publicStringgetOutColumns
    (

    ) { returngetParameter(
    "outColumns"
        ) ;}publicStringgetUsingParamNames
    (

    ) { returngetParameter(
    "using"
        ) ;}}/* JavaCC - OriginalChecksum=ec5b3915a160671116c3a7ccecc25aa9 (do not edit this line) */
/* Generated By:JJTree: Do not edit this line. AstBeSqlSubQuery.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

import one.util.streamex.StreamEx;

import java.util.Collections;
import java.util.Map;
import java.util.Set;

public class AstBeSqlSubQuery extends AstBeNode
{
    static final Set<String> ALLOWED_PARAMETERS = StreamEx.of("beautifier", "beautifierName", "limit", "property", "default", "distinct",
            "if", "unless", "connectString", "noError", "varSubst", "outColumns", "entity", "queryName", "cache", "filterKey",
            "filterKeyProperty", "filterVal", "filterValProperty", "exec", "queryNameProperty", "entityProperty", "splitParameter",
            "queryID", "using").toSet( ); private Map <String

            , String>substMap =null
            ;
                publicAstBeSqlSubQuery(intid
                ) { super(
                id ) ;tagName
            =

            "sql" ; allowedParameters=ALLOWED_PARAMETERS
            ;
                } publicAstQuerygetQuery(){returnthis.children().select(AstQuery.class).findFirst(
            )

            . orElse (null)
            ;
                } publicAstBeSqlVargetAstBeSqlVar(){returnthis.children().select(AstBeSqlVar.class).findFirst(
            )

            . orElse (null)
            ;
                } public Integer getLimit(){String
                limit = getParameter ( "limit" ) ; returnlimit==null?null:
            Integer

            . valueOf (limit)
            ;
                } publicStringgetQueryName()
            {

            return getParameter ("queryName")
            ;
                } publicStringgetEntityName()
            {

            return getParameter ("entity") ;}
            public
                String translateVar( String name)
                {
                    if ( substMap ==null){String
                    substString =getParameter ( "varSubst")
                        ; if (substString==null)substMap
                    =
                        Collections . emptyMap();elsesubstMap =StreamEx.split(substString , ",").map(s->
                                s.split( "=" )).toMap(arr->arr[ 0 ] .trim(),arr->arr[1
                ]
                . trim());} returnsubstMap.
            getOrDefault

            ( name ,name)
            ;
                } publicStringgetExec()
            {

            return getParameter ("exec")
            ;
                } publicStringgetFilterKeys()
            {

            return getParameter ("filterKey")
            ;
                } publicStringgetFilterValProperties()
            {

            return getParameter ("filterValProperty")
            ;
                } publicStringgetOutColumns()
            {

            return getParameter ("outColumns")
            ;
                } publicStringgetUsingParamNames()
            {
        return
        getParameter
        
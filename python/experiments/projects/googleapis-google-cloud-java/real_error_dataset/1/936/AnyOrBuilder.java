// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/any.proto

package com.google.protobuf;

public interface AnyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.protobuf.Any)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string type_url = 1 [ctype = STRING_PIECE];</code>
   *
   * <pre>
   * A URL/resource name whose content describes the type of the
   * serialized message.
   * For URLs which use the schema `http`, `https`, or no schema, the
   * following restrictions and interpretations apply:
   * * If no schema is provided, `https` is assumed.
   * * The last segment of the URL's path must represent the fully
   *   qualified name of the type (as in `path/google.protobuf.Duration`).
   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
   *   value in binary format, or produce an error.
   * * Applications are allowed to cache lookup results based on the
   *   URL, or have them precompiled into a binary to avoid any
   *   lookup. Therefore, binary compatibility needs to be preserved
   *   on changes to types. (Use versioned type names to manage
   *   breaking changes.)
   * Schemas other than `http`, `https` (or the empty schema) might be
   * used with implementation specific semantics.
   * (--GOOGLE_INTERNAL: Types originating from the `google.*` package
   * namespace should use `type.googleapis.com/full.type.name` (without
   * schema and path). A type service will eventually become available which
   * serves those URLs (projected Q2/15). --)
   * </pre>
   */
  java.lang.String getTypeUrl();
  /**
   * <code>optional string type_url = 1 [ctype = STRING_PIECE];</code>
   *
   * <pre>
   * A URL/resource name whose content describes the type of the
   * serialized message.
   * For URLs which use the schema `http`, `https`, or no schema, the
   * following restrictions and interpretations apply:
   * * If no schema is provided, `https` is assumed.
   * * The last segment of the URL's path must represent the fully
   *   qualified name of the type (as in `path/google.protobuf.Duration`).
   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
   *   value in binary format, or produce an error.
   * * Applications are allowed to cache lookup results based on the
   *   URL, or have them precompiled into a binary to avoid any
   *   lookup. Therefore, binary compatibility needs to be preserved
   *   on changes to types. (Use versioned type names to manage
   *   breaking changes.)
   * Schemas other than `http`, `https` (or the empty schema) might be
   * used with implementation specific semantics.
   * (--GOOGLE_INTERNAL: Types originating from the `google.*` package
   * namespace should use `type.googleapis.com/full.type.name` (without
   * schema and path). A type service will eventually become available which
   * serves those URLs (projected Q2/15). --)
   * </pre>
   */
  com.google.protobuf.ByteString
      getTypeUrlBytes();

  /**
   * <code>optional bytes value = 2 [ctype = CORD];</code>
   *
   * <pre>
   * Must be valid serialized data of the above specified type.
   * </pre>
   */
  com.google.protobuf.ByteString getValue();
}

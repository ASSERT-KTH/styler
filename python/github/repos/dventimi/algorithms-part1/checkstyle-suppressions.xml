<?xml version="1.0"?>

<!DOCTYPE suppressions PUBLIC
"-//Puppy Crawl//DTD Suppressions 1.1//EN"
"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd">

<suppressions>

<!--  ***********************************************************************  -->
<!--  STDLIB.JAR EXCEPTIONS                                                    -->
<!--  ***********************************************************************  -->

<suppress checks="ParameterAssignmentCheck"
          files="(Draw|StdDraw).java"/>

<suppress checks="IllegalCatch"
          files="(In|StdDraw|Draw|StdAudio).java"/>

<suppress checks="IllegalType"
          files="(StdDraw|Draw|StdIn|In|Out|StdOut).java"/>

<suppress checks="IllegalToken"
          files="(StdDraw|Draw|DrawListener|StdAudio|.*Picture).java"/>
<suppress checks="IllegalToken"
          files="Binary(Std)?(In|Out).java"/>

<suppress files="StdDraw3D.java" checks="[a-zA-Z0-9]*"/>
<suppress files="StdInTest.java" checks="[a-zA-Z0-9]*"/>


<!--  ***********************************************************************  -->
<!--  ALGS4.JAR EXCEPTIONS                                                     -->
<!--  ***********************************************************************  -->

<!-- phi() and Phi(), which are now deprecated -->
<suppress checks="MethodNameCheck"
          files="(Gaussian|ErrorFunction).java"/>

<suppress checks="EmptyStatement"
          files="(Evaluate|Quick3stringX).java"/>

<!-- median of 3 -->
<suppress checks="AvoidInlineConditionals"
          files="Quick.*.java"/>

<suppress checks="ParameterAssignmentCheck"
          files="(.*BST|UF|MinPQ|MaxPQ|Heap|Heapify|.*TST|Trie.*|StringSET).java"/>

<suppress checks="ParameterAssignmentCheck"
          files="(SuffixArrayMerge|SuffixArrayX|Manber).java"/>

<suppress checks="ParameterNumberCheck"
          files="TraceBentleyMcIlroyPartition.java"/>

<suppress checks="IllegalType"
          files="(IndexMinPQ|IndexMaxPQ|AdjMatrixGraph|AdjMatrixDigraph).java"/>

<suppress checks="IllegalType"
          files="(Autoboxing|MutableInteger|SortCompare|.*Reflection|.*OfInts|.*OfIntegers|Memory.*).java"/>

<suppress checks="IllegalType"
          files="(KendallTau|Inversions|Distinct|SecureShuffle|PermutationInplace).java"/>

<!-- shifting and masking -->
<suppress checks="IllegalToken"
          files="(PatriciaSET|PatriciaST|LSD|MSD|HexDump|OneWay|.*HashST).java"/>

<!-- intentionally buggy program -->
<suppress checks="CovariantEquals"
          files="CovariantPhoneNumber.java"/>

<!-- has a deeply nested loop -->
<suppress checks="NestedForDepth"
          files="EuclideanGraph.java"/>

<!-- more than one statement per line -->
<suppress checks="OneStatementPerLine"
          files="Inversions.java"/>

<!-- more than one statement per line -->
<suppress checks="LineLength"
          files="Inversions.java"/>

<!-- methods named V() and E() -->
<suppress checks="MethodName"
          files="(Digraph|Graph|Network|GraphX).java"/>

<!-- RM for RabinKarp -->
<suppress checks="MemberName"
          files="RabinKarp.java"/>

<!-- Calls Math.random() -->
<suppress checks="RegexpSinglelineJava"
          files="Knuth.java"/>

<!-- Calls Math.pow(x, 0.5) -->
<suppress checks="RegexpSinglelineJava"
          files="Stopwatch(CPU)?.java"/>

<!-- Local variable named H -->
<suppress checks="LocalVariableName"
          files="(GlobalMincut|UniqueMincut|DirectedEulerianPath|DirectedEulerianCycle|BipartiteMatchingToMaxflow).java"/>

<!-- Local variable named F -->
<suppress checks="LocalVariableName"
          files="(Bipartite|BipartiteX|DirectedCycleX|EdgeWeightedDirectedCycle|TopologicalX).java"/>

<!-- parameters named V1 and V2 -->
<suppress checks="ParameterName"
          files="(Digraph|Graph)Generator.java"/>

<!-- method named R(), now deprecated -->
<suppress checks="MethodName"
          files="Alphabet.java"/>

<!-- method named R2() -->
<suppress checks="MethodName"
          files=".*Regression.java"/>

<!-- copy constructor -->
<suppress checks="HiddenField"
          files="(Digraph|Graph|Network|RabinKarp).java"/>


<suppress files="MultiwayMinPQ.java" checks="[a-zA-Z0-9]*"/>
<suppress files="FibonacciMinPQ.java" checks="[a-zA-Z0-9]*"/>
<suppress files="BinomialMinPQ.java" checks="[a-zA-Z0-9]*"/>
<suppress files="FenwickTree.java" checks="[a-zA-Z0-9]*"/>
<suppress files="SegmentTree.java" checks="[a-zA-Z0-9]*"/>
<suppress files="TestLayoutBug.java" checks="[a-zA-Z0-9]*"/>
<suppress files=".*DualPivotQuicksort.*.java" checks="[a-zA-Z0-9]*"/>
<suppress files="BentleyMcIlroyJava6.java" checks="[a-zA-Z0-9]*"/>
<suppress files="Sort[3-6].java" checks="[a-zA-Z0-9]*"/>


<!--  ***********************************************************************  -->
<!--  INTROCS.JAR EXCEPTIONS                                                   -->
<!--  ***********************************************************************  -->

<!-- intentionally misindented program -->
<suppress checks="Indentation" files="Factors2.java"/>

<suppress checks="ParameterNumberCheck"
          files="PlasmaCloud.*.java"/>

<!-- need Double[] to pass as Comparable[] -->
<suppress checks="IllegalType"
          files="InsertionTest.java"/>

<!-- Calls Math.random() -->
<suppress checks="RegexpSinglelineJava"
          files="(CouponCollector|Coupon|Flip|Gambler|RandomInt|RandomSeq|RandomSurfer|Sample|SelfAvoidingWalk|TwentyQuestions).java"/>

<!--  ***********************************************************************  -->
<!--  PROGRAMMING ASSIGNMENT EXCEPTIONS                                        -->
<!--  ***********************************************************************  -->

<suppress files="APIChecker.java" checks="[a-zA-Z0-9]*"/>

<!-- students often use Integer or Double to test for null corner cases -->
<suppress checks="IllegalType"
          files="(Deque|RandomizedQueue).java"/>

<!-- clean implementations can use many parameters -->
<suppress checks="ParameterNumberCheck"
          files="(EnhancedKdTreeST|KdTree|KdTreeST).java"/>

<!-- clean implementations can update champion variable, which is passed as an argument -->
<suppress checks="ParameterAssignmentCheck"
          files="(EnhancedKdTreeST|KdTree|KdTreeST).java"/>

<!-- Calls Math.random() -->
<suppress checks="RegexpSinglelineJava"
          files="(RandomWalker|RandomWalkers|TenDice).java"/>

<!-- disables warning for potentially using ^ as exponentiation operator
     but also disables some other potentially useful warnings -->
<suppress checks="IllegalToken"
          files="(LFSR|PhotoMagic).java"/>

</suppressions>


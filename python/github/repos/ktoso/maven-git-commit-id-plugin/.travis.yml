language: java
sudo: true
dist: trusty

stages:
  - checkstyle
  - test
  - Integration Test

jdk:
  - oraclejdk11
  - oraclejdk10
  - oraclejdk9
  - oraclejdk8

matrix:
  include:
  - stage: Integration Test
    jdk: oraclejdk8
    env: CUSTOM_MVN_VERION="3.0"
  - jdk: oraclejdk8
    env: CUSTOM_MVN_VERION="3.0.5"
  - jdk: oraclejdk8
    env: CUSTOM_MVN_VERION="3.1.1"
  - jdk: oraclejdk8
    env: CUSTOM_MVN_VERION="3.2.5"
  - jdk: oraclejdk8
    env: CUSTOM_MVN_VERION="3.3.9"
  - jdk: oraclejdk9
    env: CUSTOM_MVN_VERION="3.5.0"
  - jdk: oraclejdk9
    env: CUSTOM_MVN_VERION="3.5.4"
  - stage: checkstyle
    jdk: oraclejdk9
    script: mvn clean verify -Pcheckstyle -Dcheckstyle.version=8.2 -Dmaven.test.skip=true -B
    env: CHECKSTYLE=8.2
  - stage: checkstyle
    jdk: oraclejdk8
    script: mvn clean verify -Pcheckstyle -Dmaven.test.skip=true -B
    env: CHECKSTYLE=8.2

install:
  - if [[ -n "${CUSTOM_MVN_VERION}" ]]; then
      echo "Download Maven ${CUSTOM_MVN_VERION}....";
      if [[ "${CUSTOM_MVN_VERION}" == "3.0" ]]; then
        wget https://archive.apache.org/dist/maven/binaries/apache-maven-3.0-bin.zip || travis_terminate 1;
      else
        wget https://archive.apache.org/dist/maven/maven-3/${CUSTOM_MVN_VERION}/binaries/apache-maven-${CUSTOM_MVN_VERION}-bin.zip || travis_terminate 1;
      fi;
      unzip -qq apache-maven-${CUSTOM_MVN_VERION}-bin.zip || travis_terminate 1;
      export M2_HOME=$PWD/apache-maven-${CUSTOM_MVN_VERION};
      export PATH=$M2_HOME/bin:$PATH;
      mvn -version;
    fi

script:
  - mvn clean test install -B
  - mvn clean initialize -Pdemo -Dmaven.test.skip=true -B
  - /bin/bash -c '[[ -f target/testing.properties ]] && cat target/testing.properties || travis_terminate 1;'

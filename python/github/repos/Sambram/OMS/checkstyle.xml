#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
ï»¿<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!--
    Checkstyle rule set to enforce code conventions
-->
<module name="Checker">
    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html${symbol_pound}JavadocPackage -->
    <module name="JavadocPackage">
        <property name="allowLegacy" value="false"/>
    <property name="severity" value="warning"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html${symbol_pound}NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
        <property name="fileExtensions" value="java, xml"/>
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html${symbol_pound}Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="1500"/>
    </module>

    <!-- Check for traling spaces                      -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
       <property name="format" value="(?&lt;!${symbol_escape}*)${symbol_escape}s+${symbol_dollar}|${symbol_escape}*${symbol_escape}s${symbol_escape}s+${symbol_dollar}"/>
       <property name="message" value="Line has trailing spaces."/>
       <property name="fileExtensions" value="java,xml,properties,css,xsd,txt,html,zul"/> <!-- exclude binaries, pictures -->
    </module>

    <!-- Check for System.out and System.err           -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpMultiline">
        <property name="format"
            value="System${symbol_escape}.(out)|(err)${symbol_escape}.print(ln)?${symbol_escape}("/>
        <property name="message" value="Direct output to console it not allowed. Please utilize the loggin API."/>
    </module>

    <!-- Check for System.exit                         -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpMultiline">
        <property name="format"
            value="System${symbol_escape}.exit${symbol_escape}("/>
        <property name="message" value="Call to System.exit is not allowed."/>
    </module>

    <!-- Duplicate code Check                                -->
    <!-- See http://checkstyle.sf.net/config_duplicates.html -->
    <module name="StrictDuplicateCode">
        <property name="min" value="16"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!-- enable possibility to suppress warnings -->
    <module name="SuppressWithNearbyCommentFilter">
        <property name="commentFormat" value="CHECKSTYLE IGNORE (${symbol_escape}w+) NEXT (${symbol_escape}d+)"/>
        <property name="checkFormat" value="${symbol_dollar}1"/>
        <property name="influenceFormat" value="${symbol_dollar}2"/>
    </module>

    <!-- enable supression filter to allow supressions for specific folders -->
    <module name="SuppressionFilter">
        <property name="file" value="${symbol_dollar}{config_loc}/checkstyleSuppressions.xml"/>
    </module>

    <!-- Following interprets the header file as regular expressions. -->
    <module name="RegexpHeader">
        <property name="header" value="/*${symbol_escape}n * ${symbol_escape}[y${symbol_escape}] hybris Platform${symbol_escape}n * ${symbol_escape}n * Copyright ${symbol_escape}(c${symbol_escape}) 2000-2013 hybris AG${symbol_escape}n * All rights reserved.${symbol_escape}n * ${symbol_escape}n * This software is the confidential and proprietary information of hybris${symbol_escape}n * ${symbol_escape}(&quot;Confidential Information&quot;${symbol_escape}). You shall not disclose such Confidential${symbol_escape}n * Information and shall use it only in accordance with the terms of the${symbol_escape}n * license agreement you entered into with hybris.${symbol_escape}n */"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!-- Collection of TreeWalker modules                                                 -->
    <!-- The TreeWalker operates by separately transforming each of the Java source files -->
    <!-- into an abstract syntax tree and then handing the result over to each of its     -->
    <!-- submodules which in turn have a look at certain aspects of the tree.             -->
    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>

        <module name="MissingDeprecated"/>

        <module name="MissingOverride"/>

        <module name="PackageAnnotation"/>

        <!-- enable single line suppression -->
        <module name="FileContentsHolder"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>

        <module name="LeftCurly">
            <property name="maxLineLength" value="120"/>
            <property name="option" value="nl"/>
        </module>

        <module name="NeedBraces"/>

        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <module name="AvoidNestedBlocks"/>
        
        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="VisibilityModifier"/>

        <module name="FinalClass"/>

        <module name="InterfaceIsType"/>

        <module name="HideUtilityClassConstructor"/>

        <module name="MutableException"/>

        <module name="ThrowsCount">
            <property name="max" value="3"/>
        </module>

        <module name="InnerTypeLast"/>

        <module name="CovariantEquals"/>

        <module name="EmptyStatement"/>

        <module name="EqualsAvoidNull"/>

        <module name="EqualsHashCode"/>

        <module name="FinalLocalVariable">
            <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
        </module>

        <module name="HiddenField">
            <property name="ignoreSetter" value="true"/>
            <property name="ignoreConstructorParameter" value="true"/>
        </module>

        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean,java.lang.Integer,java.lang.Character,java.lang.Short,java.lang.Double,java.lang.Float,java.lang.Exception,java.lang.RuntimeException,java.lang.Throwable,java.lang.Error"/>
        </module>

        <module name="IllegalToken">
            <property name="tokens" value="LITERAL_NATIVE"/>
        </module>

        <module name="InnerAssignment"/>

        <module name="MagicNumber"/>

        <module name="MissingSwitchDefault"/>

        <module name="ModifiedControlVariable"/>

        <module name="SimplifyBooleanExpression"/>

        <module name="SimplifyBooleanReturn"/>

        <module name="StringLiteralEquality"/>

        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>

        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>

        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>

        <module name="SuperClone"/>

        <module name="SuperFinalize"/>

        <module name="IllegalCatch"/>

        <module name="IllegalThrows"/>

        <module name="PackageDeclaration"/>

        <module name="DeclarationOrder"/>
        
        <module name="ExplicitInitialization"/>

        <module name="DefaultComesLast"/>

        <module name="FallThrough"/>

        <module name="MultipleStringLiterals">
            <property name="allowedDuplicates" value="3"/>
            <property name="ignoreStringsRegexp" value='^("[&apos; ${symbol_escape}.,]*")${symbol_dollar}'/>
            <property name="ignoreOccurrenceContext" value="ANNOTATION, PLUS"/>
        </module>

        <module name="MultipleVariableDeclarations"/>

        <module name="OneStatementPerLine"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport">
            <property name="severity" value="warning"/>
        </module>

        <module name="AvoidStaticImport">
            <property name="severity" value="warning"/>
        </module>

        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun, sunw"/>
        </module>

        <module name="RedundantImport"/>

        <module name="UnusedImports"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocType">
            <property name="scope" value="public"/>
            <property name="allowUnknownTags" value="true"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowUndeclaredRTE" value="true"/>
            <property name="severity" value="info"/>
        </module>

        <module name="JavadocVariable">
            <property name="severity" value="info"/>
            <property name="scope" value="package"/>
        </module>

        <module name="JavadocStyle">
            <property name="severity" value="warning"/>
            <property name="checkEmptyJavadoc" value="true"/>
        </module>

        <!-- Metrics checks.                   -->
        <!-- See http://checkstyle.sf.net/config_metrics.html -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="5"/>
        </module>

        <module name="ClassDataAbstractionCoupling"/>

        <module name="ClassFanOutComplexity"/>

        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
        </module>

        <module name="NPathComplexity">
            <property name="max" value="150"/>
        </module>

        <module name="JavaNCSS">
            <property name="methodMaximum" value="40"/>
            <property name="classMaximum" value="1000"/>
            <property name="fileMaximum" value="1000"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="TodoComment">
            <property name="format" value="TODO:"/>
            <property name="severity" value="info"/>
        </module>

        <module name="UncommentedMain"/>

        <module name="UpperEll"/>

        <module name="ArrayTypeStyle"/>

        <module name="FinalParameters"/>

        <module name="OuterTypeFilename"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>

        <module name="RedundantModifier"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ClassTypeParameterName"/>

        <module name="ConstantName"/>

        <module name="LocalFinalVariableName"/>

        <module name="LocalVariableName"/>

        <module name="MemberName"/>

        <module name="MethodName"/>

        <module name="MethodTypeParameterName"/>

        <module name="PackageName">    
            <property name="format" value="^[a-z]+(${symbol_escape}.[a-z][a-z0-9]*)*${symbol_dollar}"/>
        </module>

        <module name="ParameterName"/>

        <module name="StaticVariableName"/>

        <module name="TypeName"/>

        <module name="LineLength">
            <property name="max" value="135"/>
        </module>

        <module name="AnonInnerLength">
            <property name="max" value="60"/>
        </module>

        <module name="ParameterNumber"/>

        <module name="OuterTypeNumber"/>

        <module name="MethodCount">
            <property name="maxTotal" value="100"/>
            <property name="maxPublic" value="40"/>
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace"/>

        <module name="EmptyForInitializerPad"/>

        <module name="EmptyForIteratorPad"/>

        <module name="MethodParamPad"/>

        <module name="NoWhitespaceAfter"/>

        <module name="NoWhitespaceBefore"/>

        <module name="TypecastParenPad"/>

        <module name="WhitespaceAfter">
            <property name="tokens" value="TYPECAST"/>
        </module>
    </module>

    <!-- ********************************************************************************* -->
    <!-- ****************************** Excluded modules ********************************* -->
    <!-- ********************************************************************************* -->

    <!--
        <module name="AnnotationUseStyle"/>
    -->

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <!-- TODO - we are using currently tabs to indent all sources 
    	<module name="FileTabCharacter"/>
    -->

    <!--
        <module name="DesignForExtension"/>
    -->

    <!-- pohl: this is not a common practice
        <module name="ArrayTrailingComma"/>
    -->

    <!-- pohl: I don't see a reason why to restrict that
        <module name="AvoidInlineConditionals"/>
    -->

    <!--
        <module name="RedundantThrows">
            <property name="allowUnchecked" value="true"/>
        </module>
    -->

    <!-- ATH: disabled as eclipse is not supporting it anymore
        <module name="DoubleCheckedLocking"/>
    -->

    <!-- pohl: no illegal tokens (yet)
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL"/>
            <property name="format" value="a href"/>
        </module>
    -->

    <!--
        <module name="NoClone"/>
    -->

    <!-- pohl: outdated since latest JUnit version 
        <module name="JUnitTestCase"/>
    -->

    <!-- pohl: no reason for this (complexity is checked elsewhere
        <module name="ReturnCount">
            <property name="max" value="3"/>
        </module>
    -->

    <!-- pohl: see no reason for this
        <module name="IllegalType">
            <property name="ignoredMethodNames" value="getInstance"/>
        </module>
    -->

    <!-- pohl: seldom but sometimes needed:
        <module name="ParameterAssignment"/>
    -->

    <!-- pohl: no need
        <module name="MissingCtor"/>
    -->

    <!-- pbo: removed as decision of architecture community 
        <module name="RequireThis">
        	<property name="severity" value="warning"/>
        </module>
    -->

    <!-- pohl: there no documentation on this one
        <module name="UnnecessaryParentheses"/>
    -->

    <!-- Checks for Headers, replaced by RegexpCheck       -->
    <!-- See http://checkstyle.sf.net/config_header.html
        <module name="Header">
            <property name="headerFile" value="${symbol_dollar}{basedir}/java.header"/>
        </module>
    -->

    <!--
        <module name="ImportOrder">
            <property name="groups" value="/^javax?${symbol_escape}./,org"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="above"/>
        </module>
    -->

    <!--
        <module name="ImportControl">
            <property name="file" value="import-control.xml"/>
        </module>
    -->
    
    <!-- nothing to check there yet
        <module name="WriteTag">
           <property name="tag" value="@author"/>
           <property name="tagFormat" value="${symbol_escape}S"/>
        </module>
    -->

    <!--
        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_SWITCH"/>
            <property name="maximumDepth" value="2"/>
            <property name="limitedTokens" value="LITERAL_DEFAULT"/>
            <property name="minimumNumber" value="1"/>
        </module>
    -->

    <!-- ath: not usable when having tab as indention
        <module name="Indentation">
            <property name="caseIndent" value="0"/>
            <property name="braceAdjustment" value="6"/>
        </module>
    -->

    <!-- pohl: definitely no:
        <module name="TrailingComment"/>
    -->

    <!-- pohl: no need yet:
        <module name="Regexp">
            <property name="format" value="// This code is copyrighted${symbol_escape}n// ${symbol_escape}(c${symbol_escape}) MyCompany"/>
            <property name="message" value="Copyright"/>
        </module>
    -->

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <!-- covered through JavaNCSS:
        <module name="ExecutableStatementCount"/>
    -->

    <!-- covered by JavaNCSS: <module name="MethodLength"/>
        <module name="OperatorWrap"/>
    -->

    <!-- let's not restrict that
        <module name="ParenPad"/>
    -->

    <!-- let's not restrict that
        <module name="WhitespaceAround"/>
    -->
</module>

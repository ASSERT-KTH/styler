<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices
    
    - SALT TBX modifications:
        1. Trailing Whitespace is only checked for lines that don't have
            whitespace.
        2. Trailing Whitespace is not checked on JavaDoc lines that don't have
            non-whitespace.
        2. Block opening brace is on new line.

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->
<module name="Checker">    
    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <!--          -->
    <!-- See http://checkstyle.sourceforge.net/config.html  -->
    <module name="SuppressionFilter">
        <property name="file" value="${checkstyle.suppressions.file}"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="JavadocVariable"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: JavadocVariable OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: JavadocVariable ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="MethodName"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: MethodName OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: MethodName ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="ParameterAssignment"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: ParameterAssignment OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: ParameterAssignment ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="EmptyBlock"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: EmptyBlock OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: EmptyBlock ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="IllegalType"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: IllegalType OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: IllegalType ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="IllegalCatch"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: IllegalCatch OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: IllegalCatch ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="IllegalThrows"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: IllegalThrows OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: IllegalThrows ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="checkFormat" value="MagicNumber"/>
        <property name="offCommentFormat" value="CHECKSTYLE\: MagicNumber OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: MagicNumber ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="messageFormat" value="Redundant throws\: '\w+' is unchecked exception\."/>
        <property name="offCommentFormat" value="CHECKSTYLE\: RedundantThrows unchecked OFF"/>
        <property name="onCommentFormat" value="CHECKSTYLE\: RedundantThrows unchecked ON"/>
    </module>
    <module name="SuppressionCommentFilter">
        <property name="offCommentFormat" value="BEGIN GENERATED CODE"/>
        <property name="onCommentFormat" value="END GENERATED CODE"/>
    </module>
        
    
    <!-- -->
    <module name="TreeWalker">
        <module name="FileContentsHolder"/>
        
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <module name="RegexpHeader">
          <property name="headerFile" value="${checkstyle.header.file}"/>
        </module>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_imports.html -->
        <module name="AvoidStarImport">
           <property name="excludes"
                value="java.io,java.net,java.util,junit.framework,org.junit,org.apache.cactus"/>
        </module>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="FileLength"/>
        <module name="LineLength">
            <property name="max" value="130"/>
            <property name="ignorePattern" value="^ *\* *[^ ]+$"/>
            <property name="ignorePattern" value="^\s+private static final String SCM_ID"/>
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <!-- All of this is to allow "List<String>" to not generate warn -->
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, 
                BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, 
                DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, 
                LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, 
                LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, 
                LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, 
                MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, 
                SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, 
                TYPE_EXTENSION_AND"/>
        </module>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
            <property name="option" value="nl"/>
        </module>
        <!-- <module name="NeedBraces"/> -->
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/> -->
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
        <module name="EmptyStatement">
            <property name="severity" value="warning"/>
        </module>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="severity" value="warning"/>
        </module>
        <module name="IllegalCatch">
            <property name="severity" value="warning"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="IllegalThrows"/>
        <module name="IllegalType"/>
        <module name="InnerAssignment"/>
        <module name="JUnitTestCase"/>
        <module name="MagicNumber"/>
        <module name="MissingCtor"/>
        <module name="MissingSwitchDefault"/>
        <!-- module name="MultipleStringLiterals"/ -->
        <module name="MultipleVariableDeclarations"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RedundantThrows"/>
        <module name="ReturnCount"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessaryParentheses"/>
        

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!-- <module name="FinalParameters"/> -->
        <module name="GenericIllegalRegexp">
            <property name="format" value="[^*\s]\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>
        <module name="TodoComment">
            <property name="severity" value="warning"/>
        </module>
        <module name="TodoComment">
            <property name="format" value="BUGBUG:"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="TodoComment">
            <property name="format" value="OPTIMIZE:"/>
            <property name="severity" value="info"/>
        </module>
        <module name="UpperEll"/>
    </module>
</module>

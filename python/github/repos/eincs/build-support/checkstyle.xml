<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2014 James Lee

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="NewlineAtEndOfFile"/>
    <!-- Unmaintainable Javadoc tags -->
    <module name="RegexpSingleline">
        <property name="format" value="(@(author|version)|\(non-Javadoc\))"/>
        <property name="ignoreCase" value="true"/>
        <property name="message" value="unmaintainable Javadoc tags: @author, @version, or (non-Javadoc)"/>
    </module>
    <module name="FileTabCharacter"/>
    <!-- Force UNIX line separator -->
    <module name="io.netty.build.checkstyle.NewlineCheck"/>
    <!-- Trailing whitespace -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="trailing whitespace"/>
    </module>
    <!-- Prohibit consecutive empty lines (except the lines after package/import) -->
    <module name="RegexpMultiline">
        <property name="format" value="\n *(?!package )(?!import )[^\n]+\n{3,}"/>
        <property name="message" value="two or more consecutive empty lines"/>
    </module>
    <!-- Prohibit an empty after { or before } -->
    <module name="RegexpMultiline">
        <property name="format" value="\n\n\s+\}[^\n]{0,10}\n"/>
        <property name="message" value="an empty line before '}'"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\n\s+[^\n]{1,10}\{\n\n"/>
        <property name="message" value="an empty line after a short line that ends with '{'"/>
    </module>
    <module name="TreeWalker">
        <!-- configure annotations -->
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <!-- configure block checks -->
        <module name="LeftCurly"/>
        <module name="RightCurly"/>
        <module name="NeedBraces"/>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <!-- configure class design -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <!-- confiture coding -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="NoFinalizer"/>
        <module name="SuperFinalize"/>
        <module name="PackageDeclaration"/>
        <module name="DefaultComesLast"/>
        <module name="UnnecessaryParentheses"/>
        <!-- configure imports -->
        <module name="AvoidStarImport"/>
        <module name="RedundantImport"/>
        <!-- configure javadoc -->
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
        </module>
        <!-- configure miscellaneous -->
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="OuterTypeFilename"/>
        <!-- configure modifiers -->
        <module name="ModifierOrder"/>
        <!-- <module name="RedundantModifier"/> -->
        <!-- configure naming conventions -->
        <module name="ConstantName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <!-- configure size violations -->
        <module name="LineLength">
            <property name="max" value="256"/>
        </module>
        <!-- configure whitespaces -->
        <module name="GenericWhitespace"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                                           BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_CATCH,
                                           LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
                                           LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD,
                                           MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
        </module>
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI, TYPECAST"/>
        </module>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
            <property name="allowLineBreaks" value="true"/>
            <property name="severity" value="error"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC"/>
            <property name="allowLineBreaks" value="true"/>
            <property name="severity" value="error"/>
        </module>
    </module>
</module>

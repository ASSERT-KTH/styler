<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker">
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/checkstyle-suppressions.xml"/>
    </module>

    <module name="FileLength"/>
    <module name="FileTabCharacter"/>

    <module name="JavadocPackage">
      <property name="allowLegacy" value="true"/>
    </module>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <!-- No good as it matches the common header comments. -->
    <!-- <module name="StrictDuplicateCode"/> -->

    <!-- <module name="Translation"/> -->

    <module name="TreeWalker">

        <property name="cacheFile" value="${config_loc}/../target/checkstyle.cache"/>
        <property name="tabWidth" value="4"/>

        <!-- <module name="AbstractClassName"/> -->

        <module name="AnnotationUseStyle"/>

        <!-- Aim to reduce non-default maxima over time. -->
        <module name="AnonInnerLength">
          <property name="max" value="45"/>
        </module>

        <module name="ArrayTrailingComma"/>

        <module name="ArrayTypeStyle"/>

        <!-- <module name="AvoidInlineConditionals"/> -->

        <module name="AvoidNestedBlocks"/>

        <module name="AvoidStarImport"/>

        <module name="ClassTypeParameterName"/>

        <module name="ConstantName">
          <property name="format"
              value="^(s_[a-z][a-zA-Z0-9]*)|([A-Z][A-Z0-9_]*)$"/>
        </module>

        <module name="CovariantEquals"/>

        <!-- Doesn't support my preferred "all static, then
        non-static" rule. -->
        <!-- <module name="DeclarationOrder"/> -->

        <module name="DefaultComesLast"/>

        <!-- <module name="DesignForExtension"/> -->

        <module name="DoubleCheckedLocking"/>

        <module name="EmptyBlock">
          <property name="option" value="text"/>
        </module>

        <module name="EmptyForInitializerPad"/>

        <module name="EmptyForIteratorPad"/>

        <module name="EmptyStatement"/>

        <module name="EqualsAvoidNull"/>

        <module name="EqualsHashCode"/>

        <module name="ExecutableStatementCount">
          <property name="max" value="180"/>
        </module>

        <!-- <module name="ExplicitInitialization"/> -->

        <!-- <module name="FallThrough"/> -->

        <module name="FinalClass"/>

        <module name="FinalLocalVariable"/>

        <!-- <module name="FinalParameters"/> -->

        <module name="GenericWhitespace"/>

        <module name="HiddenField"/>

        <!-- <module name="HideUtilityClassConstructor"/> -->

        <!-- May fix code for the following some day. -->
        <!-- <module name="IllegalCatch"/> -->

        <module name="IllegalImport"/>

        <module name="IllegalInstantiation">
          <property name="classes" value="java.lang.Boolean"/>
        </module>

        <module name="IllegalThrows"/>

        <module name="IllegalType">
          <!-- The Linked* types also specify interface. -->
          <property name="illegalClassNames" value="java.util.GregorianCalendar, java.util.Hashtable, java.util.HashSet, java.util.HashMap, java.util.ArrayList, java.util.TreeSet, java.util.TreeMap, java.util.Vector"/>
        </module>

        <!-- Doesn't support sorting by package depth first.
        <module name="ImportOrder">
          <property name="caseSensitive" value="false"/>
          <property name="groups" value="java,javax,org"/>
          <property name="ordered" value="true"/>
          <property name="separated" value="false"/>
        </module>
        -->

        <!-- Not flexible enough to cope with my preferred
        indentation. -->
        <!-- <module name="Indentation">
          <property name="basicOffset" value="2"/>
        </module> -->

        <module name="InnerAssignment"/>

        <!-- <module name="InnerTypeLast"/> -->

        <module name="InterfaceIsType"/>

        <module name="JUnitTestCase"/>

        <module name="JavadocMethod">
          <property name="scope" value="protected"/>
          <property name="allowUndeclaredRTE" value="true"/>
          <property name="allowThrowsTagsForSubclasses" value="true"/>
        </module>

        <module name="JavadocStyle"/>

        <module name="JavadocType">
          <property name="scope" value="package"/>
          <property name="authorFormat" value="\S"/>
        </module>

        <module name="JavadocVariable">
          <property name="scope" value="package"/>
        </module>

        <module name="LeftCurly"/>

        <module name="LineLength">
           <property name="ignorePattern" value="^import|^ *\* *[^ ]+$"/>
        </module>

        <module name="LocalFinalVariableName"/>

        <module name="LocalVariableName"/>

        <!-- <module name="MagicNumber"/> -->

        <module name="MemberName">
          <property name="format" value="^m_[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="MethodCount"/>

        <module name="MethodLength">
          <property name="tokens" value="METHOD_DEF"/>
          <property name="max" value="250"/>
        </module>

        <module name="MethodLength">
          <property name="tokens" value="CTOR_DEF"/>
          <property name="max" value="300"/>
        </module>

        <module name="MethodName"/>

        <module name="MethodParamPad"/>

        <module name="MethodTypeParameterName"/>

        <!-- <module name="MissingCtor"/> -->

        <module name="MissingDeprecated"/>

        <module name="MissingOverride"/>

        <module name="MissingSwitchDefault"/>

        <!-- <module name="ModifiedControlVariable"/> -->

        <module name="ModifierOrder"/>

        <!-- <module name="MultipleStringLiterals"/> -->

        <module name="MultipleVariableDeclarations"/>

        <module name="MutableException"/>

        <module name="NeedBraces"/>

        <module name="NestedForDepth"/>

        <module name="NestedIfDepth">
          <property name="max" value="2"/>
        </module>

        <module name="NestedTryDepth"/>

        <module name="NoClone"/>

        <module name="NoFinalizer"/>

        <module name="NoWhitespaceAfter">
          <property name="tokens"
                    value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
        </module>

        <module name="NoWhitespaceBefore"/>

        <module name="OneStatementPerLine"/>

        <module name="OperatorWrap">
          <property name="option" value="eol"/>
        </module>

        <module name="OuterTypeFilename"/>

        <module name="OuterTypeNumber"/>

        <module name="PackageAnnotation"/>

        <module name="PackageDeclaration"/>

        <module name="PackageName"/>

        <module name="ParameterAssignment"/>

        <module name="ParameterName"/>

        <module name="ParameterNumber">
          <property name="max" value="9"/>
        </module>

        <module name="ParenPad"/>

        <!-- If you import a class, this moans if you also import one of its
             nested classes. -->
        <module name="RedundantImport"/>

        <module name="RedundantModifier"/>

        <!-- <module name="RedundantThrows"/> -->

        <!-- There are currently problems with multi-line headers and
        RegexpHeader. -->
        <!-- <module name="RegexpHeader"> -->
        <!--  <property name="headerFile" value="${basedir}/etc/header.txt"/> -->
        <!-- </module> -->

        <module name="RegexpSinglelineJava">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>

        <!-- <module name="RequireThis"/> -->

        <!-- <module name="ReturnCount"/> -->

        <module name="RightCurly">
          <property name="option" value="alone"/>
        </module>

        <module name="SimplifyBooleanExpression"/>

        <module name="SimplifyBooleanReturn"/>

        <module name="StaticVariableName">
          <property name="format" value="^s_[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="StringLiteralEquality"/>

        <module name="SuperClone"/>

        <module name="SuperFinalize"/>

        <!-- <module name="SuppressWarnings"/> -->

        <!-- <module name="ThrowsCount"/> -->

        <module name="TodoComment">
            <property name="format" value="TODO"/>
        </module>

        <!-- <module name="TrailingComment"/> -->

        <module name="TypeName"/>

        <module name="TypecastParenPad"/>

        <!-- <module name="UncommentedMain"/> -->

        <module name="UnnecessaryParentheses"/>

        <module name="UnusedImports"/>

        <module name="UpperEll"/>

        <module name="VisibilityModifier"/>

        <module name="WhitespaceAfter">
          <property name="tokens" value="COMMA,SEMI"/>
        </module>

        <!-- Removed the following tokens for generic wildcards: QUESTION -->
        <module name="WhitespaceAround">
          <property name="tokens"
                    value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN"/>
        </module>


        <!-- Many things fail these, but sometimes its useful to turn
        on for review. -->
        <!--
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity"/>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>
        -->
    </module>
</module>


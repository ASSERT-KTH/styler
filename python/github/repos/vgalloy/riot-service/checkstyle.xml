<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!-- url : http://checkstyle.sourceforge.net/checks.html                                               -->
<module name="Checker">
    <module name="Translation"/>

    <!-- Checks for Size Violations.                                                                   -->
    <module name="FileLength">
        <property name="max" value="2500"/>
    </module>

    <!-- Checks for whitespace                                                                         -->
    <module name="FileTabCharacter"/>

    <!-- Checks for Regexp                                                                             -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="TreeWalker">
        <!-- Checks no double line                                                                     -->
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
        </module>

        <!-- Checks for one variable declaration per line                                              -->
        <module name="MultipleVariableDeclarations"/>

        <!-- Checks for Javadoc comments.                                                              -->
        <module name="JavadocMethod">
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>
        <module name="JavadocStyle"/>
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>

        <!-- Checks that no method having zero parameters is defined using the name finalize.          -->
        <module name="NoFinalizer"/>

        <!-- To have SuppressionsCommentFilter available                                               -->
        <module name="FileContentsHolder"/>

        <!-- Checks for Naming Conventions.                                                            -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="StaticVariableName"/>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]*$)"/>
            <message key="name.invalidPattern"
                     value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]*$)"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]*$)"/>
            <message key="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="AbstractClassName">
            <property name="format" value="^Abstract.*$"/>
            <property name="ignoreName" value="true"/>
        </module>

        <!-- Checks for imports                                                                        -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="StringLiteralEquality"/>

        <!-- Checks for whitespace                                                                     -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="OneStatementPerLine"/>

        <!-- Checks that each top-level class, interfaces or enum resides in a source file of its own. -->
        <module name="OneTopLevelClass"/>

        <!-- Modifier Checks                                                                           -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s                                                   -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="NeedBraces"/>
        <module name="MissingOverride"/>
        <module name="MissingDeprecated"/>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF"/>
        </module>

        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="IllegalInstantiation"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <module name="InterfaceIsType"/>

        <!-- Miscellaneous other checks.                                                               -->
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>
    </module>
    <!-- Ignore filter-->
    <module name="SuppressionCommentFilter">
        <property name="offCommentFormat" value="BEGIN GENERATED CODE"/>
        <property name="onCommentFormat" value="END GENERATED CODE"/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="conf/suppressions.xml"/>
    </module>
</module>
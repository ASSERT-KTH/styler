<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE module PUBLIC
"-//Puppy Crawl//DTD Check Configuration 1.2//EN"
"http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
	<property name="severity" value="warning" />
	<property name="charset" value="UTF-8" />
	<!-- 配置只检测java文件 -->
	<module name="NewlineAtEndOfFile">
		<property name="fileExtensions" value="java" />
	</module>
	<!-- 检测包下是否有package.html <module name="PackageHtml"> <property name="fileExtensions" 
		value="java,properties" /> </module> -->
	<!-- 重复代码的检查，超过10行就认为重复，UTF-8格式 本检查一定要放在"TreeWalker"节点前， 否则在 Checkclipse中会无法使用。(在ant下可以) 
	<module name="StrictDuplicateCode">
		<property name="min" value="20" />
		 <property name="charset" value="UTF-8" /> </module>
	-->
	
	
	<module name="TreeWalker">
		<!-- javadoc的检查 -->
		<!-- 不许使用与代码同行的注释 -->
		<module name="TrailingComment" />
		<!-- 检查所有的interface和class -->
		<module name="JavadocType" />
		<!-- 检查所有方法的javadoc，可以不声明RuntimeException -->
		<module name="JavadocMethod">
			<property name="allowUndeclaredRTE" value="true" />
		</module>
		<!-- 检查某个变量的javadoc,只检查类成员变量 -->
		<module name="JavadocVariable" />
		<!-- 命名方面的检查，它们都使用了Sun官方定的规则。 -->
		<!-- 包名的检查 ,只能使用全部小写 -->
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
		</module> 
		<!-- 类名(class 或interface) 的检查 -->
		<module name="TypeName" />
		<!-- 变量的检查 -->
		<module name="MemberName" />
		<!-- 方法名的检查 方法首字母小写 -->
		<module name="MethodName" />
		<!-- 方法的参数名 -->
		<module name="ParameterName " />
		<!-- 常量名的检查 ,必须使用大写 -->
		<module name="ConstantName" />
		<!-- 长度方面的检查 -->
		<!-- 文件长度不超过1500行 -->
		<!-- <module name="FileLength"> <property name="max" value="1500" /> </module> -->
		<!-- 每行不超过130个字 
		<module name="LineLength">
			<property name="max" value="130" />
		</module>
		-->
		<!-- 方法不超过300行 -->
		<module name="MethodLength">
			<property name="tokens" value="METHOD_DEF" />
			<property name="max" value="300" />
			<!-- 统计时不计算 //注释和空行 -->
			<property name="countEmpty" value="false" />
		</module>
		<!-- 方法的参数个数不超过4个。 -->
		<module name="ParameterNumber">
			<property name="max" value="4" />
		</module>
		<!-- 多余的关键字 -->
		<module name="RedundantModifier" />
		<!-- 排版检查 -->
		<!-- 不能出现空白区域 
		<module name="EmptyBlock" /> --> 
		<!-- 所有区域都要使用大括号。 -->
		<module name="NeedBraces" />
		<!-- 左大括号是否与代码属于同行 option: 定义左大括号'{'显示位置，eol在同一行显示，nl在下一行显示 -->
		<module name="LeftCurly">
			<property name="option" value="eol" /> 
		</module>
		<!-- 多余的括号 -->
		<module name="AvoidNestedBlocks">
			<property name="allowInSwitchCase" value="true" />
		</module>
		<!-- 编码方面的检查 -->
		<!-- if最多嵌套3层 -->
		<module name="NestedIfDepth">
			<property name="max" value="3" />
		</module>
		<!-- 不许出现空语句 
		<module name="EmptyStatement" />-->
		<!-- 每个类都实现了equals()和hashCode() -->
		<module name="EqualsHashCode" />
		<!-- 不许使用switch <module name="IllegalToken"> <property name="tokens" value="LITERAL_SWITCH" 
			/> </module> -->
		<!-- 检测Switch语句 -->
		<!-- 检测default是否在最后 -->
		<module name="DefaultComesLast" />
		<!-- 检测switch中case中是否有结束语句 如:break、return -->
		<module name="FallThrough" />
		<!-- 不许内部赋值 -->
		<module name="InnerAssignment" />
		<!-- 绝对不能容忍魔法数 -->
		<module name="MagicNumber" />
		<!-- 循环控制变量不能被修改 -->
		<module name="ModifiedControlVariable" />
		<!-- 多余的throw 
		<module name="RedundantThrows" />
		-->
		<!-- 检查throw的数量 -->
		<module name="ThrowsCount">
			<property name="max" value="3" />
		</module>
		<!-- 检查是否抛出了未声明的异常 -->
		<module name="IllegalThrows" />
		<!-- 不能catch java.lang.Exception -->
		<module name="IllegalCatch">
			<property name="illegalClassNames" value="java.lang.Exception" />
		</module>
		<!-- 不许使用未被简化的条件表达式 -->
		<module name="SimplifyBooleanExpression" />
		<!-- 不许使用未被简化的布尔返回值 -->
		<module name="SimplifyBooleanReturn" />
		<!-- String的比较不能用!= 和 == -->
		<module name="StringLiteralEquality" />

		<!-- try最多被嵌套3层 -->
		<module name="NestedTryDepth">
			<property name="max" value="3" />
		</module>
		<!-- clone方法必须调用了super.clone() -->
		<module name="SuperClone" />
		<!-- finalize 必须调用了super.finalize() -->
		<module name="SuperFinalize" />
		<!-- JUnitTestCase 的核心方法存在。
		<module name="JUnitTestCase" />
		 -->
		<!-- 一个方法中最多有3个return -->
		<module name="ReturnCount">
			<property name="max" value="3" />
		</module>
		<!-- 不许对方法的参数赋值 -->
		<module name="ParameterAssignment" />
		<!-- 不许有同样内容的String -->
		<module name="MultipleStringLiterals" />
		<!-- 同一行不能有多个声明 -->
		<module name="MultipleVariableDeclarations" />
		<!-- 各种量度 -->
		<!-- 布尔表达式的复杂度，不超过3 -->
		<module name="BooleanExpressionComplexity" />
		<!-- 类数据的抽象耦合，不超过7 -->
		<module name="ClassDataAbstractionCoupling" />
		<!-- 类的分散复杂度，不超过20 -->
		<module name="ClassFanOutComplexity" />
		<!-- 函数的分支复杂度，不超过10 -->
		<module name="CyclomaticComplexity" />
		<!-- NPath复杂度，不超过200 -->
		<module name="NPathComplexity" />
		<!-- 检查数组定义的样式 -->
		<module name="ArrayTypeStyle">
			<property name="javaStyle" value="true" />
		</module>
	</module>

</module>


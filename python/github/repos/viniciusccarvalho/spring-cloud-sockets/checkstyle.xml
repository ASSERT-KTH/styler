<?xml version="1.0"?>
<!--
  ~  Copyright 2017 original author or authors.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
    <!-- Root Checks -->
    <module name="RegexpHeader">
        <property name="headerFile" value="${checkstyle.header.file}"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="TreeWalker">

        <!-- Annotations -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact"/>
        </module>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation"
                      value="false"/>
        </module>

        <!-- Block Checks -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <!--
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>
        <module name="NeedBraces"/>
        <module name="AvoidNestedBlocks"/>
        -->

        <!-- tabs instead of spaces -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t* "/>
            <property name="message" value="Indent must use tab characters"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <!-- Class Design -->
        <!--
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="InnerTypeLast"/>
        <module name="OneTopLevelClass"/>
        -->

        <!-- Coding -->
        <!--
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="RequireThis">
            <property name="checkMethods" value="false"/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="ExplicitInitialization"/>

        <module name="ParameterAssignment"/>
        -->
        <!-- Imports -->

        <module name="FallThrough"/>
        <module name="ImportOrder">
            <property name="groups" value="java,/^javax?\./,*,org.springframework"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="bottom"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>
        <module name="IllegalImport">
            <!--<property name="illegalPkgs" value="org.slf4j"/>-->
        </module>
        <module name="RedundantImport"/>
        <module name="ReturnCount">
            <property name="max" value="1"/>
            <property name="tokens" value="LAMBDA"/>
        </module>
        <module name="ReturnCount">
            <property name="max" value="1"/>
            <property name="tokens" value="CTOR_DEF"/>
        </module>

        <!--
        <module name="ReturnCount">
            <property name="max" value="3"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>
        -->
        <module name="UnusedImports"/>

        <!-- Miscellaneous -->
        <module name="CommentsIndentation"/>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="OuterTypeFilename"/>

        <!-- Modifiers -->
        <module name="RedundantModifier"/>

        <!-- Regexp -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t* +\t*\S"/>
            <property name="message"
                      value="Line has leading space characters; indentation should be performed with tabs only."/>
            <property name="ignoreComments" value="true"/>
        </module>
        <!--
        <module name="Regexp">
            <property name="format" value="[ \t]+$"/>
            <property name="illegalPattern" value="true"/>
            <property name="message" value="Trailing whitespace"/>
        </module>

        <module name="RegexpSinglelineJava">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.junit\.Assert\.assert"/>
            <property name="message"
                      value="Please use AssertJ imports."/>
            <property name="ignoreComments" value="true"/>
        </module>
        -->

        <!-- Whitespace -->
        <!--
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        -->
    </module>
</module>

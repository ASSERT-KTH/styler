<?xml version="1.0" encoding="utf-8"?>
<!--
 - Copyright (C) 2013 Code-House, Lukasz Dywicki.
 -
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -
 -     http://www.apache.org/licenses/LICENSE-2.0
 -
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
 -->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
    <property name="severity" value="warning" />
    <property name="charset" value="UTF-8" />

     <!-- Checks for Headers                                -->
     <!-- See http://checkstyle.sf.net/config_header.html   -->
     <!-- <module name="Header">                            -->
     <!-- The follow property value demonstrates the ability     -->
     <!-- to have access to ANT properties. In this case it uses -->
     <!-- the ${basedir} property to allow Checkstyle to be run  -->
     <!-- from any directory within a project. See property      -->
     <!-- expansion,                                             -->
     <!-- http://checkstyle.sf.net/config.html#properties        -->
     <!-- <property                                              -->
     <!--     name="headerFile"                                  -->
     <!--     value="${basedir}/java.header"/>                   -->
     <!-- </module> -->
     <!-- Following interprets the header file as regular expressions. -->
     <!-- <module name="RegexpHeader"/>                                -->
     <module name="RegexpHeader">
        <property name="severity" value="error" />
        <property name="fileExtensions" value="java,properties" />
        <property name="headerFile" value="${checkstyle.header.file}" />
     </module>

     <!-- Checks for Size Violations.                    -->
     <!-- See http://checkstyle.sf.net/config_sizes.html -->
     <module name="FileLength" />

    <module name="FileTabCharacterCheck">
        <property name="severity" value="warning" />
    </module>

    <module name="FileTabCharacterCheck">
        <property name="severity" value="warning" />
    </module>

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <!-- <module name="PackageHtml"/>  -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="severity" value="info" />
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation" />

    <module name="TreeWalker">
        <property name="tabWidth" value="4" />
        <property name="fileExtensions" value="java" />

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
            <property name="logLoadErrors" value="true" />
            <property name="suppressLoadErrors" value="true" />
        </module>

        <module name="JavadocType" />
        <module name="JavadocVariable" />
        <module name="JavadocStyle" />

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName">
            <property name="format" value="^(?:test_[a-z][a-z0-9_]+|[^test][a-z][a-zA-Z0-9]*[^A-Z])$"/>
        </module>
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport" /><!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <module name="LineLength">
            <property name="max" value="160" />
        </module>

        <module name="AnnotationUseStyle" />
        <module name="MethodLength" />
        <module name="ParameterNumber" />
        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />
        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />
        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock" />
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />
        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals" />  -->
        <module name="DoubleCheckedLocking" /><!-- MY FAVOURITE -->
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <module name="HiddenField">
            <property name="severity" value="info"/>
        </module>
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment" />
        <module name="MagicNumber">
            <property name="severity" value="info"/>
        </module>
        <module name="MissingSwitchDefault" />
        <module name="RedundantThrows">
            <property name="logLoadErrors" value="true" />
            <property name="suppressLoadErrors" value="true" />
        </module>
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->

        <!-- We know what we do -->
        <module name="DesignForExtension">
            <property name="severity" value="info"/>
        </module>
        <module name="FinalClass">
            <property name="severity" value="info"/>
        </module>
        <module name="HideUtilityClassConstructor">
            <property name="severity" value="info"/>
        </module>
        <module name="InterfaceIsType">
            <property name="severity" value="info"/>
        </module>
        <module name="VisibilityModifier">
            <property name="severity" value="info"/>
        </module>
        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <module name="FinalParameters">
            <property name="severity" value="info"/>
        </module>
        <module name="TodoComment">
            <property name="severity" value="ignore" />
        </module>
        <module name="UpperEll" />

        <!-- Generic illegal practices -->
        <module name="RegexpSinglelineJava">
            <property name="severity" value="ignore" />
            <!-- Poprawiony regexp - wyklucza javadoc -->
            <property name="ignoreComments" value="true"/>
            <property name="format" value="\s+$" />
            <property name="message" value="Line has trailing spaces." />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="severity" value="info" />
            <property name="format" value="System\.out\.print*" />
            <property name="ignoreComments" value="true" />
            <property name="message" value="Are you sure that you don't need use logging library here?" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="severity" value="error" />
            <property name="format" value="System\.exit" />
            <property name="ignoreComments" value="true" />
            <property name="message" value="Stopping Virtual Machine by calling exit is illegal." />
        </module>
    </module>

    <module name="SuppressionCommentFilter" />
</module>

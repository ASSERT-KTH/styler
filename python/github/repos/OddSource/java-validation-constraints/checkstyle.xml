<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE module PUBLIC
		"-//Puppy Crawl//DTD Check Configuration 1.1//EN"
		"http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
<module name="Checker">

	<module name="SuppressionFilter">
		<property name="file" value="${basedir}/build/checkstyle-suppression.xml"/>
	</module>

	<!-- Checks that a package.html file exists for each package.     -->
	<module name="JavadocPackage"/>

	<module name="NewlineAtEndOfFile">
		<property name="lineSeparator" value="lf"/>
	</module>

	<module name="RegexpHeader">
		<property name="headerFile" value="${basedir}/build/checkstyle-header-java.txt"/>
		<property name="fileExtensions" value="java"/>
	</module>

	<module name="RegexpHeader">
		<property name="headerFile" value="${basedir}/build/checkstyle-header-xml.txt"/>
		<property name="fileExtensions" value="xml"/>
	</module>

	<!-- Checks for white space at the end of the line -->
	<module name="RegexpSingleline">
		<property name="format" value="(?&lt;!\A[ \t]*\*?)[ \t]$" />
		<property name="message" value="Line has trailing spaces." />
		<property name="fileExtensions" value="java,xml,properties" />
	</module>

	<!-- Checks to make sure source uses tabs, not spaces -->
	<module name="RegexpSingleline">
		<property name="format" value="^\s*?    \s*?" />
		<property name="message" value="Line uses spaces instead of tabs." />
		<property name="fileExtensions" value="java,xml,properties" />
	</module>

	<module name="TreeWalker">

		<property name="tabWidth" value="4" />
		<property name="cacheFile" value="${checkstyle.cache.file}"/>

		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
			<property name="scope" value="public"/>
			<property name="allowUndeclaredRTE" value="true"/>
			<property name="allowMissingJavadoc" value="true"/>
		</module>
		<module name="JavadocType">
			<!-- <property name="authorFormat" value="null"/> -->
			<!-- It is unfortunate to have to do this but checkstyle doesn't allow custom tags -->
			<property name="allowUnknownTags" value="true"/>
		</module>
		<module name="JavadocVariable">
			<property name="scope" value="protected"/>
		</module>
		<module name="JavadocStyle">
			<property name="scope" value="public"/>
			<!-- the checkHtml check is disabled as it generates incorrect errors -->
			<property name="checkHtml" value="false"/>
		</module>

		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName">
			<property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|^capabilities$|^log$"/>
		</module>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>

		<!-- Following interprets the header file as regular expressions. -->
		<!-- <module name="RegexpHeader"/>                                -->

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport">
			<property name="allowStaticMemberImports" value="true"/>
		</module>
		<module name="IllegalImport"/><!-- defaults to sun.* packages -->
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<module name="ImportControl">
			<property name="severity" value="error"/>
			<property name="file" value="${basedir}/build/checkstyle-import-control.xml"/>
		</module>
		<module name="ImportOrder">
			<!-- Imports must be separated (by one newline) into the following groups:
					 java and javax
					 org
					 com
					 all others
				 Imports within a group must be sorted alphabetically (lexicographically)
				 All static imports come below all other imports -->
			<property name="groups" value="/^javax?\./,org,com"/>
			<property name="ordered" value="true"/>
			<property name="caseSensitive" value="true"/>
			<property name="separated" value="true"/>
			<property name="option" value="bottom"/>
		</module>

		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<!--<module name="FileLength"/>-->
		<module name="LineLength">
			<property name="max" value="120"/>
		</module>
		<module name="MethodLength"/>
		<module name="ParameterNumber">
			<property name="max" value="8"/>
		</module>

		<!-- Checks for whitespace                               -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad"/>
		<module name="NoWhitespaceAfter"/>
		<module name="NoWhitespaceBefore"/>
		<module name="OperatorWrap">
			<property name="tokens" value="ASSIGN"/>
			<property name="option" value="eol"/>
		</module>
		<module name="ParenPad"/>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="tokens"
					  value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_RETURN,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND" />
		</module>
		<module name="GenericWhitespace"/>

		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>

		<!-- Require empty catch blocks to have at least a comment -->
		<module name="EmptyBlock">
			<property name="option" value="text"/>
		</module>
		<module name="NeedBraces"/>
		<module name="LeftCurly">
			<property name="option" value="nl"/>
		</module>
		<module name="RightCurly">
			<property name="option" value="alone"/>
		</module>

		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<module name="CovariantEquals"/>
		<module name="EqualsHashCode"/>
		<module name="IllegalInstantiation"/>
		<!-- <module name="InnerAssignment"/> -->
		<module name="MagicNumber">
			<property name="ignoreNumbers" value="-1,0,1,2,3,4,5,6,7"/>
		</module>
		<module name="RedundantThrows">
			<property name="allowUnchecked" value="true"/>
		</module>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="SuperClone"/>
		<module name="SuperFinalize"/>
		<module name="DeclarationOrder"/>
		<!-- <module name="ExplicitInitialization"/> -->
		<module name="DefaultComesLast"/>
		<module name="FallThrough"/>
		<module name="MultipleVariableDeclarations"/>
		<!-- <module name="UnnecessaryParentheses"/> -->

		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<module name="FinalClass"/>
		<module name="HideUtilityClassConstructor"/>
		<module name="InterfaceIsType"/>
		<module name="VisibilityModifier">
			<property name="protectedAllowed" value="true"/>
		</module>

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle"/>
		<module name="TodoComment">
			<property name="severity" value="info"/>
		</module>
		<module name="UpperEll"/>

	</module>

</module>
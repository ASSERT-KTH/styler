<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<!-- Checkstyle configuration that checks the sun coding conventions from:
- the Java Language Specification at http://java.sun.com/docs/books/115/second edition/html/index.html - the Sun Code Conventions at http://java.sun.com/docs/codeconv/ - the Javadoc guidelines at http://java.sun.com/j2se/javadoc/writingdoccomments/index.html - the JDK Api documentation http://java.sun.com/12se/docs/api/index.html - some best practices Checkstyle is very configurable. Be sure to read the documentation at http://checkstyle.3f.net (or in your downloaded distribution). Most Checks are configurable, be sure to consult the documentation. To completely disable a check, just comment it out or delete it from the file. Finally, it is worth reading the documentation. -->
<module name="Checker">
    <!-- If you get the basedir property below, then all reported file names
will be relative to the specified directory. See http://checkstyle.sourceforge.net/5.x/config.html#Checker <property name="basedir" value="${basedir}"/> -->
    <!-- Checks that each Java package has a Javadoc file used for commenting. -->
    <!-- See http://checkstyle.3f.net/config javadoc.html#Javadoc Package <module
name="Javadoc Package"> <property name="allowLegacy" value="true"/> </module> -->

    <!-- Checks whether files end with a new line. -->
    <!-- See http://checkstyle.sf.net/config misc.html #NewlineAtEndofFile -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>
    <!-- Checks that property files contain the same keys. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <!-- PROBABLY USEFUL -->
    <!-- <module name="Translation" /> -->
    <module name="FileLength"/>

    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module name="RegexpHeader"/> -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- <module name="RegexpSingleline"> -->
    <!-- \s matches whitespace character, $ matches end of line. -->
    <!-- <property name="format" value="\s+$"/>-->
    <!-- <property name="message" value="Line has trailing spaces."/>-->
    <!-- </module> -->

    <module name="TreeWalker">
        <property name="cacheFile" value="${checkstyle.cache.file}"/>
        <!-- Checks for Javadoc comments. -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <!-- <module name="JavadocVariable"/> -->
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
        </module>

        <!-- Checks for Naming Conventions. -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Headers -->
        <!-- See http://checkstyle.sf.net/config_header.html -->
        <!-- <module name="Header"> -->
        <!-- The follow property value demonstrates the ability -->
        <!-- to have access to ANT properties. In this case it uses -->
        <!-- the ${basedir) property to allow Checkstyle to be run -->
        <!-- from any directory within a project. See property -->
        <!-- expansion, -->
        <!-- http://checkstyle.sf.net/config.html#properties -->
        <!-- <property -->
        <!-- name="headerFile" -->
        <!-- value="${basedir}/java.header"/> -->
        <!-- </module> -->

        <!-- Checks for imports -->
        <!-- See http://checkstyle.3f.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>

        <!-- Checks for Size Violations. -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="150"/>
            <property name="ignorePattern" value="^(import).*$"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="60"/>
        </module>
        <module name="ParameterNumber">
            <property name="max" value="10"/>
        </module>

        <!-- Checks for whitespace -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/> -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <!-- <module name="HiddenField"/> -->
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <!-- <module name="MagicNumber" /> -->
        <module name="MissingSwitchDefault"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <module name="FinalClass"/>
        <!-- This could be useful but spring boot archicture does not comply with this. Nothing to do here. -->
        <!-- <module name="HideUtilityClass Constructor" /> -->
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Miscellaneous other checks. -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="TodoComment">
            <property name="format" value="WARNING"/>
        </module>
        <module name="UpperEll"/>

        <!--Commented to avoid @equals and @hashcode warning-->
        <module name="CyclomaticComplexity">
            <property name="max" value="12"/>
        </module>
    </module>
</module>

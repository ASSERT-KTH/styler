{"name": "spring-cloud/spring-cloud-stream-samples", "id": 52093316, "created_at": "2016-02-19 14:32:27", "watchers_count": 394, "stargazers_count": 394, "forks_count": 350, "updated_at": "2019-10-09 19:17:52", "pushed_at": "2019-10-01 21:30:58", "fetched_at": "2019-10-09 19:53:52", "files": ["schema-registry-samples/schema-registry-confluent-avro-serializer/pom.xml", "kafka-streams-samples/kafka-streams-word-count/pom.xml", "multibinder-samples/multibinder-kafka-streams/pom.xml", "multibinder-samples/multibinder-two-kafka-clusters/pom.xml", "kafka-e2e-kotlin-sample/pom.xml", "pom.xml", "kafka-streams-samples/kafka-streams-aggregate/pom.xml", "kafka-streams-samples/kafka-streams-branching/pom.xml", "kafka-streams-samples/kafka-streams-dlq-sample/pom.xml", "kafka-streams-samples/kafka-streams-global-table-join/pom.xml", "kafka-streams-samples/kafka-streams-interactive-query-basic/pom.xml", "kafka-streams-samples/kafka-streams-message-channel/pom.xml", "kafka-streams-samples/kafka-streams-product-tracker/pom.xml", "kafka-streams-samples/kafka-streams-table-join/pom.xml", "kafka-streams-samples/kafka-streams-to-rabbitmq-message-channel/pom.xml", "kafka-streams-samples/pom.xml", "kinesis-samples/kinesis-produce-consume/pom.xml", "kinesis-samples/kinesis-to-webflux/pom.xml", "kinesis-samples/pom.xml", "multi-io-samples/multi-io/pom.xml", "multi-io-samples/pom.xml", "multibinder-samples/kafka-multibinder-jaas/pom.xml", "multibinder-samples/multibinder-kafka-rabbit/pom.xml", "multibinder-samples/pom.xml", "partitioning-samples/partitioning-consumer-sample-kafka/pom.xml", "partitioning-samples/partitioning-consumer-sample-rabbit/pom.xml", "partitioning-samples/partitioning-producer-sample/pom.xml", "partitioning-samples/pom.xml", "processor-samples/polled-consumer/pom.xml", "processor-samples/pom.xml", "processor-samples/reactive-processor/pom.xml", "processor-samples/sensor-average-reactive/pom.xml", "processor-samples/streamlistener-basic/pom.xml", "processor-samples/uppercase-transformer/pom.xml", "samples-e2e-tests/pom.xml", "schema-registry-samples/kafka-streams-schema-evolution/pom.xml", "schema-registry-samples/schema-registry-confluent/pom.xml", "sink-samples/jdbc-sink/pom.xml", "sink-samples/pom.xml", "source-samples/dynamic-destination-source/pom.xml", "source-samples/jdbc-source/pom.xml", "source-samples/pom.xml", "testing-samples/pom.xml", "testing-samples/test-embedded-kafka/pom.xml", "testing-samples/testing-demo/pom.xml", "transaction-kafka-samples/pom.xml", "transaction-kafka-samples/transaction-logger-sink/pom.xml", "transaction-kafka-samples/transaction-spring-data-processor/pom.xml", "schema-registry-samples/kafka-streams-schema-evolution/custom-confluent-producer1/pom.xml", "schema-registry-samples/kafka-streams-schema-evolution/kafka-streams-confluent-consumer/pom.xml", "schema-registry-samples/kafka-streams-schema-evolution/custom-confluent-producer2/pom.xml", "schema-registry-samples/pom.xml", "schema-registry-samples/schema-registry-vanilla-kafka-binder/kafka-streams-consumer/pom.xml", "schema-registry-samples/schema-registry-vanilla-kafka-binder/pom.xml", "schema-registry-samples/schema-registry-vanilla-kafka-binder/schema-registry-vanilla-consumer-kafka/pom.xml", "schema-registry-samples/schema-registry-vanilla-kafka-binder/schema-registry-vanilla-producer1-kafka/pom.xml", "schema-registry-samples/schema-registry-vanilla-kafka-binder/schema-registry-vanilla-producer2-kafka/pom.xml", "schema-registry-samples/schema-registry-vanilla-rabbit-binder/pom.xml", "schema-registry-samples/schema-registry-vanilla-rabbit-binder/schema-registry-vanilla-consumer-rabbit/pom.xml", "schema-registry-samples/schema-registry-vanilla-rabbit-binder/schema-registry-vanilla-producer1-rabbit/pom.xml", "schema-registry-samples/schema-registry-vanilla-rabbit-binder/schema-registry-vanilla-producer2-rabbit/pom.xml", "schema-registry-samples/schema-registry-confluent/schema-registry-confluent-consumer/pom.xml", "schema-registry-samples/schema-registry-confluent/schema-registry-confluent-producer1/pom.xml", "schema-registry-samples/schema-registry-confluent/schema-registry-confluent-producer2/pom.xml", "transaction-kafka-samples/transaction-http-source/pom.xml", "schema-registry-samples/schema-registry-confluent-avro-serializer/schema-registry-confluent-avro-serializer-consumer/pom.xml", "schema-registry-samples/schema-registry-confluent-avro-serializer/schema-registry-confluent-avro-serializer-producer1/pom.xml", "schema-registry-samples/schema-registry-confluent-avro-serializer/schema-registry-confluent-avro-serializer-producer2/pom.xml", "kafka-streams-samples/kafka-streams-interactive-query-advanced/pom.xml", "kafka-e2e-kotlin-sample/customer-service/pom.xml", "kafka-e2e-kotlin-sample/order-service/pom.xml", "kafka-e2e-kotlin-sample/shipping-service/pom.xml"]}
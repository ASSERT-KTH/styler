{"name": "suyash248/spring_framework", "id": 28782420, "created_at": "2015-01-04 18:35:49", "watchers_count": 34, "stargazers_count": 34, "forks_count": 32, "updated_at": "2019-09-06 08:59:32", "pushed_at": "2015-12-26 21:12:48", "fetched_at": "2019-10-10 10:44:17", "files": ["Spring AOP/AOP annotations/PROXY - How does AOP works/Custom proxies/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/1. Using DataSource Directly/1. Using DriverManagerDataSource/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/1. Using DataSource Directly/2. Using SingleConnectionDataSource/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/1. Using DataSource Directly/3. Using a datasource that facilitates connection pooling/1. Using DBCP datasource(Connection Pooling)/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/2. Using Templates/1. JdbcTemplace/select operation/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/1. Using DataSource Directly/3. Using a datasource that facilitates connection pooling/2. Using c3p0 datasource(Connection Pooling)/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/2. Using Templates/1. JdbcTemplace/write operations & create table/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/2. Using Templates/2. NamedParameterJdbcTemplace/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/2. Using Templates/RowMapper/In case of list of modal objects/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/2. Using Templates/RowMapper/In case of modal object/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/3. Using DAO support classes/1. Using JdbcDaoSupport class/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With JDBC/3. Using DAO support classes/2. Using NamedParameterJdbcDaoSupport class/mavenSpringJavaDemo/pom.xml", "Spring DAO & Integration/Spring With ORM/Spring With Hibernate/1. Using Hibernate Contextual Session & without using HibernateTemplate (Using Annotations)/mavenSpringJavaDemo/pom.xml", "Spring Transaction Managament/1. Managing Transactions Programatically/1. Using 'Transaction Manager' directly/Transaction Management in Hibernate/springTransactions/pom.xml", "Spring Transaction Managament/1. Managing Transactions Programatically/1. Using 'Transaction Manager' directly/Transaction Management in JDBC/springTransactions/pom.xml", "Spring Transaction Managament/1. Managing Transactions Programatically/2. Using 'TransactionTemplate'/Transaction Management in Hibernate/springTransactions/pom.xml", "Spring Transaction Managament/2. Managing Transactions Declaratively/Managing Transactions in Hibernate/using Annotations/springTransactions/pom.xml", "Spring Transaction Managament/2. Managing Transactions Declaratively/Managing Transactions in Hibernate/using XML/springTransactions/pom.xml"]}